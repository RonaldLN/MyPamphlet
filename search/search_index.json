{"config":{"lang":["ja","en"],"separator":"[\\u200b\\u3000\\-\u3001\u3002\uff0c\uff0e\uff1f\uff01\uff1b\\s\\-,:!=\\[\\]()\"/]+|(?!\\b)(?=[A-Z][a-z])|\\.(?!\\d)|&[lg]t;","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to My Pamphlet","text":"<p> \u7ea6 4 \u4e2a\u5b57 </p> <p></p>"},{"location":"blog/","title":"Blog","text":"<p> \u7ea6 5 \u4e2a\u5b57 </p> <p>Enter the Blog</p>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part1/","title":"CS61A Part 1","text":"<p> \u7ea6 19148 \u4e2a\u5b57  1099 \u884c\u4ee3\u7801  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 78 \u5206\u949f</p> <p>Info</p> <p>CS 61A Fall 2020 (berkeley.edu)</p> <p>Tip</p> <p>\u505a\u5b8c\u7684\u4f5c\u4e1a\u7684\u4ee3\u7801:</p> <ul> <li>https://github.com/RonaldLN/CS-61A-Fall-2020</li> <li>https://gitee.com/ronald-luo/CS-61A-Fall-2020</li> </ul> \u76ee\u5f55 Part 1 Part 2 Part 3 Lab 00 Lecture 18 Objects Lecture 31 Declarative Programming Lecture 2 Functions Lecture 18 Q&amp;A Lecture 32 Tables Lecture 2 Q&amp;A HW 04 Lecture 32 Q&amp;A HW 01 Lecture 19 Inheritance Lab 12 Homework 1 Hints Lecture 19 Q&amp;A Lecture 33 Aggregation Lecture 3 Control Lab 07 Lecture 33 Q&amp;A Lecture 3 Q&amp;A Project Ants Lecture 34 Database Lecture 4 Higher-Order Functions Lecture 20 Representation Lecture 34 Q&amp;A Project Hog Lecture 20 Q&amp;A HW 09 Lecture 5 Environments Lecture 21 Composition Lecture 35 Tail Calls Lecture 6 Design HW 05 Lab 13 Lecture 6 Q&amp;A Lecture 22 Efficiency Lecture 36 Macros Lecture 7 Function Examples Lab 08 Lab 14 Lecture 7 Q&amp;A Lecture 23 Decomposition Lecture 36 Q&amp;A HW 02 Lecture 23 Q&amp;A Lecture 37 Final Examples Lecture 10 Containers Lecture 24 Data Example Lecture 37 Q&amp;A Lecture 10 Q&amp;A Lecture 24 Q&amp;A Lecture 38 Conclusion Lab 04 Lab 09 Lecture 11 Data Abstraction Lecture 25 Users Lecture 11 Q&amp;A Lecture 25 Q&amp;A Project Cats Lecture 26 Ethical AI &amp; Data Lecture 12 Trees Lecture 27 Scheme Lecture 12 Q&amp;A Lecture 27  Q&amp;A Lab 05 Lab 10 Lecture 13 Q&amp;A HW 06 Lecture 14 Circuits Lecture 28 Exception Lecture 14 Q&amp;A Lecture 28 Q&amp;A Lecture 15 Mutable Values Lecture 29 Calculater Lecture 15 Q&amp;A Lecture 29 Q&amp;A HW 03 HW 07 Homework 3 Hints Lab 11 Lecture 16 Mutable Functions Project Scheme Lecture 16 Q&amp;A Lab 06 Lecture 17 Iterations Lecture 17 Q&amp;A"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part1/#lab-00","title":"Lab 00","text":""},{"location":"Notes%20of%20Courses/CS61A/CS61A_part1/#1","title":"1","text":"<p>\u8fd0\u884chw\u6216\u8005lab\u4efb\u52a1\u7684\u5bf9\u5e94\u547d\u4ee4\u65f6\uff0c\u90fd\u52a0\u4e0a <code>--local</code> \uff0c\u5c31\u53ea\u5728\u672c\u5730\u8fd0\u884c\uff0c\u4e0d\u4f1a\u4e0a\u4f20\u7136\u540e\u8981\u6c42\u8f93\u5165\u90ae\u7bb1\uff0c\u5982</p> <pre><code>python ok [-q xxx] [-u] --local\n</code></pre>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part1/#lecture-2-functions","title":"Lecture 2 Functions","text":""},{"location":"Notes%20of%20Courses/CS61A/CS61A_part1/#1_1","title":"1","text":"<p>\u53d8\u91cf\u53ef\u4ee5 \u201c\u6307\u5411\u201d \u4e00\u4e2a\u51fd\u6570</p> <p></p>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part1/#2","title":"2","text":"<p>cs61a\u4e2d\u4f7f\u7528\u7684\u53ef\u4ee5\u663e\u793apython\u7a0b\u5e8f\u4e2d environment \u3001 frame \u7b49\u4fe1\u606f\u7684\u5728\u7ebf\u7f51\u7ad9\uff1a</p> <p>Online Python Tutor - Composing Programs - Python 3</p> <p>John DeNero \u7f16\u5199\u7684cs61a\u7684\u914d\u5957\u82f1\u6587\u539f\u7248\u6559\u6750\uff1a</p> <p>Composing Programs</p> <p>\u5728github\u4e0a\u53d1\u73b0\u7684\u5176\u5bf9\u5e94\u4ed3\u5e93\uff1a</p> <p>DestructHub/composing-programs: Annotation and code about SICP Python (github.com)</p> <p>github\u4e0a\u53d1\u73b0\u7684\u975e\u5b98\u65b9\u7684\u8fd8\u5728\u7ffb\u8bd1(23/7/21\u53d1\u73b0)\u7684\u4e2d\u6587\u7248\u7684\u4ed3\u5e93\uff1a</p> <p>csfive/composing-programs-zh: \ud83d\udea7 CS61A \u6559\u6750\u300aComposing Programs\u300b\u5373\u300a\u8ba1\u7b97\u673a\u7a0b\u5e8f\u7684\u6784\u9020\u4e0e\u89e3\u91ca\u300bPython \u7248\u672c\u7684\u4e2d\u6587\u7ffb\u8bd1 (github.com)</p> <p>\u5176\u5bf9\u5e94\u7f51\u9875\uff1a</p> <p>CSfive | CSfive</p>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part1/#3","title":"3","text":"<p>\u8c03\u7528\u51fd\u6570\u65f6\uff0c\u4f1a\u521b\u5efa\u4e00\u4e2a\u65b0\u7684frame\uff0c\u4e14frame\u7684\u540d\u5b57\u4e3a\u51fd\u6570\u672c\u8eab\u7684\u540d\u5b57(\u5373\u521b\u5efa\u65f6\u7684\u540d\u5b57 (\u5982\u679c\u662flambda\u533f\u540d\u51fd\u6570\u5219 \u6ca1\u6709\u540d\u5b57/\u540d\u5b57\u4e3alambda))\uff0c</p> <p></p> <p>\u5373\u5982\u679c\u7528\u67d0\u4e2a\u53d8\u91cf\u6307\u5411\u4e86\u51fd\u6570\uff0c\u5728\u7528\u53d8\u91cf\u8c03\u7528\u51fd\u6570\u7684\u65f6\uff0c\u521b\u5efa\u7684frame\u540d\u5b57\u4ecd\u4e3a\u539f\u51fd\u6570\u540d</p> <p></p>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part1/#4","title":"4","text":"<p>python\u4e2d\uff0c\u8d4b\u503c\u53ef\u4ee5\u540c\u65f6\u5bf9\u4e24\u4e2a\u53d8\u91cf\u8fdb\u884c\uff0c\u4f1a\u4f7f\u4ea4\u6362\u53d8\u91cf\u7684\u503c\u7b49\u64cd\u4f5c\u66f4\u65b9\u4fbf\uff0c\u5982</p> <pre><code>a, b = b, a\n</code></pre>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part1/#lecture-2-qa","title":"Lecture 2 Q&amp;A","text":""},{"location":"Notes%20of%20Courses/CS61A/CS61A_part1/#1_2","title":"1","text":"<p>\u5728\u54ea\u4e2aframe\u4e2d\u5b9a\u4e49(define)\u7684\u51fd\u6570\uff0c\u5176parent\u5c31\u662f\u54ea\u4e2aframe\uff0c\u9664\u4e86Global frame\u5176\u4ed6\u90fd\u6709parent</p>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part1/#hw-01","title":"HW 01","text":""},{"location":"Notes%20of%20Courses/CS61A/CS61A_part1/#1_3","title":"1","text":"<p>Q3\uff0c\u53ef\u4ee5\u7528\u603b\u7684\u51cf\u53bb\u6700\u5927\u7684\uff0c\u5f97\u5230\u6700\u5c0f\u7684\u4e24\u4e2a</p> code <pre><code>def two_of_three(x, y, z):\n    return x * x + y * y + z * z - max(x, y, z) ** 2\n</code></pre>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part1/#2_1","title":"2","text":"<p>Q5</p> <pre><code>def with_if_function():\n    \"\"\"\n    &gt;&gt;&gt; result = with_if_function()\n    42\n    47\n    &gt;&gt;&gt; print(result)\n    None\n    \"\"\"\n    return if_function(cond(), true_func(), false_func())\n</code></pre> <p>\u7531\u4e8e\u5728 <code>return</code> \u8bed\u53e5\u4e2d\uff0c\u586b\u5165\u7684\u65f6\u8c03\u7528\u7684\u51fd\u6570( <code>true_func()</code> \u548c <code>false_func()</code> )\uff0c\u8fd0\u884c\u7684\u987a\u5e8f\u662f \u5148\u8fdb\u884c <code>true_func()</code> \u548c <code>false_func()</code> \u4e24\u4e2a\u51fd\u6570\u7684\u8c03\u7528\uff0c\u518d\u5c06\u4ed6\u4eec\u7684\u8fd4\u56de\u503c\u4f20\u9012\u7ed9 <code>if_function()</code> \u4e2d\uff0c\u6240\u4ee5(\u7531\u4e8e\u4e24\u4e2a\u51fd\u6570\u88ab\u8c03\u7528\u4e86) 42\u548c47\u90fd\u4f1a\u8f93\u51fa</p> <pre><code>def with_if_statement():\n    \"\"\"\n    &gt;&gt;&gt; result = with_if_statement()\n    47\n    &gt;&gt;&gt; print(result)\n    None\n    \"\"\"\n    if cond():\n        return true_func()\n    else:\n        return false_func()\n</code></pre> <p>\u800c\u5728\u8fd9\u4e2a\u51fd\u6570\u4e2d\uff0c\u5219\u53ea\u4f1a\u8c03\u7528 <code>true_func()</code> \u548c <code>false_func()</code> \u5176\u4e2d\u4e00\u4e2a\u51fd\u6570\uff0c\u56e0\u6b64\u53ea\u4f1a\u8f93\u51fa\u4e00\u4e2a\u6570\u5b57</p> code <pre><code>def if_function(condition, true_result, false_result):\n    \"\"\"Return true_result if condition is a true value, and\n    false_result otherwise.\n\n    &gt;&gt;&gt; if_function(True, 2, 3)\n    2\n    &gt;&gt;&gt; if_function(False, 2, 3)\n    3\n    &gt;&gt;&gt; if_function(3==2, 3+2, 3-2)\n    1\n    &gt;&gt;&gt; if_function(3&gt;2, 3+2, 3-2)\n    5\n    \"\"\"\n    if condition:\n        return true_result\n    else:\n        return false_result\n\n\ndef with_if_statement():\n    \"\"\"\n    &gt;&gt;&gt; result = with_if_statement()\n    47\n    &gt;&gt;&gt; print(result)\n    None\n    \"\"\"\n    if cond():\n        return true_func()\n    else:\n        return false_func()\n\n\ndef with_if_function():\n    \"\"\"\n    &gt;&gt;&gt; result = with_if_function()\n    42\n    47\n    &gt;&gt;&gt; print(result)\n    None\n    \"\"\"\n    return if_function(cond(), true_func(), false_func())\n\n\ndef cond():\n    \"*** YOUR CODE HERE ***\"\n    return False\n\ndef true_func():\n    \"*** YOUR CODE HERE ***\"\n    print(42)\n\n\ndef false_func():\n    \"*** YOUR CODE HERE ***\"\n    print(47)\n</code></pre>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part1/#homework-1-hints","title":"Homework 1 Hints","text":""},{"location":"Notes%20of%20Courses/CS61A/CS61A_part1/#1_4","title":"1","text":"<p>Q3 \u7684\u4e24\u79cd\u601d\u8def\uff1a</p> <ol> <li>\u5168\u90e8\u7684\u7ed3\u679c\u53d6\u6700\u5c0f</li> <li>\u5168\u90e8\u5e73\u65b9\u548c\u51cf\u53bb\u6700\u5927\u5e73\u65b9</li> </ol> <p></p>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part1/#lecture-3-control","title":"Lecture 3 Control","text":""},{"location":"Notes%20of%20Courses/CS61A/CS61A_part1/#1_5","title":"1","text":"<p><code>print()</code> \u53ef\u4ee5\u4f20\u5165\u591a\u4e2a\u53c2\u6570\uff0c\u6253\u5370\u65f6\u6bcf\u4e2a\u53c2\u6570\u4e4b\u95f4\u4f1a\u7a7a\u4e00\u4e2a\u7a7a\u683c</p>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part1/#2_2","title":"2","text":"<ul> <li> <p>\u5728 a\u51fd\u6570 \u53c2\u6570\u8c03\u7528\u7684\u4f4d\u7f6e\u586b\u5165 \u88ab\u8c03\u7528\u7684b\u51fd\u6570 \uff0c\u5b9e\u9645\u4e0a\u4f7f\u5148\u8fd0\u884c b\u51fd\u6570 \uff0c\u518d\u5c06b\u7684\u8fd4\u56de\u503c\u4f20\u5165 a\u51fd\u6570</p> </li> <li> <p><code>print()</code> \u7684\u8fd4\u56de\u503c\u662f <code>None</code> </p> </li> </ul> <p>\u8865\u5145\uff1a</p> <p></p>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part1/#3_1","title":"3","text":"<p>Quote</p> <p>An environment is a sequence of frames.</p> <ul> <li>The global frame alone</li> <li>A local, then the global frame</li> </ul> <p></p> <p></p> <p>\u53d8\u91cf\u540d\u5728\u67e5\u627e\u5bf9\u5e94\u7684\u503c\u7684\u65f6\u5019\uff0c\u4f1a\u4ece\u5f53\u524d\u7684 frame \u4f9d\u6b21\u5411\u4e0a(parent frame) \u67e5\u627e\u503c\uff0c\u5e76\u7ed1\u5b9a\u6700\u65e9\u627e\u5230\u7684\u503c\uff0c\u5982\u56fe\u4e2d\u7684 <code>square</code> \u5148\u5728f1\u4e2d\u67e5\u627e(\u5982\u679cf1\u6ca1\u6709\u518d\u5728Global frame\u4e2d\u67e5\u627e)\uff0c\u5e76\u7ed1\u5b9a\u4e864 (\u5982\u679cf1\u4e2d\u6ca1\u6709 <code>square</code> \u5bf9\u5e94\u7684\u503c\uff0c\u5219\u4f1a\u7ed1\u5b9a\u5230global frame\u4e2d\u7684func square)</p> <p>\u6b64\u5916\uff0c</p> <p>\u56fe\u4e2d\u4e5f\u53ef\u4ee5\u53d1\u73b0\uff0cframe\u7684parent\u662f\u6839\u636e\u4ee3\u7801\u7684\u7ed3\u6784\u6765\u786e\u5b9a\u7684\uff0c\u800c\u4e0d\u662f\u6839\u636e\u8c03\u7528\u7684\u5173\u7cfb\u6765\u786e\u5b9a\u7684\uff0c\u5982 \u7b2c\u4e00\u5f20\u56fe\u4e2d <code>square(square(3))</code> \u91cc\u9762\u548c\u5916\u9762\u7684 <code>square</code> \u7684 parent \u90fd\u662f global frame</p> <p>\u8ddf Lecture 2 Q&amp;A \u4e2d\u4e00\u6837</p>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part1/#4_1","title":"4","text":"<ul> <li> <p><code>bash     python -i xxx.py</code></p> <p>\u53ef\u4ee5\u5c06 <code>xxx.py</code> \u6587\u4ef6\u4e2d\u7684\u4ee3\u7801\u5f15\u5165\u547d\u4ee4\u884c\u6216\u8005\u7ec8\u7aef</p> </li> <li> <p>\u547d\u4ee4\u884c/\u7ec8\u7aef\u4e2d\u4f7f\u7528python\u65f6\uff0cCtrl+D <code>^D</code> \u53ef\u4ee5\u6e05\u7a7a\u754c\u9762</p> </li> </ul> <p></p> <ul> <li> <p><code>bash     python -m doctest [-v] xxx.py</code></p> <p>\u53ef\u4ee5\u8fd0\u884c <code>xxx.py</code> \u4e2d\u51fd\u6570\u8bf4\u660e\u8bed\u53e5\u90e8\u5206\u7684\u4ee3\u7801(\u7528\u4e8e\u6d4b\u8bd5\u51fd\u6570\u80fd\u5426\u8f93\u5165\u6b63\u786e\u9884\u671f\u7ed3\u679c)\uff0c\u5982\u679c\u62a5\u9519\u4f1a\u663e\u793a\u51fa\u62a5\u9519\u4fe1\u606f\uff0c\u5982\u679c\u4e0d\u62a5\u9519\u5219\u4e0d\u663e\u793a\u4fe1\u606f \u800c\u6b63\u5e38\u663e\u793a\u4e0b\u4e00\u884c(\u5982\u679c\u6b7b\u5faa\u73af\u5c31\u4e00\u76f4\u4e0d\u663e\u793a\u4e0b\u4e00\u884c)\uff0c</p> <p><code>-v</code> \u9009\u9879\u662f\u4e0d\u62a5\u9519\u4e5f\u80fd\u663e\u793a\u6bcf\u4e2a\u8f93\u5165\u7684\u6d4b\u8bd5\u7ed3\u679c\uff0c\u5982\u4e0a\u56fe</p> </li> </ul>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part1/#5","title":"5","text":"<p>\u771f\u503c\u4e3a\u5047\u7684\u503c\uff1a <code>False</code> , <code>0</code> , <code>''</code> , <code>None</code> \u7b49\u7b49</p> <p>\u5176\u4f59\u5176\u4ed6\u503c\u57fa\u672c\u4e0a\u90fd\u4e3a\u771f</p>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part1/#6","title":"6","text":"<p>\u8001\u5e08\u5199\u5206\u89e3\u8d28\u56e0\u6570\u7684\u601d\u8def\u503c\u5f97\u5b66\u4e60\uff1a</p> <p>\u5c06\u95ee\u9898\u5206\u89e3\u6210\u4e24\u6b65\uff1a</p> <ol> <li>\u4e00\u4e2a\u6570\u7684\u6700\u5c0f\u56e0\u6570(\u56e0\u4e3a\u8981\u6c42\u8981\u5347\u5e8f)</li> <li>\u518d\u5faa\u73af\u627e\u6700\u5c0f\u56e0\u6570\uff0c\u4ece\u800c\u83b7\u5f97\u5347\u5e8f\u7684\u5206\u89e3\u8d28\u56e0\u6570</li> </ol> <p>\u5e76\u4e14\u5c06\u627e\u6700\u5c0f\u7684\u56e0\u6570\u8fd9\u4e2a\u529f\u80fd\u5355\u72ec\u5199\u6210\u4e00\u4e2a\u51fd\u6570\uff0c\u8fd9\u6837\u770b\u8d77\u6765\u5c31\u5f88\u6e05\u6670</p> <pre><code>def prime_factors(n):\n    \"\"\"Print the prime factors of n in non-decreasing order.\n\n    &gt;&gt;&gt; prime_factors(8)\n    2\n    2\n    2\n    &gt;&gt;&gt; prime_factors(9)\n    3\n    3\n    &gt;&gt;&gt; prime_factors(10)\n    2\n    5\n    &gt;&gt;&gt; prime_factors(11)\n    11\n    &gt;&gt;&gt; prime_factors(12)\n    2\n    2\n    3\n    &gt;&gt;&gt; prime_factors(858)\n    2\n    3\n    11\n    13\n    \"\"\"\n    while n &gt; 1:\n        k = smallest_prime_factor(n)\n        n = n // k\n        print(k)\n\ndef smallest_prime_factor(n):\n    \"\"\"Return the smallest k &gt; 1 that evenly divides n.\"\"\"\n    k = 2\n    while n % k != 0:\n        k = k + 1\n    return k\n</code></pre>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part1/#lecture-3-qa","title":"Lecture 3 Q&amp;A","text":""},{"location":"Notes%20of%20Courses/CS61A/CS61A_part1/#1_6","title":"1","text":"<p>\u7531\u4e8e\u540c\u4e00\u4e2a\u51fd\u6570\u5185\u7684\u540c\u4e00\u4e2a\u53d8\u91cf\u540d\u5fc5\u987b\u6307\u5411\u540c\u4e00\u4e2a\u6846\u67b6\u4e0b\u7684\u4e1c\u897f\uff0c\u6240\u4ee5</p> <pre><code>x = 2\n\ndef f():\n    print(x)\n    x = 3\n    print(x)\n\nf()\n</code></pre> <p><code>x = 3</code> \u8fd9\u884c\u5df2\u7ecf\u5bf9local\u6846\u67b6\u4e0b\u7684x\u8d4b\u503c\uff0c\u6240\u4ee5 f \u51fd\u6570\u5185\u7684x\u5c31\u90fd\u53ea\u80fd\u7ed1\u5b9alocal\u6846\u67b6\u4e0b\u7684\u503c\uff0c\u4e0d\u80fd\u7ed1\u5b9a\u6bcd\u6846\u67b6\u4e0b\u7684\u503c</p> <p>\u800c\u7b2c\u4e00\u4e2a <code>print(x)</code> \u5728\u6267\u884c\u65f6\uff0c(local\u6846\u67b6\u4e0b\u7684)\u53d8\u91cfx\u8fd8\u5e76\u672a\u8d4b\u503c\uff0c\u6240\u4ee5\u4f1a\u62a5\u9519\uff0c</p> <p>\u5982\u679c\u53bb\u6389 <code>x = 3</code> \u90a3\u4e48\u7a0b\u5e8f\u5c31\u4e0d\u4f1a\u62a5\u9519</p> <p>Lecture 16\u4e2d\u4e5f\u8bf4\u5230\u4e86\u8fd9\u4e00\u70b9</p>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part1/#lecture-4-higher-order-functions","title":"Lecture 4 Higher-Order Functions","text":""},{"location":"Notes%20of%20Courses/CS61A/CS61A_part1/#1_7","title":"1","text":"<p>John\u63d0\u5230\u8bbe\u8ba1\u51fd\u6570\u65f6\u9700\u8981\u6ce8\u610f\u7684\u51e0\u70b9</p> <ul> <li>Give each function exactly one job</li> <li>Don't repeat yourself (DRY). Implement a process just once, but execute it many times.</li> <li>Define functions generally.</li> </ul> <ul> <li>\u786e\u4fdd\u6bcf\u4e2a\u51fd\u6570\u53ea\u505a\u4e00\u4e2a\u4e8b\u60c5\u3002</li> <li>\u907f\u514d\u91cd\u590d\u4ee3\u7801\uff08\u9075\u5faaDRY\u539f\u5219\uff09\u3002\u5c06\u4e00\u4e2a\u8fc7\u7a0b\u5b9e\u73b0\u4e00\u6b21\uff0c\u7136\u540e\u591a\u6b21\u6267\u884c\u5b83\u3002</li> <li>\u5b9a\u4e49\u901a\u7528\u7684\u51fd\u6570\u3002</li> </ul>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part1/#2_3","title":"2","text":"<p><code>assert</code> \u8bed\u53e5\uff0c\u5982\u679c <code>assert</code> \u4e4b\u540e\u8868\u8fbe\u5f0f\u7684\u503c\u4e3a\u5047\uff0c\u90a3\u4e48\u5c31\u4f1a\u62a5\u9519\uff0c\u5e76\u663e\u793a\u5bf9\u5e94\u7684\u4fe1\u606f\uff0c\u5982\u4e0a\u56fe</p>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part1/#3_2","title":"3","text":"<p>John\u6f14\u793a <code>def</code> \u521b\u5efa\u51fa\u6765\u7684\u51fd\u6570\u6709\u56fa\u6709\u7684\u540d\u5b57\uff0c\u800c <code>lambda</code> \u521b\u5efa\u51fa\u6765\u7684\u51fd\u6570\u6ca1\u6709</p> <p></p> <p></p>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part1/#4_2","title":"4","text":"<p><code>if</code> \u8bed\u53e5\u53ea\u4f1a\u6267\u884c <code>if</code> \u6216\u8005 <code>else</code> \u8bed\u53e5\u4e2d\u7684\u4e00\u4e2a\uff0c\u800c\u53e6\u4e00\u4e2a\u4e0d\u4f1a\u88ab\u6267\u884c\uff0c</p> <p>\u800c\u5982\u679c\u50cf\u4e0a\u56fe\u4e00\u6837\u5b9a\u4e49\u4e00\u4e2a\u7c7b\u4f3c\u4e8e <code>if</code> \u8bed\u53e5\u7684\u51fd\u6570\uff0c\u5e76\u628a\u8868\u8fbe\u5f0f\u653e\u5728\u53c2\u6570\u4e2d\uff0c\u90a3\u4e48\u4e24\u4e2a\u8868\u8fbe\u5f0f\u90fd\u4f1a\u88ab==\u6267\u884c==\uff0c\u800c\u4f20\u5165\u7684\u662f\u8868\u8fbe\u5f0f\u7684\u7ed3\u679c/\u5bf9\u5e94\u7684\u503c</p>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part1/#5_1","title":"5","text":"<p><code>and</code> \u548c <code>or</code> \u8bed\u53e5\uff0c</p> <p><code>and</code> / <code>or</code> \u8bed\u53e5\u4e2d\uff0c\u5982\u679c\u9760\u524d\u7684\u8868\u8fbe\u5f0f\u7ed3\u679c\u8ba1\u7b97\u4e3a\u5047/\u771f\uff0c\u90a3\u4e48\u5c31\u4f1a\u8fd4\u56de\u8fd9\u4e2a\u7ed3\u679c\uff0c\u800c\u9760\u540e\u7684\u8868\u8fbe\u5f0f\u5c31\u4e0d\u518d\u4f1a\u6267\u884c\uff0c\u800c\u5982\u679c\u6240\u6709\u8868\u8fbe\u5f0f\u5168\u5bf9\u5e94\u4e3a\u771f/\u5047\uff0c\u90a3\u4e48\u5c31\u4f1a\u8fd4\u56de\u6700\u540e\u8868\u8fbe\u5f0f\u7684\u7ed3\u679c</p>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part1/#6_1","title":"6","text":"<p><code>... if ... else ...</code> \u8bed\u53e5(\u611f\u89c9\u5f88\u50cfc\u8bed\u8a00\u4e2d\u7684\u4e09\u76ee\u8fd0\u7b97\u7b26)\uff0c</p> <p>\u5224\u65ad\u6761\u4ef6\u5728\u4e2d\u95f4\uff0c\u4e3a\u771f\u5c31\u6267\u884c\u5de6\u8fb9\u7684\u8868\u8fbe\u5f0f\u5e76\u8fd4\u56de\uff0c\u4e3a\u5047\u5c31\u662f\u53f3\u8fb9</p>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part1/#project-hog","title":"Project Hog","text":""},{"location":"Notes%20of%20Courses/CS61A/CS61A_part1/#1_8","title":"1","text":"<p>Problem 7\uff0c\u8fd9\u9898\u9700\u8981\u5b9e\u73b0 <code>announce_highest</code> \u51fd\u6570\uff0c\u8fd4\u56de\u4e00\u4e2a\u51fd\u6570\uff0c</p> <p>\u8fd9\u9898\u53ef\u4ee5\u53c2\u8003\u5df2\u7ecf\u5b9e\u73b0\u597d\u7684 <code>annouce_lead_changes</code> \u51fd\u6570\uff0c\u4ee3\u7801\u7684\u7ed3\u6784\u548c\u8fd9\u4e2a\u51fd\u6570\u5927\u81f4\u76f8\u540c</p> code <pre><code>def announce_highest(who, last_score=0, running_high=0):\n    assert who == 0 or who == 1, 'The who argument should indicate a player.'\n    # BEGIN PROBLEM 7\n    \"*** YOUR CODE HERE ***\"\n    def say(score0, score1):\n        gain = (score0 if not who else score1) - last_score\n        if gain &gt; running_high:\n            print(gain, \"point(s)! The most yet for Player\", who)\n        return announce_highest(who, last_score + gain, gain if gain &gt; running_high else running_high)\n    return say\n    # END PROBLEM 7\n</code></pre>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part1/#2_4","title":"2","text":"<p>Problem 8\u4e2d\u63d0\u5230\uff0c\u53ef\u4ee5\u4f7f\u7528 <code>*args</code> \u6765\u4f20\u5165\u548c\u4f7f\u7528\u4e0d\u5b9a\u4e2a\u6570\u7684\u53c2\u6570</p> <p>Instead of listing formal parameters for a function, you can write <code>*args</code> . To call another function using exactly those arguments, you call it again with <code>*args</code> . For example,</p> <pre><code>&gt;&gt;&gt; def printed(f):\n...     def print_and_return(*args):\n...         result = f(*args)\n...         print('Result:', result)\n...         return result\n...     return print_and_return\n&gt;&gt;&gt; printed_pow = printed(pow)\n&gt;&gt;&gt; printed_pow(2, 8)\nResult: 256\n256\n&gt;&gt;&gt; printed_abs = printed(abs)\n&gt;&gt;&gt; printed_abs(-10)\nResult: 10\n10\n</code></pre> code <pre><code>def make_averaged(original_function, trials_count=1000):\n    # BEGIN PROBLEM 8\n    \"*** YOUR CODE HERE ***\"\n    def averaged(*args):\n        i = 0\n        sum = 0\n        while i &lt; trials_count:\n            sum += original_function(*args)\n            i += 1\n        return sum / trials_count\n    return averaged\n    # END PROBLEM 8\n</code></pre>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part1/#3_3","title":"3","text":"<p>Problem 9\u4e2d\u9700\u8981\u4f7f\u7528Problem 8\u4e2d\u5b9e\u73b0\u7684 <code>make_averaged</code> \u6765 \u907f\u514d\u4ee3\u7801\u7684\u91cd\u590d</p> code <pre><code>def max_scoring_num_rolls(dice=six_sided, trials_count=1000):\n    # BEGIN PROBLEM 9\n    \"*** YOUR CODE HERE ***\"\n    best_nums_rolls = 0\n    max_average_score = 0\n    averaged_roll_dice = make_averaged(roll_dice, trials_count)\n    i = 1\n    while i &lt;= 10:\n        average_score = averaged_roll_dice(i, dice)\n        if average_score &gt; max_average_score:\n            max_average_score = average_score\n            best_nums_rolls = i\n        i += 1\n    return best_nums_rolls\n    # END PROBLEM 9\n</code></pre>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part1/#lecture-5-environments","title":"Lecture 5 Environments","text":""},{"location":"Notes%20of%20Courses/CS61A/CS61A_part1/#1_9","title":"1","text":"<p>John\u63d0\u5230\u6846\u67b6 frame</p> <ul> <li>Every user-defined function has a parent frame (often global)</li> <li>The parent of a function is the frame in which it was defined</li> <li>Every local frame has a parent frame (often global)</li> <li>The parent of a frame is the parent of the function called</li> </ul> <ul> <li>\u6bcf\u4e2a\u81ea\u5b9a\u4e49\u51fd\u6570\u90fd\u6709\u4e00\u4e2a\u6bcd\u6846\u67b6(\u901a\u5e38\u662f\u5168\u5c40\u6846\u67b6)</li> <li>\u51fd\u6570\u7684\u7236\u7ea7\u5c31\u662f\u5b83\u88ab\u5b9a\u4e49\u65f6\u6240\u5904\u7684\u6846\u67b6</li> <li>\u6bcf\u4e2a\u672c\u5730\u6846\u67b6\u90fd\u6709\u4e00\u4e2a\u6bcd\u6846\u67b6(\u901a\u5e38\u662f\u5168\u5c40\u6846\u67b6)</li> <li>\u6846\u67b6\u7684\u7236\u7ea7\u662f\u88ab\u8c03\u7528\u51fd\u6570\u7684\u7236\u7ea7</li> </ul>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part1/#lecture-6-design","title":"Lecture 6 Design","text":""},{"location":"Notes%20of%20Courses/CS61A/CS61A_part1/#1_10","title":"1","text":"<p>John\u63d0\u5230\u5982\u4f55\u5bf9\u51fd\u6570\u4ee5\u53ca\u53d8\u91cf\u547d\u540d\uff0c\u5206\u522b\u4e3e\u51fa\u4e86\u6b63\u53cd\u4f8b</p> <p></p> <p>John\u6307\u51fa\u4e86\u4ec0\u4e48\u6837\u7684\u4e1c\u897f\u503c\u5f97\u53bb\u547d\u540d\uff0c\u4ee5\u53ca\u547d\u540d\u65f6(\u66f4\u591a\u7684)\u4e00\u4e9b\u6ce8\u610f\u70b9</p>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part1/#lecture-6-qa","title":"Lecture 6 Q&amp;A","text":""},{"location":"Notes%20of%20Courses/CS61A/CS61A_part1/#1_11","title":"1","text":"<p>John\u5728\u6f14\u793a\u65f6\u4f7f\u7528\u4e86 <code>round</code> \u8fd9\u4e2a\u51fd\u6570\uff0c\u4f5c\u7528\u662f\u80fd\u56db\u820d\u4e94\u5165\u53d6\u6574/\u53bb\u6389\u5269\u4f59\u7684\u4f4d\u6570\uff0c</p> <p>\u7b2c\u4e00\u4e2a\u53c2\u6570\u4f20\u5165\u9700\u8981\u53d6\u6574\u7684\u6570\uff0c\u7b2c\u4e8c\u4e2a\u53c2\u6570\u8868\u793a\u53d6\u5230\u7b2c\u51e0\u4f4d\u5c0f\u6570\uff0c\u4f8b\u5982</p> <pre><code>&gt;&gt;&gt; 1/3\n0.3333333333333333\n&gt;&gt;&gt; round(1/3, 4)\n0.3333\n&gt;&gt;&gt; 2/3\n0.6666666666666666\n&gt;&gt;&gt; round(2/3, 5)\n0.66667\n</code></pre>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part1/#lecture-7-function-examples","title":"Lecture 7 Function Examples","text":""},{"location":"Notes%20of%20Courses/CS61A/CS61A_part1/#1_12","title":"1","text":"<p>\u51fd\u6570\u4fee\u9970\u7b26 Function Decorator</p> <p></p> <p>\u5982\u679c\u5728\u67d0\u4e2a\u51fd\u6570\u5b9a\u4e49\u65f6\uff0c <code>@</code> \u53e6\u4e00\u4e2a\u5df2\u6709\u7684\u51fd\u6570\uff0c\u5c31\u4f1a\u628a\u8fd9\u4e2a\u51fd\u6570\u540d\u5bf9\u5e94\u7684\u53d8\u91cf\u7ed1\u5b9a\u6210\u88ab <code>@</code> \u7684\u51fd\u6570\u4f20\u5165\u8fd9\u4e2a\u51fd\u6570\u540e\u7684\u8fd4\u56de\u503c\uff0c</p> <p>\u4f8b\u5982\u4e0b\u56fe\u4e2dJohn\u7684demo\u6f14\u793a</p> <p></p>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part1/#lecture-7-qa","title":"Lecture 7 Q&amp;A","text":""},{"location":"Notes%20of%20Courses/CS61A/CS61A_part1/#1_13","title":"1","text":"<p>\u6709\u4eba\u63d0\u95ee18\u79cb\u5b63\u7b2c\u4e00\u6b21\u671f\u4e2d\u8003\u8bd5\u7684\u7b2c6\u9898\u7684a\u9898</p> <p>Quote</p> <p>This Again?</p> <p>Definitions. A repeatable integer function takes an integer argument and returns a repeatable integer function.</p> <p>(a) (6 pt) Implement <code>repeat</code> , which is a repeatable integer function that detects repeated arguments. As a side effect of repeated calls, it prints each argument that has been used before in a sequence of repeated calls. Therefore, if an argument appears n times, it is printed n \u2212 1 times in total, each time other than the first. The <code>detector</code> function is part of the implementation of <code>repeat</code> ; you must determine how it is used.</p> <p>Important: You may not use a list, set, or any other data type not covered yet in the course. </p> <pre><code>def repeat(k):\n    \"\"\"When called repeatedly, print each repeated argument.\n\n    &gt;&gt;&gt; f = repeat(1)(7)(7)(3)(4)(2)(5)(1)(6)(5)(1) \n    7\n    1\n    5\n    1\n    \"\"\" \n    return _____________________________________________________________________________(k) \n\ndef detector(f): \n    def g(i): \n        if ________________________________________________________________________________: \n            _______________________________________________________________________________ \n        return ____________________________________________________________________________ \n    return g\n</code></pre> <p>\u5c1d\u8bd5\u81ea\u5df1\u505a\u4e86\u4e00\u4e0b\uff0c</p> <p>\u7531\u4e8e <code>detector</code> \u7684\u53c2\u6570\u662f <code>f</code> \uff0c\u6240\u4ee5\u60f3\u5230\u5e94\u8be5\u662f\u901a\u8fc7\u8fd9\u4e2a\u51fd\u6570 <code>f</code> \u6765\u8bb0\u5f55 <code>repeat</code> \u4f20\u5165\u8fc7\u7684\u53c2\u6570\uff0c</p> <p>\u800c\u6bcf\u6b21\u8c03\u7528 <code>g</code> \u65f6\uff0c\u5e94\u8be5\u662f\u8fd4\u56de\u4e00\u4e2a\u65b0\u7684 <code>g</code> (\u8fd9\u6837\u624d\u80fd\u91cd\u590d\u8c03\u7528)\uff0c\u6240\u4ee5 <code>g</code> \u6700\u540e <code>return</code> \u65f6\u5e94\u8be5\u8981\u8c03\u7528 <code>detector</code> \u6765\u66f4\u65b0\u8bb0\u5f55\u7684\u4fe1\u606f\uff0c\u90a3\u4e48 <code>g</code> \u4e2d\u5927\u6982\u5c31\u53ef\u4ee5\u5f97\u5230</p> <pre><code>def g(i):\n    if f(i):\n        print(i)\n    return detector(...)\n</code></pre> <p>\u800c <code>repeat</code> \u4e2d\uff0c\u5e94\u8be5\u662f\u6700\u521d\u59cb\u7684\u72b6\u6001\uff0c\u6240\u4ee5\u5e94\u8be5\u7ed9 <code>detector</code> \u4f20\u5165\u6ca1\u6709\u4fe1\u606f\u7684\u51fd\u6570 <code>lambda x: False</code> \uff0c\u56e0\u6b64 <code>g</code> \u4e2d\u8981\u7ed9 <code>detector</code> \u4f20\u5165\u7684\u51fd\u6570\u5c31\u662f\u9700\u8981\u6dfb\u52a0\u5f53\u524d\u7684 <code>i</code> \u5c31\u884c\u4e86</p> code <pre><code>def repeat(k):\n    return detector(lambda x: False)(k) \n\ndef detector(f): \n    def g(i): \n        if f(i): \n            print(i) \n        return detector(lambda x: x == i or f(x)) \n    return g\n</code></pre>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part1/#hw-02","title":"HW 02","text":""},{"location":"Notes%20of%20Courses/CS61A/CS61A_part1/#1_14","title":"1","text":"<p>Q2\u8fd9\u9898\uff0c\u4e00\u5f00\u59cb\u81ea\u5df1\u505a\u7684\u65f6\u5019\u6ca1\u6709\u505a\u51fa\u6765\uff0c\u5c1d\u8bd5\u4e86\u5f88\u591a\u6b21\u90fd\u6ca1\u80fd\u6210\u529f\uff0c</p> <p>\u4e8e\u662f\u5c31\u53bb\u770b\u4e86\u63d0\u793a\u89c6\u9891\uff0c\u7136\u540e\u52a9\u6559\u8001\u5e08\u8bf4\u9053\uff0c\u53ef\u4ee5\u5199\u4e00\u4e2a <code>helper</code> \u51fd\u6570\u6765\u8ffd\u8e2a\u9700\u8981\u7684\u4fe1\u606f</p> <p></p> <p>\u4e8e\u662f\u770b\u5230\u8fd9\u91cc\u6211\u5927\u6982\u5c31\u6709\u601d\u8def\u4e86\uff0c\u6700\u540e\u5c31\u5b8c\u6210\u4e86</p> code <pre><code>def pingpong(n):\n    \"*** YOUR CODE HERE ***\"\n    def helper(index, pingpong_num, direction):\n        if index == n:\n            return pingpong_num + direction\n        else:\n            return helper(index + 1, pingpong_num + direction, direction * (-1 if index % 8 == 0 or num_eights(index) else 1))\n    return helper(1, 0, 1)\n</code></pre>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part1/#2_5","title":"2","text":"<p>Q4\u8fd9\u9898\uff0c\u611f\u89c9\u548c\u7b2c9\u8282Tree Recursion\u8bfe\u4e0a\u6700\u540e\u5c55\u793a\u7684\u4f8b\u5b50\u5f88\u50cf\uff0c</p> <p></p> <p>\u4f46\u662f\u4e00\u5f00\u59cb\u4e5f\u662f\u6ca1\u505a\u51fa\u8fd9\u9898\uff0c\u4e4b\u540e\u53d1\u73b0\u9700\u8981\u5199\u4e00\u4e2a <code>helper</code> \u51fd\u6570\u6765\u8f85\u52a9\u8bb0\u5f55\u4fe1\u606f\uff0c\u6700\u540e\u4eff\u7167\u4e0a\u56fe\u4f8b\u5b50\u7684\u5927\u81f4\u7ed3\u6784\u5c31\u5199\u51fa\u6765\u4e86</p> code <pre><code>def count_coins(total):\n    \"*** YOUR CODE HERE ***\"\n    def helper(index, largest_coin):\n        if index == total:\n            return 1\n        elif index &gt; total:\n            return 0\n        elif largest_coin == None:\n            return 0\n        else:\n            return helper(index + largest_coin, largest_coin) + helper(index, next_largest_coin(largest_coin))\n    return helper(0, 1)\n</code></pre>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part1/#3_4","title":"3","text":"<p>Q5\u8fd9\u9898\u6ca1\u6709\u60f3\u51fa\u6765\uff0c\u6700\u540e\u662f\u5728\u7f51\u4e0a\u627e\u5230\u4e86\u5dee\u4e0d\u591a\u7684( <code>lambda</code> \u51fd\u6570\u9012\u5f52\u7684)\u4ee3\u7801\uff0c</p> <pre><code>def make_anonymous_factorial():\n    return (lambda f: lambda n: f(f, n))(lambda f, i: 1 if i == 0 else i * f(f, i - 1))\n</code></pre> <p>\u540e\u6765\u518d\u56de\u6765\u770b\u8fd9\u4e2a\u4ee3\u7801\uff0c\u5927\u6982\u80fd\u7406\u89e3\u4e3a\u4ec0\u4e48\u8981\u8fd9\u4e48\u505a\u4e86\uff0c\u7531\u4e8e\u9012\u5f52\u9700\u8981\u8c03\u7528\u81ea\u5df1\uff0c\u6240\u4ee5\u5728 <code>lambda</code> \u51fd\u6570\u4e2d\u53ea\u80fd\u501f\u52a9\u5916\u90e8\uff0c\u901a\u8fc7\u53c2\u6570\u628a\u81ea\u5df1\u4f20\u8fdb\u6765(\u901a\u8fc7\u53c2\u6570\u6765\u4f20\u9012\u4fe1\u606f\u6bd4\u8f83\u5e38\u89c1)\uff0c\u6240\u4ee5\u6838\u5fc3\u90e8\u5206\u5c31\u5199\u6210\u4e86</p> <pre><code>(lambda f, i: 1 if i == 0 else i * f(f, i - 1))\n</code></pre> <p>\u5269\u4e0b\u7684\u90e8\u5206\u5c31\u662f\u53bb\u5f00\u59cb\u9012\u5f52\u7684\u8fc7\u7a0b\u3002</p> <p>\u5728\u7b2c12\u8282\u7684Q&amp;A\u4e2d\u4e5f\u6709\u4eba\u95ee\u5230\u4e86\u8fd9\u4e00\u9898\uff0cJohn\u4e5f\u8fdb\u884c\u4e86\u89e3\u7b54</p>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part1/#lecture-10-containers","title":"Lecture 10 Containers","text":""},{"location":"Notes%20of%20Courses/CS61A/CS61A_part1/#1_15","title":"1","text":"<p><code>exec()</code> \u51fd\u6570\u53ef\u4ee5\u6267\u884c\u5b57\u7b26\u4e32\u4e2d\u7684\u8bed\u53e5\uff0c\u5982</p> <pre><code>exec(\"curry = lambda f: lambda x: lambda y: f(x, y)\")\n</code></pre> <p>\u53ef\u4ee5\u8ba9 <code>curry</code> \u53d8\u91cf\u6307\u5411\u4e00\u4e2a\u533f\u540d\u51fd\u6570</p> <p></p>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part1/#2_6","title":"2","text":"<p>\u4f8b</p> <pre><code>for _ in range(3):\n    ...\n</code></pre> <p>\u53ef\u4ee5\u7528 <code>_</code> \u53d8\u91cf\u8868\u793a <code>for</code> \u5faa\u73af\u4e2d\u6267\u884c\u7684\u8bed\u53e5\u4e0e\u8fed\u4ee3\u7684\u53d8\u91cf\u65e0\u5173</p>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part1/#3_5","title":"3","text":"<p>string\u5b57\u7b26\u4e32\u7684\u5143\u7d20\u4e5f\u662f\u5b57\u7b26\u4e32\uff0clist\u7684\u5143\u7d20\u5c31\u662f\u5143\u7d20\uff0c\u5373\u6709</p> <pre><code>&gt;&gt;&gt; str = \"hello\"\n&gt;&gt;&gt; str[3][0][0]\n'l'\n</code></pre>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part1/#4_3","title":"4","text":"<p>\u8bb0\u5fc6\u6280\u5de7 \u201c\u4e0b\u6807\u201d \u5bf9\u5e94\u5143\u7d20\u4e4b\u524d\uff0c</p> <p>\u5bf9\u6709\u5e8f\u7ed3\u6784\u5207\u7247\u4e5f\u9002\u7528\uff0c\u5176\u4e2d\u7684\u8d1f\u6570\u4e5f\u9002\u7528\uff0c\u5982</p> <pre><code>&gt;&gt;&gt; l = list(range(5))\n&gt;&gt;&gt; l\n[0, 1, 2, 3, 4]\n&gt;&gt;&gt; l[1:-1]\n[1, 2, 3]\n</code></pre>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part1/#5_2","title":"5","text":"<p>\u5217\u8868\u63a8\u5bfc\u5f0f(list comprehension)\u53ef\u4ee5\u7528 <code>if</code> \uff1a</p> <pre><code>&gt;&gt;&gt; l2 = [x for x in [0, 1, 2, 5, 6] if x % 3 == 0]\n&gt;&gt;&gt; l2\n[0, 6]\n</code></pre>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part1/#6_2","title":"6","text":"<p>\u5982\u679c\u5217\u8868\u6709\u5b50\u5217\u8868\uff0c\u4e14\u5143\u7d20\u4e2a\u6570\u90fd\u56fa\u5b9a\uff0c\u90a3\u4e48 <code>for</code> \u53ef\u4ee5\u76f4\u63a5\u83b7\u53d6\u5b50\u5217\u8868\u7684\u5143\u7d20/unpack\u5b50\u5217\u8868\uff0c\u5982\u5b50\u5217\u8868\u90fd\u542b\u4e24\u4e2a\u5143\u7d20\uff1a</p> <p></p>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part1/#lecture-10-qa","title":"Lecture 10 Q&amp;A","text":""},{"location":"Notes%20of%20Courses/CS61A/CS61A_part1/#1_16","title":"1","text":"<p>\u9012\u589e\u7684\u9012\u5f52\u5199\u9636\u4e58\uff1a</p> <pre><code>def fact(n):\n    return fact_helper(n, 1, 1)\n\ndef fact_helper(n, k, result):\n    \"\"\"Computes k * (k + 1) * (k + 2) * ... * n\n    by accumulating the result\n    \"\"\"\n    if n == k:\n        return k * result\n    else:\n        return fact_helper(n, k + 1, k * result)\n</code></pre> <p></p> <p>or</p> <pre><code>def fact(n, k=1, result=1):\n    \"\"\"Computes k * (k + 1) * (k + 2) * ... * n\n    by accumulating the result\n    \"\"\"\n    if n == k:\n        return k * result\n    else:\n        return fact(n, k + 1, k * result)\n</code></pre> <p>\u8fd9\u79cd(\u9012\u589e\u7684\u9012\u5f52)\u66f4\u50cf\u5faa\u73af\u8bed\u53e5</p> <p>(\u4e5f\u53ef\u4ee5\u5c06helper\u5199\u5165\u51fd\u6570\u5185\u90e8)</p> <pre><code>def fact(n):\n    def helper(k, result):\n        if k == n:\n            return k * result\n        else:\n            return helper(k + 1, k * result)\n    return helper(1, 1)\n</code></pre> <p>or</p> <pre><code>def fact(n):\n    def helper(k):\n        if k == n:\n            return k\n        else:\n            return k * helper(k + 1)\n    return helper(1)\n</code></pre>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part1/#lab-04","title":"Lab 04","text":"<p>lab04\u4e2d\u7684Q4-Q6 \u5728\u638c\u63e1\u4e86 \u5047\u60f3\u51fd\u6570\u80fd\u8fd4\u56de\u6240\u9700\u8981\u8fd4\u56de\u7684\u4e1c\u897f(\u5373\u5047\u60f3\u8fd4\u56de\u7684\u4e1c\u897f\u662f\u5df2\u77e5\u7684) \u7684\u8bc0\u7a8d(\u5728lecture12\u4e2d)\u4e4b\u540e\uff0c\u505a\u7684\u5f88\u987a\u7545\u3002</p> <ol> <li>\u5148\u5047\u60f3\u51fd\u6570\u80fd\u8fd4\u56de\u6240\u9700\u7684\u4e1c\u897f/\u503c</li> <li>\u518d\u60f3\u5982\u4f55\u628a\u60c5\u51b5\u5206\u89e3\u6210\u53e6\u4e00\u4e2a\u6216\u51e0\u4e2a\u5dee\u4e0d\u591a(\u5f62\u5f0f\u4e00\u6837)\u4f46\u7b80\u5355\u4e86\u4e00\u70b9\u7684\u60c5\u51b5(\u6709\u70b9\u7c7b\u4f3c\u4e8e\u52a8\u6001\u89c4\u5212\u7684\u627e\u9012\u63a8\u5f0f)\uff0c\u5982Q4\u4e2d\u4e00\u822c\u60c5\u51b5\u53ef\u4ee5\u5206\u6210\u4e24\u4e2a\u884c/\u5217\u51cf\u4e00\u7684\u60c5\u51b5(\u5373\u5411\u4e0a\u6216\u5411\u53f3\u8d70\u4e00\u6b65)</li> <li>\u518d\u60f3 \u201c\u57fa\u672c\u60c5\u51b5\u201d (\u6700\u7b80\u5355/\u7279\u6b8a\u7684\u60c5\u51b5(\u4f5c\u4e3a\u9012\u5f52\u7684\u7ec8\u6b62\u60c5\u51b5))</li> <li>\u6700\u540e\u8c03\u6574\u4e00\u822c\u60c5\u51b5\u7684\u8fd4\u56de\u7684\u503c</li> </ol> code <p>Q4</p> <pre><code>def paths(m, n):\n    \"\"\"Return the number of paths from one corner of an\n    M by N grid to the opposite corner.\n\n    &gt;&gt;&gt; paths(2, 2)\n    2\n    &gt;&gt;&gt; paths(5, 7)\n    210\n    &gt;&gt;&gt; paths(117, 1)\n    1\n    &gt;&gt;&gt; paths(1, 157)\n    1\n    \"\"\"\n    \"*** YOUR CODE HERE ***\"\n    if m == 1 or n == 1:\n        return 1\n    else:\n        return paths(m - 1, n) + paths(m, n - 1)\n</code></pre> <p>Q5</p> <pre><code>def max_subseq(n, t):\n    \"\"\"\n    Return the maximum subsequence of length at most t that can be found in the given number n.\n    For example, for n = 20125 and t = 3, we have that the subsequences are\n        2\n        0\n        1\n        2\n        5\n        20\n        21\n        22\n        25\n        01\n        02\n        05\n        12\n        15\n        25\n        201\n        202\n        205\n        212\n        215\n        225\n        012\n        015\n        025\n        125\n    and of these, the maxumum number is 225, so our answer is 225.\n\n    &gt;&gt;&gt; max_subseq(20125, 3)\n    225\n    &gt;&gt;&gt; max_subseq(20125, 5)\n    20125\n    &gt;&gt;&gt; max_subseq(20125, 6) # note that 20125 == 020125\n    20125\n    &gt;&gt;&gt; max_subseq(12345, 3)\n    345\n    &gt;&gt;&gt; max_subseq(12345, 0) # 0 is of length 0\n    0\n    &gt;&gt;&gt; max_subseq(12345, 1)\n    5\n    \"\"\"\n    \"*** YOUR CODE HERE ***\"\n    if t == 0:\n        return 0\n    elif n &lt; 10:\n        return n\n    else:\n        return max(max_subseq(n // 10, t - 1) * 10 + n % 10, max_subseq(n // 10, t))\n</code></pre> <p>Q6</p> <pre><code>def add_chars(w1, w2):\n    \"\"\"\n    Return a string containing the characters you need to add to w1 to get w2.\n\n    You may assume that w1 is a subsequence of w2.\n\n    &gt;&gt;&gt; add_chars(\"owl\", \"howl\")\n    'h'\n    &gt;&gt;&gt; add_chars(\"want\", \"wanton\")\n    'on'\n    &gt;&gt;&gt; add_chars(\"rat\", \"radiate\")\n    'diae'\n    &gt;&gt;&gt; add_chars(\"a\", \"prepare\")\n    'prepre'\n    &gt;&gt;&gt; add_chars(\"resin\", \"recursion\")\n    'curo'\n    &gt;&gt;&gt; add_chars(\"fin\", \"effusion\")\n    'efuso'\n    &gt;&gt;&gt; add_chars(\"coy\", \"cacophony\")\n    'acphon'\n    &gt;&gt;&gt; from construct_check import check\n    &gt;&gt;&gt; # ban iteration and sets\n    &gt;&gt;&gt; check(LAB_SOURCE_FILE, 'add_chars',\n    ...       ['For', 'While', 'Set', 'SetComp']) # Must use recursion\n    True\n    \"\"\"\n    \"*** YOUR CODE HERE ***\"\n    if not w1:\n        return w2\n    elif w1[0] == w2[0]:\n        return add_chars(w1[1:], w2[1:])\n    else:\n        return w2[0] + add_chars(w1, w2[1:])\n</code></pre>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part1/#lecture-11-data-abstraction","title":"Lecture 11 Data Abstraction","text":""},{"location":"Notes%20of%20Courses/CS61A/CS61A_part1/#1_17","title":"1","text":"<p>\"Unpacking\" a list</p> <p></p>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part1/#2_7","title":"2","text":"<p>\u62bd\u8c61\u601d\u60f3</p> <p></p> <p></p> <p>... you should know that when you're writing one part of a large program, that it should use the level abstraction appropriate to what you're trying to do,</p> <p>and the higher you stay up, without crossing of these boundaries, the easier it will be to change your program</p> <p>\u8981 \u5411\u4e0b\u89e3\u6784\uff0c\u548c \u5411\u4e0a\u62bd\u8c61</p>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part1/#3_6","title":"3","text":"<p>\u5b57\u5178\u53ef\u4ee5\u901a\u8fc7\u7279\u5b9a\u7684\u5217\u8868\u6784\u9020( \u4e8c\u5143\u5143\u7ec4 \u7ec4\u6210\u7684\u5217\u8868)</p>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part1/#4_4","title":"4","text":"<p>\u5b57\u5178\u4e5f\u6709\u63a8\u5bfc\u5f0f</p> <p></p>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part1/#lecture-11-qa","title":"Lecture 11 Q&amp;A","text":""},{"location":"Notes%20of%20Courses/CS61A/CS61A_part1/#1_18","title":"1","text":"<p>\u62bd\u8c61\u53ef\u4ee5\u4f7f\u5f97\u4fee\u6539\u67d0\u4e00\u5c42(layer)\u4ee3\u7801\u65f6\u5e26\u6765\u7684\u51b2\u51fb/\u5f71\u54cd\u88ab\u9694\u79bb(isolate the impact)\uff0c\u6709\u65f6\u53ef\u4ee5\u4f7f\u5f97\u4fee\u6539\u6240\u4ea7\u751f\u7684\u5f71\u54cd\u53ea\u5728\u8fd9\u4e00\u5c42\u4e0a\u3002</p> <p>\u51b2\u51fb\u88ab\u9694\u79bb\u7684\u4f8b\u5b50\uff1apython dictionary\u7684\u5e95\u5c42\u4ee3\u7801\u7ecf\u5e38\u6539\u53d8\uff0c\u4f46\u5e76\u4e0d\u5f71\u54cdpython\u4e2d\u7684\u4f7f\u7528</p>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part1/#2_8","title":"2","text":"<p>\u6dfb\u52a0\u5224\u65ad\u529f\u80fd\u53ef\u4ee5\u8fd9\u6837\u8bbe\u8ba1</p> <p></p>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part1/#project-cats","title":"Project Cats","text":"<p>Info</p> <p>\u9700\u8981\u4e86\u89e3 Lec 12 Trees \u4e2d\u7684\u6570\u636e\u62bd\u8c61(data abstraction)\u90e8\u5206\u7684\u5185\u5bb9</p>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part1/#1_19","title":"1","text":"<p>Problem 5 \u4e2d\u4f7f\u7528 <code>min()</code> (\u5e8f\u5217\u805a\u5408\u51fd\u6570)\u4f1a\u5f88\u65b9\u4fbf\uff0c</p> <p>\u4f46\u8981\u6ce8\u610f \u4f7f\u7528 <code>key</code> \u53c2\u6570\u4f20\u5165\u5224\u65ad\u51fd\u6570\u65f6\uff0c\u9700\u8981\u5199\u4e0a <code>key=</code> </p>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part1/#2_9","title":"2","text":"<p>Problem 9 \u4e2d\u5c1d\u8bd5\u4e86\u5217\u8868\u63a8\u5bfc\u5f0f\u7684\u5d4c\u5957\u4f7f\u7528</p> <pre><code>def time_per_word(times_per_player, words):\n    \"\"\"Given timing data, return a game data abstraction, which contains a list\n    of words and the amount of time each player took to type each word.\n\n    Arguments:\n        times_per_player: A list of lists of timestamps including the time\n                          the player started typing, followed by the time\n                          the player finished typing each word.\n        words: a list of words, in the order they are typed.\n    \"\"\"\n    # BEGIN PROBLEM 9\n    \"*** YOUR CODE HERE ***\"\n    times = [[timestamp[i + 1] - timestamp[i] for i in range(len(timestamp) - 1)] for timestamp in times_per_player]\n    return game(words, times)\n    # END PROBLEM 9\n</code></pre>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part1/#3_7","title":"3","text":"<p>Problem 10 \u4e2d\u5982\u679c\u8981\u628a\u4e00\u4e2astring\u52a0\u5165(\u4f7f\u7528 <code>+</code> \u8fd0\u7b97\u7b26)\u5230list\u4e2d\uff0c\u4e0d\u80fd\u76f4\u63a5\u52a0string (\u5426\u5219\u4f1a\u628a\u53ea\u542b\u6709\u5355\u4e2a\u5b57\u6bcd\u7684string\u4f5c\u4e3a\u5143\u7d20\u52a0\u5165\u5230\u5217\u8868\u4e2d)\uff0c\u5e94\u8be5 <code>+ [str]</code> \u6216 <code>+= [str]</code> (\u521b\u5efa\u4e00\u4e2a\u542b\u8be5\u5b57\u7b26\u4e32\u7684\u5217\u8868)</p>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part1/#4_5","title":"4","text":"<p>Problem 6</p> <p>\u770b\u4e86hint\u89c6\u9891\u540e\uff0c\u5c06\u539f\u672c\u9700\u8981\u501f\u52a9\u5185\u90e8helper\u51fd\u6570\u7684\u5199\u6cd5\u6539\u6210\u4e86\u4e0d\u9700\u8981helper\u7684\uff0c\u5173\u952e\u4e4b\u5904\u5728\u4e8e \u60f3\u5230\u4e86limit\u53ef\u4ee5\u7528\u4e8e\u8ba1\u6570(\u62ff\u6765\u51cf)</p> <pre><code>def shifty_shifts(start, goal, limit):\n    \"\"\"A diff function for autocorrect that determines how many letters\n    in START need to be substituted to create GOAL, then adds the difference in\n    their lengths.\n    \"\"\"\n    # BEGIN PROBLEM 6\n    # assert False, 'Remove this line'\n    # def helper(start, goal, count):\n    #     if count &gt; limit:\n    #         return count\n    #     # elif not start:\n    #     #     return count + len(goal)\n    #     # elif not goal:\n    #     #     return count + len(start)\n    #     elif not start or not goal:\n    #         return count + len(start + goal)\n    #     else:\n    #         return helper(start[1:], goal[1:], count if start[0] == goal[0] else count + 1)\n    # return helper(start, goal, 0)\n\n    # if limit == 0:\n    #     return 1\n    if limit &lt; 0:\n        return 0\n    elif not start or not goal:\n        return len(start + goal)\n    elif start[0] == goal[0]:\n        return shifty_shifts(start[1:], goal[1:], limit)\n    else:\n        return 1 + shifty_shifts(start[1:], goal[1:], limit - 1)\n    # END PROBLEM 6\n</code></pre> <p>\u4e0b\u56fe\u6709\u4e00\u70b9\u542f\u53d1\u4f5c\u7528(\u5bf9problem 7\u5982\u4f55\u627e\u5230\u964d\u89e3\u7684\u65b9\u6cd5\u4e5f\u6709\u4e00\u5b9a\u5e2e\u52a9)</p> <p></p>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part1/#5_3","title":"5","text":"<p>Problem 7</p> <p>\u7531\u63d0\u793a\u89c6\u9891\u4e2dproblem 6\u4e2d\u7684\uff0c\u52a9\u6559\u964d\u89e3 \u66ff\u6362 \u64cd\u4f5c\u7684\u65b9\u6cd5\u5982\u4e0b\uff1a</p> <pre><code>#   \"range\", \"rungs\"  2\n#    \"ange\",  \"ungs\"  2\n#     \"nge\",   \"ngs\"  1\n#      \"ge\",    \"gs\"  1\n#       \"e\",     \"s\"  1\n#        \"\",      \"\"  0\n</code></pre> <p></p> <p>\u5373\u964d\u89e3\u7684\u5173\u952e\u4e00\u6b65\u4e3a\uff1a</p> <pre><code>#   \"range\", \"rungs\"  1 + x\n#    \"ange\",  \"ungs\"  1 + x\n#     \"nge\",   \"ngs\"  x\n#       ...,     ...  ...\n</code></pre> <p>\u90a3\u4e48\uff0c\u7c7b\u4f3c\u7684\uff0c \u6dfb\u52a0 \u64cd\u4f5c\u7684\u964d\u89e3\uff0c\u62ff <code>cats</code> \u4f5c\u4e3astart \u4ee5\u53ca <code>scat</code> \u4f5c\u4e3agoal \u4e3e\u4f8b\uff0c\u53ef\u7406\u89e3\u4e3a\uff1a</p> <p>cats\u5728\u5f00\u5934\u6dfb\u52a0\u4e00\u4e2as\uff0c\u53d8\u6210scats (\u6dfb\u52a0\u7684\u5b57\u6bcd\u4e00\u5b9a\u662fgoal\u7684\u7b2c\u4e00\u4e2a\u5b57\u6bcd)\uff0c</p> <p>\u90a3\u4e48\u9700\u8981\u5224\u65ad\u7684\u90e8\u5206\uff0c\u5c31\u4ece cats \u3001 scat\uff0c\u53d8\u6210\u4e86 s cats \u3001 s cat</p> <p>\u5219\u964d\u89e3\u7684\u5173\u952e\u4e00\u6b65\u5c31\u5e94\u8be5\u662f\uff1a</p> <pre><code>#       ...,     ...  ...\n#    \"cats\",  \"scat\"  1 + x\n#    \"cats\",   \"cat\"  x\n#       ...,     ...  ...\n</code></pre> <p>\u5219\u540c\u7406\uff0c\u5220\u9664 \u64cd\u4f5c\u7684\u964d\u89e3\uff0c\u62ff ckiteus \u3001 kittens \u4e3e\u4f8b\uff0c</p> <p>\u64cd\u4f5c\u524d\u540e\uff0c\u9700\u8981\u5224\u65ad\u7684\u90e8\u5206\uff0c\u4ece ckiteus \u3001 kittens\uff0c\u53d8\u6210\u4e86 kiteus \u3001 kittens</p> <p>\u5219\u964d\u89e3\u7684\u5173\u952e\u4e00\u6b65\u5c31\u5e94\u8be5\u662f\uff1a</p> <pre><code>#          ...,        ...  ...\n#    \"ckiteus\",  \"kittens\"  1 + x\n#     \"kiteus\",  \"kittens\"  x\n#          ...,        ...  ...\n</code></pre> <p>\u5219\u6700\u540e\u6839\u636e\u6a21\u677f\u4fee\u6539\u7684\u4ee3\u7801\u4e3a\uff1a</p> <pre><code>def pawssible_patches(start, goal, limit):\n    \"\"\"A diff function that computes the edit distance from START to GOAL.\"\"\"\n    # assert False, 'Remove this line'\n\n    if limit &lt; 0: # Fill in the condition\n        # BEGIN\n        \"*** YOUR CODE HERE ***\"\n        return 0\n        # END\n\n    elif not start or not goal: # Feel free to remove or add additional cases\n        # BEGIN\n        \"*** YOUR CODE HERE ***\"\n        return len(start + goal)\n        # END\n\n    elif start[0] == goal[0]:\n        return pawssible_patches(start[1:], goal[1:], limit)\n    else:\n        add_diff = 1 + pawssible_patches(start, goal[1:], limit - 1) # ... # Fill in these lines\n        remove_diff = 1 + pawssible_patches(start[1:], goal, limit - 1) # ...\n        substitute_diff = 1 + pawssible_patches(start[1:], goal[1:], limit - 1) # ...\n        # BEGIN\n        \"*** YOUR CODE HERE ***\"\n        return min(add_diff, remove_diff, substitute_diff)\n        # END\n</code></pre> <p>\u6700\u540e\u53d1\u73b0\u601d\u8def\u4e0e\u52a9\u6559\u63d0\u793a\u7684\u4e00\u6837</p> <p></p> <p>Quote</p> <p>...(\"ats\" and \"cats\") we see thats adding one letter to the front, is actually the exact same as just chopping off letter from the front of the second word. so what do I mean by that, this is what I mean, I mean if I add one letter to the front, I might as well just be taking off one letter from the back, so instead of adding C to this word I can just say, well I'm just going to take off the first letter of whatever this word is, because I know that, if I add that letter to this word, then I know that it's going to be the correct letter, so I don't even need to add it, I can just go ahead and chop off the letter from the second word, and I know that it'll be okay. right, so doing comparing cats and cats, is the exact same thing as comparing ats and ats, there will be no more difference. so that's the add example right there...</p> <p>...the last is the substitute example(\"hello\" and \"mello\"). so this should be pretty familiar from our previous problem. remember for the previous problem we just took out the first letter of both, so it said that if they were different, then we're just gonna take them all out, and say that we had one edit distance, we had one substitution needed. and so you see that, substituting the first letter to an M to make it match the second, is the exact same thing as just taking out both letters. we don't care what they are, we see that they're different, we're just gonna take out both and call it a day. and so we see that we end with ello and ello, and then we're done...</p>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part1/#6_3","title":"6","text":"<p>\u5b57\u5178\u53ef\u4ee5\u8fd9\u6837\u5199\uff0c\u66f4\u6e05\u6670</p> <pre><code>report = {\n    \"id\": user_id,\n    \"progress\": progress,\n}\n</code></pre> <p>(\u6700\u540e\u4e00\u4e2a\u9017\u53f7\u6709\u6ca1\u6709\u4e0d\u5f71\u54cd)</p> <p></p>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part1/#7","title":"7","text":"<p>\u4e00\u4e2a\u5c0f\u53d1\u73b0</p> <p><code>...</code> \u53ef\u4ee5\u8d4b\u503c\u7ed9\u53d8\u91cf\uff0c\u5982</p> <pre><code>a = \n</code></pre> <p>\u4f1a\u62a5\u9519\uff0c</p> <p>\u800c</p> <pre><code>a = ...\n</code></pre> <p>\u5219\u4e0d\u4f1a\u62a5\u9519</p>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part1/#lecture-12-trees","title":"Lecture 12 Trees","text":""},{"location":"Notes%20of%20Courses/CS61A/CS61A_part1/#1_20","title":"1","text":"<p><code>[...]</code> \u4e2d\u62ec\u53f7/\u65b9\u62ec\u53f7(square brackets)\u4e2d\u7684\u5185\u5bb9\u8868\u793a\u4e3a\u53ef\u9009\u7684(optional)</p>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part1/#2_10","title":"2","text":"<p>\u5e8f\u5217\u805a\u5408\u51fd\u6570(Sequence Aggregation)</p> <p></p> <p><code>sum()</code> \u51fd\u6570\uff0c\u53ef\u4ee5\u7528\u4e8e\u9664\u5b57\u7b26\u4e32\u4ee5\u5916\u7684\u5e8f\u8868\uff0c\u5c06\u5e8f\u8868\u4e2d\u7684\u5143\u7d20\u4ee5\u5176\u5bf9\u5e94\u7684 <code>+</code> \u6cd5\u6c42\u548c\u5e76\u8fd4\u56de(\u9ed8\u8ba4\u521d\u59cb\u503c\u4e3a0\uff0c\u5982\u679c\u662f\u5176\u4ed6\u7c7b\u578b\uff0c\u9700\u8981\u8bbe\u7f6e\u521d\u59cb\u503c\uff0c\u5982\u5217\u8868\u9700\u8981\u4f20\u5165\u7a7a\u5217\u8868 <code>[]</code> \u5ea7\u4f4d <code>start</code> \u53c2\u6570)</p> <p></p> <p><code>max()</code> \u51fd\u6570\uff0c\u53ef\u4ee5\u8fd4\u56de\u6700\u5927\u503c\uff0c\u6216\u8005\u662f\u4f7fkey\u51fd\u6570\u8fd4\u56de\u503c\u6700\u5927\u7684\u503c(\u81ea\u53d8\u91cf)</p> <p></p> <p>\u5bf9\u5e94\u7684\u8fd8\u6709 <code>min()</code> \u548c <code>any()</code></p>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part1/#3_8","title":"3","text":"<p>\u6811\u62bd\u8c61(Tree Abstaction)\u7684\u5b9e\u73b0</p> <p></p>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part1/#4_6","title":"4","text":"<p>\u9012\u5f52\u5728\u6811\u4e2d\u7684\u8fd0\u7528\uff0c</p> <p>\u8981\u76f4\u63a5\u5047\u60f3\u51fd\u6570\u80fd\u8fd4\u56de\u6240\u9700\u8981\u8fd4\u56de\u7684\u4e1c\u897f(\u5373\u5047\u60f3\u8fd4\u56de\u7684\u4e1c\u897f\u662f\u5df2\u77e5\u7684)\uff0c\u7136\u540e\u76f4\u63a5\u5728\u51fd\u6570\u5185\u90e8\u53bb\u76f4\u63a5\u4f7f\u7528\u8fd9\u4e2a\u8fd4\u56de\u7684\u4e1c\u897f\uff0c</p> <p>\u5e76\u4e14\u9700\u8981\u8bb0\u4f4f\u6811\u7684\u5b69\u5b50\u4e5f\u662f\u6811\u3002</p> <p>\u4f8b\u5982</p> <pre><code>def count_leaves(t):\n    \"\"\"Count the leaves of a tree.\"\"\"\n    if is_leaf(t):\n        return 1\n    else:\n        branch_counts = [count_leaves(b) for b in branches(t)]\n        return sum(branch_counts)\n</code></pre> <p>Hint: \u5047\u60f3\u8be5\u51fd\u6570\u4e00\u5b9a\u80fd\u8fd4\u56de\u6811\u7684\u53f6\u5b50\u6570(\u5373\u5047\u60f3\u5df2\u77e5\u5b50\u6811\u53f6\u5b50\u6570)\uff0c\u7136\u540e\u5bf9\u5b50\u6811\u7684\u53f6\u5b50\u6570\u548c\u5373\u5f97\u5230\u672c\u6811\u7684\u53f6\u5b50\u6570</p> <pre><code>def leaves(tree):\n    \"\"\"Return a list containing the leaves labels of tree.\n\n    &gt;&gt;&gt; leaves(fib_tree(5))\n    [1, 0, 1, 0, 1, 1, 0, 1]\n    \"\"\"\n    if is_leaf(tree):\n        return [label(tree)]\n    else:\n        return sum([leaves(b) for b in branches(tree)], [])\n</code></pre> <p>Hint: \u5047\u60f3\u8be5\u51fd\u6570\u80fd\u8fd4\u56de \u4e00\u4e2a\u542b \u6811\u7684\u6240\u6709\u53f6\u5b50\u7684\u503c/\u6807\u7b7e \u7684list </p> <pre><code>def increment_leaves(t):\n    \"\"\"Return a tree like t but with leaf labels incremented.\"\"\"\n    if is_leaf(t):\n        return tree(label(t) + 1)\n    else:\n        bs = [increment_leaves(b) for b in branches(t)]\n        return tree(label(t), bs)\n</code></pre> <pre><code>def increment(t):\n    \"\"\"Return a tree like t but with all labels incremented\"\"\"\n    return tree(label(t) + 1, [increment(b) for b in branches(t)])\n</code></pre> <p>Hint: \u5047\u60f3\u80fd\u8fd4\u56de\u4e00\u4e2a ... \u7684\u6811</p> <pre><code>def fib_tree(n):\n    if n &lt;= 1:\n        return tree(n)\n    else:\n        left, right = fib_tree(n - 2), fib_tree(n - 1)\n        return tree(label(left) + label(right), [left, right])\n</code></pre> <p>Hint\u540c\u4e0a</p>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part1/#5_4","title":"5","text":"<p>\u8fd8\u6709\u53e6\u4e00\u79cd\u4e0d\u4f7f\u7528\u51fd\u6570\u672c\u8eab\u8fd4\u56de\u7684\u503c\u7684\u9012\u5f52\u51fd\u6570</p> <p></p> <pre><code>def fact(n):\n    return fact_times(n, 1)\n\ndef fact_times(n, k):\n    \"\"\"Return k * n * (n - 1) * ... * 1\"\"\"\n    if n == 0:\n        return k\n    else:\n        return fact_times(n - 1, k * n)\n</code></pre> <p></p> <p>(\u6253\u5370\u6bcf\u4e2a\u53f6\u5b50(\u4ece\u6839\u5f00\u59cb)\u7684\u8def\u5f84)</p> <pre><code>def print_sums(t, so_far):\n    so_far = so_far + label(t)\n    if is_leaf(t):\n        print(so_far)\n    else:\n        for b in branches(t):\n            print_sums(b, so_far)\n</code></pre> <p>\u5e94\u8be5\u662f\u5c06\u8981\u8fed\u4ee3\u7684\u53d8\u91cf\u4f5c\u4e3a\u53c2\u6570\u4f20\u5165\u51fd\u6570\u4e2d</p>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part1/#lecture-12-qa","title":"Lecture 12 Q&amp;A","text":""},{"location":"Notes%20of%20Courses/CS61A/CS61A_part1/#1_21","title":"1","text":"<p>11:06</p> <p>\u5173\u4e8elab04 Q6</p> <p>Quote</p> <p>...by the way this is this is sort of a classic recursion problem, where you can see, you know, you think about the problem as what if i have a, you know, just there's one letter in each, and those match, what do i do, right, and then what do you do otherwise. it's, it's that classic recursion where you, you sort of simplify the problem to the simplest possible cases. the base case, one of them is empty, and then here there's there's sort of like two base cases almost, not quite because that second one is a recursion but it's that really really simple case, and then you build in the complexity after that. um, so that i, that's what's sort of really cool about these recursive solutions...</p> <p>...\u987a\u4fbf\u8bf4\u4e00\u53e5\uff0c\u8fd9\u662f\u4e00\u4e2a\u7ecf\u5178\u7684\u9012\u5f52\u95ee\u9898\uff0c\u4f60\u53ef\u4ee5\u770b\u5230\uff0c\u4f60\u77e5\u9053\uff0c\u4f60\u8ba4\u4e3a\u8fd9\u4e2a\u95ee\u9898\u662f\uff0c\u5982\u679c\u6211\u6709\u4e00\u4e2a\uff0c\u4f60\u77e5\u9053\u7684\uff0c\u6bcf\u4e2a\u53ea\u6709\u4e00\u4e2a\u5b57\u6bcd\uff0c\u8fd9\u4e9b\u5339\u914d\uff0c\u6211\u8be5\u600e\u4e48\u505a\uff0c\u5bf9\u5427\uff0c\u7136\u540e\u4f60\u8be5\u600e\u4e48\u505a\u3002\u8fd9\u662f\u4e00\u4e2a\u7ecf\u5178\u7684\u9012\u5f52\uff0c\u4f60\u53ef\u4ee5\u5c06\u95ee\u9898\u7b80\u5316\u4e3a\u6700\u7b80\u5355\u7684\u60c5\u51b5\u3002\u57fa\u672c\u60c5\u51b5\uff0c\u5176\u4e2d\u4e00\u4e2a\u662f\u7a7a\u7684\uff0c\u7136\u540e\u8fd9\u91cc\u51e0\u4e4e\u6709\u4e24\u4e2a\u57fa\u672c\u60c5\u51b5\uff0c\u4e0d\u5b8c\u5168\u662f\u56e0\u4e3a\u7b2c\u4e8c\u4e2a\u662f\u9012\u5f52\uff0c\u4f46\u8fd9\u662f\u4e00\u4e2a\u975e\u5e38\u7b80\u5355\u7684\u60c5\u51b5\uff0c\u7136\u540e\u4f60\u6784\u5efa\u590d\u6742\u5ea6\u3002\u55ef\uff0c\u6240\u4ee5\u6211\uff0c\u8fd9\u5c31\u662f\u8fd9\u4e9b\u9012\u5f52\u89e3\u51b3\u65b9\u6848\u771f\u6b63\u9177\u7684\u5730\u65b9...</p>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part1/#2_11","title":"2","text":"<p>18:16</p> <p>\u5173\u4e8ehw02 Q5\uff0c\u533f\u540d\u51fd\u6570\u7684\u9012\u5f52</p> <p>Quote</p> <p>John:</p> <pre><code>lambda n: 1 if n == 1 else n * fact(n - 1)\n</code></pre> <p>...uh how would we give this thing a different name, well, instead of assigning we could have it be fact, </p> <pre><code>lambda fact: lambda n: 1 if n == 1 else n * fact(n - 1)\n</code></pre> <p>but then, how would we like, pass that in, i guess instead of putting it here, maybe, maybe the best place to put it is here,</p> <pre><code>lambda n, fact: 1 if n == 1 else n * fact(n - 1)\n</code></pre> <p>so, basically in order to run this, we need an n and we need factorial. i'll just let that sink in, if factorial is not already defined, then somebody needs to pass it in, in order for us to call it. i'm gonna need a little bit more space than this i'm afraid. now, that we have a function that takes n and factorial. we need to be a little bit careful, we want this to be our factorial function, but it takes two arguments, and here we're calling it with only one argument, so that seems like a mismatch. what should be the second argument every time we call fact, well it should be the same function again, that's kind of how we get that recursive structure,</p> <pre><code>lambda n, fact: 1 if n == 1 else n * fact(n - 1, fact)\n</code></pre> <p>is that every time we call this thing that takes in a number and the function that we're going to call recursively, it needs to be called on a new number and the function that we're going to call recursively. so we've actually made some progress even though all we've done is kind of like move a name in here, and uh, pass it around. the last part is that we need to figure out, how to write a function, that takes only n, and somehow uh, calls this one instead,</p> <pre><code>lambda n: (lambda n, fact: 1 if n == 1 else n * fact(n - 1, fact))\n</code></pre> <p>and that's actually not so bad, this says, uh, give me a function, and call that function, on both n and itself.</p> <pre><code>lambda n: (lambda f: f(n, f))(lambda n, fact: 1 if n == 1 else n * fact(n - 1, fact))\n</code></pre> <p>so if i have a function, and i call it on n and itself, where n comes from here, now i just need to know which function i'm supposed to be calling on n in itself. and the answer is, this guy (<code>(lambda n, fact: 1 if n == 1 else n * fact(n - 1, fact))</code>).</p> <pre><code>g = lambda n: (lambda f: f(n, f))(lambda n, fact: 1 if n == 1 else n * fact(n - 1, fact))\n</code></pre> <p>so let's see what g does now. g computes n factorial, if we really wanted to get rid of that assignment statement, </p> <pre><code>print((lambda n: (lambda f: f(n, f))(lambda n, fact: 1 if n == 1 else n * fact(n - 1, fact)))(4))\n</code></pre> <p>then we could compute four factorial this way, by taking this function and calling it on four, and then, hopefully, if everything went right, we will have printed four factorial, or five factorial, or whatever. so, what was the key moments in figuring this out, one was, if we can't have fact defined already, then we have to pass it in as an argument, and the second was, if we have a function that takes two arguments, and we really want a function that takes one argument, then we should write a function that takes one argument, and calls the function that takes two arguments. and, then, the last part really is kind of a trick, which is to say like if you had a function and an argument, you would then call the function on the argument in itself, this is basically how you create recursion, without using assignment statements is this little part right here...</p> <p> </p> <p>Hany:</p> <p>...i i think john's right here. by the way, look there's a couple of things that you've seen before, essentially there's the helper function in here. you have a function that, uh, only takes one parameter and, you really need to pass two, so you put a helper function in, that's basically what you have here with the lambda. um, you've got sort of the notion of recursion and then there's just that little trick there, um, which you see with, uh, this, uh, lambda f of f of nf. so don't, don't get too worried if you didn't see that obvi, it obvious, i don't think it's at all obvious actually.</p> <p> </p> <p>John:</p> <p>one thing that's exciting about this while it's not obvious at all, is that it allows you to create iteration out of just functions, like of course there's no assignment here, there's also no while statement or for statement here. but we are doing something repetitively, and, so, um, this is kind of, uh, this idea right here, is a building block for the claim, that once you can define functions you can kind of write any program that you want, you can perform any computation, and you might wonder was that really true, like don't i need a while statement or a for statement. it turns out technically you don't, that does not mean we should get rid of while statements and for statements, they're a lot more readable than this i think, but, um, they're not strictly necessary in order to perform interesting computations.</p> <p> </p> <p>Hany:</p> <p>yes, and some in the chat just pointed out scheme and lisp is this is sort of the premise of these functional programming languages, that don't have looping, explicit looping constructs as you do everything, with these types of constructs, and it's a little bit mind-bending, but, it turns out it's expressive enough...</p> <p>John:</p> <pre><code>lambda n: 1 if n == 1 else n * fact(n - 1)\n</code></pre> <p>...\u5443\uff0c\u6211\u4eec\u600e\u4e48\u7ed9\u8fd9\u4e2a\u4e1c\u897f\u53d6\u4e00\u4e2a\u4e0d\u540c\u7684\u540d\u5b57\u5462\uff0c\u597d\u5427\uff0c\u4e0e\u5176\u6307\u5b9a\uff0c\u6211\u4eec\u53ef\u4ee5\u8ba9\u5b83\u6210\u4e3afact\uff0c</p> <pre><code>lambda fact: lambda n: 1 if n == 1 else n * fact(n - 1)\n</code></pre> <p>\u4f46\u662f\uff0c\u6211\u4eec\u4f1a\u600e\u4e48\u60f3\uff0c\u628a\u5b83\u4f20\u8fdb\u6765\uff0c\u6211\u60f3\u4e0e\u5176\u628a\u5b83\u653e\u5728\u8fd9\u91cc\uff0c\u4e5f\u8bb8\uff0c\u4e5f\u8bb8\u6700\u597d\u7684\u5730\u65b9\u653e\u5728\u8fd9\u91cc\uff0c</p> <pre><code>lambda n, fact: 1 if n == 1 else n * fact(n - 1)\n</code></pre> <p>\u6240\u4ee5\uff0c\u57fa\u672c\u4e0a\uff0c\u4e3a\u4e86\u8fd0\u884c\u8fd9\u4e2a\uff0c\u6211\u4eec\u9700\u8981\u4e00\u4e2an\uff0c\u6211\u4eec\u9700\u8981fact\u3002\u6211\u4f1a\u8ba9\u5b83\u6c89\u4e0b\u53bb\uff0c\u5982\u679cfact\u8fd8\u6ca1\u6709\u5b9a\u4e49\uff0c\u90a3\u4e48\u9700\u8981\u6709\u4eba\u628a\u5b83\u4f20\u8fdb\u6765\uff0c\u8fd9\u6837\u6211\u4eec\u624d\u80fd\u8c03\u7528\u5b83\u3002\u6050\u6015\u6211\u9700\u8981\u66f4\u591a\u7684\u7a7a\u95f4\u3002\u73b0\u5728\uff0c\u6211\u4eec\u6709\u4e00\u4e2a\u51fd\u6570\uff0c\u5b83\u53d6n\u548cfact\u3002\u6211\u4eec\u9700\u8981\u5c0f\u5fc3\u4e00\u70b9\uff0c\u6211\u4eec\u5e0c\u671b\u8fd9\u662f\u6211\u4eec\u7684\u9636\u4e58\u51fd\u6570\uff0c\u4f46\u5b83\u9700\u8981\u4e24\u4e2a\u53c2\u6570\uff0c\u800c\u8fd9\u91cc\u6211\u4eec\u53ea\u7528\u4e00\u4e2a\u53c2\u6570\u6765\u8c03\u7528\u5b83\uff0c\u6240\u4ee5\u8fd9\u770b\u8d77\u6765\u4e0d\u5339\u914d\u3002\u6bcf\u6b21\u6211\u4eec\u8c03\u7528fact\u65f6\uff0c\u7b2c\u4e8c\u4e2a\u53c2\u6570\u5e94\u8be5\u662f\u4ec0\u4e48\uff0c\u5b83\u5e94\u8be5\u662f\u540c\u4e00\u4e2a\u51fd\u6570\uff0c\u8fd9\u5c31\u662f\u6211\u4eec\u5f97\u5230\u9012\u5f52\u7ed3\u6784\u7684\u65b9\u5f0f\uff0c</p> <pre><code>lambda n, fact: 1 if n == 1 else n * fact(n - 1, fact)\n</code></pre> <p>\u6bcf\u6b21\u6211\u4eec\u8c03\u7528\u8fd9\u4e2a\u5305\u542b\u4e00\u4e2a\u6570\u5b57\u548c\u6211\u4eec\u8981\u9012\u5f52\u8c03\u7528\u7684\u51fd\u6570\u7684\u4e1c\u897f\u65f6\uff0c\u90fd\u9700\u8981\u5bf9\u4e00\u4e2a\u65b0\u7684\u6570\u5b57\u548c\u6211\u4eec\u5c06\u9012\u5f52\u8c03\u7528\u7684\u529f\u80fd\u8fdb\u884c\u8c03\u7528\u3002\u6240\u4ee5\u6211\u4eec\u5b9e\u9645\u4e0a\u5df2\u7ecf\u53d6\u5f97\u4e86\u4e00\u4e9b\u8fdb\u5c55\uff0c\u5c3d\u7ba1\u6211\u4eec\u6240\u505a\u7684\u53ea\u662f\u628a\u4e00\u4e2a\u540d\u5b57\u79fb\u5230\u8fd9\u91cc\uff0c\u7136\u540e\u628a\u5b83\u4f20\u6765\u4f20\u53bb\u3002\u6700\u540e\u4e00\u90e8\u5206\u662f\uff0c\u6211\u4eec\u9700\u8981\u5f04\u6e05\u695a\uff0c\u5982\u4f55\u7f16\u5199\u4e00\u4e2a\u53ea\u9700\u8981n\u7684\u51fd\u6570\uff0c\u5e76\u4ee5\u67d0\u79cd\u65b9\u5f0f\u8c03\u7528\u8fd9\u4e2a\u51fd\u6570\uff0c</p> <pre><code>lambda n: (lambda n, fact: 1 if n == 1 else n * fact(n - 1, fact))\n</code></pre> <p>\u8fd9\u5176\u5b9e\u8fd8\u4e0d\u9519\uff0c\u8fd9\u8bf4\uff0c\u7ed9\u6211\u4e00\u4e2a\u51fd\u6570\uff0c\u5e76\u8c03\u7528\u8fd9\u4e2a\u51fd\u6570\uff0c\u5bf9n\u548c\u5b83\u672c\u8eab\u3002</p> <pre><code>lambda n: (lambda f: f(n, f))(lambda n, fact: 1 if n == 1 else n * fact(n - 1, fact))\n</code></pre> <p>\u5982\u679c\u6211\u6709\u4e00\u4e2a\u51fd\u6570\uff0c\u6211\u5728n\u548c\u5b83\u672c\u8eab\u4e0a\u8c03\u7528\u5b83\uff0cn\u6765\u81ea\u8fd9\u91cc\uff0c\u73b0\u5728\u6211\u53ea\u9700\u8981\u77e5\u9053\u6211\u5e94\u8be5\u5728n\u672c\u8eab\u4e0a\u8c03\u7528\u54ea\u4e2a\u51fd\u6570\u3002\u7b54\u6848\u662f\uff0c\u8fd9\u5bb6\u4f19 (<code>(lambda n, fact: 1 if n == 1 else n * fact(n - 1, fact))</code>)\u3002</p> <pre><code>g = lambda n: (lambda f: f(n, f))(lambda n, fact: 1 if n == 1 else n * fact(n - 1, fact))\n</code></pre> <p>\u8ba9\u6211\u4eec\u770b\u770bg\u73b0\u5728\u505a\u4ec0\u4e48\u3002g\u8ba1\u7b97n\u9636\u4e58\uff0c\u5982\u679c\u6211\u4eec\u771f\u7684\u60f3\u53bb\u6389\u8d4b\u503c\u8bed\u53e5\uff0c</p> <pre><code>print((lambda n: (lambda f: f(n, f))(lambda n, fact: 1 if n == 1 else n * fact(n - 1, fact)))(4))\n</code></pre> <p>\u7136\u540e\u6211\u4eec\u53ef\u4ee5\u7528\u8fd9\u79cd\u65b9\u5f0f\u8ba1\u7b974\u7684\u9636\u4e58\uff0c\u901a\u8fc7\u53d6\u8fd9\u4e2a\u51fd\u6570\u5e76\u57284\u4e0a\u8c03\u7528\u5b83\uff0c\u7136\u540e\uff0c\u5982\u679c\u4e00\u5207\u987a\u5229\uff0c\u6211\u4eec\u5c06\u6253\u5370\u51fa4\u7684\u9636\u4e58\uff0c\u62165\u7684\u9636\u4e58\uff0c\u6216\u5176\u4ed6\u4ec0\u4e48\u3002\u90a3\u4e48\uff0c\u5f04\u6e05\u695a\u8fd9\u4e00\u70b9\u7684\u5173\u952e\u65f6\u523b\u662f\u4ec0\u4e48\uff0c\u4e00\u4e2a\u662f\uff0c\u5982\u679c\u6211\u4eec\u8fd8\u4e0d\u80fd\u5b9a\u4e49fact\uff0c\u90a3\u4e48\u6211\u4eec\u5fc5\u987b\u5c06\u5176\u4f5c\u4e3a\u4e00\u4e2a\u53c2\u6570\u4f20\u9012\uff0c\u7b2c\u4e8c\u4e2a\u662f\uff0c\u6211\u4eec\u6709\u4e00\u4e2a\u63a5\u53d7\u4e24\u4e2a\u53c2\u6570\u7684\u51fd\u6570\uff0c\u6211\u4eec\u771f\u7684\u60f3\u8981\u4e00\u4e2a\u63a5\u53d7\u4e00\u4e2a\u53c2\u6570\u7684\u51fd\u5f0f\uff0c\u90a3\u4e48\u6211\u4eec\u5e94\u8be5\u5199\u4e00\u4e2a\u63a5\u53d7\u4e86\u4e00\u4e2a\u53c2\u6570\uff0c\u5e76\u8c03\u7528\u63a5\u53d7\u4e24\u4e2a\u53d8\u91cf\u7684\u51fd\u6570\u3002\u7136\u540e\uff0c\u6700\u540e\u4e00\u90e8\u5206\u5b9e\u9645\u4e0a\u662f\u4e00\u79cd\u6280\u5de7\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u5982\u679c\u4f60\u6709\u4e00\u4e2a\u51fd\u6570\u548c\u4e00\u4e2a\u53c2\u6570\uff0c\u4f60\u4f1a\u5728\u53c2\u6570\u672c\u8eab\u4e0a\u8c03\u7528\u51fd\u6570\uff0c\u8fd9\u57fa\u672c\u4e0a\u5c31\u662f\u4f60\u521b\u5efa\u9012\u5f52\u7684\u65b9\u6cd5\uff0c\u800c\u4e0d\u4f7f\u7528\u8d4b\u503c\u8bed\u53e5\uff0c\u8fd9\u5c31\u662f\u8fd9\u4e2a\u5c0f\u90e8\u5206...</p> <p> </p> <p>Hany:</p> <p>...\u6211\u89c9\u5f97\u7ea6\u7ff0\u662f\u5bf9\u7684\u3002\u987a\u4fbf\u8bf4\u4e00\u4e0b\uff0c\u8fd9\u91cc\u6709\u4f60\u4ee5\u524d\u89c1\u5230\u8fc7\u4e00\u4e9b\u4e1c\u897f\uff0c\u6700\u57fa\u672c\u5730 \u8fd9\u91cc\u6709helper\u51fd\u6570\u3002\u4f60\u6709\u4e00\u4e2a\u51fd\u6570\uff0c\u5443\uff0c\u53ea\u63a5\u53d7\u4e00\u4e2a\u53c2\u6570\uff0c\u4f60\u9700\u8981\u4f20\u9012\u4e24\u4e2a\uff0c\u6240\u4ee5\u4f60\u5728\u91cc\u9762\u653e\u4e86\u4e00\u4e2a\u8f85\u52a9\u51fd\u6570\uff0c\u8fd9\u57fa\u672c\u4e0a\u5c31\u662flambda\u3002\u55ef\uff0c\u4f60\u5df2\u7ecf\u6709\u4e86\u9012\u5f52\u7684\u6982\u5ff5\uff0c\u7136\u540e\u6709\u4e00\u4e2a\u5c0f\u6280\u5de7\uff0c\u4f60\u53ef\u4ee5\u770b\u5230\uff0c\u8fd9\u4e2a\uff0c\u8fd9\u4e2a\uff0clambda f of f of nf\u3002\u6240\u4ee5\u4e0d\u8981\uff0c\u4e0d\u8981\u592a\u62c5\u5fc3\uff0c\u5982\u679c\u4f60\u6ca1\u6709\u6e05\u695a\u5730\u770b\u5230\uff0c\u6211\u8ba4\u4e3a\u5b83\u5b9e\u9645\u4e0a\u4e00\u70b9\u4e5f\u4e0d\u660e\u663e\u3002</p> <p> </p> <p>John:</p> <p>\u867d\u7136\u8fd9\u4e00\u70b9\u5e76\u4e0d\u660e\u663e\uff0c\u4f46\u6709\u4e00\u70b9\u4ee4\u4eba\u5174\u594b\uff0c\u90a3\u5c31\u662f\u5b83\u5141\u8bb8\u4f60\u4ec5\u4ece\u51fd\u6570\u4e2d\u521b\u5efa\u8fed\u4ee3\uff0c\u5f53\u7136\u8fd9\u91cc\u6ca1\u6709\u8d4b\u503c\uff0c\u8fd9\u91cc\u4e5f\u6ca1\u6709while\u8bed\u53e5\u6216for\u8bed\u53e5\u3002\u4f46\u6211\u4eec\u5728\u91cd\u590d\u5730\u505a\u4e00\u4e9b\u4e8b\u60c5\uff0c\u8fd9\u662f\u4e00\u79cd\uff0c\u55ef\uff0c\u8fd9\u4e2a\u60f3\u6cd5\uff0c\u662f\u8fd9\u4e2a\u4e3b\u5f20\u7684\u4e00\u4e2a\u6784\u5efa\u5757\uff0c\u4e00\u65e6\u4f60\u5b9a\u4e49\u4e86\u51fd\u6570\uff0c\u4f60\u5c31\u53ef\u4ee5\u7f16\u5199\u4efb\u4f55\u4f60\u60f3\u8981\u7684\u7a0b\u5e8f\uff0c\u4f60\u53ef\u4ee5\u6267\u884c\u4efb\u4f55\u8ba1\u7b97\uff0c\u4f60\u53ef\u80fd\u4f1a\u60f3\uff0c\u8fd9\u771f\u7684\u662f\u771f\u7684\u5417\uff0c\u6bd4\u5982\u6211\u4e0d\u9700\u8981while\u8bed\u53e5\u6216for\u8bed\u53e5\u3002\u4e8b\u5b9e\u8bc1\u660e\uff0c\u4ece\u6280\u672f\u4e0a\u8bb2\uff0c\u4f60\u6ca1\u6709\uff0c\u8fd9\u5e76\u4e0d\u610f\u5473\u7740\u6211\u4eec\u5e94\u8be5\u53bb\u6389while\u8bed\u53e5\uff0c\u5bf9\u4e8e\u8bed\u53e5\uff0c\u5b83\u4eec\u6bd4\u8fd9\u66f4\u53ef\u8bfb\uff0c\u4f46\u662f\uff0c\u55ef\uff0c\u4e3a\u4e86\u6267\u884c\u6709\u8da3\u7684\u8ba1\u7b97\uff0c\u5b83\u4eec\u5e76\u4e0d\u662f\u4e25\u683c\u5fc5\u8981\u7684\u3002</p> <p> </p> <p>Hany:</p> <p>\u662f\u7684\uff0c\u804a\u5929\u4e2d\u7684\u4e00\u4e9b\u4eba\u521a\u521a\u6307\u51fascheme\u548clisp\uff0c\u8fd9\u662f\u8fd9\u4e9b\u51fd\u6570\u5f0f\u7f16\u7a0b\u8bed\u8a00\u7684\u524d\u63d0\uff0c\u5b83\u4eec\u5728\u505a\u4efb\u4f55\u4e8b\u60c5\u65f6\u90fd\u6ca1\u6709\u5faa\u73af\u3001\u663e\u5f0f\u7684\u5faa\u73af\u7ed3\u6784\uff0c\u6709\u8fd9\u4e9b\u7c7b\u578b\u7684\u7ed3\u6784\uff0c\u8fd9\u6709\u70b9\u8ba9\u4eba\u8d39\u89e3\uff0c\u4f46\u4e8b\u5b9e\u8bc1\u660e\u5b83\u8db3\u591f\u6709\u8868\u8fbe\u529b...</p> <p>\u6211\u7684\u7406\u89e3\u662f\uff0c\u533f\u540d\u51fd\u6570\u7684\u9012\u5f52\uff0c\u7531\u4e8e\u65e0\u6cd5\u58f0\u660e\u53d8\u91cf\u548c\u7ed9\u53d8\u91cf\u8d4b\u503c\uff0c\u6240\u4ee5\u9700\u8981\u5c06\u51fd\u6570\u4f5c\u4e3a\u53c2\u6570\u4f20\u5165\u533f\u540d\u51fd\u6570\uff0c\u7136\u540e\u518d\u5728\u5185\u90e8\u8c03\u7528\uff0c\u800c\u7531\u4e8e\u6b64\u65f6\u533f\u540d\u51fd\u6570\u6d4b\u53c2\u6570\u4e2d\u6709\u4e00\u4e2a\u51fd\u6570\u53c2\u6570\uff0c\u6240\u4ee5\u5728\u8c03\u7528\u4ee5\u53c2\u6570\u4f20\u5165\u7684\u51fd\u6570\u65f6\uff0c\u53c2\u6570\u4e5f\u8981\u4e0e\u81ea\u8eab\u76f8\u5339\u914d(\u5373\u52a0\u4e0a\u8be5\u51fd\u6570\u81ea\u8eab)\uff0c\u5982</p> <pre><code>lambda n, f: 1 if n == 1 else f(n, f)\n</code></pre> <p>\u4e0b\u4e00\u6b65\u6211\u7684\u7406\u89e3\u662f\uff0c\u7531\u4e8e\u9700\u8981\u53bb\u8c03\u7528\u533f\u540d\u51fd\u6570\u81ea\u8eab\uff0c\u800c\u53c8\u4e0d\u80fd\u8d4b\u503c\uff0c\u90a3\u4e48\u5c31\u667a\u80fd\u5c06\u51fd\u6570\u4f5c\u4e3a\u53c2\u6570\u4f20\u5165\u53e6\u4e00\u4e2a\u51fd\u6570\uff0c\u518d\u5728\u540e\u8005\u5185\u90e8\u8c03\u7528\u524d\u8005\uff0c\u5373</p> <pre><code>(lambda f: f(n, f))(lambda n, f: 1 if n == 1 else f(n, f))\n</code></pre> <p>\u6700\u540e\uff0c\u7531\u4e8en\u662f\u6700\u7ec8\u60f3\u8981\u8bbe\u7f6e\u7684\u53c2\u6570\uff0c\u6240\u4ee5\u5728\u6700\u5916\u9762\u6700\u540e\u5305\u4e0a\u4e00\u5c42</p> <pre><code>lambda n: (lambda f: f(n, f))(lambda n, f: 1 if n == 1 else f(n, f))\n</code></pre>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part1/#3_9","title":"3","text":"<p>23:52</p> <p>\u5173\u4e8electure 12\u6700\u540e\u63d0\u53ca\u7684\u9012\u5f52\u51fd\u6570\u7684\u6784\u5efa\u65b9\u5f0f</p> <p>Quote</p> <p></p> <pre><code>def fact(n):\n    if n == 0:\n        return 1\n    else:\n        return n * fact(n - 1)\n\ndef fact_times(n, k):\n    \"\"\"Return k times n factorial\n              k *     n * (n-1) * ... * 1\n    \"\"\"\n    if n == 0:\n        return k\n    else:\n        return fact_times(n - 1, k * n)\n</code></pre> <p>John:</p> <p>...yeah, so the reason we did something a little bit different here, was so that we could show an example, of a recursive function, that just called itself, without doing anything with it, so there kind of wasn't anything outside of the call, everything happened inside the call, where we subtracted one from n and we multiplied k by n. but we didn't like add anything or multiply anything afterwards, which was different than the original version of factorial, which did multiply the result of the recursive call by n. the original one looked like this, right, it was like if n equals zero return one, else return n times fact n minus one. so here we make the recursive call and then we like do some work afterwards, and that means the recursive call doesn't really know where it came from. it doesn't know anything about which factorial result you're constructing, whereas this one does. at the end, when you hit the base case, you have computed k times n factorial for whatever n in k you started with, and that is now named k, which is a little confusing, but that's how it goes sometimes with recursion. but the point is that the whole answer is, uh, built up by the time you hit the base case, at which point you just have to return return return return, all the work is done.</p> <p> </p> <p>Hany:</p> <p>and notice, by the way, in that first one that's not true, as you're doing recursion, there is a delayed gratification of the evaluation of that product, so when you hit the base case in the first fact, you then have to go back and now multiply all those numbers between n and one. yeah because you built an expression, whereas in the fact times, you basically have an assignment operator, it's that you're, you're just using the parameters as the assignment operator, and so when you hit that base case, done, i've got the answer. so, so you're right, of course, we could have done it differently, we didn't have to do it this way, but you see that the structurally the recursion is subtly different here, and it turns out this has a real implication too by the way, downstream, and i think, i think we'll eventually do that, right john.</p> <p> </p> <p>John:</p> <p>yeah so this is called, uh, tail recursion, and this is not, and we'll talk about this later when we talk about interpreters. um, so the goal here wasn't to implement fact times, it was actually to re-implement fact. but in order to re-implement fact you'd have to have a helper function, that's what fact times is. that keeps track of two arguments instead of one. the thing you're trying to compute the factorial of, and the result the answer of computing n.</p> <p>John\uff1a</p> <p>...\u662f\u7684\uff0c\u6211\u4eec\u5728\u8fd9\u91cc\u505a\u4e86\u4e00\u4e9b\u4e0d\u540c\u7684\u4e8b\u60c5\uff0c\u662f\u4e3a\u4e86\u5c55\u793a\u4e00\u4e2a\u9012\u5f52\u51fd\u6570\u7684\u793a\u4f8b\uff0c\u5b83\u53ea\u662f\u8c03\u7528\u4e86\u81ea\u5df1\uff0c\u800c\u6ca1\u6709\u5bf9\u5b83\u505a\u4efb\u4f55\u4e8b\u60c5\uff0c\u6240\u4ee5\u5728\u8c03\u7528\u4e4b\u5916\u51e0\u4e4e\u6ca1\u6709\u4ec0\u4e48\u4e1c\u897f\uff0c\u6240\u6709\u4e8b\u60c5\u90fd\u53d1\u751f\u5728\u8c03\u7528\u5185\u90e8\uff0c\u6211\u4eec\u4ecen\u4e2d\u51cf\u53bb\u4e861\u5e76\u5c06k\u4e58\u4ee5n\u3002\u4f46\u662f\u6211\u4eec\u6ca1\u6709\u6dfb\u52a0\u6216\u4e58\u4ee5\u4efb\u4f55\u5176\u4ed6\u4e1c\u897f\uff0c\u8fd9\u4e0e\u9636\u4e58\u7684\u539f\u59cb\u7248\u672c\u4e0d\u540c\uff0c\u539f\u59cb\u7248\u672c\u901a\u8fc7\u4e58\u4ee5\u9012\u5f52\u8c03\u7528\u7684\u7ed3\u679c\u6765\u8ba1\u7b97\u3002\u539f\u59cb\u7248\u672c\u770b\u8d77\u6765\u50cf\u8fd9\u6837\uff0c\u5982\u679cn\u7b49\u4e8e\u96f6\uff0c\u5219\u8fd4\u56de1\uff0c\u5426\u5219\u8fd4\u56den\u4e58\u4ee5fact\uff08n-1\uff09\u3002\u6240\u4ee5\u5728\u8fd9\u91cc\uff0c\u6211\u4eec\u8fdb\u884c\u9012\u5f52\u8c03\u7528\uff0c\u7136\u540e\u5728\u4e4b\u540e\u8fdb\u884c\u4e00\u4e9b\u5de5\u4f5c\uff0c\u8fd9\u610f\u5473\u7740\u9012\u5f52\u8c03\u7528\u4e0d\u77e5\u9053\u5b83\u6765\u81ea\u54ea\u91cc\u3002\u5b83\u4e0d\u77e5\u9053\u4f60\u6b63\u5728\u6784\u5efa\u54ea\u4e2a\u9636\u4e58\u7ed3\u679c\uff0c\u800c\u8fd9\u4e2a\u7248\u672c\u77e5\u9053\u3002\u6700\u540e\uff0c\u5f53\u4f60\u5230\u8fbe\u57fa\u672c\u60c5\u51b5\u65f6\uff0c\u4f60\u5df2\u7ecf\u8ba1\u7b97\u51fa\u4e86\u5bf9\u4e8e\u4efb\u4f55\u4ee5k\u4e3an\u5f00\u59cb\u7684n\uff0ck\u4e58\u4ee5n\u7684\u9636\u4e58\uff0c\u73b0\u5728\u5b83\u88ab\u547d\u540d\u4e3ak\uff0c\u8fd9\u6709\u70b9\u4ee4\u4eba\u56f0\u60d1\uff0c\u4f46\u6709\u65f6\u5c31\u662f\u8fd9\u6837\u9012\u5f52\u3002\u4f46\u662f\u91cd\u70b9\u662f\u6574\u4e2a\u7b54\u6848\u5728\u8fbe\u5230\u57fa\u672c\u60c5\u51b5\u65f6\u5c31\u5df2\u7ecf\u6784\u5efa\u5b8c\u6210\uff0c\u6b64\u65f6\u4f60\u53ea\u9700\u8981\u8fd4\u56de\uff0c\u8fd4\u56de\uff0c\u8fd4\u56de\uff0c\u6240\u6709\u7684\u5de5\u4f5c\u90fd\u5df2\u5b8c\u6210\u3002</p> <p> </p> <p>Hany\uff1a</p> <p>\u987a\u4fbf\u63d0\u4e00\u4e0b\uff0c\u5728\u7b2c\u4e00\u4e2a\u51fd\u6570\u4e2d\uff0c\u5f53\u4f60\u8fdb\u884c\u9012\u5f52\u65f6\uff0c\u6709\u4e00\u4e2a\u4e58\u79ef\u7684\u8bc4\u4f30\u5ef6\u8fdf\uff0c\u6240\u4ee5\u5f53\u4f60\u5728\u7b2c\u4e00\u4e2afact\u4e2d\u8fbe\u5230\u57fa\u672c\u60c5\u51b5\u65f6\uff0c\u4f60\u9700\u8981\u56de\u53bb\u73b0\u5728\u4e58\u4ee5n\u548c1\u4e4b\u95f4\u7684\u6240\u6709\u6570\u5b57\u3002\u662f\u7684\uff0c\u56e0\u4e3a\u4f60\u6784\u5efa\u4e86\u4e00\u4e2a\u8868\u8fbe\u5f0f\uff0c\u800c \u5728fact times\u4e2d\uff0c\u4f60\u57fa\u672c\u4e0a\u6709\u4e00\u4e2a\u8d4b\u503c\u8fd0\u7b97\u7b26\uff0c\u4f60\u53ea\u662f \u5c06\u53c2\u6570\u7528\u4f5c\u8d4b\u503c\u8fd0\u7b97\u7b26\uff0c\u6240\u4ee5\u5f53\u4f60 \u5230\u8fbe\u57fa\u672c\u60c5\u51b5\u65f6\uff0c\u5b8c\u6210\u4e86\uff0c\u6211\u5f97\u5230\u4e86\u7b54\u6848\u3002\u6240\u4ee5\uff0c\u5f53\u7136\uff0c\u4f60\u662f\u5bf9\u7684\uff0c\u6211\u4eec\u672c\u6765\u53ef\u4ee5\u7528\u4e0d\u540c\u7684\u65b9\u5f0f\u505a\u8fd9\u4e2a\uff0c\u4f46\u4f60\u53ef\u4ee5\u770b\u5230\uff0c\u9012\u5f52\u7684\u7ed3\u6784\u5728\u8fd9\u91cc\u662f\u5fae\u5999\u4e0d\u540c\u7684\uff0c\u8fd9\u5728\u4e0b\u6e38\u4e5f\u6709\u5b9e\u9645\u5f71\u54cd\uff0c\u6211\u8ba4\u4e3a\u6211\u4eec\u6700\u7ec8\u4f1a\u505a\uff0c\u5bf9\u5427\uff0cJohn\u3002</p> <p> </p> <p>John\uff1a</p> <p>\u662f\u7684\uff0c\u6240\u4ee5 \u8fd9\u88ab\u79f0\u4e3a\u5c3e\u9012\u5f52\uff0c\u800c\u8fd9\u4e0d\u662f\u5c3e\u9012\u5f52\uff0c\u6211\u4eec\u5c06\u5728\u8ba8\u8bba\u89e3\u91ca\u5668\u65f6\u518d\u8c08\u8bba\u8fd9\u4e2a\u95ee\u9898\u3002\u6240\u4ee5\u8fd9\u91cc\u7684\u76ee\u6807\u4e0d\u662f\u5b9e\u73b0fact times\uff0c\u800c\u662f\u91cd\u65b0\u5b9e\u73b0fact\u3002\u4f46\u662f \u4e3a\u4e86\u91cd\u65b0\u5b9e\u73b0fact\uff0c\u60a8\u5fc5\u987b\u6709\u4e00\u4e2a\u8f85\u52a9\u51fd\u6570\uff0c\u5373fact times\u3002\u4e0e\u4e00\u4e2a\u53c2\u6570\u4e0d\u540c\uff0c\u5b83\u4fdd\u7559\u4e86\u8981\u8ba1\u7b97\u9636\u4e58\u7684\u5143\u7d20\u548c\u8ba1\u7b97n\u7ed3\u679c\u7684\u7b54\u6848\u8fd9\u4e24\u4e2a\u53c2\u6570\u3002</p>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part1/#lab-05","title":"Lab 05","text":""},{"location":"Notes%20of%20Courses/CS61A/CS61A_part1/#1_22","title":"1","text":"<p>Q6 \u4e2d\uff0c\u501f\u9274\u4e86 <code>lab05.py</code> \u6587\u4ef6\u5e95\u90e8 <code>Tree ADT</code> \u4e2d\u6700\u540e\u4e00\u4e2a\u51fd\u6570 <code>copy_tree()</code> \u7684\u51fd\u6570\u6784\u9020\u601d\u8def</p> <pre><code>def copy_tree(t):\n    \"\"\"Returns a copy of t. Only for testing purposes.\n\n    &gt;&gt;&gt; t = tree(5)\n    &gt;&gt;&gt; copy = copy_tree(t)\n    &gt;&gt;&gt; t = tree(6)\n    &gt;&gt;&gt; print_tree(copy)\n    5\n    \"\"\"\n    return tree(label(t), [copy_tree(b) for b in branches(t)])\n</code></pre> <p>\u7531\u4e8eQ6\u4e2d\u662f\u9700\u8981\u8fd4\u56de\u4e00\u4e2a\u65b0\u7684\u6811\uff0c\u6240\u4ee5\u76f4\u63a5\u7528\u6811\u7684\u6784\u9020\u51fd\u6570\u6839\u636e\u539f\u6811\u53bb\u9012\u5f52\u5730(\u53c2\u8003 <code>copy_tree()</code> )\u6784\u9020\u4e00\u4e2a\u65b0\u6811</p> <p>(\u5148\u6784\u5efa\u597d\u57fa\u672c\u7684\u9012\u5f52\uff0c\u518d\u8003\u8651\u57fa\u672c\u60c5\u51b5(basic situation)\u4e0b\u5982\u4f55\u5904\u7406)</p> <p>1</p> <pre><code>def sprout_leaves(t, leaves):\n    return tree(label(t), [... sprout_leaves(branch, leaves) for branch in branches(t)])\n</code></pre> <p>2</p> <pre><code>def sprout_leaves(t, leaves):\n    return tree(label(t), [... if is_leaf(branch) else sprout_leaves(branch, leaves) for branch in branches(t)])\n</code></pre> <p>3</p> <pre><code>def sprout_leaves(t, leaves):\n    return tree(label(t), [tree(label(branch), [...]) if is_leaf(branch) else sprout_leaves(branch, leaves) for branch in branches(t)])\n</code></pre> <p>4</p> <pre><code>def sprout_leaves(t, leaves):\n    return tree(label(t), [tree(label(branch), [tree(leaf) for leaf in leaves]) if is_leaf(branch) else sprout_leaves(branch, leaves) for branch in branches(t)])\n</code></pre>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part1/#2_12","title":"2","text":"<p>Q9</p> <p>(\u53ef\u4ee5\u5229\u7528\u4e0b\u6807\u6765\u6784\u5efa\u63a8\u5bfc\u5f0f)</p> <p>Quote</p> <p>Hint: To write this as a single comprehension, you may find the expression <code>k%2</code>, which evaluates to 0 on even numbers and 1 on odd numbers, to be useful. Consider how you can use the 0 or 1 returned by <code>k%2</code> to alternatively access the beginning and the middle of the list.</p> code <pre><code>def riffle(deck):\n    \"\"\"Produces a single, perfect riffle shuffle of DECK, consisting of\n    DECK[0], DECK[M], DECK[1], DECK[M+1], ... where M is position of the\n    second half of the deck.  Assume that len(DECK) is even.\n    &gt;&gt;&gt; riffle([3, 4, 5, 6])\n    [3, 5, 4, 6]\n    &gt;&gt;&gt; riffle(range(20))\n    [0, 10, 1, 11, 2, 12, 3, 13, 4, 14, 5, 15, 6, 16, 7, 17, 8, 18, 9, 19]\n    \"\"\"\n    \"*** YOUR CODE HERE ***\"\n    return [deck[i // 2] if i % 2 == 0 else deck[(len(deck) + i) // 2] for i in range(len(deck))]\n</code></pre>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part1/#3_10","title":"3","text":"<p>\u5728 Lecture 14 Q&amp;A \u4e2d John \u6709\u63d0\u5230\u6b64\u9898\u7684\u89e3\u6cd5\uff0c\u5728\u770b\u4e86\u4e00\u90e8\u5206(\u4f7f\u7528\u4e0b\u6807\u7684\u65b9\u6cd5)\u4e4b\u540e\uff0c\u7528\u5217\u8868\u63a8\u5bfc\u5f0f\u5199\u51fa\u4e86\u4e00\u4e2a\u53ef\u7528\u7684\u65b9\u6cd5(\u7ed3\u6784\u6709\u70b9\u7c7b\u4f3c\u4e8eQ6)\uff1a</p> <pre><code>def add_trees(t1, t2):\n    return tree(label(t1) + label(t2), [add_trees(branches(t1)[i] if i &lt; len(branches(t1)) else tree(0), branches(t2)[i] if i &lt; len(branches(t2)) else tree(0)) for i in range(max(len(branches(t1)), len(branches(t2))))])\n</code></pre>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part1/#4_7","title":"4","text":"<p>Q11\u4e2d</p> <pre><code>def build_successors_table(tokens):\n    \"\"\"Return a dictionary: keys are words; values are lists of successors.\n\n    &gt;&gt;&gt; text = ['We', 'came', 'to', 'investigate', ',', 'catch', 'bad', 'guys', 'and', 'to', 'eat', 'pie', '.']\n    &gt;&gt;&gt; table = build_successors_table(text)\n    &gt;&gt;&gt; sorted(table)\n    [',', '.', 'We', 'and', 'bad', 'came', 'catch', 'eat', 'guys', 'investigate', 'pie', 'to']\n    &gt;&gt;&gt; table['to']\n    ['investigate', 'eat']\n    &gt;&gt;&gt; table['pie']\n    ['.']\n    &gt;&gt;&gt; table['.']\n    ['We']\n    \"\"\"\n    table = {}\n    prev = '.'\n    for word in tokens:\n        if prev not in table:\n            \"*** YOUR CODE HERE ***\"\n        \"*** YOUR CODE HERE ***\"\n        prev = word\n    return table\n</code></pre> <p>\u4e2d\u7684 <code>sorted()</code> \u51fd\u6570\u5982\u679c\u4ee5\u5b57\u5178\u4e3a\u4f20\u5165\u53c2\u6570\uff0c\u8f93\u51fa\u7684 \u5e94\u8be5 \u662f\u4e00\u4e2a\u542b\u6709\u6240\u6709key\u5e76\u4e14\u6392\u5e8f\u597d\u7684\u5217\u8868</p>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part1/#lecture-13-qa","title":"Lecture 13 Q&amp;A","text":""},{"location":"Notes%20of%20Courses/CS61A/CS61A_part1/#1_23","title":"1","text":"<p>John\u5173\u4e8e <code>min()</code> \u548c <code>max()</code> \u7684 <code>key</code> \u53c2\u6570\u7684\u4e00\u4e9b\u89e3\u91ca\u548c\u8bf4\u660e</p> <p>Quote</p> <p>...what's going on with the min function and its optional argument called key. sometimes what you want is to find the smallest number among a list, and min will do that for you. but sometimes what you want is to find a particular number that's extreme in another way, like it's not the smallest, it's not the largest, but it's the closest to five or it's the, it's the thing that when you square it is closest to 24, or you know you could imagine any kind of description, where there's like a some value, that would do this the best, and min allows you to find that element for any possible condition, and that's the point of that key function. so the way you do it is that, you start out with your same set of values, of which one is the one that you're looking for, and then you provide a function, and this function is going to be called on every single one of these values, and yeah, let's use that example of, uh, the square is as close as possible to 24. i don't know why you would want this, but maybe you would for some reason.</p> <pre><code>&gt;&gt;&gt; min([3, 2, 5, 6], key=lambda x: abs(x * x - 24))\n</code></pre> <p>so what's going to happen here, is that it's going to square, and then subtract 24 from each of these, and then take the absolute value in order to get some measurement of how close is the square of this x to 24. and it tells us 5 is among these numbers the one that when you square it gets you pretty close to 24. in fact there's like an important property about this computation that's not shown, which is that 5 squared minus 24 is 1, and there's no 1 in this output, that's all hidden. what is happening is that, that 1 is computed along with the result of, squaring 3 and subtracting 24, and squaring 6 and subtracting 24. so it's done it for all of them, and then it has found the one, for which the result of calling this function is the smallest. why the smallest, because it's min. so in this way you can use min in order to find the, kind of extreme value for any notion of extreme that you want, but you always get one of these values. and if there's a tie, then you'll get an arbitrary one i think. you get the first one but i'm not actually sure...</p> <p>...min\u51fd\u6570\u53ca\u5176\u540d\u4e3akey\u7684\u53ef\u9009\u53c2\u6570\u53d1\u751f\u4e86\u4ec0\u4e48\u3002\u6709\u65f6\uff0c\u4f60\u60f3\u8981\u7684\u662f\u5728\u4e00\u4e2a\u5217\u8868\u4e2d\u627e\u5230\u6700\u5c0f\u7684\u6570\u5b57\uff0cmin\u4f1a\u4e3a\u4f60\u505a\u5230\u8fd9\u4e00\u70b9\u3002\u6709\u65f6\uff0c\u4f60\u60f3\u8981\u7684\u662f\u627e\u5230\u4e00\u4e2a\u4ee5\u53e6\u4e00\u79cd\u65b9\u5f0f\u6781\u7aef\u7684\u7279\u5b9a\u6570\u5b57\uff0c\u6bd4\u5982\u5b83\u4e0d\u662f\u6700\u5c0f\u7684\uff0c\u4e5f\u4e0d\u662f\u6700\u5927\u7684\uff0c\u4f46\u5b83\u6700\u63a5\u8fd15\uff0c\u6216\u8005\u5b83\u662f\uff0c\u5f53\u4f60\u628a\u5b83\u5e73\u65b9\u65f6\uff0c\u5b83\u6700\u63a5\u8fd124\uff0c\u6216\u8005\u4f60\u77e5\u9053\u4f60\u53ef\u4ee5\u60f3\u8c61\u4efb\u4f55\u4e00\u79cd\u63cf\u8ff0\uff0c\u5176\u4e2d\u6709\u4e00\u4e2a\u503c\uff0c\u8fd9\u5c06\u662f\u6700\u597d\u7684\uff0cmin\u5141\u8bb8\u4f60\u627e\u5230\u4efb\u4f55\u53ef\u80fd\u6761\u4ef6\u4e0b\u7684\u5143\u7d20\uff0c\u8fd9\u5c31\u662f\u5173\u952e\u51fd\u6570\u7684\u610f\u4e49\u6240\u5728\u3002\u8fd9\u6837\u505a\u7684\u65b9\u6cd5\u662f\uff0c\u4f60\u4ece\u4e00\u7ec4\u76f8\u540c\u7684\u503c\u5f00\u59cb\uff0c\u5176\u4e2d\u4e00\u4e2a\u662f\u4f60\u6b63\u5728\u5bfb\u627e\u7684\u503c\uff0c\u7136\u540e\u4f60\u63d0\u4f9b\u4e00\u4e2a\u51fd\u6570\uff0c\u8fd9\u4e2a\u51fd\u6570\u5c06\u5bf9\u8fd9\u4e9b\u503c\u4e2d\u7684\u6bcf\u4e00\u4e2a\u8c03\u7528\uff0c\u662f\u7684\uff0c\u8ba9\u6211\u4eec\u7528\u8fd9\u4e2a\u4f8b\u5b50\uff0c\u5443\uff0c\u5e73\u65b9\u5c3d\u53ef\u80fd\u63a5\u8fd124\u3002\u6211\u4e0d\u77e5\u9053\u4f60\u4e3a\u4ec0\u4e48\u60f3\u8981\u8fd9\u4e2a\uff0c\u4f46\u4e5f\u8bb8\u51fa\u4e8e\u67d0\u79cd\u539f\u56e0\u4f60\u4f1a\u60f3\u8981\u3002</p> <pre><code>&gt;&gt;&gt; min([3, 2, 5, 6], key=lambda x: abs(x * x - 24))\n</code></pre> <p>\u8fd9\u91cc\u8981\u505a\u7684\u662f\uff0c\u5b83\u8981\u5e73\u65b9\uff0c\u7136\u540e\u4ece\u6bcf\u4e00\u4e2a\u4e2d\u51cf\u53bb24\uff0c\u7136\u540e\u53d6\u7edd\u5bf9\u503c\uff0c\u5f97\u5230x\u548c24\u7684\u5e73\u65b9\u6709\u591a\u63a5\u8fd1\u3002\u5b83\u544a\u8bc9\u6211\u4eec\uff0c5\u662f\u8fd9\u4e9b\u6570\u5b57\u4e2d\u7684\u4e00\u4e2a\uff0c\u5f53\u4f60\u5e73\u65b9\u65f6\uff0c\u5b83\u4f1a\u975e\u5e38\u63a5\u8fd124\u4e8b\u5b9e\u4e0a\uff0c\u8fd9\u4e2a\u8ba1\u7b97\u6709\u4e00\u4e2a\u91cd\u8981\u7684\u6027\u8d28\u6ca1\u6709\u663e\u793a\uff0c\u90a3\u5c31\u662f5\u7684\u5e73\u65b9\u51cf\u53bb24\u662f1\uff0c\u800c\u8fd9\u4e2a\u8f93\u51fa\u4e2d\u6ca1\u67091\uff0c\u8fd9\u90fd\u662f\u9690\u85cf\u7684\u3002\u73b0\u5728\u7684\u60c5\u51b5\u662f\uff0c1\u4e0e\u5e73\u65b93\u548c\u51cf\u6cd524\u3001\u5e73\u65b96\u548c\u51cf\u6cd524\u7684\u7ed3\u679c\u4e00\u8d77\u8ba1\u7b97\u3002\u56e0\u6b64\uff0c\u5b83\u5bf9\u6240\u6709\u8fd9\u4e9b\u51fd\u6570\u90fd\u8fdb\u884c\u4e86\u5904\u7406\uff0c\u7136\u540e\u627e\u5230\u4e86\u4e00\u4e2a\u51fd\u6570\uff0c\u8c03\u7528\u8be5\u51fd\u6570\u7684\u7ed3\u679c\u662f\u6700\u5c0f\u7684\u3002\u4e3a\u4ec0\u4e48\u662f\u6700\u5c0f\u7684\uff0c\u56e0\u4e3a\u5b83\u662f\u6700\u5c0f\u7684\u3002\u901a\u8fc7\u8fd9\u79cd\u65b9\u5f0f\uff0c\u4f60\u53ef\u4ee5\u4f7f\u7528min\u6765\u627e\u5230\uff0c\u4efb\u4f55\u4f60\u60f3\u8981\u7684\u6781\u503c\u6982\u5ff5\u7684\u6781\u503c\uff0c\u4f46\u4f60\u603b\u662f\u5f97\u5230\u5176\u4e2d\u4e00\u4e2a\u503c\u3002\u5982\u679c\u6253\u6210\u5e73\u624b\uff0c\u6211\u60f3\u4f60\u4f1a\u5f97\u5230\u4e00\u4e2a\u4efb\u610f\u7684\u5e73\u624b\u3002\u4f60\u5f97\u5230\u4e86\u7b2c\u4e00\u4e2a\uff0c\u4f46\u6211\u5b9e\u9645\u4e0a\u4e0d\u786e\u5b9a...</p>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part1/#2_13","title":"2","text":"<p>\u4e24\u4e2a\u5217\u8868\u5728\u6bd4\u8f83\u5927\u5c0f\u65f6\uff0c\u4f1a\u6bd4\u8f83\u7b2c\u4e00\u4e2a\u5143\u7d20\u7684\u5927\u5c0f( <code>min()</code> \u51fd\u6570\u4e5f\u7c7b\u4f3c)\uff0c</p> <p>\u6d4b\u8bd5\u4e86\u4e00\u4e0b\uff0c\u5e94\u8be5\u662f\u50cf\u5b57\u7b26\u4e32\u4e00\u6837\u7684\u89c4\u5219\uff0c\u5373\u524d\u4e00\u4e2a\u5143\u7d20\u80fd\u6bd4\u8f83\u51fa\u5c31\u6309\u7167\u8be5\u7ed3\u679c\uff0c\u82e5\u76f8\u7b49\u5219\u6bd4\u8f83\u4e0b\u4e00\u4e2a\u5143\u7d20...</p> <pre><code>&gt;&gt;&gt; [3, 4, 5] &gt; [3, 3]\nTrue\n&gt;&gt;&gt; [3, 4, 5] &gt; [4, 3]\nFalse\n&gt;&gt;&gt; [3, 4, 5] &gt; [3, 4]\nTrue\n&gt;&gt;&gt; [3, 4, 5] &gt; [3, 5]\nFalse\n</code></pre>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part1/#lecture-14-circuits","title":"Lecture 14 Circuits","text":""},{"location":"Notes%20of%20Courses/CS61A/CS61A_part1/#1_24","title":"1","text":"<p>Hany\u8bb2\u8bbe\u8ba1\u7535\u8def(Design Circuits)\u7684\u5185\u5bb9\u4e2d\uff0c\u6784\u5efa\u547d\u9898\u903b\u8f91\u516c\u5f0f\u7684\u601d\u8def(step 1-3)\u503c\u5f97\u5b66\u4e60</p> <ol> <li>step 1. build truth-table for all possible input/output values</li> <li>step 2. build sub-expressions with and/not for each output column</li> <li>step 3. combine, two at a time, sub-expressions with an or</li> <li>step 4. draw circuit diagram</li> </ol> <p></p> <ol> <li>\u5148\u6839\u636e\u771f\u503c\u8868\u5199\u51fa\u5b50\u8868\u8fbe\u5f0f</li> <li>\u518d\u5c06\u5b50\u8868\u8fbe\u5f0f\u6790\u53d6(or)\u5230\u4e00\u8d77</li> </ol> a b c d 0 0 0 0 0 1 1 0 1 0 1 0 1 1 0 1 <p>\u4e0a\u9762\u771f\u503c\u8868\u4e2d\u9ad8\u4eae\u7684c\u76841\u7684\u8f93\u51fa\u503c\uff0c\u9700\u8981\u7684\u5b50\u8868\u8fbe\u5f0f\u5e94\u4e3a <code>c = a' \u00b7 b</code> (\u975ea\u4e14b)</p> a b c d 0 0 0 0 0 1 1 0 1 0 1 0 1 1 0 1 <p>\u540c\u7406\uff0c\u8fd9\u4e2a\u9ad8\u4eae\u7684\u8f93\u51fa\u503c\uff0c\u5bf9\u5e94\u7684\u5b50\u8868\u8fbe\u5f0f\u5e94\u4e3a <code>c = a \u00b7 b'</code> </p> <p>\u6700\u540e\uff0c\u518d\u6790\u53d6\u4e24\u4e2a\u5b50\u8868\u8fbe\u5f0f\uff0c\u5373\u5f97\u5230</p> <p><code>c = (a' \u00b7 b) + (a \u00b7 b')</code> </p>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part1/#2_14","title":"2","text":"<p>\u4e8c\u8fdb\u5236\u6570\u7684\u52a0\u6cd5\u9700\u8981\u6784\u5efa\u51fa\u67093\u4e2a\u8f93\u5165\u503c\u548c2\u4e2a\u8f93\u51fa\u503c\u7684\u7535\u8def</p> <p></p> <p></p>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part1/#3_11","title":"3","text":"<p>...okay, remember how the sub expressions work, you treat each output column separately, the d and the e. output column are completely independent of each other. we're going to identify wherever there's a one, and then here here here and here. we're going to build a sub expression using only and and not, and then we're going to combine those sub expressions using the or operator. and then once we have the final expression, of course we're going to draw some circuitry... </p> <p>\u611f\u89c9\u6709\u70b9\u7c7b\u4f3c\u4e0e\u5199\u51fa\u4e3b\u6790\u53d6\u8303\u5f0f</p>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part1/#4_8","title":"4","text":"<p>\u5199\u547d\u9898\u903b\u8f91\u516c\u5f0f\u7684\u6280\u5de7\uff1a</p> <ol> <li>\u53d8\u5143\u591a\u7684\u65f6\u5019\u53ef\u4ee5\u591a\u4e2a\u53d8\u5143\u5408\u6210\u4e00\u7ec4\uff0c\u7136\u540e\u7ed3\u5408\u8868\u683c\u5c55\u793a\u771f\u503c</li> <li>\u5199\u5b50\u8868\u8fbe\u5f0f\u65f6\u7684\u6280\u5de7\uff0c\u5982\u7531\u4e0a\u56fe\u7070\u8272\u533a\u57df\uff0c\u53ef\u4ee5\u53d1\u73b0\u4e0ea\u7684\u53d6\u503c\u65e0\u5173\uff0c\u6545\u53ef\u4ee5\u5199\u51fa\u5b50\u8868\u8fbe\u5f0f <code>b\u00b7c\u00b7d'</code></li> </ol>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part1/#lecture-14-qa","title":"Lecture 14 Q&amp;A","text":""},{"location":"Notes%20of%20Courses/CS61A/CS61A_part1/#1_25","title":"1","text":"<p>Lab 05 \u7684 Q10</p> <p>\u4e0d\u4f7f\u7528 built-in zip function:</p> <p></p> <p>John\u7684\u65b9\u6cd5\u6211\u8ba4\u4e3a\u5173\u952e\u4e4b\u5904\u5728\u4e8e\uff0c\u7528\u4e0b\u6807\u53bb\u8054\u7cfb\u4e24\u9897\u6811\u5bf9\u5e94\u7684\u6811\u679d/\u5206\u652f</p> <pre><code>def add_trees(t1, t2):\n    result_label = label(t1) + label(t2)\n    result_branches = []\n    i = 0\n    while i &lt; min(len(branches(t1)), len(branches(t1))):\n        b1, b2 = branches(t1)[i], branches(t2)[i]\n        new_branch = add_trees(b1, b2)\n        result_branches = result_branches + [new_branch]\n        i = i + 1\n    result_branches = result_branches + branches(t1)[i:]\n    result_branches = result_branches + branches(t2)[i:]\n    return tree(result_label, result_branches)\n</code></pre> <p>\u4f7f\u7528 built-in zip function:</p> <p></p> <p><code>zip()</code> \u53ef\u4ee5\u5c06\u591a\u4e2a\u5e8f\u5217\u4e2d\u7684\u5143\u7d20\u540c\u65f6\u63d0\u53d6\u51fa\u6765\uff0c\u6bd4\u5982\uff0ca\u5217\u8868\u67095\u4e2a\u5143\u7d20\uff0cb\u5217\u8868\u67098\u4e2a\u5143\u7d20\uff0c\u5219 \u5c06\u4e24\u8005\u8f93\u5165\u5230 <code>zip()</code> \u4e2d\uff0c\u4f1a\u5f97\u5230\u4e00\u4e2a\u542b\u6709a\u5217\u8868\u5168\u90e8\u5143\u7d20\u548cb\u5217\u8868\u524d5\u4e2a\u5143\u7d20\u7684\u5e8f\u5217\uff0c\u5e8f\u5217\u4e2d\u6bcf\u4e2a\u5143\u7d20\u4e3aa b\u5217\u8868\u4e2d\u4e0b\u6807\u5bf9\u5e94\u7684\u5143\u7d20(\u50cf\u4e0a\u56fe\u4e2d\u7684\u4e00\u6837)</p> <p>\u91cd\u8981\u7684\u662f\u53ef\u4ee5\u4f7f\u7528 \u5e8f\u5217\u63a8\u5bfc\u5f0f\uff0c\u6216\u8005 <code>for</code> \u8bed\u53e5(\u5229\u7528 <code>zip()</code> )\u5c06\u591a\u4e2a\u5e8f\u5217\u4e2d\u7684\u5143\u7d20\u4e00\u8d77\u63d0\u53d6\u51fa\u6765\uff0c\u5982</p> <pre><code>&gt;&gt;&gt; l1 = [1, 2, 3]\n&gt;&gt;&gt; l2 = [\"a\", \"b\", \"c\"]\n&gt;&gt;&gt; [[x, y] for x, y in zip(l1, l2)]\n[[1, 'a'], [2, 'b'], [3, 'c']]\n</code></pre> <p>\u90a3\u4e48\u4f7f\u7528 <code>zip</code> \u7684\u4ee3\u7801\u53ef\u4ee5\u5199\u6210\uff1a</p> <pre><code>def add_trees(t1, t2):\n    result_label = label(t1) + label(t2)\n    result_branches = [add_trees(b1, b2) for b1, b2 in zip(branches(t1), branches(t2))]\n    result_branches += branches(t1)[len(result_branches):] + branches(t2)[len(result_branches):]\n    return tree(result_label, result_branches)\n</code></pre>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part1/#lecture-15-mutable-values","title":"Lecture 15 Mutable Values","text":""},{"location":"Notes%20of%20Courses/CS61A/CS61A_part1/#1_26","title":"1","text":"<p>Quote</p> <p>...so objects represent information, they consist of data and behavior bundled together to create abstractions. objects can represent things, but also properties of things, or interactions, or processes, they're an extremely general concept, anything that has attributes can be represented as an object. a type of object is called a class, classes are first class values in python, they can be passed in as arguments to functions. and objects are the heart of object oriented programming, which is an approached programming, that allows us to organize large programs using a central metaphor, that a large program is just one big thing, it's a bunch of individual objects, communicating with each other by sending messages back and forth.</p> <p>...\u6240\u4ee5\u5bf9\u8c61\u8868\u793a\u4fe1\u606f\uff0c\u5b83\u4eec\u7531\u6346\u7ed1\u5728\u4e00\u8d77\u7684\u6570\u636e\u548c\u884c\u4e3a\u7ec4\u6210\uff0c\u4ee5\u521b\u5efa\u62bd\u8c61\u3002\u5bf9\u8c61\u53ef\u4ee5\u8868\u793a\u4e8b\u7269\uff0c\u4e5f\u53ef\u4ee5\u8868\u793a\u4e8b\u7269\u7684\u5c5e\u6027\u3001\u4ea4\u4e92\u6216\u8fc7\u7a0b\uff0c\u5b83\u4eec\u662f\u4e00\u4e2a\u975e\u5e38\u901a\u7528\u7684\u6982\u5ff5\uff0c\u4efb\u4f55\u5177\u6709\u5c5e\u6027\u7684\u4e1c\u897f\u90fd\u53ef\u4ee5\u8868\u793a\u4e3a\u5bf9\u8c61\u3002\u4e00\u79cd\u7c7b\u578b\u7684\u5bf9\u8c61\u88ab\u79f0\u4e3a\u7c7b\uff0c\u7c7b\u662fpython\u4e2d\u7684\u7b2c\u4e00\u4e2a\u7c7b\u503c\uff0c\u5b83\u4eec\u53ef\u4ee5\u4f5c\u4e3a\u53c2\u6570\u4f20\u9012\u7ed9\u51fd\u6570\u3002\u5bf9\u8c61\u662f\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b\u7684\u6838\u5fc3\uff0c\u8fd9\u662f\u4e00\u79cd\u63a5\u8fd1\u7f16\u7a0b\uff0c\u5b83\u5141\u8bb8\u6211\u4eec\u4f7f\u7528\u4e00\u4e2a\u4e2d\u5fc3\u9690\u55bb\u6765\u7ec4\u7ec7\u5927\u578b\u7a0b\u5e8f\uff0c\u5927\u578b\u7a0b\u5e8f\u53ea\u662f\u4e00\u4ef6\u5927\u4e8b\uff0c\u5b83\u662f\u4e00\u5806\u5355\u72ec\u7684\u5bf9\u8c61\uff0c\u901a\u8fc7\u6765\u56de\u53d1\u9001\u6d88\u606f\u6765\u76f8\u4e92\u901a\u4fe1\u3002</p>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part1/#2_15","title":"2","text":"<p><code>str</code> \u7684\u51e0\u4e2a\u65b9\u6cd5(\u6bcf\u79cd\u6570\u636e\u7c7b\u578b\u4e0b\u7684\u6570\u636e\u90fd\u662f\u4e00\u4e2a\u5bf9\u8c61\uff0c\u5982 <code>int</code> \u3001 <code>str</code> )</p> <p></p>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part1/#3_12","title":"3","text":"<p>\u6211\u8ba4\u4e3a\u8fd9\u662f\u4e00\u4e2a\u9002\u5408\u8bb0\u5fc6\u7684ascii\u7801\u8868</p> <p></p> <p>\u8fd9\u662f16\u8fdb\u5236\u7684ascii\u7801\u8868\uff1a</p> <pre><code>&gt;&gt;&gt; a = 'A'\n&gt;&gt;&gt; ord(a)\n65\n&gt;&gt;&gt; hex(ord(a))\n'0x41'\n</code></pre>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part1/#4_9","title":"4","text":"<ul> <li>\u4e00\u4e9b <code>list</code> \u7684\u65b9\u6cd5 </li> <li> <p>\u5217\u8868\u53ef\u4ee5\u540c\u65f6\u4fee\u6539\u591a\u4e2a\u503c\uff0c\u5982\u56fe\u4e2d <code>suit[0:2] = ['heart', 'diamond']</code></p> </li> <li> <p>\u5982\u679c\u5c06\u503c\u4e3a\u4e00\u4e2a\u5217\u8868\u7684\u53d8\u91cf\u8d4b\u503c\u7ed9\u53e6\u4e00\u4e2a\u53d8\u91cf\uff0c\u90a3\u4e48\u4e24\u4e2a\u53d8\u91cf\u5176\u5b9e\u4e0a\u90fd\u6307\u5411\u540c\u4e00\u4e2a\u5217\u8868\u5bf9\u8c61\uff0c\u901a\u8fc7\u4e8c\u8005\u4e4b\u4e00\u8fdb\u884c\u6539\u52a8\uff0c\u90fd\u662f\u5bf9\u5bf9\u8c61\u672c\u8eab\u6539\u52a8(\u663e\u793a\u53e6\u5916\u4e00\u4e2a\u53d8\u91cf\u7684\u503c\u65f6\u4f1a\u53d1\u73b0\u4e5f\u6539\u53d8\u4e86)</p> </li> </ul> <p></p> <p>\u4ece\u73af\u5883\u56fe\u4e2d\u4e5f\u53ef\u4ee5\u770b\u5230\uff0c\u4e24\u4e2a\u53d8\u91cf\u6307\u5411\u7684\u65f6\u901a\u8fc7\u4e00\u4e2a\u5217\u8868\uff0c\u4fee\u6539\u90fd\u662f\u5bf9\u4e8e\u5217\u8868\u5bf9\u8c61\u672c\u8eab\u8fdb\u884c\u4fee\u6539</p>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part1/#5_5","title":"5","text":"<p>\u6240\u6709\u6307\u5411\u540c\u4e00\u4e2a\u5bf9\u8c61\u7684\u53d8\u91cf(\u7684\u503c\uff0c\u5373\u6307\u5411\u7684\u5bf9\u8c61)\u90fd\u4f1a\u88ab\u4e00\u4e2a\u6539\u53d8(mutation)\u5f71\u54cd</p> <p>\u5e76\u4e14\uff0c\u53ea\u6709\u53ef\u53d8\u7684\u7c7b\u578b\u624d\u80fd\u8fd9\u6837\uff1alist \u548c dictionary</p> <p>All name thar refer to the same object are affected by a mutation</p> <p>Only objects of mutable types can change: lists &amp; dictionaries</p>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part1/#6_4","title":"6","text":"<p>\u53ef\u4ee5\u4f7f\u7528\u5217\u8868\u5207\u7247\u53bb\u6765 \u589e\u6dfb \u6216 \u5220\u51cf \u6216 \u66ff\u6362 \u5217\u8868\u4e2d\u7684\u5143\u7d20</p> <pre><code>&gt;&gt;&gt; list = [1, 2]\n&gt;&gt;&gt; list[4:6] = [4, 5]\n&gt;&gt;&gt; list\n[1, 2, 4, 5]\n&gt;&gt;&gt; list[3:] = [6, 7, 8]\n&gt;&gt;&gt; list\n[1, 2, 4, 6, 7, 8]\n&gt;&gt;&gt; list[2:] = []\n&gt;&gt;&gt; list\n[1, 2]\n</code></pre>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part1/#7_1","title":"7","text":"<ul> <li>\u88ab\u9017\u53f7\u5206\u9694\u7684\u51e0\u4e2a\u6570\u636e\u4e5f\u4f1a\u88ab\u8ba4\u4e3a\u5143\u7ec4(tuple) (\u53ef\u8ba4\u4e3a\u662f\u7701\u7565\u4e86\u62ec\u53f7\u7684\u5143\u7ec4)</li> <li>\u7528\u4e00\u4e2a\u5217\u8868\u6765\u8c03\u7528 tuple \u7684\u6784\u9020\u51fd\u6570\uff0c\u4f1a\u5f97\u5230\u542b\u6709\u76f8\u540c\u987a\u5e8f\u7684\u76f8\u540c\u5143\u7d20\u7684\u5143\u7ec4</li> <li>\u9017\u53f7 <code>,</code> \u53ef\u4ee5\u4f4d\u4e8e\u5143\u7ec4\u7684\u6700\u540e(\u5e94\u8be5\u4e5f\u53ef\u4ee5\u4f4d\u4e8e\u5217\u8868\u548c\u5b57\u5178\u7684\u6700\u540e\uff0c\u4e4b\u524d\u6709\u8bd5\u8fc7)</li> <li>\u7b2c\u4e09\u70b9\u548c\u7b2c\u4e00\u70b9\u7ed3\u5408\u8d77\u6765\u53ef\u4ee5\u5f97\u5230\uff1a<code>2,</code> \u548c <code>2</code> \u662f\u4e0d\u4e00\u6837\u7684(\u524d\u8005\u662f\u4e00\u4e2a\u5143\u7d20\uff0c\u540e\u8005\u662f\u4e00\u4e2a\u6574\u6570)</li> </ul>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part1/#8","title":"8","text":"<p>\u5143\u7ec4\u80fd\u4f5c\u4e3a\u5b57\u5178\u7684 key:</p> <pre><code>&gt;&gt;&gt; {(1, 2): 3}\n{(1, 2): 3}\n</code></pre> <p>\u4f46\u5143\u7ec4\u4e2d\u4e5f\u4e0d\u80fd\u542b\u6709\u5217\u8868:</p> <pre><code>&gt;&gt;&gt; {(1, [2]): 3}\nTraceback (most recent call last):\n  File \"&lt;stdin&gt;\", line 1, in &lt;module&gt;\nTypeError: unhashable type: 'list'\n</code></pre>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part1/#9","title":"9","text":"<ul> <li>\u53ef\u53d8\u5bf9\u8c61\u53ef\u4ee5\u901a\u8fc7 \u5bf9\u8c61\u7a81\u53d8(Object mutation) \u6765\u6539\u53d8\u503c\uff0c\u4e5f\u53ef\u4ee5\u901a\u8fc7 Name change \u6765\u6539\u53d8(\u5e94\u8be5\u662f\u76f4\u63a5\u6539\u53d8\u6307\u5411\u7684\u5bf9\u8c61)\uff0c\u800c\u4e0d\u53ef\u53d8\u5bf9\u8c61(\u5982\u5143\u7ec4\u7b49)\u53ea\u80fd\u901a\u8fc7 Name change \u6765\u6539\u53d8</li> <li>\u5982\u679c\u4e0d\u53ef\u53d8\u5bf9\u8c61\u542b\u6709\u53ef\u53d8\u5bf9\u8c61\u7684\u5143\u7d20\uff0c\u8fd9\u4e2a\u53ef\u53d8\u5bf9\u8c61\u53ef\u4ee5\u6539\u53d8(\u4e2a\u4eba\u8ba4\u4e3a\uff0c\u53ef\u4ee5\u7c7b\u6bd4\u6210c\u4e2d\u7684\u6307\u9488\u5e38\u91cf\uff0c\u6307\u9488\u672c\u8eab\u4e0d\u6539\u53d8\uff0c\u4f46\u6307\u5411\u7684\u503c\u80fd\u6539\u53d8)</li> </ul>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part1/#10","title":"10","text":"<p>\u6052\u7b49\u8fd0\u7b97\u7b26(Identity Operators) <code>is</code></p> <p>\u7528\u4e8e\u5224\u65ad\u4e24\u4e2a\u53d8\u91cf\u662f\u5426\u6307\u5411\u540c\u4e00\u4e2a\u5bf9\u8c61</p> <p></p> <p></p>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part1/#11","title":"11","text":"<p>\u540c\u4e00\u4e2a\u51fd\u6570\u7684\u9ed8\u8ba4\u53c2\u6570\u662f\u540c\u4e00\u4e2a\u5bf9\u8c61\uff0c\u5373\u4f7f\u591a\u6b21\u8c03\u7528\u51fd\u6570\uff0c\u4f7f\u7528\u9ed8\u8ba4\u53c2\u6570\u65f6\u4f7f\u7528\u7684\u90fd\u662f\u540c\u4e00\u4e2a\u5bf9\u8c61</p> <p>\u56e0\u6b64\u5982\u679c\u662f\u53ef\u53d8\u5bf9\u8c61\u7c7b\u578b\uff0c\u8981\u6ce8\u610f==\u4fee\u6539\u8fd9\u4e2a\u5bf9\u8c61\u4f1a\u5bfc\u81f4\u4e4b\u540e\u8c03\u7528\u51fd\u6570\u65f6(\u5982\u679c\u4f7f\u7528\u7684\u8bdd)\u9ed8\u8ba4\u53c2\u6570\u4f1a\u4e0e\u4e4b\u524d\u4e0d\u4e00\u6837</p>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part1/#12","title":"12","text":"<p>list\u7684\u5404\u79cd\u8fd0\u7b97</p> <ul> <li> <p><code>.append()</code> \u65b9\u6cd5\uff0c\u5c06\u4f20\u5165\u7684\u53c2\u6570\u6dfb\u52a0\u9053\u5217\u8868\u5c3e\u90e8(\u5982\u679c\u4f20\u5165\u7684\u662f\u4e00\u4e2a\u5217\u8868\uff0c\u5c31\u5c06\u8be5\u5217\u8868(\u540c\u4e00\u5bf9\u8c61)\u5b58\u5165\u5c3e\u90e8)</p> <p></p> </li> <li> <p><code>.extend()</code> \u65b9\u6cd5\uff0c\u5e94\u8be5\u662f\u4f20\u5165\u4e00\u4e2a\u5217\u8868(\u5143\u7ec4\u6216\u8bb8\u4e5f\u53ef\u4ee5\uff1f(\u8bd5\u4e86\uff0c\u53ef\u4ee5))\uff0c\u5c06\u5217\u8868\u4e2d\u7684\u5143\u7d20\u4f9d\u6b21\u6dfb\u52a0\u5230\u539f\u5217\u8868\u5c3e\u90e8</p> <p></p> </li> <li> <p>\u52a0\u6cd5 \u548c \u5207\u7247 \uff0c\u4e24\u8005\u90fd\u4f1a\u521b\u5efa\u51fa\u4e00\u4e2a\u65b0\u7684\u5217\u8868\uff0c\u56e0\u6b64\u4e0b\u56fe\u4e2d <code>a[1] = 9</code> \u5e76\u6ca1\u6709\u4f7f \u5217\u8868s \u7684\u5143\u7d20\u6539\u53d8\uff0c\u4f46\u7531\u4e8e \u5217\u8868a \u7684\u7b2c\u4e09\u4e2a\u5143\u7d20\u662f\u5217\u8868\uff0c\u540c\u65f6\u4e5f\u662f \u5217\u8868b \u7684\u7b2c\u4e8c\u4e2a\u5143\u7d20\uff0c\u56e0\u6b64\u901a\u8fc7 \u5217\u8868b \u4fee\u6539\u65f6\uff0c\u4e5f\u4f1a\u8ba9\u539f\u672c\u7684 \u5217\u8868t \u6539\u53d8</p> <p></p> </li> <li> <p><code>list()</code> \u5217\u8868\u7684\u6784\u9020\u65b9\u6cd5\uff0c\u53ef\u4ee5\u4f20\u5165\u4e00\u4e2a\u5217\u8868(\u5143\u7ec4\u548c <code>range()</code> \u4e5f\u53ef\u4ee5)\uff0c(\u5982\u679c\u4f20\u5165\u7684\u662f\u4e00\u4e2a\u5217\u8868)\u4f1a\u6784\u5efa\u51fa\u4e00\u4e2a\u4e0e\u539f\u5217\u8868\u4e00\u6837\u7684\u65b0\u5217\u8868</p> <p></p> </li> <li> <p>\u5217\u8868\u5207\u7247\u7684\u8d4b\u503c\uff0c\u53ef\u4ee5\u5bf9\u5217\u8868\u8fdb\u884c \u6dfb\u52a0(\u6dfb\u7684\u6bd4\u5220\u7684\u591a) / \u66ff\u6362(\u6dfb\u7684\u5220\u7684\u4e00\u6837\u591a) / \u5220\u51cf(\u6dfb\u7684\u6bd4\u5220\u7684\u5c11) \u64cd\u4f5c\uff0c\u5982\u4e0b\u56fe\u4e2d</p> <ul> <li><code>s[0:0] = t</code> \u5c06t\u4e2d\u5143\u7d20\u52a0\u5230(\u585e\u5165)s\u7684\u5934\u90e8(0\u53f7\u4f4d\u7f6e)</li> <li><code>s[3:] = t</code> \u5c064\u53f7\u5143\u7d20\u5220\u53bb\uff0c\u5e76\u5728\u8be5\u4f4d\u7f6e \u585e\u5165 t\u4e2d\u7684\u5143\u7d20</li> </ul> <p></p> </li> <li> <ul> <li><code>.pop()</code> \u65b9\u6cd5\uff0c\u4ece\u5217\u8868\u4e2d\u62ff\u51fa\u5e76\u8fd4\u56de\u6700\u540e\u4e00\u4e2a\u5143\u7d20</li> <li><code>.remove()</code> \u65b9\u6cd5\uff0c\u4f20\u5165\u4e00\u4e2a\u53c2\u6570\uff0c\u5728\u5217\u8868\u4e2d\u5220\u53bb\u7b2c\u4e00\u4e2a\u8ddf\u4f20\u5165\u53c2\u6570\u76f8\u540c\u7684\u5143\u7d20</li> <li>\u7528\u5207\u7247\u8d4b\u503c\u7684\u65b9\u6cd5\u53bb\u5220\u9664\u5217\u8868\u4e2d\u7684\u5143\u7d20</li> </ul> <p></p> </li> </ul>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part1/#13","title":"13","text":"<pre><code>t = [1, 2, 3]\nt[1:3] = [t]\nt.extend(t)\n</code></pre> <p>\u6700\u7ec8\u5f97\u5230 <code>t = [1, [...], 1, [...]]</code> \u7684\u7ed3\u679c\u7684\u539f\u56e0\uff0c\u4e2a\u4eba\u7684\u7406\u89e3\uff1a\u7531\u4e0a\u56fe\u4e2d\u7684\u73af\u5883\u56fe\u53ef\u4ee5\u770b\u5230\uff0c\u5217\u8868\u4e2d\u4f1a\u6709 \u65e0\u7a77\u5faa\u73af\u7684\u6307\u5411 \u4f1a\u4e00\u76f4\u540e\u6307\u5411\u524d\u518d\u4ece\u524d\u8d70\u5230\u540e\uff0c\u56e0\u6b64\u4f1a\u5f97\u5230 <code>...</code> \u7684\u4e1c\u897f</p>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part1/#lecture-15-qa","title":"Lecture 15 Q&amp;A","text":""},{"location":"Notes%20of%20Courses/CS61A/CS61A_part1/#1_27","title":"1","text":"<p>\u5207\u7247\u8d4b\u503c\u9700\u8981\u662f\u4e00\u4e2a\u5217\u8868(\u53ef\u80fd\u5143\u7ec4\u6216\u8005\u5b57\u7b26\u4e32 \u6216\u5176\u4ed6\u5bb9\u5668(container)\u4e5f\u884c\uff1f)\uff0c\u5982\u4e0a\u56fe\u4e2d <code>s[0:0] = 5</code> \u4f1a\u62a5\u9519\uff0c\u5e94\u8be5\u5199\u6210 <code>s[0:0] = [5]</code></p>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part1/#2_16","title":"2","text":"<p>(\u53ef\u4ee5\u4f5c\u4e3a\u4e0a\u4e00\u70b9\u7684\u8865\u5145)</p> <p>Quote</p> <p>good question. so why isn't it that t becomes an element of s, and the reason is that's just how slice assignment works. it's that it takes a container full of elements and it doesn't put that whole container in s, instead of puts the elements of that container in s.</p> <p>\u597d\u95ee\u9898\u3002\u4e3a\u4ec0\u4e48t\u4e0d\u6210\u4e3as\u7684\u4e00\u4e2a\u5143\u7d20\uff0c\u539f\u56e0\u662f\u5207\u7247\u8d4b\u503c\u5c31\u662f\u8fd9\u6837\u5de5\u4f5c\u7684\u3002\u5b83\u53d6\u4e00\u4e2a\u88c5\u6ee1\u5143\u7d20\u7684\u5bb9\u5668\uff0c\u4e0d\u662f\u5c06\u6574\u4e2a\u5bb9\u5668\u653e\u5728s\u4e2d\uff0c\u800c\u662f\u5c06\u8be5\u5bb9\u5668\u7684\u5143\u7d20\u653e\u5728s\u3002</p>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part1/#3_13","title":"3","text":"<p>\u4e0b\u6807\u9009\u62e9(selector)\u4e0d\u4f1a\u6539\u53d8\u5217\u8868\u7684\u957f\u5ea6</p> <p>\u800c\u5207\u7247\u8d4b\u503c\u4f1a\u6539\u53d8\u5217\u8868\u7684\u957f\u5ea6</p> <p>Quote</p> <p>...there's only t and this used to be three elements long, it's still three elements long, element assignment never changes the length of the list, it just changes what's in it. slice assignment is different, it changes the length of the list, it replaces an existing slice with some new elements.</p> <p>...\u53ea\u6709t\uff0c\u5b83\u8fc7\u53bb\u6709\u4e09\u4e2a\u5143\u7d20\u957f\uff0c\u73b0\u5728\u4ecd\u7136\u6709\u4e09\u4e2a\u5143\u4ef6\u957f\uff0c\u5143\u7d20\u8d4b\u503c\u6c38\u8fdc\u4e0d\u4f1a\u6539\u53d8\u5217\u8868\u7684\u957f\u5ea6\uff0c\u5b83\u53ea\u662f\u6539\u53d8\u5176\u4e2d\u7684\u5185\u5bb9\u3002\u5207\u7247\u8d4b\u503c\u4e0d\u540c\uff0c\u5b83\u6539\u53d8\u4e86\u5217\u8868\u7684\u957f\u5ea6\u3002\u5b83\u7528\u4e00\u4e9b\u65b0\u5143\u7d20\u66ff\u6362\u4e86\u73b0\u6709\u7684\u5207\u7247\u3002</p>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part1/#4_10","title":"4","text":"<p>Hany\u5173\u4e8e\u5207\u7247\u7684\u6bd4\u55bb</p> <p>Quote</p> <p>...what you're going to do, is think about it this way, so on the left hand side with the slicing you say, grab those elements, throw them out, and then take whatever's on the right hand side, and shove them into the position, so they can be longer, shorter, it doesn't matter.</p> <p>...\u4f60\u8981\u505a\u7684\u662f\u8fd9\u6837\u60f3\uff0c\u6240\u4ee5\u5728\u5207\u7247\u7684\u5de6\u624b\u8fb9\uff0c\u6293\u4f4f\u8fd9\u4e9b\u5143\u7d20\uff0c\u628a\u5b83\u4eec\u6254\u51fa\u53bb\uff0c\u7136\u540e\u62ff\u8d70\u53f3\u624b\u8fb9\u7684\u4efb\u4f55\u4e1c\u897f\uff0c\u628a\u5b83\u4eec\u63a8\u5230\u8fd9\u4e2a\u4f4d\u7f6e\uff0c\u8fd9\u6837\u5b83\u4eec\u5c31\u53ef\u4ee5\u66f4\u957f\u3001\u66f4\u77ed\uff0c\u8fd9\u65e0\u5173\u7d27\u8981\u3002</p>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part1/#5_6","title":"5","text":"<p>\u5173\u4e8e\u5143\u7ec4tuple\u5b58\u5728\u548c\u88ab\u4f7f\u7528\u7684\u539f\u56e0</p> <p>Quote</p> <p>John:</p> <p>...but the more common reason is that, people are designing their programs so that they don't have to think about mutation back, when you could just describe every function by its domain range and behavior, life was easier. i'm not saying it was easy, there were plenty of like tricky recursion problems and stuff like that, but at least you knew that, if you called a function, the only thing you really have to worry about is what does it return, not what does it change. and if you use tuples everywhere, since they can't be changed, you kind of don't have to think about what does it change, you just have to think about what it returns, whereas if you're using lists everywhere, if you're not careful, the consequence of calling a function will be not only that it changes something, or that it returns something but also that it changes something, and that's like twice as many things to keep track of when you're writing a big program, and trying to understand how all the parts work, so that's like the main reason to have some immutable version of a sequence, is just to like make sure you write programs in such a way, that nothing can change anything else, except by passing in arguments and returning them.</p> <p> </p> <p>Hany:</p> <p>it's it's called side effects, the thing that's scary when you call a function is there some side effect, that it that goes beyond just what was passed and what was returned it modified a list, and i, how did i, how do i know that, that how do i control that, and so the tuples are nice...so the tools are nice, because it's essentially like you're locking your data, right, it's giving you data security yeah.</p> <p>John:</p> <p>...\u4f46\u66f4\u5e38\u89c1\u7684\u539f\u56e0\u662f\uff0c\u4eba\u4eec\u6b63\u5728\u8bbe\u8ba1\u4ed6\u4eec\u7684\u7a0b\u5e8f\uff0c\u8fd9\u6837\u4ed6\u4eec\u5c31\u4e0d\u5fc5\u518d\u8003\u8651\u7a81\u53d8\u4e86\uff0c\u5f53\u4f60\u53ef\u4ee5\u901a\u8fc7\u6bcf\u4e2a\u51fd\u6570\u7684\u57df\u8303\u56f4\u548c\u884c\u4e3a\u6765\u63cf\u8ff0\u5b83\u65f6\uff0c\u751f\u6d3b\u5c31\u66f4\u5bb9\u6613\u4e86\u3002\u6211\u5e76\u4e0d\u662f\u8bf4\u8fd9\u5f88\u5bb9\u6613\uff0c\u6709\u5f88\u591a\u7c7b\u4f3c\u68d8\u624b\u7684\u9012\u5f52\u95ee\u9898\u548c\u7c7b\u4f3c\u7684\u4e1c\u897f\uff0c\u4f46\u81f3\u5c11\u4f60\u77e5\u9053\uff0c\u5982\u679c\u4f60\u8c03\u7528\u4e00\u4e2a\u51fd\u6570\uff0c\u4f60\u771f\u6b63\u9700\u8981\u62c5\u5fc3\u7684\u662f\u5b83\u4f1a\u8fd4\u56de\u4ec0\u4e48\uff0c\u800c\u4e0d\u662f\u6539\u53d8\u4ec0\u4e48\u3002\u5982\u679c\u4f60\u5728\u4efb\u4f55\u5730\u65b9\u90fd\u4f7f\u7528\u5143\u7ec4\uff0c\u56e0\u4e3a\u5b83\u4eec\u662f\u4e0d\u53ef\u66f4\u6539\u7684\uff0c\u4f60\u4e0d\u5fc5\u8003\u8651\u5b83\u4f1a\u6539\u53d8\u4ec0\u4e48\uff0c\u4f60\u53ea\u9700\u8981\u8003\u8651\u5b83\u4f1a\u8fd4\u56de\u4ec0\u4e48\uff0c\u800c\u5982\u679c\u4f60\u5728\u6240\u6709\u5730\u65b9\u90fd\u4f7f\u7528\u5217\u8868\uff0c\u5982\u679c\u4f60\u4e0d\u5c0f\u5fc3\uff0c\u8c03\u7528\u4e00\u4e2a\u51fd\u6570\u7684\u540e\u679c\u4e0d\u4ec5\u662f\u5b83\u4f1a\u6539\u53d8\u4e00\u4e9b\u4e1c\u897f\uff0c\u6216\u8005\u5b83\u4f1a\u8fd4\u56de\u4e00\u4e9b\u4e1c\u897f\uff0c\u5f53\u4f60\u5728\u5199\u4e00\u4e2a\u5927\u7a0b\u5e8f\uff0c\u5e76\u8bd5\u56fe\u4e86\u89e3\u6240\u6709\u90e8\u5206\u662f\u5982\u4f55\u5de5\u4f5c\u7684\u65f6\u5019\uff0c\u8fd9\u5c31\u50cf\u662f\u9700\u8981\u8ddf\u8e2a\u7684\u4e8b\u60c5\u7684\u4e24\u500d\uff0c\u6240\u4ee5\u8fd9\u5c31\u50cf\u662f\u62e5\u6709\u4e00\u4e2a\u4e0d\u53ef\u53d8\u7248\u672c\u7684\u5e8f\u5217\u7684\u4e3b\u8981\u539f\u56e0\uff0c\u5c31\u662f\u8981\u786e\u4fdd\u4f60\u4ee5\u8fd9\u6837\u7684\u65b9\u5f0f\u5199\u7a0b\u5e8f\uff0c\u9664\u4e86\u4f20\u9012\u53c2\u6570\u5e76\u8fd4\u56de\u5b83\u4eec\u4e4b\u5916\uff0c\u6ca1\u6709\u4ec0\u4e48\u80fd\u6539\u53d8\u5176\u4ed6\u4efb\u4f55\u4e8b\u60c5\u3002</p> <p> </p> <p>Hany:</p> <p>\u5b83\u88ab\u79f0\u4e3a\u526f\u4f5c\u7528\uff0c\u5f53\u4f60\u8c03\u7528\u4e00\u4e2a\u51fd\u6570\u65f6\uff0c\u53ef\u6015\u7684\u662f\u6709\u4e00\u4e9b\u526f\u4f5c\u7528\uff0c\u5b83\u8d85\u51fa\u4e86\u4f20\u9012\u548c\u8fd4\u56de\u7684\u5185\u5bb9\uff0c\u5b83\u4fee\u6539\u4e86\u4e00\u4e2a\u5217\u8868\uff0c\u6211\uff0c\u6211\u662f\u600e\u4e48\u77e5\u9053\u7684\uff0c\u6211\u662f\u5982\u4f55\u63a7\u5236\u7684\uff0c\u6240\u4ee5\u5143\u7ec4\u5f88\u597d...\u6240\u4ee5\u8fd9\u4e9b\u5de5\u5177\u5f88\u597d\uff0c\u56e0\u4e3a\u5b83\u672c\u8d28\u4e0a\u5c31\u50cf\u4f60\u5728\u9501\u5b9a\u4f60\u7684\u6570\u636e\uff0c\u5bf9\u5427\uff0c\u5b83\u7ed9\u4e86\u4f60\u6570\u636e\u5b89\u5168\u6027\u3002</p>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part1/#6_5","title":"6","text":"<p>Hany\u548cJohn\u5173\u4e8e \u7c7b(Class) \u548c \u5bf9\u8c61(Object) \u7684\u533a\u522b\u7684\u89e3\u91ca</p> <p>(\u5c06 \u7c7b \u6bd4\u4f5c \u84dd\u56fe \uff0c\u5c06 \u5bf9\u8c61 \u6bd4\u4f5c \u4f9d\u636e\u84dd\u56fe\u4fee\u5efa\u597d\u7684\u5177\u4f53\u7684\u623f\u5b50)</p> <p>Quote</p> <p>Hany:</p> <p>so the question is what is the difference between a class and an object. the class is, so here's how i think about it, think about a blueprint for a house, is the class, and the house is the thing you build from the blueprint. okay so i can have a class date, um that is the sort of the definition of the data i'm storing, and the functionality of it, and then i can instantiate, i can create as many of those objects as i want, so they're essentially realizations of the thing that you've created, so the class is, just it's sort of like a definition, nothing exists, and then when you create an object, well now i can sort of do things with it. so there's a class of type list, and then i can define lists, i can define one list, two lists, 50 lists whatever i want, yeah.</p> <p> </p> <p>John:</p> <p>yeah, and that analogy is nice because you can live in a house, but you can't live in a blueprint, like if you just have the class, you can't really do anything with it, until you construct one of the things that it describes, build the house and then you can go live.</p> <p> </p> <p>Hany:</p> <p>and you can go live in it, right. and it's sort of like a function definition, right, you define a function, but doesn't do anything, it's just a definition, it just hangs out in the global frame somewhere, but then when you call it, ah now we're actually doing something.</p> <p>Hany:</p> <p>\u6240\u4ee5\u95ee\u9898\u662f\u7c7b\u548c\u5bf9\u8c61\u4e4b\u95f4\u7684\u533a\u522b\u662f\u4ec0\u4e48\u3002\u8bfe\u5802\u662f\u8fd9\u6837\u7684\uff0c\u6240\u4ee5\u6211\u662f\u8fd9\u6837\u60f3\u7684 \u60f3\u60f3\u623f\u5b50\u7684\u84dd\u56fe\uff0c\u5b83\u5c31\u662f\u9636\u7ea7\uff0c\u623f\u5b50\u5c31\u662f\u4f60\u6839\u636e\u84dd\u56fe\u5efa\u9020\u7684\u4e1c\u897f\u3002\u597d\u7684\uff0c\u6211\u53ef\u4ee5\u6709\u4e00\u4e2a\u7c7b\u7684\u65e5\u671f\uff0c\u55ef\uff0c\u8fd9\u662f\u6211\u5b58\u50a8\u7684\u6570\u636e\u7684\u5b9a\u4e49\uff0c\u4ee5\u53ca\u5b83\u7684\u529f\u80fd\uff0c\u7136\u540e\u6211\u53ef\u4ee5\u5b9e\u4f8b\u5316\uff0c\u6211\u53ef\u4ee5\u521b\u5efa\u6211\u60f3\u8981\u7684\u4efb\u610f\u591a\u7684\u5bf9\u8c61\uff0c\u6240\u4ee5\u5b83\u4eec\u672c\u8d28\u4e0a\u662f\u4f60\u521b\u5efa\u7684\u4e1c\u897f\u7684\u5b9e\u73b0\uff0c\u6240\u4ee5\u7c7b\u662f\uff0c\u5b83\u6709\u70b9\u50cf\u4e00\u4e2a\u5b9a\u4e49\uff0c\u4ec0\u4e48\u90fd\u4e0d\u5b58\u5728\uff0c\u7136\u540e\u5f53\u4f60\u521b\u5efa\u4e00\u4e2a\u5bf9\u8c61\u65f6\uff0c\u73b0\u5728\u6211\u53ef\u4ee5\u7528\u5b83\u505a\u4e00\u4e9b\u4e8b\u60c5\u4e86\uff0c\u6240\u4ee5\u6709\u4e00\u7c7b\u7c7b\u578b\u5217\u8868\uff0c\u7136\u540e\u6211\u53ef\u4ee5\u5b9a\u4e49\u5217\u8868\uff0c\u6211\u53ef\u4ee5\u5b9a\u4e49\u4e00\u4e2a\u5217\u8868\uff0c\u4e24\u4e2a\u5217\u8868\uff0c50\u4e2a\u5217\u8868\uff0c\u6211\u60f3\u8981\u7684\uff0c\u662f\u7684\u3002</p> <p> </p> <p>John:</p> <p>\u662f\u7684\uff0c\u8fd9\u4e2a\u6bd4\u55bb\u5f88\u597d\uff0c\u56e0\u4e3a\u4f60\u53ef\u4ee5\u4f4f\u5728\u623f\u5b50\u91cc\uff0c\u4f46\u4f60\u4e0d\u80fd\u4f4f\u5728\u84dd\u56fe\u91cc\uff0c\u5c31\u50cf\u4f60\u53ea\u6709\u8bfe\uff0c\u4f60\u771f\u7684\u4e0d\u80fd\u7528\u5b83\u505a\u4efb\u4f55\u4e8b\u60c5\uff0c\u76f4\u5230\u4f60\u5efa\u9020\u4e86\u5b83\u63cf\u8ff0\u7684\u4e1c\u897f\u4e4b\u4e00\uff0c\u5efa\u9020\u4e86\u623f\u5b50\uff0c\u7136\u540e\u4f60\u5c31\u53ef\u4ee5\u751f\u6d3b\u4e86\u3002</p> <p> </p> <p>Hany:</p> <p>\u4f60\u53ef\u4ee5\u4f4f\u5728\u91cc\u9762\uff0c\u5bf9\u5427\u3002\u8fd9\u6709\u70b9\u50cf\u51fd\u6570\u5b9a\u4e49\uff0c\u5bf9\u5427\uff0c\u4f60\u5b9a\u4e49\u4e86\u4e00\u4e2a\u51fd\u6570\uff0c\u4f46\u4ec0\u4e48\u90fd\u4e0d\u505a\uff0c\u5b83\u53ea\u662f\u4e00\u4e2a\u5b9a\u4e49\uff0c\u5b83\u53ea\u662f\u6302\u5728\u5168\u5c40\u6846\u67b6\u7684\u67d0\u4e2a\u5730\u65b9\uff0c\u4f46\u5f53\u4f60\u8c03\u7528\u5b83\u65f6\uff0c\u554a\uff0c\u73b0\u5728\u6211\u4eec\u5b9e\u9645\u4e0a\u5728\u505a\u4e00\u4e9b\u4e8b\u60c5\u3002</p>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part1/#hw-03","title":"HW 03","text":""},{"location":"Notes%20of%20Courses/CS61A/CS61A_part1/#1_28","title":"1","text":"<p>\u51cf\u5c11\u9012\u5f52\u4e2d\u7684\u5197\u4f59\u90e8\u5206</p> <p>Quote</p> <p>Arms-length recursion (sidenote)</p> <p>Before we get started, a quick comment on recursion with tree data structures. Consider the following function.</p> <pre><code>def min_depth(t):\n    \"\"\"A simple function to return the distance between t's root and its closest leaf\"\"\"\n    if is_leaf(t):\n        return 0 # Base case---the distance between a node and itself is zero\n    h = float('inf') # Python's version of infinity\n    for b in branches(t):\n        if is_leaf(b): return 1 # !!!\n        h = min(h, 1 + min_depth(b))\n    return h\n</code></pre> <p>The line flagged with <code>!!!</code> is an \"arms-length\" recursion violation. Although our code works correctly when it is present, by performing this check we are doing work that should be done by the next level of recursion\u2014we already have an if-statement that handles any inputs to <code>min_depth</code> that are leaves, so we should not include this line to eliminate redundancy in our code.</p> <pre><code>def min_depth(t):\n    \"\"\"A simple function to return the distance between t's root and its closest leaf\"\"\"\n    if is_leaf(t):\n        return 0\n    h = float('inf')\n    for b in branches(t):\n        # Still works fine!\n        h = min(h, 1 + min_depth(b))\n    return h\n</code></pre> <p>Arms-length recursion is not only redundant but often complicates our code and obscures the functionality of recursive functions, making writing recursive functions much more difficult. We always want our recursive case to be handling one and only one recursive level.</p> <p>\u81c2\u957f\u9012\u5f52 (\u65c1\u6ce8)</p> <p>\u5728\u6211\u4eec\u5f00\u59cb\u4e4b\u524d\uff0c\u5148\u7b80\u8981\u4ecb\u7ecd\u4e00\u4e0b\u6811\u6570\u636e\u7ed3\u6784\u7684\u9012\u5f52\u3002\u8003\u8651\u4ee5\u4e0b\u51fd\u6570\u3002</p> <pre><code>def min_depth(t):\n    \"\"\"A simple function to return the distance between t's root and its closest leaf\"\"\"\n    if is_leaf(t):\n        return 0 # Base case---the distance between a node and itself is zero\n    h = float('inf') # Python's version of infinity\n    for b in branches(t):\n        if is_leaf(b): return 1 # !!!\n        h = min(h, 1 + min_depth(b))\n    return h\n</code></pre> <p>\u8be5\u884c\u6807\u8bb0\u4e3a <code>!!!</code> \u662f\u4e00\u79cd\u201c\u81c2\u957f\u201d\u9012\u5f52\u51b2\u7a81\u3002\u5c3d\u7ba1\u6211\u4eec\u7684\u4ee3\u7801\u5728\u5b58\u5728\u65f6\u53ef\u4ee5\u6b63\u5e38\u5de5\u4f5c\uff0c\u4f46\u901a\u8fc7\u6267\u884c\u6b64\u68c0\u67e5\uff0c\u6211\u4eec\u6b63\u5728\u505a\u4e0b\u4e00\u7ea7\u9012\u5f52\u5e94\u8be5\u505a\u7684\u5de5\u4f5c\u2014\u2014\u6211\u4eec\u5df2\u7ecf\u6709\u4e86\u4e00\u4e2aif\u8bed\u53e5\uff0c\u5b83\u5904\u7406 <code>min_depth</code> \u7684\u4efb\u4f55\u53f6\u5b50\u8f93\u5165\uff0c\u6240\u4ee5\u6211\u4eec\u4e0d\u5e94\u8be5\u5305\u62ec\u8fd9\u4e00\u884c\u6765\u6d88\u9664\u4ee3\u7801\u4e2d\u7684\u5197\u4f59\u3002</p> <pre><code>def min_depth(t):\n    \"\"\"A simple function to return the distance between t's root and its closest leaf\"\"\"\n    if is_leaf(t):\n        return 0\n    h = float('inf')\n    for b in branches(t):\n        # Still works fine!\n        h = min(h, 1 + min_depth(b))\n    return h\n</code></pre> <p>\u81c2\u957f\u9012\u5f52\u4e0d\u4ec5\u662f\u591a\u4f59\u7684\uff0c\u800c\u4e14\u7ecf\u5e38\u4f7f\u6211\u4eec\u7684\u4ee3\u7801\u590d\u6742\u5316\uff0c\u5e76\u6a21\u7cca\u9012\u5f52\u51fd\u6570\u7684\u529f\u80fd\uff0c\u4f7f\u7f16\u5199\u9012\u5f52\u51fd\u6570\u53d8\u5f97\u66f4\u52a0\u56f0\u96be\u3002\u6211\u4eec\u603b\u662f\u5e0c\u671b\u6211\u4eec\u7684\u9012\u5f52\u60c5\u51b5\u662f\u5904\u7406\u4e00\u4e2a\u5e76\u4e14\u53ea\u6709\u4e00\u4e2a\u9012\u5f52\u7ea7\u522b\u3002</p>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part1/#2_17","title":"2","text":"<p>Q2 \u4e2d\u6211\u5c06\u8ba1\u7b97\u529b\u77e9\u7684\u4ee3\u7801\u72ec\u7acb\u6210\u4e86\u4e00\u4e2a\u51fd\u6570</p> <pre><code>def balanced(m):\n    ...\n    def torque(s):\n        assert is_arm(s), \"must call torque on a arm\"\n        return length(s) * total_weight(end(s))\n    ...\n</code></pre> code <pre><code>def balanced(m):\n    \"\"\"Return whether m is balanced.\n\n    &gt;&gt;&gt; t, u, v = examples()\n    &gt;&gt;&gt; balanced(t)\n    True\n    &gt;&gt;&gt; balanced(v)\n    True\n    &gt;&gt;&gt; w = mobile(arm(3, t), arm(2, u))\n    &gt;&gt;&gt; balanced(w)\n    False\n    &gt;&gt;&gt; balanced(mobile(arm(1, v), arm(1, w)))\n    False\n    &gt;&gt;&gt; balanced(mobile(arm(1, w), arm(1, v)))\n    False\n    &gt;&gt;&gt; from construct_check import check\n    &gt;&gt;&gt; # checking for abstraction barrier violations by banning indexing\n    &gt;&gt;&gt; check(HW_SOURCE_FILE, 'balanced', ['Index'])\n    True\n    \"\"\"\n    \"*** YOUR CODE HERE ***\"\n    def torque(s):\n        assert is_arm(s), \"must call torque on a arm\"\n        return length(s) * total_weight(end(s))\n\n    if is_planet(m):\n        return True\n    else:\n        if torque(left(m)) != torque(right(m)):\n            return False\n        else:\n            return balanced(end(left(m))) and balanced(end(right(m)))\n</code></pre>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part1/#3_14","title":"3","text":"<p>Q5\u4e2d\uff0c\u4f7f\u7528\u6784\u9020\u4e00\u4e2ahelper\u51fd\u6570\u6765\u4f20\u9012\u7ed3\u679c\u5217\u8868</p> <pre><code>def preorder(t):\n    ...\n    def preorder_helper(t, res):\n        res += [label(t)]\n        for branch in branches(t):\n            res += preorder_helper(branch, [])\n        return res\n    ...\n</code></pre> code <pre><code>def preorder(t):\n    \"\"\"Return a list of the entries in this tree in the order that they\n    would be visited by a preorder traversal (see problem description).\n\n    &gt;&gt;&gt; numbers = tree(1, [tree(2), tree(3, [tree(4), tree(5)]), tree(6, [tree(7)])])\n    &gt;&gt;&gt; preorder(numbers)\n    [1, 2, 3, 4, 5, 6, 7]\n    &gt;&gt;&gt; preorder(tree(2, [tree(4, [tree(6)])]))\n    [2, 4, 6]\n    \"\"\"\n    \"*** YOUR CODE HERE ***\"\n    def preorder_helper(t, res):\n        res += [label(t)]\n        # if is_leaf(t):\n        #     return res\n        # else:\n        #     for branch in branches(t):\n        #         res += preorder_helper(branch, res)\n        #     return res\n\n        for branch in branches(t):\n            res += preorder_helper(branch, [])\n        return res\n    return preorder_helper(t, [])\n</code></pre>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part1/#4_11","title":"4","text":"<p>Q6</p> <p>(\u5c45\u7136\u80fd\u53ea\u7528\u4e00\u884c)</p> <pre><code>def has_path(t, word):\n    assert len(word) &gt; 0, 'no path for empty word.'\n    \"*** YOUR CODE HERE ***\"\n    return word[0] == label(t) and True if len(word) == 1 else True in [has_path(b, word[1:]) for b in branches(t)]\n</code></pre>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part1/#5_7","title":"5","text":"<p>Q8</p> <p>\u9898\u76ee\u662f\u9700\u8981\u6c42x\u548cy\u7684\u5dee\u503c\u7684\u8303\u56f4</p> <p>\u65b9\u6cd5\u5c31\u662f\u5c06y\u53d6\u8d1f\u6570\uff0c\u4e0a/\u4e0b\u754c\u7684\u8d1f\u503c\u4f5c\u4e3a\u65b0\u4e0b/\u4e0a\u754c\uff0c\u7136\u540e\u4f7f\u7528\u4e4b\u524d\u7684\u52a0\u6cd5\u51fd\u6570</p> <p>(\u7531\u4e8e\u6ca1\u7406\u89e3\u9898\u76ee\u610f\u601d\u88ab\u5361\u4e86\u5f88\u4e45...)</p> <pre><code>def sub_interval(x, y):\n    \"\"\"Return the interval that contains the difference between any value in x\n    and any value in y.\"\"\"\n    \"*** YOUR CODE HERE ***\"\n    return add_interval(x, interval(-upper_bound(y), -lower_bound(y)))\n</code></pre>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part1/#homework-3-hints","title":"Homework 3 Hints","text":""},{"location":"Notes%20of%20Courses/CS61A/CS61A_part1/#1_29","title":"1","text":"<p>\u52a9\u6559\u5728\u63d0\u793aQ5\u65f6\uff0c\u4e5f\u8bf4\u5230\u4e86\uff0c\u8981\u5047\u8bbe/\u5047\u60f3\u9012\u5f52\u80fd\u8fd4\u56de\u6b63\u786e\u7684\u7ed3\u679c</p> <p>Quote</p> <p>so when we look at this problem. we see that the preordering of any tree always starts at the root, so it makes sense to make this our starting point, we want to add the current label to our pre ordering. so we want to maintain a list of the pre order, and we want to add our current label to the first element in our pre ordering. after we do that, we want to go through all of our children, so remember that we always go down the left most child, all the way to the right most child, in order. so we do pre order of this child, and then we do pre order of this left child, and then we do pre order the right child. so it makes sense to recurs down each child from left most to right most. and think about what you want to do with the recursive result, remember that by the cursive leap of faith, we, remember that the pre ordering of any child, is assumed to return the correct value. so think about what you expect the pre ordering of any child to be, and think about what you want to do with our result, and just a hint, that the call of pre order on any child is going to return a list, because pre ordering returns a list, based on the numbers there. so think about what you want to do the recursive result, and then maybe appending them or extending them, you want to return the pre ordering. so first you add the current label, then you add the results from each pre order on each child, and then we return the pre ordering of all of them. after you do all of this think about your base case, is there a base case you need to handle, maybe when the tree is a leaf, or maybe something similar to that. and I think that's enough for this problem good luck.</p> <p>\u5728\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u65f6\uff0c\u6211\u4eec\u53ef\u4ee5\u770b\u5230\uff0c\u4efb\u4f55\u6811\u7684\u524d\u5e8f\u904d\u5386\u59cb\u7ec8\u4ece\u6839\u8282\u70b9\u5f00\u59cb\uff0c\u56e0\u6b64\u5c06\u6839\u8282\u70b9\u4f5c\u4e3a\u6211\u4eec\u7684\u8d77\u59cb\u70b9\u662f\u6709\u610f\u4e49\u7684\u3002\u6211\u4eec\u5e0c\u671b\u5c06\u5f53\u524d\u8282\u70b9\u7684\u6807\u7b7e\u6dfb\u52a0\u5230\u6211\u4eec\u7684\u524d\u5e8f\u904d\u5386\u5217\u8868\u4e2d\uff0c\u6240\u4ee5\u6211\u4eec\u9700\u8981\u7ef4\u62a4\u4e00\u4e2a\u524d\u5e8f\u904d\u5386\u7684\u5217\u8868\uff0c\u5e76\u5c06\u5f53\u524d\u8282\u70b9\u7684\u6807\u7b7e\u6dfb\u52a0\u5230\u524d\u5e8f\u904d\u5386\u5217\u8868\u7684\u7b2c\u4e00\u4e2a\u4f4d\u7f6e\u3002\u5728\u8fd9\u4e4b\u540e\uff0c\u6211\u4eec\u9700\u8981\u904d\u5386\u6240\u6709\u7684\u5b50\u8282\u70b9\u3002\u8bf7\u8bb0\u4f4f\uff0c\u6211\u4eec\u603b\u662f\u4ece\u6700\u5de6\u8fb9\u7684\u5b50\u8282\u70b9\u5f00\u59cb\uff0c\u4e00\u76f4\u904d\u5386\u5230\u6700\u53f3\u8fb9\u7684\u5b50\u8282\u70b9\uff0c\u6309\u987a\u5e8f\u8fdb\u884c\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u9996\u5148\u5bf9\u6700\u5de6\u8fb9\u7684\u5b50\u8282\u70b9\u8fdb\u884c\u524d\u5e8f\u904d\u5386\uff0c\u7136\u540e\u5bf9\u5de6\u5b50\u8282\u70b9\u8fdb\u884c\u524d\u5e8f\u904d\u5386\uff0c\u63a5\u7740\u5bf9\u53f3\u5b50\u8282\u70b9\u8fdb\u884c\u524d\u5e8f\u904d\u5386\u3002\u8fd9\u6837\uff0c\u4ece\u6700\u5de6\u8fb9\u5230\u6700\u53f3\u8fb9\u7684\u5b50\u8282\u70b9\u9012\u5f52\u8c03\u7528\u662f\u6709\u610f\u4e49\u7684\u3002\u63a5\u4e0b\u6765\uff0c\u8003\u8651\u5982\u4f55\u5904\u7406\u9012\u5f52\u7ed3\u679c\u3002\u8bf7\u8bb0\u4f4f\uff0c\u6309\u7167\u9012\u5f52\u7684\u201c\u8df3\u8dc3\u4fe1\u4ef0\u201d\uff0c\u6211\u4eec\u5047\u5b9a\u4efb\u4f55\u5b50\u8282\u70b9\u7684\u524d\u5e8f\u904d\u5386\u90fd\u8fd4\u56de\u4e86\u6b63\u786e\u7684\u503c\u3002\u56e0\u6b64\uff0c\u9700\u8981\u601d\u8003\u5bf9\u9012\u5f52\u7ed3\u679c\u8981\u505a\u4ec0\u4e48\uff0c\u8bb0\u4f4f\u8c03\u7528\u5b50\u8282\u70b9\u7684\u524d\u5e8f\u904d\u5386\u4f1a\u8fd4\u56de\u4e00\u4e2a\u5217\u8868\uff0c\u6839\u636e\u8fd9\u4e00\u70b9\u601d\u8003\u5982\u4f55\u5904\u7406\u9012\u5f52\u7ed3\u679c\u3002\u4e00\u79cd\u53ef\u80fd\u7684\u65b9\u5f0f\u662f\u5c06\u5b83\u4eec\u6dfb\u52a0\u6216\u6269\u5c55\u5230\u5f53\u524d\u524d\u5e8f\u904d\u5386\u5217\u8868\u4e2d\u3002\u6700\u7ec8\uff0c\u6211\u4eec\u9700\u8981\u8fd4\u56de\u524d\u5e8f\u904d\u5386\u7684\u7ed3\u679c\u3002\u5177\u4f53\u6765\u8bf4\uff0c\u64cd\u4f5c\u987a\u5e8f\u662f\uff1a\u9996\u5148\u6dfb\u52a0\u5f53\u524d\u6807\u7b7e\uff0c\u7136\u540e\u6dfb\u52a0\u6bcf\u4e2a\u5b50\u8282\u70b9\u7684\u524d\u5e8f\u904d\u5386\u7ed3\u679c\uff0c\u6700\u540e\u8fd4\u56de\u6240\u6709\u5b50\u8282\u70b9\u7684\u524d\u5e8f\u904d\u5386\u7ed3\u679c\u3002\u5728\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u65f6\uff0c\u8fd8\u9700\u8981\u8003\u8651\u57fa\u672c\u60c5\u51b5\u3002\u662f\u5426\u6709\u9700\u8981\u5904\u7406\u7684\u57fa\u672c\u60c5\u51b5\uff0c\u4f8b\u5982\u5f53\u6811\u662f\u53f6\u5b50\u8282\u70b9\u65f6\uff0c\u6216\u8005\u7c7b\u4f3c\u60c5\u51b5\u3002\u5728\u8003\u8651\u5b8c\u6240\u6709\u8fd9\u4e9b\u65b9\u9762\u540e\uff0c\u5c31\u53ef\u4ee5\u7740\u624b\u89e3\u51b3\u95ee\u9898\u4e86\u3002\u795d\u4f60\u597d\u8fd0\uff01</p>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part1/#lecture-16-mutable-functions","title":"Lecture 16 Mutable Functions","text":""},{"location":"Notes%20of%20Courses/CS61A/CS61A_part1/#1_30","title":"1","text":"<p>\u51fd\u6570\u4e2d\u7684\u8d4b\u503c\u8bed\u53e5\uff0c\u53ea\u80fd\u5f71\u54cd\u5230\u51fd\u6570\u6240\u5728\u7684frame\uff0c\u4e0d\u80fd\u5f71\u54cd\u5230\u6bcd\u6846\u67b6\u91cc\u7684\u53d8\u91cf</p>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part1/#2_18","title":"2","text":"<p><code>nonlocal</code> \u8bed\u53e5</p> <p>\u611f\u89c9\u662f\u80fd\u5728\u4e00\u4e2a\u51fd\u6570\u4e2d\u58f0\u660e\u8981\u4f7f\u7528 \u975e\u5f53\u524d\u6846\u67b6\u5185\u7684\u53d8\u91cf(\u540d)\uff0c\u4ece\u800c\u4e4b\u540e\u5728\u4f7f\u7528\u7684\u65f6\u5019\uff0c\u5c31\u4e0d\u4f1a\u5728\u5f53\u524d\u7684\u6846\u67b6\u5185\u521b\u5efa\u8fd9\u4e2a\u53d8\u91cf\uff0c\u800c\u662f\u5728\u4e0a\u7ea7\u6846\u67b6\u4e2d\u5bfb\u627e</p>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part1/#3_15","title":"3","text":"<p>\u5728\u51fd\u6570\u4f53\u4e2d\uff0c\u540d\u79f0\u7684\u6240\u6709\u5b9e\u4f8b\u90fd\u5fc5\u987b\u5f15\u7528\u540c\u4e00\u6846\u67b6</p> <p>\u6240\u4ee5\u4e0d\u80fd\u50cf\u56fe\u91cc\u9762\u4e00\u6837\uff0c\u4e00\u5f00\u59cb\u4f7f\u7528\u4e86\u6bcd\u6846\u67b6\u4e2d\u7684\u503c--\u7ed1\u5b9a\u4e86\u6bcd\u6846\u67b6\u4e2d\u7684\u53d8\u91cf\uff0c\u800c\u540e\u53c8\u5728\u672a\u4f7f\u7528 <code>nonlocal</code> \u8bed\u53e5\u7684\u60c5\u51b5\u4e0b\uff0c\u8fdb\u884c\u8d4b\u503c</p>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part1/#4_12","title":"4","text":"<p>\u53e6\u4e00\u79cd\u5b9e\u73b0\u4f7f\u7528\u5e76\u66f4\u6539\u6bcd\u6846\u67b6\u4e2d\u7684\u6570\u636e\u5e76\u4e14\u4e0d\u4f7f\u7528 <code>nonlocal</code> \u8bed\u53e5\u7684\u65b9\u6cd5</p> <p></p> <p>\u5728\u6bcd\u6846\u67b6\u4e2d\u4f7f\u7528\u53ef\u6539\u53d8\u7684\u6570\u636e\u7c7b\u578b\uff0c\u5982\u5217\u8868\u6216\u5b57\u5178\uff0c\u7136\u540e\u5728\u5b50\u51fd\u6570\u4e2d\u5bf9\u5176\u7684\u5143\u7d20\u8fdb\u884c\u66f4\u6539\uff0c\u4ee5\u8fbe\u5230\u9700\u6c42</p>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part1/#5_8","title":"5","text":"<p>\u53c2\u8003\u900f\u660e\u5ea6 (Referential Transparency)</p> <p></p> <p>\u8fd9\u4e2a\u6982\u5ff5\u597d\u50cf\u662f\u6307\uff0c\u5982\u679c\u8868\u8fbe\u5f0f\u662f\u53c2\u8003\u900f\u660e(referentially transparent)\u7684\uff0c\u90a3\u4e48\u5728\u76f4\u63a5\u7528\u4e0e\u8fd4\u56de\u503c\u76f8\u540c\u7684\u503c\u66ff\u6362\u8868\u8fbe\u5f0f\u4e2d\u7684\u51fd\u6570\u540e\uff0c\u80fd\u5f97\u5230\u548c\u539f\u6765\u4e00\u6837\u7684\u7ed3\u679c\uff0c\u5373\u4e0d\u6539\u53d8\u7a0b\u5e8f\u7684\u610f\u4e49(not change the meaning of a program)</p> <p>\u800c\u7a81\u53d8(mutation)\u53ef\u80fd\u4f1a\u7834\u574f\u8868\u8fbe\u5f0f\u7684\u53c2\u8003\u900f\u660e\uff0c\u56e0\u4e3a\u7a81\u53d8\u53ef\u4ee5\u6539\u53d8\u73af\u5883(\u4e2d\u7684\u5c5e\u6027/\u503c)\uff0c</p> <p>\u6bd4\u5982</p> <pre><code>def f(x):\n    x = 4\n    def g(y):\n        def h(z):\n            nonlocal x\n            x = x + 1\n            return x + y + z\n        return h\n    return g\na = f(1)\nb = a(2)\ntotal = b(3) + b(4)\n</code></pre> <p>\u8fd0\u884c\u51fa\u6765\uff0c<code>total</code> \u7ed3\u679c\u662f22(10+12)</p> <p>\u4f46\u5982\u679c\u5c06 <code>b(3)</code> \u66ff\u6362\u6210 <code>10</code></p> <pre><code>def f(x):\n    x = 4\n    def g(y):\n        def h(z):\n            nonlocal x\n            x = x + 1\n            return x + y + z\n        return h\n    return g\na = f(1)\nb = a(2)\ntotal = 10 + b(4)\n</code></pre> <p><code>total</code> \u7ed3\u679c\u5c31\u53d8\u6210\u4e8621(10+11)</p> <p>\u8fd9\u662f\u7531\u4e8e\uff0c\u524d\u8005 <code>b(3)</code> \u5728\u8c03\u7528 <code>h</code> \u51fd\u6570\u7684\u65f6\u5019\uff0c\u6539\u52a8\u4e86\u6bcd\u6846\u67b6\u4e2d\u7684 <code>x</code> \u7684\u503c\uff0c\u4f7f\u5f97\u4e24\u5904\u4ee3\u7801\u4e2d <code>b(4)</code> \u5728\u8c03\u7528 <code>h</code> \u51fd\u6570\u65f6\uff0c\u4f7f\u7528\u7684\u503c\u4e0d\u4e00\u6837\uff0c\u56e0\u6b64<code>total</code> \u7ed3\u679c\u5c31\u4e0d\u4e00\u6837</p>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part1/#6_6","title":"6","text":"<p>\u8fd9\u8282\u8bfe\u6700\u540e\uff0c\u6559\u6388\u63d0\u5230\u7684\u4e00\u9898</p> <p></p> <p>\u6559\u6388\u63d0\u5230\uff0c\u5728\u5f00\u59cb\u505a\u8fd9\u9898\u65f6\uff0c\u53ef\u4ee5\u5bfb\u627ebase cases\u662f\u4ec0\u4e48\uff0c</p> <p>\u7136\u540e\u4ece\u8f93\u5165\u793a\u4f8b\u4e2d\u53ef\u4ee5\u5f97\u5230\uff0cbase case\u662f\u5f53\u5176\u4e2d\u4e00\u4e2a\u4e3a\u96f6\u7684\u65f6\u5019</p> <p>\u5f00\u59cb\u5199\u4ee3\u7801\u65f6\uff0c\u6211\u662f\u5148\u6ce8\u610f\u5230\u6700\u540e\u7684 <code>return</code> \u7684\u8bed\u53e5\u7684\u5f62\u5f0f\uff0c\u518d\u8054\u60f3\u5230\u6559\u6388\u8bf4\u5230\u7684 tree recursion \uff0c\u6240\u4ee5\u6211\u611f\u89c9\u62ec\u53f7\u5916\u5e94\u8be5\u662f\u4e00\u4e2a <code>min</code> \uff0c\u7136\u540e\u62ec\u53f7\u91cc\u9762\u662f\u6bd4\u8f83\u4e24\u79cd\u9012\u5f52\u8fd4\u56de\u7684\u503c\u54ea\u4e2a\u66f4\u5c0f\uff0c\u6240\u4ee5\u6211\u5c31\u6682\u4e14\u586b\u4e0a\uff1a</p> <pre><code>def combo(a, b):\n    if a == 0 or b == 0:\n        return a + b\n    elif ...:\n        return combo(...)\n    return min(combo(a // 10, b) * 10 + a % 10, combo(a, b // 10) * 10 + b % 10)\n</code></pre> <p>\u4f46\u662f <code>elif</code> \u4e4b\u540e\u586b\u4ec0\u4e48\u4e00\u76f4\u6ca1\u60f3\u5230\uff0c(\u56e0\u4e3a\u4e0d\u77e5\u9053\u6709\u76f8\u540c\u6570\u5b57\u8fd8\u6709\u4e0d\u540c\u7684\u6570\u5b57\u8981\u600e\u4e48\u5206\u5272\u600e\u4e48\u5904\u7406\uff0c\u4ee5\u53caa\u53ea\u5269\u4e00\u79cd\u6570\u5b57\u7684\u60c5\u51b5\u4e0b\uff0c\u600e\u4e48\u5224\u65ad\u653e\u5728b\u524d\u9762\u8fd8\u662f\u540e\u9762\uff0c\u611f\u89c9\u8981\u5206\u975e\u5e38\u591a\u79cd\u60c5\u51b5\u7279\u522b\u590d\u6742\uff0c\u4e4b\u540e\u53d1\u73b0\u5176\u5b9e\u60c5\u51b5\u5f88\u7b80\u5355...)</p> <p>\u76f4\u5230\u4e09\u5929\u4e4b\u540e</p> <p>\u5f00\u59cb\u7ee7\u7eed\u601d\u8003\u8fd9\u9898\u65f6\uff0c\u6211\u5f00\u59cb\u601d\u8003\u5230\u8fbe base case \u7684\u6700\u540e\u4e00\u79cd\u60c5\u51b5\uff0c\u5373 a \u662f\u4e2a\u4e00\u4f4d\u6570\uff0c\u800c b \u662f 321\uff0c\u60f3\u5230\u5982\u679ca\u548cb\u67d0\u4e2a\u6570\u4f4d\u76f8\u540c\uff0c\u90a3\u4e48\u53ef\u4ee5\u60f3\u5feb\u901f\u6392\u5e8f\u4e00\u6837\u5c06b\u5206\u6210\u4e24\u8fb9\u53bb\u9012\u5f52(\u4f46\u662f\u597d\u50cf\u5bf9\u6570\u5b57\u5206\u5272\u5f88\u96be\u64cd\u4f5c\u8d77\u6765)\uff0c\u7136\u540e\u7531\u5206\u5272\u5c31\u8fdb\u4e00\u6b65\u5f00\u59cb\u60f3a\u548cb\u7684\u6700\u540e\u4e00\u4f4d\u53bb\u6bd4\u8f83(\u5c06b\u5206\u5272\u6210\u524d\u9762\u548c\u6700\u540e\u4e00\u4f4d)\uff0c\u90a3\u4e48(\u8981\u4f7f\u5f97\u7ed3\u679c\u6700\u5c0f)\u5e94\u8be5\u662f\u5c06\u5927\u7684\u90a3\u4e2a\u653e\u5728\u6700\u540e\uff0c\u6240\u4ee5\u5f00\u59cb\u5c1d\u8bd5\u7f16\u5199\u4ee3\u7801</p> <p>\u4f46\u662f\u53d1\u73b0 <code>elif</code> \u540e\u586b\u4e0d\u4e0a\u4e1c\u897f\uff0c\u6240\u4ee5\u6253\u7b97\u5148\u4e0d\u6309\u5b83\u63d0\u4f9b\u7684\u7ed3\u6784\u81ea\u5df1\u5199\uff1a</p> <pre><code>def combo(a, b):\n    if a == 0 or b == 0:\n        return a + b\n    else:\n        if a % 10 &lt; b % 10:\n            ...\n        else:\n            ...\n    # elif ...:\n    #     return combo(...)\n    # return min(combo(a // 10, b) * 10 + a % 10, combo(a, b // 10) * 10 + b % 10)\n</code></pre> <p>\u7136\u540e\u53d1\u73b0 <code>...</code> \u5904\u7684\u4ee3\u7801\u5c31\u662f\u6700\u540e <code>return</code> \u4e2d\u4e4b\u524d\u5199\u7684\u4ee3\u7801\uff0c\u5e76\u4e14\u80fd\u5b9e\u73b0\u5bf9\u5e94\u7684\u5904\u7406\u529f\u80fd\uff0c\u6240\u4ee5 <code>elif</code> \u540e\u5e94\u8be5\u8003\u8651\u7684\u662fa b\u6700\u540e\u4e00\u4f4d\u76f8\u540c\u7684\u60c5\u51b5\uff0c\u6545</p> <pre><code>def combo(a, b):\n    \"\"\"Return the smallest integer with all of the digits of a and b (in order).\n\n    &gt;&gt;&gt; combo(531, 432)    # 45312 contains both _531_ and 4_3_2.\n    45312\n    &gt;&gt;&gt; combo(531, 4321)   # 45321 contains both _531_ and 4_321.\n    45321\n    &gt;&gt;&gt; combo(1234, 9123)  # 91234 contains both _1234 and 9123_.\n    91234\n    &gt;&gt;&gt; combo(0, 321)      # The number 0 has no digits, so 0 is not in the result.\n    321\n    \"\"\"\n    if a == 0 or b == 0:\n        return a + b\n    elif a % 10 == b % 10:\n        return combo(a // 10, b // 10) * 10 + a % 10\n    return min(combo(a // 10, b) * 10 + a % 10, combo(a, b // 10) * 10 + b % 10)\n</code></pre> <p>\u7136\u540e\u534a\u4fe1\u534a\u7591\u5730\u8fdb\u884c\u4e86\u6d4b\u8bd5\uff0c\u53d1\u73b0\u8fd9\u7adf\u7136\u5c31\u662f\u7b54\u6848</p> <p>\u6700\u540e\u603b\u7ed3\u53cd\u601d\u4e86\u4e00\u4e0b\uff0c\u9012\u5f52\u8fd8\u662f\u5f97\u7262\u8bb0\u8981\u5047\u8bbe\u51fd\u6570\u80fd\u8fd4\u56de\u6240\u9700\u8981\u7684\u4e1c\u897f(\u6211\u611f\u89c9\u8fd9\u6837\u53ef\u80fd\u5c31\u66f4\u597d\u80fd\u60f3\u5230\u5206\u5272\u51fa\u6700\u540e\u4e00\u4f4d)</p>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part1/#lecture-16-qa","title":"Lecture 16 Q&amp;A","text":""},{"location":"Notes%20of%20Courses/CS61A/CS61A_part1/#1_31","title":"1","text":"<p>\u5217\u8868\u7684 <code>+=</code> \u548c <code>=</code> \u7684\u4e00\u4e9b\u533a\u522b\uff0c</p> <p>\u56fe\u4e2d\u5de6\u4fa7\uff0c<code>a = a + b</code> \u53ef\u4ee5\u7406\u89e3\u6210\uff0c\u5148\u662f <code>a + b</code> \u5f97\u5230\u4e00\u4e2a\u65b0\u7684\u5217\u8868\uff0c\u7136\u540e\u5c06\u53d8\u91cf\u540d <code>a</code> \u7ed1\u5b9a\u5230\u8fd9\u4e2a\u65b0\u7684\u5217\u8868\u4e0a\uff0c\u6240\u4ee5 <code>c</code> \u7ed1\u5b9a\u7684\u539f\u5217\u8868\u6ca1\u6709\u88ab\u6539\u53d8</p> <p>\u800c\u53f3\u4fa7\uff0c<code>a += b</code> \u53ef\u4ee5\u7c7b\u6bd4\u6210 <code>a.extend(b)</code> \uff0c\u662f\u5bf9 <code>a</code> \u6307\u5411\u7684\u5217\u8868\u672c\u8eab\u8fdb\u884c\u4e86\u4fee\u6539\uff0c\u6240\u4ee5\u901a\u8fc7 <code>c</code> \u4e5f\u80fd\u770b\u5230\u5217\u8868\u6539\u53d8\u4e86</p>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part1/#lab-06","title":"Lab 06","text":""},{"location":"Notes%20of%20Courses/CS61A/CS61A_part1/#1_32","title":"1","text":"<p>Q4\uff0c\u6211\u91c7\u7528\u5148\u53d6\u51fa\u548c <code>entry</code> \u76f8\u540c\u7684\u5143\u7d20\u7684\u4e0b\u6807\u5b58\u5728\u4e00\u4e2a\u5217\u8868\u4e2d\uff0c\u518d\u5c06\u8fd9\u4e9b\u4e0b\u6807\u5e94\u7528\u5230 <code>insert</code> \u65b9\u6cd5\u4e0a</p> <pre><code>def insert_items(lst, entry, elem):\n    entries_indices = [i for i in range(len(lst)) if lst[i] == entry]\n    for index in entries_indices:\n        lst.insert(index, elem)\n    return lst\n</code></pre> <p>\u4f46\u662f\u53d1\u73b0\u6709\u4e24\u4e2a\u5730\u65b9\u9700\u8981\u4fee\u6b63\uff1a</p> <ul> <li> <p>\u63d2\u5165\u65f6\uff0c\u7531\u4e8e\u662f\u5728\u76f8\u5e94\u7684\u5143\u7d20\u4e4b\u540e\u63d2\u5165\uff0c\u6240\u4ee5 <code>index</code> \u9700\u8981\u6539\u6210 <code>index + 1</code> </p> </li> <li> <p>\u7531\u4e8e\u5982\u679c\u6309\u7167\u4ece\u524d\u5230\u540e\u63d2\u5165\u65b0\u7684\u5143\u7d20\uff0c\u90a3\u4e48\u5728\u524d\u9762\u63d2\u5165\u65f6\uff0c\u4f1a\u5f15\u8d77\u540e\u9762\u7684\u5143\u7d20\u7684\u4e0b\u6807\u7684\u6539\u53d8\uff0c\u6240\u4ee5\u6211\u6539\u6210\u4ece\u540e\u5f80\u524d\u63d2\u5165\uff0c\u5373\u628a\u5b58\u50a8\u4e0b\u6807\u7684\u5217\u8868\u987a\u5e8f\u53cd\u8fc7\u6765</p> <pre><code>    entries_indices = entries_indices[::-1]\n</code></pre> </li> </ul> code <pre><code>def insert_items(lst, entry, elem):\n    \"\"\"\n    &gt;&gt;&gt; test_lst = [1, 5, 8, 5, 2, 3]\n    &gt;&gt;&gt; new_lst = insert_items(test_lst, 5, 7)\n    &gt;&gt;&gt; new_lst\n    [1, 5, 7, 8, 5, 7, 2, 3]\n    &gt;&gt;&gt; large_lst = [1, 4, 8]\n    &gt;&gt;&gt; large_lst2 = insert_items(large_lst, 4, 4)\n    &gt;&gt;&gt; large_lst2\n    [1, 4, 4, 8]\n    &gt;&gt;&gt; large_lst3 = insert_items(large_lst2, 4, 6)\n    &gt;&gt;&gt; large_lst3\n    [1, 4, 6, 4, 6, 8]\n    &gt;&gt;&gt; large_lst3 is large_lst\n    True\n    \"\"\"\n    \"*** YOUR CODE HERE ***\"\n    entries_indices = [i for i in range(len(lst)) if lst[i] == entry]\n    entries_indices = entries_indices[::-1]\n    for index in entries_indices:\n        lst.insert(index + 1, elem)\n    return lst\n</code></pre>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part1/#lecture-17-iterations","title":"Lecture 17 Iterations","text":""},{"location":"Notes%20of%20Courses/CS61A/CS61A_part1/#1_33","title":"1","text":"<ul> <li> <p><code>iter()</code> \u4f20\u5165\u4e00\u4e2a\u53ef\u4ee5\u8fed\u4ee3\u7684\u6570\u636e(\u6bd4\u5982\u5217\u8868)\uff0c\u7136\u540e\u8fd4\u56de\u4e00\u4e2a\u5bf9\u5e94\u7684\u8fed\u4ee3\u5668(\u6211\u611f\u89c9\u5e94\u8be5\u662f\u4e00\u4e2a <code>iter</code> \u7c7b\u578b\u7684\u6784\u9020\u51fd\u6570)\uff0c\u5e76\u4e14\u8fed\u4ee3\u5668\u7684\u521d\u59cb\u7684\u4f4d\u7f6e\u4f4d\u4e8e\u6570\u636e(\u5982\u5217\u8868)\u7684\u8d77\u59cb\u7aef(\u7b2c\u4e00\u4e2a\u5143\u7d20\u4e4b\u524d)\uff0c\u5e76\u4e14\u5982\u679c\u4e24\u6b21\u5bf9\u540c\u4e00\u4e2a\u5217\u8868\u8c03\u7528 <code>iter()</code> \u51fd\u6570\uff0c\u8fd4\u56de\u7684\u662f\u4e24\u4e2a\u4e0d\u540c\u7684\u8fed\u4ee3\u5668\uff0c\u5373</p> <pre><code>&gt;&gt;&gt; s = [3, 4, 5]\n&gt;&gt;&gt; t = iter(s)\n&gt;&gt;&gt; next(t)\n3\n&gt;&gt;&gt; next(t)\n4\n&gt;&gt;&gt; u = iter(s)\n&gt;&gt;&gt; next(u)\n3\n&gt;&gt;&gt; next(t)\n5\n&gt;&gt;&gt; next(u)\n4\n</code></pre> </li> <li> <p><code>next()</code> \u4f20\u5165\u4e00\u4e2a\u8fed\u4ee3\u5668(\u4f20\u5165\u53ef\u8fed\u4ee3\u6570\u636e\u4f1a\u62a5\u9519)\uff0c\u8fd4\u56de\u8fed\u4ee3\u5668\u7684\u540e\u4e00\u4e2a\u5143\u7d20\uff0c\u5e76\u5411\u524d\u79fb\u52a8\u4e00\u4e2a\u4f4d\u7f6e\uff0c\u5373\u4e0b\u6b21\u518d\u8c03\u7528 <code>next()</code> \u5e76\u4f20\u5165\u540c\u4e00\u4e2a\u8fed\u4ee3\u5668\uff0c\u8fd4\u56de\u7684\u4f1a\u662f\u53e6\u4e00\u4e2a\u5143\u7d20</p> </li> </ul>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part1/#2_19","title":"2","text":"<p>\u5982\u679c\u7528 <code>list()</code> \u53bb\u4f20\u5165\u4e00\u4e2a\u8fed\u4ee3\u5668\uff0c\u90a3\u4e48\u4f1a\u8fd4\u56de\u4e00\u4e2a\u5217\u8868\u5305\u542b\u8fed\u4ee3\u5668\u4e4b\u540e\u7684\u6240\u6709\u5143\u7d20\uff0c\u4e0d\u5305\u542b\u4e4b\u524d\u7684\uff0c\u5e76\u4e14\u4f1a\u5c06\u8fed\u4ee3\u5668\u7684\u4f4d\u7f6e\u79fb\u52a8\u5230\u5217\u8868\u7684\u672b\u7aef</p> <pre><code>&gt;&gt;&gt; s = [[1, 2], 3, 4, 5]\n&gt;&gt;&gt; s\n[[1, 2], 3, 4, 5]\n&gt;&gt;&gt; t = iter(s)\n&gt;&gt;&gt; next(t)\n[1, 2]\n&gt;&gt;&gt; next(t)\n3\n&gt;&gt;&gt; list(t)\n[4, 5]\n&gt;&gt;&gt; next(t)\nTraceback (most recent call last):\n  File \"&lt;stdin&gt;\", line 1, in &lt;module&gt;\nStopIteration\n</code></pre>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part1/#3_16","title":"3","text":"<p>A dictionary, its keys, its values, and its items are all iterable values</p> <p><code>dict.keys</code> <code>dict.values</code> <code>dict.items</code> \u90fd\u662f\u53ef\u4ee5\u8fed\u4ee3\u7684\u5bf9\u8c61</p> <ul> <li>\u5982\u679c\u5bf9 <code>iter()</code> \u76f4\u63a5\u4f20\u5165\u4e00\u4e2a\u5b57\u5178\uff0c\u8fd4\u56de\u7684\u8fed\u4ee3\u5668\u5bf9\u5e94\u7684\u662fkeys\u7684\u8fed\u4ee3\u5668</li> <li>\u5bf9 <code>next()</code> \u4f20\u5165 <code>dict.items</code> \u5bf9\u5e94\u7684\u8fed\u4ee3\u5668\uff0c\u8fd4\u56de\u7684\u662f\u7531\u5b57\u5178\u7684key\u548c\u5bf9\u5e94\u7684value\u7ec4\u6210\u7684\u4e8c\u5143\u5143\u7ec4</li> </ul> <pre><code>&gt;&gt;&gt; d = {'one': 1, 'two': 2, 'three': 3}\n&gt;&gt;&gt; d['zero'] = 0\n&gt;&gt;&gt; k = iter(d.keys())  # or iter(d)\n&gt;&gt;&gt; next(k)\n'one'\n&gt;&gt;&gt; next(k)\n'two'\n&gt;&gt;&gt; next(k)\n'three'\n&gt;&gt;&gt; next(k)\n'zero'\n&gt;&gt;&gt; v = iter(d.values())\n&gt;&gt;&gt; next(v)\n1\n&gt;&gt;&gt; next(v)\n2\n&gt;&gt;&gt; next(v)\n3\n&gt;&gt;&gt; next(v)\n0\n&gt;&gt;&gt; i = iter(d.items())\n&gt;&gt;&gt; next(i)\n('one', 1)\n&gt;&gt;&gt; next(i)\n('two', 2)\n&gt;&gt;&gt; next(i)\n('three', 3)\n&gt;&gt;&gt; next(i)\n('zero', 0)\n</code></pre>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part1/#4_13","title":"4","text":"<p>\u5982\u679c\u6539\u53d8\u4e00\u4e2a\u5b57\u5178\u7684\u5927\u5c0f(\u7ecf\u8fc7\u6d4b\u8bd5\uff0c\u7ed9\u5b57\u5178\u6dfb\u52a0\u5143\u7d20\uff0c\u4e0d\u4f1a\u4f7f\u5f97\u4e4b\u524d\u6784\u5efa\u7684\u8fed\u4ee3\u5668\u5931\u6548)\uff0c\u6bd4\u5982\u6dfb\u52a0\u4e00\u7ec4\u65b0\u7684\u952e\u503c\u5bf9\uff0c\u6216\u8005\u5220\u53bb\uff0c\u4f1a\u4f7f\u5f97\u4e4b\u524d\u6784\u5efa\u7684\u8fed\u4ee3\u5668\u4e0d\u80fd\u4f7f\u7528(keys, values, items\u90fd\u4e0d\u80fd)</p> <pre><code>&gt;&gt;&gt; d = {'one': 1, 'two': 2}\n&gt;&gt;&gt; k = iter(d)\n&gt;&gt;&gt; next(k)\n'one'\n&gt;&gt;&gt; d['zero'] = 0\n&gt;&gt;&gt; next(k)\nTraceback (most recent call last):\n  File \"&lt;stdin&gt;\", line 1, in &lt;module&gt;\nRuntimeError: dictionary changed size during iteration\n&gt;&gt;&gt; d\n{'one': 1, 'two': 2, 'zero': 0}\n&gt;&gt;&gt; k = iter(d)\n&gt;&gt;&gt; next(k)\n'one'\n&gt;&gt;&gt; next(k)\n'two'\n&gt;&gt;&gt; d['zero'] = 5\n&gt;&gt;&gt; next(k)\n'zero'\n</code></pre> <p>\u800c\u5982\u679c\u53ea\u662f\u4fee\u6539\u5df2\u5b58\u5728\u7684\u952e\u503c\u5bf9\u7684\u503c\uff0c\u4e0d\u4f1a\u4f7f\u5f97\u4e4b\u524d\u6784\u5efa\u7684\u8fed\u4ee3\u5668\u5931\u6548(values, items\u5bf9\u5e94\u7684\u8fed\u4ee3\u5668\u5728\u4fee\u6539\u4e86\u5b57\u5178\u4e4b\u540e\u8fde\u63a5\u7684\u4f1a\u662f\u4fee\u6539\u4e4b\u540e\u7684\u503c)</p>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part1/#5_9","title":"5","text":"<p><code>for</code> \u8bed\u53e5\u4e5f\u53ef\u4ee5\u4f7f\u7528\u8fed\u4ee3\u5668\uff0c\u4f46\u53ea\u662f\u4ece\u8fed\u4ee3\u5668\u5f53\u524d\u7684\u4f4d\u7f6e\u5f00\u59cb\uff0c\u5e76\u4e14\u4f1a\u5c06\u8fed\u4ee3\u5668\u7684\u4f4d\u7f6e\u79fb\u52a8\u5230\u6700\u540e\uff0c(\u611f\u89c9\u8ddf\u7b2c\u4e8c\u70b9\u5f88\u76f8\u50cf)</p> <pre><code>&gt;&gt;&gt; r = range(3, 6)\n&gt;&gt;&gt; ri = iter(r)\n&gt;&gt;&gt; next(ri)\n3\n&gt;&gt;&gt; for i in ri:\n...     print(i)\n...\n4\n5\n&gt;&gt;&gt; for i in ri:\n...     print(i)\n...\n&gt;&gt;&gt; next(ri)\nTraceback (most recent call last):\n  File \"&lt;stdin&gt;\", line 1, in &lt;module&gt;\nStopIteration\n</code></pre>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part1/#6_7","title":"6","text":"<p>\u4e00\u4e9b\u4f1a\u8fd4\u56de\u8fed\u4ee3\u5668\u7684 built-in functions</p> <p>\u4e0a\u56fe\u4e2d\u7684 <code>iterable</code> \u4e5f\u5305\u62ec\u8fed\u4ee3\u5668\uff0c\u6240\u4ee5\u8fed\u4ee3\u5668\u4e5f\u7b97\u4f5c\u53ef\u8fed\u4ee3\u5bf9\u8c61</p> <p>John\u7684\u51e0\u4e2aDemo</p> <ol> <li> <p>\u8fd9\u662f\u4e00\u4e2a\u7b80\u5355\u5c55\u793a\u7684\u5229\u7528 <code>map</code> \u6765\u83b7\u53d6 \u4e00\u4e2a\u5c06\u4f20\u5165\u51fd\u6570\u5957\u7528\u5728\u8fed\u4ee3\u51fa\u6765\u7684\u6570\u636e\u7684\u8fed\u4ee3\u5668 \u7684\u4f8b\u5b50</p> <pre><code>&gt;&gt;&gt; bcd = ['b', 'c', 'd']\n&gt;&gt;&gt; [x.upper() for x in bcd]\n['B', 'C', 'D']\n&gt;&gt;&gt; map(lambda x: x.upper(), bcd)\n&lt;map object at 0x000002597B19F730&gt;\n&gt;&gt;&gt; m = map(lambda x: x.upper(), bcd)\n&gt;&gt;&gt; next(m)\n'B'\n&gt;&gt;&gt; next(m)\n'C'\n&gt;&gt;&gt; next(m)\n'D'\n&gt;&gt;&gt; next(m)\nTraceback (most recent call last):\n  File \"&lt;stdin&gt;\", line 1, in &lt;module&gt;\nStopIteration\n&gt;&gt;&gt;\n</code></pre> </li> <li> <p>\u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c\u53ef\u4ee5\u6ce8\u610f\u5230\uff0cmap\u8fd4\u56de\u7684\u8fed\u4ee3\u5668\uff0c\u5e76\u4e0d\u662f\u76f4\u63a5\u628a \u4f20\u5165\u7684\u51fd\u6570\u5bf9\u53ef\u8fed\u4ee3\u5bf9\u8c61\u7684\u6bcf\u4e2a\u6570\u636e\u7684\u8fd4\u56de\u503c\u5b58\u5728\u8fed\u4ee3\u5668\u4e2d\uff0c\u800c\u662f\u5c06\u53ef\u8fed\u4ee3\u5bf9\u8c61\u548c\u4f20\u5165\u7684\u51fd\u6570\u7ed1\u5b9a\u5728\u540c\u4e00\u4e2a\u8fed\u4ee3\u5668\u91cc\uff0c\u5728\u8fed\u4ee3\u65f6\u5c31\u7528==\u8fed\u4ee3\u5668\u8fed\u4ee3\u8fd4\u56de\u7684\u6570\u636e==\u53bb\u8c03\u7528\u51fd\u6570(\u6240\u4ee5\u624d\u4f1a\u8fd0\u884c <code>print</code> \u51fd\u6570\uff0c\u5373\u6253\u5370\u51fa\u4e1c\u897f)</p> <pre><code>def double(x):\n    print('**', x, '=&gt;', 2 * x, '**')\n    return 2 * x\n</code></pre> <pre><code>&gt;&gt;&gt; m = map(double, [3, 5, 7])\n&gt;&gt;&gt; next(m)\n** 3 =&gt; 6 **\n6\n&gt;&gt;&gt; next(m)\n** 5 =&gt; 10 **\n10\n&gt;&gt;&gt; next(m)\n** 7 =&gt; 14 **\n14\n&gt;&gt;&gt;\n</code></pre> </li> <li> <p>\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c\u5c55\u793a\u4e86 <code>filter</code> \uff0c\u548c <code>map</code> \u5f88\u7c7b\u4f3c\uff0c\u4e5f\u662f\u5c06\u8fed\u4ee3\u5bf9\u8c61\u548c\u51fd\u6570\u7ed1\u5b9a\u5230\u4e00\u8d77(\u800c\u4e0d\u662f\u76f4\u63a5\u53d6\u76ee\u6807\u7684\u8fd4\u56de\u503c\uff0c\u4e5f\u6ca1\u6709\u4fdd\u5b58\u8fed\u4ee3\u5bf9\u8c61\u7684\u503c)\uff0c\u6240\u4ee5\u5728\u8fed\u4ee3 <code>filter</code> \u8fd4\u56de\u7684\u8fed\u4ee3\u5668==\u65f6\uff0c\u662f==\u5148\u8fed\u4ee3\u5b83\u7684\u8fed\u4ee3\u5bf9\u8c61\uff0c\u518d\u5c06\u8fed\u4ee3\u8fd4\u56de\u503c\u653e\u5165\u51fd\u6570\u5224\u65ad(\u4e0d\u7b26\u5408\u5c31\u7ee7\u7eed\u8fed\u4ee3)(\u6240\u4ee5 <code>double</code> \u5185\u90e8\u7684print\u8bed\u53e5\u624d\u4f1a\u6267\u884c)\uff0c\u7136\u540e\u8fd4\u56de\u7b26\u5408(\u5224\u65ad)\u51fd\u6570\u7684\u503c\u3002\u4ece\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\u53ef\u4ee5\u5f88\u6e05\u6670\u5730\u770b\u5230\u8fd9\u4e00\u70b9</p> <pre><code>&gt;&gt;&gt; m = map(double, range(3, 7))\n&gt;&gt;&gt; f = lambda y: y &gt;= 10\n&gt;&gt;&gt; t = filter(f, m)\n&gt;&gt;&gt; next(t)\n** 3 =&gt; 6 **\n** 4 =&gt; 8 **\n** 5 =&gt; 10 **\n10\n&gt;&gt;&gt; next(t)\n** 6 =&gt; 12 **\n12\n&gt;&gt;&gt; list(t)\n[]\n&gt;&gt;&gt; list(filter(f, map(double, range(3, 7))))\n** 3 =&gt; 6 **\n** 4 =&gt; 8 **\n** 5 =&gt; 10 **\n** 6 =&gt; 12 **\n[10, 12]\n&gt;&gt;&gt;\n</code></pre> </li> <li> <p>\u8fd9\u4e2a\u4f8b\u5b50\u5c55\u73b0\u4e86 <code>reversed</code> \u8fd4\u56de\u7684\u662f\u4e00\u4e2a\u8fed\u4ee3\u5668(\u6240\u4ee5\u4e0d\u4f1a\u7b49\u4e8e\u539f\u6765\u7684\u5217\u8868)</p> <pre><code>&gt;&gt;&gt; t = [1, 2, 3, 2, 1]\n&gt;&gt;&gt; t\n[1, 2, 3, 2, 1]\n&gt;&gt;&gt; reversed(t)\n&lt;list_reverseiterator object at 0x000002597B1D12D0&gt;\n&gt;&gt;&gt; reversed(t) == t\nFalse\n&gt;&gt;&gt; list(reversed(t))\n[1, 2, 3, 2, 1]\n&gt;&gt;&gt; list(reversed(t)) == t\nTrue\n&gt;&gt;&gt;\n</code></pre> </li> <li> <p>\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c\u5b57\u5178\u952e\u503c\u5bf9\u7684\u987a\u5e8f\u548cJohn\u7684demo\u6709\u70b9\u4e0d\u4e00\u6837\uff0c\u5e94\u8be5\u662f\u7531\u4e8epython\u7248\u672c\u4e0d\u540c\u7684\u539f\u56e0</p> <pre><code>&gt;&gt;&gt; d = {'a': 1, 'b': 2}\n&gt;&gt;&gt; d\n{'a': 1, 'b': 2}\n&gt;&gt;&gt; items = iter(d.items())\n&gt;&gt;&gt; next(items)\n('a', 1)\n&gt;&gt;&gt; next(items)\n('b', 2)\n&gt;&gt;&gt; items = zip(d.keys(), d.values())\n&gt;&gt;&gt; next(items)\n('a', 1)\n&gt;&gt;&gt; next(items)\n('b', 2)\n&gt;&gt;&gt;\n</code></pre> <p></p> </li> </ol>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part1/#7_2","title":"7","text":"<p>\u751f\u6210\u5668\u548c\u751f\u6210\u5668\u51fd\u6570 Generators and Generator Functions</p> <p>\u4f7f\u7528 <code>yield</code> \u800c\u4e0d\u662f <code>return</code> \u5173\u952e\u5b57\u6765\u8fd4\u56de\u503c\u7684\u51fd\u6570\uff0c\u5c31\u662f\u751f\u6210\u5668\u51fd\u6570\uff0c\u800c\u751f\u6210\u5668\u51fd\u6570\u4f1a\u8fd4\u56de\u4e00\u4e2a\u751f\u6210\u5668\uff0c\u751f\u6210\u5668\u662f\u4e00\u4e2a\u8fed\u4ee3\u5668\uff0c\u8fed\u4ee3\u65f6\u4f1a\u6309\u7167\u51fd\u6570\u4e2d <code>yield</code> \u8bed\u53e5\u7684\u987a\u5e8f\u6765\u8fd4\u56de\u503c\uff0c\u53c2\u8003\u4e0a\u56fe</p> <p>John\u7684\u4e00\u4e2ademo</p> <pre><code>def evens(start, end):\n    even = start + (start % 2)\n    while even &lt; end:\n        yield even\n        even += 2\n</code></pre> <pre><code>&gt;&gt;&gt; t = evens(2, 10)\n&gt;&gt;&gt; t\n&lt;generator object evens at 0x000002597B170580&gt;\n&gt;&gt;&gt; next(t)\n2\n&gt;&gt;&gt; next(t)\n4\n&gt;&gt;&gt; next(t)\n6\n&gt;&gt;&gt; next(t)\n8\n&gt;&gt;&gt; next(t)\nTraceback (most recent call last):\n  File \"&lt;stdin&gt;\", line 1, in &lt;module&gt;\nStopIteration\n&gt;&gt;&gt; list(evens(1, 10))\n[2, 4, 6, 8]\n&gt;&gt;&gt;\n</code></pre> <p>John\u7684\u89e3\u91ca\u662f\uff0c\u5f53\u4e00\u4e2a Generator Function \u88ab\u8c03\u7528\u65f6\uff0c\u51fd\u6570\u91cc\u9762\u7684\u8bed\u53e5\u4e0d\u4f1a\u88ab\u7acb\u5373\u6267\u884c\uff0c\u800c\u662f\u76f4\u63a5\u8fd4\u56de\u4e00\u4e2a Generator \uff0c\u800c\u5728 generator \u6bcf\u6b21\u8fed\u4ee3\u65f6\uff0c\u51fd\u6570\u5185\u7684\u8bed\u53e5\u624d\u4f1a\u88ab\u6267\u884c\uff0c\u4e14\u53ea\u6267\u884c\u5230\u4e0b\u4e00\u4e2a <code>yield</code> \u5904\u5c31\u6682\u505c\u6267\u884c\uff0c\u5e76\u8fd4\u56de\u503c</p>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part1/#8_1","title":"8","text":"<p><code>yield from</code> \u8bed\u53e5\uff0c\u540e\u9762\u53ef\u4ee5\u662f \u8fed\u4ee3\u5668 \u6216\u8005 \u53ef\u8fed\u4ee3\u5bf9\u8c61 (\u5982\u679c\u662f\u8fed\u4ee3\u5668\u4f30\u8ba1\u4f1a\u4fee\u6539\u8fed\u4ee3\u5668\u7684\u4f4d\u7f6e)</p> <p>\u4e0a\u56fe\u4e2d\u8fd8\u5c55\u793a\u4e86\u751f\u6210\u5668\u51fd\u6570\u7684\u4e00\u79cd\u7c7b\u4f3c\u4e8e\u9012\u5f52\u7684\u5199\u6cd5</p> <pre><code>def countdown(k):\n    if k &gt; 0:\n        yield k\n        for x in countdown(k - 1):\n            yield x\n</code></pre> <p>\u66f4\u7b80\u6d01\u7684\u5199\u6cd5\u5c31\u662f</p> <pre><code>def countdown(k):\n    if k &gt; 0:\n        yield k\n        yield from countdown(k - 1)\n</code></pre>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part1/#9_1","title":"9","text":"<p>John\u7684\u4e00\u4e2a\u795e\u5947\u7684\u751f\u6210\u5668\u51fd\u6570\u7684demo\uff0c\u611f\u89c9\u5f88\u50cf\u9012\u5f52\u7684\u611f\u89c9\uff0c\u5e76\u4e14\u591a\u4e2a\u751f\u6210\u5668\u51fd\u6570\u7ec4\u5408\u4f7f\u7528\u53ef\u4ee5\u4ea7\u751f\u795e\u5947\u7684\u6548\u679c</p>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part1/#lecture-17-qa","title":"Lecture 17 Q&amp;A","text":""},{"location":"Notes%20of%20Courses/CS61A/CS61A_part1/#1_34","title":"1","text":"<p>John \u5173\u4e8e\u8fed\u4ee3\u5668\u7684\u89e3\u91ca</p> <p>Quote</p> <p>yeah good question, so if an iterator is not a list, what is it. um, there are lots of different kinds of, uh, iterators, so you know it more by its behavior than its, like what it's constituted of. an iterator is something that you can call next on, and get more elements. in the case of a list, the iterator for a list, is more than just a list, it's kind of a reference to the list along with a position in that list that tells you where you are, so that if you call the next thing the iterator advances, meaning that if you called next again you'd get something else than you did the first time. so in that sense, it's, it has different behavior than a list, because it's both a list and like a marker for where you are. but list iterators are not the only kind of iterators, you could have an iterator through the labels in a tree, you could have an iterator through the prefixes in a string, you could have an iterator kind of through anything, and it's just a description of something that lets you go through multiple elements in some order by calling next on the iterator and getting the next value, and you can do that over and over again. so it's quite an abstract thing as opposed to, feeling quite as concrete as for example a list.</p> <p>\u597d\u95ee\u9898\uff0c\u5982\u679c\u8fed\u4ee3\u5668\u4e0d\u662f\u4e00\u4e2a\u5217\u8868\uff0c\u5b83\u662f\u4ec0\u4e48\u3002\u55ef\uff0c\u6709\u5f88\u591a\u4e0d\u540c\u7c7b\u578b\u7684\u8fed\u4ee3\u5668\uff0c\u6240\u4ee5\u4f60\u66f4\u591a\u5730\u901a\u8fc7\u5b83\u7684\u884c\u4e3a\u800c\u4e0d\u662f\u5b83\u7684\u884c\u4e3a\u6765\u4e86\u89e3\u5b83\uff0c\u6bd4\u5982\u5b83\u662f\u7531\u4ec0\u4e48\u7ec4\u6210\u7684\u3002\u8fed\u4ee3\u5668\u662f\u60a8\u63a5\u4e0b\u6765\u53ef\u4ee5\u8c03\u7528\u5e76\u83b7\u53d6\u66f4\u591a\u5143\u7d20\u7684\u4e1c\u897f\u3002\u5728\u5217\u8868\u7684\u60c5\u51b5\u4e0b\uff0c\u5217\u8868\u7684\u8fed\u4ee3\u5668\u4e0d\u4ec5\u4ec5\u662f\u4e00\u4e2a\u5217\u8868\uff0c\u5b83\u662f\u5bf9\u5217\u8868\u7684\u5f15\u7528\uff0c\u4ee5\u53ca\u5217\u8868\u4e2d\u7684\u4e00\u4e2a\u4f4d\u7f6e\uff0c\u544a\u8bc9\u4f60\u5728\u54ea\u91cc\uff0c\u6240\u4ee5\u5982\u679c\u4f60\u8c03\u7528\u4e0b\u4e00\u4e2a\u4e1c\u897f\uff0c\u8fed\u4ee3\u5668\u4f1a\u524d\u8fdb\uff0c\u8fd9\u610f\u5473\u7740\u5982\u679c\u4f60\u518d\u6b21\u8c03\u7528next\uff0c\u4f60\u4f1a\u5f97\u5230\u6bd4\u7b2c\u4e00\u6b21\u4e0d\u540c\u7684\u4e1c\u897f\u3002\u4ece\u8fd9\u4e2a\u610f\u4e49\u4e0a\u8bf4\uff0c\u5b83\u7684\u884c\u4e3a\u4e0e\u5217\u8868\u4e0d\u540c\uff0c\u56e0\u4e3a\u5b83\u65e2\u662f\u4e00\u4e2a\u5217\u8868\uff0c\u53c8\u50cf\u662f\u4e00\u4e2a\u4f60\u6240\u5728\u4f4d\u7f6e\u7684\u6807\u8bb0\u3002\u4f46\u5217\u8868\u8fed\u4ee3\u5668\u5e76\u4e0d\u662f\u552f\u4e00\u4e00\u79cd\u8fed\u4ee3\u5668\uff0c\u4f60\u53ef\u4ee5\u901a\u8fc7\u6811\u4e2d\u7684\u6807\u7b7e\u6709\u4e00\u4e2a\u8fed\u4ee3\u5668\u3002\u4f60\u53ef\u4ee5\u901a\u8fc7\u5b57\u7b26\u4e32\u4e2d\u7684\u524d\u7f00\u6709\u4e00\u4e2a\u8fed\u4ee3\u5668\u3002\u4f60\u4e5f\u53ef\u4ee5\u901a\u8fc7\u4efb\u4f55\u4e1c\u897f\u6709\u4e00\u4e2aiterator\u3002\u5b83\u53ea\u662f\u4e00\u4e2a\u4e1c\u897f\u7684\u63cf\u8ff0\uff0c\u8ba9\u4f60\u901a\u8fc7\u5728\u8fed\u4ee3\u5668\u4e0a\u8c03\u7528next\u5e76\u83b7\u5f97\u4e0b\u4e00\u4e2a\u503c\u6765\u6309\u67d0\u79cd\u987a\u5e8f\u904d\u5386\u591a\u4e2a\u5143\u7d20\uff0c\u4f60\u53ef\u4ee5\u4e00\u6b21\u53c8\u4e00\u6b21\u5730\u8fd9\u6837\u505a\u3002\u6240\u4ee5\u8fd9\u662f\u4e00\u4ef6\u975e\u5e38\u62bd\u8c61\u7684\u4e8b\u60c5\uff0c\u800c\u4e0d\u662f\u50cf\u5217\u8868\u4e00\u6837\u5177\u4f53\u3002</p>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part1/#2_20","title":"2","text":"<p>John\u5c55\u793a\u4e86\u4e00\u79cd\u4e0d\u4f7f\u7528 <code>yield</code> \u5173\u952e\u5b57\u4e5f\u53ef\u4ee5\u5b9e\u73b0\u76f8\u540c\u529f\u80fd\u7684\u5199\u6cd5\uff1a</p> <pre><code>def prefixes(s):\n    result = []\n    if s:\n        for x in prefixes(s[:-1]):\n            result.append(x)\n    return result\n\nprint(list(prefixes('doges')))\n</code></pre> <p>\u539f\u672c\u7684\u4f7f\u7528 <code>yield</code> \u7684\u5199\u6cd5</p> <pre><code>def prefixes(s):\n    if s:\n        for x in prefixes(s[:-1]):\n            yield x\n        yield s\n\nprint(list(prefixes('doges')))\n</code></pre>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part1/#3_17","title":"3","text":"<p>John \u548c Hany \u89e3\u91ca\u5173\u4e8e\u8fed\u4ee3\u5668\u6bcf\u6b21\u8fed\u4ee3\u65f6\u5c31\u4f1a\u88ab\u66f4\u6539\u7684\u7279\u70b9(\u4e00\u6b21\u6027\u4f7f\u7528\u7684\u7279\u70b9)</p> <p>Quote</p> <pre><code>s = [1, 2, 3]\nt = iter(s)\n\nlen(list(t)) #-&gt; returns 3\nlen(list(t)) #-&gt; returns 0?\n</code></pre> <p>John:</p> <p>yeah good question, so the questions about this example and why is it the case that when you get the length of, uh, the result of listing out the contents of an iterator twice you get a different thing each time, first time you got three things, next time you got zero things. this isn't something having to do with len, this is having to do with how list interacts with an iterator. when you call list on an iterator, you end up building a list of all the contents of that iterator, but the iterator is used up as a side effect of calling list on it. so, if i have an iterator over these values, um, i can get one thing out of it, but then if i get another thing i get a different thing. list is kind of like calling next over and over again, and putting all the results in a list. so as soon as you call list on t, you're going to get everything that's left over in the iterator, that hasn't been used up or returned already. so we've already seen the one, we've seen the two, therefore calling list on t will just show us the three. and now t is used up, i can't get the next thing in t, because we're already at the end, and so if i try to list everything that's left and t, i'll get an empty list. so your version was start with this, get all the contents of that, which is a list containing one two and three. if i do this, i'm changing t. this is, uh, every time you get elements from an iterator, you're changing that iterator, which means you can't really use it again. so if you get the length of this you get three, you get the length of this you get zero.</p> <p> </p> <p>Hany:</p> <p>so think of these iterators as one use disposable operators, once you've gone through the list, either next next next next, or the list of it is you're essentially enumerating the list, it's gone. right, so by the way you could have implemented this yourself, you could have written a function that every time you access an element, the next element, you delete that element from the list, that's essentially what's going on here. yeah. and so once you, it's a funny thing about iterators by the way, is that once you look at the list, it's, it's sort of like, uh, what is it, it's like snapchat, right, the image comes in, you look at it, and then it vanishes, it's gone.</p> <p> </p> <p>John:</p> <p>that is beautiful.</p> <p> </p> <p>Hany:</p> <p>yeah, you got to be impressed by somebody my age, making a snapchat reference, that's, that's i think you know, you have a little credit for that.</p> <p> </p> <p>John:</p> <p>perfect snapchat analogy.</p> <pre><code>s = [1, 2, 3]\nt = iter(s)\n\nlen(list(t)) #-&gt; returns 3\nlen(list(t)) #-&gt; returns 0?\n</code></pre> <p>John:</p> <p>\u662f\u7684\uff0c\u8fd9\u662f\u4e00\u4e2a\u5f88\u597d\u7684\u95ee\u9898\u3002\u5173\u4e8e\u8fd9\u4e2a\u793a\u4f8b\u7684\u95ee\u9898\u662f\uff0c\u4e3a\u4ec0\u4e48\u5728\u4e24\u6b21\u83b7\u53d6\u8fed\u4ee3\u5668\u7684\u5185\u5bb9\u7684\u957f\u5ea6\u65f6\uff0c\u6bcf\u6b21\u90fd\u4f1a\u5f97\u5230\u4e0d\u540c\u7684\u7ed3\u679c\uff1f\u7b2c\u4e00\u6b21\u5f97\u5230\u4e09\u4e2a\u5143\u7d20\uff0c\u4e0b\u4e00\u6b21\u5374\u5f97\u5230\u96f6\u4e2a\u5143\u7d20\uff1f\u8fd9\u4e0e <code>len</code> \u51fd\u6570\u65e0\u5173\uff0c\u800c\u4e0e <code>list</code> \u5982\u4f55\u4e0e\u8fed\u4ee3\u5668\u4ea4\u4e92\u6709\u5173\u3002\u5f53\u4f60\u5728\u8fed\u4ee3\u5668\u4e0a\u8c03\u7528 <code>list</code> \u65f6\uff0c\u4f60\u5b9e\u9645\u4e0a\u6b63\u5728\u6784\u5efa\u4e00\u4e2a\u5305\u542b\u8be5\u8fed\u4ee3\u5668\u7684\u6240\u6709\u5185\u5bb9\u7684\u5217\u8868\uff0c\u4f46\u8c03\u7528 <code>list</code> \u4f1a\u6d88\u8017\u8fed\u4ee3\u5668\uff0c\u8fd9\u662f\u4e00\u4e2a\u526f\u4f5c\u7528\u3002\u56e0\u6b64\uff0c\u5982\u679c\u6211\u6709\u4e00\u4e2a\u8fed\u4ee3\u5668\u904d\u5386\u8fd9\u4e9b\u503c\uff0c\u6211\u53ef\u4ee5\u4ece\u4e2d\u83b7\u53d6\u4e00\u4e2a\u5143\u7d20\uff0c\u4f46\u5982\u679c\u6211\u518d\u6b21\u83b7\u53d6\u4e00\u4e2a\u5143\u7d20\uff0c\u6211\u5c06\u5f97\u5230\u4e0d\u540c\u7684\u7ed3\u679c\u3002 <code>list</code> \u5c31\u50cf\u4e00\u6b21\u53c8\u4e00\u6b21\u5730\u8c03\u7528 <code>next</code> \uff0c\u7136\u540e\u5c06\u6240\u6709\u7ed3\u679c\u653e\u5165\u5217\u8868\u4e2d\u3002\u56e0\u6b64\uff0c\u4e00\u65e6\u5728 <code>t</code> \u4e0a\u8c03\u7528 <code>list</code> \uff0c\u4f60\u5c06\u83b7\u5f97\u8fed\u4ee3\u5668\u4e2d\u5269\u4f59\u7684\u6240\u6709\u5185\u5bb9\uff0c\u8fd9\u4e9b\u5185\u5bb9\u5c1a\u672a\u88ab\u4f7f\u7528\u6216\u8fd4\u56de\u3002\u6240\u4ee5\u6211\u4eec\u5df2\u7ecf\u770b\u5230\u4e861\u548c2\uff0c\u56e0\u6b64\u5728 <code>t</code> \u4e0a\u8c03\u7528 <code>list</code> \u5c06\u53ea\u663e\u793a3\u3002\u73b0\u5728 <code>t</code> \u5df2\u7ecf\u88ab\u7528\u5b8c\u4e86\uff0c\u6211\u65e0\u6cd5\u518d\u83b7\u53d6 <code>t</code> \u4e2d\u7684\u4e0b\u4e00\u4e2a\u5143\u7d20\uff0c\u56e0\u4e3a\u6211\u4eec\u5df2\u7ecf\u5230\u8fbe\u672b\u5c3e\uff0c\u6240\u4ee5\u5982\u679c\u6211\u5c1d\u8bd5\u5217\u51fa <code>t</code> \u4e2d\u5269\u4e0b\u7684\u6240\u6709\u5185\u5bb9\uff0c\u6211\u5c06\u5f97\u5230\u4e00\u4e2a\u7a7a\u5217\u8868\u3002\u6240\u4ee5\u4f60\u7684\u7248\u672c\u662f\u4ece\u8fd9\u4e2a\u5f00\u59cb\uff0c\u83b7\u53d6\u4e86\u5305\u542b1\u30012\u548c3\u7684\u5217\u8868\u3002\u5982\u679c\u6211\u505a\u8fd9\u4e2a\uff0c\u6211\u5c31\u6539\u53d8\u4e86 <code>t</code> \u3002\u6bcf\u5f53\u4ece\u8fed\u4ee3\u5668\u4e2d\u83b7\u53d6\u5143\u7d20\u65f6\uff0c\u4f60\u90fd\u4f1a\u6539\u53d8\u8be5\u8fed\u4ee3\u5668\uff0c\u8fd9\u610f\u5473\u7740\u4f60\u4e0d\u80fd\u518d\u6b21\u4f7f\u7528\u5b83\u3002\u56e0\u6b64\uff0c\u5982\u679c\u4f60\u83b7\u53d6\u8fd9\u4e2a\u7684\u957f\u5ea6\uff0c\u4f60\u4f1a\u5f97\u52303\uff0c\u5982\u679c\u4f60\u83b7\u53d6\u8fd9\u4e2a\u7684\u957f\u5ea6\uff0c\u4f60\u4f1a\u5f97\u52300\u3002</p> <p> </p> <p>Hany:</p> <p>\u6240\u4ee5\u628a\u8fd9\u4e9b\u8fed\u4ee3\u5668\u770b\u4f5c\u662f\u4e00\u6b21\u6027\u7684\u64cd\u4f5c\u7b26\uff0c\u4e00\u65e6\u4f60\u904d\u5386\u4e86\u5217\u8868\uff0c\u65e0\u8bba\u662f\u901a\u8fc7\u8fde\u7eed\u8c03\u7528 <code>next</code> \u8fd8\u662f\u901a\u8fc7\u8c03\u7528 <code>list</code> \uff0c\u5b83\u4eec\u90fd\u6d88\u5931\u4e86\u3002\u5bf9\uff0c\u987a\u4fbf\u8bf4\u4e00\u53e5\uff0c\u4f60\u5176\u5b9e\u53ef\u4ee5\u81ea\u5df1\u5b9e\u73b0\u8fd9\u4e2a\uff0c\u4f60\u53ef\u4ee5\u7f16\u5199\u4e00\u4e2a\u51fd\u6570\uff0c\u6bcf\u6b21\u8bbf\u95ee\u4e00\u4e2a\u5143\u7d20\uff0c\u90fd\u4ece\u5217\u8868\u4e2d\u5220\u9664\u90a3\u4e2a\u5143\u7d20\uff0c\u8fd9\u672c\u8d28\u4e0a\u5c31\u662f\u8fd9\u91cc\u53d1\u751f\u7684\u4e8b\u60c5\u3002\u662f\u7684\uff0c\u6240\u4ee5\u4e00\u65e6\u4f60\u770b\u8fc7\u5217\u8868\uff0c\u8fd9\u6709\u70b9\u50cf Snapchat\uff0c\u5bf9\u5427\uff1f\u56fe\u50cf\u8fdb\u6765\uff0c\u4f60\u770b\u4e86\u4e00\u773c\uff0c\u7136\u540e\u5b83\u5c31\u6d88\u5931\u4e86\uff0c\u6ca1\u6709\u4e86\u3002</p> <p> </p> <p>John:</p> <p>\u8fd9\u592a\u7cbe\u5f69\u4e86\u3002</p> <p> </p> <p>Hany:</p> <p>\u662f\u7684\uff0c\u4f60\u5f97\u5bf9\u6211\u8fd9\u4e2a\u5e74\u9f84\u7684\u4eba\u80fd\u591f\u63d0\u5230 Snapchat \u611f\u5230\u5370\u8c61\u6df1\u523b\uff0c\u6211\u60f3\u4f60\u5e94\u8be5\u7ed9\u6211\u70b9\u4fe1\u7528\u3002</p> <p> </p> <p>John:</p> <p>\u5b8c\u7f8e\u7684 Snapchat \u6bd4\u55bb\u3002</p>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part2/","title":"CS61A Part 2","text":"<p> \u7ea6 22492 \u4e2a\u5b57  3213 \u884c\u4ee3\u7801  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 115 \u5206\u949f</p> \u76ee\u5f55 <ul> <li>Lecture 18 Objects</li> <li>Lecture 18 Q&amp;A</li> <li>HW 04</li> <li>Lecture 19 Inheritance</li> <li>Lecture 19 Q&amp;A</li> <li>Lab 07</li> <li>Project Ants</li> <li>Lecture 20 Representation</li> <li>Lecture 20 Q&amp;A</li> <li>Lecture 21 Composition</li> <li>HW 05</li> <li>Lecture 22 Efficiency</li> <li>Lab 08</li> <li>Lecture 23 Decomposition</li> <li>Lecture 23 Q&amp;A</li> <li>Lecture 24 Data Example</li> <li>Lecture 24 Q&amp;A</li> <li>Lab 09</li> <li>Lecture 25 Users</li> <li>Lecture 25 Q&amp;A</li> <li>Lecture 26 Ethical AI &amp; Data</li> <li>Lecture 27 Scheme</li> <li>Lecture 27  Q&amp;A</li> <li>Lab 10</li> <li>HW 06</li> <li>Lecture 28 Exception</li> <li>Lecture 28 Q&amp;A</li> <li>Lecture 29 Calculater</li> <li>Lecture 29 Q&amp;A</li> <li>HW 07</li> <li>Lab 11</li> <li>Project Scheme</li> </ul>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part2/#lecture-18-objects","title":"Lecture 18 Objects","text":""},{"location":"Notes%20of%20Courses/CS61A/CS61A_part2/#1","title":"1","text":"<p>\u5173\u4e8e class \u548c object \u4e4b\u95f4\u7684\u5173\u7cfb\u7684\u5f62\u5bb9</p> <p>Quote</p> <p>\u5173\u4e8e class \u548c object \u7684\u89e3\u91ca\uff1a</p> <ul> <li>class: A class combines (and abstracts) data and functions</li> <li>object: An object is an instantiation of a class</li> </ul>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part2/#2","title":"2","text":"<p>\u7c7b\u5185\u7684\u65b9\u6cd5\u5728\u7f16\u5199\u662f\uff0c\u7b2c\u4e00\u4e2a\u53c2\u6570\u987b\u662f <code>self</code> \uff0c</p> <p>\u4f46\u7c7b\u5185\u65b9\u6cd5\u5728\u88ab\u8c03\u7528\u7684\u65f6\u5019\uff0c\u4e0d\u9700\u8981\u4f20\u5165 <code>self</code> \u7684\u503c\uff0c\u6216\u8005\u8bf4 <code>self</code> \u5c31\u662f\u8c03\u7528\u65b9\u6cd5\u7684\u5b9e\u4f8b\uff0c\u6240\u4ee5\u53ea\u9700\u8981\u4f20\u5165\u4e4b\u540e\u7684\u53c2\u6570</p>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part2/#3","title":"3","text":"<p>python\u6709\u5185\u7f6e\u51fd\u6570\u53ef\u4ee5\u67e5\u8be2/\u8bbf\u95ee\u7c7b\u7684\u5b9e\u4f8b\u7684\u5c5e\u6027(attribute)\uff0c\u6216\u8005\u662f\u7c7b\u7684\u5c5e\u6027 (\u7c7b\u5185\u7684\u65b9\u6cd5\u7b97\u4f5c\u662f\u7c7b\u672c\u8eab\u7684\u5c5e\u6027\uff0c\u800c\u4e0d\u662f\u5177\u4f53\u5b9e\u4f8b\u7684\u5c5e\u6027)</p> <p><code>getattr()</code> \u53ef\u4ee5\u8bbf\u95ee\u5c5e\u6027\uff0c\u83b7\u53d6\u5bf9\u5e94\u7684\u503c</p> <p><code>hasatrr()</code> \u53ef\u4ee5\u770b\u662f\u5426\u6709\u67d0\u4e2a\u5c5e\u6027</p> <p>\u51fd\u6570\u7684\u7b2c\u4e00\u4e2a\u53c2\u6570\u9700\u8981\u4f20\u5165\u5b9e\u4f8b\uff0c\u7b2c\u4e8c\u4e2a\u53c2\u6570\u9700\u8981\u4f20\u5165\u8981\u67e5\u8be2\u7684\u5c5e\u6027\u7684\u5c5e\u6027\u540d(\u4ee5\u5b57\u7b26\u4e32\u4f20\u5165)</p>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part2/#4","title":"4","text":"<p>\u5982\u4e0a\u56fe\uff0c<code>\u7c7b\u540d.\u65b9\u6cd5\u540d</code> \u662f\u4e00\u4e2a\u51fd\u6570\uff0c\u5e76\u4e14 <code>self</code> \u53c2\u6570\u9700\u8981\u4f20\u5165\u4e1c\u897f\uff0c\u800c <code>\u5bf9\u8c61.\u65b9\u6cd5\u540d</code> \u662f\u4e00\u4e2a\u65b9\u6cd5\uff0c<code>self</code> \u4e0d\u7528\u4f20</p>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part2/#5","title":"5","text":"<p>\u7c7b\u5c5e\u6027</p> <p>\u5982\u4e0a\u56fe\uff0c\u5728\u7c7b\u4e2d\u8d4b\u503c\u7684\u53d8\u91cf\uff0c(\u5e94\u8be5)\u5c31\u662f\u7c7b\u7684\u5c5e\u6027(\u7c7b\u5185\u7684\u65b9\u6cd5\u4e5f\u7b97\u662f\u7c7b\u7684\u5c5e\u6027\uff0c\u7b2c3\u70b9\u6709\u63d0\u5230\u8fc7)\uff0c</p> <p>\u7c7b\u5c5e\u6027\u4e0d\u662f\u5bf9\u8c61/\u5b9e\u4f8b\u7684\u4e00\u90e8\u5206\uff0c\u800c\u662f\u7c7b\u7684\u4e00\u90e8\u5206\u3002\u6bcf\u6b21\u901a\u8fc7\u5bf9\u8c61\u6765\u8bbf\u95ee\u7c7b\u5c5e\u6027\uff0c\u8bbf\u95ee\u7684\u662f\u7c7b\u4e2d\u7684\u5c5e\u6027\uff0c\u800c\u901a\u8fc7 <code>\u5bf9\u8c61.\u5c5e\u6027\u540d</code> \u8d4b\u503c/\u66f4\u6539\u5c5e\u6027\uff0c\u5176\u5b9e\u662f\u5728\u5bf9\u8c61\u4e2d\u521b\u5efa/\u66f4\u6539\u5bf9\u5e94\u7684\u5c5e\u6027(\u6240\u4ee5\u901a\u8fc7\u5bf9\u8c61\u4fee\u6539\u201c\u7c7b\u5c5e\u6027\u201d\u4e0d\u4f1a\u66f4\u6539\u5b9e\u9645\u7684\u7c7b\u5c5e\u6027)</p>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part2/#lecture-18-qa","title":"Lecture 18 Q&amp;A","text":""},{"location":"Notes%20of%20Courses/CS61A/CS61A_part2/#1_1","title":"1","text":"<p>\u7c7b\u5c5e\u6027\u9664\u4e86\u53ef\u4ee5\u5728\u7c7b\u5185\u5b9a\u4e49\uff0c\u4e5f\u53ef\u4ee5\u5728\u7c7b\u4ee5\u5916\uff0c\u901a\u8fc7 <code>\u7c7b\u540d.\u5c5e\u6027\u540d</code> \u7684\u5f62\u5f0f\u8d4b\u503c\u53bb\u5b9a\u4e49\uff0c\u5982</p> <pre><code>class Account:\n    ...\n\nAccount.interest = 0.03\n</code></pre> <pre><code>&gt;&gt;&gt; Account.interest  0.03\n&gt;&gt;&gt; a = Account('John')\n&gt;&gt;&gt; a.interest\n0.03\n&gt;&gt;&gt; a.interest = 0.05\n&gt;&gt;&gt; a.interest\n0.05\n&gt;&gt;&gt; b = Account('Hany')\n&gt;&gt;&gt; b.interest\n0.03\n&gt;&gt;&gt; a.interest\n0.05\n&gt;&gt;&gt; a.interest = Account.interest\n&gt;&gt;&gt; a.interest\n0.03\n&gt;&gt;&gt; Account.interest = 0.04\n&gt;&gt;&gt; a.interest\n0.03\n&gt;&gt;&gt;\n</code></pre> <p>John\u7684\u8fd9\u6bb5\u4ee3\u7801\u6f14\u793a\uff0c\u663e\u793a\u4e86\u901a\u8fc7\u5bf9\u8c61\u6765\u4fee\u6539\u201c\u7c7b\u5c5e\u6027\u201d(\u6307\u76f8\u540c\u7684\u540d\u5b57)\u65f6\uff0c\u5176\u5b9e\u662f\u4fee\u6539\u7684\u662f\u5177\u4f53\u5bf9\u8c61\u4e2d\u7684\u5c5e\u6027</p> <p>\u7c7b\u548c\u5bf9\u8c61\u4e24\u8005\u5404\u81ea\u7684\u4fee\u6539\u90fd\u4e0d\u4f1a\u5f71\u54cd\u5230\u5bf9\u65b9\u7684\u5c5e\u6027</p> <p><code>del</code> \u8bed\u53e5\uff0c\u7ecf\u8fc7\u6d4b\u8bd5\uff0c\u662f\u53ef\u4ee5\u5c06\u5bf9\u8c61\u4e2d\u5df2\u6709\u7684\u5c5e\u6027\u6e05\u9664\u6389\uff0c\u4ece\u800c\u518d\u6b21\u8bbf\u95ee\u76f8\u540c\u7684\u5c5e\u6027\u540d\u65f6\uff0c\u83b7\u53d6\u5230\u7684\u662f\u7c7b\u5c5e\u6027\u7684\u503c</p> <pre><code>&gt;&gt;&gt; class Account:\n...     def __init__(self):\n...         return\n...\n&gt;&gt;&gt; Account.interest = 5\n&gt;&gt;&gt; p1 = Account()\n&gt;&gt;&gt; p1.interest\n5\n&gt;&gt;&gt; del p1.interest\nTraceback (most recent call last):\n  File \"&lt;stdin&gt;\", line 1, in &lt;module&gt;\nAttributeError: interest\n&gt;&gt;&gt; p1.interest += 2\n&gt;&gt;&gt; p1.interest\n7\n&gt;&gt;&gt; Account.interest\n5\n&gt;&gt;&gt; del p1.interest\n&gt;&gt;&gt; p1.interest\n5\n&gt;&gt;&gt; del p1.interest\nTraceback (most recent call last):\n  File \"&lt;stdin&gt;\", line 1, in &lt;module&gt;\nAttributeError: interest\n&gt;&gt;&gt;\n</code></pre>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part2/#2_1","title":"2","text":"<p><code>del</code> \u4e5f\u53ef\u4ee5\u5220\u9664\u5217\u8868\u4e2d\u7684\u5143\u7d20\uff0c</p> <p>\u4f46\u662fJohn\u8bf4 <code>del</code> \u4e0d\u5e38\u7528</p>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part2/#hw-04","title":"HW 04","text":""},{"location":"Notes%20of%20Courses/CS61A/CS61A_part2/#1_2","title":"1","text":"<p>Q4</p> <p>Info</p> <p>Hint: If you had the permutations of all the elements in <code>seq</code> not including the first element, how could you use that to generate the permutations of the full <code>seq</code>?</p> <p>\u8fd9\u4e2a\u63d0\u793a\u5f88\u6709\u7528\uff1a\u8003\u8651\u6bcf\u6b21\u62bd\u53bb\u5176\u4e2d\u4e00\u4e2a\u5143\u7d20\u7684\u60c5\u51b5\uff0c\u7136\u540e\u4f9d\u6b21\u9012\u5f52...</p> <p>\u4e00\u5f00\u59cb\u611f\u89c9\u80fd\u7528\u63a8\u5bfc\u5f0f\u5199\u6210\u4e00\u884c</p> <pre><code>def permutations(seq):\n    yield from [[seq[i]] + p for p in permutations(seq[:i] + seq[i + 1:]) for i in range(len(seq))]\n</code></pre> <p>\u7136\u540e\u53d1\u73b0\uff0c<code>i</code> \u53ea\u5bf9 <code>permutations(seq[:i] + seq[i + 1:])</code> \u751f\u6548\uff0c<code>[seq[i]]</code> \u4e2d <code>i</code> \u663e\u793a\u672a\u5b9a\u4e49</p> <p>\u7136\u540e\u6539\u6210</p> <pre><code>def permutations(seq):\n    for i in range(len(seq))\n        yield from [[seq[i]] + p for p in permutations(seq[:i] + seq[i + 1:])]\n</code></pre> <p>\u7136\u540e\u5728\u6d4b\u8bd5\u6587\u6863\u7684\u4e00\u4e2a\u6d4b\u8bd5\u7528\u4f8b\u4e2d\uff0c\u7528 <code>next()</code> \u4f7f\u7528\u51fd\u6570\u8fd4\u56de\u7684\u751f\u6210\u5668\uff0c\u663e\u793a <code>StopIteration</code> \uff0c</p> <p>\u601d\u8003\u4e86\u5f88\u4e45\uff0c\u53d1\u73b0\u662f\u56e0\u4e3a\uff0c\u9012\u5f52\u5230\u4e86\u6700\u540e\uff0c <code>permutations(seq[:i] + seq[i + 1:])</code> \u4f20\u5165\u7684\u662f\u7a7a\u5217\u8868\uff0c\u90a3\u4e48\u5c31\u4e0d\u80fd\u89e3\u538b\u51fa <code>p</code> \uff0c\u90a3\u4e48\u63a8\u5bfc\u5f0f\u7684\u7ed3\u679c\u5c31\u4f1a\u662f\u7a7a\u7684\u5217\u8868\uff0c\u518d\u4e00\u5c42\u5c42\u8fd4\u56de\uff0c\u6240\u4ee5\u6700\u540e\u6574\u4f53\u7684\u51fd\u6570\u8fd4\u56de\u7684\u751f\u6210\u5668\u4e2d\u6ca1\u6709\u53ef\u4ee5\u8fed\u4ee3\u7684\u5143\u7d20</p> <p>\u6240\u4ee5\u9700\u8981\u8bbe\u7f6e base case \uff0c(\u4e00\u5f00\u59cb\u4ee5\u4e3a\u4e0d\u9700\u8981\u8bbe\u7f6e\uff0c\u6216\u8005\u8bf4\u4ee5\u4e3a\u7a7a\u5217\u8868\u5c31\u53ef\u4ee5\u4f5c\u4e3a base case)</p> <pre><code>def permutations(seq):\n    if len(seq) == 1:\n        yield seq\n    else:\n        yield from [[seq[i]] + p for p in permutations(seq[:i] + seq[i + 1:])]\n</code></pre> <p>\u7136\u540e\u53d1\u73b0\uff0c\u6d4b\u8bd5\u6587\u6863\u4e2d\uff0c\u6709\u4e00\u4e2a\u4f20\u5165\u4e86\u5143\u7ec4\uff0c\u6240\u4ee5\u6211\u7a0d\u52a0\u4e86\u4fee\u6539</p> <pre><code>def permutations(seq):\n    seq = list(seq)\n    if len(seq) == 1:\n        yield seq\n    else:\n        yield from [[seq[i]] + p for p in permutations(seq[:i] + seq[i + 1:])]\n</code></pre> <p>\u540e\u9762\u53d1\u73b0\uff0c\u5176\u5b9e\u8fd9\u6837\u6539\u4e5f\u53ef\u4ee5\uff1a</p> <pre><code>def permutations(seq):\n    if len(seq) == 1:\n        yield [seq[0]]\n    else:\n        yield from [[seq[i]] + p for p in permutations(seq[:i] + seq[i + 1:])]\n</code></pre> <p>\u5728\u601d\u7d22\u5230\u5e95\u4e00\u884c\u8bed\u53e5\u5b9e\u73b0\u529f\u80fd\u662f\u5426\u53ef\u884c\u65f6\uff0c\u60f3\u5230\u4e86 <code>sum()</code> \u51fd\u6570\uff0c\u60f3\u5230\u53ef\u4ee5\u7528\u5b83\u6765\u628a\u7ed3\u679c\u5408\u5e76\u5728\u4e00\u4e2a\u5217\u8868\u4e2d</p> <pre><code>def permutations(seq):\n    yield from sum([[... for p in permutations(seq[:i] + seq[i + 1:])] for i in range(len(seq))], start=[])\n</code></pre> <p>\u7136\u540e\u60f3\u5230\u53ef\u4ee5\u628a base case \u653e\u5728 <code>sum</code> \u51fd\u6570\u5916\u9762</p> <pre><code>def permutations(seq):\n    yield from [[seq[0]]] if len(seq) == 1 else sum([[[seq[i]] + p for p in permutations(seq[:i] + seq[i + 1:])] for i in range(len(seq))], start=[])    \n</code></pre> code <pre><code>def permutations(seq):\n    \"\"\"Generates all permutations of the given sequence. Each permutation is a\n    list of the elements in SEQ in a different order. The permutations may be\n    yielded in any order.\n\n    &gt;&gt;&gt; perms = permutations([100])\n    &gt;&gt;&gt; type(perms)\n    &lt;class 'generator'&gt;\n    &gt;&gt;&gt; next(perms)\n    [100]\n    &gt;&gt;&gt; try: #this piece of code prints \"No more permutations!\" if calling next would cause an error\n    ...     next(perms)\n    ... except StopIteration:\n    ...     print('No more permutations!')\n    No more permutations!\n    &gt;&gt;&gt; sorted(permutations([1, 2, 3])) # Returns a sorted list containing elements of the generator\n    [[1, 2, 3], [1, 3, 2], [2, 1, 3], [2, 3, 1], [3, 1, 2], [3, 2, 1]]\n    &gt;&gt;&gt; sorted(permutations((10, 20, 30)))\n    [[10, 20, 30], [10, 30, 20], [20, 10, 30], [20, 30, 10], [30, 10, 20], [30, 20, 10]]\n    &gt;&gt;&gt; sorted(permutations(\"ab\"))\n    [['a', 'b'], ['b', 'a']]\n    \"\"\"\n    \"*** YOUR CODE HERE ***\"\n    # seq = list(seq)\n    # if len(seq) == 1:\n    #     yield seq\n    # else:\n    #     for i in range(len(seq)):\n    #         yield from [[seq[i]] + p for p in permutations(seq[:i] + seq[i + 1:])]\n    yield from [[seq[0]]] if len(seq) == 1 else sum([[[seq[i]] + p for p in permutations(seq[:i] + seq[i + 1:])] for i in range(len(seq))], start=[])\n</code></pre>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part2/#2_2","title":"2","text":"<p>Q5</p> <p>Use <code>type(value) == str</code> to test if some <code>value</code> is a string</p> <p>\u53ef\u4ee5\u4f7f\u7528 <code>type(value) == str</code> \u6765\u5224\u65ad\u4e00\u4e2a\u4e1c\u897f\u662f\u5426\u662f\u5b57\u7b26\u4e32</p> <p>\u611f\u89c9\u6211\u6700\u540e\u7b54\u6848\u4e2d\u7684\u8fd9\u4e00\u884c\u662f\u5173\u952e\u7684\u5730\u65b9\uff1a</p> <pre><code>def make_joint(with_draw, old_pass, new_pass):\n    def joint(amount, pw_input):\n        ...\n        return withdraw(amount, pw_input)  # key point\n    ...\n    return joint\n</code></pre> code <pre><code>def make_joint(withdraw, old_pass, new_pass):\n    \"\"\"Return a password-protected withdraw function that has joint access to\n    the balance of withdraw.\n\n    &gt;&gt;&gt; w = make_withdraw(100, 'hax0r')\n    &gt;&gt;&gt; w(25, 'hax0r')\n    75\n    &gt;&gt;&gt; make_joint(w, 'my', 'secret')\n    'Incorrect password'\n    &gt;&gt;&gt; j = make_joint(w, 'hax0r', 'secret')\n    &gt;&gt;&gt; w(25, 'secret')\n    'Incorrect password'\n    &gt;&gt;&gt; j(25, 'secret')\n    50\n    &gt;&gt;&gt; j(25, 'hax0r')\n    25\n    &gt;&gt;&gt; j(100, 'secret')\n    'Insufficient funds'\n\n    &gt;&gt;&gt; j2 = make_joint(j, 'secret', 'code')\n    &gt;&gt;&gt; j2(5, 'code')\n    20\n    &gt;&gt;&gt; j2(5, 'secret')\n    15\n    &gt;&gt;&gt; j2(5, 'hax0r')\n    10\n\n    &gt;&gt;&gt; j2(25, 'password')\n    'Incorrect password'\n    &gt;&gt;&gt; j2(5, 'secret')\n    \"Frozen account. Attempts: ['my', 'secret', 'password']\"\n    &gt;&gt;&gt; j(5, 'secret')\n    \"Frozen account. Attempts: ['my', 'secret', 'password']\"\n    &gt;&gt;&gt; w(5, 'hax0r')\n    \"Frozen account. Attempts: ['my', 'secret', 'password']\"\n    &gt;&gt;&gt; make_joint(w, 'hax0r', 'hello')\n    \"Frozen account. Attempts: ['my', 'secret', 'password']\"\n    \"\"\"\n    \"*** YOUR CODE HERE ***\"\n    def joint(amount, pw_input):\n        if pw_input == new_pass:\n            return withdraw(amount, old_pass)\n        else:\n            return withdraw(amount, pw_input)\n    old_result = withdraw(0, old_pass)\n    if type(old_result) == str:\n        return old_result\n    return joint\n</code></pre>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part2/#3_1","title":"3","text":"<p>Q6</p> code <pre><code>def remainders_generator(m):\n    \"\"\"\n    Yields m generators. The ith yielded generator yields natural numbers whose\n    remainder is i when divided by m.\n\n    &gt;&gt;&gt; import types\n    &gt;&gt;&gt; [isinstance(gen, types.GeneratorType) for gen in remainders_generator(5)]\n    [True, True, True, True, True]\n    &gt;&gt;&gt; remainders_four = remainders_generator(4)\n    &gt;&gt;&gt; for i in range(4):\n    ...     print(\"First 3 natural numbers with remainder {0} when divided by 4:\".format(i))\n    ...     gen = next(remainders_four)\n    ...     for _ in range(3):\n    ...         print(next(gen))\n    First 3 natural numbers with remainder 0 when divided by 4:\n    4\n    8\n    12\n    First 3 natural numbers with remainder 1 when divided by 4:\n    1\n    5\n    9\n    First 3 natural numbers with remainder 2 when divided by 4:\n    2\n    6\n    10\n    First 3 natural numbers with remainder 3 when divided by 4:\n    3\n    7\n    11\n    \"\"\"\n    \"*** YOUR CODE HERE ***\"\n    def helper(i):\n        # yield from [n * m + i for n in naturals()]\n        if i != 0:\n            yield i\n        for n in naturals():\n            yield n * m + i\n    yield from [helper(i) for i in range(m)]\n</code></pre>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part2/#lecture-19-inheritance","title":"Lecture 19 Inheritance","text":""},{"location":"Notes%20of%20Courses/CS61A/CS61A_part2/#1_3","title":"1","text":"<p>\u7528 \u70b9\u8868\u8fbe\u5f0f dot expression \u7ed9\u5c5e\u6027\u8d4b\u503c</p> <p>\u5982\u679c\u70b9 <code>.</code> \u5de6\u8fb9\u7684\u5bf9\u8c61\u662f\u5b9e\u4f8b\uff0c\u90a3\u4e48\u8d4b\u503c\u7684\u5c31\u662f\u5b9e\u4f8b\u7684\u5c5e\u6027\uff0c</p> <p>\u800c\u5982\u679c\u70b9 <code>.</code> \u5de6\u8fb9\u7684\u5bf9\u8c61\u662f\u7c7b\uff0c\u90a3\u4e48\u8d4b\u503c\u7684\u5c31\u662f\u7c7b\u7684\u5c5e\u6027</p> <p>\u8fd9\u5c31\u89e3\u91ca\u4e86\u4e0a\u8282\u8bfe Q&amp;A \u4e2d\u7684\u7b2c\u4e00\u70b9</p> <p>\u5e76\u4e14\uff0c\u7531\u4e8e</p> <p>Attribute assignment statement adds or modifies the attribute named ...</p> <p>\u6240\u4ee5\uff0c\u5c5e\u6027\u8d4b\u503c\u5c31\u662f\uff0c\u5982\u679c\u5b9e\u4f8b/\u7c7b\u8fd8\u6ca1\u6709\u5bf9\u5e94\u540d\u5b57\u7684\u5c5e\u6027\uff0c\u90a3\u4e48\u8d4b\u503c\u5c31\u4f1a\u6dfb\u52a0\u4e00\u4e2a\u76f8\u5bf9\u5e94\u7684\u5c5e\u6027\uff0c\u800c\u5982\u679c\u5df2\u7ecf\u5b58\u5728\u5bf9\u5e94\u540d\u5b57\u7684\u5c5e\u6027\uff0c\u90a3\u4e48\u5c31\u4f1a\u4fee\u6539\u8fd9\u4e2a\u5c5e\u6027\u7684\u503c</p>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part2/#2_3","title":"2","text":"<p>\u901a\u8fc7 <code>\u5b9e\u4f8b.\u5c5e\u6027</code> \uff0c\u5b9e\u9645\u4e0a\u662f\u5148\u5728\u5b9e\u4f8b\u4e2d\u5148\u67e5\u770b\u662f\u5426\u6709\u5bf9\u5e94\u7684\u5c5e\u6027\uff0c\u5982\u679c\u6709\u5c31\u8fd4\u56de\uff0c\u5982\u679c\u6ca1\u6709\u5c31\u5230\u7c7b\u4e2d\u53bb\u67e5\u770b\u662f\u5426\u6709\u5bf9\u5e94\u7684\u5c5e\u6027</p> <p></p>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part2/#3_2","title":"3","text":"<p>\u7ee7\u627f\u7684\u8bed\u6cd5\uff1a</p> <pre><code>class &lt;name&gt;(&lt;base class&gt;):\n    &lt;suite&gt;\n</code></pre>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part2/#4_1","title":"4","text":"<p>\u4e00\u4e2a\u4f7f\u7528\u7ee7\u627f\u7684\u4f8b\u5b50\uff0c\u6ca1\u60f3\u5230\u5c45\u7136\u53ef\u4ee5\u8fd9\u6837\u4f7f\u7528\u7236\u7c7b\u7684\u65b9\u6cd5 \u6765\u4fee\u6539\u6210\u4e3a\u81ea\u5df1\u7684\u65b9\u6cd5(\u60ca\u5947\u5730\u53d1\u73b0 <code>self</code> \u53c2\u6570\u539f\u6765\u662f\u8fd9\u4e48\u7528\u7684)</p>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part2/#5_1","title":"5","text":"<p>\u5b50\u7c7b\u4e0e\u7236\u7c7b\u7684\u5c5e\u6027\u7684\u4f7f\u7528\u5173\u7cfb\u611f\u89c9\u4e5f\u662f\u548c\u5b9e\u4f8b\u4e0e\u7c7b\u7684\u5c5e\u6027\u4f7f\u7528\u5173\u7cfb\u5f88\u50cf\uff0c\u5373\u7236\u7c7b\u7684\u5c5e\u6027\u5e76\u6ca1\u6709\u590d\u5236\u5e76\u7ed1\u5b9a\u5230\u5b50\u7c7b\u4e2d\uff0c\u800c\u662f\u5728\u4f7f\u7528\u5c5e\u6027\u65f6\uff0c\u73b0\u5728\u5b50\u7c7b\u4e2d\u67e5\u770b\uff0c\u5982\u679c\u6ca1\u6709\u5c31\u5230\u7236\u7c7b\u4e2d\u67e5\u770b(\u5982\u679c\u7236\u7c7b\u4e2d\u6ca1\u6709\u5c31\u7ee7\u7eed\u5230\u7236\u7c7b\u7684\u7236\u7c7b...)</p>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part2/#6","title":"6","text":"<p>John\u5728demo\u4e2d\u5c55\u793a\u4e86 <code>CheckingAccount</code> \u7684 <code>withdraw</code> \u65b9\u6cd5\u7684\u4e24\u79cd\u5199\u6cd5\uff1a</p> <ul> <li> <p>1</p> <pre><code>class CheckingAccount(Account):\n    ...\n    def withdraw(self, amount):\n        amount = amount + 1\n        if amount &gt; self.balance:\n            return 'Insufficient funds'\n        self.balance = self.balance - amount\n        return self.balance\n</code></pre> </li> <li> <p>2</p> <pre><code>class CheckingAccount(Account):\n    ...\n    withdraw_fee = 1\n    def withdraw(self, amount):\n        return Account.withdraw(self, amount + self.withdraw_fee)\n</code></pre> </li> </ul> <p>\u524d\u8005\u76f8\u6bd4\u4e8e\u540e\u8005\u6709\u4e2a\u7c7b\u4f3c\u4e8e(\u4e4b\u524d\u6570\u636e\u62bd\u8c61\u76f8\u5173\u7684\u8bfe\u7a0b\u4e2d\u63d0\u5230\u7684)\u6253\u7834\u62bd\u8c61\u7684\u754c\u9650\u7684\u95ee\u9898\uff0c\u4f1a\u5b58\u5728\u4e00\u4e2a\u9690\u60a3\uff0c\u5373\u5982\u679c\u5bf9\u7236\u7c7b\u7684\u65b9\u6cd5\u8fdb\u884c\u4fee\u6539\uff0c\u90a3\u4e48\u5b50\u7c7b\u7684\u65b9\u6cd5\u8fd8\u4f1a\u662f\u539f\u6765\u7684\u6837\u5b50\uff0c\u800c\u540e\u8005\u5982\u679c\u7236\u7c7b\u88ab\u4fee\u6539\u4e86\uff0c\u5b50\u7c7b\u4e5f\u4f1a\u8ddf\u7740\u4e00\u8d77\u4fee\u6539</p>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part2/#7","title":"7","text":"<p>\u5173\u4e8e\u8bbe\u8ba1\u7ee7\u627f\u7684\u65f6\u5019John\u7684\u51e0\u4e2a\u5efa\u8bae\uff1a</p> <ul> <li> <p>Don't repeat yourself; use existing implementations.</p> <p>try to avoid copying and pasting code</p> <p>\u8981\u907f\u514d\u76f4\u63a5\u590d\u5236\u4ee3\u7801\uff0c\u800c\u662f\u4f7f\u7528\u5df2\u7ecf\u5b9e\u73b0\u4e86\u7684(\u7236\u7c7b\u7684)\u65b9\u6cd5\u6216\u51fd\u6570</p> </li> <li> <p>Attributes that have been overridden are still accessible via class objects.</p> <p>\u610f\u601d\u5c31\u662f\uff0c\u7236\u7c7b\u4e2d\u88ab\u5b50\u7c7b\u8986\u5199\u4e86\u7684\u5c5e\u6027\uff0c\u53ef\u4ee5\u901a\u8fc7\u7c7b\u540d\u53bb\u8bbf\u95ee</p> </li> <li> <p>Look up attributes on instances whenever possible.</p> <p>\u610f\u601d\u662f\uff0c\u5c3d\u53ef\u80fd\u4f7f\u7528\u5b9e\u4f8b\u7684\u5c5e\u6027(\u503c\u6216\u8005\u65b9\u6cd5)\uff0c(\u800c\u4e0d\u662f\u7c7b\u7684)</p> </li> </ul>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part2/#8","title":"8","text":"<p>Quote</p> <p>Inheritance and Composition</p> <p>Object-oriented programming shines when we adopt the metaphor</p> <ul> <li> <p>Inheritance is best for representing is-a relationships.</p> <p>E.g., a checking account is a specific type of account.</p> <p>So, CheckingAccount inherits from Account.</p> </li> <li> <p>Composition is best for representing has-a relationships.</p> <p>E.g., a bank has a collection of bank accounts it manages.</p> <p>So, A bank has a list of accounts as an attribute.</p> </li> </ul> <p>\u7ee7\u627f\u548c\u6784\u6210 (Inheritance and Composition)</p> <p>\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b(\u7684\u601d\u60f3/\u6982\u5ff5)\u5f88\u9002\u5408\u7c7b\u6bd4\u73b0\u5b9e\u4e2d\u7684\u4e8b\u7269</p> <ul> <li> <p>\u7ee7\u627f\u9002\u5408\u8868\u793a \u662f/\u5c5e\u4e8e \u7684\u5173\u7cfb\uff0c\u6bd4\u5982\uff1a\u652f\u7968\u8d26\u6237\u662f\u94f6\u884c\u8d26\u6237\u7684\u4e00\u79cd</p> <p>\u6240\u4ee5 \u652f\u7968\u8d26\u6237 \u4ece \u94f6\u884c\u8d26\u6237 \u7ee7\u627f</p> </li> <li> <p>\u6784\u6210\u9002\u5408\u8868\u793a \u6709 \u7684\u5173\u7cfb\uff0c\u6bd4\u5982\uff1a\u94f6\u884c\u6709\u5f88\u591a\u94f6\u884c\u8d26\u6237</p> <p>\u6240\u4ee5\uff0c\u94f6\u884c \u6709 \u4e00\u7cfb\u5217 \u94f6\u884c\u8d26\u6237 \u4f5c\u4e3a\u5b83\u7684\u5c5e\u6027</p> </li> </ul>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part2/#9","title":"9","text":"<p>\u5173\u4e8e\u7b2c\u4e00\u4e2a\u8bed\u53e5 <code>&gt;&gt;&gt; C(2).n</code> \u521b\u5efa\u51fa\u7684\u53f3\u4e0b\u89d2\u7684 <code>C</code> \u7c7b\u7684\u5b9e\u4f8b\u4e2d\u4f1a\u5b58\u5728 <code>z</code> \u7684\u7591\u60d1\u548c\u7406\u89e3</p> <p>\u7531\u4e8e\u5728\u521b\u5efa <code>C</code> \u7c7b\u7684\u65f6\u5019\uff0c\u4f1a\u8c03\u7528\u521d\u59cb\u5316\u51fd\u6570 <code>__init__()</code> \uff0c\u800c <code>C</code> \u7c7b\u672c\u8eab\u7c7b\u4e2d\u53c8\u6ca1\u6709\u521d\u59cb\u5316\u51fd\u6570\uff0c\u6240\u4ee5==\u4f1a\u8c03\u7528\u7236\u7c7b\u4e2d\u7684\u521d\u59cb\u5316\u51fd\u6570\uff0c\u6545\u4f1a\u8c03\u7528 <code>B</code> \u4e2d\u7684 <code>__init__()</code> \uff0c\u800c\u503c\u5f97\u6ce8\u610f\u7684\u4e00\u70b9\uff0c\u7531\u4e8e\u662f <code>C</code> \u7684\u5b9e\u4f8b\u8c03\u7528\u521d\u59cb\u5316\u51fd\u6570\uff0c\u6240\u4ee5 ==<code>self</code> \u88ab\u4f20\u5165\u7684\u662f <code>C</code> \u7684\u5b9e\u4f8b\u672c\u8eab\uff0c\u56e0\u6b64 <code>self.z = self.f(y)</code> \u8fd9\u4e00\u884c\u8bed\u53e5\u4e2d\uff0c\u6267\u884c\u7684 <code>f()</code> \u51fd\u6570\u662f <code>C</code> \u7c7b\u4e2d\u7684 <code>f()</code> \u65b9\u6cd5\uff0c\u6240\u4ee5\u6700\u540e\u7684\u7ed3\u679c\u662f\uff0c\u90a3\u4e2a\u5b9e\u4f8b\u4e2d\u4f1a\u5b58\u5728\u4e00\u4e2a \u503c\u4e3a2\u7684 <code>z</code> </p> <p>\u6240\u4ee5\u5bf9\u4e8epython\u4e2d\u7684 <code>self</code> \u53c2\u6570\u6709\u4e86\u65b0\u7684\u8ba4\u77e5\uff0c\u5373\u53ef\u4ee5\u4f7f\u7528\u7236\u7c7b\u7684\u65b9\u6cd5\uff0c\u800c <code>self</code> \u53c2\u6570\u4f20\u5165\u7684\u5374\u662f\u5b50\u7c7b\u7684\u5b9e\u4f8b(\u6240\u4ee5\u8981\u6ce8\u610f\u7531\u4e8e\u662f\u5b50\u7c7b\u7684\u5b9e\u4f8b\uff0c\u6709\u53ef\u80fd <code>self.xxx</code> \u4e4b\u7c7b\u7684self\u7684\u70b9\u8868\u8fbe\u5f0f\u4ee3\u7801\uff0c\u5f97\u5230\u7684\u6548\u679c\u4f1a\u548c\u4e00\u822c\u7684\u7236\u7c7b\u5b9e\u4f8b\u4e0d\u4e00\u6837\uff0c\u6bd4\u5982\u4e0a\u56fe\u4e2d <code>B</code> \u7684\u521d\u59cb\u5316\u51fd\u6570\u5982\u679c\u4f20\u5165\u7684\u662f <code>B</code> \u7c7b\u7684\u5b9e\u4f8b\uff0c\u90a3\u4e48\u5f88\u53ef\u80fd <code>self.f(y)</code> \u8c03\u7528\u7684\u662f <code>A</code> \u7c7b\u4e2d\u7684\u65b9\u6cd5)</p> <p>\u5728\u7b2c\u4e09\u4e2a\u8bed\u53e5\u4e2d\u4e5f\u51fa\u73b0\u4e86\u7c7b\u4f3c\u7684\u60c5\u51b5(\u4f46\u662f\u8fd9\u7b2c\u4e09\u4e2a\u8bed\u53e5\u6781\u5176\u5730\u7ed5)</p> <p><code>b = B(1)</code> \u4e2d\uff0c\u5b9e\u4f8b\u4e2d\u7684 <code>z</code> \u7531\u4e8e\u8c03\u7528\u4e86 <code>A</code> \u4e2d\u7684 <code>f</code> \u65b9\u6cd5\uff0c\u6240\u4ee5\u6307\u5411\u4e86\u53e6\u4e00\u4e2a <code>B</code> \u7c7b\u5b9e\u4f8b\uff0c\u800c\u65b0\u7684\u5b9e\u4f8b\u521d\u59cb\u5316\u51fd\u6570\u4e2d <code>z</code> \u53c8\u6307\u5411\u7684\u662f\u4e00\u4e2a <code>C</code> \u7c7b\u7684\u5b9e\u4f8b\uff0c\u800c <code>C</code> \u7c7b\u5b9e\u4f8b\u5728\u521d\u59cb\u5316\u65f6\uff0c\u53c8\u9700\u8981\u8c03\u7528 <code>B</code> \u7684 <code>__init__()</code> \uff0c\u7136\u540e\u5c31\u8c03\u7528\u4e86 <code>C</code> \u7c7b\u7684 <code>f</code> \u65b9\u6cd5(\u6211\u672c\u6765\u4ee5\u4e3a\u4f1a\u4e00\u76f4 <code>B</code> \u7c7b <code>C</code> \u7c7b\u6765\u56de\u4e00\u76f4\u6307\u4e0b\u53bb)</p>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part2/#10","title":"10","text":"<p>\u4e00\u4e2a\u7c7b\u53ef\u4ee5\u7ee7\u627f\u591a\u4e2a\u7236\u7c7b\uff0c\u5982</p> <pre><code>class AsSeenOnTVAccount(CheckingAccount, SavingsAccount):\n    def __init__(self, account_holder):\n        self.holder = account_holder\n        self.balance = 1\n</code></pre>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part2/#11","title":"11","text":"<p>now it's hard for me to show you why this (multiple inheritance tends to make programs complicated) is the case, so instead I'll just show you an analogy about human inheritance.</p> <p></p> <p>\u5728\u4f7f\u7528\u591a\u91cd\u7ee7\u627f\u7684\u65f6\u5019\uff0c\u9664\u975e\u662f\u771f\u7684\u5f88\u91cd\u8981\u7684\u5173\u7cfb\uff0c\u6216\u8005\u5341\u5206\u5fc5\u987b\uff0c\u5728\u4f7f\u7528\u65f6\u8981\u5f88\u6ce8\u610f\uff0c\u56e0\u4e3a\u591a\u91cd\u7ee7\u627f\u4f1a\u4f7f\u7a0b\u5e8f\u53d8\u5f97\u590d\u6742\uff0c\u867d\u7136\u5f88\u96be\u4e3e\u51fa\u4f8b\u5b50\uff0c\u4f46\u662f\u53ef\u4ee5\u53c2\u8003\u73b0\u5b9e\u4e2d(\u751f\u7269\u4e0a)\u7684\u7ee7\u627f</p>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part2/#lecture-19-qa","title":"Lecture 19 Q&amp;A","text":""},{"location":"Notes%20of%20Courses/CS61A/CS61A_part2/#1_4","title":"1","text":"<p><code>type()</code> \u51fd\u6570\u5982\u679c\u8fd4\u56de\u7c7b\uff0c\u53ef\u4ee5\u901a\u8fc7\u5b83\u7684\u8fd4\u56de\u503c\u6765\u8bbf\u95ee\u7c7b\u5185\u7684\u5c5e\u6027\uff0c\u5982</p> <pre><code>class Account:\n    def __init__(self, account_holder):\n        self.holderr = account_holder\n        self.balance = 0\n        \n    def deposit(self, amount):\n        self.balance = self.balance = amount\n        return self.balance\n</code></pre> <pre><code>&gt;&gt;&gt; a = Account('John')\n&gt;&gt;&gt; type(a).deposit(a, 100)\n100\n</code></pre> <p>\u4f46\u662f Hany \u8bf4\u5e94\u8be5\u907f\u514d\u4f7f\u7528\u8fd9\u79cd\u5199\u6cd5\uff0c\u56e0\u4e3a\u5927\u591a\u6570\u4eba\u4e0d\u4f1a\u600e\u4e48\u5199</p>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part2/#2_4","title":"2","text":"<p>\u6839\u636e John \u7684\u89e3\u91ca\uff0c<code>super()</code> \u7684\u4f5c\u7528\u662f\uff0c\u4e0d\u5728\u672c\u7c7b\u4e2d\u5bfb\u627e <code>.</code> \u4e4b\u540e\u7684\u4e1c\u897f\uff0c\u800c\u662f\u5728\u4e0a\u4e00\u7ea7\u7236\u7c7b\u4e2d\u5bfb\u627e</p> <p>\u5e76\u4e14\u5728\u4f7f\u7528\u7236\u7c7b\u7684\u65b9\u6cd5\u65f6\uff0c\u4f1a\u5c06\u5b9e\u4f8b\u81ea\u52a8\u4f20\u5165 <code>self</code> \u53c2\u6570\uff0c\u548c\u76f4\u63a5 <code>\u7236\u7c7b\u540d.\u65b9\u6cd5</code> \u7684\u4f7f\u7528\u5f62\u5f0f\u7565\u6709\u4e0d\u540c</p>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part2/#3_3","title":"3","text":"<p>\u6709\u591a\u7ee7\u627f\u7684\u7c7b\u5728\u4f7f\u7528\u672c\u7c7b\u4e2d\u6ca1\u6709\u7684\u65b9\u6cd5\u65f6\uff0c\u662f\u5148\u5728\u4e0a\u4e00\u7ea7\u7236\u7c7b\u4e2d\u6309\u987a\u5e8f\u5bfb\u627e\uff0c\u6bd4\u5982\u4e0a\u56fe\uff0c\u5982\u679c\u5728 <code>CheckingAccount</code> \u4e2d\u6ca1\u627e\u5230\u5bf9\u5e94\u7684\u65b9\u6cd5\uff0c\u90a3\u4e48\u4e0d\u4f1a\u5728 <code>CheckingAccount</code> \u7684\u7236\u7c7b( <code>Acount</code> \u7c7b)\u4e2d\u5bfb\u627e\uff0c\u800c\u662f\u5728 <code>SavingAccount</code> \u7c7b\u4e2d\u5bfb\u627e\uff0c\u5982\u679c\u6240\u6709\u7684\u4e0a\u4e00\u7ea7\u7236\u7c7b\u4e2d\u90fd\u6ca1\u627e\u5230\u5bf9\u5e94\u7684\u65b9\u6cd5\uff0c\u90a3\u4e48\u624d\u4f1a\u5728\u4e0a\u4e24\u7ea7\u7236\u7c7b\u4e2d\u5bfb\u627e(\u5373\u7236\u7c7b\u7684\u7236\u7c7b)</p>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part2/#4_2","title":"4","text":"<p>Quote</p> <p>John:</p> <p>well i'd say at the outset that it's often the case that tracing through, uh, tree recursion is not something that humans can tolerate, like it's, it's just really messy sometimes, um, so the right answer is to shift the way in which you approach understanding, uh, implementation to get away from tracing, and instead just treat the recursive calls as abstractions, they do the thing that they're supposed to do, but how they do them is not your problem, and then like you can put it together. but this is not, not like obvious or easy so, um, so maybe we can talk about that with a particular example. so maybe while i read this maybe hany can, uh, say whether that makes sense to him.</p> <p> </p> <p>Hany:</p> <p>i i'll add one more thing to it, so john's absolutely right that tracing tree recursion is very hard, you have to hold a lot in your memory. um, so one way to fix it is as he just said, is to just think differently about it. it's not about tracing, it's about thinking about the fundamental nature of, um, the, the functions and they just do what you want them to do, and the other is to just use toy examples.</p> <p>John\uff1a</p> <p>\u55ef\uff0c\u6211\u9996\u5148\u8981\u8bf4\u7684\u662f\uff0c\u5f80\u5f80\u60c5\u51b5\u662f\uff0c\u8ffd\u8e2a\u6811\u5f62\u9012\u5f52\u5bf9\u4eba\u7c7b\u6765\u8bf4\u662f\u65e0\u6cd5\u5fcd\u53d7\u7684\uff0c\u5c31\u50cf\u6709\u65f6\u5019\u975e\u5e38\u6df7\u4e71\u4e00\u6837\u3002\u6240\u4ee5\u6b63\u786e\u7684\u7b54\u6848\u662f\u6539\u53d8\u4f60\u7406\u89e3\u5b9e\u73b0\u7684\u65b9\u5f0f\uff0c\u6446\u8131\u8ffd\u8e2a\uff0c\u800c\u662f\u5c06\u9012\u5f52\u8c03\u7528\u89c6\u4e3a\u62bd\u8c61\uff0c\u5b83\u4eec\u6267\u884c\u5b83\u4eec\u5e94\u8be5\u6267\u884c\u7684\u4efb\u52a1\uff0c\u4f46\u5b83\u4eec\u5982\u4f55\u6267\u884c\u4e0d\u662f\u4f60\u7684\u95ee\u9898\uff0c\u7136\u540e\u4f60\u53ef\u4ee5\u5c06\u5b83\u4eec\u7ec4\u5408\u8d77\u6765\u3002\u4f46\u8fd9\u5e76\u4e0d\u660e\u663e\u6216\u5bb9\u6613\uff0c\u6240\u4ee5\u4e5f\u8bb8\u6211\u4eec\u53ef\u4ee5\u7528\u4e00\u4e2a\u5177\u4f53\u7684\u4f8b\u5b50\u6765\u8ba8\u8bba\u4e00\u4e0b\u3002\u6240\u4ee5\u4e5f\u8bb8\u5728\u6211\u9605\u8bfb\u8fd9\u4e2a\u7684\u65f6\u5019\uff0cHany\u53ef\u4ee5\u8bf4\u4e00\u4e0b\u8fd9\u662f\u5426\u6709\u610f\u4e49\u3002</p> <p> </p> <p>Hany\uff1a</p> <p>\u6211\u8981\u8865\u5145\u4e00\u70b9\uff0cJohn\u8bf4\u5f97\u5bf9\uff0c\u8ffd\u8e2a\u6811\u5f62\u9012\u5f52\u975e\u5e38\u56f0\u96be\uff0c\u4f60\u5fc5\u987b\u8bb0\u4f4f\u5f88\u591a\u4e1c\u897f\u3002\u6240\u4ee5\u89e3\u51b3\u7684\u4e00\u79cd\u65b9\u6cd5\u5c31\u50cf\u4ed6\u521a\u624d\u8bf4\u7684\u90a3\u6837\uff0c\u53ea\u662f\u4ee5\u4e0d\u540c\u7684\u65b9\u5f0f\u601d\u8003\u3002\u8fd9\u4e0d\u662f\u5173\u4e8e\u8ffd\u8e2a\uff0c\u800c\u662f\u601d\u8003\u51fd\u6570\u7684\u57fa\u672c\u6027\u8d28\uff0c\u5b83\u4eec\u53ea\u662f\u6267\u884c\u4f60\u60f3\u8981\u5b83\u4eec\u6267\u884c\u7684\u4efb\u52a1\uff0c\u53e6\u4e00\u79cd\u65b9\u6cd5\u662f\u4f7f\u7528\u7b80\u5355\u7684\u793a\u4f8b\u3002</p> <p>John \u548c Hany \u8bf4\u5230\u5bf9\u6811\u5f62\u9012\u5f52\u8ffd\u8e2a\u5f88\u96be\uff0c\u6240\u4ee5\u4e0d\u5e94\u8be5\u53bb\u8ffd\u8e2a\u9012\u5f52(\u6211\u8ba4\u4e3a\u8fd9\u91cc\u53ef\u4ee5\u7406\u89e3\u4e3a\uff0c\u5f04\u6e05\u695a\u9012\u5f52\u7684\u6bcf\u4e00\u6b65\u7684\u5177\u4f53\u6548\u679c)\uff0c\u800c\u662f\u6362\u4e00\u79cd\u60f3\u6cd5\u53bb\u601d\u8003(\u5373\u4e4b\u524d\u603b\u7ed3\u7684\u5047\u5b9a\u51fd\u6570\u80fd\u8fd4\u56de\u6b63\u786e/\u6240\u9700\u7684\u503c)</p>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part2/#5_2","title":"5","text":"<p>John \u89e3\u7b54 Lab04 \u4e2d\u7684 Q5 \uff0c</p> <p>\u63d0\u5230\uff0c\u5728\u89e3\u7b54/\u6784\u5efa\u9012\u5f52\u65f6\uff0c\u53ef\u4ee5\u5148\u62ff\u7b80\u5355\u7684\u4f8b\u5b50\u6765\u8fdb\u884c\u601d\u8003\uff0c\u6bd4\u5982 <code>n = 123 ; t = 2</code> (\u800c\u4e0d\u8981\u4e0a\u6765\u5c31\u5c1d\u8bd5\u5f04\u6e05\u695a 5 \u4f4d\u6570)\uff0c\u7136\u540e\u901a\u8fc7\u5206\u6790\u7b80\u5355\u7684\u4f8b\u5b50\uff0c\u601d\u8def\u5c31\u4f1a\u5f88\u6e05\u6670</p>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part2/#lab-07","title":"Lab 07","text":""},{"location":"Notes%20of%20Courses/CS61A/CS61A_part2/#1_5","title":"1","text":"<p>\u5728\u505aQ1\u65f6\uff0c\u672c\u6765\u4f7f\u7528</p> <pre><code>yield from [x * multiplier for x in it]\n</code></pre> <p>\u4f46\u662f\u5f53 <code>it</code> \u662f\u80fd\u65e0\u7a77\u8fed\u4ee3\u7684\u751f\u6210\u5668\u65f6(\u5982\u8981\u6d4b\u8bd5\u7684 <code>naturals()</code> )\uff0c\u5c31\u4f1a\u8d85\u65f6\uff0c</p> <p>\u4f46\u6211\u8be2\u95ee chatgpt \uff0c\u5b83\u63d0\u4f9b\u7684\u4ee3\u7801\u4e0e\u6211\u4e0a\u9762\u7684\u4ee3\u7801\u5f88\u50cf\uff0c\u53ea\u662f\u628a\u5217\u8868\u6362\u6210\u4e86\u5143\u7ec4\uff0c\u7136\u540e\u6d4b\u8bd5\u7adf\u7136\u4e0d\u4f1a\u8d85\u65f6\uff0c</p> <p>\u6240\u4ee5\u4f7f\u7528 <code>yield from</code> \u65f6\u53ef\u4ee5\u4f7f\u7528\u5143\u7ec4\u6765\u907f\u514d\u53ef\u4ee5\u65e0\u7a77\u8fed\u4ee3\u7684\u8fed\u4ee3\u5668\u9020\u6210\u7684\u8d85\u65f6</p> <p>\u4e0b\u9762\u662f\u8be2\u95ee chatgpt \u4e3a\u4ec0\u4e48\u4f1a\u8fd9\u6837\u7684\u539f\u56e0\u7684\u8bb0\u5f55</p> chat log <p>You:</p> <p>Generators also allow us to represent infinite sequences, such as the sequence of natural numbers (1, 2, ...) shown in the function below!</p> <pre><code>def naturals():\n    \"\"\"A generator function that yields the infinite sequence of natural\n    numbers, starting at 1.\n\n    &gt;&gt;&gt; m = naturals()\n    &gt;&gt;&gt; type(m)\n    &lt;class 'generator'&gt;\n    &gt;&gt;&gt; [next(m) for _ in range(10)]\n    [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\n    \"\"\"\n    i = 1\n    while True:\n        yield i\n        i += 1\n</code></pre> <p>Q1: Scale</p> <p>Implement the generator function <code>scale(it, multiplier)</code>, which yields elements of the given iterable <code>it</code>, scaled by <code>multiplier</code>. As an extra challenge, try writing this function using a <code>yield from</code> statement!</p> <pre><code>def scale(it, multiplier):\n    \"\"\"Yield elements of the iterable it scaled by a number multiplier.\n\n    &gt;&gt;&gt; m = scale([1, 5, 2], 5)\n    &gt;&gt;&gt; type(m)\n    &lt;class 'generator'&gt;\n    &gt;&gt;&gt; list(m)\n    [5, 25, 10]\n\n    &gt;&gt;&gt; m = scale(naturals(), 2)\n    &gt;&gt;&gt; [next(m) for _ in range(5)]\n    [2, 4, 6, 8, 10]\n    \"\"\"\n    \"*** YOUR CODE HERE ***\"\n</code></pre> <p> </p> <p>ChatGPT:</p> <p>Certainly! You can implement the <code>scale</code> generator function using a <code>yield from</code> statement. Here's one way to do it:</p> <pre><code>def scale(it, multiplier):\n    \"\"\"Yield elements of the iterable it scaled by a number multiplier.\"\"\"\n    yield from (element * multiplier for element in it)\n\n# Test cases\nm = scale([1, 5, 2], 5)\nprint(type(m))  # &lt;class 'generator'&gt;\nprint(list(m))  # [5, 25, 10]\n\nm = scale(naturals(), 2)\nprint([next(m) for _ in range(5)])  # [2, 4, 6, 8, 10]\n</code></pre> <p>In this implementation, the <code>scale</code> function uses a generator expression with <code>yield from</code> to yield elements of the iterable <code>it</code> scaled by the given <code>multiplier</code>. The generator expression <code>(element * multiplier for element in it)</code> generates scaled elements one by one, and <code>yield from</code> is used to yield each element from this expression.</p> <p> </p> <p>You:</p> <p>why timeout by using list type while not by using tuple type?</p> <p> </p> <p>ChatGPT:</p> <p>If you are experiencing a timeout when using a list type but not when using a tuple type, it might be due to the differences in how lists and tuples are handled in Python. Lists are mutable, meaning their elements can be changed after the list is created, while tuples are immutable, and their elements cannot be changed.</p> <p>When you use a list comprehension with a generator expression and <code>yield from</code>, the entire list needs to be generated in memory before any elements can be yielded. This might be problematic for an infinite generator, as attempting to generate an infinite list in memory can lead to a timeout.</p> <p>On the other hand, when using a tuple, it is immutable. Python can optimize and generate each element of the tuple on-the-fly without needing to create an entire list in memory. This can be more efficient, especially when dealing with infinite sequences.</p> <p>Here's an example to illustrate the difference:</p> <pre><code># Using a list\ndef scale_list(it, multiplier):\n    yield from [x * multiplier for x in it]\n\n# Using a tuple\ndef scale_tuple(it, multiplier):\n    yield from (x * multiplier for x in it)\n\n# Test cases\nm_list = scale_list(naturals(), 2)\n# This may lead to a timeout because it attempts to generate an infinite list in memory.\n# print(list(m_list))\n\nm_tuple = scale_tuple(naturals(), 2)\n# This is more efficient because it generates each element on-the-fly without creating an entire list.\nprint([next(m_tuple) for _ in range(5)])\n</code></pre> <p>In the commented-out line for <code>scale_list</code>, attempting to convert an infinite list to a list object might cause the program to run out of memory or take a very long time, leading to a timeout. Using a tuple can avoid this issue because it doesn't try to create an entire list in memory.</p> <p> </p> <p>You:</p> <p>translate to chinese</p> <p> </p> <p>ChatGPT:</p> <p>\u5982\u679c\u4f60\u5728\u4f7f\u7528\u5217\u8868\u7c7b\u578b\u65f6\u9047\u5230\u8d85\u65f6\u95ee\u9898\uff0c\u4f46\u5728\u4f7f\u7528\u5143\u7ec4\u7c7b\u578b\u65f6\u5374\u6ca1\u6709\uff0c\u8fd9\u53ef\u80fd\u662f\u7531\u4e8e Python \u5904\u7406\u5217\u8868\u548c\u5143\u7ec4\u7684\u65b9\u5f0f\u4e0d\u540c\u3002\u5217\u8868\u662f\u53ef\u53d8\u7684\uff0c\u610f\u5473\u7740\u5b83\u4eec\u7684\u5143\u7d20\u5728\u5217\u8868\u521b\u5efa\u540e\u53ef\u4ee5\u88ab\u4fee\u6539\uff0c\u800c\u5143\u7ec4\u662f\u4e0d\u53ef\u53d8\u7684\uff0c\u5b83\u4eec\u7684\u5143\u7d20\u4e0d\u80fd\u88ab\u4fee\u6539\u3002</p> <p>\u5f53\u4f60\u4f7f\u7528\u5217\u8868\u89e3\u6790\u4e0e\u751f\u6210\u5668\u8868\u8fbe\u5f0f\u4ee5\u53ca <code>yield from</code> \u65f6\uff0c\u5728\u4ea7\u751f\u4efb\u4f55\u5143\u7d20\u4e4b\u524d\u9700\u8981\u5728\u5185\u5b58\u4e2d\u751f\u6210\u6574\u4e2a\u5217\u8868\u3002\u5bf9\u4e8e\u65e0\u9650\u751f\u6210\u5668\uff0c\u5c1d\u8bd5\u5728\u5185\u5b58\u4e2d\u751f\u6210\u65e0\u9650\u5217\u8868\u53ef\u80fd\u5bfc\u81f4\u8d85\u65f6\u3002</p> <p>\u53e6\u4e00\u65b9\u9762\uff0c\u4f7f\u7528\u5143\u7ec4\u662f\u4e0d\u53ef\u53d8\u7684\u3002Python \u53ef\u4ee5\u4f18\u5316\u5e76\u5728\u9700\u8981\u65f6\u5373\u65f6\u751f\u6210\u5143\u7ec4\u7684\u6bcf\u4e2a\u5143\u7d20\uff0c\u800c\u65e0\u9700\u521b\u5efa\u6574\u4e2a\u5217\u8868\u5728\u5185\u5b58\u4e2d\u3002\u8fd9\u53ef\u80fd\u66f4\u6709\u6548\u7387\uff0c\u5c24\u5176\u662f\u5728\u5904\u7406\u65e0\u9650\u5e8f\u5217\u65f6\u3002</p> <p>\u4ee5\u4e0b\u662f\u4e00\u4e2a\u793a\u4f8b\uff0c\u7528\u4ee5\u8bf4\u660e\u8fd9\u79cd\u5dee\u5f02\uff1a</p> <pre><code># \u4f7f\u7528\u5217\u8868\ndef scale_list(it, multiplier):\n    yield from [x * multiplier for x in it]\n\n# \u4f7f\u7528\u5143\u7ec4\ndef scale_tuple(it, multiplier):\n    yield from (x * multiplier for x in it)\n\n# \u6d4b\u8bd5\u6848\u4f8b\nm_list = scale_list(naturals(), 2)\n# \u8fd9\u53ef\u80fd\u5bfc\u81f4\u8d85\u65f6\uff0c\u56e0\u4e3a\u5b83\u8bd5\u56fe\u5728\u5185\u5b58\u4e2d\u751f\u6210\u4e00\u4e2a\u65e0\u9650\u5217\u8868\u3002\n# print(list(m_list))\n\nm_tuple = scale_tuple(naturals(), 2)\n# \u8fd9\u66f4\u52a0\u6709\u6548\uff0c\u56e0\u4e3a\u5b83\u5728\u4e0d\u521b\u5efa\u6574\u4e2a\u5217\u8868\u7684\u60c5\u51b5\u4e0b\u5373\u65f6\u751f\u6210\u6bcf\u4e2a\u5143\u7d20\u3002\nprint([next(m_tuple) for _ in range(5)])\n</code></pre> <p>\u5728\u6ce8\u91ca\u6389\u7684 <code>scale_list</code> \u7684\u884c\u4e2d\uff0c\u8bd5\u56fe\u5c06\u65e0\u9650\u5217\u8868\u8f6c\u6362\u4e3a\u5217\u8868\u5bf9\u8c61\u53ef\u80fd\u5bfc\u81f4\u7a0b\u5e8f\u8017\u5c3d\u5185\u5b58\u6216\u82b1\u8d39\u5f88\u957f\u65f6\u95f4\uff0c\u4ece\u800c\u5bfc\u81f4\u8d85\u65f6\u3002\u4f7f\u7528\u5143\u7ec4\u53ef\u4ee5\u907f\u514d\u8fd9\u4e2a\u95ee\u9898\uff0c\u56e0\u4e3a\u5b83\u4e0d\u4f1a\u5c1d\u8bd5\u5728\u5185\u5b58\u4e2d\u521b\u5efa\u6574\u4e2a\u5217\u8868\u3002</p>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part2/#2_5","title":"2","text":"<p>Q5\u4e2d\uff0c\u6211\u5229\u7528\u5217\u8868\u7684 <code>.pop()</code> \u65b9\u6cd5\u6765\u5b9e\u73b0 <code>Player.play()</code> \u65b9\u6cd5\uff0c</p> <p>\u5728\u4e4b\u524d\u8bfe\u7a0b\u89c6\u9891\u91cc\u4ecb\u7ecd\u5217\u8868\u7684 <code>.pop()</code> \u65b9\u6cd5\u662f\u53ea\u80fd\u79fb\u9664\u5e76\u8fd4\u56de\u5217\u8868\u7684\u6700\u540e\u4e00\u4e2a\u5143\u7d20\uff0c\u4f46\u4e0a\u7f51\u67e5\u8be2\u53d1\u73b0 <code>.pop()</code> \u65b9\u6cd5\u53ea\u662f\u9ed8\u8ba4\u6700\u540e\u4e00\u4e2a\uff0c\u8fd8\u53ef\u4ee5\u4f20\u5165\u4e0b\u6807\u6307\u5b9a\u8981\u79fb\u9664\u5e76\u8fd4\u56de\u7684\u5143\u7d20\uff0c\u4f8b\u5982</p> <pre><code>&gt;&gt;&gt; list = [1, 2, 3, 4, 5]\n&gt;&gt;&gt; list.pop()\n5\n&gt;&gt;&gt; list\n[1, 2, 3, 4]\n&gt;&gt;&gt; list.pop(1)\n2\n&gt;&gt;&gt; list\n[1, 3, 4]\n</code></pre>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part2/#project-ants","title":"Project Ants","text":""},{"location":"Notes%20of%20Courses/CS61A/CS61A_part2/#1_6","title":"1","text":"<p>Problem 4 \u4e2d\uff0c\u6709\u4e00\u70b9\u503c\u5f97\u6ce8\u610f</p> <p>Quote</p> <p>A good way to approach the implementation to <code>ShortThrower</code> and <code>LongThrower</code> is to have it inherit the <code>nearest_bee</code> method from the base <code>ThrowerAnt</code> class. The logic of choosing which bee a thrower ant will attack is essentially the same, except the <code>ShortThrower</code> and <code>LongThrower</code> ants have maximum and minimum ranges, respectively.</p> <p>To implement these behaviors, you will need to modify the <code>nearest_bee</code> method to reference <code>min_range</code> and <code>max_range</code> attributes, and only return a bee that is in range.</p> <p>\u8fd9\u9898\u4e2d\u8981\u6c42\u5b9e\u73b0\u4e24\u4e2a \u8682\u8681\u5c04\u624b \u7684\u5b50\u7c7b\u7684\u5bfb\u627e\u5c04\u51fb\u76ee\u6807\u7684\u65b9\u6cd5\uff0c\u6211\u672c\u6765\u5dee\u70b9\u5c31\u662f\u60f3\u7684\u5728\u539f\u6709\u7684\u4ee3\u7801\u4e0a\u8fdb\u884c\u4fee\u6539\uff0c\u770b\u5230\u4e0a\u9762\u8fd9\u6bb5\u8bdd\uff0c\u6211\u624d\u60f3\u5230\u6709\u66f4\u597d\u7684\u65b9\u6cd5--\u53bb\u4f7f\u7528\u7236\u7c7b\u7684\u65b9\u6cd5\uff0c</p> <p>\u6559\u7a0b\u4e2d\u5efa\u8bae\u7684\u65b9\u6cd5\u662f\uff0c\u5728\u7236\u7c7b\u4e2d\u6dfb\u52a0\u5c5e\u6027\uff0c\u518d\u5728\u5b50\u7c7b\u4e2d(\u6709\u9700\u8981\u7684\u8bdd)\u8fdb\u884c\u8986\u5199</p> <p>\u6700\u540e\u53d1\u73b0\u91c7\u7528\u6559\u7a0b\u4e2d\u7684\u601d\u8def\uff0c\u5c45\u7136\u53ef\u4ee5\u5728\u5b50\u7c7b\u4e2d\u4e0d\u7528\u91cd\u65b0\u5b9e\u73b0\u65b9\u6cd5\uff0c\u76f4\u63a5\u4f7f\u7528\u7236\u7c7b\u4e2d\u7684\u65b9\u6cd5\u5373\u53ef</p> <p>\u6240\u4ee5\u8bf4\uff0c\u80fd\u7528\u7236\u7c7b\u7684\u5c5e\u6027(\u503c\u6216\u8005\u65b9\u6cd5)\uff0c\u5c31\u7528\u7236\u7c7b\u7684\uff0c\u5c3d\u53ef\u80fd\u7684\u4e0d\u8981\u53bb\u91cd\u65b0\u5b9e\u73b0 </p> code <pre><code>class ThrowerAnt(Ant):\n    ...\n    # ADD/OVERRIDE CLASS ATTRIBUTES HERE\n    food_cost = 3\n    min_range = 0\n    max_range = float('inf')\n\n    def nearest_bee(self, beehive):\n        \"\"\"Return the nearest Bee in a Place that is not the HIVE (beehive), connected to\n        the ThrowerAnt's Place by following entrances.\n\n        This method returns None if there is no such Bee (or none in range).\n        \"\"\"\n        # BEGIN Problem 3 and 4\n        # return rANTdom_else_none(self.place.bees) # REPLACE THIS LINE\n        place = self.place\n        dist = 0\n        while place is not beehive:\n            if place.bees and dist &gt;= self.min_range and dist &lt;= self.max_range:\n                return rANTdom_else_none(place.bees)\n            place = place.entrance\n            dist += 1\n        return None\n        # END Problem 3 and 4\n\n    ...\n\nclass ShortThrower(ThrowerAnt):\n    \"\"\"A ThrowerAnt that only throws leaves at Bees at most 3 places away.\"\"\"\n\n    name = 'Short'\n    food_cost = 2\n    # OVERRIDE CLASS ATTRIBUTES HERE\n    # BEGIN Problem 4\n    max_range = 3\n    # implemented = False   # Change to True to view in the GUI\n    implemented = True\n    # END Problem 4\n\nclass LongThrower(ThrowerAnt):\n    \"\"\"A ThrowerAnt that only throws leaves at Bees at least 5 places away.\"\"\"\n\n    name = 'Long'\n    food_cost = 2\n    # OVERRIDE CLASS ATTRIBUTES HERE\n    # BEGIN Problem 4\n    min_range = 5\n    # implemented = False   # Change to True to view in the GUI\n    implemented = True\n    # END Problem 4\n</code></pre>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part2/#2_6","title":"2","text":"<p>Problem 4 \u4e2d\u6709\u4e00\u70b9\u63d0\u793a\uff0c</p> <p>\u53ef\u4ee5\u4f7f\u7528 <code>float('inf')</code> \u6765\u83b7\u5f97\u4e00\u4e2a\u65e0\u7a77\u5927\u7684\u503c</p>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part2/#3_4","title":"3","text":"<p>\u5728 Extra Credit \u4e2d\uff0c</p> <p>Some hints:</p> <p>All instances of the same class share the same class attributes. How can you use this information to tell whether a QueenAnt instance is the true QueenAnt?</p> <p>...</p> <p>\u57fa\u4e8e\u8fd9\u4e00\u70b9\u63d0\u793a\uff0c\u6240\u4ee5\u6211\u91c7\u53d6\u7684\u65b9\u6cd5\u662f\uff0c\u5728 <code>Ant</code> \u7c7b\u4e2d\u8bbe\u7f6e\u4e00\u4e2a\u7c7b\u5c5e\u6027 <code>true_queen = None</code> \u9ed8\u8ba4\u503c\u662f <code>None</code> \uff0c\u5f53\u7b2c\u4e00\u4e2a/\u771f\u8681\u540e\u88ab\u521b\u5efa\u65f6(\u901a\u8fc7\u5224\u65ad <code>true_queen</code> \u662f\u5426\u4e3a <code>None</code> \u6765\u786e\u5b9a\u662f\u5426\u662f\u771f\u8681\u540e)\uff0c <code>true_queen</code> \u5c31\u4f1a\u6307\u5411\u5b83\uff0c\u800c\u4e4b\u540e\u7684\u8681\u540e\u5c31\u53ef\u4ee5\u4f9d\u636e\u8fd9\u4e2a\u5c5e\u6027\u6765\u5224\u65ad\u51fa\u662f\u5047\u8681\u540e(impostor)</p> code <pre><code>class Ant(Insect):\n    ...\n    # ADD CLASS ATTRIBUTES HERE\n    true_queen = None\n\n    ...\n    def remove_from(self, place):\n        if self == self.true_queen:\n            return\n                if place.ant is self:\n            place.ant = None\n        elif place.ant is None:\n            assert False, '{0} is not in {1}'.format(self, place)\n        else:\n            # queen or container (optional) or other situation\n            place.ant.remove_ant(self)\n        Insect.remove_from(self, place)\n\n...\n\n# BEGIN Problem EC\n# class QueenAnt(Ant):  # You should change this line\nclass QueenAnt(ScubaThrower):\n# END Problem EC\n    \"\"\"The Queen of the colony. The game is over if a bee enters her place.\"\"\"\n\n    name = 'Queen'\n    food_cost = 7\n    # OVERRIDE CLASS ATTRIBUTES HERE\n    # BEGIN Problem EC\n    # implemented = False   # Change to True to view in the GUI\n    implemented = True\n    # END Problem EC\n\n    def __init__(self, armor=1):\n        # BEGIN Problem EC\n        \"*** YOUR CODE HERE ***\"\n        ScubaThrower.__init__(self, armor)\n        self.buffed_ants = []\n        if not Ant.true_queen:\n            Ant.true_queen = self\n        # END Problem EC\n\n    def action(self, gamestate):\n        \"\"\"A queen ant throws a leaf, but also doubles the damage of ants\n        in her tunnel.\n\n        Impostor queens do only one thing: reduce their own armor to 0.\n        \"\"\"\n        # BEGIN Problem EC\n        \"*** YOUR CODE HERE ***\"\n        if self is not self.true_queen:\n            Ant.reduce_armor(self, self.armor)\n            return\n        ScubaThrower.action(self, gamestate)\n        place = self.place.exit\n        while place:\n            if place.ant and place.ant not in self.buffed_ants:\n                place.ant.damage *= 2\n                self.buffed_ants += [place.ant]\n            place = place.exit\n        # END Problem EC\n\n    def reduce_armor(self, amount):\n        \"\"\"Reduce armor by AMOUNT, and if the True QueenAnt has no armor\n        remaining, signal the end of the game.\n        \"\"\"\n        # BEGIN Problem EC\n        \"*** YOUR CODE HERE ***\"\n        ScubaThrower.reduce_armor(self, amount)\n        if self == self.true_queen and self.armor &lt;= 0:\n            bees_win()\n        # END Problem EC\n</code></pre>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part2/#4_3","title":"4","text":"<p>Optional Problem 2 \u4e2d</p> <p>Hint: You may find the <code>isinstance</code> function useful for checking if an object is an instance of a given class. For example:</p> <pre><code>    &gt;&gt;&gt; a = Foo()\n    &gt;&gt;&gt; isinstance(a, Foo)\n    True\n</code></pre> <p>\u53ef\u4ee5\u7528 <code>isinstance()</code> \u7684\u51fd\u6570\u6765\u5224\u65ad\u67d0\u4e2a\u5b9e\u4f8b\u662f\u5426\u662f\u67d0\u4e2a\u7c7b</p>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part2/#5_3","title":"5","text":"<p>Optional Problem 2 \u4e2d</p> <p>Note: the constructor of <code>ContainerAnt.__init__</code> is implemented as such</p> <pre><code>    def __init__(self, *args, **kwargs):\n        Ant.__init__(self, *args, **kwargs)\n        self.contained_ant = None\n</code></pre> <p>As we saw in Hog, we have that <code>args</code> is bound to all positional arguments (that is all arguments not passed not with keywords, and <code>kwargs</code> is bound to all the keyword arguments. This ensures that both sets of arguments are passed to the Ant constructor).</p> <p><code>args</code> \u662f\u6240\u6709\u6ca1\u6709 \u5173\u952e\u5b57 (\u6bd4\u5982 <code>key=</code> \u3001 <code>base=</code> \u5c31\u662f\u5173\u952e\u5b57) \u7684\u53c2\u6570\uff0c\u800c <code>kwargs</code> \u662f\u6240\u6709\u6709 \u5173\u952e\u5b57 \u7684\u53c2\u6570</p>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part2/#6_1","title":"6","text":"<p>Optional Problem 2 \u6709\u70b9\u96be\uff0cdebug\u90fddebug\u4e8610\u591a\u6b21\uff0c\u6210\u529f\u5b9e\u73b0\u7684\u4ee3\u7801\u5728\u4e0b\u9762</p> code <pre><code>class Ant(Insect):\n    ...\n\n    def add_to(self, place):\n        if place.ant is None:\n            place.ant = self\n        else:\n            # BEGIN Problem Optional 2\n            # if not (isinstance(self, ContainerAnt) and self.can_contain(place.ant)) and not (isinstance(place.ant, ContainerAnt) and place.ant.can_contain(self)):\n            if isinstance(self, ContainerAnt) and self.can_contain(place.ant):\n                self.contain_ant(place.ant)\n                place.ant = self\n            elif isinstance(place.ant, ContainerAnt) and place.ant.can_contain(self):\n                place.ant.contain_ant(self)\n            else:\n                assert place.ant is None, 'Two ants in {0}'.format(place)\n            # END Problem Optional 2\n        Insect.add_to(self, place)\n\n    ...\n\n...\n\nclass ContainerAnt(Ant):\n    def __init__(self, *args, **kwargs):\n        Ant.__init__(self, *args, **kwargs)\n        self.contained_ant = None\n\n    def can_contain(self, other):\n        # BEGIN Problem Optional 2\n        \"*** YOUR CODE HERE ***\"\n        return not self.contained_ant and not isinstance(other, ContainerAnt)\n        # END Problem Optional 2\n\n    def contain_ant(self, ant):\n        # BEGIN Problem Optional 2\n        \"*** YOUR CODE HERE ***\"\n        if self.can_contain(ant):\n            self.contained_ant = ant\n            # self.place.ant = self\n        # END Problem Optional 2\n\n    def remove_ant(self, ant):\n        if self.contained_ant is not ant:\n            assert False, \"{} does not contain {}\".format(self, ant)\n        self.contained_ant = None\n\n    def remove_from(self, place):\n        # Special handling for container ants (this is optional)\n        if place.ant is self:\n            # Container was removed. Contained ant should remain in the game\n            place.ant = place.ant.contained_ant\n            Insect.remove_from(self, place)\n        else:\n            # default to normal behavior\n            Ant.remove_from(self, place)\n\n    def action(self, gamestate):\n        # BEGIN Optional 2\n        \"*** YOUR CODE HERE ***\"\n        if self.contained_ant:\n            self.contained_ant.action(gamestate)\n        # END Optional 2\n\nclass BodyguardAnt(ContainerAnt):\n    \"\"\"BodyguardAnt provides protection to other Ants.\"\"\"\n\n    name = 'Bodyguard'\n    food_cost = 4\n    # OVERRIDE CLASS ATTRIBUTES HERE\n    # BEGIN Optional 2\n    # implemented = False   # Change to True to view in the GUI\n    implemented = True\n\n    def __init__(self, armor=2):\n        ContainerAnt.__init__(self, armor)\n    # END Optional 2\n</code></pre>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part2/#7_1","title":"7","text":"<p>Optional Problem 4</p> <p>\u8fd9\u9898\u6211\u8ba4\u4e3a\u5f88\u96be(\u770b\u5b8c\u9898\u76ee\u8981\u6c42\u65f6\u5c31\u5df2\u7ecf\u5934\u5927\u4e86)\uff0c\u5e94\u8be5\u7b97\u662f\u6240\u6709\u9898\u76ee\u91cc\u9762\u6700\u96be\u7684\u4e00\u9898\uff0c\u4fee\u4fee\u6539\u6539\u4e86\u5f88\u4e45\u624d\u521d\u6b65\u5199\u5b8c\uff0c\u7136\u540e\u8fd8debug\u4e86\u5f88\u591a\u6b21</p> <p>\u521a\u5f00\u59cb\u65f6\u6ca1\u4ec0\u4e48\u5934\u7eea\uff0c\u6240\u4ee5\u6253\u7b97 \u5728\u6559\u7a0b\u7684\u8981\u6c42(\u4e3b\u8981\u8981\u5b9e\u73b0\u4e09\u4e2a\u51fd\u6570)\u4e2d \u5148\u4ece\u6700\u7b80\u5355\u7684\u95ee\u9898\u5f00\u59cb\u89e3\u51b3(\u6700\u540e\u53d1\u73b0\u8fd9\u5f88\u6709\u7528\uff0c\u56e0\u4e3a\u628a\u7b80\u5355\u7684\u95ee\u9898\u89e3\u51b3\u4e86\uff0c\u6700\u540e\u96be\u7684\u95ee\u9898\u5c31\u53d8\u5f97\u6e05\u6670\u660e\u4e86\u4e86)\uff0c</p> <p><code>make_slow</code> \u548c <code>make_scare</code> \uff0c\u8fd9\u4e24\u4e2a\u57fa\u672c\u4e0a\u5dee\u4e0d\u591a\uff0c\u4ed6\u4eec\u90fd\u662f\u8981\u8fd4\u56de\u4e00\u4e2a\u65b0\u7684\u65b9\u6cd5</p> <pre><code>def make_slow(action, bee):\n    \"\"\"Return a new action method that calls ACTION every other turn.\n\n    action -- An action method of some Bee\n    \"\"\"\n    # BEGIN Problem Optional 4\n    \"*** YOUR CODE HERE ***\"\n    # END Problem Optional 4\n\ndef make_scare(action, bee):\n    \"\"\"Return a new action method that makes the bee go backwards.\n\n    action -- An action method of some Bee\n    \"\"\"\n    # BEGIN Problem Optional 4\n    \"*** YOUR CODE HERE ***\"\n    # END Problem Optional 4\n</code></pre> <p>\u4f46\u6211\u4e00\u5f00\u59cb\u6ca1\u6709\u7406\u89e3 \u8fd4\u56de\u65b9\u6cd5 \u5e94\u8be5\u610f\u5473\u7740\u4ec0\u4e48\uff0c\u7136\u540e\u6ce8\u610f\u5230\u4e86 \u6559\u7a0b\u4e2d\u7684\u63d0\u793a \uff0c\u5373\u5b9e\u4f8b\u7684\u65b9\u6cd5\u662f\u53ef\u4ee5\u901a\u8fc7\u8d4b\u503c\u53bb\u8986\u76d6\u6389\u7684</p> <p>Hint: You will need to rebind a method in one of the functions. Note that when assigning to an instance, the self parameter isn't bound.</p> <pre><code>  class X: pass\n  def f(x): return x ** 3\n  x = X()\n  x.f = f\n  print(x.f(2)) # prints 8\n</code></pre> <p>\u6240\u4ee5\u6211\u8fd9\u65f6\u7684\u60f3\u6cd5\u662f\uff0c\u5728 <code>make_slow</code> \u51fd\u6570\u91cc\u9762\u521b\u5efa\u4e00\u4e2a \u7528\u6765\u5f53\u4f5c\u65b9\u6cd5 \u7684\u51fd\u6570\uff0c\u7136\u540e\u7ed1\u5b9a\u5230 <code>bee</code> \u4e2d\uff0c\u6240\u4ee5</p> <pre><code>def make_slow(action, bee):\n    def new_action(gamestate):\n        if gamestate.time % 2 == 0:\n            action(bee, gamestate)\n    bee.action = new_action\n\n...\n</code></pre> <p>\u4f46\u662f\u7a81\u7136\u611f\u89c9\uff0c\u65b9\u6cd5\u5e94\u8be5\u662f\u6709 <code>self</code> \u53c2\u6570\u7684\uff0c</p> <p>\u4ee5\u53ca \u597d\u50cf\u8981\u6c42\u8bf4\u7684\u662f\u8981\u8fd4\u56de\uff0c\u6240\u4ee5\u6211\u8fd9\u65f6\u8ba4\u4e3a\uff0c\u5e94\u8be5\u8981\u5728\u51fd\u6570\u4e2d\u5c06\u8fd9\u4e2a \u7528\u4f5c\u65b9\u6cd5\u7684\u51fd\u6570 \u8fd4\u56de\uff0c\u7136\u540e\u5728 <code>apply_status</code> \u4e2d\u518d\u5c06\u5b83\u7ed1\u5b9a\u5230\u5bf9\u8c61\u4e2d\uff0c\u6240\u4ee5</p> <pre><code>def make_slow(action, bee):\n    def new_action(self, gamestate):\n        if gamestate.time % 2 == 0:\n            action(self, gamestate)\n    return new_action\n\ndef make_scare(action, bee):\n    def new_action(self, gamestate):\n        bee.direction = self.place if self.place.entrance is gamestate.beehive else self.place.entrance\n        action(self, gamestate)\n    return new_action\n</code></pre> <p><code>.direction</code> \u5c5e\u6027\u662f\u7531\u4e8e\uff0c\u6559\u7a0b\u4e2d\u63d0\u793a\u5230</p> <p>Hint: to make a bee go backwards, consider adding an instance variable indicating its current direction. Where should you change the bee's direction? Once the direction is known, how can you modify the <code>action</code> method of <code>Bee</code> to move appropriately?</p> <p>\u6240\u4ee5\u6211\u5bf9 <code>Bee.action</code> \u8fdb\u884c\u4e86\u4fee\u6539</p> <pre><code>class Bee(Insect):\n    ...\n\n    def action(self, gamestate):\n        \"\"\"A Bee's action stings the Ant that blocks its exit if it is blocked,\n        or moves to the exit of its current place otherwise.\n\n        gamestate -- The GameState, used to access game state information.\n        \"\"\"\n        destination = self.place.exit\n        # Extra credit: Special handling for bee direction\n        # BEGIN EC\n        \"*** YOUR CODE HERE ***\"\n        destination = self.direction\n        # END EC\n        if self.blocked():\n            self.sting(self.place.ant)\n        elif self.armor &gt; 0 and destination is not None:\n            self.move_to(destination)\n</code></pre> <p>\u7136\u540e\u5c31\u5f00\u59cb\u5199 <code>apply_status</code> \u51fd\u6570</p> <p>\u4e00\u5f00\u59cb\u6211\u6ca1\u60f3\u597d\u600e\u4e48\u8bbe\u7f6e \u6301\u7eed\u65f6\u95f4\uff0c\u6240\u4ee5\u5c31\u53ea\u662f\u8fd9\u6837</p> <pre><code>def apply_status(status, bee, length):\n    \"\"\"Apply a status to a BEE that lasts for LENGTH turns.\"\"\"\n    # BEGIN Problem Optional 4\n    \"*** YOUR CODE HERE ***\"\n    bee.action = status(bee.action, bee)\n    # END Problem Optional 4\n</code></pre> <p>\u7136\u540e\u7531\u4e8e \u5269\u4f59\u65f6\u95f4 \u9700\u8981\u88ab\u8bb0\u5f55\u4e0b\u6765\uff0c\u800c\u4e14\u6211\u60f3\u5230\u8c03\u7528\u4e00\u6b21 action \u51fd\u6570\u5c31\u51cf\u5c11\u4e00\u6b21\u5269\u4f59\u65f6\u95f4\uff0c\u6240\u4ee5\u60f3\u5230\u4e86\u5728\u51fd\u6570\u4e2d\u518d\u6784\u5efa\u4e00\u4e2a\u5d4c\u5957\u51fd\u6570\uff0c\u7136\u540e\u4f7f\u7528 <code>nonlocal</code> \u8bed\u53e5\u6765\u51cf\u5c11 <code>length</code> \u7684\u503c\uff0c\u5e76\u4e14\u5728\u5269\u4f59\u65f6\u95f4\u4e3a0\u7684\u65f6\u5019\u628a\u65b9\u6cd5\u6362\u56de\u539f\u672c\u7684\u65b9\u6cd5\uff0c\u6240\u4ee5</p> <pre><code>def apply_status(status, bee, length):\n    old_action = bee.action\n    def new_action(gamestate):\n        nonlocal length\n        length -= 1\n        status(old_action, bee)(self, gamestate)\n        if length == 0:\n            bee.action = old_action\n            bee.direction = None\n    bee.action = new_action\n</code></pre> <p>\u6700\u540e\u6559\u7a0b\u4e2d\u8fd8\u6709\u4e00\u70b9\uff0c\u5c31\u662f \u591a\u72b6\u6001 \u7684\u95ee\u9898\uff0c</p> <p><code>apply_status</code> takes a <code>status</code> (either <code>make_slow</code> or <code>make_scare</code>), a <code>Bee</code>, and a <code>length</code>. The way it works is as so: imagine that a <code>Bee</code> has a bunch of statuses, each of which modifies <code>action</code> in sequence. When a status's length is up, it removes itself from the list. <code>apply_status</code> adds the given status to the end of the list, so that it is applied latest. Note that you don't necessarily need to make a literal list of statuses - it is just helpful to think of statuses in this way.</p> <p>As an example of what \"previous behavior\" means, take the example of a bee that has been slowed twice (say by two separate <code>SlowThrower</code>s). It will have the following behavior:</p> <ul> <li>on time 1, it will do nothing. The outer slow has 2 turns to go, the inner one still has 3 turns</li> <li>on time 2, it moves forward. The outer slow has 1 turn to go, the inner one has 2 turns</li> <li>on time 3, it will do nothing. The outer slow has no turns left, the inner one has 2 turns</li> <li>on time 4, it moves forward. The inner slow has 1 turn left</li> <li>on time 5, it does nothing. The inner slow has no turns left</li> </ul> <p>\u610f\u601d\u662f\u8981\u6c42\uff0c\u5b58\u5728\u591a\u4e2a\u72b6\u6001\u65f6\uff0c\u5269\u4f59\u65f6\u95f4\u4f1a\u4e00\u8d77\u51cf\u5c11\uff0c\u4f46\u662f\u5e94\u7528\u7684\u6548\u679c\u662f\u6309\u4ece\u65e9(\u6700\u5148\u751f\u6548)\u5230\u665a(\u540e\u4ea7\u751f)\u7684\u987a\u5e8f\u5e94\u7528\u7684\uff0c\u5177\u4f53\u53ef\u4ee5\u770b\u6559\u7a0b\u4e2d\u7684\u89e3\u91ca</p> <p>\u7531\u4e8e\u8fd9\u4e2a\u70b9\u6211\u6ca1\u6709\u5f04\u6e05\u695a\u5e94\u8be5\u5982\u4f55\u5b9e\u73b0\uff0c\u4e8e\u662f\u6ca1\u6709\u529e\u6cd5\uff0c\u6211\u53ea\u80fd\u5c1d\u8bd5\u5148\u8fdb\u884c\u6d4b\u8bd5</p> <p>\u6d4b\u8bd5\u51fa\u73b0\u7684\u7b2c\u4e00\u4e2a\u95ee\u9898</p> <pre><code>&gt;&gt;&gt; from ants import *\n&gt;&gt;&gt; beehive, layout = Hive(AssaultPlan()), dry_layout\n&gt;&gt;&gt; dimensions = (1, 9)\n&gt;&gt;&gt; gamestate = GameState(None, beehive, ant_types(), layout, dimensions)\n&gt;&gt;&gt; # Testing Slow\n&gt;&gt;&gt; slow = SlowThrower()\n&gt;&gt;&gt; bee = Bee(3)\n&gt;&gt;&gt; gamestate.places[\"tunnel_0_0\"].add_insect(slow)\n&gt;&gt;&gt; gamestate.places[\"tunnel_0_4\"].add_insect(bee)\n&gt;&gt;&gt; slow.action(gamestate)\n&gt;&gt;&gt; gamestate.time = 1\n&gt;&gt;&gt; bee.action(gamestate)\nTypeError: apply_status.&lt;locals&gt;.new_action() missing 1 required positional argument: 'gamestate'\n\n# Error: expected\n\n# but got\n#     Traceback (most recent call last):\n#       ...\n#     TypeError: apply_status.&lt;locals&gt;.new_action() missing 1 required positional argument: 'gamestate'\n</code></pre> <p>\u662f\u6307 <code>apply_status</code> \u51fd\u6570\u4e2d\u7684\u5d4c\u5957\u51fd\u6570 <code>new_action</code> \u5728\u88ab\u4f7f\u7528\u65f6\uff0c\u7b2c\u4e8c\u4e2a <code>gamestate</code> \u53c2\u6570\u6ca1\u6709\u88ab\u4f20\u5165\u503c(\u4e00\u5f00\u59cb\u6211\u7684\u7406\u89e3\u8fd8\u6709\u4e9b\u504f\u5dee\uff0c\u7ecf\u8fc7\u4e86\u4e00\u4e9b\u6d4b\u8bd5\u548c\u8bd5\u9519\u624d\u6700\u7ec8\u786e\u5b9a\u662f\u8fd9\u4e2a\u539f\u56e0)</p> <p>\u8fd9\u5c31\u610f\u5473\u7740\uff0c <code>bee.action(gamestate)</code> \u5904\uff0c\u5728\u8c03\u7528\u65b0\u7684\u65b9\u6cd5\u65f6\uff0c\u53ea\u4f20\u5165\u4e86\u4e00\u4e2a\u53c2\u6570(\u6240\u4ee5\u7b2c\u4e8c\u4e2a\u53c2\u6570\u6ca1\u6709\u88ab\u4f20\u5165)\uff0c\u6240\u4ee5\u8fd9\u4f3c\u4e4e\u544a\u8bc9\u6211\uff0c\u5728\u7f16\u5199\u65b0\u7684\u65b9\u6cd5\u65f6\uff0c\u5e76\u4e0d\u9700\u8981\u4f7f\u7528 <code>self</code> \u53c2\u6570</p> <p>\u4e3a\u4e86\u6c42\u8bc1\uff0c\u6211\u91cd\u65b0\u53bb\u67e5\u770b\u548c\u7406\u89e3\u6559\u7a0b\u4e2d\u7ed9\u51fa\u7684\u793a\u4f8b</p> <p>Hint: You will need to rebind a method in one of the functions. Note that when assigning to an instance, the self parameter isn't bound.</p> <pre><code>  class X: pass\n  def f(x): return x ** 3\n  x = X()\n  x.f = f\n  print(x.f(2)) # prints 8\n</code></pre> <p>\u5982\u4f55\u53d1\u73b0\uff0c\u8fd9\u91cc\u9762\u7684 \u65b0\u65b9\u6cd5 \u5c31\u662f\u6ca1\u6709 <code>self</code> \u53c2\u6570\uff0c\u5e76\u4e14\u5728\u8c03\u7528\u65f6\uff0c\u8fd9\u4e2a\u5b9e\u4f8b\u4e5f\u6ca1\u6709\u5c06\u81ea\u8eab\u4f5c\u4e3a\u53c2\u6570\u4f20\u5165\u5176\u4e2d(\u8c03\u7528\u81ea\u8eab\u6216\u7236\u7c7b\u7684\u65b9\u6cd5\u65f6\uff0c\u4f1a\u628a\u81ea\u8eab \u9690\u5f0f\u5730 \u4f20\u5165 <code>self</code> \u53c2\u6570)\uff0c\u6240\u4ee5\u5f97\u5230\u7ed3\u8bba\uff0c\u5982\u679c\u4e00\u4e2a\u5728\u7c7b\u5916\u5b9a\u4e49\u7684\u51fd\u6570\uff0c\u88ab\u7ed1\u5b9a\u6210\u4e3a\u4e86\u67d0\u4e2a\u5b9e\u4f8b\u7684\u5c5e\u6027\uff0c\u6216\u8005\u67d0\u79cd\u7a0b\u5ea6\u4e0a\u53ef\u4ee5\u8bf4\u65f6\u6210\u4e3a\u4e86\u8fd9\u4e2a\u5b9e\u4f8b\u7684\u4e00\u4e2a\u65b9\u6cd5\uff0c\u5728\u901a\u8fc7 <code>\u5b9e\u4f8b.\u5c5e\u6027\u540d</code> \u7684\u65b9\u5f0f\u4f7f\u7528\u8fd9\u4e2a\u51fd\u6570/\u65b9\u6cd5\u65f6\uff0c\u662f\u4e0d\u4f1a\u5c06\u5b9e\u4f8b\u4f20\u5165\u51fd\u6570/\u65b9\u6cd5\u7684</p> <p>\u6240\u4ee5\u5bf9\u539f\u6709\u4ee3\u7801\u8fdb\u884c\u4e86\u4fee\u6539</p> <pre><code>def make_slow(action, bee):\n    def new_action(gamestate):\n        if gamestate.time % 2 == 0:\n            action(bee gamestate)\n    return new_action\n\ndef make_scare(action, bee):\n    def new_action(gamestate):\n        bee.direction = bee.place if bee.place.entrance is gamestate.beehive else bee.place.entrance\n        action(bee, gamestate)\n    return new_action\n\ndef apply_status(status, bee, length):\n    old_action = bee.action\n    def new_action(gamestate):\n        nonlocal length\n        length -= 1\n        status(old_action, bee)(gamestate)\n        if length == 0:\n            bee.action = old_action\n            bee.direction = None\n    bee.action = new_action\n</code></pre> <p>\u7136\u540e\u5728\u6d4b\u8bd5\u4fee\u6539\u597d\u7684\u4ee3\u7801\u65f6\uff0c\u53d1\u73b0</p> <pre><code>&gt;&gt;&gt; from ants import *\n&gt;&gt;&gt; beehive, layout = Hive(AssaultPlan()), dry_layout\n&gt;&gt;&gt; dimensions = (1, 9)\n&gt;&gt;&gt; gamestate = GameState(None, beehive, ant_types(), layout, dimensions)\n&gt;&gt;&gt; # Testing Slow\n&gt;&gt;&gt; slow = SlowThrower()\n&gt;&gt;&gt; bee = Bee(3)\n&gt;&gt;&gt; gamestate.places[\"tunnel_0_0\"].add_insect(slow)\n&gt;&gt;&gt; gamestate.places[\"tunnel_0_4\"].add_insect(bee)\n&gt;&gt;&gt; slow.action(gamestate)\n&gt;&gt;&gt; gamestate.time = 1\n&gt;&gt;&gt; bee.action(gamestate)\nTraceback (most recent call last):\n  File \"E:\\Courses\\cs61a\\projects\\ants\\ants.py\", line 606, in new_action\n    action(gamestate)\n  File \"E:\\Courses\\cs61a\\projects\\ants\\ants.py\", line 470, in action\n    destination = self.direction\nAttributeError: 'Bee' object has no attribute 'direction'\n\n# Error: expected\n\n# but got\n#     Traceback (most recent call last):\n#       ...\n#     AttributeError: 'Bee' object has no attribute 'direction'\n</code></pre> <p>\u7531\u4e8e <code>bee.direction</code> \u6ca1\u6709\u521d\u59cb\u503c/\u9ed8\u8ba4\u503c\uff0c\u6240\u4ee5\u6709\u53ef\u80fd\u51fa\u73b0\u5c5e\u6027\u4e0d\u5b58\u5728\u7684\u60c5\u51b5\uff0c\u6240\u4ee5\u8fdb\u884c\u4fee\u6539</p> <pre><code>class Bee(Insect):\n    ...\n    direction = None\n    ...\n\n    def action(self, gamestate):\n        destination = self.place.exit\n        # Extra credit: Special handling for bee direction\n        # BEGIN EC\n        \"*** YOUR CODE HERE ***\"\n        if self.direction:\n            destination = self.direction\n        # END EC\n        if self.blocked():\n            self.sting(self.place.ant)\n        elif self.armor &gt; 0 and destination is not None:\n            self.move_to(destination)\n</code></pre> <p>\u7136\u540e\u53c8\u51fa\u73b0\u4e86\u4e00\u4e2a\u95ee\u9898\uff0c</p> <pre><code>&gt;&gt;&gt; from ants import *\n&gt;&gt;&gt; beehive, layout = Hive(AssaultPlan()), dry_layout\n&gt;&gt;&gt; dimensions = (1, 9)\n&gt;&gt;&gt; gamestate = GameState(None, beehive, ant_types(), layout, dimensions)\n&gt;&gt;&gt; # Testing Slow\n&gt;&gt;&gt; slow = SlowThrower()\n&gt;&gt;&gt; bee = Bee(3)\n&gt;&gt;&gt; gamestate.places[\"tunnel_0_0\"].add_insect(slow)\n&gt;&gt;&gt; gamestate.places[\"tunnel_0_4\"].add_insect(bee)\n&gt;&gt;&gt; slow.action(gamestate)\n&gt;&gt;&gt; gamestate.time = 1\n&gt;&gt;&gt; bee.action(gamestate)\nTraceback (most recent call last):\n  File \"E:\\Courses\\cs61a\\projects\\ants\\ants.py\", line 606, in new_action\n    action(bee, gamestate)\nTypeError: Bee.action() takes 2 positional arguments but 3 were given\n\n# Error: expected\n\n# but got\n#     Traceback (most recent call last):\n#       ...\n#     TypeError: Bee.action() takes 2 positional arguments but 3 were given\n</code></pre> <p><code>bee</code> \u539f\u672c\u7684\u65b9\u6cd5\u4f20\u5165\u4e86\u4e00\u4e2a\u53c2\u6570\uff0c\u6240\u4ee5\u53ef\u4ee5\u53d1\u73b0\uff0c\u5b9e\u4f8b\u7684\u65b9\u6cd5\u672c\u8eab\u5df2\u7ecf\u5c06\u5b9e\u4f8b\u672c\u8eab\u4f20\u5165\u4e86 <code>self</code> \u53c2\u6570\uff0c\u6bd4\u5982 <code>old_action = bee.action</code> \uff0c<code>bee.action</code> \u5df2\u7ecf\u7ed9 <code>Bee.action</code> \u4e2d\u7684 <code>self</code> \u53c2\u6570\u4f20\u5165\u4e86\u81ea\u8eab(\u5373 <code>bee</code> \u5b9e\u4f8b)\uff0c\u800c\u5982\u679c\u4f7f\u7528 <code>old_action</code> \uff0c\u6bd4\u5982 <code>old_action(gs)</code> \uff0c\u90a3\u4e48 <code>gs</code> \u4f1a\u88ab\u4f20\u5165 <code>Bee.action</code> \u7684 <code>gamestate</code> (\u7b2c\u4e8c\u4e2a\u53c2\u6570)\u800c\u4e0d\u662f <code>self</code> </p> <p>\u6240\u4ee5\u8fdb\u884c\u4fee\u6539</p> <pre><code>def make_slow(action, bee):\n    def new_action(gamestate):\n        if gamestate.time % 2 == 0:\n            action(gamestate)\n    return new_action\n\ndef make_scare(action, bee):\n    def new_action(gamestate):\n        bee.direction = bee.place if bee.place.entrance is gamestate.beehive else bee.place.entrance\n        action(gamestate)\n    return new_action\n\ndef apply_status(status, bee, length):\n    old_action = bee.action\n    def new_action(gamestate):\n        nonlocal length\n        length -= 1\n        status(old_action, bee)(gamestate)\n        if length == 0:\n            bee.action = old_action\n            bee.direction = None\n    bee.action = new_action\n</code></pre> <p>\u6d4b\u8bd5\u51fa\u73b0\u7684\u7b2c\u4e8c\u4e2a\u95ee\u9898</p> <pre><code>&gt;&gt;&gt; from ants import *\n&gt;&gt;&gt; beehive, layout = Hive(AssaultPlan()), dry_layout\n&gt;&gt;&gt; dimensions = (1, 9)\n&gt;&gt;&gt; gamestate = GameState(None, beehive, ant_types(), layout, dimensions)\n&gt;&gt;&gt; scare = ScaryThrower()\n&gt;&gt;&gt; bee = Bee(3)\n&gt;&gt;&gt; gamestate.places[\"tunnel_0_0\"].add_insect(scare)\n&gt;&gt;&gt; gamestate.places[\"tunnel_0_1\"].add_insect(bee)\n&gt;&gt;&gt; scare.action(gamestate)\n&gt;&gt;&gt; bee.action(gamestate)\n&gt;&gt;&gt; bee.place.name\n'tunnel_0_2'\n&gt;&gt;&gt; bee.action(gamestate)\n&gt;&gt;&gt; bee.place.name\n'tunnel_0_3'\n&gt;&gt;&gt; #\n&gt;&gt;&gt; # Same bee should not be scared more than once\n&gt;&gt;&gt; scare.action(gamestate)\n&gt;&gt;&gt; bee.action(gamestate)\n&gt;&gt;&gt; bee.place.name\n'tunnel_0_4'\n\n# Error: expected\n#     'tunnel_0_2'\n# but got\n#     'tunnel_0_4'\n</code></pre> <p>\u540c\u4e00\u4e2a\u871c\u8702\u53ea\u80fd\u88ab\u6050\u5413\u4e00\u6b21\uff0c\u6240\u4ee5\u5bf9\u539f\u6709\u4ee3\u7801\u8fdb\u884c\u4fee\u6539</p> <pre><code>class Bee(Insect):\n    ...\n    direction = None\n    has_been_scared = False\n    ...\n\n...\ndef make_scare(action, bee):\n    def new_action(gamestate):\n        if not bee.has_been_scared:\n            bee.direction = bee.place if bee.place.entrance is gamestate.beehive else bee.place.entrance\n        action(gamestate)\n    return new_action\n\ndef apply_status(status, bee, length):\n    old_action = bee.action\n    def new_action(gamestate):\n        nonlocal length\n        length -= 1\n        status(old_action, bee)(gamestate)\n        if length == 0:\n            bee.action = old_action\n            bee.direction = None\n            if status is make_scare:\n                bee.has_been_scared = True\n    bee.action = new_action\n</code></pre> <p>\u6d4b\u8bd5\u51fa\u73b0\u7684\u7b2c\u4e09\u4e2a\u95ee\u9898</p> <pre><code>&gt;&gt;&gt; from ants import *\n&gt;&gt;&gt; beehive, layout = Hive(AssaultPlan()), dry_layout\n&gt;&gt;&gt; dimensions = (1, 9)\n&gt;&gt;&gt; gamestate = GameState(None, beehive, ant_types(), layout, dimensions)\n&gt;&gt;&gt; # Testing long status stack\n&gt;&gt;&gt; scary = ScaryThrower()\n&gt;&gt;&gt; slow = SlowThrower()\n&gt;&gt;&gt; bee = Bee(3)\n&gt;&gt;&gt; gamestate.places[\"tunnel_0_0\"].add_insect(scary)\n&gt;&gt;&gt; gamestate.places[\"tunnel_0_1\"].add_insect(slow)\n&gt;&gt;&gt; gamestate.places[\"tunnel_0_3\"].add_insect(bee)\n&gt;&gt;&gt; scary.action(gamestate) # scare bee once\n&gt;&gt;&gt; gamestate.time = 0\n&gt;&gt;&gt; bee.action(gamestate) # scared\n&gt;&gt;&gt; bee.place.name\n'tunnel_0_4'\n&gt;&gt;&gt; for _ in range(3): # slow bee three times\n...    slow.action(gamestate)\n&gt;&gt;&gt; gamestate.time = 1\n&gt;&gt;&gt; bee.action(gamestate) # scared, but also slowed thrice\n&gt;&gt;&gt; bee.place.name\n'tunnel_0_4'\n&gt;&gt;&gt; gamestate.time = 2\n&gt;&gt;&gt; bee.action(gamestate) # scared and slowed thrice\n&gt;&gt;&gt; bee.place.name\n'tunnel_0_5'\n&gt;&gt;&gt; gamestate.time = 3\n&gt;&gt;&gt; bee.action(gamestate) # slowed thrice\n&gt;&gt;&gt; bee.place.name\n'tunnel_0_4'\n\n# Error: expected\n#     'tunnel_0_5'\n# but got\n#     'tunnel_0_4'\n</code></pre> <p>\u6211\u5224\u65ad\u8fd9\u4e2a\u5c31\u662f\u7531\u4e8e\u6ca1\u6709\u5904\u7406\u591a\u72b6\u6001\u7684\u60c5\u51b5\u800c\u4ea7\u751f\u7684\u95ee\u9898</p> <p>\u7136\u540e\u5f00\u59cb\u89c2\u5bdf\u6d4b\u8bd5\u7684\u4ee3\u7801(\u56e0\u4e3a\u524d\u51e0\u4e2a\u8f93\u51fa\u90fd\u6ca1\u6709\u62a5\u9519)\uff0c\u7ecf\u8fc7\u601d\u8003\u4ee5\u53ca\u68b3\u7406\u4ee3\u7801\u7684\u5177\u4f53\u6d41\u7a0b\uff0c\u6211\u5927\u6982\u660e\u767d\u4e86\u51fa\u73b0\u8fd9\u79cd\u60c5\u51b5\u7684\u539f\u56e0(\u524d\u9762\u8ba1\u4e2d\u60c5\u51b5\u6ca1\u9519\u800c\u540e\u9762\u9519\u4e86)\uff0c\u95ee\u9898\u53ef\u80fd\u662f\u51fa\u5728\uff0c\u591a\u72b6\u6001\u4e0b\uff0c\u6050\u5413\u72b6\u6001\u7ed3\u675f\u65f6\uff0c(\u6211\u5199\u7684\u539f\u672c\u7684\u4ee3\u7801\u4e2d)\u4f1a\u628a\u5b9e\u4f8b\u7684 <code>.action</code> \u65b9\u6cd5\u8d4b\u503c\u6210\u539f\u6765\u7684 <code>action</code> \u65b9\u6cd5\uff0c\u5c31\u5e94\u8be5\u4f1a\u5bfc\u81f4\u67d0\u79cd\u77db\u76fe</p> <p>\u800c\u524d\u9762\u6ca1\u6709\u51fa\u9519\u7684 \u662f\u56e0\u4e3a \u6050\u5413\u4e4b\u540e\u7684\u51cf\u901f\u72b6\u6001\uff0c\u662f\u5c06\u6050\u5413\u540e\u7684\u65b0 <code>action</code> \u65b9\u6cd5\u8bbe\u7f6e\u6210\u4e86\u65e7 <code>action</code> \u65b9\u6cd5\uff0c\u6240\u4ee5\u4f1a\u6709\u79cd\u7c7b\u4f3c\u4e8e hw04 \u7684 Q5 Joint Account \u4e00\u6837\u7684\u611f\u89c9(\u5373\u8054\u5408\u8d26\u6237\u5728\u53d6\u94b1\u65f6\uff0c\u4f1a\u8c03\u7528\u539f\u8d26\u6237\u7684\u65b9\u6cd5\uff0c\u7136\u540e\u5982\u679c\u539f\u8d26\u6237\u4e5f\u662f\u4e00\u4e2a\u8054\u5408\u8d26\u6237\uff0c\u90a3\u4e48\u5c31\u4f1a\u7ee7\u7eed\u8c03\u7528\u539f\u8d26\u6237\u7684\u539f\u8d26\u6237\u7684\u65b9\u6cd5...)\uff0c\u6240\u4ee5\u6211\u7684\u7406\u89e3\u662f\u8fd9\u6837</p> <pre><code>flowchart TD\nsubgraph g1[\" \"]\na1[\"bee\"] ==&gt; b1[\"original action method\"]\nend\nsubgraph g2[\" \"]\na2[\"bee\"] -.- b2[\"original action method\"]\na2 ==&gt; c2[\"action method \\n created by 1st status\"]\nc2 --&gt; b2\nend\nsubgraph g3[\" \"]\na3[\"bee\"] -.- b3[\"original action method\"]\na3 -.- c3[\"action method \\n created by 1st status\"]\na3 ==&gt; d3[\"action method \\n created by 2nd status\"]\nd3 --&gt; c3\nc3 --&gt; b3\nend\nsubgraph g4[\" \"]\na4[\"bee\"] -.- b4[\"original action method\"]\na4 -.- c4[\"action method \\n created by 1st status\"]\na4 -.- d4[\"action method \\n created by 2nd status\"]\na4 ==&gt; e4[\"action method \\n created by 3rd status\"]\ne4 --&gt; d4\nd4 --&gt; c4\nc4 --&gt; b4\nend\ng1 --&gt; g2 --&gt; g3 --&gt; g4 --&gt; ...</code></pre> <p>\u7531\u4e8e\u5728\u72b6\u6001\u5269\u4f59\u65f6\u95f4\u51cf\u4e3a0\u4e4b\u540e\uff0c\u60f3\u4e0d\u5230\u5982\u4f55\u628a <code>old_action</code> \u7ed9\u540e\u9762\u7684 \u65b0action\u65b9\u6cd5</p> <p>\u6240\u4ee5\u5c06\u601d\u8def\u6539\u53d8\u6210\uff0c\u5728\u5269\u4f59\u65f6\u95f4\u51cf\u4e3a0\u4e4b\u540e\uff0c\u4e0d\u7ed3\u675f\u51fd\u6570\uff0c\u800c\u662f\u7ee7\u7eed\u4fdd\u7559\u51fd\u6570\uff0c\u5e76\u4e14\u5269\u4f59\u65f6\u95f4\u51cf\u4e3a0\u4e4b\u540e\u5c31\u76f4\u63a5\u6267\u884c\u539f\u672c\u7684 <code>old_action</code> \u65b9\u6cd5\u5373\u53ef\uff0c\u6240\u4ee5</p> <pre><code>def apply_status(status, bee, length):\n    old_action = bee.action\n    def new_action(gamestate):\n        nonlocal length\n        if length &gt; 0:\n            length -= 1\n            status(old_action, bee)(gamestate)\n            if length == 0:\n                bee.direction = None\n                if status is make_scare:\n                    bee.has_been_scared = True\n        else:\n            old_action(gamestate)\n    bee.action = new_action\n</code></pre> <p>\u6700\u7ec8\u7ec8\u4e8e\u6210\u529f\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898</p> <pre><code>$ python ok -q optional4 --local\n=====================================================================\nAssignment: Project 3: Ants Vs. SomeBees\nOK, version v1.18.1\n=====================================================================\n\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nRunning tests\n\n---------------------------------------------------------------------\nTest summary\n    10 test cases passed! No cases failed.\n</code></pre> code <pre><code>class Bee(Insect):\n    ...\n    # OVERRIDE CLASS ATTRIBUTES HERE\n    ...\n    direction = None\n    has_been_scared = False\n\n\n    ...\n\n    def action(self, gamestate):\n        \"\"\"A Bee's action stings the Ant that blocks its exit if it is blocked,\n        or moves to the exit of its current place otherwise.\n\n        gamestate -- The GameState, used to access game state information.\n        \"\"\"\n        destination = self.place.exit\n        # Extra credit: Special handling for bee direction\n        # BEGIN EC\n        \"*** YOUR CODE HERE ***\"\n        if self.direction:\n            destination = self.direction\n        # END EC\n        if self.blocked():\n            self.sting(self.place.ant)\n        elif self.armor &gt; 0 and destination is not None:\n            self.move_to(destination)\n\n    ...\n\n...\n\n############\n# Statuses #\n############\n\ndef make_slow(action, bee):\n    \"\"\"Return a new action method that calls ACTION every other turn.\n\n    action -- An action method of some Bee\n    \"\"\"\n    # BEGIN Problem Optional 4\n    \"*** YOUR CODE HERE ***\"\n    # def new_action(gamestate):\n    #     if gamestate.time % 2 == 1:\n    #         action(bee, gamestate)\n    def new_action(gamestate):\n        if gamestate.time % 2 == 0:\n            action(gamestate)\n    # bee.action = new_action\n    return new_action\n    # END Problem Optional 4\n\ndef make_scare(action, bee):\n    \"\"\"Return a new action method that makes the bee go backwards.\n\n    action -- An action method of some Bee\n    \"\"\"\n    # BEGIN Problem Optional 4\n    \"*** YOUR CODE HERE ***\"\n    # bee.direction = bee.place.exit\n    # def new_action(gamestate):\n    #     bee.direction = bee.place if bee.place.entrance is gamestate.beehive else bee.place.entrance\n    #     action(bee, gamestate)\n    def new_action(gamestate):\n        if not bee.has_been_scared:\n            bee.direction = bee.place if bee.place.entrance is gamestate.beehive else bee.place.entrance\n        action(gamestate)\n    # bee.action = new_action\n    return new_action\n    # END Problem Optional 4\n\ndef apply_status(status, bee, length):\n    \"\"\"Apply a status to a BEE that lasts for LENGTH turns.\"\"\"\n    # BEGIN Problem Optional 4\n    \"*** YOUR CODE HERE ***\"\n    old_action = bee.action\n    def new_action(gamestate):\n        nonlocal length\n        if length &gt; 0:\n            length -= 1\n            status(old_action, bee)(gamestate)\n            if length == 0:\n                # bee.action = old_action\n                bee.direction = None\n                if status is make_scare:\n                    bee.has_been_scared = True\n        else:\n            old_action(gamestate)\n    # bee.action = status(bee.action, bee)\n    bee.action = new_action\n    # END Problem Optional 4\n\n\nclass SlowThrower(ThrowerAnt):\n    \"\"\"ThrowerAnt that causes Slow on Bees.\"\"\"\n\n    name = 'Slow'\n    food_cost = 4\n    # BEGIN Problem Optional 4\n    # implemented = False   # Change to True to view in the GUI\n    implemented = True\n    # END Problem Optional 4\n\n    def throw_at(self, target):\n        if target:\n            apply_status(make_slow, target, 3)\n\n\nclass ScaryThrower(ThrowerAnt):\n    \"\"\"ThrowerAnt that intimidates Bees, making them back away instead of advancing.\"\"\"\n\n    name = 'Scary'\n    food_cost = 6\n    # BEGIN Problem Optional 4\n    # implemented = False   # Change to True to view in the GUI\n    implemented = True\n    # END Problem Optional 4\n\n    def throw_at(self, target):\n        # BEGIN Problem Optional 4\n        \"*** YOUR CODE HERE ***\"\n        if target:\n            apply_status(make_scare, target, 2)\n        # END Problem Optional 4\n</code></pre>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part2/#lecture-20-representation","title":"Lecture 20 Representation","text":""},{"location":"Notes%20of%20Courses/CS61A/CS61A_part2/#1_7","title":"1","text":"<p><code>repr()</code> \u51fd\u6570\u80fd\u628apython\u8868\u8fbe\u5f0f\u8f6c\u6362\u6210\u5728\u81ea\u7136\u8bed\u8a00\u4e2d\u89c4\u8303\u7684\u5b57\u7b26\u4e32\uff0c</p> <p>\u8fd4\u56de\u7684\u5b57\u7b26\u4e32\u548c\u5728\u7ec8\u7aef\u4e2d\u4f7f\u7528\u4ea4\u4e92\u5f0f\u7684python\uff0c\u8f93\u5165\u8868\u8fbe\u5f0f\u65f6\u663e\u793a\u7684\u7ed3\u679c\u4e00\u6837(\u5373\u5982\u4e0a\u56fe\uff0c<code>12e12</code> \u548c <code>print(repr(12e12))</code> \u663e\u793a\u7684\u4e00\u6837)</p> <p></p> <p><code>str()</code> (\u7c7b)\u53ef\u4ee5\u5c06\u5bf9\u8c61\u8f6c\u6362\u6210(\u5176\u5bf9\u5e94\u7684)\u5b57\u7b26\u4e32(\u611f\u89c9\u6709\u70b9\u7c7b\u4f3c\u4e8e c++ \u4e2d \u5de6\u79fb\u8fd0\u7b97\u7b26 <code>&lt;&lt;</code> \u7684\u91cd\u8f7d)\uff0c\u8fd9\u4e2a\u5b57\u7b26\u4e32\u548c \u4f7f\u7528 <code>print</code> \u51fd\u6570 \u663e\u793a\u7684\u7ed3\u679c\u662f\u76f8\u5e94\u7684(\u6216\u8005\u8bf4\u4f7f\u7528 <code>print</code> \u51fd\u6570\u4f1a\u9690\u5f0f\u5730\u8c03\u7528 <code>__str__</code> \u65b9\u6cd5)</p> <p>\u4e0a\u56fe\u4e2d\u53ef\u4ee5\u770b\u5230 <code>repr()</code> \u548c <code>str()</code> \u7684\u4e0d\u540c\u4e4b\u5904</p>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part2/#2_7","title":"2","text":"<p><code>repr()</code> \u548c <code>str()</code> \u90fd\u662f\u901a\u8fc7\u8c03\u7528\u4f20\u5165\u53c2\u6570\u7684\u65b9\u6cd5\u6765\u5b9e\u73b0\u529f\u80fd</p> <p><code>repr()</code> \u4f1a\u8c03\u7528 <code>__repr__</code> \u65b9\u6cd5\uff0c</p> <pre><code>def repr(x):\n    return type(x).__repr__(x)\n</code></pre> <p>\u4f7f\u7528\u7c7b\u5185\u65b9\u6cd5\u53ef\u4ee5\u907f\u514d\u5728\u5b9e\u4f8b\u4e2d\u4fee\u6539\u4e86\u65b9\u6cd5</p> <p><code>str()</code> \u4f1a\u8c03\u7528 <code>__str__</code> \u65b9\u6cd5</p> <p>\u5982\u679c\u6ca1\u6709 <code>__str__</code> \u65b9\u6cd5\uff0c\u5219\u8c03\u7528 <code>__repr__</code> \u65b9\u6cd5</p> <pre><code>def str(x):\n    t = type(x)\n    if hasattr(t, '__str__'):\n        return t.__str__(x)\n    else:\n        return t.__repr__(x)\n</code></pre>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part2/#3_5","title":"3","text":"<p>\u5982\u679c\u4e00\u4e2a\u7c7b\u6ca1\u6709 <code>__str__</code> \u65b9\u6cd5\uff0c\u5728\u76f4\u63a5\u8c03\u7528 <code>__str__</code> \u65b9\u6cd5\u65f6\uff0c\u4f1a\u6539\u4e3a\u8c03\u7528 <code>__repr__</code> \u65b9\u6cd5</p> <pre><code>class Bear:\n    \"\"\"A Bear.\"\"\"\n    \n    def __repr__(self):\n        return 'Bear()'\n    \noski = Bear()\nprint(oski)\nprint(str(oski))\nprint(repr(oski))\nprint(oski.__str__())\nprint(oski.__repr__())\n</code></pre> <p>\u8fd0\u884c\u4ee5\u4e0a\u4ee3\u7801\uff0c\u4f1a\u663e\u793a</p> <pre><code>Bear()\nBear()\nBear()\nBear()\nBear()\n</code></pre>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part2/#4_4","title":"4","text":"<p>\u5b57\u7b26\u4e32\u53ef\u4ee5\u4f7f\u7528 <code>.format()</code> \u6765\u586b\u5165\u53c2\u6570(\u9700\u8981\u6ce8\u610f\u5e8f\u53f7/\u4e0b\u6807\u4e0e\u4f20\u5165\u987a\u5e8f\u5bf9\u5e94)</p> <pre><code>&gt;&gt;&gt; x = 5\n&gt;&gt;&gt; y = 6\n&gt;&gt;&gt; \"x + y = {0}\".format(x + y)\n'x + y = 11'\n&gt;&gt;&gt; \"x + y = {1}\".format(x + y, y)\n'x + y = 6'\n</code></pre> <p>\u6216\u8005\u4e5f\u53ef\u4ee5\u4f7f\u7528</p> <pre><code>&gt;&gt;&gt; f\"x + y = {x + y}\"\n'x + y = 11'\n</code></pre>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part2/#5_4","title":"5","text":"<p>python\u7684\u4e00\u4e9b\u7279\u6b8a\u65b9\u6cd5\u540d(\u524d\u540e\u90fd\u6709\u4e24\u4e2a\u4e0b\u5212\u7ebf\u7684\u65b9\u6cd5)</p>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part2/#6_2","title":"6","text":"<p><code>__add__</code> \u65b9\u6cd5\u662f\u5b9e\u4f8b\u5728\u52a0\u53f7\u5de6\u8fb9\u65f6\u4f7f\u7528\uff0c <code>__radd__</code> \u65b9\u6cd5\u662f\u5b9e\u4f8b\u5728\u52a0\u53f7\u53f3\u8fb9\u65f6\u4f7f\u7528\uff0c</p> <p>John \u76f4\u63a5\u6dfb\u52a0\u4e86\u4e00\u884c\u4ee3\u7801</p> <pre><code>__radd__ = __add__\n</code></pre>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part2/#lecture-20-qa","title":"Lecture 20 Q&amp;A","text":""},{"location":"Notes%20of%20Courses/CS61A/CS61A_part2/#1_8","title":"1","text":"<p><code>type</code> \u548c <code>isinstance</code> \u7684\u533a\u522b</p> <ul> <li><code>isinstance</code> \u4f1a\u5224\u65ad\u4e00\u4e2a\u5b9e\u4f8b\u662f\u5426\u662f\u67d0\u4e2a\u7c7b\u6216\u5b83\u7684\u5b50\u7c7b\u4eec</li> <li><code>type</code> \u53ea\u4f1a\u8fd4\u56de\u5b9e\u4f8b\u5177\u4f53\u7684\u7c7b</li> </ul>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part2/#2_8","title":"2","text":"<p>John \u4f7f\u7528\u9012\u5f52\u548c <code>yield</code> \u8bed\u53e5\u6765\u5b9e\u73b0\u8f93\u51fa\u6811\u7684\u6240\u6709\u6839\u5230\u53f6\u5b50\u7684\u8def\u5f84\u7684\u65b9\u6cd5</p> <pre><code>def print_all_paths(t):\n    \"\"\"Print all the paths from the root to a leaf.\n\n    &gt;&gt;&gt; t = tree(1, [tree(2, [tree(3), tree(5)]), tree(4)])\n    &gt;&gt;&gt; print_all_paths(t)\n    [1, 2, 3]\n    [1, 2, 5]\n    [1, 4]\n    \"\"\"\n    for path in all_paths(t):\n        print(path)\n\ndef all_paths(t):\n    if is_leaf(t):\n        yield [label(t)]\n    for b in branches(t):\n        for path in all_paths(b):   # path might be [2, 3]\n            yield [label(t)] + path # yielding [1, 2, 3]\n</code></pre>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part2/#lecture-21-composition","title":"Lecture 21 Composition","text":""},{"location":"Notes%20of%20Courses/CS61A/CS61A_part2/#1_9","title":"1","text":"<p>John \u4e3a\u81ea\u5b9a\u4e49\u7684 \u94fe\u8868 Linked List \u7c7b \u7528\u9012\u5f52\u7684\u65b9\u5f0f\u7f16\u5199\u4e86\u7c7b\u4f3c\u4e8epython\u5185\u7f6e\u7684 <code>range</code> <code>map</code> <code>filter</code> \u51fd\u6570</p> <p></p> <pre><code>class Link:\n    empty = ()\n    \n    def __init__(self, first, rest=empty):\n        assert rest is Link.empty or isinstance(rest, Link)\n        self.first = first\n        self.rest = rest\n        \n    def __repr__(self):\n        if self.rest:\n            rest_repr = ', ' + repr(self.rest)\n        else:\n            rest_repr = ''\n        return 'Link()' + repr(self.first) + rest_repr + ')'\n    \n    def __str__(self):\n        string = '&lt;'\n        while self.rest is not Link.empty:\n            string += str(self.first) + ' '\n            slef = self.rest\n        return string + str(self.first) + '&gt;'\n</code></pre> <pre><code>def range_link(start, end):\n    \"\"\"Return a Link containing consecutive integers from start to end.\n\n    &gt;&gt;&gt; range_link(3, 6)\n    Link(e, Link(4, Link(5)))\n    \"\"\"\n    if start &gt;= end:\n        return Link.empty\n    else:\n        return Link(start, range_link(start + 1, end))\n</code></pre> <pre><code>def map_link(f, s):\n    \"\"\"Return a link that contains f(x) for each x in Link s.\n\n    &gt;&gt;&gt; map_link(square, range_link(3, 6))\n    Link(9, Link(16, Link(25)))\n    \"\"\"\n    if s is Link.empty:\n        return s\n    else:\n        return Link(f(s.first), map_link(f, s.rest))\n</code></pre> <pre><code>def filter_link(f, s):\n    \"\"\"Return a Link that contains only the elements x of Link s for which f(x) is a true value.\n\n    &gt;&gt;&gt; filter_link(odd, range_link(3, 6))\n    Link(3, Link(5))\n    \"\"\"\n    if s is Link.empty:\n        return s\n    filtered_rest = filter_link(f, s.rest)\n    if f(s.first):\n        return Link(s.first, filtered_rest)\n    else:\n        return filtered_rest\n</code></pre>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part2/#2_9","title":"2","text":"<p>John \u7528\u9012\u5f52\u7684\u65b9\u5f0f\u5199\u7684 \u81ea\u5b9a\u4e49\u94fe\u8868\u7ed3\u6784 \u7684 <code>add</code> \u51fd\u6570(\u8ba9\u6211\u89c9\u5f97\u770b\u8d77\u6765\u5f88\u7b80\u6d01)</p> <pre><code>def add(s, v):\n    \"\"\"Add v to s, returning modified s.\n\n    &gt;&gt;&gt; s = Link(1, Link(3, Link(5)))\n    &gt;&gt;&gt; add(s, 0)\n    Link(0, Link(1, Link(3, Link(5))))\n    &gt;&gt;&gt; add(s, 3)\n    Link(0, Link(1, Link(3, Link(5))))\n    &gt;&gt;&gt; add(s, 4)\n    Link(0, Link(1, Link(3, Link(4, Link(5)))))\n    &gt;&gt;&gt; add(s, 6)\n    Link(0, Link(1, Link(3, Link(4, Link(5, Link(6))))))\n    \"\"\"\n    assert s is not Link.empty\n    if s.first &gt; v:\n        s.first, s.rest = v, Link(s.first, s.rest)\n    elif s.first &lt; v and empty(s.rest):\n        s.rest = Link(v)\n    elif s.first &lt; v:\n        add(s.rest, v)\n    return s\n</code></pre>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part2/#3_6","title":"3","text":"<p>John \u5c55\u793a\u7684 <code>Tree</code> \u7c7b\u7684\u5b9e\u73b0\u4ee3\u7801</p> <pre><code>class Tree:\n    \"\"\"A tree is a label and a list of branches.\"\"\"\n    def __init__(self, label, branches=[]):\n        self.label = label\n        for branch in branches:\n            assert isinstance(branch, Tree)\n        self.branches = list(branches)\n\n    def __repr__(self):\n        if self.branches:\n            branch_str = ', ' + repr(self.branches)\n        else:\n            branch_str = ''\n        return 'Tree({0}{1})'.format(repr(self.label), branch_str)\n\n    def __str__(self):\n        return '\\n'.join(self.indented())\n\n    def indented(self):\n        lines = []\n        for b in self.branches:\n            for line in b.indented():\n                lines.append('  ' + line)\n        return [str(self.label)] + lines\n\n    def is_leaf(self):\n        return not self.branches\n</code></pre>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part2/#hw-05","title":"HW 05","text":""},{"location":"Notes%20of%20Courses/CS61A/CS61A_part2/#1_10","title":"1","text":"<p>Q5 \u4e2d\uff0c\u672c\u6765\u6211\u4ee5\u4e3a</p> <pre><code>return [t.label].extend([preorder(b) for b in t.branches])\n</code></pre> <p>\u80fd\u5b9e\u73b0\uff0c\u4f46\u662f\u663e\u793a\u6ca1\u6709\u8fd4\u56de\u7684\u503c\uff0c\u7136\u540e\u8fdb\u884c\u6d4b\u8bd5\u53d1\u73b0\uff0c\u5217\u8868\u7684 <code>.append()</code> \u548c <code>.extend()</code> \u65b9\u6cd5\u6ca1\u6709\u8fd4\u56de\u503c</p>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part2/#2_10","title":"2","text":"<p>Q6\uff0c\u6211\u7684\u4e24\u79cd\u5b9e\u73b0\u65b9\u5f0f</p> <ul> <li> <p>\u6309\u7167\u539f\u672c\u63d0\u4f9b\u7684\u6846\u67b6</p> code <pre><code>def path_yielder(t, value):\n    \"*** YOUR CODE HERE ***\"\n\n    if t.label == value:\n        yield [t.label]\n    for b in t.branches:\n        for path in path_yielder(b, value):\n\n            \"*** YOUR CODE HERE ***\"\n            yield [t.label] + path\n</code></pre> </li> <li> <p>\u6211\u6574\u5408\u6210\u4e00\u884c\u4ee3\u7801</p> code <pre><code>def path_yielder(t, value):\n    yield from (([[t.label]] if t.label == value else []) +\n                sum([[[t.label] + path for path in path_yielder(b, value)] for b in t.branches], start=[]))\n</code></pre> </li> </ul>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part2/#3_7","title":"3","text":"<p>Q3\u4e2d\uff0c\u539f\u672c\u6211\u662f\u7528\u9012\u5f52\u7684\u65b9\u5f0f\u6765\u5b9e\u73b0\uff0c\u4f46\u662f\u4f1a\u7a0d\u5fae\u9ebb\u70e6\u4e00\u4e9b\uff0c</p> <pre><code>def store_digits(n):\n    if n // 10 == 0:\n        return Link(n)\n    else:\n        pre_digits = store_digits(n // 10)\n        last_digits = pre_digits\n        while last_digits.rest != Link.empty:\n            last_digits = last_digits.rest\n        last_digits.rest = Link(n % 10)\n        return pre_digits\n</code></pre> <p>\u7136\u540e\u5728\u63d0\u793a\u89c6\u9891\u4e2d\u770b\u5230\u52a9\u6559\u8001\u5e08\u8bf4\u4e00\u822c\u94fe\u8868\u4f1a\u4f7f\u7528\u9012\u5f52\u548c\u8fed\u4ee3\u7684\u65b9\u5f0f\u6765\u5b9e\u73b0\u529f\u80fd\uff0c\u8fd9\u9898\u4f7f\u7528\u8fed\u4ee3\u6bd4\u8f83\u65b9\u4fbf\uff0c\u7136\u540e\u6211\u5c06\u6211\u7684\u4ee3\u7801\u6539\u6210\u4e86\u7528\u8fed\u4ee3\u6765\u5b9e\u73b0</p> code <pre><code>def store_digits(n):\n    link = Link(n % 10)\n    while n // 10:\n        n //= 10\n        link = Link(n % 10, link)\n    return link\n</code></pre>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part2/#lecture-22-efficiency","title":"Lecture 22 Efficiency","text":""},{"location":"Notes%20of%20Courses/CS61A/CS61A_part2/#1_11","title":"1","text":"<p>\u4eceJohn\u7684demo\u6f14\u793a\u4e2d\u53ef\u4ee5\u770b\u5230\uff0c <code>def</code> \u5b9a\u4e49\u51fa\u7684\u51fd\u6570\u4f3c\u4e4e\u4e5f\u53ef\u4ee5\u50cf\u7c7b\u4e00\u6837\u62e5\u6709\u5c5e\u6027 Attribute (\u53ef\u4ee5\u4f7f\u7528 <code>.</code> \u6765\u8bbf\u95ee)</p>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part2/#2_11","title":"2","text":"<p>\u51fd\u6570\u5185\u90e8\u7684\u53d8\u91cf\u5177\u4f53\u6307\u5411\u7684\u5bf9\u8c61 \u53d6\u51b3\u4e8e \u8c03\u7528\u65f6 \u7684\u60c5\u51b5\uff0c</p> <p>\u4f8b\u5982</p> <pre><code>&gt;&gt;&gt; def f(n):\n...     return f(n-1) if n else n\n...\n&gt;&gt;&gt; ori_f = f\n&gt;&gt;&gt; f = 6\n&gt;&gt;&gt; ori_f(4)\nTraceback (most recent call last):\n  File \"&lt;stdin&gt;\", line 1, in &lt;module&gt;\n  File \"&lt;stdin&gt;\", line 2, in f\nTypeError: 'int' object is not callable\n&gt;&gt;&gt;\n</code></pre> <p>\u5728\u5b9a\u4e49\u597d <code>f</code> \u51fd\u6570\u4e4b\u540e\uff0c\u5c06 <code>f</code> \u4fee\u6539\u4e3a <code>6</code> \uff0c\u90a3\u4e48\u4e4b\u540e\u8c03\u7528\u539f\u672c\u7684\u51fd\u6570 <code>f</code> \u65f6\uff0c\u5728\u8fdb\u884c\u9012\u5f52\u8c03\u7528(\u8bbf\u95ee <code>f</code> \u53d8\u91cf)\u65f6\uff0c\u83b7\u53d6\u5230\u7684\u662f\u6574\u578b <code>6</code> \uff0c\u6240\u4ee5\u4f1a\u663e\u793a</p> <pre><code>TypeError: 'int' object is not callable\n</code></pre> <p>\u6240\u4ee5\uff0c\u4e0b\u9762\u56fe\u4e2d John \u6f14\u793a\u7684 demo \u6211\u89c9\u5f97\u5e94\u8be5\u8fd9\u6837\u7406\u89e3</p> <p></p> <pre><code>def fib(n):\n    if n == 0 or n == 1:\n        return n\n    else:\n        return fib(n-2) + fib(n-1)\n\ndef count(f):\n    def counted(n):\n        counted.call_count += 1\n        return f(n)\n    counted.call_count = 0\n    return counted\n\ndef memo(f):\n    cache = {}\n    def memoized(n):\n        if n not in cache:\n            cache[n] = f(n)\n        return cache[n]\n    return memoized\n</code></pre> <ul> <li> <p>\u7b2c\u4e00\u6b65</p> <pre><code>&gt;&gt;&gt; fib = count(fib)\n&gt;&gt;&gt; counted_fib = fib\n</code></pre> <p>\u5c06 <code>fib</code> \u51fd\u6570\u4f20\u5165 <code>count</code> \u51fd\u6570\u4e2d\uff0c\u83b7\u5f97 \u7b2c\u4e00\u4e2a <code>counted</code> (\u4e0e\u4e4b\u540e\u7b2c\u4e8c\u4e2a <code>counted</code> \u4f5c\u533a\u5206)</p> <pre><code>flowchart LR\n\u53d8\u91cf\u540dfib --&gt; \u7b2c\u4e00\u4e2acounted\u51fd\u6570 --\"f\"--&gt; fib\u51fd\u6570\ncounted_fib --&gt; \u7b2c\u4e00\u4e2acounted\u51fd\u6570</code></pre> </li> <li> <p>\u7b2c\u4e8c\u6b65</p> <pre><code>&gt;&gt;&gt; fib = memo(fib)\n</code></pre> <p>\u8fd9\u91cc <code>fib</code> \u6307\u5411\u7684\u662f \u7b2c\u4e00\u4e2a <code>counted</code> \uff0c\u6240\u4ee5\u4f20\u5165 <code>memo</code> \u7684\u662f \u7b2c\u4e00\u4e2a <code>counted</code> \uff0c</p> <p>\u7136\u540e\u83b7\u5f97 <code>memoized</code> \u51fd\u6570</p> <pre><code>flowchart LR\ncounted_fib --&gt; \u7b2c\u4e00\u4e2acounted\u51fd\u6570 --\"f\"--&gt; fib\u51fd\u6570\n\u53d8\u91cf\u540dfib --&gt; memoized\u51fd\u6570 --\"f\"--&gt; \u7b2c\u4e00\u4e2acounted\u51fd\u6570</code></pre> </li> <li> <p>\u7b2c\u4e09\u6b65</p> <pre><code>&gt;&gt;&gt; fib = count(fib)\n</code></pre> <p>\u548c\u521a\u624d\u7c7b\u4f3c\uff0c\u8fd9\u91cc\u662f\u5c06 <code>memoized</code> \u51fd\u6570\u4f20\u5165 <code>count</code> \uff0c\u7136\u540e\u83b7\u5f97 \u7b2c\u4e8c\u4e2a <code>counted</code> \u51fd\u6570</p> <pre><code>flowchart LR\ncounted_fib --&gt; \u7b2c\u4e00\u4e2acounted\u51fd\u6570 --\"f\"--&gt; fib\u51fd\u6570\nmemoized\u51fd\u6570 --\"f\"--&gt; \u7b2c\u4e00\u4e2acounted\u51fd\u6570\n\u53d8\u91cf\u540dfib --&gt; \u7b2c\u4e8c\u4e2acounted\u51fd\u6570 --\"f\"--&gt; memoized\u51fd\u6570</code></pre> </li> <li> <p>\u800c <code>fib</code> \u51fd\u6570\u5185\u90e8\u5728\u9012\u5f52\u65f6\uff0c\u4f1a\u8bbf\u95ee \u53d8\u91cf\u540d <code>fib</code> \uff0c\u6240\u4ee5\u5173\u7cfb\u53ef\u4ee5\u8fdb\u4e00\u6b65\u7406\u89e3\u4e3a</p> <pre><code>flowchart LR\n\u53d8\u91cf\u540dfib --&gt; \u7b2c\u4e8c\u4e2acounted\u51fd\u6570 --\"f\"--&gt; memoized\u51fd\u6570\ncounted_fib --&gt; \u7b2c\u4e00\u4e2acounted\u51fd\u6570 --\"f\"--&gt; fib\u51fd\u6570\nmemoized\u51fd\u6570 --\"f\"--&gt; \u7b2c\u4e00\u4e2acounted\u51fd\u6570\nfib\u51fd\u6570 -.-&gt; \u53d8\u91cf\u540dfib</code></pre> <p>\u6240\u4ee5\uff0c\u6bcf\u6b21\u8c03\u7528(\u539f\u672c\u7684) <code>fib</code> \u51fd\u6570\u65f6\uff0c\u9012\u5f52\u8c03\u7528\u7684\u662f \u7b2c\u4e8c\u4e2a <code>counted</code> \u51fd\u6570\uff0c\u5e76\u4e14\u7531\u4e8e\u662f \u6811\u5f62\u9012\u5f52\uff0c\u6240\u4ee5 \u7b2c\u4e8c\u4e2a <code>counted</code> \u51fd\u6570\u7684 <code>call_count</code> \u5927\u7ea6\u4e3a <code>n</code> (30)\u7684\u4e24\u500d\uff0c</p> <p>\u800c \u7b2c\u4e00\u4e2a <code>counted</code> \u51fd\u6570\uff0c\u53ea\u6709 <code>memoized</code> \u51fd\u6570\u4e2d\u4f20\u5165\u672a\u88ab\u8bb0\u5f55\u7ed3\u679c\u7684 <code>n</code> \u65f6\uff0c\u624d\u4f1a\u88ab\u8c03\u7528\uff0c\u56e0\u6b64 \u7b2c\u4e00\u4e2a <code>counted</code> \u51fd\u6570 \u7684 <code>call_count</code> \u4e3a <code>31</code> \uff0c\u521a\u597d\u5bf9\u5e94 0 \u5230 30</p> </li> </ul>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part2/#3_8","title":"3","text":"<p>John \u7ed9\u51fa\u4e86\u4e00\u79cd\u5229\u7528\u5e73\u65b9\u6765\u52a0\u901f \u5e42\u8fd0\u7b97 \u7684\u65b9\u6cd5\uff1a</p> \\[ b^n = \\begin{cases} 1 &amp; \\mathrm{if} \\ n = 0 \\\\ (b^{\\frac{1}{2}n})^2 &amp; \\mathrm{if} \\ n \\ \\mathrm{is \\ even} \\\\ b \\cdot b^{n-1} &amp; \\mathrm{if} \\ n \\ \\mathrm{is \\ odd} \\\\ \\end{cases} \\] <pre><code>def exp(b, n):\n    if n == 0:\n        return 1\n    elif n % 2 == 0:\n        return square(exp(b, n // 2))\n    else:\n        return b * exp(b, n - 1)\n\ndef square(x):\n    return x * x\n</code></pre>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part2/#4_5","title":"4","text":"<p>John \u5c55\u793a\u4e86\u4e00\u4e0b Jupyter Notebook \u7684\u4f7f\u7528</p> <p>Quote</p> <p>John:</p> <p>...this environment is called a jupiter notebook, you can read about them online. it's a common way that people use in order to execute python code when the output is a graph or a chart.</p> <p>John:</p> <p>...\u8fd9\u4e2a\u73af\u5883\u88ab\u79f0\u4e3aJupyter\u7b14\u8bb0\u672c\uff0c\u4f60\u53ef\u4ee5\u5728\u7f51\u4e0a\u4e86\u89e3\u66f4\u591a\u76f8\u5173\u4fe1\u606f\u3002\u8fd9\u662f\u4eba\u4eec\u5728\u6267\u884c\u8f93\u51fa\u4e3a\u56fe\u8868\u6216\u56fe\u8868\u7684Python\u4ee3\u7801\u65f6\u5e38\u7528\u7684\u4e00\u79cd\u65b9\u5f0f\u3002</p> <p></p> <p></p> <p>\u611f\u89c9\u7528\u6765\u753b\u56fe\u4f1a\u5f88\u65b9\u4fbf</p>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part2/#lab-08","title":"Lab 08","text":""},{"location":"Notes%20of%20Courses/CS61A/CS61A_part2/#1_12","title":"1","text":"<p>Q5 \u7684\u989d\u5916\u6311\u6218 extra challenge\uff0c\u5b9e\u73b0\u68c0\u6d4b\u94fe\u8868\u662f\u5426\u5e26\u6709\u5faa\u73af\uff0c\u4f46\u662f\u53ea\u80fd\u4f7f\u7528\u56fa\u5b9a\u5927\u5c0f\u7684/\u6052\u5b9a\u7684\u7a7a\u95f4</p> <p>\u6211\u4e00\u5f00\u59cb\u6ca1\u60f3\u51fa\u6765\uff0c\u7b2c\u4e8c\u5929\u91cd\u65b0\u601d\u8003\u7684\u65f6\u5019\uff0c\u60f3\u5230\u6709\u5faa\u73af\u5c31\u610f\u5473\u7740\u4f1a\u6765\u5230\u66fe\u7ecf\u6765\u8fc7\u7684\u8282\u70b9\uff0c\u90a3\u4e48\u5c31\u610f\u5473\u7740 \u8fd9\u4e2a\u8282\u70b9\u53ef\u4ee5\u7528\u6bd4\u5f53\u524d\u66f4\u5c11\u7684\u6b65\u6570\u4ece\u94fe\u8868\u5934\u5230\u8fbe\uff0c\u6240\u4ee5\uff0c\u6211\u6253\u7b97\u4f7f\u7528\u6052\u5b9a\u7a7a\u95f4\u6765\u8bb0\u5f55\u5f53\u524d\u8d70\u8fc7\u7684\u6b65\u6570\uff0c</p> <p>\u6700\u540e\u6210\u529f\u5b9e\u73b0\u4e86\u529f\u80fd</p> code <pre><code>def has_cycle_constant(link):\n    head = link\n    count = 0\n    while link.rest:\n        link = link.rest\n        count += 1\n        sublist = head\n        for _ in range(count):\n            if sublist is link:\n                return True\n            sublist = sublist.rest\n    return False\n</code></pre>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part2/#lecture-23-decomposition","title":"Lecture 23 Decomposition","text":""},{"location":"Notes%20of%20Courses/CS61A/CS61A_part2/#1_13","title":"1","text":"<p>\u4e00\u4e2a\u4e4b\u524d\u6ca1\u600e\u4e48\u4f7f\u7528\u8fc7\u7684python\u7684\u6570\u636e\u7c7b\u578b set \uff0c\u5b83\u7684\u7279\u6027</p> <ul> <li>\u53ea\u80fd\u5305\u542b\u4e0d\u540c\u7684\u5143\u7d20\uff0c\u5982\u679c\u521b\u5efa\u65f6\u6709\u591a\u4e2a\u76f8\u540c\u7684\u5143\u7d20\uff0c\u5219\u53ea\u4f1a\u4fdd\u7559\u4e00\u4e2a</li> <li>\u5143\u7d20\u7684\u987a\u5e8f\u662f\u65e0\u5e8f\u7684</li> <li>John\u4ecb\u7ecd\u8bf4\uff0c\u4f7f\u7528 <code>in</code> \u8bed\u53e5\u67e5\u8be2\u67d0\u4e2a\u5143\u7d20\u662f\u5426\u5728\u4e00\u4e2a set \u4e2d\uff0c\u6240\u9700\u7684\u65f6\u95f4\u662f\u5e38\u6570\u7ea7\u7684\uff0c\u4e0d\u4f1a\u968f\u7740 set \u7684\u957f\u5ea6\u589e\u957f(\u50cf\u5217\u8868\u5c31\u4f1a\u968f\u7740\u957f\u5ea6\u589e\u957f\uff0c\u662f\u7ebf\u6027\u7ea7\u7684)</li> <li><code>.union()</code> \u548c <code>.intersection()</code> \u5206\u522b\u662f set \u53d6\u5e76\u96c6\u548c\u4ea4\u96c6\u7684\u65b9\u6cd5\uff0c\u5e76\u4e14 John \u8bf4\u9053\uff0c\u8fd9\u4e24\u4e2a\u65b9\u6cd5\u5e76\u4e0d\u4f1a\u5bf9\u539f\u672c\u7684 set \u8fdb\u884c\u4fee\u6539\uff0c\u800c\u662f\u4f1a\u521b\u5efa\u51fa\u4e00\u4e2a\u65b0\u7684 set</li> </ul>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part2/#lecture-23-qa","title":"Lecture 23 Q&amp;A","text":""},{"location":"Notes%20of%20Courses/CS61A/CS61A_part2/#1_14","title":"1","text":"<p>\u6709\u4eba\u63d0\u95ee\u7684\u4e00\u9053\u8003\u8bd5\u9898\u76ee</p> <p></p> <p>\u6211\u611f\u89c9\u8fd8\u86ee\u6709\u610f\u601d\uff0c\u4e8e\u662f\u6211\u5c31\u6682\u505c\u5c1d\u8bd5\u4e86\u4e00\u4e0b</p> <pre><code>def stable(s, k, n):\n    \"\"\"Return whether all pairs of elements of S within distance K differ by at most N.\n\n    &gt;&gt;&gt; stable([1, 2, 3, 5, 6], 1, 2)  # All adjacent values differ by at most 2.\n    True\n    &gt;&gt;&gt; stable([1, 2, 3, 5, 6], 2, 2)  # abs(5-2) is a difference of 3.\n    False\n    &gt;&gt;&gt; stable([1, 5, 1, 5, 1], 2, 2)  # abs(5-1) is a difference of 4.\n    False\n    \"\"\"\n    for i in range(len(s)):\n        near = range(max(i - k, 0), i)\n        if any([abs(s[j] - s[i]) &gt; n for j in near]):\n            return False\n    return True\n</code></pre> <p>\u8fd0\u884c\u8fdb\u884c\u6d4b\u8bd5\uff0c\u6210\u529f\u901a\u8fc7</p> <pre><code>&gt; python -m doctest -v .\\test.py\nTrying:\n    stable([1, 2, 3, 5, 6], 1, 2)  # All adjacent values differ by at most 2.\nExpecting:\n    True\nok\nTrying:\n    stable([1, 2, 3, 5, 6], 2, 2)  # abs(5-2) is a difference of 3.\nExpecting:\n    False\nok\nTrying:\n    stable([1, 5, 1, 5, 1], 2, 2)  # abs(5-1) is a difference of 4.\nExpecting:\n    False\nok\n1 items had no tests:\n    test\n1 items passed all tests:\n   3 tests in test.stable\n3 tests in 2 items.\n3 passed and 0 failed.\nTest passed.\n</code></pre>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part2/#2_12","title":"2","text":"<p>Quote</p> <pre><code>\"\"\"A: (3 pts) Implement is_power, which takes a positive integer base and a\nnon-negative integer s. It returns whether s is power of base, meaning that there\nis some non-negative integer n such that pow(base, n) equals s.\n\nIMPORTANT: You may not call pow, use the ** operator, or import any function\n(such as math.log). Your solution must be recursive.\n\nCheck the doctests with: python3 -q a\n\"\"\"\ndef is_power(base, s):\n    \"\"\"Return whether s is a power of base.\n\n    &gt;&gt;&gt; is_power(5, 625)  # pow(5, 4) = 5 * 5 * 5 * 5 = 625\n    True\n    &gt;&gt;&gt; is_power(5, 1)    # pow(5, 0) = 1\n    True\n    &gt;&gt;&gt; is_power(5, 5)    # pow(5, 1) = 5\n    True\n    &gt;&gt;&gt; is_power(5, 15)   # 15 is not a power of 5 (it's multiple)\n    False\n    &gt;&gt;&gt; is_power(3, 9)\n    True\n    &gt;&gt;&gt; is_power(3, 8)\n    False\n    &gt;&gt;&gt; is_power(3, 10)\n    False\n    &gt;&gt;&gt; is_power(1, 8)\n    False\n    &gt;&gt;&gt; is_power(2, 0)    # 0 is not a power of any positive base.\n    False\n\n    &gt;&gt;&gt; is_power(4, 16)\n    True\n    &gt;&gt;&gt; is_power(4, 64)\n    True\n    &gt;&gt;&gt; is_power(4, 63)\n    False\n    &gt;&gt;&gt; is_power(4, 65)\n    False\n    &gt;&gt;&gt; is_power(4, 32)\n    False\n    \"\"\"\n    assert base &gt; 0 and s &gt;= 0\n    assert type(base) is int and type(s) is int\n    if ______:\n        return True\n    elif ______:\n        return False\n    else:\n        return ______\n\n\ncurry2 = lambda f: lambda x: lambda y: f(x, y)\n\n\"\"\"B: (5 pts) Implement powers, a generator function which takes positive\nintegers n and k. It yields all integers m that are both powers of k and whose\ndigits appear in order in n.\n\nAssume thar is_power is implemented correctly.\n\nNote: powers may yield its results in any order. The doctests below check what\nis yielded, but not the order. The built-in sorted funcion used in the doctests\ntakes in an iterable object and returns a list containing the elements of the\niterable in non-decreasing order.\n\nCheck the doctests with: python3 ok -q b\"\"\"\ndef powers(n, k):\n    \"\"\"Yield all powers of k whose digits appear in order in n.\n\n    &gt;&gt;&gt; sorted(powers(12345, 5))\n    [1, 5, 25, 125]\n    &gt;&gt;&gt; sorted(powers(54321, 5))  # 25 and 125 are not in order\n    [1, 5]\n    &gt;&gt;&gt; sorted(powers(2493, 3))\n    [3, 9, 243]\n\n    &gt;&gt;&gt; sorted(powers(2493, 2))\n    [2, 4]\n    &gt;&gt;&gt; sorted(powers(164352, 2))\n    [1, 2, 4, 16, 32, 64]\n    \"\"\"\n    def build(seed):\n        \"\"\"Yield all non-negetive integers whose digits appear in order in seed.\n        0 is yielded because 0 has no digits, so all its digits are in seed.\n        \"\"\"\n        if seed == 0:\n            yield 0\n        else:\n            for x in ______:\n                ______\n                ______\n    yield from filter(curry2(______)(______), build(n))\n</code></pre> <p>\u6709\u4eba\u63d0\u95ee\u7684\u4e00\u9053\u9898\u76ee\uff0c\u6211\u6709\u70b9\u60f3\u5c1d\u8bd5\u4e00\u4e0b\uff0c</p> <p>\u672c\u6765\u53ea\u662f\u60f3\u505a\u4e00\u4e0b\u7b2c\u4e8c\u9898/\u7b2c\u4e8c\u90e8\u5206\uff0c\u4f46\u662f\u770b\u9898\u76ee\u8981\u6c42\u597d\u50cf\u7b2c\u4e8c\u9898\u9700\u8981\u7528\u5230\u7b2c\u4e00\u9898\u7684\u51fd\u6570\uff0c\u4e8e\u662f\u5c31\u8fde\u7b2c\u4e00\u9898\u4e00\u8d77\u505a\u5b8c\u4e86\ud83d\ude02</p> <pre><code>def is_power(base, s):\n    \"\"\"Return whether s is a power of base.\n\n    &gt;&gt;&gt; is_power(5, 625)  # pow(5, 4) = 5 * 5 * 5 * 5 = 625\n    True\n    &gt;&gt;&gt; is_power(5, 1)    # pow(5, 0) = 1\n    True\n    &gt;&gt;&gt; is_power(5, 5)    # pow(5, 1) = 5\n    True\n    &gt;&gt;&gt; is_power(5, 15)   # 15 is not a power of 5 (it's multiple)\n    False\n    &gt;&gt;&gt; is_power(3, 9)\n    True\n    &gt;&gt;&gt; is_power(3, 8)\n    False\n    &gt;&gt;&gt; is_power(3, 10)\n    False\n    &gt;&gt;&gt; is_power(1, 8)\n    False\n    &gt;&gt;&gt; is_power(2, 0)    # 0 is not a power of any positive base.\n    False\n\n    &gt;&gt;&gt; is_power(4, 16)\n    True\n    &gt;&gt;&gt; is_power(4, 64)\n    True\n    &gt;&gt;&gt; is_power(4, 63)\n    False\n    &gt;&gt;&gt; is_power(4, 65)\n    False\n    &gt;&gt;&gt; is_power(4, 32)\n    False\n    \"\"\"\n    assert base &gt; 0 and s &gt;= 0\n    assert type(base) is int and type(s) is int\n    if s == 1:\n        return True\n    elif base == 0 or base == 1 or s == 0 or s % base != 0:\n        return False\n    else:\n        return is_power(base, s // base)\n\n\ncurry2 = lambda f: lambda x: lambda y: f(x, y)\n\ndef powers(n, k):\n    \"\"\"Yield all powers of k whose digits appear in order in n.\n\n    &gt;&gt;&gt; sorted(powers(12345, 5))\n    [1, 5, 25, 125]\n    &gt;&gt;&gt; sorted(powers(54321, 5))  # 25 and 125 are not in order\n    [1, 5]\n    &gt;&gt;&gt; sorted(powers(2493, 3))\n    [3, 9, 243]\n\n    &gt;&gt;&gt; sorted(powers(2493, 2))\n    [2, 4]\n    &gt;&gt;&gt; sorted(powers(164352, 2))\n    [1, 2, 4, 16, 32, 64]\n    \"\"\"\n    def build(seed):\n        \"\"\"Yield all non-negetive integers whose digits appear in order in seed.\n        0 is yielded because 0 has no digits, so all its digits are in seed.\n        \"\"\"\n        if seed == 0:\n            yield 0\n        else:\n            for x in build(seed // 10):\n                yield x\n                yield x * 10 + seed % 10\n    yield from filter(curry2(is_power)(k), build(n))\n</code></pre>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part2/#3_9","title":"3","text":"<p>John \u63d0\u5230\u4e86 lab 08 \u7684 Q6 <code>reverse_other</code> \u8fd9\u9898\uff0c\u57fa\u672c\u7684\u601d\u8def\u548c\u4e4b\u524d\u6211\u505a\u7684\u65f6\u5019\u7684\u601d\u8def\u611f\u89c9\u5dee\u4e0d\u591a\uff0c\u4f46\u662f\u5728\u5177\u4f53\u5904\u7406\u4e0a\uff0c\u6211\u89c9\u5f97\u8001\u5e08\u7684\u4e00\u4e9b\u5904\u7406\u503c\u5f97\u5b66\u4e60\uff0c</p> <p>\u9996\u5148\u5c31\u662f\uff0c\u7528\u5230\u4e86\u4e4b\u524d\u7684\u7ec3\u4e60\u4e2d\u4e5f\u6709\u63d0\u5230\u7684 <code>zip</code> \u51fd\u6570\uff0c\u5229\u7528\u4e86 <code>zip</code> \u611f\u89c9\u5c31\u6bd4\u6211\u4e4b\u524d\u7684\u5199\u6cd5\u66f4\u52a0\u7b80\u6d01\uff0c</p> <p>\u7136\u540e\u662f\u5904\u7406 \u9694\u4e00\u5c42\u53cd\u8f6c \u7684\u64cd\u4f5c\u4e0a\uff0c\u662f\u76f4\u63a5\u5728\u5b50\u8282\u70b9\u7684\u5faa\u73af\u4e2d\u518d\u6b21\u5faa\u73af\uff0c\u5c31\u521a\u597d\u80fd\u62ff\u5230 \u5b59\u5b50\u8282\u70b9\uff0c\u6211\u4e4b\u524d\u7684\u505a\u6cd5\u5c31\u7a0d\u5fae\u9ebb\u70e6\uff0c\u8fd8\u9700\u8981\u4e00\u4e2a <code>helper</code> \u51fd\u6570\u6765\u8f85\u52a9\u8ba1\u6570</p> <p></p> <p>John\u53c8\u5c55\u793a\u4e86\u4e0d\u4f7f\u7528 <code>zip</code> \u7684\u5b9e\u73b0\u65b9\u6cd5\uff0c\u800c\u4ed6\u8fd9\u6b21\u5229\u7528\u4e86\u8d1f\u7684\u4e0b\u6807\u6765\u5b9e\u73b0\u7ffb\u8f6c</p> <pre><code>for i in range(len(t.branches)):\n    t.branches[i].label = labels_of_branches[-i - 1]\n    ...\n</code></pre>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part2/#4_6","title":"4","text":"<p>\u6709\u4eba\u63d0\u95ee\uff0c\u5982\u679c\u4e00\u4e2a\u7c7b\u7ee7\u627f\u81ea\u4e24\u4e2a\u4e0d\u540c\u7684\u7c7b\uff0c\u90a3\u4e48\u5b83\u4f7f\u7528 <code>super</code> \u65f6\u4f1a\u600e\u6837</p> <p>Quote</p> <p>John:</p> <p>so if you use super on a class that inherits from two different classes, what have you built, you built something very strange, but basically whay you've built is the same object except for, it's gonna not look up things is its class, it's gonna look at them up in one of the base classes, and which one, well, it looks at them in the order that you inherit, so if have a class that inherits from both b and c, it's gonna look in b first and then it's gonna look at c, to find the corresponding attribute that you're looking at.</p> <p>John:</p> <p>\u5f53\u4f60\u5728\u4e00\u4e2a\u4ece\u4e24\u4e2a\u4e0d\u540c\u7c7b\u7ee7\u627f\u7684\u7c7b\u4e0a\u4f7f\u7528 super \u65f6\uff0c\u4f60\u6784\u5efa\u4e86\u4e00\u4e9b\u975e\u5e38\u5947\u602a\u7684\u4e1c\u897f\uff0c\u4f46\u57fa\u672c\u4e0a\u4f60\u6784\u5efa\u7684\u662f\u76f8\u540c\u7684\u5bf9\u8c61\uff0c\u53ea\u662f\u5b83\u4e0d\u4f1a\u5728\u5176\u7c7b\u4e2d\u67e5\u627e\u5c5e\u6027\uff0c\u800c\u662f\u4f1a\u5728\u5176\u4e2d\u4e00\u4e2a\u57fa\u7c7b\u4e2d\u67e5\u627e\u3002\u800c\u5177\u4f53\u662f\u54ea\u4e00\u4e2a\u57fa\u7c7b\u5462\uff1f\u5b83\u4f1a\u6309\u7167\u4f60\u7ee7\u627f\u7684\u987a\u5e8f\u67e5\u627e\uff0c\u6240\u4ee5\u5982\u679c\u6709\u4e00\u4e2a\u7c7b\u540c\u65f6\u7ee7\u627f\u81ea\u7c7bB\u548c\u7c7bC\uff0c\u5b83\u4f1a\u9996\u5148\u5728B\u4e2d\u67e5\u627e\uff0c\u7136\u540e\u518d\u5728C\u4e2d\u67e5\u627e\u76f8\u5e94\u7684\u5c5e\u6027\u3002</p>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part2/#lecture-24-data-example","title":"Lecture 24 Data Example","text":""},{"location":"Notes%20of%20Courses/CS61A/CS61A_part2/#1_15","title":"1","text":"<p>\u5c1d\u8bd5\u81ea\u5df1\u505a\u4e86\u4e00\u4e0b\u8fd9\u56db\u9898\uff0c\u4e0b\u9762\u662f\u6211\u5199\u7684</p> <pre><code>def indices_of_min_abs(s):\n    \"\"\"\n    &gt;&gt;&gt; indices_of_min_abs([-4, -3, -2, 3, 2, 4])\n    [2, 4]\n    &gt;&gt;&gt; indices_of_min_abs([1, 2, 3, 4, 5])\n    [0]\n    \"\"\"\n    min_abs = min([abs(x) for x in s])\n    return [i for i in range(len(s)) if abs(s[i]) == min_abs]\n\ndef largest_sum_of_adjacency(s):\n    \"\"\"\n    &gt;&gt;&gt; largest_sum_of_adjacency([-4, -3, -2, 3, 2, 4])\n    6\n    &gt;&gt;&gt; largest_sum_of_adjacency([-4, 3, -2, -3, 2, -4])\n    1\n    \"\"\"\n    return max([s[i] + s[i + 1] for i in range(len(s) - 1)])\n\ndef map_digit_to_element(s):\n    \"\"\"\n    &gt;&gt;&gt; map_digit_to_element([5, 8, 13, 21, 34, 55, 89])\n    {1: [21], 3: [13], 4: [34], 5: [5, 55], 8: [8], 9: [89]}\n    \"\"\"\n    result = {}\n    for x in s:\n        d = x % 10\n        if d not in result:\n            result[d] = [x]\n        else:\n            result[d] += [x]\n    return {d: result[d] for d in sorted(result)}\n\ndef every_element_has_equal_value(s):\n    \"\"\"\n    &gt;&gt;&gt; every_element_has_equal_value([-4, -3, -2, 3, 2, 4])\n    False\n    &gt;&gt;&gt; every_element_has_equal_value([4, 3, 2, 3, 2, 4])\n    True\n    \"\"\"\n    for i in range(len(s)):\n        if all([i == j or s[i] != s[j] for j in range(len(s))]):\n            return False\n    return True\n</code></pre> <p>\u5728\u505a\u7b2c\u4e09\u4e2a\u95ee\u9898\u65f6\uff0c\u53d1\u73b0\u4e86\u5982\u679c <code>sorted</code> \u51fd\u6570\u4f20\u5165\u7684\u662f\u4e00\u4e2a\u5b57\u5178\uff0c\u90a3\u4e48\u4f1a\u8fd4\u56de\u4ee5\u952e\u4e3a\u5143\u7d20\u6392\u597d\u5e8f\u7684\u5217\u8868</p>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part2/#2_13","title":"2","text":"<p>John \u7b2c\u4e00\u4e2a\u95ee\u9898\u4e2d\u8fd0\u7528\u4e86 <code>map</code> \u51fd\u6570\u6765\u83b7\u53d6 <code>min_abs</code> \uff0c\u611f\u89c9\u6bd4\u6211\u7684\u4ee3\u7801\u770b\u8d77\u6765\u66f4\u7b80\u6d01\u4e9b</p> <pre><code>min_abs = min(map(abs, s))\n</code></pre> <p>John <code>return</code> \u7684\u90a3\u4e00\u884c\u4ee3\u7801\uff0c\u63d0\u4f9b\u4e86\u4f7f\u7528 <code>filter</code> \u51fd\u6570\u7684\u53e6\u4e00\u79cd\u5199\u6cd5(\u7531\u4e8e <code>filter</code> \u8fd4\u56de\u7684\u662f\u4e00\u4e2a\u8fed\u4ee3\u5668\uff0c\u6240\u4ee5\u9700\u8981\u8f6c\u6362\u6210\u5217\u8868)\uff0c</p> <pre><code>return list(filter(lambda i: abs(s[i]) == min_abs, range(len(s))))\n</code></pre> <p></p> <p>John \u5728\u7b2c\u4e8c\u4e2a\u95ee\u9898\u4e2d\u53c8\u63d0\u4f9b\u4e86\u7b2c\u4e8c\u79cd\u65b9\u6cd5\uff0c\u5229\u7528 <code>zip</code> \u51fd\u6570\uff0c\u5e76\u4e14\u5229\u7528\u5207\u7247\u6765\u83b7\u53d6\u76f8\u90bb\u5143\u7d20(\u611f\u89c9\u592a\u5f3a\u4e86\ud83d\ude32\uff0c\u5b8c\u5168\u6ca1\u60f3\u5230\u80fd\u8fd9\u6837\u7528 <code>zip</code> )</p> <pre><code>return max([a + b for a, b in zip(s[:-1], s[1:])])\n</code></pre> <p></p> <p>\u7b2c\u4e09\u4e2a\u95ee\u9898 John \u7528\u4e86\u8ddf\u6211\u7684\u601d\u8def\u4e0d\u540c\u7684\u53e6\u4e00\u79cd\u601d\u8def\u6765\u5b9e\u73b0</p> <pre><code>return {d: [x for x in s if x % 10 == d] for d in range(10) if any([x % 10 == d for x in s])}\n</code></pre> <p></p> <p>\u7b2c\u56db\u4e2a\u95ee\u9898\uff0cJohn \u4e00\u5f00\u59cb\u7684\u601d\u8def\u611f\u89c9\u611f\u89c9\u548c\u6211\u7684\u5dee\u4e0d\u591a\uff0c\u4f46\u662f\u4e5f\u6bd4\u6211\u7684\u4ee3\u7801\u8981\u7b80\u6d01\uff0c</p> <pre><code>return all([s[i] in s[:i] + s[i + 1:] for i in range(len(s))])\n</code></pre> <p>\u4f46\u662f John \u63d0\u4f9b\u4e86\u7b2c\u4e8c\u79cd\u601d\u8def\uff0c\u5982\u679c\u5217\u8868\u4e2d\u6709\u4e24\u4e2a\u76f8\u540c\u7684\u6570\uff0c\u90a3\u4e48\u610f\u5473\u7740\u8fd9\u4e2a\u6570\u7684\u4e2a\u6570\u5927\u4e8e\u7b49\u4e8e2\uff0c</p> <p></p> <p>\u56e0\u6b64\u53ef\u4ee5\u8fd9\u6837\u5199</p> <pre><code>return all([sum([1 for y in s if y == x]) &gt; 1 for x in s])\n</code></pre> <p>\u800c\u8fdb\u4e00\u6b65\uff0c\u53ef\u4ee5\u501f\u52a9 <code>min</code> \u6765\u5224\u65ad\u6700\u5c0f\u7684\u7ed3\u679c\u5927\u4e8e 1 \u5c31\u53ef\u4ee5\u4e86\uff0c</p> <p>\u800c\u7136\u540e\uff0c\u5217\u8868\u6709\u4e00\u4e2a <code>.count()</code> \u65b9\u6cd5\uff0c\u8ba1\u7b97\u67d0\u4e2a\u5143\u7d20\u7684\u4e2a\u6570\uff0c\u56e0\u6b64\u5f97\u5230(\u5e94\u8be5\u662f)\u6700\u7b80\u6d01\u7684\u5199\u6cd5(\u771f\u7ed9\u6211\u770b\u5f97\u5168\u7a0b\u60ca\u5446\u4e86\ud83d\ude32)</p> <pre><code>return min([s.count(x) for x in s]) &gt; 1\n</code></pre> <p></p>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part2/#3_10","title":"3","text":"<p>\u8fd9\u91cc\u7684\u7b2c\u4e09\u548c\u7b2c\u56db\u4e2a\u95ee\u9898\u611f\u89c9\u6709\u70b9\u610f\u601d\uff0c\u7b2c\u56db\u4e2a\u95ee\u9898\u6211\u4e00\u5f00\u59cb\u60f3\u6ca1\u6709\u60f3\u51fa\u6765\uff0c\u6700\u540e\u770b\u4e86 John \u7684\u7f16\u5199\u624d\u60f3\u660e\u767d</p> <p></p> <pre><code>def merge(s, t):\n    \"\"\"Return a sorted Link with the elements of sorted s &amp; t.\n\n    &gt;&gt;&gt; a = Link(1, Link(5))\n    &gt;&gt;&gt; b = Link(1, Link(4))\n    &gt;&gt;&gt; merge(a, b)\n    Link(1, Link(1, Link(4, Link(5))))\n    &gt;&gt;&gt; a\n    Link(1, Link(5))\n    &gt;&gt;&gt; b\n    Link(1, Link(4))\n    \"\"\"\n    if s is Link.empty:\n        return t\n    elif t is Link.empty:\n        return s\n    elif s.first &lt;= t.first:\n        return Link(s.first, merge(s.rest, t))\n    else:\n        return Link(t.first, merge(s, t.rest))\n\ndef merge_in_place(s, t):\n    \"\"\"Return a sorted Link with the elements of sorted s &amp; t.\n\n    &gt;&gt;&gt; a = Link(1, Link(5))\n    &gt;&gt;&gt; b = Link(1, Link(4))\n    &gt;&gt;&gt; merge(a, b)\n    Link(1, Link(1, Link(4, Link(5))))\n    &gt;&gt;&gt; a\n    Link(1, Link(1, Link(4, Link(5))))\n    &gt;&gt;&gt; b\n    Link(1, Link(4, Link(5)))\n    \"\"\"\n    if s is Link.empty:\n        return t\n    elif t is Link.empty:\n        return s\n    elif s.first &lt;= t.first:\n        # return Link(s.first, merge(s.rest, t))\n        s.rest = merge_in_place(s.rest, t)\n        return s\n    else:\n        # return Link(t.first, merge(s, t.rest))\n        t.rest = merge_in_place(s, t.rest)\n        return t\n</code></pre>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part2/#lecture-24-qa","title":"Lecture 24 Q&amp;A","text":""},{"location":"Notes%20of%20Courses/CS61A/CS61A_part2/#1_16","title":"1","text":"<p>\u63d0\u5230\u768417\u6625(\u7b2c\u4e8c\u6b21\u671f\u4e2d\u6a21\u62df\u8003)\u7684\u4e00\u4e2a\u9898\u76ee</p> <p>Quote</p> <p>Perfect Engine!</p> <p>You are in an apocalyptic society and have been charged with making an n-gen, or a generator that computes all of the n-perfect numbers. However, in this apocalyptic society, built-in AND user-defined Python multiplication is forbidden in any form!</p> <p>You have a blueprint for building a few n-gins from a natural number generator:</p> <pre><code>A 2-gen:\n1 2 3 4 5 6 7 8 9 ...\n1 4 9 16 25 ...\n</code></pre> <pre><code>A 3-gen:\n1 2 3 4 5 6 7 8 9 ...\n1 3 7 12 19 27 ...\n1 8 27 ...\n</code></pre> <p>Hint: Here is how <code>yield from</code> works. When used inside an iterable <code>yield from</code> will issue each element from another iterable as though it was issued from the first iterable. The following code is equivalent:</p> <pre><code>def generator1 ():\n    for item in generator2 ():\n        yield item\n    # do more things in this generator\n</code></pre> <pre><code>def generator1 ():\n    yield from generator2 ()\n    # more things on this generator\n</code></pre> <p>Now its your job to build the perfect n-gen and power society out of the apocalypse! Good luck!</p> <pre><code>def nats():\n    \"\"\"\n    A generator that yields\n    all natural numbers.\n    Might be helpful!\n    \"\"\"\n    curr = 0\n    while True:\n        curr += 1\n        yield curr\n\ndef create_skip(n, gen):\n    if n == 1:\n        yield from ____________\n    curr , skip = ________, ________\n    for elem in ____________:\n        if skip == n:\n            ___________________\n        else:\n            curr = __________________\n            skip = _________________\n            yield _________________\n\ndef perfect_ngen(n):\n    \"\"\"\n    &gt;&gt;&gt; two_gen = perfect_ngen(2)\n    &gt;&gt;&gt; next(two_gen)\n    1\n    &gt;&gt;&gt; next(two_gen)\n    4\n    &gt;&gt;&gt; next(two_gen)\n    9\n    &gt;&gt;&gt; three_gen = perfect_ngen(3)\n    &gt;&gt;&gt; next(three_gen)\n    1\n    &gt;&gt;&gt; next(three_gen)\n    8\n    &gt;&gt;&gt; next(three_gen)\n    27\n    \"\"\"\n    gen = create_skip(____, _______)\n    while _________________:\n        n = _________________\n        gen = create_skip(____, _______)\n    return gen\n</code></pre> <p>\u611f\u89c9\u8fd9\u9898\u6709\u70b9\u597d\u73a9\uff0c\u7528\u5230\u4e86\u4e00\u4e9b\u6570\u5b66\u4e0a\u7684\u7ed3\u8bba\uff0c\u770b\u4e86\u597d\u4e00\u4f1a\u624d\u770b\u61c2\u9898\u76ee\uff0c</p> <p>\u5927\u6982\u662f\uff0c\u8981\u5b9e\u73b0\u4e00\u4e2a\u80fd\u8fd4\u56de \u81ea\u7136\u6570\u7684 n \u6b21\u65b9\u751f\u6210\u5668 \u7684\u51fd\u6570\uff0c\u800c\u4e14\u4e0d\u80fd\u4f7f\u7528\u4e58\u6cd5\uff0c</p> <p>\u4ece\u7ed9\u51fa\u7684\u4e24\u4e2a\u4f8b\u5b50\u770b\uff0c\u8f93\u51fa\u5e73\u65b9\u6570\u5217\u7684\u65b9\u6cd5\u662f\uff0c\u5c06\u81ea\u7136\u6570\u5217\u4e2d\u7684\u5076\u6570(2\u7684\u500d\u6570)\u8df3\u8fc7\uff0c\u518d\u5c06\u6570\u5217\u4e2d\u4e4b\u524d\u7684\u5176\u4ed6\u6570\u52a0\u8d77\u6765\uff0c\u548c\u5c31\u521a\u597d\u662f\u5e73\u65b9\uff0c</p> <p>\u800c\u5bf9\u4e8e\u7acb\u65b9\u6570\u5217\uff0c\u4e0e\u5e73\u65b9\u7c7b\u4f3c\uff0c\u5148\u662f\u5c06\u81ea\u7136\u6570\u5217\u4e2d 3\u7684\u500d\u6570\u8df3\u8fc7\uff0c\u7136\u540e\u5c06\u4e4b\u524d\u7684\u5176\u4ed6\u6570\u52a0\u8d77\u6765\uff0c\u5f97\u5230\u4e00\u4e2a\u6570\u5217\uff0c\u518d\u5c06\u8fd9\u4e2a\u6570\u5217\u518d\u8fdb\u884c\u4e00\u6b21\u540c\u6837\u7684\u64cd\u4f5c(\u5373\u8df3\u8fc7 3\u7684\u500d\u6570\uff0c\u53d6\u4e4b\u524d\u6570\u7684\u548c\uff0c\u770b\u5230\u8fd9\u91cc\u4f1a\u53d1\u73b0 \u81ea\u7136\u6570\u5217\u4e2d\uff0c3\u7684\u500d\u6570\u521a\u597d\u95f4\u9694\u4e3a3\uff0c\u800c\u65b0\u6570\u5217\u4e2d\u521a\u597d\u95f4\u9694\u4e3a2\uff0c\u8fd9\u4e00\u70b9\u4f1a\u5728\u7ed9\u51fa\u7684\u4ee3\u7801\u6846\u67b6\u4e2d\u88ab\u7528\u4e0a)\uff0c\u6700\u540e\u5f97\u5230\u7684\u6570\u5217\u5c31\u662f\u7acb\u65b9\u6570\u5217(\u611f\u89c9\u597d\u795e\u5947\ud83d\ude32)\uff0c</p> <p>\u6240\u4ee5\u6211\u5c31\u5c1d\u8bd5\u4e86\u4e00\u4e0b\u8fd9\u4e2a\u9898\u76ee</p> <pre><code>def nats():\n    \"\"\"\n    A generator that yields\n    all natural numbers.\n    Might be helpful!\n    \"\"\"\n    curr = 0\n    while True:\n        curr += 1\n        yield curr\n\ndef create_skip(n, gen):\n    if n == 1:\n        yield from gen\n    curr , skip = 0, 1\n    for elem in gen:\n        if skip == n:\n            skip = 1\n        else:\n            curr = curr + elem\n            skip = skip + 1\n            yield curr\n\ndef perfect_ngen(n):\n    \"\"\"\n    &gt;&gt;&gt; two_gen = perfect_ngen(2)\n    &gt;&gt;&gt; next(two_gen)\n    1\n    &gt;&gt;&gt; next(two_gen)\n    4\n    &gt;&gt;&gt; next(two_gen)\n    9\n    &gt;&gt;&gt; three_gen = perfect_ngen(3)\n    &gt;&gt;&gt; next(three_gen)\n    1\n    &gt;&gt;&gt; next(three_gen)\n    8\n    &gt;&gt;&gt; next(three_gen)\n    27\n    \"\"\"\n    gen = create_skip(n, nats())\n    while n != 1:\n        n = n - 1\n        gen = create_skip(n, gen)\n    return gen\n</code></pre> <p></p>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part2/#2_14","title":"2","text":"<p>Quote</p> <pre><code>def close(n, smallest=10, d=10):\n    \"\"\" A sequence is near increasing if each element but the last two is smaller than all elements\n    following its subsequent element. That is, element i must be smaller than elements i + 2, i + 3, i + 4 etc.\n    Implement close, which takes a non-negative integer n and returns the largest near increasing sequence\n    of digits within n as an integer. The arguments smallest and d are part of the implementation; you must\n    determine their purpose. The only values you may use are integers and booleans (True and False) (no lists, strings, etc.).\n    Return the longest sequence of near-increasing digits in n.\n    &gt;&gt;&gt; close(123)\n    123\n    &gt;&gt;&gt; close(153)\n    153\n    &gt;&gt;&gt; close(1523)\n    153\n    &gt;&gt;&gt; close(15123)\n    1123\n    &gt;&gt;&gt; close(11111111)\n    11\n    &gt;&gt;&gt; close(985357)\n    557\n    &gt;&gt;&gt; close(14735476)\n    143576\n    &gt;&gt;&gt; close(812348567)\n    1234567\n    &gt;&gt;&gt; close(45671) # with a 1 is 71; without a 1 is 4567\n    4567\n    \"\"\"\n    if n == 0:\n        return 0\n    no = close(n // 10, smallest, d)\n    if smallest &gt; ______:\n        yes = ______\n        return ______(yes, no)\n    return ______\n</code></pre> <p>\u8fd9\u9053\u9898\u6709\u70b9\u96be\u60f3\uff0c\u4e00\u5f00\u59cb\u770b\u5b8c\u4e86 John \u5199\u51fa\u7b54\u6848\u7684\u6574\u4e2a\u8fc7\u7a0b\u4f46\u8fd8\u662f\u6ca1\u60f3\u660e\u767d\uff0c</p> <p>\u7136\u540e John \u6362\u4e86\u4e00\u4e2a\u7b80\u5355\u7684\u4f8b\u5b50\u6765\u8bb2\u89e3\uff0c\u5b9e\u73b0\u83b7\u5f97\u6700\u5927\u7684\u9012\u589e\u5b50\u5e8f\u5217\u51fd\u6570</p> <p></p> <p>Quote</p> <p>John:</p> <p>...let's let's solve a simpler one, more complicated than this, but less complicated than this, let's get rid of this notion of near increasing, and just, uh, look for the longest increasing sequence within n. we would need to keep track of some notion of what's the smallest thing i've done so far, um, so what does this do, return the sequence of digits within n, sorry, the largest sequence of digits within n that is increasing. so how might it work, if i call increasing on here's some digits, let's see what we got we could have two, then four, then seven and eight, that's pretty long try one more, uh we could have three four five six seven, that's pretty long. i didn't check too carefully but it's about right.</p> <pre><code>def increasing(n, smallest=10):\n    \"\"\"Return the largest sequence of digits within n that is increasing.\n\n    &gt;&gt;&gt; increasing(87247861)\n    2478\n    &gt;&gt;&gt; increasing(367456751)\n    34567\n    \"\"\"\n</code></pre> <p>how will we do this one, if n equals zero, return zero. otherwise, if um the last digit of n is less than whatever is the smallest thing i've seen so far, then i might want to include it. so i'm going to just write this as, maybe i'll use n percent 10 in the result, or maybe not.</p> <pre><code>def increasing(n, smallest=10):\n    \"\"\"Return the largest sequence of digits within n that is increasing.\n\n    &gt;&gt;&gt; increasing(87247861)\n    2478\n    &gt;&gt;&gt; increasing(367456751)\n    34567\n    \"\"\"\n    if n == 0:\n        return 0\n    elif n % 10 &lt; smallest:\n        # Maybe I'll use n % 10 in the result or maybe not\n    else:\n</code></pre> <p>if n if the last digit is not allowed because it's bigger, than something that i've already decided i'm going to use, then i just can't use it. so that means the best i can do, is find the biggest increasing number within n divided by 10. okay so now we're going to have this notion of no and yes. no says i ignore n percent ten.</p> <pre><code>def increasing(n, smallest=10):\n    \"\"\"Return the largest sequence of digits within n that is increasing.\n\n    &gt;&gt;&gt; increasing(87247861)\n    2478\n    &gt;&gt;&gt; increasing(367456751)\n    34567\n    \"\"\"\n    if n == 0:\n        return 0\n    elif n % 10 &lt; smallest:\n        # Maybe I'll use n % 10 in the result or maybe not\n        no = increasing(n // 10)\n        yes\n    else:\n        return increasing(n // 10)\n</code></pre> <p>this is the same as that, which is why this had kind of a funny structure, we'll talk about that later. it is important that when you're looking for the smallest thing within, and ignoring the last digit you still respect, how whatever digits you've decided to keep already along the way, so you have to pass in this notion of what's the smallest thing i've already decided to use. and then if you decide to use n percent 10, which is smaller than the smallest, now you can still find more digits, but they're not allowed to just be smaller than the smallest thing you had previously seen, now they have to be smaller than n percent 10. it turns out that this could be simplified, because we know that this is smaller than that, so i could trim this down, and i'd get the same result. but i'm going to leave it like this just so we can compare it with the other thing in a minute. and then here i would say, well, maybe i found the best thing without using this digit.</p> <pre><code>def increasing(n, smallest=10):\n    \"\"\"Return the largest sequence of digits within n that is increasing.\n\n    &gt;&gt;&gt; increasing(87247861)\n    2478\n    &gt;&gt;&gt; increasing(367456751)\n    34567\n    \"\"\"\n    if n == 0:\n        return 0\n    elif n % 10 &lt; smallest:\n        # Maybe I'll use n % 10 in the result or maybe not\n        no = increasing(n // 10, smallest)\n        yes = increasing(n // 10, min(n % 10, smallest)) * 10 + n % 10\n        return max(no, yes)\n    else:\n        return increasing(n // 10, smallest)\n</code></pre> <p>...so uh so what now, if you can understand this, then you can eventually understand this, but i agree that like close is just a much, like a considerably more complicated version of increasing. so i would focus on understanding this first what's going on here. let's just look at the mechanics, we either use one or we don't, in the in the choice where we don't, we just kind of pretend it's not there, and then we either use six or we don't, and in the choice where we don't we just pretend it's not there, and then we either use eight or we don't, in the choice that we do now, we have to make sure that everything else that we choose from here is smaller than eight. so we're going to have eight in the end, but we make a recursive call, that is i want the longest increasing sequence within eight seven two four seven, you know everything that's left over, except for all of the digits there have to be smaller than eight, and that's how i got this number. so if that makes sense then look at the difference between this, and that the difference between this and that is that, like we're just tucking away the most recent digit, and we're gonna include it in this notion of smallest, one step later than we otherwise would. so you're allowed to ignore the five, when you're checking to make sure that one is small enough, because that's just the rules of how this works.</p> <p>John:</p> <p>...\u8ba9\u6211\u4eec\u89e3\u51b3\u4e00\u4e2a\u66f4\u7b80\u5355\u7684\u95ee\u9898\uff0c\u6bd4\u8fd9\u4e2a\u590d\u6742\uff0c\u4f46\u6bd4\u8fd9\u4e2a\u7b80\u5355\uff0c\u8ba9\u6211\u4eec\u6446\u8131\u8fd1\u4f3c\u9012\u589e\u7684\u6982\u5ff5\uff0c\u53ea\u662f\u5bfb\u627en\u4e2d\u6700\u957f\u7684\u9012\u589e\u5e8f\u5217\u3002\u6211\u4eec\u9700\u8981\u4fdd\u6301\u67d0\u79cd\u5173\u4e8e\u5230\u76ee\u524d\u4e3a\u6b62\u6211\u505a\u8fc7\u7684\u6700\u5c0f\u7684\u6982\u5ff5\uff0c\u90a3\u4e48\u8fd9\u4e2a\u51fd\u6570\u662f\u5e72\u4ec0\u4e48\u7684\uff0c\u8fd4\u56den\u4e2d\u9012\u589e\u7684\u6700\u5927\u6570\u5b57\u5e8f\u5217\u3002\u6240\u4ee5\u5b83\u53ef\u80fd\u662f\u600e\u4e48\u5de5\u4f5c\u7684\uff0c\u5982\u679c\u6211\u5728\u8fd9\u91cc\u7684\u4e00\u4e9b\u6570\u5b57\u4e0a\u8c03\u7528increasing\uff0c\u8ba9\u6211\u4eec\u770b\u770b\u6211\u4eec\u5f97\u5230\u4e86\u4ec0\u4e48\uff0c\u6211\u4eec\u53ef\u80fd\u67092\uff0c\u7136\u540e4\uff0c\u7136\u540e7\u548c8\uff0c\u8fd9\u5f88\u957f\uff0c\u518d\u8bd5\u4e00\u6b21\uff0c\u6211\u4eec\u53ef\u80fd\u67093\uff0c4\uff0c5\uff0c6\uff0c7\uff0c\u8fd9\u4e5f\u5f88\u957f\u3002\u6211\u6ca1\u6709\u4ed4\u7ec6\u68c0\u67e5\uff0c\u4f46\u5927\u81f4\u662f\u5bf9\u7684\u3002</p> <pre><code>def increasing(n, smallest=10):\n    \"\"\"Return the largest sequence of digits within n that is increasing.\n\n    &gt;&gt;&gt; increasing(87247861)\n    2478\n    &gt;&gt;&gt; increasing(367456751)\n    34567\n    \"\"\"\n</code></pre> <p>\u6211\u4eec\u8981\u5982\u4f55\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u5982\u679cn\u7b49\u4e8e\u96f6\uff0c\u8fd4\u56de\u96f6\u3002\u5426\u5219\uff0c\u5982\u679cn\u7684\u6700\u540e\u4e00\u4f4d\u6570\u5b57\u5c0f\u4e8e\u5230\u76ee\u524d\u4e3a\u6b62\u6211\u770b\u5230\u7684\u6700\u5c0f\u503c\uff0c\u90a3\u4e48\u6211\u53ef\u80fd\u60f3\u8981\u5305\u542b\u5b83\u3002\u6240\u4ee5\u6211\u5c06\u5199\u6210\u8fd9\u6837\uff0c\u4e5f\u8bb8\u6211\u4f1a\u5728\u7ed3\u679c\u4e2d\u4f7f\u7528n % 10\uff0c\u6216\u8005\u4e5f\u8bb8\u4e0d\u4f1a\u3002</p> <pre><code>def increasing(n, smallest=10):\n    \"\"\"Return the largest sequence of digits within n that is increasing.\n\n    &gt;&gt;&gt; increasing(87247861)\n    2478\n    &gt;&gt;&gt; increasing(367456751)\n    34567\n    \"\"\"\n    if n == 0:\n        return 0\n    elif n % 10 &lt; smallest:\n        # Maybe I'll use n % 10 in the result or maybe not\n    else:\n</code></pre> <p>\u5982\u679cn\u7684\u6700\u540e\u4e00\u4f4d\u4e0d\u5141\u8bb8\uff0c\u56e0\u4e3a\u5b83\u6bd4\u6211\u5df2\u7ecf\u51b3\u5b9a\u8981\u4f7f\u7528\u7684\u67d0\u4e2a\u4e1c\u897f\u8981\u5927\uff0c\u90a3\u4e48\u6211\u5c31\u4e0d\u80fd\u4f7f\u7528\u5b83\u3002\u6240\u4ee5\u8fd9\u610f\u5473\u7740\u6211\u80fd\u505a\u7684\u6700\u597d\u7684\u4e8b\u60c5\u662f\uff0c\u5728n\u9664\u4ee510\u7684\u8303\u56f4\u5185\u627e\u5230\u6700\u5927\u7684\u9012\u589e\u6570\u3002\u597d\u7684\uff0c\u73b0\u5728\u6211\u4eec\u5c06\u6709no\u548cyes\u7684\u6982\u5ff5\u3002no\u8868\u793a\u6211\u5ffd\u7565n\u9664\u4ee510\u7684\u4f59\u6570\u3002</p> <pre><code>def increasing(n, smallest=10):\n    \"\"\"Return the largest sequence of digits within n that is increasing.\n\n    &gt;&gt;&gt; increasing(87247861)\n    2478\n    &gt;&gt;&gt; increasing(367456751)\n    34567\n    \"\"\"\n    if n == 0:\n        return 0\n    elif n % 10 &lt; smallest:\n        # Maybe I'll use n % 10 in the result or maybe not\n        no = increasing(n // 10)\n        yes\n    else:\n        return increasing(n // 10)\n</code></pre> <p>\u8fd9\u4e0e\u90a3\u4e2a\u76f8\u540c\uff0c\u8fd9\u5c31\u662f\u4e3a\u4ec0\u4e48\u8fd9\u4e2a\u6709\u70b9\u5947\u602a\u7684\u7ed3\u6784\uff0c\u6211\u4eec\u7a0d\u540e\u4f1a\u8ba8\u8bba\u7684\u539f\u56e0\u3002\u5728\u67e5\u627e\u6700\u5c0f\u503c\u65f6\uff0c\u5ffd\u7565\u6700\u540e\u4e00\u4f4d\u6570\u5b57\u65f6\uff0c\u4ecd\u7136\u8981\u5c0a\u91cd\u6cbf\u9014\u5df2\u7ecf\u51b3\u5b9a\u8981\u4fdd\u7559\u7684\u4efb\u4f55\u6570\u5b57\u7684\u89c4\u5219\uff0c\u56e0\u6b64\u60a8\u5fc5\u987b\u4f20\u9012\u8fd9\u4e2a\u5df2\u7ecf\u51b3\u5b9a\u4f7f\u7528\u7684\u6700\u5c0f\u503c\u7684\u6982\u5ff5\u3002\u7136\u540e\uff0c\u5982\u679c\u51b3\u5b9a\u4f7f\u7528n % 10\uff0c\u8fd9\u5c0f\u4e8e\u6700\u5c0f\u503c\uff0c\u73b0\u5728\u4ecd\u7136\u53ef\u4ee5\u627e\u5230\u66f4\u591a\u7684\u6570\u5b57\uff0c\u4f46\u5b83\u4eec\u4e0d\u80fd\u4ec5\u4ec5\u5c0f\u4e8e\u4e4b\u524d\u5df2\u7ecf\u770b\u5230\u7684\u6700\u5c0f\u503c\uff0c\u73b0\u5728\u5b83\u4eec\u5fc5\u987b\u5c0f\u4e8en % 10\u3002\u4e8b\u5b9e\u8bc1\u660e\uff0c\u8fd9\u53ef\u4ee5\u7b80\u5316\uff0c\u56e0\u4e3a\u6211\u4eec\u77e5\u9053\u8fd9\u5c0f\u4e8e\u90a3\uff0c\u6240\u4ee5\u6211\u53ef\u4ee5\u7f29\u77ed\u8fd9\u4e2a\uff0c\u7136\u540e\u5f97\u5230\u76f8\u540c\u7684\u7ed3\u679c\u3002\u4f46\u6211\u4f1a\u4fdd\u7559\u5b83\uff0c\u53ea\u662f\u4e3a\u4e86\u5728\u4e00\u5206\u949f\u5185\u4e0e\u53e6\u4e00\u79cd\u60c5\u51b5\u8fdb\u884c\u6bd4\u8f83\u3002\u7136\u540e\u5728\u8fd9\u91cc\u6211\u4f1a\u8bf4\uff0c\u55ef\uff0c\u4e5f\u8bb8\u6211\u5df2\u7ecf\u627e\u5230\u4e86\u4e0d\u4f7f\u7528\u8fd9\u4e2a\u6570\u5b57\u7684\u6700\u597d\u7684\u7ed3\u679c\u3002</p> <pre><code>def increasing(n, smallest=10):\n    \"\"\"Return the largest sequence of digits within n that is increasing.\n\n    &gt;&gt;&gt; increasing(87247861)\n    2478\n    &gt;&gt;&gt; increasing(367456751)\n    34567\n    \"\"\"\n    if n == 0:\n        return 0\n    elif n % 10 &lt; smallest:\n        # Maybe I'll use n % 10 in the result or maybe not\n        no = increasing(n // 10, smallest)\n        yes = increasing(n // 10, min(n % 10, smallest)) * 10 + n % 10\n        return max(no, yes)\n    else:\n        return increasing(n // 10, smallest)\n</code></pre> <p>...\u6240\u4ee5\uff0c\u5982\u679c\u60a8\u80fd\u7406\u89e3\u8fd9\u4e00\u70b9\uff0c\u90a3\u4e48\u6700\u7ec8\u60a8\u5c31\u80fd\u7406\u89e3\u8fd9\u4e00\u70b9\uff0c\u4f46\u6211\u540c\u610fclose\u53ea\u662fincreasing\u7684\u4e00\u4e2a\u66f4\u590d\u6742\u7684\u7248\u672c\u3002\u6240\u4ee5\u6211\u5efa\u8bae\u5148\u7406\u89e3\u8fd9\u4e2a\uff0c\u8fd9\u91cc\u53d1\u751f\u4e86\u4ec0\u4e48\u3002\u8ba9\u6211\u4eec\u53ea\u770b\u770b\u673a\u5236\uff0c\u6211\u4eec\u8981\u4e48\u4f7f\u7528\u6570\u5b571\uff0c\u8981\u4e48\u4e0d\u4f7f\u7528\uff0c\u5728\u6211\u4eec\u4e0d\u4f7f\u7528\u7684\u9009\u62e9\u4e2d\uff0c\u6211\u4eec\u53ea\u662f\u5047\u88c5\u5b83\u4e0d\u5b58\u5728\uff0c\u7136\u540e\u6211\u4eec\u8981\u4e48\u4f7f\u75286\uff0c\u8981\u4e48\u4e0d\u4f7f\u7528\uff0c\u5728\u6211\u4eec\u4e0d\u4f7f\u7528\u7684\u9009\u62e9\u4e2d\uff0c\u6211\u4eec\u53ea\u662f\u5047\u88c5\u5b83\u4e0d\u5b58\u5728\uff0c\u7136\u540e\u6211\u4eec\u8981\u4e48\u4f7f\u75288\uff0c\u8981\u4e48\u4e0d\u4f7f\u7528\uff0c\u5728\u6211\u4eec\u4f7f\u7528\u7684\u9009\u62e9\u4e2d\uff0c\u6211\u4eec\u5fc5\u987b\u786e\u4fdd\u4ece\u8fd9\u91cc\u9009\u62e9\u7684\u5176\u4ed6\u6240\u6709\u4e1c\u897f\u90fd\u5c0f\u4e8e8\u3002\u6240\u4ee5\u6700\u540e\u6211\u4eec\u4f1a\u5f97\u52308\uff0c\u4f46\u662f\u6211\u4eec\u8fdb\u884c\u9012\u5f52\u8c03\u7528\uff0c\u4e5f\u5c31\u662f\u6211\u8981\u627e\u523087247\u4e2d\u6700\u957f\u7684\u9012\u589e\u5e8f\u5217\uff0c\u4f60\u77e5\u9053\u9664\u4e86\u6240\u6709\u7684\u6570\u5b57\u4e4b\u5916\uff0c\u90fd\u5fc5\u987b\u5c0f\u4e8e8\uff0c\u8fd9\u5c31\u662f\u6211\u5f97\u5230\u8fd9\u4e2a\u6570\u5b57\u7684\u65b9\u5f0f\u3002\u6240\u4ee5\u5982\u679c\u8fd9\u6709\u610f\u4e49\uff0c\u7136\u540e\u770b\u770b\u8fd9\u4e2a\u548c\u90a3\u4e2a\u4e4b\u95f4\u7684\u533a\u522b\uff0c\u8fd9\u548c\u90a3\u4e2a\u4e4b\u95f4\u7684\u533a\u522b\u662f\uff0c\u6211\u4eec\u53ea\u662f\u85cf\u8d77\u4e86\u6700\u8fd1\u7684\u6570\u5b57\uff0c\u7136\u540e\u6211\u4eec\u4f1a\u5728\u8fd9\u4e2a\u6700\u5c0f\u503c\u7684\u6982\u5ff5\u4e2d\u5305\u542b\u5b83\uff0c\u6bd4\u6211\u4eec\u672c\u6765\u60f3\u7684\u8981\u665a\u4e00\u6b65\u3002\u6240\u4ee5\u5728\u68c0\u67e51\u662f\u5426\u8db3\u591f\u5c0f\u65f6\uff0c\u60a8\u53ef\u4ee5\u5ffd\u75655\uff0c\u56e0\u4e3a\u8fd9\u53ea\u662f\u8fd9\u4e2a\u5de5\u4f5c\u89c4\u5219\u3002</p> <p>\u6240\u4ee5\uff0c\u5982\u679c\u62ff <code>increasing</code> \u7684\u4f8b\u5b50\u6765\u7406\u89e3\uff0c\u5c31\u662f\u5148\u5224\u65ad <code>n</code> \u7684\u4e2a\u4f4d\u662f\u5426\u6bd4 \u4e4b\u524d(\u4e4b\u524d\u5373\u5f53\u524d\u6570\u4f4d\u53f3\u8fb9\u7684\u6570\u4f4d\uff0c\u53ef\u4ee5\u901a\u8fc7\u9012\u5f52\u7684\u65b9\u5f0f\u6765\u7406\u89e3)\u6d4f\u89c8/\u5224\u65ad\u8fc7\u7684\u4f4d\u6570\u7684\u6700\u5c0f\u503c \u5c0f\uff0c\u5c0f\u5c31\u610f\u5473\u7740\u662f\u53ef\u4ee5\u6784\u6210\u9012\u589e\u5e8f\u5217/\u6ee1\u8db3\u9012\u589e\u6761\u4ef6\u7684\uff0c\u90a3\u4e48\u518d\u5206\u51fa\u662f\u5426\u4f7f\u7528\u8fd9\u4e2a\u4f4d\u6570\u7684\u4e24\u79cd\u60c5\u51b5\uff0c\u5982\u679c\u6253\u7b97\u4f7f\u7528\uff0c\u5c31\u5c06\u6700\u5c0f\u503c\u66f4\u65b0( <code>min(n % 10, smallest)</code> \uff0c\u4f46\u7531\u4e8e <code>elif</code> \u5df2\u7ecf\u5224\u65ad\u8fc7\u4e86\uff0c\u786e\u5b9e\u4e5f\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528 <code>n % 10</code> )\uff0c\u5982\u679c\u4e0d\u6253\u7b97\u4f7f\u7528\u5c31\u4e0d\u6539\u53d8\u6700\u5c0f\u503c\u3002\u800c\u5982\u679c\u4e0d\u6ee1\u8db3\u9012\u589e\u6761\u4ef6\uff0c\u5c31\u521a\u597d\u8ddf\u4e0d\u6253\u7b97\u4f7f\u7528\u7684\u60c5\u51b5\u4e00\u6837\u3002</p> <p>\u7406\u89e3\u4e86 <code>increasing</code> \u518d\u53bb\u7406\u89e3 <code>close</code> \u5c31\u4f1a\u597d\u7406\u89e3\u5f88\u591a\uff0c\u9664\u4e86 <code>d</code> \u51e0\u4e4e\u90fd\u4e00\u6837\uff0c\u800c <code>d</code> \u7684\u4f5c\u7528\u5c31\u662f\u4e3a\u4e86\u8ba9\u4f4d\u6570\u665a\u4f20\u4e00\u4f4d(\u6ee1\u8db3 near increasing \u7684\u8981\u6c42)</p>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part2/#3_11","title":"3","text":"<p>John \u63d0\u5230\u4e86\u4e00\u79cd\u4f7f\u7528 \u540c\u65f6\u8d4b\u503c Simultaneous Assignment \u7684\u7279\u6b8a\u60c5\u51b5\uff0c</p> <p>John \u8bf4\u5230\u5728\u4f7f\u7528\u540c\u65f6\u8d4b\u503c\u65f6\uff0c\u4f1a\u5148\u8ba1\u7b97\u7b49\u53f7\u53f3\u8fb9\u7684\u7ed3\u679c\uff0c\u518d\u6309\u987a\u5e8f\u8d4b\u503c\u7ed9\u5de6\u8fb9\u7684\uff0c\u6240\u4ee5\u5728\u8fd9\u4e00\u884c\u4ee3\u7801\u4e2d</p> <pre><code>L.rest, L = L.rest.rest, L.rest.rest\n</code></pre> <p>\u4f1a\u5148\u5c06 <code>L.rest</code> \u6307\u5411 <code>L.rest.rest</code> \uff0c\u7136\u540e\u518d\u5c06\u53d8\u91cf\u540d <code>L</code> \u6307\u5411 <code>L.rest.rest</code> \uff0c\u6240\u4ee5\u4f1a\u6709\u5982\u4e0b\u56fe\u7684\u6539\u53d8</p> \u524d\u540e <p></p> <p></p> <p>\u5148\u662f\u542b\u6709 <code>1</code> \u7684\u8282\u70b9\u7684 <code>rest</code> \u6307\u5411\u542b\u6709 <code>3</code> \u7684\u8282\u70b9(\u5373 <code>L.rest.rest</code> )\uff0c\u518d\u662f <code>L</code> \u6307\u5411\u542b\u6709 <code>3</code> \u7684\u8282\u70b9</p>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part2/#lab-09","title":"Lab 09","text":""},{"location":"Notes%20of%20Courses/CS61A/CS61A_part2/#1_17","title":"1","text":"<p>Q3\uff0c\u505a\u7684\u65f6\u5019\u60f3\u4e86\u597d\u4e00\u4f1a\uff0c\u505a\u5b8c\u4e4b\u540e\u6211\u611f\u89c9\u86ee\u6709\u610f\u601d\u7684\uff0c</p> <p>\u8fd9\u4e00\u9898\u548c\u4e0a\u4e00\u9898Q2\u5f88\u50cf\uff0c\u4f46\u662f\u9700\u8981\u5224\u65ad\u662f\u5426\u662f(\u975e\u4e25\u683c)\u5347\u5e8f\uff0c\u6240\u4ee5\u63d0\u4f9b\u7684\u6846\u67b6\u662f\u6784\u5efa\u4e00\u4e2a <code>subseq_helper</code> \u51fd\u6570\uff0c\u6765\u8bb0\u5f55\u524d\u4e00\u4e2a\u6570\u7684\u5927\u5c0f\uff0c</p> <ul> <li>\u5982\u679c\u5f53\u524d\u7684\u6570\u6bd4\u524d\u4e00\u4e2a\u6570\u5c0f\uff0c\u5c31\u53ef\u4ee5\u76f4\u63a5\u5ffd\u7565\u8fd9\u4e2a\u6570</li> <li>\u5982\u679c\u5927\u4e8e\u7b49\u4e8e\uff0c\u5c31\u9700\u8981\u5206\u60c5\u51b5\uff0c\u5f53\u524d\u8fd9\u4e2a\u6570\u662f\u5426\u88ab\u4f7f\u7528(\u611f\u89c9\u7b97\u662fQ2\u7684\u5347\u7ea7\u7248)</li> </ul> code <pre><code>def inc_subseqs(s):\n    def subseq_helper(s, prev):\n        if not s:\n            return [[]]\n        elif s[0] &lt; prev:\n            return subseq_helper(s[1:], prev)\n        else:\n            a = subseq_helper(s[1:], s[0])\n            b = subseq_helper(s[1:], prev)\n            return insert_into_all(s[0], a) + b\n    return subseq_helper(s, 0)\n</code></pre>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part2/#2_15","title":"2","text":"<p>Q4 \u8fd9\u9898\u4e5f\u6709\u70b9\u610f\u601d\uff0c\u6211\u60f3\u5230\u7684\u9012\u5f52\u7684\u601d\u8def\u5c31\u662f\uff0c\u628a\u5927\u7684\u6811\u5206\u6210\u4e24\u4e2a\u5c0f\u7684\uff0c</p> <p>\u7136\u540e\u4e00\u5f00\u59cb\u662f\u628a\u4e24\u4e2a\u5c0f\u7684\u52a0\u8d77\u6765\uff0c\u7136\u540e\u9519\u4e86\uff0c\u634b\u4e86\u4e00\u4e0b\uff0c\u53d1\u73b0\u5e94\u8be5\u662f\u628a\u4e24\u4e2a\u5c0f\u7684 \u7ed3\u679c/\u53ef\u80fd \u76f8\u4e58\uff0c\u6700\u540e\u5c31\u5bf9\u4e86</p> code <pre><code>def num_trees(n):\n    if n == 1:\n        return 1\n    return sum([num_trees(i) * num_trees(n - i) for i in range(1, n)])\n</code></pre>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part2/#3_12","title":"3","text":"<p>Q5\uff0c\u6709\u70b9\u96be\u60f3\u611f\u89c9(\u4f46\u662f\u505a\u5b8c\u4ee5\u540e\u611f\u89c9\u8fd9\u9898\u53c8\u4e0d\u662f\u5f88\u590d\u6742\ud83d\ude02)</p> <p>\u4e00\u5f00\u59cb <code>for</code> \u8bed\u53e5\u91cc <code>g</code> \u4e4b\u540e\u6ca1\u5199 <code>()</code> \uff0c\u7136\u540e\u5c31\u53d1\u751f\u4e86\u62a5\u9519\ud83d\ude05</p> <pre><code>Traceback (most recent call last):\n  File \"E:\\Courses\\cs61a\\lab\\lab09\\lab09.py\", line 121, in make_generators_generator\n    for _ in g:\nTypeError: 'function' object is not iterable\n</code></pre> <p>\u4e4b\u540e\u8fd9\u6837\u7c7b\u4f3c\u7684\u8981\u6ce8\u610f</p> code <pre><code>def make_generators_generator(g):\n    def gen(i):\n        for e in g():\n            if i == 0:\n                break\n            yield e\n            i -= 1\n    count = 0\n    for _ in g():\n        count += 1\n        yield gen(count)\n</code></pre>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part2/#4_7","title":"4","text":"<p>Q12\uff0c\u611f\u89c9\u8fd9\u9898\u86ee\u6709\u610f\u601d\uff0c\u5b9a\u4e49\u4e86\u67d0\u79cd\u6a21\u677f(\u53ef\u4ee5\u4ece doctest \u4e2d\u770b\u51fa\u6765)\uff0c\u611f\u89c9\u4e4b\u540e\u8bf4\u4e0d\u5b9a\u80fd\u53c2\u8003</p> <pre><code>def make_to_string(front, mid, back, empty_repr):\n    \"\"\" Returns a function that turns linked lists to strings.\n\n    &gt;&gt;&gt; kevins_to_string = make_to_string(\"[\", \"|-]--&gt;\", \"\", \"[]\")\n    &gt;&gt;&gt; jerrys_to_string = make_to_string(\"(\", \" . \", \")\", \"()\")\n    &gt;&gt;&gt; lst = Link(1, Link(2, Link(3, Link(4))))\n    &gt;&gt;&gt; kevins_to_string(lst)\n    '[1|-]--&gt;[2|-]--&gt;[3|-]--&gt;[4|-]--&gt;[]'\n    &gt;&gt;&gt; kevins_to_string(Link.empty)\n    '[]'\n    &gt;&gt;&gt; jerrys_to_string(lst)\n    '(1 . (2 . (3 . (4 . ()))))'\n    &gt;&gt;&gt; jerrys_to_string(Link.empty)\n    '()'\n    \"\"\"\n    def printer(lnk):\n        if ______________:\n            return _________________________\n        else:\n            return _________________________\n    return printer\n</code></pre> code <pre><code>def make_to_string(front, mid, back, empty_repr):\n    def printer(lnk):\n        if lnk is Link.empty:\n            return empty_repr\n        else:\n            return front + str(lnk.first) + mid + printer(lnk.rest) + back\n    return printer\n</code></pre>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part2/#5_5","title":"5","text":"<p>Q13\uff0c\u7ed9\u7684\u4ee3\u7801\u6846\u67b6\u611f\u89c9\u503c\u5f97\u5b66\u4e60\uff0c\u800c\u4e14\u4e00\u5f00\u59cb\u8fd8\u6ca1\u60f3\u660e\u767d\u8981\u600e\u4e48\u7f16\u5199\ud83d\ude02</p> <pre><code>def prune_small(t, n):\n    while ___________________________:\n        largest = max(_______________, key=____________________)\n        _________________________\n    for __ in _____________:\n        ___________________\n</code></pre> code <pre><code>def prune_small(t, n):\n    while len(t.branches) &gt; n:\n        largest = max([b for b in t.branches], key=lambda t: t.label)\n        t.branches.remove(largest)\n    for b in t.branches:\n        prune_small(b, n)\n</code></pre>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part2/#lecture-25-users","title":"Lecture 25 Users","text":""},{"location":"Notes%20of%20Courses/CS61A/CS61A_part2/#1_18","title":"1","text":"<p>Quote</p> <p>Alan Kay:</p> <p>...We realized that was an incredibly important principle for user interface design. Why spend two weeks trying to read an MS-DOS manual to see how to copy a file or open up an application? What do you get from it? Much better to find a way of designing the user interface so that the person who uses it acts like an intermediate from the first time they sit down, and then they get into a process that is rewarding in itself.</p> <p>Alan Kay:</p> <p>...\u6211\u4eec\u610f\u8bc6\u5230\u8fd9\u662f\u754c\u9762\u8bbe\u8ba1\u4e2d\u975e\u5e38\u91cd\u8981\u7684\u539f\u5219\u3002\u4e3a\u4ec0\u4e48\u8981\u82b1\u4e24\u5468\u7684\u65f6\u95f4\u9605\u8bfbMS-DOS\u624b\u518c\uff0c\u770b\u5982\u4f55\u590d\u5236\u6587\u4ef6\u6216\u6253\u5f00\u5e94\u7528\u7a0b\u5e8f\u5462\uff1f\u4ece\u4e2d\u5f97\u5230\u4e86\u4ec0\u4e48\uff1f\u66f4\u597d\u7684\u65b9\u6cd5\u662f\u8bbe\u8ba1\u7528\u6237\u754c\u9762\uff0c\u4f7f\u4f7f\u7528\u8005\u4ece\u7b2c\u4e00\u6b21\u5750\u4e0b\u6765\u5c31\u50cf\u4e00\u4e2a\u4e2d\u95f4\u4eba\uff0c\u7136\u540e\u4ed6\u4eec\u8fdb\u5165\u4e00\u4e2a\u672c\u8eab\u5c31\u662f\u6709\u76ca\u7684\u8fc7\u7a0b\u3002</p> <p>Alan Kay \u501f\u52a9\u4e00\u4e2a\u5b9e\u9a8c\uff0c</p> <p>\u8ba9\u4e00\u4e2a40\u591a\u5c81\u7684\u5927\u5988\uff0c\u901a\u8fc7\u7b80\u5355\u7684\u8bad\u7ec3\uff0c\u77ed\u65f6\u95f4\u5185\u4e0a\u624b\u7f51\u7403\u7684\u5b9e\u9a8c\uff0c</p> <p>\u5b9e\u9a8c\u8005\u901a\u8fc7\u6559\u4f1a\u8fd9\u4e2a\u5927\u5988\u7f51\u7403\u5bf9\u6253\u548c\u53d1\u7403\u7684\u4e00\u4e9b\u8bc0\u7a8d\uff0c\u800c\u4e0d\u662f\u7cfb\u7edf\u5b66\u4e60\uff0c\u6765\u8ba9\u5979\u5feb\u901f\u4e0a\u624b\u7f51\u7403</p> <p>\u63d0\u5230\u4e86\u7528\u6237\u754c\u9762\u8bbe\u8ba1\u7684\u4e00\u4e2a\u91cd\u8981\u7684\u7406\u5ff5\uff0c\u7528\u6237\u754c\u9762\u5e94\u8be5\u8981\u8bbe\u8ba1\u5f97\u80fd\u8ba9\u7528\u6237\u5feb\u901f\u5b66\u4f1a\u5e76\u4e0a\u624b(\u800c\u4e0d\u662f\u9700\u8981\u82b1\u5927\u91cf\u7684\u65f6\u95f4\u53bb\u67e5\u9605\u8bf4\u660e\u4e66\u6765\u5b66\u4e60)\uff0c\u4f7f\u7528\u6237\u611f\u89c9\u81ea\u5df1\u50cf\u4e00\u4e2a \u4e2d\u7b49\u6c34\u5e73\u7684\u5b66\u751f intermediate \uff0c\u4e8e\u662f\u4e4b\u540e\u7684\u5b66\u4e60\u5c31\u80fd\u5f97\u5230\u79ef\u6781\u7684\u53cd\u9988(\u6240\u4ee5\u5c31\u4f1a\u6709\u5174\u8da3\u53bb\u5b66\u4e60)</p>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part2/#lecture-25-qa","title":"Lecture 25 Q&amp;A","text":""},{"location":"Notes%20of%20Courses/CS61A/CS61A_part2/#1_19","title":"1","text":"<p>\u63d0\u5230\u768420\u6625(\u7b2c\u4e8c\u6b21\u671f\u4e2d\u8003\u8bd5)\u7684\u4e00\u9898</p> <p></p> <p>Quote</p> <pre><code>\"\"\"This question involves plucking the leaves off a tree one by one.\n\nDefinitions:\n\n1) A \"number tree\" is a Tree whose labels are _unique_ positive integers.\n   No repeated labels appear in a number tree.\n\n2) A \"plucking order\" for a number tree t is a sequence of unique positive\n   integers that are all labels of t.\n\n3) A plucking order is \"valid\" if both of these conditions are true:\n   (a) the plucking order contains all labels of t, and\n   (b) in the plucking order contains all labels of t, and\n       the labels of all its descendant nodes. Thus, leaves appear first.\n\nNote: redwood, pine, and cyprus are all kinds of trees.\n\"\"\"\n\n\"\"\"A: (3 pts) Implement order, which takes a number tree called rewood. It returns\na valid plucking order as a list of numbers. If there is more than one valid\nplucking order for redwood, your order function can return any one of them.\n\nIMPORTANT: You do not need to return EVERY valid plucking order; just one.\n\nCheck the doctests with: python3 ok -q a\n\"\"\"\ndef order(redwood):\n    \"\"\"Return a list containing a valid plucking order for the labels of t.\n\n    &gt;&gt;&gt; order(Tree(1, [Tree(2, [Tree(3, [Tree(4)])])]))               # The only valid plucking order.\n    [4, 3, 2, 1]\n    &gt;&gt;&gt; order(Tree(1, [Tree(2), Tree(3)])) in [[2, 3, 1], [3, 2, 1]]  # Therre are 2 valid orders.\n    True\n    &gt;&gt;&gt; o = order(Tree(1, [Tree(2, [Tree(3)]), Tree(4, [Tree(5)])]))  # There are many valid orders,\n    &gt;&gt;&gt; o.index(5) &lt; o.index(4)                                       # but all have 5 before 4,\n    True\n    &gt;&gt;&gt; o.index(3) &lt; o.index(2)                                       # and 3 before 2,\n    True\n    &gt;&gt;&gt; o[4:]                                                         # and 1 at the end.\n    [1]\n\n    &gt;&gt;&gt; order(Tree(7, [Tree(4, [Tree(6)]), Tree(5)])) in [[6, 5, 4, 7], [5, 6, 4, 7], [6, 4, 5, 7]]\n    True\n    \"\"\"\n    plucking_order = []\n    for b in ______:\n        ______\n    return plucking_order + [redwood.label]\n\n\n\"\"\"B: (5 pts) Implement pluck, which takes a number tree called pine and returns\na function that is called repeatedly on the elements of a plucking order. If that\nplucking order is valid, the final call returns 'success!'. Otherwise, if one of\nthe repeated calls is on a number that is not part of a valid plucking order, the\nerror string 'Hey, not valid!' is returned.\n\nSince pine is a number tree and the values passed to plucker form a plucking\norder, you can assume that:\n- The labels of pine are unique,\n- All values k passed to the plucker function are unique for a given pine, and\n- All values k are labels of pine.\n\nCheck the doctests with: python3 ok -q b\n\"\"\"\ndef pluck(pine):\n    \"\"\"Return a function that returns whether a plucking order is valid\n    for a number tree t when called repeatedly on elements of a plucking order.\n\n    Calling the function returned by pluck should not mutate pine.\n\n           +---+\n           | 1 |\n           +---+\n           /   \\----          /                 +---+         +---+\n       | 2 |         | 6 |\n       +---+         +---+\n         |            /          |           /          +---+      +---+ +---+\n       | 3 |      | 7 | | 8 |\n       +---+      +---+ +---+\n        / \\               |\n       /   \\              |\n    +---+ +---+         +---+\n    | 4 | | 5 |         | 9 |\n    +---+ +---+         +---+\n\n    &gt;&gt;&gt; b0 = Tree(2, [Tree(3, [Tree(4), Tree(5)])])\n    &gt;&gt;&gt; b1 = Tree(6, [Tree(7), Tree(8, [Tree(9)])])\n    &gt;&gt;&gt; t = Tree(1, [b0, b1])\n    &gt;&gt;&gt; pluck(t)(9)(8)(7)(6)(5)(4)(3)(2)(1)\n    'success!'\n    &gt;&gt;&gt; pluck(t)(5)(9)(4)(7)(3)(8)(6)(2)(1)\n    'success!'\n    &gt;&gt;&gt; pluck(t)(2)\n    'Hey, not valid!'\n    &gt;&gt;&gt; pluck(t)(5)(9)(7)(6)\n    'Hey, not valid!'\n\n    &gt;&gt;&gt; pluck(b0)(5)(2)\n    'Hey, not valid!'\n    &gt;&gt;&gt; pluck(b0)(4)(5)(3)(2)\n    'success!'\n    \"\"\"\n    def plucker(k):\n        def pluck_one_leaf(cyprus):\n            \"\"\"Return a copy of cyprus without leaf k and check that k is a\n            leaf label, not an interior node label.\n            \"\"\"\n            if ______:\n                ______\n            plucked_branches = []\n            for b in cyprus.branches:\n                skip_this_leaf = ______ and ______\n                if not skip_this_leaf:\n                    plucked_branch_or_error = pluck_one_leaf(b)\n                    if isinstance(plucked_branch_or_error, str):\n                        return plucked_branch_or_error\n                    else:\n                        ______\n            return Tree(______, plucked_branches)\n        nonlocal pine\n        if pine.is_leaf():\n            assert k == pine.label, 'all k must appear in pine'\n            return 'success!'\n        ______\n        if isinstance(pine, str):\n            return pine\n        return plucker\n    return plucker\n</code></pre> <p>\u9700\u8981\u7528\u5230\u7684 \u6811 Tree \u7c7b</p> <pre><code>class Tree:\n    def __init__(self, label, branches=[]):\n        self.label = label\n        for branch in branches:\n            assert isinstance(branch, Tree)\n        self.branches = list(branches)\n        \n    def is_leaf(self):\n        return not self.branches\n</code></pre> <p>\u4e8e\u662f\u5c1d\u8bd5\u5199\u4e86\u4e00\u4e0b\uff0c</p> <p>a\u9898\u5341\u5206\u5730\u7b80\u5355</p> <pre><code>def order(redwood):\n        plucking_order = []\n    for b in redwood.branches:\n        plucking_order += order(b)\n    return plucking_order + [redwood.label]\n</code></pre> <p>b\u9898\u6709\u70b9\u96be\u5ea6\uff0c\u4f46\u662f\u7167\u7740\u6846\u67b6\u53bb\u5206\u6790\u601d\u8003\uff0c\u6700\u7ec8\u4e5f\u4e0d\u96be\u505a\u51fa\u6765</p> <pre><code>def pluck(pine):\n    def plucker(k):\n        def pluck_one_leaf(cyprus):\n            \"\"\"Return a copy of cyprus without leaf k and check that k is a\n            leaf label, not an interior node label.\n            \"\"\"\n            if k == cyprus.label and not cyprus.is_leaf():\n                return \"Hey, not valid!\"\n            plucked_branches = []\n            for b in cyprus.branches:\n                skip_this_leaf = b.is_leaf() and b.label == k\n                if not skip_this_leaf:\n                    plucked_branch_or_error = pluck_one_leaf(b)\n                    if isinstance(plucked_branch_or_error, str):\n                        return plucked_branch_or_error\n                    else:\n                        plucked_branches += [plucked_branch_or_error]\n            return Tree(cyprus.label, plucked_branches)\n        nonlocal pine\n        if pine.is_leaf():\n            assert k == pine.label, 'all k must appear in pine'\n            return 'success!'\n        pine = pluck_one_leaf(pine)\n        if isinstance(pine, str):\n            return pine\n        return plucker\n    return plucker\n</code></pre>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part2/#2_16","title":"2","text":"<p>\u63d0\u5230\u4e8618\u79cb\u7b2c\u4e8c\u6b21\u671f\u4e2d\u8003\u8bd5\u7684\u4e00\u9898</p> <p></p> <p>Quote</p> <p>Trictionary or Treat</p> <p>Definition. A trictionary is a pair of <code>Tree</code> instances <code>k</code> and <code>v</code> that have identical structure: each node in <code>k</code> has a corresponding node in <code>v</code> . The labels in <code>k</code> are called keys. Each key may be the label for multiple nodes in <code>k</code> , and the values for that key are the labels of all the corresponding nodes in <code>v</code> .</p> <p>A lookup function returns one of the values for a key. Specifically, a lookup function for a node in <code>k</code> is a function that takes <code>v</code> as an argument and returns the label for the corresponding node in <code>v</code> .</p> <p>Implement the generator function <code>lookups</code> , which takes a <code>Tree</code> instance <code>k</code> and some <code>key</code> . It yields all lookup functions for nodes in <code>k</code> that have <code>key</code> as their label. The <code>new_lookup</code> function is part of the implementation.</p> <ul> <li> <p><code>k</code> :</p> <pre><code>        5\n      / | \\\n    7   8   5\n  /   / |  / \\\n2    3  4  4  2 \n</code></pre> </li> <li> <p><code>v</code> :</p> <pre><code>        'Go'\n       / | \\\n    'C' 'A' 'L'\n   /   / |  / \\\n'C'  'S' 6  1 'A' \n</code></pre> </li> </ul> key values 2 'C', 'A' 3 'S' 4 6, 1 5 'Go', 'L' 7 'C' 8 'A' <pre><code>k = Tree(5, [Tree(7, [Tree(2)]), Tree(8, [Tree(3), Tree(4)]), Tree(5, [Tree(4), Tree(2)])])\nv = Tree('Go', [Tree('C', [Tree('C')]), Tree('A', [Tree('S'), Tree(6)]), Tree('L', [Tree(1), Tree('A')])])\n\ndef lookups(k, key):\n    \"\"\"Yield one lookup function for each node of k that has the label key.\n\n    &gt;&gt;&gt; [f(v) for f in lookups(k, 2)]\n    ['c', 'A']\n    &gt;&gt;&gt; [f(v) for f in lookups(k, 3)]\n    ['S']\n    &gt;&gt;&gt; [f(v) for f in lookups(k, 6)]\n    []\n    \"\"\"\n    if ______:\n        yield lambda v: ______\n    for i in range(len(k.branches)):\n        ______:\n            yield new_lookup(i, lookup)\n\ndef new_lookup(i, f):\n    def g(v):\n        return ______\n    return g\n</code></pre> <p>\u8fd9\u9898\u6709\u70b9\u96be\u5ea6\uff0c\u9996\u5148\u4f7f\u7406\u89e3\u9898\u76ee\u7684\u610f\u601d\uff0c<code>lookups</code> \u662f\u9700\u8981\u751f\u6210\u80fd\u8fd4\u56de\u5728(\u8f93\u5165\u7684) \u6811 <code>v</code> \u4e2d\u5bf9\u5e94\u4f4d\u7f6e\u7684\u503c\u7684\u51fd\u6570\u3002</p> <p>\u9898\u76ee\u7ed9\u7684\u6846\u67b6\u4e5f\u4e0d\u662f\u5f88\u5bb9\u6613\u770b\u61c2\uff0c\u6211\u5148\u662f\u770b\u5230 <code>yield new_lookup(i, lookup)</code> \u8fd9\u884c(\u770b\u5230 <code>lookup</code> )\uff0c\u6240\u4ee5\u731c\u4e0a\u9762\u4e00\u884c\u662f</p> <pre><code>for lookup in lookups(k.branches[i], key):\n</code></pre> <p>\u8fd9\u4e00\u884c\u5e94\u8be5\u662f\u7528\u6765\u9012\u5f52\uff0c\u6240\u4ee5\u8fdb\u800c\u5c31\u5f88\u5bb9\u6613\u60f3\u5230\u4e0a\u9762\u7684 <code>if</code> \u8bed\u53e5\u662f base case \u5373\u8d70\u5230\u4e86\u53f6\u5b50\u8282\u70b9\uff0c\u4e8e\u662f\uff0c\u5728\u6700\u7b80\u5355\u7684\u60c5\u51b5\u4e0b\uff0c\u5c31\u76f4\u63a5\u5224\u65ad \u6811 <code>k</code> \u7684\u503c\u548c <code>key</code> \u662f\u5426\u76f8\u7b49\u5c31\u884c\u4e86\uff0c\u6240\u4ee5</p> <pre><code>if k.is_leaf() and k.label == key:\n    return lambda v: v.label\n</code></pre> <p>\u6700\u540e\u662f <code>new_lookup</code> \u7684\u90e8\u5206(\u60f3\u4e86\u4e00\u4f1a\u624d\u60f3\u51fa\u6765)\uff0c\u770b\u5230 <code>i</code> \u6240\u4ee5\u60f3\u5230 <code>i</code> \u662f\u7528\u6765\u4f20\u9012\u8def\u5f84\u76f8\u5173\u7684\u4fe1\u606f\u7684(\u91cd\u70b9\u662f\u9700\u8981\u7406\u89e3\u4f20\u5165\u7684 <code>lookup</code> \uff0c\u662f\u5b50\u6811\u7684\u67e5\u627e\u51fd\u6570\uff0c\u6240\u4ee5 <code>new_lookup</code> \u4e2d\u9700\u8981\u7684\u4e5f\u662f\u4f20\u5165\u5bf9\u5e94 <code>v</code> \u7684\u5b50\u6811)\uff0c\u56e0\u6b64</p> <pre><code>return f(v.branches[i])\n</code></pre> <p>\u5b8c\u6574\u4ee3\u7801</p> <pre><code>def lookups(k, key):\n    if k.is_leaf() and k.label == key:\n        yield lambda v: v.label\n    for i in range(len(k.branches)):\n        for lookup in lookups(k.branches[i], key):\n            yield new_lookup(i, lookup)\n        \ndef new_lookup(i, f):\n    def g(v):\n        return f(v.branches[i])\n    return g\n</code></pre> <p>\u770b\u4e86John\u7684\u8bb2\u89e3\uff0c\u53d1\u73b0 <code>if</code> \u90a3\u4e00\u884c\u6b63\u786e\u7b54\u6848\u5e94\u8be5\u6ca1\u6709 <code>k.is_leaf()</code> \uff0c\u4e0a\u9762\u7684\u4ee3\u7801\u80fd\u901a\u8fc7\u53ea\u662f\u56e0\u4e3a\u521a\u597d\u6d4b\u8bd5\u7684\u503c\u90fd\u5728\u53f6\u5b50\u8282\u70b9\uff0c\u6240\u4ee5\u6b63\u786e\u7684\u4ee3\u7801\u5e94\u8be5\u662f</p> <pre><code>def lookups(k, key):\n    if k.label == key:\n        yield lambda v: v.label\n    for i in range(len(k.branches)):\n        for lookup in lookups(k.branches[i], key):\n            yield new_lookup(i, lookup)\n\ndef new_lookup(i, f):\n    def g(v):\n        return f(v.branches[i])\n    return g\n</code></pre> <p></p>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part2/#lecture-26-ethical-ai-data","title":"Lecture 26 Ethical AI &amp; Data","text":""},{"location":"Notes%20of%20Courses/CS61A/CS61A_part2/#1_20","title":"1","text":"<p>Hany \u5728\u4ecb\u7ecd \u76d1\u7763\u5b66\u4e60 supervised learning \u65f6\uff0c\u63d0\u5230\u4e86\u7ebf\u6027\u5904\u7406\u4e8c\u7ef4\u6570\u636e\u4e00\u79cd\u65b9\u6cd5\uff0c\u901a\u8fc7\u627e\u5230\u4e00\u4e2a\u6295\u5f71\u9762(\u7ebf)\uff0c\u4f7f\u5f97\u5728\u6295\u5f71\u9762\u4e0a\uff0c\u540c\u7c7b\u4e4b\u95f4\u8ddd\u79bb\u5c3d\u53ef\u80fd\u5c0f\uff0c\u800c\u5f02\u7c7b\u4e4b\u95f4\u7684\u8ddd\u79bb\u5c3d\u53ef\u80fd\u5927\uff0c\u4e8e\u662f\u901a\u8fc7\u5176\u6cd5\u7ebf\u5c31\u53ef\u4ee5\u83b7\u5f97\u5206\u5272\u7ebf</p>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part2/#2_17","title":"2","text":"<p>Hany\u5728\u8fd9\u8282\u8bfe\u7684\u6700\u540e\u5173\u4e8eAI\u7684\u4f7f\u7528\u7684\u770b\u6cd5\uff0c\u6211\u8ba4\u4e3a\u8bf4\u7684\u5f88\u597d</p> <p>Quote</p> <p>Hany:</p> <p>...We just seem to be stuck at around 65% (accuracy).</p> <p>Okay, I posit I cannot prove, but I posit: I think that this is a fundamentally hard problem, and I am unconvinced that you can actually do better than this. Because think about what you're asking the algorithm to do. You're asking it to predict the future from a relatively small amount of data, and the future, two years in advance, of a fairly complex set of social, economic, personal, and just what is random dumb luck going to happen in somebody's life. And I don't think that's a stretch of imagination to say that this is really hard.</p> <p>So here's a question for you: should we even be doing this? Should we actually be trying to predict whether somebody's going to commit a crime in the future and then incarcerate them if we think that they are, if the accuracy is 65%? What if the accuracy is 75%? What if it's 85%? What if it's you? What if it's somebody you love? Do you want this algorithm being applied to somebody with this kind of error rate? What's an acceptable error rate? Are these things really better than humans? How do you deal with the bias? Nobody has good answers to these things.</p> <p>So here's a question. Now I come back to the title. right? Just because you can do something doesn't mean you should. And as you enter into what is undoubtedly an incredibly exciting time for us in terms of computation and AI and data, and the impact that we can have on the world, we have to start thinking about what are the negative aspects of what we are doing. Should we be trying to make these decisions? And if we do, the answer may be yes, but then are they accurate? Are they fair? Do they disproportionately affect women, people of color, LGBTQ community, people who are not born in this country, people who aren't native speakers, whatever it is? We have to think about the consequences of that.</p> <p>We have spent the last 20 years with the mantra of \"move fast and break things,\" and while lots of good things have come from that, some really bad things have come from this. Bias in algorithms for hiring, bias in algorithms in healthcare, bias in algorithms in the financial sectors, bias in algorithms in the criminal justice system, bias in facial recognition. We've got to tread lightly here. And what that means is you can't come at this after the fact. You can't develop, deploy, and then debug on the fly. This isn't a word processing software. If you have a bug, somebody loses a document. This is the real world where you make a mistake and somebody sits in jail, or somebody doesn't get a home loan, or somebody doesn't get a small business loan, or somebody doesn't get a job or go to the university. We are impacting real people's lives with our algorithms and our data, and if we don't understand these things, we have the potential to do way more harm than we do good.</p> <p>And so the free-for-all of the last two decades, in my opinion, should be over. And I want to emphasize that I am not anti-technology. I'm not saying don't do things. I'm not saying don't innovate. But I'm saying think, think carefully about the consequences of what you are doing and make sure that there is transparency, there is fairness, and there is accuracy in how these technologies are being used. And more generally, making sure that you understand how your technologies can be misused as well because almost all technologies have benefits and drawbacks, and we have to start thinking about those things up front and simply try to mitigate the harm while harnessing the phenomenal power of technology and AI and data.</p> <p>All right, I'm done. I hope you enjoyed this and I hope you learned something from it. We'll see you soon.</p> <p>Hany:</p> <p>...\u6211\u4eec\u4f3c\u4e4e\u5361\u5728\u4e8665%\u5de6\u53f3\uff08\u51c6\u786e\u7387\uff09\u3002</p> <p>\u597d\u7684\uff0c\u6211\u5047\u8bbe\u6211\u4e0d\u80fd\u8bc1\u660e\uff0c\u4f46\u6211\u5047\u8bbe\uff1a\u6211\u8ba4\u4e3a\u8fd9\u662f\u4e00\u4e2a\u57fa\u672c\u4e0a\u7684\u96be\u9898\uff0c\u6211\u4e0d\u76f8\u4fe1\u4f60\u80fd\u505a\u5f97\u6bd4\u8fd9\u66f4\u597d\u3002\u56e0\u4e3a\u60f3\u60f3\u4f60\u8981\u7b97\u6cd5\u505a\u4ec0\u4e48\u3002\u4f60\u8ba9\u5b83\u4ece\u76f8\u5bf9\u8f83\u5c11\u7684\u6570\u636e\u4e2d\u9884\u6d4b\u672a\u6765\uff0c\u672a\u6765\u662f\u4e24\u5e74\u540e\uff0c\u6d89\u53ca\u5230\u4e00\u7ec4\u76f8\u5f53\u590d\u6742\u7684\u793e\u4f1a\u3001\u7ecf\u6d4e\u3001\u4e2a\u4eba\u56e0\u7d20\uff0c\u8fd8\u6709\u5728\u67d0\u4eba\u751f\u6d3b\u4e2d\u4f1a\u53d1\u751f\u7684\u968f\u673a\u8fd0\u6c14\u3002\u6211\u8ba4\u4e3a\u8fd9\u5e76\u4e0d\u662f\u4e00\u79cd\u5938\u5f20\uff0c\u8bf4\u8fd9\u771f\u7684\u5f88\u96be\u3002</p> <p>\u90a3\u4e48\u8fd9\u91cc\u6709\u4e00\u4e2a\u95ee\u9898\u7ed9\u4f60\uff1a\u6211\u4eec\u751a\u81f3\u5e94\u8be5\u8fd9\u6837\u505a\u5417\uff1f\u6211\u4eec\u771f\u7684\u5e94\u8be5\u5c1d\u8bd5\u9884\u6d4b\u67d0\u4eba\u5c06\u6765\u662f\u5426\u4f1a\u72af\u7f6a\uff0c\u7136\u540e\u5982\u679c\u6211\u4eec\u8ba4\u4e3a\u4ed6\u4eec\u4f1a\u72af\u7f6a\u5c31\u76d1\u7981\u4ed6\u4eec\uff0c\u5373\u4f7f\u51c6\u786e\u7387\u662f65%\u5417\uff1f\u5982\u679c\u51c6\u786e\u7387\u662f75%\u600e\u4e48\u529e\uff1f\u5982\u679c\u662f85%\u5462\uff1f\u5982\u679c\u662f\u4f60\u5462\uff1f\u5982\u679c\u662f\u4f60\u7231\u7684\u4eba\u5462\uff1f\u4f60\u5e0c\u671b\u8fd9\u79cd\u7b97\u6cd5\u5e94\u7528\u4e8e\u6709\u8fd9\u79cd\u9519\u8bef\u7387\u7684\u4eba\u5417\uff1f\u4ec0\u4e48\u662f\u53ef\u4ee5\u63a5\u53d7\u7684\u9519\u8bef\u7387\uff1f\u8fd9\u4e9b\u4e1c\u897f\u771f\u7684\u6bd4\u4eba\u7c7b\u66f4\u597d\u5417\uff1f\u5982\u4f55\u5904\u7406\u504f\u89c1\uff1f\u6ca1\u6709\u4eba\u5bf9\u8fd9\u4e9b\u95ee\u9898\u6709\u597d\u7684\u7b54\u6848\u3002</p> <p>\u6240\u4ee5\u8fd9\u91cc\u6709\u4e00\u4e2a\u95ee\u9898\u3002\u73b0\u5728\u6211\u56de\u5230\u6807\u9898\uff0c\u5bf9\u5427\uff1f\u4ec5\u4ec5\u56e0\u4e3a\u4f60\u80fd\u505a\u67d0\u4e8b\u5e76\u4e0d\u610f\u5473\u7740\u4f60\u5e94\u8be5\u8fd9\u6837\u505a\u3002\u5f53\u4f60\u8fdb\u5165\u8ba1\u7b97\u3001\u4eba\u5de5\u667a\u80fd\u548c\u6570\u636e\u65b9\u9762\u65e0\u7591\u662f\u4e00\u4e2a\u975e\u5e38\u6fc0\u52a8\u4eba\u5fc3\u7684\u65f6\u523b\uff0c\u4ee5\u53ca\u6211\u4eec\u53ef\u4ee5\u5bf9\u4e16\u754c\u4ea7\u751f\u7684\u5f71\u54cd\u65f6\uff0c\u6211\u4eec\u5fc5\u987b\u5f00\u59cb\u601d\u8003\u6211\u4eec\u6b63\u5728\u505a\u7684\u4e8b\u60c5\u7684\u8d1f\u9762\u65b9\u9762\u3002\u6211\u4eec\u5e94\u8be5\u5c1d\u8bd5\u505a\u8fd9\u4e9b\u51b3\u5b9a\u5417\uff1f\u5982\u679c\u662f\uff0c\u7b54\u6848\u53ef\u80fd\u662f\u80af\u5b9a\u7684\uff0c\u4f46\u5b83\u4eec\u662f\u5426\u51c6\u786e\uff1f\u662f\u5426\u516c\u5e73\uff1f\u5b83\u4eec\u662f\u5426\u5bf9\u5973\u6027\u3001\u6709\u8272\u4eba\u79cd\u3001LGBTQ\u793e\u533a\u3001\u4e0d\u5728\u8fd9\u4e2a\u56fd\u5bb6\u51fa\u751f\u7684\u4eba\u3001\u4e0d\u662f\u672c\u571f\u8bf4\u8bdd\u8005\u7684\u4eba\u7b49\u4ea7\u751f\u4e0d\u6210\u6bd4\u4f8b\u7684\u5f71\u54cd\uff1f\u6211\u4eec\u5fc5\u987b\u8003\u8651\u8fd9\u4e9b\u540e\u679c\u3002</p> <p>\u5728\u8fc7\u53bb\u768420\u5e74\u91cc\uff0c\u6211\u4eec\u4e00\u76f4\u5949\u884c\u201c\u8fc5\u901f\u884c\u52a8\u5e76\u6253\u7834\u4e00\u5207\u201d\u7684\u53e3\u53f7\uff0c\u867d\u7136\u4ece\u4e2d\u83b7\u5f97\u4e86\u5f88\u591a\u597d\u5904\uff0c\u4f46\u4e5f\u4ece\u4e2d\u4ea7\u751f\u4e86\u4e00\u4e9b\u975e\u5e38\u7cdf\u7cd5\u7684\u4e8b\u60c5\u3002\u5728\u62db\u8058\u7b97\u6cd5\u4e2d\u5b58\u5728\u7684\u504f\u89c1\uff0c\u5728\u533b\u7597\u4fdd\u5065\u9886\u57df\u7684\u7b97\u6cd5\u4e2d\u5b58\u5728\u7684\u504f\u89c1\uff0c\u5728\u91d1\u878d\u9886\u57df\u7684\u7b97\u6cd5\u4e2d\u5b58\u5728\u7684\u504f\u89c1\uff0c\u5728\u5211\u4e8b\u53f8\u6cd5\u7cfb\u7edf\u7684\u7b97\u6cd5\u4e2d\u5b58\u5728\u7684\u504f\u89c1\uff0c\u5728\u9762\u90e8\u8bc6\u522b\u4e2d\u5b58\u5728\u7684\u504f\u89c1\u3002\u6211\u4eec\u5fc5\u987b\u5c0f\u5fc3\u884c\u4e8b\u3002\u8fd9\u610f\u5473\u7740\u4f60\u4e0d\u80fd\u5728\u4e8b\u540e\u5c31\u8fd9\u4e48\u505a\u3002\u4f60\u4e0d\u80fd\u5f00\u53d1\u3001\u90e8\u7f72\uff0c\u7136\u540e\u5728\u98de\u884c\u4e2d\u8c03\u8bd5\u3002\u8fd9\u4e0d\u662f\u6587\u5b57\u5904\u7406\u8f6f\u4ef6\u3002\u5982\u679c\u6709\u4e00\u4e2a\u9519\u8bef\uff0c\u67d0\u4eba\u5c31\u4f1a\u4e22\u5931\u4e00\u4efd\u6587\u4ef6\u3002\u8fd9\u662f\u771f\u5b9e\u7684\u4e16\u754c\uff0c\u4f60\u72af\u4e86\u4e00\u4e2a\u9519\u8bef\uff0c\u6709\u4eba\u5750\u5728\u76d1\u72f1\u91cc\uff0c\u6216\u8005\u6709\u4eba\u6ca1\u6709\u83b7\u5f97\u623f\u5c4b\u8d37\u6b3e\uff0c\u6216\u8005\u6709\u4eba\u6ca1\u6709\u83b7\u5f97\u5c0f\u989d\u8d37\u6b3e\uff0c\u6216\u8005\u6709\u4eba\u6ca1\u6709\u5f97\u5230\u5de5\u4f5c\u6216\u4e0a\u5927\u5b66\u3002\u6211\u4eec\u6b63\u5728\u5f71\u54cd\u771f\u5b9e\u4eba\u4eec\u7684\u751f\u6d3b\uff0c\u7528\u6211\u4eec\u7684\u7b97\u6cd5\u548c\u6570\u636e\uff0c\u5982\u679c\u6211\u4eec\u4e0d\u7406\u89e3\u8fd9\u4e9b\u4e8b\u60c5\uff0c\u6211\u4eec\u53ef\u80fd\u4f1a\u9020\u6210\u6bd4\u505a\u597d\u4e8b\u66f4\u591a\u7684\u4f24\u5bb3\u3002</p> <p>\u56e0\u6b64\uff0c\u5728\u6211\u770b\u6765\uff0c\u8fc7\u53bb20\u5e74\u7684\u653e\u4efb\u6001\u5ea6\u5e94\u8be5\u7ed3\u675f\u4e86\u3002\u6211\u60f3\u5f3a\u8c03\u7684\u662f\uff0c\u6211\u5e76\u4e0d\u662f\u53cd\u5bf9\u6280\u672f\u3002\u6211\u5e76\u4e0d\u662f\u8bf4\u4e0d\u8981\u505a\u4e8b\u60c5\u3002\u6211\u5e76\u4e0d\u662f\u8bf4\u4e0d\u8981\u521b\u65b0\u3002\u4f46\u6211\u8bf4\u7684\u662f\u8981\u8003\u8651\uff0c\u8981\u4ed4\u7ec6\u8003\u8651\u4f60\u6b63\u5728\u505a\u7684\u4e8b\u60c5\u7684\u540e\u679c\uff0c\u5e76\u786e\u4fdd\u5728\u4f7f\u7528\u8fd9\u4e9b\u6280\u672f\u7684\u65b9\u5f0f\u4e0a\u6709\u900f\u660e\u5ea6\u3001\u516c\u5e73\u6027\u548c\u51c6\u786e\u6027\u3002\u66f4\u4e00\u822c\u5730\u8bf4\uff0c\u786e\u4fdd\u4f60\u4e86\u89e3\u4f60\u7684\u6280\u672f\u5982\u4f55\u88ab\u6ee5\u7528\uff0c\u56e0\u4e3a\u51e0\u4e4e\u6240\u6709\u6280\u672f\u90fd\u6709\u5229\u5f0a\uff0c\u6211\u4eec\u5fc5\u987b\u5f00\u59cb\u4ece\u4e00\u5f00\u59cb\u5c31\u8003\u8651\u8fd9\u4e9b\u4e8b\u60c5\uff0c\u5c3d\u529b\u51cf\u8f7b\u4f24\u5bb3\uff0c\u540c\u65f6\u5229\u7528\u6280\u672f\u548c\u4eba\u5de5\u667a\u80fd\u548c\u6570\u636e\u7684\u5de8\u5927\u529b\u91cf\u3002</p> <p>\u597d\u4e86\uff0c\u6211\u8bf4\u5b8c\u4e86\u3002\u5e0c\u671b\u4f60\u559c\u6b22\u8fd9\u4e2a\uff0c\u5e0c\u671b\u4f60\u4ece\u4e2d\u5b66\u5230\u4e86\u4e00\u4e9b\u4e1c\u897f\u3002\u6211\u4eec\u5f88\u5feb\u5c31\u4f1a\u89c1\u9762\u3002</p>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part2/#lecture-27-scheme","title":"Lecture 27 Scheme","text":""},{"location":"Notes%20of%20Courses/CS61A/CS61A_part2/#1_21","title":"1","text":"<p>\u611f\u89c9 scheme \u8fd9\u4e2a\u8868\u8fbe\u5f0f\u6709\u70b9\u50cf\u9006\u6ce2\u5170\u5f0f\ud83d\ude02</p> <p></p> <p>scheme \u8bed\u8a00\u91cc\u7684\u4e00\u4e9b\u7528\u6cd5(\u770bJohn\u7684demo\u5e94\u8be5\u5c31\u53ef\u4ee5\u770b\u61c2\u4e86)</p> <p></p> <p>scheme \u4e2d\u7684\u4e00\u4e9b\u8bed\u53e5</p> <p>John \u8bf4\u5230 scheme \u4f7f\u7528\u7684 \u73af\u5883\u6a21\u578b model of environments \u548c python \u7684\u4e00\u6837</p>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part2/#2_18","title":"2","text":"<p>John \u6f14\u793ascheme\u4e2d\u7684\u5d4c\u5957\u51fd\u6570\u65f6\uff0c\u6784\u9020\u4e86\u4e00\u4e2a\u6c42\u5e73\u65b9\u6839\u7684\u9012\u5f52\u51fd\u6570\uff0c</p> <pre><code>(define (sqrt x)\n  (define (update guess)\n    (if (= (square guess) x)\n        guess\n        (update (average guess (/ x guess)))))\n  (update 1))\n</code></pre> <p>\u7ffb\u8bd1\u6210 python \u5e94\u8be5\u5927\u81f4\u662f\u8fd9\u6837</p> <pre><code>def sqrt(x):\n def update(guess):\n     if guess ^ 2 == x:\n         return guess\n     else:\n         return update((x // guess + guess) // 2)\n return update(1)\n</code></pre> <p>\u5e76\u4e14\u5176\u4e2d\u4f7f\u7528\u4e86 $$ guess = \\frac{x}{guess} + guess $$ \u7684\u8fed\u4ee3\u65b9\u6cd5\uff0c\u611f\u89c9\u5f88\u5389\u5bb3</p> <p>\u8be2\u95ee\u4e86\u540c\u5b66\u4e4b\u540e\uff0c\u53d1\u73b0\u8fd9\u5c31\u662f(\u4ee5\u524d\u5b66\u8fc7\u7684)\u5bf9\u52fe\u51fd\u6570\uff0c\u6700\u540e\u6536\u655b\u4e8e \\(\\sqrt{x}\\) \ud83d\ude02</p>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part2/#3_13","title":"3","text":"<p>scheme\u4e2d\u7684 lambda \u533f\u540d\u51fd\u6570(\u7c7b\u6bd4 python \u4e2d\u7684\u5f88\u597d\u7406\u89e3)</p>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part2/#4_8","title":"4","text":"<p>John \u6f14\u793a\u7528 scheme \u753b \u8c22\u5c14\u5bbe\u65af\u57fa\u4e09\u89d2\u5f62 Sierpinski's Triangle \uff0c</p> <p>\u7528\u9012\u5f52\u7684\u65b9\u5f0f\u753b\uff0c\u6bcf\u4e2a\u5927\u7684\u4e09\u89d2\u5f62(\u7684\u4e09\u6761\u8fb9)\u7531(\u4e09\u4e2a)\u5c0f\u7684\u4e09\u89d2\u5f62\u7ec4\u6210\uff0c\u56e0\u6b64</p> <pre><code>(define (repeat k fn)\n  (fn)\n  (if (&gt; k 1) (repeat (- k 1) fn)))\n(define (tri fn)\n  (repeat 3 (lambda () (fn) (lt 120))))\n(define (sier d k)\n  (tri (lambda () (if (= d 1) (fd k) (leg d k)))))\n(define (leg d k)\n  (sier (- d 1) (/ k 2))\n  (penup) (fd k) (pendown))\n</code></pre> <p>\u4ee3\u7801\u5927\u6982\u662f <code>sier</code> \u548c <code>leg</code> \u76f8\u4e92\u8c03\u7528\u7684\u9012\u5f52\uff0c</p> <p>\u7ffb\u8bd1\u6210 python \u5927\u81f4\u662f\u8fd9\u6837</p> <pre><code>def repeat(k, fn):\n    fn()\n    if k &gt; 1:\n        repeat(k - 1, fn)\n\ndef tri(fn):\n    repeat(3, lambda: fn() and turn_left(120))\n\ndef sier(d, k):\n    tri(lambda: (move_forward(k) if d == 1 else leg(d, k)))\n\ndef leg(d, k):\n    sier(d - 1, k // 2)\n    pen_up()\n    move_forward(k)\n    pen_down()\n</code></pre> <p>\u5176\u4e2d <code>turn_left</code> <code>move_forward</code> <code>pen_up</code> <code>pen_down</code> </p> <p>\u5206\u522b\u5bf9\u5e94 scheme \u4e2d\u7684\u5185\u7f6e\u51fd\u6570 <code>lr</code> <code>fd</code> <code>penup</code> <code>pendown</code></p>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part2/#5_6","title":"5","text":"<p><code>cond</code> \u8bed\u53e5\uff0c\u53ef\u4ee5\u7c7b\u6bd4 <code>if-elif-else</code> \u8bed\u53e5\uff0c\u800c\u4e14\uff0c\u53ef\u4ee5\u7406\u89e3\u4e3a\u8fd9\u4e2a\u8bed\u53e5\u4e5f\u53ef\u4ee5\u8fd4\u56de\u503c\uff0c\u6240\u4ee5\u53ef\u4ee5\u50cf\u56fe\u4e2d\u53f3\u4e0a\u4e00\u6837\u5199</p> <p><code>begin</code> \u8bed\u53e5\uff0c\u5c06\u591a\u4e2a\u8bed\u53e5\u5408\u6210\u4e00\u4e2a( <code>begin</code> )\u8bed\u53e5</p> <p></p> <p><code>let</code> \u53ef\u4ee5\u5728\u5176\u4e2d\u5b9a\u4e49\u4e34\u65f6\u7684\u53d8\u91cf\uff0c\u683c\u5f0f\u662f <code>(let ((a 1) (b 2) ...) (...))</code> \uff0c<code>let</code> \u540e\u7b2c\u4e00\u4e2a\u62ec\u53f7\u5185\u662f\u82e5\u5e72\u4e2a\u5b9a\u4e49\u4e34\u65f6\u53d8\u91cf\u7684 \u5bf9 part \uff0c\u7b2c\u4e8c\u4e2a\u62ec\u53f7\u662f\u8981\u6267\u884c\u7684\u8bed\u53e5\u6216\u8005\u8981\u8fd4\u56de\u7684\u503c</p>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part2/#6_3","title":"6","text":"<p>scheme \u4e2d \u94fe\u8868 list \u76f8\u5173\u5185\u5bb9</p>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part2/#7_2","title":"7","text":"<p>\u5f15\u7528 quotation (\u611f\u89c9\u4f3c\u4e4e\u7406\u89e3\u4e86 c++ \u4e2d\u7684\u5f15\u7528)\uff0c\u53ef\u4ee5\u5c06\u7b26\u53f7\u672c\u8eab\u4f20\u5165\u5230\u8868\u8fbe\u5f0f\u4e2d</p> <p>Special form to indicate that the expression itself is the value.</p> <p>\u8868\u793a\u8868\u8fbe\u5f0f\u672c\u8eab\u5c31\u662f\u503c\u7684\u7279\u6b8a\u5f62\u5f0f\u3002</p> <pre><code>scm&gt; '(+ a b)\n(+ a b)\nscm&gt; '(zero? a)\n(zero? a)\n</code></pre> <p>\u4e5f\u53ef\u4ee5\u662f\u5728\u8868\u8fbe\u5f0f\u524d\u52a0 \u5355\u5f15\u53f7 <code>'</code> \uff0c\u90a3\u4e48\u8868\u8fbe\u5f0f\u4e2d\u7684\u7b26\u53f7\u90fd\u4f1a\u4ee5\u5f15\u7528\u7684\u5f62\u5f0f\u4f7f\u7528</p> <p>John \u7684demo\u6f14\u793a</p> <pre><code>scm&gt; '(1 2)\n(1 2)\nscm&gt; '(1 a)\n(1 a)\nscm&gt; (list 1 'a)\n(1 a)\nscm&gt; (list 1 a)\nTraceback (most recent call last):\n  0     (list 1 a)\n  1     a\nError: unknown identifier: a\n</code></pre> <p>Quote</p> <p>John:</p> <p>When quoting a list, you get a list, but all the expressions within it are quoted as well.</p> <p>...I can't evaluate a until I've define it, but I can refer to a before I've defined it, because it's just a symbol. It could mean something in the future, it just hasn't been defined yet.</p> <p>John:</p> <p>\u5f15\u7528\u5217\u8868\u65f6\uff0c\u4f60\u4f1a\u5f97\u5230\u4e00\u4e2a\u5217\u8868\uff0c\u4f46\u5176\u4e2d\u7684\u6240\u6709\u8868\u8fbe\u5f0f\u4e5f\u4f1a\u88ab\u5f15\u7528\u3002</p> <p>...\u5728\u5b9a\u4e49a\u4e4b\u524d\uff0c\u6211\u65e0\u6cd5\u8bc4\u4f30\u5b83\uff0c\u4f46\u5728\u5b9a\u4e49\u4e4b\u524d\uff0c\u6211\u53ef\u4ee5\u53c2\u8003a\uff0c\u56e0\u4e3a\u5b83\u53ea\u662f\u4e00\u4e2a\u7b26\u53f7\u3002\u5b83\u53ef\u80fd\u5728\u672a\u6765\u6709\u610f\u4e49\uff0c\u53ea\u662f\u8fd8\u6ca1\u6709\u5b9a\u4e49\u3002</p>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part2/#8_1","title":"8","text":"<p>scheme \u7684\u5185\u7f6e\u51fd\u6570 <code>eval</code> \u53ef\u4ee5\u8ba1\u7b97\u5f15\u7528\u5f62\u5f0f\u7684\u8868\u8fbe\u5f0f(\u53ef\u89c1\u4e8e\u4e0a\u56fe) (\u611f\u89c9\u53ef\u4ee5\u7406\u89e3\u4e3a \u53cd\u5411\u5f15\u7528\uff0c\u6216\u8005\u8bf4 \u89e3\u5f15\u7528)</p>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part2/#9_1","title":"9","text":"<p>John \u5173\u4e8e\u7b26\u53f7\u8868\u8fbe\u5f0f\u7684\u6f14\u793a(\u770b\u8d77\u6765\u611f\u89c9\u5f88\u5389\u5bb3\ud83d\ude32)</p> <p></p> <pre><code>(define (fact n)\n  (if (= n 1) 1 (* n (fact (- n 1)))))\n\n(define (fact-exp n)\n  (if (= n 1) 1 (list '* n (fact-exp (- n 1)))))\n</code></pre> <p></p> <pre><code>(define (fib n)\n  (if (&lt;= n 1) n (+ (fib (- n 2)) (fib (- n 1)))))\n\n(define (fib-exp n)\n  (if (&lt;= n 1) n (list '+ (fib-exp (- n 2)) (fib-exp (- n 1)))))\n</code></pre>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part2/#10_1","title":"10","text":"<p>\u51c6\u5f15\u7528 quasiquotation \uff0c\u53ef\u4ee5\u88ab\u4e2d\u65ad\u7684\u5f15\u7528</p> <p>\u53cd\u5f15\u53f7 <code>`</code> \u7684\u5f15\u7528\u6548\u679c\u53ef\u4ee5\u88ab \u9017\u53f7 <code>,</code> \u4e2d\u65ad\uff0c\u5373 <code>,</code> \u540e\u7684\u62ec\u53f7\u4ee5\u53ca\u66f4\u91cc\u9762\u7684\u62ec\u53f7\u53d6\u6d88\u5f15\u7528\u6548\u679c\uff0c\u800c\u5176\u4ed6\u5730\u65b9\u8fd8\u662f\u6709\u5f15\u7528\u6548\u679c</p> <pre><code>scm&gt; `(a ,(+) b)\n(a 0 b)\nscm&gt; `(a (+) b)\n(a (+) b)\n</code></pre>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part2/#11_1","title":"11","text":"<p>John \u5173\u4e8e \u51c6\u5f15\u7528 quasiquotation \u5f15\u7528\u7684\u6f14\u793a\uff0c</p> <p>\u7528\u51c6\u5f15\u7528\u6784\u9020\u4e86\u7c7b\u4f3c\u4e8e <code>while</code> \u7684(\u67d0\u79cd\u7a0b\u5ea6\u4e0a)\u901a\u7528\u7684\u5faa\u73af\u7ed3\u6784(\u7ed9\u6211\u770b\u50bb\u4e86\ud83d\ude32)</p> <p></p> <p>\u5206\u53f7 <code>;</code> \u8868\u793a\u6ce8\u91ca</p> <p>\u6211\u7684\u7406\u89e3\u662f\uff0c\u5982\u679c <code>begin</code> \u4e2d\u7684 <code>condition</code> <code>add-to-total</code> \u7b49\u4e0d\u52a0\u9017\u53f7 <code>,</code> \u7684\u8bdd\uff0c\u8fd4\u56de\u7684\u8868\u8fbe\u5f0f\u4e2d\u4f1a\u76f4\u63a5\u5c31\u662f <code>condition</code> <code>add-to-total</code> \u7b49\u8fd9\u4e9b\u7b26\u53f7\u672c\u8eab\uff0c\u800c\u52a0\u4e86\u9017\u53f7 <code>,</code> \u4e4b\u540e\uff0c\u6700\u540e\u7684\u8868\u8fbe\u5f0f\u5c31\u4f1a\u662f \u5728\u4f7f\u7528 <code>sum-while</code> \u65f6 \u5177\u4f53\u4f20\u5165\u7684\u503c\uff0c\u56e0\u6b64\u5728\u4f7f\u7528 <code>sum-while</code> \u65f6\u5e94\u8be5\u4f20\u5165\u7684\u662f\u5f15\u7528\u5f62\u5f0f\u7684\u8868\u8fbe\u5f0f(\u5373\u5982 John \u6f14\u793a\u7684\u4e00\u6837\uff0c<code>(sum-while 1 '(&lt; (* x x) 50) 'x '(+ x 1))</code> )</p> <pre><code>(define (sum-while initial-x condition       add-to-total update-x)\n  ;     (sum-while 1         '(&lt; (* x x) 50) 'x           '(+ x 1))\n  `(begin\n     (define (f x total)\n       (if ,condition\n         (f ,update-x (+ total ,add-to-total))\n         total))\n     (f ,initial-x 0)))\n</code></pre>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part2/#lecture-27-qa","title":"Lecture 27  Q&amp;A","text":""},{"location":"Notes%20of%20Courses/CS61A/CS61A_part2/#1_22","title":"1","text":"<p>\u6709\u4eba\u5411\u63d0\u95ee\u5230 scheme \u4e2d\u7684 <code>print</code> \u7684\u8fd4\u56de\u503c\u662f\u4ec0\u4e48\uff0c\u4e8e\u662f John \u5f00\u59cb\u6f14\u793a</p> <pre><code>scm&gt; (define s (print 1))\n1\ns\nscm&gt; s\nscm&gt; print(s)\nundefined\n</code></pre> <p>John\u4e4b\u540e\u89e3\u91ca\u9053\uff0cscheme \u4e2d\u7684 <code>undefined</code> \u548c python \u4e2d\u7684 <code>None</code> \u7c7b\u4f3c\uff0c\u4f46\u4e5f\u6709\u533a\u522b\uff0c <code>None</code> \u8fd8\u4f1a\u7528\u4e8e\u4e00\u4e9b\u6bd4\u8f83\uff0c\u4f46 <code>undefined</code> \u57fa\u672c\u4e0a\u4e0d\u4f1a\u88ab\u4f7f\u7528</p> <p>Quote</p> <p>John:</p> <p>Well, we get this special value called \"undefined.\" That's it. It's kind of close to Python's \"None,\" except for here's the rule. This is more of a conventional rule than enforced by the language, but here's the rule: you're never supposed to do anything with the undefined value.</p> <p>Whereas in Python, people use \"None\" for all kinds of stuff. They compare whether something is \"None,\" etc. That basically never shows up in Scheme code. So when you get this undefined value, which happens to exist, the idea is you should never do anything with it. You should never check to see if it's equal to another undefined. You should never check to see how many undefineds there are in a list or something like that. You should just stop.</p> <p>So basically, like this expression is legal, but it's a no-no. You should never take the value of \"print\" and do something else with it.</p> <p>John:</p> <p>\u55ef\uff0c\u6211\u4eec\u6709\u8fd9\u4e2a\u7279\u6b8a\u7684\u503c\u53eb\u505a \"undefined\"\u3002\u5c31\u662f\u8fd9\u6837\uff0c\u5b83\u6709\u70b9\u7c7b\u4f3c\u4e8e Python \u7684 \"None\"\uff0c\u9664\u4e86\u8fd9\u91cc\u6709\u4e00\u4e2a\u89c4\u5219\u3002\u8fd9\u66f4\u50cf\u662f\u4e00\u79cd\u7ea6\u5b9a\u4fd7\u6210\u7684\u89c4\u5219\uff0c\u800c\u4e0d\u662f\u8bed\u8a00\u5f3a\u5236\u7684\uff0c\u4f46\u8fd9\u5c31\u662f\u89c4\u5219\uff1a\u4f60\u6c38\u8fdc\u4e0d\u5e94\u8be5\u5bf9 \"undefined\" \u503c\u505a\u4efb\u4f55\u4e8b\u60c5\u3002</p> <p>\u800c\u5728 Python \u4e2d\uff0c\u4eba\u4eec\u7528 \"None\" \u6765\u5904\u7406\u5404\u79cd\u4e8b\u60c5\u3002\u4ed6\u4eec\u6bd4\u8f83\u67d0\u4e2a\u4e1c\u897f\u662f\u5426\u4e3a \"None\" \u7b49\u7b49\u3002\u8fd9\u57fa\u672c\u4e0a\u5728 Scheme \u4ee3\u7801\u4e2d\u51e0\u4e4e\u4e0d\u4f1a\u51fa\u73b0\u3002\u6240\u4ee5\u5f53\u4f60\u5f97\u5230\u8fd9\u4e2a\u5b58\u5728\u7684 \"undefined\" \u503c\u65f6\uff0c\u7406\u5ff5\u662f\u4f60\u4e0d\u5e94\u8be5\u5bf9\u5b83\u505a\u4efb\u4f55\u4e8b\u60c5\u3002\u4f60\u4e0d\u5e94\u8be5\u68c0\u67e5\u5b83\u662f\u5426\u7b49\u4e8e\u53e6\u4e00\u4e2a \"undefined\"\uff0c\u4f60\u4e0d\u5e94\u8be5\u68c0\u67e5\u5217\u8868\u4e2d\u6709\u591a\u5c11\u4e2a \"undefined\" \u7b49\u7b49\u3002\u4f60\u5e94\u8be5\u505c\u6b62\u3002</p> <p>\u6240\u4ee5\u57fa\u672c\u4e0a\uff0c\u50cf\u8fd9\u4e2a\u8868\u8fbe\u5f0f\u662f\u5408\u6cd5\u7684\uff0c\u4f46\u662f\u662f\u4e0d\u63a8\u8350\u7684\u3002\u4f60\u6c38\u8fdc\u4e0d\u5e94\u8be5\u83b7\u53d6 \"print\" \u7684\u503c\u7136\u540e\u7528\u5b83\u505a\u5176\u4ed6\u4e8b\u60c5\u3002</p>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part2/#2_19","title":"2","text":"<p>\u6709\u4eba\u95ee\u9053 scheme \u4e2d\u6709\u6ca1\u6709\u4e0e python \u4e2d <code>non local</code> \u7c7b\u4f3c\u7684\u64cd\u4f5c\uff0c</p> <p>\u4e8e\u662f John \u6f14\u793a\u4e86\u4f7f\u7528 <code>set!</code> \u7684\u4e00\u79cd\u65b9\u5f0f</p> <pre><code>(define (make-withdraw balance)\n  (define (withdraw amount)\n    (set! balance (- balance amount))\n    balance)\n  withdraw)\n</code></pre>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part2/#3_14","title":"3","text":"<p>John \u63d0\u5230 scheme \u4e2d\u7684 <code>=</code> \u548c <code>equal?</code></p> <p>Quote</p> <p>John:</p> <p>So anyway, there's a bunch of different equals, and no, I don't think you need to know the difference between all of them. But if you want to know, like this ( <code>eq?</code> ), it is like <code>is</code> . This ( <code>=</code> ) is like nothing that exists in Python because it only works for numbers.</p> <p>This ( <code>equal?</code> ) is a lot like the equal sign. Yeah, in Python, I think that just like this will check, okay, so yeah, this ( <code>equal?</code> ) will check whether two things are generally equal, just like in Python, 2 equals 2 is true, and also a list containing 2 and a list containing 2 is true. So, um, yeah, this ( <code>equal?</code> ) is usually the one you want.</p> <p>But if you want to check for \"is\", it looks like that ( <code>eq?</code> ), and this ( <code>=</code> ) is some like weird thing that only works with numbers.</p> <p>John:</p> <p>\u603b\u4e4b\uff0c\u6709\u5f88\u591a\u4e0d\u540c\u7684\u7b49\u53f7\uff0c\u6211\u4e0d\u8ba4\u4e3a\u4f60\u9700\u8981\u4e86\u89e3\u5b83\u4eec\u4e4b\u95f4\u7684\u533a\u522b\u3002\u4f46\u662f\u5982\u679c\u4f60\u60f3\u77e5\u9053\uff0c\u6bd4\u5982\u8fd9\u4e2a( <code>eq?</code> )\uff0c\u5c31\u50cf <code>is</code> \u3002\u8fd9\u4e2a( <code>=</code> )\u5728Python\u4e2d\u5e76\u4e0d\u5b58\u5728\uff0c\u56e0\u4e3a\u5b83\u53ea\u9002\u7528\u4e8e\u6570\u5b57\u3002</p> <p>\u8fd9\u4e2a( <code>equal?</code> )\u5f88\u50cf\u7b49\u53f7\u3002\u662f\u7684\uff0c\u5728Python\u4e2d\uff0c\u6211\u8ba4\u4e3a\u5c31\u50cf\u8fd9\u4e2a\u4f1a\u68c0\u67e5\uff0c\u597d\u7684\uff0c\u6240\u4ee5\u662f\u7684\uff0c\u8fd9\u4e2a( <code>equal?</code> )\u5c06\u68c0\u67e5\u4e24\u4e2a\u4e1c\u897f\u662f\u5426\u5927\u81f4\u76f8\u7b49\uff0c\u5c31\u50cf\u5728Python\u4e2d\uff0c2\u7b49\u4e8e2\u662f\u771f\u7684\uff0c\u8fd8\u6709\u4e00\u4e2a\u5305\u542b2\u7684\u5217\u8868\u548c\u4e00\u4e2a\u5305\u542b2\u7684\u5217\u8868\u4e5f\u662f\u771f\u7684\u3002\u6240\u4ee5\uff0c\u55ef\uff0c\u8fd9\u4e2a( <code>equal?</code> )\u901a\u5e38\u662f\u4f60\u60f3\u8981\u7684\u3002</p> <p>\u4f46\u662f\u5982\u679c\u4f60\u60f3\u68c0\u67e5\u201cis\u201d\uff0c\u5b83\u770b\u8d77\u6765\u50cf\u8fd9\u6837( <code>eq?</code> )\uff0c\u800c\u8fd9\u4e2a( <code>=</code> )\u662f\u4e00\u4e9b\u5947\u602a\u7684\u4e1c\u897f\uff0c\u53ea\u5bf9\u6570\u5b57\u8d77\u4f5c\u7528\u3002</p>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part2/#lab-10","title":"Lab 10","text":""},{"location":"Notes%20of%20Courses/CS61A/CS61A_part2/#1_23","title":"1","text":"<p>\u6307\u5bfc\u7f51\u9875\u4e0a\u6709\u5199\u5982\u4f55\u4f7f\u7528\u63d0\u4f9b\u7684 scheme \u89e3\u91ca\u5668\u4ee5\u53ca\u7f16\u8f91\u5668</p> <p>Quote</p> <p>Scheme</p> <p>Scheme is a famous functional programming language from the 1970s. It is a dialect of Lisp (which stands for LISt Processing). The first observation most people make is the unique syntax, which uses a prefix notation and (often many) nested parentheses (see http://xkcd.com/297/). Scheme features first-class functions and optimized tail-recursion, which were relatively new features at the time.</p> <p>Our course uses a custom version of Scheme (which you will build for Project 4) included in the starter ZIP archive. To start the interpreter, type <code>python3 scheme</code>. To run a Scheme program interactively, type <code>python3 scheme -i &lt;file.scm&gt;</code>. To exit the Scheme interpreter, type <code>(exit)</code>.</p> <p>You may find it useful to try code.cs61a.org/scheme when working through problems, as it can draw environment and box-and-pointer diagrams and it lets you walk your code step-by-step (similar to Python Tutor). Don't forget to submit your code through Ok though!</p> <p>Scheme Editor</p> <p>As you're writing your code, you can debug using the Scheme Editor. In your <code>scheme</code> folder you will find a new editor. To run this editor, run <code>python3 editor</code>. This should pop up a window in your browser; if it does not, please navigate to localhost:31415 and you should see it.</p> <p>Make sure to run <code>python3 ok</code> in a separate tab or window so that the editor keeps running.</p> <p>If you find that your code works in the online editor but not in your own interpreter, it's possible you have a bug in code from an earlier part that you'll have to track down. Every once in a while there's a bug that our tests don't catch, and if you find one you should let us know!</p> <p>\u8fd0\u884c</p> <pre><code>python ./scheme [-i &lt;file.scm&gt;]\n</code></pre> <p>\u6253\u5f00 scheme \u89e3\u91ca\u5668\uff0c\u4ee5\u53ca\u52a0\u8f7d\u6587\u4ef6\u5e76\u6253\u5f00\u3002</p> <p>\u8fd0\u884c</p> <pre><code>python editor\n</code></pre> <p>\u6253\u5f00 scheme \u7f16\u8f91\u5668\uff0c\u5728\u7ebf\u7f16\u8f91\u548c\u6d4b\u8bd5(\u7f51\u5740\u5728 http://127.0.0.1:31415)</p> <p></p>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part2/#2_20","title":"2","text":"<p>Q5\u4e2d\uff0c\u9700\u8981\u5c06 <code>'YOUR-CODE-HERE</code> \u8fd9\u4e00\u884c\u6ce8\u91ca\u6389\u6216\u8005\u5220\u53bb\uff0c\u5426\u5219\u4f1a\u6709\u5982\u4e0b\u62a5\u9519</p> <pre><code>Traceback (most recent call last):\n  0     (define lst (quote your-code-here) 1)\nError: too many operands in form\n</code></pre>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part2/#3_15","title":"3","text":"<p>Q6 \u4e2d\uff0c\u672c\u6765\u4ee5\u4e3a\u5f88\u7b80\u5355\uff0c\u4e00\u5f00\u59cb\u9012\u5f52\u7684 base case \u662f\u7528 <code>(= lst nil)</code> \u6765\u5224\u65ad\uff0c\u4f46\u662f\u62a5\u9519\u4e86</p> <pre><code>Error: operand 0 (()) is not a number\n</code></pre> <p>\u5927\u6982\u5e94\u8be5\u6307\u7684\u662f\uff0c <code>lst</code> \u548c <code>nil</code> \u4e0d\u662f\u6570\uff0c\u6240\u4ee5\u4e0d\u80fd\u7528 <code>=</code> \u6bd4\u8f83\u3002</p> <p>\u6700\u540e\u5728\u5728\u7ebf\u7ec8\u7aef\u89e3\u91ca\u5668\u4e2d\uff0c\u6478\u7d22\u4e86\u597d\u4e00\u4f1a\uff0c\u53d1\u73b0\u4e86\u4e00\u4e2a\u51fd\u6570 <code>length</code> \uff0c\u80fd\u8fd4\u56de\u94fe\u8868\u7684\u957f\u5ea6\uff0c\u4e8e\u662f\u5c06\u5224\u65ad\u6761\u4ef6\u6539\u6210</p> <pre><code>(zero? (length lst))\n</code></pre> <p>\u6700\u7ec8\u89e3\u51b3</p> code <pre><code>(define (remove item lst)\n  'YOUR-CODE-HERE\n  (if (zero? (length lst))\n      nil\n      (if (= item (car lst))\n          (remove item (cdr lst))\n          (cons (car lst) (remove item (cdr lst)))))\n)\n</code></pre> <p>\u4e4b\u540e\u53d1\u73b0\u5176\u5b9e\u8fd8\u53ef\u4ee5\u7528 <code>equal?</code> (\u6216 <code>eq?</code> )\u51fd\u6570\uff0c</p> <pre><code>scm&gt; (equal? () nil)\n#t\nscm&gt; (equal? '() nil)\n#t\n</code></pre> <p>\u5199\u5230 hw07 \u65f6\u53d1\u73b0\uff0c\u5176\u5b9e\u8fd9\u9898\u63d0\u793a\u4e2d\u8bf4\u7684 <code>filter-lst</code> \u51fd\u6570\u5176\u5b9e\u60f3\u8bf4\u7684\u662f <code>filter</code> \uff0c\u4e4b\u524d\u8f93\u5165 <code>filter-lst</code> \u663e\u793a\u6ca1\u6709\u8fd9\u4e2a\u51fd\u6570\uff0c</p> <p>\u7528\u4e0a <code>filter</code> \u51fd\u6570\u7b54\u6848\u5c31\u4f1a\u53d8\u5f97\u975e\u5e38\u7b80\u5355</p> <pre><code>(define (remove item lst)\n  'YOUR-CODE-HERE\n  (filter (lambda (x) (not (= x item))) lst)\n)\n</code></pre>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part2/#hw-06","title":"HW 06","text":""},{"location":"Notes%20of%20Courses/CS61A/CS61A_part2/#1_24","title":"1","text":"<p>Q3\u4e2d\uff0c\u5728\u5904\u7406\u5947\u6570\u60c5\u51b5\u65f6\uff0c\u4e00\u5f00\u59cb\u6211\u5199\u7684\u662f</p> <pre><code>(* x (square (pow x (/ y 2))))\n</code></pre> <p>\u4f46\u662f\u5728\u8dd1\u7b2c\u4e00\u4e2a\u6d4b\u8bd5\u7528\u4f8b\u65f6\uff0c</p> <pre><code>(pow 2 5)\n</code></pre> <p>\u663e\u793a\u9012\u5f52\u6ea2\u51fa\u4e86</p> <pre><code># Error: expected\n#     32\n# but got\n#     Traceback (most recent call last):\n#       ...\n#     RecursionError: maximum recursion depth exceeded in __instancecheck__\n</code></pre> <p>\u731c\u6d4b\u662f\u56e0\u4e3a\u9664\u6cd5\u7684\u95ee\u9898\uff0c\u4e8e\u662f\u53bb\u6d4b\u8bd5\u4e86\u4e00\u4e0b\uff0c\u53d1\u73b0 <code>/</code> \u4e0d\u662f\u6574\u9664</p> <pre><code>scm&gt; (/ 5 2)\n2.5\nscm&gt; (/ 4 2)\n2\n</code></pre> <p>\u4e8e\u662f\u5c06\u57fa\u6570\u60c5\u51b5\u7684\u4ee3\u7801\u4fee\u6539\u6210\u4e86</p> <pre><code>(* x (square (pow x (/ (- y 1) 2))))\n</code></pre> code <pre><code>(define (pow x y)\n  'YOUR-CODE-HERE\n  (if (= y 1)\n      x\n      (if (even? y)\n          (square (pow x (/ y 2)))\n          (* x (square (pow x (/ (- y 1) 2))))))\n)\n</code></pre>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part2/#lecture-28-exception","title":"Lecture 28 Exception","text":""},{"location":"Notes%20of%20Courses/CS61A/CS61A_part2/#1_25","title":"1","text":"<p>\u5728\u8fd0\u884c <code>py</code> \u6587\u4ef6\u65f6\uff0c\u53ef\u4ee5\u4f7f\u7528 <code>-O</code> \u9009\u9879\u6765\u5ffd\u7565 <code>assert</code> \u8bed\u53e5\u6765\u63d0\u9ad8\u7a0b\u5e8f\u6267\u884c\u6548\u7387</p> <pre><code>python -O\n</code></pre> <p></p> <p><code>__debug__</code> \u53ef\u4ee5\u67e5\u770b <code>assert</code> \u8bed\u53e5\u662f\u5426\u4f1a\u88ab\u6267\u884c</p> <pre><code>C:\\Users\\Ronald&gt;python\nPython 3.10.9 (tags/v3.10.9:1dd9be6, Dec  6 2022, 19:43:38) [MSC v.1934 32 bit (Intel)] on win32\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n&gt;&gt;&gt; __debug__\nTrue\n&gt;&gt;&gt; ^Z\n\n\nC:\\Users\\Ronald&gt;python -O\nPython 3.10.9 (tags/v3.10.9:1dd9be6, Dec  6 2022, 19:43:38) [MSC v.1934 32 bit (Intel)] on win32\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n&gt;&gt;&gt; __debug__\nFalse\n&gt;&gt;&gt;\n</code></pre>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part2/#2_21","title":"2","text":"<p>\u5f15\u53d1\u9519\u8bef raise error</p> <p><code>raise</code> \u540e\u7684\u8868\u8fbe\u5f0f\u5fc5\u987b\u662f <code>BaseException</code> \u7684\u5b9e\u4f8b\u6216\u8005\u5b83\u7684\u5b50\u7c7b\uff0c</p> <p>\u5982\u4e0a\u56fe\uff0cJohn \u8fd8\u4ecb\u7ecd\u4e86\u4e2d\u9519\u8bef\u7c7b\u578b</p> <p>John \u7684 demo \u6f14\u793a</p> <p></p>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part2/#3_16","title":"3","text":"<p><code>try</code> \u8bed\u53e5\u7684\u7528\u6cd5\uff0c\u5982\u679c\u5728\u6267\u884c <code>try</code> \u4e4b\u540e\u7684\u4ee3\u7801\u4e2d\u5f15\u8d77\u4e86\u9519\u8bef\uff0c\u5e76\u4e14\u9519\u8bef\u662f <code>except</code> \u540e <code>&lt;exception class&gt;</code> \u7684\u5b50\u7c7b\u65f6\uff0c\u5c31\u4f1a\u6267\u884c <code>except</code> \u4e2d\u7684\u8bed\u53e5(\u5982\u679c\u6ca1\u6709\u5f15\u8d77\u9519\u8bef\u5c31\u4e0d\u4f1a\u6267\u884c)</p> <p>John\u7684demo\u6f14\u793a</p> <p></p>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part2/#4_9","title":"4","text":"<p>John\u63d0\u5230\u4e86\u4e00\u4e2a <code>reduce</code> \u51fd\u6570(python\u6ca1\u5185\u7f6e\uff0cscheme\u5185\u7f6e\u4e86)\uff0c\u5728\u4e4b\u540e\u7684demo\u6f14\u793a\u4e2d\uff0c\u5206\u522b\u7528\u8fed\u4ee3\u548c\u9012\u5f52\u5b9e\u73b0\u4e86 <code>reduce</code></p> <ul> <li> <p>\u8fed\u4ee3</p> <pre><code>def reduce(f, s, initial):\n    \"\"\"Combine elements of s using f starting with initial.\n\n    &gt;&gt;&gt; reduce(mul, [2, 4, 8], 1)\n    64\n    &gt;&gt;&gt; reduce(add, [1, 2, 3, 4], 0)\n    10\n    \"\"\"\n    for x in s:\n        initial = f(initial, x)\n    return initial\n</code></pre> </li> <li> <p>\u9012\u5f52</p> <pre><code>def reduce(f, s, initial):\n    \"\"\"Combine elements of s using f starting with initial.\n\n    &gt;&gt;&gt; reduce(mul, [2, 4, 8], 1)\n    64\n    &gt;&gt;&gt; reduce(add, [1, 2, 3, 4], 0)\n    10\n    \"\"\"\n    if not s:\n        return initial\n    else:\n        first, rest = s[0], s[1:]\n        return reduce(f, rest, f(initial, first))\n</code></pre> </li> </ul>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part2/#lecture-28-qa","title":"Lecture 28 Q&amp;A","text":""},{"location":"Notes%20of%20Courses/CS61A/CS61A_part2/#1_26","title":"1","text":"<p><code>try</code> \u8bed\u53e5\u7ed3\u6784\u4e2d\u7684 <code>finally</code> \u8bed\u53e5\uff0c</p> <p><code>finally</code> \u4e2d\u7684\u4ee3\u7801\u65e0\u8bba <code>try</code> \u4e2d\u662f\u5426\u5f15\u53d1\u9519\u8bef\u6700\u7ec8\u90fd\u4f1a\u88ab\u6267\u884c(\u4ece\u56fe\u4e0a John \u7684\u6f14\u793a\u4e2d\u53ef\u4ee5\u770b\u5230)\uff0c\u6240\u4ee5 <code>finally</code> \u4e2d\u4e00\u822c\u7528\u6765\u91ca\u653e\u8d44\u6e90\u91ca\u653e\u5185\u5b58(\u5982\u5173\u95ed\u5728 <code>try</code> \u4e2d\u52a0\u8f7d\u7684\u6587\u4ef6\uff0c\u6216\u8005\u65ad\u5f00\u7f51\u7edc\u8fde\u63a5)</p>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part2/#2_22","title":"2","text":"<p>\u6709\u4eba\u63d0\u95ee <code>try</code> \u4e2d\u5f15\u53d1\u7684\u9519\u8bef\u662f\u5426\u5b58\u5728\u4e8e <code>global</code> \u6846\u67b6\u4e2d\uff0cJohn \u8fdb\u884c\u6f14\u793a</p> <pre><code>&gt;&gt;&gt; try:\n...     1/0\n... except ZeroDivisionError as n:\n...     print(\"n is\", n)\n...\nn is division by zero\n&gt;&gt;&gt; n\nTraceback (most recent call last):\n  File \"&lt;stdin&gt;\", line 1, in &lt;module&gt;\nNameerror: name 'n' is not defined\n</code></pre> <p>\u968f\u540e John \u53c8\u5c55\u793a\u4e86\u4e00\u4e0b\u9519\u8bef\u5b9e\u4f8b</p> <pre><code>def return_an_error():\n    try:\n        1/0\n    except ZeroDivisionError as n:\n        print(\"n is\", n)\n        return n\n</code></pre> <pre><code>&gt;&gt;&gt; e = return_an_error()\nn is division by zero\n&gt;&gt;&gt; e\nZeroDivisionError('division by zero')\n&gt;&gt;&gt; str(e)\n'division by zero'\n&gt;&gt;&gt; repr(e)\n\"ZeroDivisionError('division by zero')\"\n&gt;&gt;&gt; isinstance(e, Exception)\nTrue\n&gt;&gt;&gt; isinstance(e, ZeroDivisionError)\nTrue\n</code></pre>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part2/#3_17","title":"3","text":"<p>\u6709\u4eba\u63d0\u95ee19\u5e74\u79cb\u5b63\u671f\u672b\u8003\u8bd5\u7684\u8fd9\u4e00\u9898</p> <p>Quote</p> <p>Mull It Over</p> <p>Uh oh! Someone evaluated <code>(define * +)</code> . Now <code>(* 3 2)</code> evaluates to 5 instead of 6! Let's fix it.</p> <p>Important: Answer all questions on this page without calling the built-in multiplication procedure.</p> <p>(a) Implement <code>mulxy</code> , which multiplies integers <code>x</code> and <code>y</code> . Hint: <code>(- 2)</code> evaluates to -2.</p> <pre><code>;; multiply x by y (without using the * operator).\n;; (mulxy 3 4) -&gt; 12           ; 12 = 3 + 3 + 3 + 3\n;; (mulxy (- 3) (- 4)) -&gt; 12   ; 12 = - ( -3 + -3 + -3 + -3 )\n(define (mulxy x y)\n  (cond ((&lt; y 0) (- ______ ))\n        ((= y 0) 0)\n        (else ( ______ x (mulxy x ______)))))\n</code></pre> <p>(b) Implement <code>mul-expr</code> , which takes an expression <code>e</code> that contains only calls to <code>*</code> and numbers. It returns the normal value of <code>e</code> under a Scheme interpreter with an unmodified <code>*</code> operator that multiplies.</p> <p>You may call the <code>mul</code> procedure defined below.</p> <p>Important: Fill each blank with only a single symbol.</p> <pre><code>;; Multiply together a list of numbers.\n;; (mul '(2 3 4 2)) -&gt; 48\n(define (mul s) (reduce mulxy s))\n\n;; Evaluate an expression with only calls to * and numbers.\n;; (mul-expr '(* (* 1 2) (* 3 (* 4 1 1) 2))) -&gt; 48\n(define (mul-expr e)\n  (if (number? e) e\n      (______ (______ ______ (______ e)))))\n</code></pre> <p>(c) Implement <code>*-to-mul</code> , which takes any expression <code>e</code> . It returns an expression like <code>e</code> , but with all calls to <code>*</code> replaced with calls to <code>mul</code> . Note that <code>*</code> takes an arbitrary number of arguments, while <code>mul</code> always takes exactly one argument: a list of numbers. You should account for this difference.</p> <pre><code>;; Convert all calls to * to calls to mul in expression e.\n;; (eval (*-to-mul '(* 1 (+ 2 3) (+ 4 5 (* 6 1))))) -&gt; 75\n(define (*-to-mul e)\n  (if (not (list? e)) e\n      (let ((op ______ ) (rest ______))\n        (if (equal? op '*)\n            (list ______)\n            (cons op rest)))))\n</code></pre> <p>\u6211\u5148\u5c1d\u8bd5\u81ea\u5df1\u505a\u4e86\u4e00\u4e0b\uff0c</p> <p>\u7b2c\u4e00\u9898\u5f88\u7b80\u5355</p> <pre><code>(define (mulxy x y)\n  (cond ((&lt; y 0) (- (mulxy x (- y))))\n        ((= y 0) 0)\n        (else (+ x (mulxy x (- y 1))))))\n</code></pre> <p>\u7b2c\u4e8c\u9898\u7531\u4e8e\u6bcf\u4e00\u4e2a\u7a7a\u53ea\u80fd\u586b\u4e00\u4e2a symbol\uff0c\u60f3\u4e86\u5f88\u4e45\u6ca1\u60f3\u5230\u53ef\u884c\u7684\u586b\u6cd5\uff0c\u611f\u89c9\u5e94\u8be5\u662f\u9700\u8981\u4f7f\u7528\u4e00\u4e9b\u7279\u6b8a\u7684\u51fd\u6570\u3002</p> <p>John \u4f7f\u7528\u4e86scheme\u5185\u7f6e\u7684 <code>map</code> \u51fd\u6570</p> <p></p> <p>scheme \u4e2d\u7684 <code>map</code> \u548c python \u4e2d\u7684 <code>map</code> \u6548\u679c\u5dee\u4e0d\u591a\uff0c\u90fd\u662f\u4f20\u5165\u4e00\u4e2a\u51fd\u6570\u548c\u4e00\u4e2a\u94fe\u8868/\u5e8f\u5217\uff0c\u7136\u540e\u5c06\u51fd\u6570\u5e94\u7528\u5230\u6bcf\u4e00\u4e2a\u5143\u7d20\u4e0a\uff0c</p> <p>\u56e0\u6b64</p> <pre><code>(define (mul-expr e)\n  (if (number? e) e\n      (mul (map mul-expr (cdr e)))))\n</code></pre> <p>\u7b2c\u4e09\u9898\u4e5f\u6bd4\u8f83\u96be\uff0c\u5148\u662f\u6839\u636e\u6211\u7684\u7406\u89e3\u5199\u51fa\u4e86</p> <pre><code>(define (*-to-mul e)\n  (if (not (list? e)) e\n      (let ((op (car e)) (rest (map *-to-mul (cdr e))))\n        (if (equal? op '*)\n            (list ______)\n            (cons op rest)))))\n</code></pre> <p><code>(list ______)</code> \u8fd9\u4e00\u884c\uff0c\u4e00\u5f00\u59cb\u5c1d\u8bd5 <code>(list mul rest)</code> \uff0c\u4f46\u662f\u6d4b\u8bd5\u65f6\u663e\u793a</p> <pre><code>scm&gt; (eval (*-to-mul '(* 1 (+ 2 3) (+ 4 5 (* 6 1)))))\nTraceback (most recent call last):\n  0     (eval (*-to-mul (quote (* 1 (+ 2 3) (+ 4 5 (* 6 1))))))\n  1     ((lambda (s) (reduce mulxy s)) (1 (+ 2 3) (+ 4 5 ((lambda (s) (reduce mulxy s)) (6 1)))))\n  2     (lambda (s) (reduce mulxy s))\nError: malformed list: (lambda (s) (reduce mulxy s))\nscm&gt; (*-to-mul '(* 1 (+ 2 3) (+ 4 5 (* 6 1))))\n((lambda (s) (reduce mulxy s)) (1 (+ 2 3) (+ 4 5 ((lambda (s) (reduce mulxy s)) (6 1)))))\n</code></pre> <p>\u7136\u540e\u6211\u610f\u8bc6\u5230\uff0c\u5e94\u8be5\u628a <code>mul</code> \u6539\u6210 <code>'mul</code> \uff0c\u56e0\u4e3a\u9700\u8981\u8fd4\u56de\u7684\u662f\u4e00\u4e2a\u8868\u8fbe\u5f0f\uff0c\u8868\u8fbe\u5f0f\u4e2d\u7684\u7b26\u53f7\u548c\u51fd\u6570\u5e94\u8be5\u662f\u5f15\u7528\u7684\u5f62\u5f0f\uff0c</p> <p>\u4fee\u6539\u6210 <code>(list 'mul rest)</code> \u4e4b\u540e\uff0c\u6d4b\u8bd5\u663e\u793a</p> <pre><code>scm&gt; (eval (*-to-mul '(* 1 (+ 2 3) (+ 4 5 (* 6 1)))))\nTraceback (most recent call last):\n  0     (eval (*-to-mul (quote (* 1 (+ 2 3) (+ 4 5 (* 6 1))))))\n  1     (mul (1 (+ 2 3) (+ 4 5 (mul (6 1)))))\n  2     (1 (+ 2 3) (+ 4 5 (mul (6 1))))\nError: int is not callable: 1\n</code></pre> <p>\u672c\u6765\u770b\u5230\u4e0a\u9762\u7684</p> <pre><code>;; (mul '(2 3 4 2)) -&gt; 48\n</code></pre> <p>\u5c06\u4ee3\u7801\u5c1d\u8bd5\u6539\u6210\u4e86</p> <pre><code>(list 'mul ('quote rest))\n</code></pre> <p>\u4f46\u662f\u6d4b\u8bd5\u65f6\u663e\u793a</p> <pre><code>Traceback (most recent call last):\n  ...   ...\n  4     (list (quote mul) ((quote quote) rest))\n  5     ((quote quote) rest)\nError: str is not callable: quote\n</code></pre> <p>\u6700\u540e\u60f3\u4e0d\u51fa\u7b54\u6848\u3002</p> <p></p> <p>John \u5229\u7528\u4e00\u4e2a\u4f8b\u5b50\u6765\u8fdb\u884c\u8bb2\u89e3\uff0c</p> <pre><code>(*-to-mul '(* 1 2 (* 3 4)))\n</code></pre> <p>\u5e94\u8be5\u5f97\u5230\u7684\u662f(\u611f\u89c9\u6211\u4e4b\u524d\u505a\u7684\u65f6\u5019\u662f\u6ca1\u60f3\u5230\u8fd9\u4e2a\u5173\u952e\u7684\u5730\u65b9)</p> <pre><code>(mul (list 1 2 (mul (list 3 4))))\n</code></pre> <p>Hany \u671f\u95f4\u95ee\u9053\u4e3a\u4ec0\u4e48\u4e0d\u662f <code>(mul (1 2 (mul (3 4))))</code></p> <p>John \u8bf4 \u56e0\u4e3a <code>1</code> \u4e0d\u662f\u53ef\u8c03\u7528\u7684\uff0c\u5982\u679c\u8fd9\u6837\u5199\u5c31\u4f1a\u8c03\u7528 <code>1</code></p> <p>\u6240\u4ee5\u6700\u540e\u6b63\u786e\u7684\u7b54\u6848\u662f(John \u7684\u4ee3\u7801\u6709\u4e00\u4e9b\u95ee\u9898\uff0c\u9012\u5f52\u5e94\u8be5\u53d1\u751f\u5728\u5b9a\u4e49 <code>rest</code> \u7684\u65f6\u5019(\u5426\u5219\u5982\u679c\u7b2c\u4e00\u4e2a\u662f <code>+</code> \u5c31\u4f1a\u4e0d\u53d1\u751f\u66ff\u6362))</p> <pre><code>(define (*-to-mul e)\n  (if (not (list? e)) e\n      (let ((op (car e)) (rest (map *-to-mul (cdr e))))\n        (if (equal? op '*)\n            (list 'mul (cons 'list rest))\n            (cons op rest)))))\n</code></pre> <p>(\u8fd9\u9898\u662f\u771f\u7684\u96be\u60f3\ud83d\ude31)</p>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part2/#4_10","title":"4","text":"<p>Quote</p> <p>John:</p> <p>You can think of a list as built from a bunch of <code>cons</code> . <code>cons</code> is like the most fundamental operation, and what it does is it just adds one element to the beginning of an existing list.</p> <p>John:</p> <p>\u4f60\u53ef\u4ee5\u5c06\u5217\u8868\u770b\u4f5c\u662f\u7531\u4e00\u5806 <code>cons</code> \u6784\u5efa\u800c\u6210\u7684\u3002 <code>cons</code> \u5c31\u50cf\u662f\u6700\u57fa\u672c\u7684\u64cd\u4f5c\uff0c\u5b83\u7684\u4f5c\u7528\u662f\u5728\u73b0\u6709\u5217\u8868\u7684\u5f00\u5934\u6dfb\u52a0\u4e00\u4e2a\u5143\u7d20\u3002</p> <p>\u6211\u89c9\u5f97 John \u8fd9\u4e2a\u5bf9 <code>cons</code> \u51fd\u6570\u7684\u89e3\u91ca\u5f88\u597d\uff0c\u628a <code>cons</code> \u7406\u89e3\u6210 \u4e00\u4e2a\u5728\u73b0\u6709\u5217\u8868\u5f00\u5934\u63d2\u5165\u65b0\u5143\u7d20\u7684\u51fd\u6570 \u5c31\u66f4\u65b9\u4fbf</p>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part2/#5_7","title":"5","text":"<p>John \u53c8\u63d0\u5230\u4e86scheme\u4e2d\u7684 <code>append</code> \u51fd\u6570\uff0c\u80fd\u5c06\u4e24\u4e2a\u94fe\u8868\u5408\u5e76\u5230\u4e00\u8d77</p>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part2/#lecture-29-calculater","title":"Lecture 29 Calculater","text":""},{"location":"Notes%20of%20Courses/CS61A/CS61A_part2/#1_27","title":"1","text":"<p>John \u8bb2\u89e3 \u89e3\u6790 parse \u4e00\u4e2a\u8bed\u8a00\u7684\u8bed\u53e5\u7684\u8fc7\u7a0b</p> <p></p>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part2/#2_23","title":"2","text":"<p>scheme \u4e2d\u7684\u51cf\u6cd5\u548c\u9664\u6cd5\u7a0d\u5fae\u7279\u6b8a\u4e00\u4e9b\uff0c\u5982\u679c\u53ea\u6709\u4e00\u4e2a\u53c2\u6570\uff0c\u5c31\u76f4\u63a5\u53d6\u76f8\u53cd\u6570\u6216\u8005\u5012\u6570\uff0c\u5982\u679c\u6709\u591a\u4e2a\u53c2\u6570\uff0c\u5c31\u662f\u62ff\u7b2c\u4e00\u4e2a\u53bb\u51cf\u6216\u9664\u4e4b\u540e\u5269\u4f59\u7684\u6570</p>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part2/#3_18","title":"3","text":"<p>\u7528 python \u5b9e\u73b0 scheme \u4e2d(\u9002\u7528\u4e8e\u6570\u5b66\u8fd0\u7b97\u8868\u8fbe\u5f0f\u7684) <code>eval</code> \u51fd\u6570</p> <p></p>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part2/#4_11","title":"4","text":"<p>\u4ea4\u4e92\u5f0f\u89e3\u91ca\u5668 interactive interpreter \u7684\u5de5\u4f5c\u6d41\u7a0b *\u8bfb\u53d6-\u6c42\u503c-\u8f93\u51fa\u5faa\u73af Read-Eval-Print Loop (REPL)* </p> <ul> <li>\u4ece\u7528\u6237\u7684\u6587\u672c\u8f93\u5165\u4e2d\u8bfb\u53d6</li> <li>\u5c06\u6587\u672c \u89e3\u6790 parse \u4e3a\u8868\u8fbe\u5f0f</li> <li>\u8ba1\u7b97\u8868\u8fbe\u5f0f</li> <li>\u5982\u679c\u53d1\u751f\u9519\u8bef\uff0c\u62a5\u544a\u9519\u8bef</li> <li>\u8f93\u51fa\u8868\u8fbe\u5f0f\u8ba1\u7b97\u7ed3\u679c\u7684\u503c\uff0c\u5e76\u91cd\u590d\u4e0a\u8ff0\u8fc7\u7a0b</li> </ul>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part2/#5_8","title":"5","text":"<p>John \u8bf4\u5230 \u4ea4\u4e92\u5f0f\u89e3\u91ca\u5668 interactive interpreter \u4e0d\u80fd\u56e0\u4e3a\u7a0b\u5e8f\u7684\u9519\u8bef\u5c31\u4e2d\u65ad\u6574\u4e2a\u7a0b\u5e8f\uff0c\u6240\u4ee5\u9700\u8981\u8fdb\u884c exception \u7684\u5904\u7406</p> <p>Quote</p> <p>John:</p> <p>...So, an interactive interpreter should print information about each error. So that when those errors occur, the programmer who generated them can figure out what to change in order to get rid of the error. And a well-designed interactive interpreter should never really halt; it should stop evaluating the current expression and print out the arrow, but then give the programmer a chance to revise what they've done. So, the user should have the opportunity to try again in the current environment, instead of having the whole program crash. And that's exactly what happens here.</p> <p>So, as you can see, I'm able to continue entering expressions. The only way I can quit out of this game calculator is by pressing in my system control \"d,\" which says this is the end of the file. Then it will say, \"Calculation is complete,\" and finally, the program will end.</p> <p>Now, how do we control for all this? Well, we put both the parsing and evaluation within a <code>try</code> statement,</p> <pre><code>@main\ndef read_eval_print_loop():\n    \"\"\"Run a read-eval-print loop for Calculator.\"\"\"\n    while True:\n        try:\n            src = buffer_input()\n            while src.more_on_line:\n                expression = scheme_read(src)\n                print(calc_eval(expression))\n        except (SyntaxError, TypeError, ValueError, ZeroDivisionError) as err:\n            print(type(err).__name__ + ':', err)\n        except (KeyboardInterrupt, EOFError):  # &lt;Control&gt;-D, etc.\n            print('Calculation completed.')\n            return\n</code></pre> <p>that knows to look for syntax, type, value, and zero division errors \u2013 all the things that can occur, and just prints those errors out. And then, since this is all embedded within the suite of a <code>while</code> statement, we'll go back and try again. So, the only way to stop is to reach the end of a file or a keyboard interrupt, at which point it will print \"Calculation is complete.\"</p> <p>John:</p> <p>\u56e0\u6b64\uff0c\u4ea4\u4e92\u5f0f\u89e3\u91ca\u5668\u5e94\u8be5\u6253\u5370\u6709\u5173\u6bcf\u4e2a\u9519\u8bef\u7684\u4fe1\u606f\uff0c\u4ee5\u4fbf\u5f53\u8fd9\u4e9b\u9519\u8bef\u53d1\u751f\u65f6\uff0c\u751f\u6210\u5b83\u4eec\u7684\u7a0b\u5e8f\u5458\u80fd\u591f\u5f04\u6e05\u695a\u8981\u66f4\u6539\u4ec0\u4e48\u4ee5\u6d88\u9664\u9519\u8bef\u3002\u4e00\u4e2a\u8bbe\u8ba1\u826f\u597d\u7684\u4ea4\u4e92\u5f0f\u89e3\u91ca\u5668\u5b9e\u9645\u4e0a\u4e0d\u5e94\u8be5\u505c\u6b62\uff1b\u5b83\u5e94\u8be5\u505c\u6b62\u8bc4\u4f30\u5f53\u524d\u8868\u8fbe\u5f0f\u5e76\u6253\u5370\u51fa\u7bad\u5934\uff0c\u7136\u540e\u7ed9\u7a0b\u5e8f\u5458\u4e00\u4e2a\u673a\u4f1a\u6765\u4fee\u6539\u4ed6\u4eec\u6240\u505a\u7684\u4e8b\u60c5\u3002\u56e0\u6b64\uff0c\u7528\u6237\u5e94\u8be5\u6709\u673a\u4f1a\u5728\u5f53\u524d\u73af\u5883\u4e2d\u518d\u6b21\u5c1d\u8bd5\uff0c\u800c\u4e0d\u662f\u4f7f\u6574\u4e2a\u7a0b\u5e8f\u5d29\u6e83\u3002\u8fd9\u6b63\u662f\u8fd9\u91cc\u53d1\u751f\u7684\u60c5\u51b5\u3002</p> <p>\u6240\u4ee5\uff0c\u6b63\u5982\u4f60\u6240\u89c1\uff0c\u6211\u80fd\u591f\u7ee7\u7eed\u8f93\u5165\u8868\u8fbe\u5f0f\u3002\u9000\u51fa\u8fd9\u4e2a\u6e38\u620f\u8ba1\u7b97\u5668\u7684\u552f\u4e00\u65b9\u6cd5\u662f\u6309\u4e0b\u6211\u7684\u7cfb\u7edf\u63a7\u5236 \u201cd\u201d\uff0c\u8fd9\u8868\u793a\u8fd9\u662f\u6587\u4ef6\u7684\u7ed3\u5c3e\u3002\u7136\u540e\u5b83\u5c06\u663e\u793a \u201cCalculation is complete\u201d\uff0c\u6700\u540e\u7a0b\u5e8f\u5c06\u7ed3\u675f\u3002</p> <p>\u73b0\u5728\uff0c\u6211\u4eec\u5982\u4f55\u63a7\u5236\u6240\u6709\u8fd9\u4e9b\u5462\uff1f\u55ef\uff0c\u6211\u4eec\u5c06\u89e3\u6790\u548c\u8bc4\u4f30\u90fd\u653e\u5728\u4e00\u4e2a <code>try</code> \u8bed\u53e5\u4e2d\uff0c </p> <pre><code>@main\ndef read_eval_print_loop():\n    \"\"\"Run a read-eval-print loop for Calculator.\"\"\"\n    while True:\n        try:\n            src = buffer_input()\n            while src.more_on_line:\n                expression = scheme_read(src)\n                print(calc_eval(expression))\n        except (SyntaxError, TypeError, ValueError, ZeroDivisionError) as err:\n            print(type(err).__name__ + ':', err)\n        except (KeyboardInterrupt, EOFError):  # &lt;Control&gt;-D, etc.\n            print('Calculation completed.')\n            return\n</code></pre> <p>\u8be5\u8bed\u53e5\u77e5\u9053\u5982\u4f55\u67e5\u627e\u8bed\u6cd5\u3001\u7c7b\u578b\u3001\u503c\u548c\u96f6\u9664\u9519\u8bef\uff0c\u5373\u6240\u6709\u53ef\u80fd\u53d1\u751f\u7684\u4e8b\u60c5\uff0c\u5e76\u53ea\u662f\u6253\u5370\u51fa\u8fd9\u4e9b\u9519\u8bef\u3002\u7136\u540e\uff0c\u7531\u4e8e\u6240\u6709\u8fd9\u4e9b\u90fd\u5d4c\u5957\u5728\u4e00\u4e2a <code>while</code> \u8bed\u53e5\u7684\u5957\u4ef6\u4e2d\uff0c\u6211\u4eec\u5c06\u56de\u5230\u5e76\u5c1d\u8bd5\u518d\u6b21\u6267\u884c\u3002\u56e0\u6b64\uff0c\u552f\u4e00\u505c\u6b62\u7684\u65b9\u5f0f\u662f\u5230\u8fbe\u6587\u4ef6\u7684\u672b\u5c3e\u6216\u952e\u76d8\u4e2d\u65ad\uff0c\u6b64\u65f6\u5b83\u5c06\u6253\u5370 \u201cCalculation is complete\u201d\u3002</p>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part2/#lecture-29-qa","title":"Lecture 29 Q&amp;A","text":""},{"location":"Notes%20of%20Courses/CS61A/CS61A_part2/#1_28","title":"1","text":"<p>\u6709\u4eba\u63d0\u95ee\u9053(python)\u4ee3\u7801\u4e2d\u7684 <code>@main</code> \u6709\u4ec0\u4e48\u4f5c\u7528\uff0c</p> <p>Quote</p> <p>John:</p> <p>...Yeah, so this main decorator is something that's specific to 61a. It just says if you run the file, this is the function that should be called. So if I run the whole <code>scalc.py</code> file, it's not going to call as scheme list instead, it's going to call <code>read_eval_print_loop</code> .</p> <p>John:</p> <p>...\u662f\u7684\uff0c\u6240\u4ee5\u8fd9\u4e2a\u4e3b\u88c5\u9970\u5668\u662f61a\u7279\u6709\u7684\u4e1c\u897f\u3002\u5b83\u53ea\u662f\u8bf4\uff0c\u5982\u679c\u4f60\u8fd0\u884c\u6587\u4ef6\uff0c\u8fd9\u5c31\u662f\u5e94\u8be5\u8c03\u7528\u7684\u51fd\u6570\u3002\u56e0\u6b64\uff0c\u5982\u679c\u6211\u8fd0\u884c\u6574\u4e2a <code>scalc.py</code> \u6587\u4ef6\uff0c\u5b83\u4e0d\u4f1a\u8c03\u7528scheme-list\uff0c\u800c\u662f\u8c03\u7528 <code>read_eval_print_loop</code> \u3002</p> <p>\u8fd9\u4e2a\u548c</p> <pre><code>if __name__ = '__main__':\n    ...\n</code></pre> <p>\u6709\u70b9\u50cf\uff0c\u4e0d\u8fc7\u5c01\u88c5\u6210\u51fd\u6570\u518d\u52a0\u4e0a <code>@main</code> \u8fd8\u6709\u4e00\u70b9\u597d\u5904\u5c31\u662f\u8fd8\u53ef\u4ee5\u518d\u6b21\u8fdb\u884c\u8c03\u7528</p>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part2/#hw-07","title":"HW 07","text":""},{"location":"Notes%20of%20Courses/CS61A/CS61A_part2/#1_29","title":"1","text":"<p>\u5728 Q1 \u7684\u9898\u76ee\u8bf4\u660e\u4e2d\u63d0\u5230\u4e86 <code>filter</code> \u51fd\u6570\uff0c\u8ddf\u8fd9\u9898\u8981\u5b9e\u73b0\u7684 <code>filter-lst</code> \u7528\u6cd5\u4e00\u6837(\u7528\u4e8e\u94fe\u8868\u4e0a)\uff0c\u4e5f\u662f\u9700\u8981\u4e00\u4e2a \u8c13\u8bcd predicate (\u4f20\u5165\u4e00\u4e2a\u53c2\u6570\u7136\u540e\u8fd4\u56de\u771f\u5047\u7684\u51fd\u6570) \u548c\u4e00\u4e2a\u94fe\u8868\uff0c\u7136\u540e\u5c31\u4f1a\u7b5b\u9009\u51fa\u4e3a\u771f\u7684\u5143\u7d20</p> <pre><code>scm&gt; (define (x y) (&gt; y 1))\nx\nscm&gt; (filter x '(1 2 3 4 5))\n(2 3 4 5)\n</code></pre> <p>\u8fd9\u9898\u8981\u6c42\u5b9e\u73b0\u7684\u51fd\u6570\u53eb\u505a <code>filter-lst</code> \uff0c\u6240\u4ee5\u6709\u53ef\u80fd <code>filter</code> \u51fd\u6570\u8fd8\u53ef\u4ee5\u4f5c\u7528\u4e8e\u5176\u4ed6\u7684\u6570\u636e\u7c7b\u578b</p> code <pre><code>(define (filter-lst fn lst)\n  'YOUR-CODE-HERE\n  (if (eq? lst nil)\n      nil\n      (if (fn (car lst))\n          (cons (car lst) (filter-lst fn (cdr lst)))\n          (filter-lst fn (cdr lst))))\n)\n</code></pre>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part2/#2_24","title":"2","text":"<p>Q4 \u8fd9\u9898\u6709\u70b9\u96be(\u4e3b\u8981\u662f\u4e00\u76f4\u60f3\u7528python\u4e2d\u7684 <code>in</code> \u800cscheme\u4e2d\u7528\u4e0d\u4e86\ud83d\ude05)\uff0c</p> <p>\u6700\u540e\u5199\u51fa\u6765\u4e3b\u8981\u662f\u9898\u76ee\u4e2d\u63d0\u793a\u53ef\u4ee5\u4f7f\u7528\u7b2c\u4e00\u9898\u4e2d\u5b9e\u73b0\u7684 <code>filter-lst</code> \u51fd\u6570\uff0c\u7136\u540e\u6211\u53c8\u731c\u6d4b\u8fd8\u662f\u9700\u8981\u4f7f\u7528\u9012\u5f52\u6765\u5b9e\u73b0\uff0c\u90a3\u4e48\u4f20\u5165 <code>filter-lst</code> \u51fd\u6570\u7684\u94fe\u8868\u5e94\u8be5\u5c31\u662f <code>(cdr lst)</code> \uff0c</p> <p>\u8fdb\u800c\uff0c <code>filter-lst</code> \u7b5b\u51fa\u6765\u7684\u94fe\u8868\u5e94\u8be5\u8fd8\u8981\u9012\u5f52\u5730\u653e\u5165 <code>no-repeats</code> \u4e2d\uff0c\u6700\u540e\u518d\u52a0\u4e0a base case \u5c31\u6210\u529f\u5b9e\u73b0\u4e86</p> code <pre><code>(define (no-repeats lst)\n  'YOUR-CODE-HERE\n  (if (equal? lst nil)\n      nil\n      (cons (car lst)\n            (no-repeats (filter-lst (lambda (x) (not (= x (car lst))))\n                                    (cdr lst)))))\n)\n</code></pre>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part2/#lab-11","title":"Lab 11","text":""},{"location":"Notes%20of%20Courses/CS61A/CS61A_part2/#1_30","title":"1","text":"<p>Q3\u8fd9\u9898\u9700\u8981\u628a\u9898\u76ee\u610f\u601d\u7406\u89e3\u6e05\u695a\uff0c <code>CallExpr</code> \u5b9e\u4f8b\u4e2d\u7684 <code>operator</code> \u548c <code>operands</code> \u76f8\u5f53\u4e8e\u53d8\u91cf\u540d\uff0c\u9700\u8981\u8c03\u7528\u5b83\u4eec\u7684 <code>eval</code> \u65b9\u6cd5\u5e76\u4f20\u5165\u73af\u5883\u6765\u83b7\u53d6\u5bf9\u5e94\u7684\u503c\u6216\u8005\u5b9e\u4f8b\uff0c</p> <p>\u6700\u540e\uff0c\u64cd\u4f5c\u7b26 <code>operator</code> \u9700\u8981\u8c03\u7528 <code>apply</code> \u65b9\u6cd5\u6765\u8fdb\u884c\u4f7f\u7528</p> <p>Hint: Since the operator and operands are all instances of <code>Expr</code>, you can evaluate them by calling their <code>eval</code> methods. Also, you can apply a function (an instance of <code>PrimitiveFunction</code> or <code>LambdaFunction</code>) by calling its <code>apply</code> method, which takes in a list of arguments (<code>Value</code> instances).</p> code <pre><code>class CallExpr(Expr):\n    def eval(self, env):\n        return self.operator.eval(env).apply([operand.eval(env) for operand in self.operands])\n</code></pre>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part2/#2_25","title":"2","text":"<p>Q4\u4e2d\uff0c\u9700\u8981\u66f4\u65b0\u4ee5\u5b57\u5178\u5f62\u5f0f\u5b58\u50a8\u7684\u73af\u5883\uff0c\u7ed3\u5408Q3\u7684\u51fd\u6570\u8bf4\u660e\uff0c\u53ef\u4ee5\u77e5\u9053\u53ef\u4ee5\u4f7f\u7528\u5b57\u5178\u7684 <code>update</code> \u65b9\u6cd5\uff0c</p> <p>\u5728\u7ec8\u7aef\u4e2d\u8bd5\u4e86\u4e00\u4e0b</p> <pre><code>&gt;&gt;&gt; dict\n&lt;class 'dict'&gt;\n&gt;&gt;&gt; dict.update\n&lt;method 'update' of 'dict' objects&gt;\n&gt;&gt;&gt; dict.extend\nTraceback (most recent call last):\nFile \"&lt;stdin&gt;\", line 1, in &lt;module&gt;\nAttributeError: type object 'dict' has no attribute 'extend'\n&gt;&gt;&gt; dict.append\nTraceback (most recent call last):\nFile \"&lt;stdin&gt;\", line 1, in &lt;module&gt;\nAttributeError: type object 'dict' has no attribute 'append'\n</code></pre> <p><code>dict.update()</code> \u6ca1\u6709\u8fd4\u56de\u503c(\u548c\u5217\u8868\u7684 <code>append</code> \u548c <code>extend</code> \u4e00\u6837)\uff0c\u6240\u4ee5\u4e00\u5f00\u59cb\u6211\u7528</p> <pre><code>new_env = self.parent.copy().update(dict(zip(self.parameters, arguments)))\n</code></pre> <p>\u7136\u540e\u62a5\u4e86 <code>NoneType</code> \u7684\u9519\u8bef\u3002</p> code <pre><code>class LambdaFunction(Value):\n    def apply(self, arguments):\n        if len(self.parameters) != len(arguments):\n            raise TypeError(\"Oof! Cannot apply number {} to arguments {}\".format(\n                comma_separated(self.parameters), comma_separated(arguments)))\n        \"*** YOUR CODE HERE ***\"\n        new_env = self.parent.copy()\n        new_env.update(dict(zip(self.parameters, arguments)))\n        return self.body.eval(new_env)\n</code></pre>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part2/#3_19","title":"3","text":"<p>Q5\u6ca1\u4ec0\u4e48\u660e\u786e\u7684\u8981\u6c42\uff0c\u6211\u76f4\u63a5\u5728</p> <pre><code>except (SyntaxError, NameError, TypeError, OverflowError, ZeroDivisionError) as err:\n</code></pre> <p>\u8fd9\u4e00\u884c\u6dfb\u52a0\u4e86 <code>OverflowError</code> \u548c <code>ZeroDivisionError</code></p>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part2/#project-scheme","title":"Project Scheme","text":""},{"location":"Notes%20of%20Courses/CS61A/CS61A_part2/#1_31","title":"1","text":"<p>Problem 1\u7684\u524d\u9762\u67d0\u9898\u6211\u5361\u4e86\u4e00\u5c0f\u4f1a\ud83d\ude05</p> <pre><code>&gt;&gt;&gt; from scheme_reader import *\n&gt;&gt;&gt; tokens = tokenize_lines([\"(+ 1 \", \"(23 4)) (\"])\n&gt;&gt;&gt; src = Buffer(tokens)\n&gt;&gt;&gt; src.current()\n? ...\n-- OK! --\n\n&gt;&gt;&gt; src.pop_first()\n? ...\n-- OK! --\n\n&gt;&gt;&gt; src.current()\n? ...\n-- OK! --\n\n&gt;&gt;&gt; src.pop_first()\n? ...\n-- OK! --\n\n&gt;&gt;&gt; src.pop_first()\n? ...\n-- OK! --\n\n&gt;&gt;&gt; scheme_read(src)  # Removes the next complete expression in src and returns it as a Pair\n? \n</code></pre> <p>\u6700\u540e\u662f\u770b\u4e86 <code>scheme_reader.py</code> \u4e2d <code>scheme_read</code> \u7684\u51fd\u6570\u8bf4\u660e\u4e2d</p> <pre><code>def scheme_read(src):\n    \"\"\"Read the next expression from SRC, a Buffer of tokens.\n\n    ...\n    &gt;&gt;&gt; scheme_read(Buffer(tokenize_lines(['(+ 1 2)'])))\n    Pair('+', Pair(1, Pair(2, nil)))\n    \"\"\"\n</code></pre> <p>\u624d\u660e\u767d <code>returns it as a Pair</code> \u5177\u4f53\u8fd4\u56de\u662f\u4ec0\u4e48\u6837\u5b50\u3002</p> <p>\u7136\u540e\u770b\u5230\u4e86\u9898\u76ee\u8bf4\u660e\u4e2d\u7684</p> <p><code>scheme_read</code>:</p> <ul> <li>If the current token is <code>(</code>, the expression is a pair or list. Call <code>read_tail</code> on the rest of <code>src</code> and return its result.</li> </ul> <p><code>read_tail</code>:</p> <ul> <li>If the token is <code>)</code>, then we've reached the end of the list or pair. Remove this token from the buffer and return the <code>nil</code> object.</li> </ul> <p>\u6240\u4ee5\u660e\u767d\u53ea\u4f1a\u8bfb\u53d6\u5230\u7b2c\u4e00\u4e2a\u53f3\u62ec\u53f7 <code>)</code> \uff0c\u56e0\u6b64\u6700\u540e\u6b63\u786e\u7b54\u6848\u662f</p> <pre><code>Pair(23, Pair(4, nil))\n</code></pre> <p>\u4f46\u662f\u6709\u4e2a\u5730\u65b9\u611f\u89c9\u6709\u70b9\u5c0f\u79bb\u8c31\ud83d\ude05\uff0c\u5c11\u4e86\u4e2a\u7a7a\u683c\u5c45\u7136\u663e\u793a\u9519\u8bef</p> <pre><code>? Pair(23, Pair(4,nil))\n-- Not quite. Try again! --\n\n? Pair(23, Pair(4, nil))\n-- OK! --\n</code></pre> <p>\u5728\u5b9e\u73b0 <code>read_tail</code> \u65f6\uff0c\u610f\u8bc6\u5230\u9898\u76ee\u8bf4\u660e\u4e2d\u7684\u8fd9\u53e5\u8bdd</p> <p>Both functions mutate the buffer, removing the tokens that have already been processed.</p> <p>\u5c31\u662f\u8bf4\uff0c(\u6bd4\u5982\u88ab <code>scheme_read</code> \u8c03\u7528\u7684) <code>read_tail</code> \u4e2d\u9700\u8981\u7a81\u53d8 <code>src</code> (\u79fb\u9664\u5df2\u7ecf\u4f7f\u7528\u8fc7\u7684\u4ee4\u724c)\uff0c\u8fd9\u6837\u5728 <code>read_tail</code> \u4e2d\u4f7f\u7528\u8fc7\u7684 \u4ee4\u724c tokens \uff0c\u5c31\u4e0d\u4f1a\u88ab <code>scheme_read</code> \u6216\u8005\u4e0a\u4e00\u5c42 <code>read_tail</code> \u518d\u6b21\u4f7f\u7528</p> <p>\u6ca1\u60f3\u5230Problem 1\u5c31\u5199\u4e86\u534a\u5c0f\u65f6(\u7b97\u4e0a\u89e3\u9501\u82b1\u4e86\u4e00\u5c0f\u65f6\ud83d\ude07)\u3002</p> <p>\u8fd9\u9898\u4e3b\u8981\u662f\u9700\u8981\u5b8c\u5168\u7406\u89e3\u9898\u76ee\u7684\u610f\u601d\uff0c\u5982\u679c\u6709bug\u5c31\u56de\u53bb\u91cd\u65b0\u7406\u89e3\u9898\u76ee(\u4ed4\u7ec6\u9605\u8bfb\u9898\u76ee\u7684\u8bf4\u660e)\u5c31\u597d\u4e86\u3002</p> <p>\u4e00\u5f00\u59cb\u6211\u5199\u7684\u662f</p> <pre><code>def scheme_read(src):\n    if src.current() is None:\n        raise EOFError\n    val = src.pop_first() # Get and remove the first token\n    if val == 'nil':\n        \"*** YOUR CODE HERE ***\"\n        return nil\n    elif val == '(':\n        \"*** YOUR CODE HERE ***\"\n        return read_tail(src)\n    ...\ndef read_tail(src):\n    try:\n        if src.current() is None:\n            raise SyntaxError('unexpected end of file')\n        elif src.current() == ')':\n            \"*** YOUR CODE HERE ***\"\n            src.pop_first()\n            return nil\n        else:\n            \"*** YOUR CODE HERE ***\"\n            return Pair(src.pop_first(), read_tail(src))\n    except EOFError:\n        raise SyntaxError('unexpected end of file')\n</code></pre> <p>\u7136\u540e\u62a5\u4e86\u8fd9\u6837\u7684\u9519\u8bef</p> <pre><code>&gt;&gt;&gt; read_tail(Buffer(tokenize_lines(['(2)'])))\nPair('(', Pair(2, nil))\n\n# Error: expected\n#     SyntaxError\n# but got\n#     Pair('(', Pair(2, nil))\n</code></pre> <p>\u7136\u540e\u770b\u5230\u4e86\u9898\u76ee\u4e2d\u7684</p> <p><code>read_tail</code>:</p> <ul> <li> <p>If none of the above cases apply, the next token is the operator in a combination, e.g. src contains <code>+ 2 3)</code>. To parse this:</p> <ol> <li> <p><code>scheme_read</code> the next complete expression in the buffer.</p> <p>...</p> </li> </ol> </li> </ul> <p>\u4e8e\u662f\u660e\u767d\u5982\u679c\u5728 <code>read_tail</code> \u4e2d\u8bfb\u5230\u5de6\u62ec\u53f7 <code>(</code> \uff0c\u5c31\u610f\u5473\u7740\u8bfb\u5230\u4e86\u5d4c\u5957\u7684\u8868\u8fbe\u5f0f\uff0c\u9700\u8981\u8c03\u7528 <code>scheme_read</code> \u6765\u5904\u7406\u8fd9\u4e2a\u5185\u5c42\u7684\u8868\u8fbe\u5f0f\uff0c\u56e0\u6b64\u6539\u6210\u4e86</p> <pre><code>if src.current() == '(':\n    return Pair(scheme_read(src), read_tail(src))\nreturn Pair(src.pop_first(), read_tail(src))\n</code></pre> <p>\u518d\u6b21\u6d4b\u8bd5\uff0c\u539f\u6765\u9519\u8bef\u7684\u5730\u65b9\u901a\u8fc7\u4e86\uff0c\u4f46\u662f\u51fa\u73b0\u4e86\u65b0\u7684\u62a5\u9519</p> <pre><code>&gt;&gt;&gt; read_line('(a)')\nnil\n\n# Error: expected\n#     Pair('a', nil)\n# but got\n#     nil\n</code></pre> <p>\u8fdb\u884c\u5206\u6790\uff0c\u611f\u89c9\u4e0a\u4e00\u4e2a\u9519\u8bef\u4e5f\u548c\u8fd9\u4e2a\u5dee\u4e0d\u591a\uff0c\u4f46\u662f\u5df2\u7ecf\u88ab\u89e3\u51b3\uff0c\u8bf4\u660e\u95ee\u9898\u4e0d\u5728 <code>read_tail</code> \u4e2d\uff0c\u6240\u4ee5\u5e94\u8be5\u5728 <code>scheme_read</code> \u4e2d\uff0c\u4e8e\u662f\u8fdb\u884c\u67e5\u770b\uff0c\u53d1\u73b0\u8fd9\u91cc\u5df2\u7ecf\u5f39\u51fa\u8fc7\u4ee4\u724c\u4e86</p> <pre><code>val = src.pop_first() # Get and remove the first token\n</code></pre> <p>\u6240\u4ee5\u5c06\u4e4b\u524d\u7684\u4ee3\u7801\u4fee\u6539\u540e\uff0c\u6700\u540e\u7ec8\u4e8e\u901a\u8fc7\ud83d\ude2d</p> code <pre><code>def scheme_read(src):\n    if src.current() is None:\n        raise EOFError\n    val = src.pop_first() # Get and remove the first token\n    if val == 'nil':\n        # BEGIN PROBLEM 1\n        \"*** YOUR CODE HERE ***\"\n        return nil\n        # END PROBLEM 1\n    elif val == '(':\n        # BEGIN PROBLEM 1\n        \"*** YOUR CODE HERE ***\"\n        return read_tail(src)\n        # END PROBLEM 1\n    elif val == \"'\":\n        # BEGIN PROBLEM 6\n        \"*** YOUR CODE HERE ***\"\n        # END PROBLEM 6\n    elif val not in DELIMITERS:\n        return val\n    else:\n        raise SyntaxError('unexpected token: {0}'.format(val))\ndef read_tail(src):\n    try:\n        if src.current() is None:\n            raise SyntaxError('unexpected end of file')\n        elif src.current() == ')':\n            # BEGIN PROBLEM 1\n            \"*** YOUR CODE HERE ***\"\n            src.pop_first()\n            return nil\n            # END PROBLEM 1\n        else:\n            # BEGIN PROBLEM 1\n            \"*** YOUR CODE HERE ***\"\n            if src.current() == '(':\n                return Pair(scheme_read(src), read_tail(src))\n            return Pair(src.pop_first(), read_tail(src))\n            # END PROBLEM 1\n    except EOFError:\n        raise SyntaxError('unexpected end of file')\n</code></pre> <p>Problem 13\u4e2d\u53d1\u73b0\u4e86 \u7531\u4e8eProblem 1\u4e2d\u4ee3\u7801\u5b58\u5728\u6f0f\u6d1e \u800c\u5bfc\u81f4\u7684\u9519\u8bef\uff0c\u91cd\u65b0\u9605\u8bfb\u9898\u76ee\u540e\uff0c\u5c06\u4ee3\u7801\u4fee\u6539\u6b63\u786e(\u5177\u4f53\u53ef\u89c1\u4e8e\u7b2c7\u6761Problem 13)</p> code <pre><code>def scheme_read(src):\n    if src.current() is None:\n        raise EOFError\n    val = src.pop_first() # Get and remove the first token\n    if val == 'nil':\n        # BEGIN PROBLEM 1\n        \"*** YOUR CODE HERE ***\"\n        return nil\n        # END PROBLEM 1\n    elif val == '(':\n        # BEGIN PROBLEM 1\n        \"*** YOUR CODE HERE ***\"\n        return read_tail(src)\n        # END PROBLEM 1\n    elif val == \"'\":\n        # BEGIN PROBLEM 6\n        \"*** YOUR CODE HERE ***\"\n        # END PROBLEM 6\n    elif val not in DELIMITERS:\n        return val\n    else:\n        raise SyntaxError('unexpected token: {0}'.format(val))\ndef read_tail(src):\n    try:\n        if src.current() is None:\n            raise SyntaxError('unexpected end of file')\n        elif src.current() == ')':\n            # BEGIN PROBLEM 1\n            \"*** YOUR CODE HERE ***\"\n            src.pop_first()\n            return nil\n            # END PROBLEM 1\n        else:\n            # BEGIN PROBLEM 1\n            \"*** YOUR CODE HERE ***\"\n            return Pair(scheme_read(src), read_tail(src))\n            # END PROBLEM 1\n    except EOFError:\n        raise SyntaxError('unexpected end of file')\n</code></pre>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part2/#2_26","title":"2","text":"<p>Problem 4\uff0c\u4e00\u5f00\u59cb\u6211\u5199\u7684\u662f</p> <pre><code>operator = env.lookup(first)\nvalidate_procedure(operator)\noperands = rest.map(lambda x: env.lookup(x))\nreturn scheme_apply(operator, operands, env)\n</code></pre> <p>\u4f46\u662f\u62a5\u4e86\u8fd9\u6837\u7684\u9519\u8bef</p> <pre><code>&gt;&gt;&gt; from scheme_reader import *\n&gt;&gt;&gt; from scheme import *\n&gt;&gt;&gt; expr = read_line('(+ 2 2)')\n&gt;&gt;&gt; scheme_eval(expr, create_global_frame()) # Type SchemeError if you think this errors\nTraceback (most recent call last):\n  ...\nscheme_builtins.SchemeError: unknown identifier: 2\n\n# Error: expected\n#     4\n# but got\n#     Traceback (most recent call last):\n#       ...\n#     SchemeError: unknown identifier: 2\n</code></pre> <p>\u7136\u540e\u7a81\u7136\u60f3\u5230 <code>2</code> \u5e76\u4e0d\u662f\u4e00\u4e2a \u7b26\u53f7 symbol \uff0c\u6240\u4ee5 <code>env.lookup(2)</code> \u5e94\u8be5\u662f\u4f1a\u62a5\u9519\uff0c\u7136\u540e\u53c8\u4f1a\u60f3\u8d77\u9898\u76ee\u4e2d\u7684</p> <p>You'll have to recursively call <code>scheme_eval</code> in the first two steps.</p> <p>\u6240\u4ee5\u5c31\u77e5\u9053\u9700\u8981\u5982\u4f55\u4fee\u6539\u4e86\uff0c\u6700\u540e\u4fee\u6539\u540e\u901a\u8fc7\u4e86\u6d4b\u8bd5</p> code <pre><code>def scheme_eval(expr, env, _=None): # Optional third argument is ignored\n    # Evaluate atoms\n    if scheme_symbolp(expr):\n        return env.lookup(expr)\n    elif self_evaluating(expr):\n        return expr\n\n    # All non-atomic expressions are lists (combinations)\n    if not scheme_listp(expr):\n        raise SchemeError('malformed list: {0}'.format(repl_str(expr)))\n    first, rest = expr.first, expr.rest\n    if scheme_symbolp(first) and first in SPECIAL_FORMS:\n        return SPECIAL_FORMS[first](rest, env)\n    else:\n        # BEGIN PROBLEM 4\n        \"*** YOUR CODE HERE ***\"\n        operator = scheme_eval(first, env)\n        validate_procedure(operator)\n        operands = rest.map(lambda x: scheme_eval(x, env))\n        return scheme_apply(operator, operands, env)\n        # END PROBLEM 4\n</code></pre>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part2/#3_20","title":"3","text":"<p>Problem 5\uff0c\u6ce8\u610f\u9700\u8981\u533a\u5206\u7b2c\u4e8c\u4e2a\u64cd\u4f5c\u6570\u9700\u8981\u901a\u8fc7\u6c42\u503c\u5c06\u7b26\u53f7\u6216\u8868\u8fbe\u5f0f\u53d8\u6210\u5bf9\u5e94\u503c</p> code <pre><code>def do_define_form(expressions, env):\n    validate_form(expressions, 2) # Checks that expressions is a list of length at least 2\n    target = expressions.first\n    if scheme_symbolp(target):\n        validate_form(expressions, 2, 2) # Checks that expressions is a list of length exactly 2\n        # BEGIN PROBLEM 5\n        \"*** YOUR CODE HERE ***\"\n        env.define(target, scheme_eval(expressions.rest.first, env))\n        return target\n        # END PROBLEM 5\n    ...\n</code></pre>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part2/#4_12","title":"4","text":"<p>Problem 6\u4e2d\uff0c\u4e00\u5f00\u59cb\u5728 <code>scheme_read</code> \u4e2d\u5199\u7684\u662f</p> <pre><code>return Pair(\"quote\", scheme_read(src))\n</code></pre> <p>\u4f46\u662f\u62a5\u9519\u4e86</p> <pre><code>scm&gt; ''hello\nhello str\n# Error: cdr can only be a pair, nil, or a promise but was hello\n\n# Error: expected\n#     (quote hello)\n# but got\n#     Traceback (most recent call last):\n#       ...\n#     SchemeError: cdr can only be a pair, nil, or a promise but was hello\n</code></pre> <p>\u7ecf\u8fc7\u601d\u8003\uff0c\u5927\u6982\u7406\u89e3\u4e86\uff0c\u6211\u611f\u89c9 <code>'</code> \u53ef\u4ee5\u7406\u89e3\u4e3a\u53ea\u4f1a\u6709\u4e00\u4e2a\u53c2\u6570/\u64cd\u4f5c\u6570\u7684\u51fd\u6570(\u56e0\u4e3a\u5f15\u53f7\u540e\u53ea\u4f1a\u6709\u4e00\u4e2a\u6700\u5916\u5c42\u7684\u62ec\u53f7)\uff0c\u56e0\u6b64\u8fd4\u56de\u7684\u7ed3\u6784\u5c31\u4f1a\u662f</p> <pre><code>Pair(\"quote\", Pair(..., nil))\n</code></pre> <p><code>...</code> \u5c31\u662f\u88ab\u5f15\u7528\u7684\u90e8\u5206\uff0c\u4e5f\u5c31\u662f\u90a3\u552f\u4e00\u7684\u53c2\u6570\u3002</p> code scheme.py<pre><code>def do_quote_form(expressions, env):\n    validate_form(expressions, 1, 1)\n    # BEGIN PROBLEM 6\n    \"*** YOUR CODE HERE ***\"\n    return expressions.first\n    # END PROBLEM 6\n</code></pre> scheme_reader.py<pre><code>def scheme_read(src):\n    ...\n    elif val == \"'\":\n        # BEGIN PROBLEM 6\n        \"*** YOUR CODE HERE ***\"\n        return Pair(\"quote\", Pair(scheme_read(src), nil))\n        # END PROBLEM 6\n    ...\ndef read_tail(src):\n    try:\n        ...\n        else:\n            # BEGIN PROBLEM 1\n            \"*** YOUR CODE HERE ***\"\n            # if src.current() == '(':\n            if src.current() in ('(', \"'\"):\n                ...\n            ...\n            # END PROBLEM 1\n    ...\n</code></pre>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part2/#5_9","title":"5","text":"<p>\u89e3\u9501Problem 8\u7684\u8fd9\u9898\u7b54\u6848(\u53c2\u8003 <code>do_lambda_form</code> \u51fd\u6570\u8bf4\u660e\u53ef\u4ee5\u5f97\u77e5\u662f <code>Pair(...)</code> \u7684\u5f62\u5f0f)\u6709\u4e9b\u96be\u6572(\u4e3b\u8981\u662f\u56e0\u4e3a\u592a\u957f\u4e86\ud83d\ude05)</p> <pre><code>&gt;&gt;&gt; from scheme_reader import *\n&gt;&gt;&gt; from scheme import *\n&gt;&gt;&gt; env = create_global_frame()\n&gt;&gt;&gt; lambda_line = read_line(\"(lambda (a b c) (+ a (* b c)))\")\n&gt;&gt;&gt; lambda_proc = do_lambda_form(lambda_line.rest, env)\n&gt;&gt;&gt; lambda_proc.formals\n? Pair('a', Pair('b', Pair('c', nil)))\n-- OK! --\n\n&gt;&gt;&gt; lambda_proc.body # Remember that the body is a *list* of expressions!\n? Pair(Pair('+', Pair('a', Pair(Pair('*', Pair('b', Pair('c', nil))), nil))), nil)\n-- OK! --\n</code></pre>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part2/#6_4","title":"6","text":"<p>Problem 10\uff0c\u8fd9\u9898\u4e0d\u96be\uff0c\u4f46\u6211\u7528\u5faa\u73af\u8fed\u4ee3\u5b9e\u73b0\u4e86\u4e4b\u540e\uff0c\u7a81\u7136\u60f3\u5230 <code>Pair</code> \u6709 <code>map</code> \u65b9\u6cd5\uff0c\u6240\u4ee5\u7a81\u53d1\u5947\u60f3\u60f3\u7528 <code>map</code> \u6765\u5b9e\u73b0(\u5229\u7528 <code>map</code> \u6765\u83b7\u53d6 <code>Pair</code> \u4e2d\u6240\u6709\u7684\u5143\u7d20)</p> code \u5b9e\u73b0\u4e00\u5b9e\u73b0\u4e8c <pre><code>class Frame(object):\n    ...\n    def make_child_frame(self, formals, vals):\n        if len(formals) != len(vals):\n            raise SchemeError('Incorrect number of arguments to function call')\n        # BEGIN PROBLEM 10\n        \"*** YOUR CODE HERE ***\"\n        child = Frame(self)\n        while formals is not nil:\n            child.define(formals.first, vals.first)\n            formals, vals = formals.rest, vals.rest\n        return child\n        # END PROBLEM 10\n</code></pre> <pre><code>class Frame(object):\n    ...\n    def make_child_frame(self, formals, vals):\n        if len(formals) != len(vals):\n            raise SchemeError('Incorrect number of arguments to function call')\n        # BEGIN PROBLEM 10\n        \"*** YOUR CODE HERE ***\"\n        child = Frame(self)\n        formals_list, vals_list = [], []\n        formals.map(lambda x: formals_list.append(x))\n        vals.map(lambda x: vals_list.append(x))\n        for formal, val in zip(formals_list, vals_list):\n            child.define(formal, val)\n        return child\n        # END PROBLEM 10\n</code></pre>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part2/#7_3","title":"7","text":"<p>Problem 13\u4e0d\u7b97\u590d\u6742\uff0c\u4f46\u6211\u5199\u51fa\u6765\u4e4b\u540e\uff0c\u62a5\u4e86\u4e00\u4e2a\u9519\u8bef</p> <pre><code>scm&gt; (cond ((= 1 1) nil))\n# Error: unknown identifier: nil\n\n# Error: expected\n#     ()\n# but got\n#     Traceback (most recent call last):\n#       ...\n#     SchemeError: unknown identifier: nil\n</code></pre> <p>\u7ecf\u8fc7\u4fee\u6539\u4ee3\u7801\u6765\u67e5\u770b\u9519\u8bef\u5730\u65b9\u7684\u76f8\u5173\u4fe1\u606f\uff0c\u8fdb\u884c\u5230\u9519\u8bef\u53d1\u751f\u7684\u5730\u65b9\u524d\uff0c\u6253\u5370 <code>clause.rest</code> \u663e\u793a <code>Pair('nil', nil)</code> \uff0c\u8fd9\u610f\u5473\u7740\u662f\u5728\u8bfb\u53d6\u7684\u65f6\u5019\u6ca1\u6709\u8bfb\u53d6\u6b63\u786e\uff0c\u4e8e\u662f\u56de\u5934\u67e5\u770bProblem 1\u7684 <code>scheme_read</code> \u548c <code>read_tail</code> \uff0c</p> <p>\u800c <code>scheme_read</code> \u4e2d\u662f\u6709\u5904\u7406 <code>'nil'</code> \u7684\u76f8\u5173\u4ee3\u7801\u7684</p> <pre><code>if val == 'nil':\n    # BEGIN PROBLEM 1\n    \"*** YOUR CODE HERE ***\"\n    return nil\n    # END PROBLEM 1\n</code></pre> <p>\u5c1d\u8bd5\u76f4\u63a5\u8fd0\u884cscheme\u89e3\u91ca\u5668\u8fdb\u884c\u6d4b\u8bd5</p> <pre><code>python scheme.py\n</code></pre> <p>\u53d1\u73b0\u76f4\u63a5\u8f93\u5165 <code>nil</code> \u65f6\uff0c\u80fd\u6b63\u786e\u8f93\u51fa\u6210\u7a7a\u94fe\u8868 <code>()</code> \uff0c\u800c\u5f53 <code>nil</code> \u88ab\u5d4c\u5957\u5305\u542b\u65f6\uff0c\u5c31\u4e0d\u80fd\u88ab\u6b63\u5e38\u8f6c\u6362\uff0c\u6240\u4ee5\u9519\u8bef\u53d1\u751f\u5728 <code>read_tail</code> \u4e2d\uff0c</p> <pre><code>scm&gt; nil\n()\nscm&gt; (+ nil)\nError: unknown identifier: nil\n</code></pre> <p>\u4e8e\u662f\u91cd\u65b0\u56de\u53bb\u7406\u89e3\u9898\u76ee\u7684\u8bf4\u660e</p> <p>Quote</p> <p><code>read_tail</code>:</p> <ul> <li>If there are no more tokens, then the list is missing a close parenthesis and we should raise an error. (provided)</li> <li>If the token is <code>)</code>, then we've reached the end of the list or pair. Remove this token from the buffer and return the <code>nil</code> object.</li> <li>If none of the above cases apply, the next token is the operator in a combination, e.g. src contains <code>+ 2 3)</code>. To parse this:<ol> <li><code>scheme_read</code> the next complete expression in the buffer.</li> <li>Call <code>read_tail</code> to read the rest of the combination until the matching closing parenthesis.</li> <li>Return the results as a <code>Pair</code> instance, where the first element is the next complete expression from (1) and the second element is the rest of the combination from (2).</li> </ol> </li> </ul> <p>\u4e09\u4e2a\u60c5\u51b5\u521a\u597d\u5bf9\u5e94\u6240\u7ed9\u7684\u4ee3\u7801\u6846\u67b6\u4e2d\u7684 <code>if-elif-else</code> \u7684\u4e09\u5757\u4ee3\u7801\uff0c\u56e0\u6b64\uff0c\u6839\u636e\u9898\u76ee\u7684\u610f\u601d\uff0c <code>else</code> \u5904\u7684\u4ee3\u7801\u5e94\u8be5\u4e3a</p> <pre><code>return Pair(scheme_read(src), read_tail(src))\n</code></pre> <p>\u6d4b\u8bd5Problem 1\u901a\u8fc7\uff0c\u518d\u6d4b\u8bd5Problem 13\uff0c\u7ec8\u4e8e\u901a\u8fc7\u4e86\ud83d\ude07</p> code <pre><code>def do_cond_form(expressions, env):\n    while expressions is not nil:\n        clause = expressions.first\n        validate_form(clause, 1)\n        if clause.first == 'else':\n            test = True\n            if expressions.rest != nil:\n                raise SchemeError('else must be last')\n        else:\n            test = scheme_eval(clause.first, env)\n        if is_true_primitive(test):\n            # BEGIN PROBLEM 13\n            \"*** YOUR CODE HERE ***\"\n            if clause.rest is nil:\n                return test\n            return eval_all(clause.rest, env)\n            # END PROBLEM 13\n        expressions = expressions.rest\n</code></pre>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part2/#8_2","title":"8","text":"<p>Problem 14\u4e2d\uff0c\u9700\u8981\u6ce8\u610f \u6709\u53ef\u80fd\u8981\u88ab\u8d4b\u503c\u7684\u7b26\u53f7\u5bf9\u5e94\u7684\u662f\u4e00\u4e2a\u8868\u8fbe\u5f0f\uff0c\u6240\u4ee5\u9700\u8981\u8fdb\u884c\u6c42\u503c</p> code <pre><code>def make_let_frame(bindings, env):\n    if not scheme_listp(bindings):\n        raise SchemeError('bad bindings list in let form')\n    names, values = nil, nil\n    # BEGIN PROBLEM 14\n    \"*** YOUR CODE HERE ***\"\n    while bindings is not nil:\n        binding = bindings.first\n        validate_form(binding, 2, 2)\n        names = Pair(binding.first, names)\n        values = Pair(scheme_eval(binding.rest.first, env), values)\n        bindings = bindings.rest\n    validate_formals(names)\n    # END PROBLEM 14\n    return env.make_child_frame(names, values)\n</code></pre>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part2/#9_2","title":"9","text":"<p>Problem 16\u611f\u89c9\u86ee\u6709\u610f\u601d</p> code <pre><code>(define (merge comp list1 list2)\n  ; BEGIN PROBLEM 16\n  'replace-this-line\n  (cond ((equal? list1 nil) list2)\n        ((equal? list2 nil) list1)\n        (else (let ((x (car list1)) (y (car list2)))\n                   (if (comp x y)\n                       (cons x (merge comp (cdr list1) list2))\n                       (cons y (merge comp list1 (cdr list2)))))))\n  )\n  ; END PROBLEM 16\n</code></pre> <p>Problem 17\u4ee3\u7801\u6709\u70b9\u7ed5(\u96be\u5199\uff0cdebug\u8d77\u6765\u4e5f\u75db\u82e6\ud83d\ude05)</p> code <pre><code>(define (nondecreaselist s)\n    ; BEGIN PROBLEM 17\n    'replace-this-line\n    (cond ((equal? s nil) nil)\n          ((equal? (cdr s) nil) (list s))\n          ((&gt; (car s) (cadr s)) (cons (list (car s)) (nondecreaselist (cdr s))))\n          (else (let ((rest (nondecreaselist (cdr s))))\n                     (cons (cons (car s) (car rest)) (cdr rest)))))\n    )\n    ; END PROBLEM 17\n</code></pre>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part2/#10_2","title":"10","text":"<p>Extra Credit\uff0c\u8fd9\u9898\u6709\u70b9\u96be\u5ea6\ud83d\ude05(\u4f9d\u6b21\u4fee\u6539\u4e86\u597d\u51e0\u6b21\u6700\u7ec8\u624d\u5168\u90e8\u901a\u8fc7)\uff0c</p> <p>\u4e00\u5f00\u59cb\u6211\u5199\u51fa\u6765</p> <pre><code>(define (let-to-lambda expr)\n  (cond ((atom? expr)\n         ; BEGIN PROBLEM EC\n         'replace-this-line\n         expr\n         ; END PROBLEM EC\n         )\n        ((quoted? expr)\n         ; BEGIN PROBLEM EC\n         'replace-this-line\n         (cons 'quote (cdr expr))\n         ; END PROBLEM EC\n         )\n        ((or (lambda? expr)\n             (define? expr))\n         (let ((form   (car expr))\n               (params (cadr expr))\n               (body   (cddr expr)))\n           ; BEGIN PROBLEM EC\n           'replace-this-line\n           (cons form (cons params body))\n           ; END PROBLEM EC\n           ))\n        ((let? expr)\n         (let ((values (cadr expr))\n               (body   (cddr expr)))\n           ; BEGIN PROBLEM EC\n           'replace-this-line\n           (let ((values (zip values)))\n                (cons (cons 'lambda (cons (car values) body)) (cadr values)))\n           ; END PROBLEM EC\n           ))\n        (else\n         ; BEGIN PROBLEM EC\n         'replace-this-line\n         expr\n         ; END PROBLEM EC\n         )))\n</code></pre> <p>\u7136\u540e\u6839\u636e\u6d4b\u8bd5\u7528\u4f8b\u7684\u9519\u8bef\uff0c\u53d1\u73b0\u8fd8\u9700\u8981\u9012\u5f52\u5730\u5e94\u7528\u8868\u8fbe\u5f0f\uff0c\u4f9d\u6b21\u53d1\u73b04\u4e2a\u5730\u65b9\u9700\u8981\u9012\u5f52\uff1a</p> <ul> <li><code>(cons form (cons params body))</code> \u7684 <code>body</code> </li> <li><code>(cons (cons 'lambda (cons (car values) body)) (cadr values)))</code> \u7684 <code>body</code> \u548c <code>(cadr values)</code> </li> <li>\u6700\u540e\u7684 <code>expr</code></li> </ul> <p>\u5e76\u4e14\u7531\u4e8e\u662f\u5f88\u591a\u4e2a\u8868\u8fbe\u5f0f\uff0c\u6240\u4ee5\u9700\u8981\u7528\u5230 <code>map</code> \u51fd\u6570</p> code <pre><code>(define (let-to-lambda expr)\n  (cond ((atom? expr)\n         ; BEGIN PROBLEM EC\n         'replace-this-line\n         expr\n         ; END PROBLEM EC\n         )\n        ((quoted? expr)\n         ; BEGIN PROBLEM EC\n         'replace-this-line\n         (cons 'quote (cdr expr))\n         ; END PROBLEM EC\n         )\n        ((or (lambda? expr)\n             (define? expr))\n         (let ((form   (car expr))\n               (params (cadr expr))\n               (body   (cddr expr)))\n           ; BEGIN PROBLEM EC\n           'replace-this-line\n           (cons form (cons params (map let-to-lambda body)))\n           ; END PROBLEM EC\n           ))\n        ((let? expr)\n         (let ((values (cadr expr))\n               (body   (cddr expr)))\n           ; BEGIN PROBLEM EC\n           'replace-this-line\n           (let ((values (zip values)))\n                (cons (cons 'lambda (cons (car values) (map let-to-lambda body))) (map let-to-lambda (cadr values))))\n           ; END PROBLEM EC\n           ))\n        (else\n         ; BEGIN PROBLEM EC\n         'replace-this-line\n         (map let-to-lambda expr)\n         ; END PROBLEM EC\n         )))\n</code></pre>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part2/#11_2","title":"11","text":"<p>Problem 11\uff0c\u8fd9\u9898\u9898\u76ee\u6211\u7406\u89e3\u4e86\u597d\u51e0\u904d\u6700\u540e\u624d\u611f\u89c9\u7b97\u662f\u5b8c\u5168\u7406\u89e3\u6b63\u786e</p> <p>Quote</p> <p>Complete the function <code>optimize_tail_calls</code> in <code>scheme.py</code>. It returns an alternative to <code>scheme_eval</code> that is properly tail recursive. That is, the interpreter will allow an unbounded number of active tail calls in constant space.</p> <p>The <code>Thunk</code> class represents a thunk, an expression that needs to be evaluated in an environment. When <code>scheme_optimized_eval</code> receives a non-atomic expression in a <code>tail</code> context, then it returns an <code>Thunk</code> instance. Otherwise, it should repeatedly call <code>prior_eval_function</code> until the result is a value, rather than a <code>Thunk</code>.</p> <p>A successful implementation will require changes to several other functions, including some functions that we provided for you. All expressions throughout your interpreter that are in a tail context should be evaluated by calling <code>scheme_eval</code> with <code>True</code> as a third argument. Your goal is to determine which expressions are in a tail context throughout your code.</p> <p>\u5728 <code>scheme.py</code> \u4e2d\u5b8c\u6210 <code>optimize_tail_calls</code> \u51fd\u6570\u3002\u5b83\u8fd4\u56de <code>scheme_eval</code> \u7684\u4e00\u79cd\u66ff\u4ee3\u65b9\u6cd5\uff0c\u53ef\u4ee5\u6b63\u786e\u5904\u7406\u5c3e\u9012\u5f52\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u89e3\u91ca\u5668\u5c06\u5141\u8bb8\u5728\u5e38\u91cf\u7a7a\u95f4\u5185\u6709\u65e0\u9650\u6570\u91cf\u7684\u6d3b\u52a8\u5c3e\u8c03\u7528\u3002</p> <p><code>Thunk</code> \u7c7b\u8868\u793a\u4e00\u4e2athunk\uff0c\u5373\u9700\u8981\u5728\u73af\u5883\u4e2d\u6c42\u503c\u7684\u8868\u8fbe\u5f0f\u3002\u5f53 <code>scheme_optimized_eval</code> \u5728 <code>\u5c3e</code> \u4e0a\u4e0b\u6587\u4e2d\u63a5\u6536\u5230\u4e00\u4e2a\u975e\u539f\u5b50\u8868\u8fbe\u5f0f\u65f6\uff0c\u5b83\u5c06\u8fd4\u56de\u4e00\u4e2a <code>Thunk</code> \u5b9e\u4f8b\u3002\u5426\u5219\uff0c\u5b83\u5e94\u8be5\u53cd\u590d\u8c03\u7528 <code>prior_eval_function</code>\uff0c\u76f4\u5230\u7ed3\u679c\u662f\u4e00\u4e2a\u503c\uff0c\u800c\u4e0d\u662f\u4e00\u4e2a <code>Thunk</code>\u3002</p> <p>\u6210\u529f\u7684\u5b9e\u73b0\u5c06\u9700\u8981\u5bf9\u5176\u4ed6\u51e0\u4e2a\u51fd\u6570\u8fdb\u884c\u66f4\u6539\uff0c\u5305\u62ec\u4e00\u4e9b\u6211\u4eec\u4e3a\u60a8\u63d0\u4f9b\u7684\u51fd\u6570\u3002 \u5728\u6574\u4e2a\u89e3\u91ca\u5668\u4e2d\uff0c\u6240\u6709\u5728\u5c3e\u4e0a\u4e0b\u6587\u4e2d\u7684\u8868\u8fbe\u5f0f\u90fd\u5e94\u901a\u8fc7\u8c03\u7528\u5e26\u6709 <code>True</code> \u4f5c\u4e3a\u7b2c\u4e09\u4e2a\u53c2\u6570\u7684 <code>scheme_eval</code> \u6765\u8fdb\u884c\u6c42\u503c\u3002\u60a8\u7684\u76ee\u6807\u662f\u786e\u5b9a\u4ee3\u7801\u4e2d\u54ea\u4e9b\u8868\u8fbe\u5f0f\u5728\u5c3e\u4e0a\u4e0b\u6587\u4e2d\u3002</p> <p>\u8fd9\u9898\u5927\u6982\u610f\u601d\u662f\uff0c\u9700\u8981\u4f18\u5316\u5904\u7406\u6c42\u503c\u90e8\u5206\uff0c\u5bf9\u4e8e \u5c3e\u9012\u5f52 tail recursive \u7684\u60c5\u51b5\u3002</p> <p>The <code>Thunk</code> class represents a thunk, an expression that needs to be evaluated in an environment. When <code>scheme_optimized_eval</code> receives a non-atomic expression in a <code>tail</code> context, then it returns an <code>Thunk</code> instance. Otherwise, it should repeatedly call <code>prior_eval_function</code> until the result is a value, rather than a <code>Thunk</code>.</p> <p>\u8fd9\u4e00\u6bb5\u5176\u5b9e\u4e0a\u6211\u8ba4\u4e3a\u5bf9\u5e94\u7684\u5c31\u662f\u63d0\u4f9b\u7684\u4ee3\u7801\u4e2d\u7684\u8fd9\u4e2a\u90e8\u5206(non-atomic \u521a\u597d\u5bf9\u5e94 <code>not scheme_symbolp(expr) and not self_evaluating(expr)</code> )</p> <pre><code>if tail and not scheme_symbolp(expr) and not self_evaluating(expr):\n    return Thunk(expr, env)\n</code></pre> <p>All expressions throughout your interpreter that are in a tail context should be evaluated by calling <code>scheme_eval</code> with <code>True</code> as a third argument. Your goal is to determine which expressions are in a tail context throughout your code.</p> <p>\u8fd9\u53e5\u8bf4\u7684\u662f\uff0c\u9898\u76ee\u7684\u5173\u952e\u5c31\u662f\u9700\u8981\u627e\u5230/\u60f3\u5230\u5224\u65ad\u5c3e\u9012\u5f52\u5f62\u5f0f/\u683c\u5f0f\u7684\u65b9\u6cd5\uff0c\u5e76\u8fdb\u884c\u5bf9\u5e94\u7684\u5904\u7406\u3002</p> <p>\u6700\u540e\u5c31\u662f\u8fd9\u4e00\u53e5\uff0c</p> <p>A successful implementation will require changes to several other functions, including some functions that we provided for you.</p> <p>\u662f\u8bf4\u6700\u7ec8\u7684\u5b9e\u73b0\u8fd8\u4f1a\u9700\u8981\u4fee\u6539\u4e00\u4e9b\u51fd\u6570\uff0c\u5305\u62ec\u63d0\u4f9b\u7684\u51fd\u6570\uff0c\u6240\u4ee5\u8fd9\u610f\u5473\u7740\u8fd9\u9898\u975e\u5e38\u5f00\u653e\uff0c\u5f88\u96be\uff0c\u6211\u5c1d\u8bd5\u4e86\u5f88\u4e45\u4e5f\u6ca1\u6709\u5c1d\u8bd5\u51fa\u6765\u3002</p> <p>\u6700\u540e\u770b\u5230 Lecture 35 \u548c 36 \u521a\u597d\u5c31\u662f Tail calls \u548c Macros \uff0c\u521a\u597d\u5206\u522b\u5bf9\u5e9419\u548c20\u9898\uff0c\u7136\u540e\u53bb\u770b\u4e86\u4e00\u4e0blecture 35\uff0c\u53d1\u73b0\u8bfe\u4e0a\u6709\u8bb2\u89e3\u8fd9\u4e00\u9898\uff0c\u6240\u4ee5\u5c31\u5148\u8df3\u8fc7\u8fd9\u4e00\u9898\u4e86\u3002(\u53d1\u73b020\u9898\u4e5f\u9700\u8981\u7528\u5230tail call\uff0c\u6240\u4ee5\u4e5f\u8df3\u8fc7\u4e86)</p>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part2/#12","title":"12","text":"<p>\u770b\u5b8c\u4e86\u6240\u6709\u8bfe\u7a0b\u4e4b\u540e\u7ee7\u7eed\u5c1d\u8bd5\u5b8c\u6210\u4e4b\u524d\u6ca1\u6709\u5b8c\u6210\u7684\u9898\u76ee\uff0c</p> <p>Problem 20 \u5b8f macro\uff0c\u8fd9\u9898\u4e0d\u7b97\u7279\u522b\u590d\u6742\uff0c\u6309\u7167\u9898\u76ee\u4e2d\u8bf4\u7684\uff0c\u5b9e\u73b0 <code>do_define_macro</code> \u51fd\u6570\u521b\u5efa\u4e00\u4e2a <code>MacroProcedure</code> \u7c7b\uff0c\u518d\u4fee\u6539\u4e00\u4e0b <code>scheme_eval</code> \u5c31\u884c\u4e86\uff0c</p> <p><code>do_define_macro</code> \u4e2d\u7684\u4ee3\u7801\u57fa\u672c\u4e0a\u53ef\u4ee5\u53c2\u8003 <code>do_define_form</code> \u7684\u4ee3\u7801\uff0c</p> <p><code>scheme_eval</code> \u4e2d\uff0c\u9700\u8981\u8c03\u7528 <code>MacroProcedure</code> \u7684 <code>apply_macro</code> \u65b9\u6cd5\uff0c\u5e76\u4e0d\u5148\u6c42\u503c\u800c\u662f\u76f4\u63a5\u4f20\u5165\u53c2\u6570\u7684\u539f\u59cb\u8868\u8fbe\u5f0f\uff0c\u4e00\u5f00\u59cb\u6211\u5199\u7684\u662f</p> <pre><code>return operator.apply_macro(rest, env)\n</code></pre> <p>\u4f46\u6d4b\u8bd5\u65f6\u663e\u793a\u8fd9\u91cc\u8fd4\u56de\u7684\u662f</p> <pre><code>scm&gt; (for i '(1 2 3)\n....      (if (= i 1)\n....          0\n....          i))\n(map (lambda (i) (if (= i 1) 0 i)) (quote (1 2 3)))\n\n# Error: expected\n#     (0 2 3)\n# but got\n#     (map (lambda (i) (if (= i 1) 0 i)) (quote (1 2 3)))\n</code></pre> <p>\u6240\u4ee5\u6700\u540e\u518d\u6dfb\u52a0\u4e00\u4e2a <code>scheme_eval</code> \u51fd\u6570\u5c31\u53ef\u4ee5\u4e86</p> code <pre><code>def do_define_macro(expressions, env):\n    # BEGIN Problem 20\n    \"*** YOUR CODE HERE ***\"\n    validate_form(expressions, 2)\n    target = expressions.first\n    if isinstance(target, Pair) and scheme_symbolp(target.first):\n        name = target.first\n        formals = target.rest\n        validate_formals(formals)\n        value = MacroProcedure(formals, expressions.rest, env)\n        env.define(name, value)\n        return name\n    else:\n        bad_target = target.first if isinstance(target, Pair) else target\n        raise SchemeError(\"non-symbol: {0}\".format(bad_target))\n    # END Problem 20\n</code></pre> <pre><code>def scheme_eval(expr, env, _=None): # Optional third argument is ignored\n    ...\n    else:\n        ...\n        validate_procedure(operator)\n        if isinstance(operator, MacroProcedure):\n            return scheme_eval(operator.apply_macro(rest, env), env)\n        ...\n</code></pre>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part2/#13","title":"13","text":"<p>Problem 19\uff0c\u505a\u8fd9\u9898\u82b1\u4e86\u597d\u4e45\u65f6\u95f4\uff0c\u4e5f\u5c1d\u8bd5\u4e86\u597d\u591a\u6b21\u3002</p> <p>\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u9898\u76ee\u4e2d\u6709\u4e00\u5904\u5199\u7684\u662f <code>prior_eval_function</code> \uff0c\u8fd9\u91cc\u53ef\u80fd\u662f\u5fd8\u8bb0\u8fdb\u884c\u4fee\u6539(20\u5e74\u590f\u5b63\u7684scheme project\u5bf9\u5e94\u7684\u4ee3\u7801\u662f <code>prior_eval_function</code> )\uff0c\u5e94\u8be5\u5bf9\u5e94\u7684\u662f\u4ee3\u7801\u4e2d\u7684 <code>original_scheme_eval</code></p> <p>\u521a\u5f00\u59cb\u662f\u89c9\u5f97\u9700\u8981\u5728 <code>optimized_eval</code> \u4e2d\u8fdb\u884c\u662f\u5426\u662f\u5c3e(\u8c03\u7528)\u683c\u5f0f(in tail context)\u7684\u5224\u65ad\uff0c\u4e8e\u662f\u5728\u51fd\u6570\u4e2d\u7f16\u5199</p> <pre><code>def in_tail_context(expr):\n    if isinstance(expr, Pair) and scheme_symbolp(expr.first):\n        first = expr.first\n        if first not in SPECIAL_FORMS and isinstance(env.lookup(first), LambdaProcedure):\n            return True\n        elif first == \"if\":\n            sub_expr_2 = expr.rest.rest.first\n            sub_expr_3 = expr.rest.rest.rest.first\n            return in_tail_context(sub_expr_2) or in_tail_context(sub_expr_3)\n        else:\n            return False\n    else:\n        return False\n</code></pre> <p>\u56e0\u4e3a\u5728lecture 35 Tail Calls\u91cc\uff0cJohn\u8bf4\u53ea\u9700\u8981\u6ce8\u610f \u6700\u540e\u7684\u8868\u8fbe\u5f0f\u662f\u8c03\u7528lambda\u51fd\u6570 \u548c <code>if</code> \u8868\u8fbe\u5f0f \u8fd9\u4e24\u79cd\u60c5\u51b5\uff0c</p> <p></p> <p>\u6240\u4ee5\u6211\u5c31\u53ea\u5bf9\u8fd9\u4e24\u79cd\u60c5\u51b5\u8fdb\u884c\u4e86\u5224\u65ad\u3002</p> <p>\u7136\u540e\uff0c\u6211\u7684\u60f3\u6cd5\u662f\uff0c\u5982\u679c\u4e0d\u7b26\u5408\u5c3e\u683c\u5f0f\uff0c\u5c31\u4f7f\u7528\u539f\u59cb\u7684eval\u51fd\u6570\uff0c\u5982\u679c\u7b26\u5408\u7684\u8bdd\uff0c\u90a3\u4e48\u5c31\u5e94\u8be5\u662f\u4f1a\u5f97\u5230 <code>Thunk</code> \u7c7b\u5b9e\u4f8b\uff0c\u90a3\u4e48\u5e94\u8be5\u5faa\u73af\u8fdb\u884c\u6c42\u503c(\u5c31\u4e0d\u4f1a\u9012\u5f52\u6ea2\u51fa)\uff0c\u4e8e\u662f</p> <pre><code>def optimize_tail_calls(original_scheme_eval):\n    def optimized_eval(expr, env, tail=False):\n        if tail and not scheme_symbolp(expr) and not self_evaluating(expr):\n            return Thunk(expr, env)\n\n        result = Thunk(expr, env)\n        # BEGIN PROBLEM 19\n        \"*** YOUR CODE HERE ***\"\n        def in_tail_context(expr):\n            ...\n\n        if not in_tail_context(expr):\n            return original_scheme_eval(expr, env)\n\n        while isinstance(result, Thunk):\n            result = original_scheme_eval(result.expr, result.env)\n        return result\n        # END PROBLEM 19\n    return optimized_eval\n</code></pre> <p>\u8fd9\u91cc\u60f3\u5230\u8981\u7528 <code>while</code> \u5faa\u73af\uff0c\u662f\u56e0\u4e3a\u539f\u59cb\u7684\u4ee3\u7801\u4e2d\u6709 <code>result = Thunk(expr, env)</code> \u611f\u89c9\u5f88\u50cf\u662f\u9700\u8981\u5faa\u73af\u8fdb\u884c\u8ba1\u7b97\u6700\u540e\u5f97\u5230\u4e0d\u662f <code>Thunk</code> \u7684 <code>result</code> \u3002</p> <p>\u4f46\u6d4b\u8bd5\u53d1\u73b0\u4e0d\u884c\uff0c</p> <p>\u7136\u540e\u634b\u4e86\u4e00\u4e0b\u4ee3\u7801\u7684\u6d41\u7a0b\uff0c\u611f\u89c9\u5e94\u8be5\u662f\u9700\u8981\u5728\u67d0\u4e2a\u81ea\u5b9a\u4e49\u7684\u5c3e\u9012\u5f52(\u6216\u8005\u8bf4body\u7b26\u5408\u5c3e\u683c\u5f0f)\u7684\u51fd\u6570\u8fd4\u56debody\u65f6\u8fd4\u56de <code>Thunk</code> (\u6240\u4ee5\u4e3a\u4e86\u8fd0\u884c\u8fd9\u4e2a\u51fd\u6570\u4e4b\u524d\u7684\u8c03\u7528\u7684eval\u548capply\u7b49\u51fd\u6570\u5c31\u53ef\u4ee5\u8fd4\u56de\u8fd9\u4e2a <code>Thunk</code> \u56e0\u6b64\u5c31\u4e0d\u4f1a\u6ea2\u51fa)\uff0c\u7136\u540e\u8fd9\u4e2a <code>Thunk</code> \u5728 <code>optimized_eval</code> \u4e2d\u88ab\u5faa\u73af\u6c42\u503c\uff0c</p> <p>\u6240\u4ee5\u89c9\u5f97\u5224\u65ad\u5c3e\u683c\u5f0f\u5e94\u8be5\u662f\u5728 <code>scheme_apply</code> \u8c03\u7528\u7684 <code>eval_all</code> \u4e2d\uff0c\u4e8e\u662f\u5c06\u4ee3\u7801\u4fee\u6539\u6210\u4e86</p> <pre><code>def eval_all(expressions, env):\n    def in_tail_context(expr):\n        ...\n\n    result = None\n    while expressions.rest is not nil:\n        result = scheme_eval(expressions.first, env)\n        expressions = expressions.rest\n    result = scheme_eval(expressions.first, env, tail=in_tail_context(expressions.first))\n    return result\n</code></pre> <p>\u8fdb\u884c\u6d4b\u8bd5\u53d1\u73b0\u4e0d\u884c\uff0c</p> <pre><code>scm&gt; (define (sum n total)\n....   (if (zero? n)\n....       total\n....       (sum (- n 1) (+ n total))))\nsum\nscm&gt; (sum 1001 0)\n</code></pre> <p>\u7136\u540e\u60f3\u5230\u662f\u7531\u4e8e\u6bcf\u6b21\u8fdb\u5165\u6700\u540e\u7684 <code>sum</code> \u65f6\uff0c\u90fd\u4f1a\u65b0\u8c03\u7528\u4e00\u4e2aeval\uff0c\u6240\u4ee5\u5c31\u4f1a\u9012\u5f52\u6ea2\u51fa\uff0c</p> <p>\u4e8e\u662f\u60f3\u5230\u4e86\u5728 <code>optimized_eval</code> \u4e2d\u76f4\u63a5\u5904\u7406\u8fd9\u4e24\u79cd\u60c5\u51b5\uff0c</p> <pre><code>while isinstance(result, Thunk):\n    if result.expr.first == \"if\":\n        result = do_if_form(result.expr.rest, result.env, in_tail=True)\n    else:\n        result = original_scheme_eval(result.expr, result.env)\n</code></pre> <p>\u5e76\u4e14\u5bf9 <code>do_if_form</code> \u8fdb\u884c\u4fee\u6539</p> <pre><code>def do_if_form(expressions, env, in_tail=False):\n    validate_form(expressions, 2, 3)\n    if is_true_primitive(scheme_eval(expressions.first, env)):\n        return scheme_eval(expressions.rest.first, env, tail=in_tail)\n    elif len(expressions) == 3:\n        return scheme_eval(expressions.rest.rest.first, env, tail=in_tail)\n</code></pre> <p>\u6dfb\u52a0 <code>in_tail</code> \u53c2\u6570\u662f\u56e0\u4e3a\uff0c\u9700\u8981\u5728\u8fd9\u91cc\u5c31\u8fd4\u56de <code>Thunk</code> \u7c7b\uff0c\u5426\u5219\u8fd8\u662f\u4f1a\u5f62\u6210\u9012\u5f52</p> <p>\u7136\u540e\u8fdb\u884c\u6d4b\u8bd5\uff0c\u53d1\u73b0\u7adf\u7136\u771f\u7684\u80fd\u901a\u8fc7\u51e0\u4e2a\u6d4b\u8bd5\u7528\u4f8b\ud83d\ude2e\uff0c\u4f46\u6ca1\u5168\u90e8\u901a\u8fc7\uff0c</p> <p>\u4f46\u662f\u611f\u89c9\u8fd9\u6837\u7684\u601d\u8def(\u5728 <code>eval_all</code> \u4e2d\u8fdb\u884c\u5c3e\u683c\u5f0f\u7684\u5224\u65ad)\u5e94\u8be5\u53ef\u4ee5\u901a\u8fc7\u6d4b\u8bd5\uff0c\u4e8e\u662f\u5c06 <code>optimized_eval</code> \u6539\u6210\u4e86</p> <pre><code>def optimized_eval(expr, env, tail=False):\n    if tail and not scheme_symbolp(expr) and not self_evaluating(expr):\n        return Thunk(expr, env)\n\n    result = Thunk(expr, env)\n    # BEGIN PROBLEM 19\n    \"*** YOUR CODE HERE ***\"\n    result = original_scheme_eval(expr, env)\n\n    while isinstance(result, Thunk):\n        rest_expr, env = result.expr.rest, result.env\n        if result.expr.first == \"if\":\n            result = do_if_form(rest_expr, env, in_tail=True)\n        else:\n            result = original_scheme_eval(result.expr, env)\n    return result\n    # END PROBLEM 19\n</code></pre> <p>\u7136\u540e\u6d4b\u8bd5\u53d1\u73b0\u53ea\u901a\u8fc7\u4e86\u4e24\u4e2a\u4f8b\u5b50\uff0c\u88ab\u5361\u5728\u4e86\u7b2c3\u4e2a\u4f8b\u5b50\u4e0a\uff0c\u8fd9\u4e2a\u4f8b\u5b50\u4f7f\u7528\u4e86 <code>cond</code> \uff0c\u6240\u4ee5\u9700\u8981\u5bf9\u8fd9\u79cd\u60c5\u51b5\u8fdb\u884c\u5904\u7406\uff0c</p> <p>\u4e8e\u662f\u4fee\u6539 <code>eval_all</code> \u4e2d\u7684 <code>in_tail_context</code> </p> <pre><code>def in_tail_context(expr):\n    if not isinstance(expr, Pair):\n        return True\n\n    if isinstance(expr, Pair) and scheme_symbolp(expr.first):\n        first = expr.first\n        if first not in SPECIAL_FORMS and isinstance(env.lookup(first), LambdaProcedure):\n            return True\n        elif first == \"if\":\n            sub_expr_2 = expr.rest.rest.first\n            sub_expr_3 = expr.rest.rest.rest.first\n            return in_tail_context(sub_expr_2) and in_tail_context(sub_expr_3)\n        elif first == \"cond\":\n            non_preds = []\n            cond_expr = expr.rest\n            while cond_expr is not nil:\n                non_pred = True\n                sub_expr = cond_expr.first\n                while sub_expr.rest is not nil:\n                    non_pred = sub_expr.rest.first\n                    sub_expr = sub_expr.rest\n                non_preds += [non_pred]\n                cond_expr = cond_expr.rest\n            return all([in_tail_context(x) for x in non_preds])\n        else:\n            return False\n    else:\n        return False\n</code></pre> <p>\u7136\u540e\u53d1\u73b0\uff0c\u53ef\u80fd\u662f\u7531\u4e8e <code>do_cond_form</code> \u4e2d\u6700\u540e\u8c03\u7528\u7684\u662f <code>eval_all</code> (\u5176\u4e2d\u6709\u5224\u65ad\u5c3e\u5f62\u5f0f\u7684\u4ee3\u7801)\u6240\u4ee5\u5c31\u53ef\u4ee5\u4f7f\u7528\u539f\u672c\u7684eval\u6765\u5904\u7406 <code>cond</code> \u7684\u60c5\u51b5\uff0c</p> <p>\u7136\u540e\u6d4b\u8bd5\u88ab\u7b2c5\u4e2a\u4f8b\u5b50 <code>let</code> \u8bed\u53e5\u5361\u4f4f\uff0c\u4e8e\u662f\u7ee7\u7eed\u5728 <code>in_tail_context</code> \u4e2d\u6dfb\u52a0\u5224\u65ad\u7684\u60c5\u51b5\uff0c</p> <pre><code>def in_tail_context(expr):\n    ...\n    if isinstance(expr, Pair) and scheme_symbolp(expr.first):\n        first = expr.first\n        if first not in SPECIAL_FORMS and isinstance(env.lookup(first), LambdaProcedure):\n            ...\n        elif first == \"let\":\n            # return True\n            let_expr = expr.rest.rest\n            while let_expr.rest is not nil:\n                let_expr = let_expr.rest\n            return in_tail_context(let_expr.first)\n        else:\n            return False\n    else:\n        return False\n</code></pre> <p>\u518d\u6d4b\u8bd5\uff0c\u88ab\u7b2c6\u4e2a\u4f8b\u5b50 <code>or</code> \u548c <code>and</code> \u5361\u4f4f\uff0c</p> <p>\u7136\u540e\u770b\u4e86\u4e00\u4e0b\u4e4b\u524d\u7684ppt\uff0c<code>and</code> <code>or</code> <code>begin</code> \u7684\u60c5\u51b5\u5dee\u4e0d\u591a\uff0c\u6240\u4ee5\u5c31\u4e00\u8d77\u5224\u65ad\u4e86</p> <pre><code>def in_tail_context(expr):\n    ...\n    if ...:\n        ...\n        elif first in (\"and\", \"or\", \"begin\"):\n            return True\n        else:\n            return False\n    else:\n        return False\n</code></pre> <p>\u7136\u540e\u5bf9\u5e94\u5728 <code>do_and_form</code> \u548c <code>do_or_form</code> \u4e2d\u8fdb\u884c\u4fee\u6539</p> <p><code>do_begin_form</code> \u7531\u4e8e\u548c\u4e4b\u524d\u7684 <code>do_cond_form</code> \u4e00\u6837\u6700\u540e\u8c03\u7528\u7684\u662f <code>eval_all</code> \u6240\u4ee5\u5c31\u4e0d\u7528\u4fee\u6539</p> <pre><code>def do_and_form(expressions, env, in_tail=False):\n    result = \"#t\"\n    while expressions is not nil:\n        if not isinstance(expressions.first, Pair):\n            result = scheme_eval(expressions.first, env)\n        elif in_tail and scheme_symbolp(expressions.first.first):\n            first = expressions.first.first\n            if first not in SPECIAL_FORMS and isinstance(env.lookup(first), LambdaProcedure):\n                result = scheme_eval(expressions.first, env, tail=True)\n            else:\n                result = scheme_eval(expressions.first, env)\n        else:\n            result = scheme_eval(expressions.first, env)\n\n        if is_false_primitive(result) or isinstance(result, Thunk):\n            break\n        expressions = expressions.rest\n    return result\n\ndef do_or_form(expressions, env, in_tail=False):\n    result = \"#f\"\n    while expressions is not nil:\n        if not isinstance(expressions.first, Pair):\n            result = scheme_eval(expressions.first, env)\n        elif in_tail and scheme_symbolp(expressions.first.first):\n            first = expressions.first.first\n            if first not in SPECIAL_FORMS and isinstance(env.lookup(first), LambdaProcedure):\n                result = scheme_eval(expressions.first, env, tail=True)\n            else:\n                result = scheme_eval(expressions.first, env)\n        else:\n            result = scheme_eval(expressions.first, env)\n\n        if is_true_primitive(result) or isinstance(result, Thunk):\n            break\n        expressions = expressions.rest\n    return result\n</code></pre> <p>\u6700\u540e\u5728 <code>optimized_eval</code> \u4e2d</p> <pre><code>def optimized_eval(expr, env, tail=False):\n    ...\n    # BEGIN PROBLEM 19\n    \"*** YOUR CODE HERE ***\"\n    result = original_scheme_eval(expr, env)\n    while isinstance(result, Thunk):\n        rest_expr, env = result.expr.rest, result.env\n        if result.expr.first in (\"if\", \"and\", \"or\"):\n            result = SPECIAL_FORMS[result.expr.first](rest_expr, env, in_tail=True)\n        else:\n            result = original_scheme_eval(result.expr, env)\n    return result\n</code></pre> <p>\u6700\u540e\u6d4b\u8bd5\uff0c\u7ec8\u4e8e\u5168\u90e8\u901a\u8fc7\u4e86\ud83d\ude2d\uff0c\u603b\u7b97\u662f\u5168\u90e8\u5b8c\u6210\u4e86\u8fd9\u4e2aproject</p> code <pre><code>def optimize_tail_calls(original_scheme_eval):\n    def optimized_eval(expr, env, tail=False):\n        if tail and not scheme_symbolp(expr) and not self_evaluating(expr):\n            return Thunk(expr, env)\n\n        result = Thunk(expr, env)\n        # BEGIN PROBLEM 19\n        \"*** YOUR CODE HERE ***\"\n        result = original_scheme_eval(expr, env)\n        while isinstance(result, Thunk):\n            rest_expr, env = result.expr.rest, result.env\n            if result.expr.first in (\"if\", \"and\", \"or\"):\n                result = SPECIAL_FORMS[result.expr.first](rest_expr, env, in_tail=True)\n            else:\n                result = original_scheme_eval(result.expr, env)\n        return result\n        # END PROBLEM 19\n    return optimized_eval\n</code></pre> <pre><code>def eval_all(expressions, env):\n    # BEGIN PROBLEM 7\n    # return scheme_eval(expressions.first, env) # replace this with lines of your own code\n\n    # result = None\n    # while expressions is not nil:\n    #     result = scheme_eval(expressions.first, env)\n    #     expressions = expressions.rest\n    # return result\n\n    def in_tail_context(expr):\n        if not isinstance(expr, Pair):\n            return True\n\n        if isinstance(expr, Pair) and scheme_symbolp(expr.first):\n            first = expr.first\n            if first not in SPECIAL_FORMS and isinstance(env.lookup(first), LambdaProcedure):\n                return True\n            elif first == \"if\":\n                sub_expr_2 = expr.rest.rest.first\n                sub_expr_3 = expr.rest.rest.rest.first\n                return in_tail_context(sub_expr_2) and in_tail_context(sub_expr_3)\n            elif first == \"cond\":\n                non_preds = []\n                cond_expr = expr.rest\n                while cond_expr is not nil:\n                    non_pred = True\n                    sub_expr = cond_expr.first\n                    while sub_expr.rest is not nil:\n                        non_pred = sub_expr.rest.first\n                        sub_expr = sub_expr.rest\n                    non_preds += [non_pred]\n                    cond_expr = cond_expr.rest\n                return all([in_tail_context(x) for x in non_preds])\n            elif first == \"let\":\n                let_expr = expr.rest.rest\n                while let_expr.rest is not nil:\n                    let_expr = let_expr.rest\n                return in_tail_context(let_expr.first)\n            elif first in (\"and\", \"or\", \"begin\"):\n                return True\n            else:\n                return False\n        else:\n            return False\n\n    if expressions is nil:\n        return\n    result = None\n    while expressions.rest is not nil:\n        result = scheme_eval(expressions.first, env)\n        expressions = expressions.rest\n    result = scheme_eval(expressions.first, env, tail=in_tail_context(expressions.first))\n    return result\n    # END PROBLEM 7\n</code></pre> <pre><code>def do_if_form(expressions, env, in_tail=False):\n    validate_form(expressions, 2, 3)\n    if is_true_primitive(scheme_eval(expressions.first, env)):\n        return scheme_eval(expressions.rest.first, env, tail=in_tail)\n    elif len(expressions) == 3:\n        return scheme_eval(expressions.rest.rest.first, env, tail=in_tail)\n</code></pre> <pre><code>def do_and_form(expressions, env, in_tail=False):\n    # BEGIN PROBLEM 12\n    \"*** YOUR CODE HERE ***\"\n    result = \"#t\"\n    while expressions is not nil:\n        # result = scheme_eval(expressions.first, env)\n        # if is_false_primitive(result):\n        #     return result\n        # expressions = expressions.rest\n\n        if not isinstance(expressions.first, Pair):\n            result = scheme_eval(expressions.first, env)\n        elif in_tail and scheme_symbolp(expressions.first.first):\n            first = expressions.first.first\n            if first not in SPECIAL_FORMS and isinstance(env.lookup(first), LambdaProcedure):\n                result = scheme_eval(expressions.first, env, tail=True)\n            else:\n                result = scheme_eval(expressions.first, env)\n        else:\n            result = scheme_eval(expressions.first, env)\n\n        if is_false_primitive(result) or isinstance(result, Thunk):\n            break\n        expressions = expressions.rest\n    return result\n    # END PROBLEM 12\n\ndef do_or_form(expressions, env, in_tail=False):\n    # BEGIN PROBLEM 12\n    \"*** YOUR CODE HERE ***\"\n    result = \"#f\"\n    while expressions is not nil:\n        # result = scheme_eval(expressions.first, env)\n        # if is_true_primitive(result):\n        #     return result\n        # expressions = expressions.rest\n\n        if not isinstance(expressions.first, Pair):\n            result = scheme_eval(expressions.first, env)\n        elif in_tail and scheme_symbolp(expressions.first.first):\n            first = expressions.first.first\n            if first not in SPECIAL_FORMS and isinstance(env.lookup(first), LambdaProcedure):\n                result = scheme_eval(expressions.first, env, tail=True)\n            else:\n                result = scheme_eval(expressions.first, env)\n        else:\n            result = scheme_eval(expressions.first, env)\n\n        if is_true_primitive(result) or isinstance(result, Thunk):\n            break\n        expressions = expressions.rest\n    return result\n    # END PROBLEM 12\n</code></pre>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part3/","title":"CS61A Part 3","text":"<p> \u7ea6 16893 \u4e2a\u5b57  1674 \u884c\u4ee3\u7801  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 77 \u5206\u949f</p> \u76ee\u5f55 <ul> <li>Lecture 31 Declarative Programming</li> <li>Lecture 32 Tables</li> <li>Lecture 32 Q&amp;A</li> <li>Lab 12</li> <li>Lecture 33 Aggregation</li> <li>Lecture 33 Q&amp;A</li> <li>Lecture 34 Database</li> <li>Lecture 34 Q&amp;A</li> <li>HW 09</li> <li>Lecture 35 Tail Calls</li> <li>Lab 13</li> <li>Lecture 36 Macros</li> <li>Lab 14</li> <li>Lecture 36 Q&amp;A</li> <li>Lecture 37 Final Examples</li> <li>Lecture 37 Q&amp;A</li> <li>Lecture 38 Conclusion</li> </ul>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part3/#lecture-31-declarative-programming","title":"Lecture 31 Declarative Programming","text":""},{"location":"Notes%20of%20Courses/CS61A/CS61A_part3/#1","title":"1","text":"<p>John\u89e3\u91ca\u4ec0\u4e48\u662f \u58f0\u660e\u5f0f\u8bed\u8a00 declarative language \uff0c\u4ee5\u53ca\u548c \u547d\u4ee4\u5f0f\u8bed\u8a00 imperative language \u7684\u533a\u522b\uff0c</p> <p>\u4e3b\u8981\u5728\u4e8e\uff0c\u547d\u4ee4\u5f0f\u8bed\u8a00\u53ea\u4f1a\u56fa\u5b9a\u5730\u6267\u884c\u5199\u597d\u7684\u7a0b\u5e8f\uff0c\u800c\u58f0\u660e\u5f0f\u8bed\u8a00\u4f1a\u6839\u636e\u9700\u8981\u5904\u7406\u7684\u60c5\u51b5\u6765\u81ea\u5df1\u9009\u62e9\u5408\u9002\u7684\u5904\u7406\u65b9\u6cd5</p> <p>Quote</p> <p>John:</p> <p>SQL is a declarative programming language. What's that? Well, in a declarative language, SQL is the most common example, but there are many others such as Prolog. A program is a description of the desired result that you want your computer to generate. The interpreter's job is to figure out how to generate that result for you. That's different from an imperative language, such as Python or Scheme. In an imperative language, when you write a program in that language, it's a description of some computational process or processes that you want to be carried out. The job of an interpreter in an imperative language is to carry out the execution and evaluation rules in order to have a correctly interpreted program, and you've done this in your project.</p> <p>So, there's more flexibility in a declarative language interpreter. We'll see what I mean by that in time, but here's a place to start: in an imperative language, if you write a quadratic time algorithm by specifying that computational process, it's probably gonna run in quadratic time. But in a declarative language, you just say what you want, and if there are multiple ways to compute that, one of which runs in quadratic time and one of which runs in linear time, well, it's up to the interpreter to choose among those options in order to compute what you want as efficiently as possible.</p> <p>So, a lot of the interesting research in declarative languages is in making decisions about how to compute the desired result, given that there are many ways to compute it correctly, but some of them are faster than others.</p> <p>John:</p> <p>SQL\u662f\u4e00\u79cd\u58f0\u660e\u5f0f\u7f16\u7a0b\u8bed\u8a00\u3002\u90a3\u662f\u4ec0\u4e48\uff1f\u55ef\uff0c\u5728\u58f0\u660e\u5f0f\u8bed\u8a00\u4e2d\uff0cSQL\u662f\u6700\u5e38\u89c1\u7684\u4f8b\u5b50\uff0c\u4f46\u8fd8\u6709\u8bb8\u591a\u5176\u4ed6\u8bed\u8a00\uff0c\u6bd4\u5982Prolog\u3002\u7a0b\u5e8f\u662f\u5bf9\u4f60\u60f3\u8ba9\u8ba1\u7b97\u673a\u751f\u6210\u7684\u671f\u671b\u7ed3\u679c\u7684\u63cf\u8ff0\u3002\u89e3\u91ca\u5668\u7684\u4efb\u52a1\u662f\u5f04\u6e05\u695a\u5982\u4f55\u4e3a\u4f60\u751f\u6210\u8be5\u7ed3\u679c\u3002\u8fd9\u4e0e\u547d\u4ee4\u5f0f\u8bed\u8a00\u4e0d\u540c\uff0c\u6bd4\u5982Python\u6216Scheme\u3002\u5728\u547d\u4ee4\u5f0f\u8bed\u8a00\u4e2d\uff0c\u5f53\u4f60\u5728\u8be5\u8bed\u8a00\u4e2d\u7f16\u5199\u7a0b\u5e8f\u65f6\uff0c\u5b83\u662f\u5bf9\u4f60\u60f3\u6267\u884c\u7684\u4e00\u4e9b\u8ba1\u7b97\u8fc7\u7a0b\u6216\u8fc7\u7a0b\u7684\u63cf\u8ff0\u3002\u547d\u4ee4\u5f0f\u8bed\u8a00\u4e2d\u89e3\u91ca\u5668\u7684\u4efb\u52a1\u662f\u6267\u884c\u6267\u884c\u548c\u8bc4\u4f30\u89c4\u5219\uff0c\u4ee5\u786e\u4fdd\u6b63\u786e\u89e3\u91ca\u7a0b\u5e8f\uff0c\u800c\u4f60\u5728\u9879\u76ee\u4e2d\u5df2\u7ecf\u505a\u5230\u4e86\u8fd9\u4e00\u70b9\u3002</p> <p>\u56e0\u6b64\uff0c\u5728\u58f0\u660e\u5f0f\u8bed\u8a00\u89e3\u91ca\u5668\u4e2d\u6709\u66f4\u591a\u7684\u7075\u6d3b\u6027\u3002\u6211\u4eec\u4f1a\u5728\u540e\u9762\u8be6\u7ec6\u8ba8\u8bba\u8fd9\u4e00\u70b9\uff0c\u4f46\u8fd9\u91cc\u662f\u4e00\u4e2a\u8d77\u70b9\uff1a\u5728\u547d\u4ee4\u5f0f\u8bed\u8a00\u4e2d\uff0c\u5982\u679c\u4f60\u901a\u8fc7\u6307\u5b9a\u8ba1\u7b97\u8fc7\u7a0b\u6765\u7f16\u5199\u4e00\u4e2a\u4e8c\u6b21\u65f6\u95f4\u590d\u6742\u5ea6\u7684\u7b97\u6cd5\uff0c\u5b83\u53ef\u80fd\u4f1a\u8fd0\u884c\u5728\u4e8c\u6b21\u65f6\u95f4\u590d\u6742\u5ea6\u3002\u4f46\u5728\u58f0\u660e\u5f0f\u8bed\u8a00\u4e2d\uff0c\u4f60\u53ea\u9700\u8bf4\u660e\u4f60\u60f3\u8981\u7684\u7ed3\u679c\uff0c\u5982\u679c\u6709\u591a\u79cd\u8ba1\u7b97\u8be5\u7ed3\u679c\u7684\u65b9\u5f0f\uff0c\u5176\u4e2d\u4e00\u79cd\u662f\u4e8c\u6b21\u65f6\u95f4\u590d\u6742\u5ea6\uff0c\u53e6\u4e00\u79cd\u662f\u7ebf\u6027\u65f6\u95f4\u590d\u6742\u5ea6\uff0c\u90a3\u4e48\u7531\u89e3\u91ca\u5668\u6765\u5728\u8fd9\u4e9b\u9009\u9879\u4e2d\u9009\u62e9\uff0c\u4ee5\u5c3d\u53ef\u80fd\u9ad8\u6548\u5730\u8ba1\u7b97\u51fa\u4f60\u60f3\u8981\u7684\u7ed3\u679c\u3002</p> <p>\u56e0\u6b64\uff0c\u5728\u58f0\u660e\u5f0f\u8bed\u8a00\u4e2d\uff0c\u5173\u4e8e\u5982\u4f55\u8ba1\u7b97\u671f\u671b\u7ed3\u679c\u7684\u6709\u8da3\u7814\u7a76\u5f88\u591a\uff0c\u9274\u4e8e\u6709\u8bb8\u591a\u6b63\u786e\u8ba1\u7b97\u7ed3\u679c\u7684\u65b9\u5f0f\uff0c\u4f46\u5176\u4e2d\u4e00\u4e9b\u6bd4\u5176\u4ed6\u65b9\u5f0f\u66f4\u5feb\u3002</p>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part3/#2","title":"2","text":"<p>SQL\u8bed\u8a00\u7684\u4e00\u4e9b\u57fa\u672c\u8bed\u53e5\uff0cJohn\u8bf4(\u9664\u4e86 <code>select</code> <code>create table</code> )\u5176\u4ed6\u7684\u8bed\u53e5\u5bf9\u4e8e\u7406\u89e3SQL\u7684\u6838\u5fc3\u4e0d\u592a\u91cd\u8981</p> <p>Quote</p> <p>John:</p> <p>...They're important if you're actually going to use one of these systems in a large industrial application, but they're not too important for understanding the heart of how SQL works. Most of the important action is in the SELECT statement.</p> <p>John:</p> <p>...\u5b83\u4eec\u5728\u5b9e\u9645\u5e94\u7528\u4e8e\u5927\u578b\u5de5\u4e1a\u5e94\u7528\u7a0b\u5e8f\u65f6\u975e\u5e38\u91cd\u8981\uff0c\u4f46\u5bf9\u4e8e\u7406\u89e3 SQL \u5de5\u4f5c\u7684\u6838\u5fc3\u5e76\u4e0d\u592a\u91cd\u8981\u3002\u5927\u90e8\u5206\u91cd\u8981\u7684\u64cd\u4f5c\u90fd\u5728 SELECT \u8bed\u53e5\u4e2d\u3002</p>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part3/#3","title":"3","text":"<p><code>select</code> \u8bed\u53e5\u7684\u57fa\u672c\u7528\u6cd5</p> <pre><code>select [expression] as [name], [expression] as [name], ... ;\n</code></pre> <p>\u5206\u53f7 <code>;</code> \u8868\u793a\u7ed3\u675f\uff0c <code>as [name]</code> \u90e8\u5206\u662f\u53ef\u9009\u7684\u3002</p> <p>\u4e00\u4e2a <code>select</code> \u8bed\u53e5\u53ea\u4f1a\u751f\u6210\u4e00\u4e2a\u4e00\u884c\u7684\u6570\u636e\u8868\uff0c\u53ef\u4ee5\u4f7f\u7528 <code>union</code> \u5c06\u591a\u4e2a\u8868\u5408\u5e76\uff0c\u5408\u5e76\u8981\u6c42\u4e24\u4e2a\u8868\u7684\u5217\u6570\u662f\u4e00\u6837\u7684\uff0c\u4f7f\u7528\u7b2c\u4e00\u4e2a\u8868\u7684\u5217\u540d\u4f5c\u4e3a\u65b0\u8868\u7684\u5217\u540d(\u6240\u4ee5\u53ef\u4ee5\u770b\u5230\u5c55\u793a\u7684\u4ee3\u7801\u4e2d\uff0c\u4e4b\u540e <code>select</code> \u8bed\u53e5(\u5373\u4e4b\u540e\u7684\u8868)\u90fd\u53ef\u4ee5\u4e0d\u7528\u6dfb\u52a0\u5217\u540d\u4e0d\u7528\u5199 <code>as [name]</code> )</p> <p>Quote</p> <p>John:</p> <p>...If you <code>select</code> literals, which are expressions like the number <code>2</code> or the string <code>\"Berkeley\"</code> , that will create a one-row table. But if you want to create a multi-row table, you can union together two <code>select</code> statements. The union of two <code>select</code> statements is another table, but it contains the rows of both. You can only union together tables that have the same number of columns and the same type of information in each column. But the two <code>select</code> statements that you union together don't need to have the same names for the columns; it will just use the names of the first <code>select</code> statement in order to name the columns in the final result.</p> <p>John:</p> <p>...\u5982\u679c\u4f60\u9009\u62e9\uff08 <code>select</code> \uff09\u5b57\u9762\u91cf\uff0c\u8fd9\u4e9b\u8868\u8fbe\u5f0f\u53ef\u4ee5\u662f\u50cf\u6570\u5b57 <code>2</code> \u6216\u5b57\u7b26\u4e32 <code>\"Berkeley\"</code> \u8fd9\u6837\u7684\u8868\u8fbe\u5f0f\uff0c\u90a3\u5c06\u521b\u5efa\u4e00\u4e2a\u4e00\u884c\u7684\u8868\u3002\u4f46\u5982\u679c\u4f60\u60f3\u521b\u5efa\u4e00\u4e2a\u591a\u884c\u7684\u8868\uff0c\u4f60\u53ef\u4ee5\u5c06\u4e24\u4e2a <code>select</code> \u8bed\u53e5\u8054\u5408\u5728\u4e00\u8d77\u3002\u4e24\u4e2a <code>select</code> \u8bed\u53e5\u7684\u8054\u5408\u662f\u53e6\u4e00\u4e2a\u8868\uff0c\u4f46\u5b83\u5305\u542b\u4e86\u4e24\u8005\u7684\u884c\u3002\u4f60\u53ea\u80fd\u8054\u5408\u90a3\u4e9b\u5177\u6709\u76f8\u540c\u5217\u6570\u548c\u6bcf\u5217\u76f8\u540c\u7c7b\u578b\u4fe1\u606f\u7684\u8868\u3002\u4f46\u4f60\u8054\u5408\u5728\u4e00\u8d77\u7684\u4e24\u4e2a <code>select</code> \u8bed\u53e5\u7684\u5217\u540d\u4e0d\u9700\u8981\u76f8\u540c\uff1b\u5b83\u5c06\u53ea\u4f7f\u7528\u7b2c\u4e00\u4e2a <code>select</code> \u8bed\u53e5\u7684\u5217\u540d\u6765\u547d\u540d\u6700\u7ec8\u7ed3\u679c\u4e2d\u7684\u5217\u3002</p> <p></p> <p><code>select</code> \u8bed\u53e5\u53ea\u4f1a\u5c55\u793a\u6570\u636e\u8868\uff0c\u4f46\u5e76\u4e0d\u4f1a\u5c06\u6570\u636e\u8868\u50a8\u5b58\uff0c\u6240\u4ee5\u5982\u679c\u9700\u8981\u50a8\u5b58\u6570\u636e\u8868\uff0c\u53ef\u4ee5\u4f7f\u7528 <code>create table</code> \u8bed\u53e5(\u5982\u4e0a\u56fe)</p>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part3/#4","title":"4","text":"<p>\u7528 <code>select</code> \u8bed\u53e5\u6765 \u6295\u5f71 project \u73b0\u6709\u6570\u636e\u8868</p> <p>project\u5b98\u65b9\u7684\u7ffb\u8bd1\u662f\u6295\u5f71\uff0c\u4f46\u6211\u89c9\u5f97\u8fd9\u91cc\u7406\u89e3\u4e3a \u5904\u7406 \u4e5f\u53ef\u4ee5</p> <p></p> <p>\u53ef\u4ee5\u7528 <code>from</code> \u6765\u9009\u62e9\u4e00\u4e2a\u5df2\u6709\u7684\u8868\uff0c\u53ef\u4ee5\u7528 <code>where</code> \u6765\u7b5b\u9009\u7b26\u5408\u6761\u4ef6\u7684\u884c(\u611f\u89c9\u6709\u70b9\u50cfpython\u5217\u8868\u63a8\u5230\u5f0f\u4e2d\u7684 <code>if</code> )\uff0c\u53ef\u4ee5\u7528 <code>order by</code> \u6765\u7ed9\u65b0\u8868\u8bbe\u7f6e\u6392\u5e8f\u89c4\u5219</p> <p>\u5728John\u7684demo\u6f14\u793a\u4e2d\uff0c\u4f7f\u7528 <code>*</code> \u6765\u9009\u62e9\u6240\u6709\u5217</p> <pre><code>select * from parents;\n</code></pre> <p></p>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part3/#5","title":"5","text":"<p><code>select</code> \u8bed\u53e5\u4e2d\u4e5f\u53ef\u4ee5\u8fdb\u884c\u6570\u5b66\u7684\u5904\u7406(\u5982\u4e0a\u56fe)</p>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part3/#6","title":"6","text":"<p>\u5728 sql \u7ec8\u7aef\u4e2d\uff0c\u53ef\u4ee5\u4f7f\u7528 <code>-init xxx.sql</code> \u6765\u52a0\u8f7d <code>.sql</code> \u6587\u4ef6</p> <p>John\u63d0\u5230 <code>select * from ints</code> \u540e\uff0c\u65b0\u8868\u4e0e\u539f\u8868\u987a\u5e8f\u4e0d\u4e00\u81f4\u7684\u73b0\u8c61</p> <p>Quote</p> <p>John:</p> <p>Notice something quite interesting. These rows don't appear in the order that I wrote them out in the first place. When you union together a bunch of <code>select</code> statements, you get no guarantees about the order of the result. That's up to the declarative programming engine, which tries to compute the result efficiently.</p> <p>Now, one thing that <code>union</code> does is it discards repeats, and the way that it discards repeats in some cases is to sort all the rows to look for whether there's repetition. And that's exactly what happened here. So, you can see that it's written all of these in an alphabetical order according to the word, which is not what I asked for in the first place, but that's what I got.</p> <p>And this is one of the properties of declarative programming languages. There's no particular procedure that's defined in advance that tells me how to compute the result of unioning together a bunch of <code>select</code> statements. Instead, it's up to the system to create the correct result in whatever way it chooses, and that might involve building the table in a different order than you might expect.</p> <p>John:</p> <p>\u8bf7\u6ce8\u610f\u4e00\u4e9b\u76f8\u5f53\u6709\u8da3\u7684\u4e8b\u60c5\u3002\u8fd9\u4e9b\u884c\u5e76\u4e0d\u6309\u7167\u6211\u6700\u521d\u5199\u51fa\u5b83\u4eec\u7684\u987a\u5e8f\u51fa\u73b0\u3002\u5f53\u4f60\u8054\u5408\u4e00\u5806 <code>select</code> \u8bed\u53e5\u65f6\uff0c\u4f60\u65e0\u6cd5\u4fdd\u8bc1\u7ed3\u679c\u7684\u987a\u5e8f\u3002\u8fd9\u7531\u58f0\u660e\u6027\u7f16\u7a0b\u5f15\u64ce\u51b3\u5b9a\uff0c\u5b83\u8bd5\u56fe\u6709\u6548\u5730\u8ba1\u7b97\u7ed3\u679c\u3002</p> <p>\u73b0\u5728\uff0c <code>union</code> \u7684\u4e00\u9879\u529f\u80fd\u662f\u4e22\u5f03\u91cd\u590d\u9879\uff0c\u800c\u5728\u67d0\u4e9b\u60c5\u51b5\u4e0b\u4e22\u5f03\u91cd\u590d\u9879\u7684\u65b9\u6cd5\u662f\u5bf9\u6240\u6709\u884c\u8fdb\u884c\u6392\u5e8f\uff0c\u4ee5\u67e5\u770b\u662f\u5426\u6709\u91cd\u590d\u3002\u8fd9\u6b63\u662f\u8fd9\u91cc\u53d1\u751f\u7684\u60c5\u51b5\u3002\u6240\u4ee5\u4f60\u53ef\u4ee5\u770b\u5230\uff0c\u5b83\u6309\u7167\u5355\u8bcd\u7684\u5b57\u6bcd\u987a\u5e8f\u5199\u51fa\u4e86\u6240\u6709\u8fd9\u4e9b\uff0c\u8fd9\u4e0d\u662f\u6211\u6700\u521d\u8981\u6c42\u7684\uff0c\u4f46\u8fd9\u5c31\u662f\u6211\u5f97\u5230\u7684\u7ed3\u679c\u3002</p> <p>\u8fd9\u662f\u58f0\u660e\u6027\u7f16\u7a0b\u8bed\u8a00\u7684\u4e00\u4e2a\u7279\u6027\u3002\u6ca1\u6709\u9884\u5148\u5b9a\u4e49\u7684\u7279\u5b9a\u8fc7\u7a0b\u544a\u8bc9\u6211\u5982\u4f55\u8ba1\u7b97\u8054\u5408\u4e00\u5806 <code>select</code> \u8bed\u53e5\u7684\u7ed3\u679c\u3002\u76f8\u53cd\uff0c\u8fd9\u53d6\u51b3\u4e8e\u7cfb\u7edf\u4ee5\u4efb\u4f55\u5b83\u9009\u62e9\u7684\u65b9\u5f0f\u521b\u5efa\u6b63\u786e\u7684\u7ed3\u679c\uff0c\u8fd9\u53ef\u80fd\u6d89\u53ca\u4ee5\u4e0e\u4f60\u671f\u671b\u7684\u4e0d\u540c\u7684\u987a\u5e8f\u6784\u5efa\u8868\u3002</p>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part3/#7","title":"7","text":"<p>\u95ee\u9898B\uff0c\u6700\u540eJohn\u7528\u4e86\u4e00\u79cd\u6211\u6ca1\u60f3\u5230\u7684\u65b9\u6cd5\ud83d\ude02\uff0c</p> <pre><code>select word from ints\nwhere one + two/2 + four/4 + eight/8 = 1;\n</code></pre> <p>\u5373\u5224\u65ad\u662f\u5426\u53ea\u6709\u4e00\u4e2a\u4e3a\u6b63\uff0c</p> <p>\u6211\u60f3\u5230\u7684\u662f\uff0c\u5c061 2 4 8\u52a0\u8d77\u6765(\u7b97\u81ea\u5df1\u7684\u503c)\u7136\u540e\u53d6\u6a21\u4e3a\u96f6(\u4f46\u4e0d\u77e5\u9053sql\u4e2d\u6709\u6ca1\u6709\u53d6\u6a21\u8fd0\u7b97\uff0c\u6709\u7684\u8bdd\u5e94\u8be5\u5c31\u53ef\u884c)</p>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part3/#lecture-32-tables","title":"Lecture 32 Tables","text":""},{"location":"Notes%20of%20Courses/CS61A/CS61A_part3/#1_1","title":"1","text":"<p>\u8054\u63a5 join \u4e24\u4e2a\u8868\u7684\u65b9\u6cd5\uff0c\u4f7f\u7528 \u9017\u53f7 <code>,</code> \u6765\u8054\u63a5\uff0c\u7ed3\u679c\u662f\u5f97\u5230\u4e00\u4e2a\u6bcf\u4e2a\u8868\u7684\u6bcf\u4e00\u884c\u4e0e\u5176\u4ed6\u8868\u7684\u6bcf\u4e00\u884c\u7ec4\u5408\u7684\u65b0\u7684\u8868(\u4ece\u4e0a\u56feJohn\u7684demo\u6f14\u793a\u4e2d\u53ef\u4ee5\u770b\u5230)</p> <p></p> <p>\u5982\u679c\u9047\u5230\u4e0d\u540c\u7684\u8868\u6709\u76f8\u540c\u540d\u5b57\u7684\u5217\uff0c\u6216\u8005\u9700\u8981\u4f7f\u7528\u540c\u4e00\u4e2a\u8868(\u5982\u4e0a\u56fe)\uff0c\u5c31\u9700\u8981\u4f7f\u7528 \u522b\u540d alias ( <code>from [table] as [alias]</code> )\uff0c\u7136\u540e\u4f7f\u7528 \u70b9\u8868\u8fbe\u5f0f <code>.</code> \u6765\u4f7f\u7528\u4e0d\u540c\u8868/\u522b\u540d\u4e2d\u7684\u76f8\u540c\u540d\u5b57\u7684\u5217</p> <p>John\u5c55\u793a\u4e86\u8054\u63a5\u2018\u591a\u4e2a\u8868\u7684\u5e94\u7528\uff0c</p> <p></p> <p>\u7b5b\u9009\u51fa\u7956\u7236\u548c\u5b59\u5b50\u6bdb\u53d1\u7c7b\u578b\u4e00\u6837\u7684\u6570\u636e</p> <pre><code>select grandog from grandparents, dogs as c, dogs as d\n  where grandog = c.name and\n        granpup = d.name and\n        c.fur = d.fur;\n</code></pre>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part3/#2_1","title":"2","text":"<p>sql\u4e2d\u7684\u4e00\u4e9b\u6570\u5b66\u8fd0\u7b97\u76f8\u5173\u7684\u8868\u8fbe\u5f0f\uff0c</p> <p>\u5176\u4e2d\u4e0d\u7b49\u53f7\u6709\u4e24\u79cd <code>&lt;&gt;</code> \u548c <code>!=</code> \uff0c\u800c\u7b49\u53f7\u662f <code>=</code> (\u548cpython\u4e2d\u7684 <code>==</code> \u4e0d\u4e00\u6837)</p>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part3/#3_1","title":"3","text":"<p>John\u5c55\u793a\u7684sql\u4e2d\u5b57\u7b26\u4e32string\u7684\u4e00\u4e9b\u7528\u6cd5\uff0c</p> <ul> <li> <p>\u5b57\u7b26\u4e32\u7684 \u8fde\u63a5 concatenation\uff0c\u4f7f\u7528 <code>||</code> \u53ef\u4ee5\u5c06\u4e24\u4e2a\u5b57\u7b26\u4e32\u8fde\u63a5\uff0c</p> </li> <li> <p>\u5b50\u5b57\u7b26\u4e32 <code>substr</code> \uff0c\u7b2c\u4e00\u4e2a\u4f4d\u7f6e\u662f\u5b57\u7b26\u4e32\uff0c\u7b2c\u4e8c\u4e2a\u4f4d\u7f6e\u662f\u8d77\u59cb\u5b57\u7b26\u7684\u4f4d\u7f6e(\u4ece1\u5f00\u59cb)\uff0c\u7b2c\u4e09\u4e2a\u4f4d\u7f6e\u662f\u5b50\u4e32\u957f\u5ea6</p> <p>\u6240\u4ee5\u4e0a\u56fe\u4e2d\uff0c <code>substr(s, 4, 2)</code> \u7684\u7ed3\u679c\u662f <code>lo</code></p> </li> <li> <p>\u5b57\u7b26\u4e32\u4e2d\u5b57\u7b26\u7684\u4f4d\u7f6e <code>instr</code> \uff0c\u7b2c\u4e00\u4e2a\u4f4d\u7f6e\u662f\u5b57\u7b26\u4e32\uff0c\u7b2c\u4e8c\u4e2a\u4f4d\u7f6e\u662f\u8981\u627e\u7684\u5b57\u7b26(\u53ef\u80fd\u5b50\u5b57\u7b26\u4e32\u4e5f\u53ef\u4ee5)\uff0c\u7136\u540e\u8fd4\u56de\u7b2c\u4e00\u4e2a\u5bf9\u5e94\u7684\u4f4d\u7f6e</p> </li> </ul>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part3/#lecture-32-qa","title":"Lecture 32 Q&amp;A","text":""},{"location":"Notes%20of%20Courses/CS61A/CS61A_part3/#1_2","title":"1","text":"<p>\u6709\u4eba\u63d0\u95ee\u5230 \u52a8\u6001\u4f5c\u7528\u57df dynamic scope \uff0cJohn\u89e3\u91ca\u4e86\u8fd9\u4e2a\u6982\u5ff5\u4e00\u4e9b\u76f8\u5173\u4fe1\u606f</p> <p>Quote</p> <p>John:</p> <p>...Dynamic scope, which is different from lexical scope, is what you're used to. Lexical scope basically says that all of the variables within a function can be identified just by looking at the code. This is true in Python; if you have an inner function like the <code>adder</code> function within <code>make_adder</code>, you can see all the names within the <code>adder</code> function in the code. They might be part of the <code>adder</code> function; they might be part of the <code>make_adder</code> function, the enclosing scope, but they're all kind of there. That's what's called lexical scope. It's the most common way in which programming languages work.</p> <p>In other offerings of this course, we talk about an alternative called dynamic scope, which is hardly ever used. It's kind of interesting intellectually, and there are a few cases where it gets used, but mostly it doesn't exist in modern programming languages. So, for that reason, it's fine to just not know about it. But if you want to know about it, the story is basically that when you call a function, that function's environment inherits all of the names that already existed from wherever it was called. That means when you look at the body of the function, it might have names in it that you just can't see anywhere in the code because they're actually defined where that function is called, maybe in a different file or something like that.</p> <p>Dynamic scope allows you to set up your environment and then make a function call, which is pretty different from lexical scope where you have to pass in everything that's relevant. But for that reason, it can simplify some things where, instead of passing in several different arguments, you just kind of have them already, and you don't have to pass any of them in. So, that's kind of the story with dynamic scope. It's just the same as lexical scope, except for the parent of a frame is always the frame from which that function was called, as opposed to where that function was defined.</p> <p>John:</p> <p>...\u52a8\u6001\u4f5c\u7528\u57df\uff08dynamic scope\uff09\u4e0e\u8bcd\u6cd5\u4f5c\u7528\u57df\uff08lexical scope\uff09\u4e0d\u540c\uff0c\u800c\u4f60\u53ef\u80fd\u5df2\u7ecf\u4e60\u60ef\u4e86\u8bcd\u6cd5\u4f5c\u7528\u57df\u3002\u8bcd\u6cd5\u4f5c\u7528\u57df\u57fa\u672c\u4e0a\u8868\u793a\u4e00\u4e2a\u51fd\u6570\u5185\u7684\u6240\u6709\u53d8\u91cf\u90fd\u53ef\u4ee5\u901a\u8fc7\u67e5\u770b\u4ee3\u7801\u6765\u786e\u5b9a\u3002\u5728Python\u4e2d\u662f\u8fd9\u6837\u7684\uff1b\u5982\u679c\u4f60\u6709\u4e00\u4e2a\u5185\u90e8\u51fd\u6570\uff0c\u6bd4\u5982\u5728 <code>make_adder</code> \u5185\u7684 <code>adder</code> \u51fd\u6570\uff0c\u4f60\u53ef\u4ee5\u5728\u4ee3\u7801\u4e2d\u770b\u5230 <code>adder</code> \u51fd\u6570\u4e2d\u7684\u6240\u6709\u540d\u79f0\u3002\u5b83\u4eec\u53ef\u80fd\u662f <code>adder</code> \u51fd\u6570\u7684\u4e00\u90e8\u5206\uff1b\u5b83\u4eec\u53ef\u80fd\u662f <code>make_adder</code> \u51fd\u6570\u7684\u4e00\u90e8\u5206\uff0c\u5373\u5c01\u95ed\u4f5c\u7528\u57df\uff0c\u4f46\u5b83\u4eec\u90fd\u5728\u90a3\u91cc\u3002\u8fd9\u5c31\u662f\u6240\u8c13\u7684\u8bcd\u6cd5\u4f5c\u7528\u57df\uff0c\u8fd9\u662f\u5927\u591a\u6570\u7f16\u7a0b\u8bed\u8a00\u5de5\u4f5c\u7684\u6700\u5e38\u89c1\u65b9\u5f0f\u3002</p> <p>\u5728\u672c\u8bfe\u7a0b\u7684\u5176\u4ed6\u90e8\u5206\uff0c\u6211\u4eec\u8c08\u5230\u4e86\u4e00\u79cd\u53eb\u505a\u52a8\u6001\u4f5c\u7528\u57df\u7684\u66ff\u4ee3\u65b9\u6848\uff0c\u4f46\u5b83\u51e0\u4e4e\u4ece\u4e0d\u88ab\u4f7f\u7528\u3002\u4ece\u667a\u529b\u4e0a\u8bb2\uff0c\u5b83\u6709\u70b9\u6709\u8da3\uff0c\u800c\u4e14\u6709\u4e00\u4e9b\u60c5\u51b5\u4e0b\u4f1a\u7528\u5230\uff0c\u4f46\u5728\u73b0\u4ee3\u7f16\u7a0b\u8bed\u8a00\u4e2d\u5b83\u57fa\u672c\u4e0d\u5b58\u5728\u3002\u56e0\u6b64\uff0c\u51fa\u4e8e\u8fd9\u4e2a\u539f\u56e0\uff0c\u4f60\u53ef\u4ee5\u4e0d\u4e86\u89e3\u5b83\u3002\u4f46\u5982\u679c\u4f60\u60f3\u4e86\u89e3\uff0c\u6545\u4e8b\u57fa\u672c\u4e0a\u662f\uff0c\u5f53\u4f60\u8c03\u7528\u4e00\u4e2a\u51fd\u6570\u65f6\uff0c\u8be5\u51fd\u6570\u7684\u73af\u5883\u7ee7\u627f\u4e86\u4ece\u5b83\u88ab\u8c03\u7528\u7684\u4efb\u4f55\u5730\u65b9\u5df2\u7ecf\u5b58\u5728\u7684\u6240\u6709\u540d\u79f0\u3002\u8fd9\u610f\u5473\u7740\u5f53\u4f60\u67e5\u770b\u51fd\u6570\u7684\u4e3b\u4f53\u65f6\uff0c\u5b83\u53ef\u80fd\u5305\u542b\u5728\u4ee3\u7801\u4e2d\u4f60\u65e0\u6cd5\u770b\u5230\u7684\u540d\u79f0\uff0c\u56e0\u4e3a\u5b83\u4eec\u5b9e\u9645\u4e0a\u662f\u5728\u8c03\u7528\u8be5\u51fd\u6570\u7684\u5730\u65b9\u5b9a\u4e49\u7684\uff0c\u53ef\u80fd\u5728\u4e0d\u540c\u7684\u6587\u4ef6\u4e2d\u7b49\u3002</p> <p>\u52a8\u6001\u4f5c\u7528\u57df\u5141\u8bb8\u4f60\u8bbe\u7f6e\u4f60\u7684\u73af\u5883\u7136\u540e\u8fdb\u884c\u51fd\u6570\u8c03\u7528\uff0c\u8fd9\u4e0e\u8bcd\u6cd5\u4f5c\u7528\u57df\u76f8\u5f53\u4e0d\u540c\uff0c\u5728\u8bcd\u6cd5\u4f5c\u7528\u57df\u4e2d\uff0c\u4f60\u5fc5\u987b\u4f20\u5165\u6240\u6709\u76f8\u5173\u7684\u5185\u5bb9\u3002\u4f46\u56e0\u4e3a\u8fd9\u4e2a\u539f\u56e0\uff0c\u5b83\u53ef\u4ee5\u7b80\u5316\u4e00\u4e9b\u4e8b\u60c5\uff0c\u800c\u4e0d\u662f\u4f20\u9012\u591a\u4e2a\u4e0d\u540c\u7684\u53c2\u6570\uff0c\u4f60\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528\u5b83\u4eec\uff0c\u800c\u65e0\u9700\u4f20\u9012\u5b83\u4eec\u3002\u56e0\u6b64\uff0c\u8fd9\u5c31\u662f\u52a8\u6001\u4f5c\u7528\u57df\u7684\u6545\u4e8b\uff0c\u5b83\u4e0e\u8bcd\u6cd5\u4f5c\u7528\u57df\u57fa\u672c\u76f8\u540c\uff0c\u53ea\u662f\u4e00\u4e2a\u6846\u67b6\u7684\u7236\u7ea7\u59cb\u7ec8\u662f\u8c03\u7528\u8be5\u51fd\u6570\u7684\u6846\u67b6\uff0c\u800c\u4e0d\u662f\u5b9a\u4e49\u8be5\u51fd\u6570\u7684\u5730\u65b9\u3002</p> <p>\u5173\u4e8e\u52a8\u6001\u4f5c\u7528\u57df\uff0c\u6211\u89c9\u5f97\u5173\u952e\u7684\u5730\u65b9\u5728\u4e8e\uff0c\u51fd\u6570\u5185\u90e8\u7684\u53c2\u6570\u662f\u57fa\u4e8e\u88ab\u8c03\u7528\u65f6\u7684\u73af\u5883\u7684</p>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part3/#2_2","title":"2","text":"<p>John\u4e3e\u4f8b\u89e3\u91ca\u9053scheme\u4e2d\u8868\u8fbe\u5f0f\u6c42\u503c\u7684\u987a\u5e8f</p> <pre><code>(if (= (+ 1 2) 3) (print 5) (print 6))\n\n--------------------------------------\n    -------------\n     - ------- -\n        - - -     \n                  ---------\n                   ----- -\n\n(define (cube x) (* x x x))\n\n---------------------------\n\n(cube (+ 1 2))\n\n--------------\n ---- -------\n       - - -\n\n                 ---------\n                  - - - -\n</code></pre> <p>\u53ef\u4ee5\u770b\u5230\u662f\u5148\u8fdb\u884c\u8868\u8fbe\u5f0f\u7684\u6c42\u503c\uff0c\u7136\u540e\u518d\u53bb\u5bf9\u8868\u8fbe\u5f0f\u5185\u90e8\u7684\u5b57\u8fdb\u884c\u6c42\u503c</p>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part3/#lab-12","title":"Lab 12","text":""},{"location":"Notes%20of%20Courses/CS61A/CS61A_part3/#1_3","title":"1","text":"<p>\u8fd9\u4e2alab\u4e2d\u9700\u8981\u8fd0\u884c\u547d\u4ee4</p> <pre><code>python sqlite_shell.py --init lab12.sql\n</code></pre> <p>\u6765\u52a0\u8f7d <code>lab12.sql</code> \u6587\u4ef6\u4ee5\u53ca\u542f\u52a8sql\u7684\u7ec8\u7aef\uff0c\u4f46\u662f\u57282020\u5e74\u79cb\u5b63\u8bfe\u7a0b\u7f51\u9875(\u4e0d\u77e5\u4ec0\u4e48\u539f\u56e0)\u7ed9\u51fa\u7684 <code>lab12.zip</code> \u4e2d\uff0c <code>sqlite_shell.py</code> \u662f\u4e2a\u7a7a\u6587\u4ef6\uff0c</p> <p>\u7136\u540e\u6211\u5c31\u53bb\u67e5\u770b\u4e86lab\u7f51\u9875\u4e2d\u7684 <code>Troubleshooting</code> \uff0c\u8fd9\u91cc\u63d0\u5230\u4e86\u53e6\u4e00\u79cd\u66ff\u4ee3\u65b9\u6cd5</p> <p>If running <code>python3 sqlite_shell.py</code> didn't work, you can download a precompiled sqlite directly by following the following instructions and then use <code>sqlite3</code> and <code>./sqlite3</code> instead of <code>python3 sqlite_shell.py</code> based on which is specified for your platform.</p> <p>\u5728SQLite\u5b98\u7f51\u4e0b\u8f7d\u5df2\u7ecf\u7f16\u8bd1\u597d\u7684\u53ef\u6267\u884c\u6587\u4ef6\uff0c\u4e8e\u662f\u6211\u6309\u7167\u7f51\u9875\u4e0a\u7684\u6307\u793a\u4e0b\u8f7d\u597d\u4e86 <code>sqlite-tools-win-x64-3450100.zip</code> \uff0c\u7136\u540e\u80fd\u5728\u7ec8\u7aef\u6b63\u5e38\u6253\u5f00 <code>sqlite.exe</code> \uff0c\u4f46\u662f\u6211\u5728\u4f7f\u7528\u547d\u4ee4</p> <pre><code>./sqlite3 &lt; lab12.sql\n</code></pre> <p>\u548c</p> <pre><code>./sqlite3 --init lab12.sql\n</code></pre> <p>\u52a0\u8f7d <code>lab12.sql</code> \u65f6\uff0c\u90fd\u663e\u793a\u76f8\u540c\u7684\u62a5\u9519</p> <pre><code>-- Loading resources from lab12.sql\nParse error near line 4: no such column: 11/13/2020 14:28:25\n   \"Image 3\", 129                   UNION    SELECT \"11/13/2020 14:28:25\"\n                                      error here ---^\nParse error near line 401: no such column: 11/13/2020 14:28:25\n  True\" , \"False\", \"False\", \"False\" UNION    SELECT \"11/13/2020 14:28:25\"\n                                      error here ---^\n...\n</code></pre> <p>\u4e0d\u77e5\u9053\u662f\u4ec0\u4e48\u539f\u56e0\u3002</p> <p>\u4e4b\u540e\u6211\u5206\u522b\u53bb\u67e5\u770b\u4e8623\u300121\u300119\u5e74\u79cb\u5b63\u7684\u5bf9\u5e94\u7684SQL\u7684lab(lab12\u6216lab13)\uff0c\u8fd9\u51e0\u4e2a\u5b66\u671f\u7684sql lab\u538b\u7f29\u5305\u5185\u7684 <code>sqlite_shell.py</code> \u6587\u4ef6\u90fd\u4e0d\u662f\u7a7a\u6587\u4ef6\uff0c\u5e76\u4e14\u4f3c\u4e4e\u4e09\u4e2a\u5b66\u671f\u7684 <code>sqlite_shell.py</code> \u6587\u4ef6\u54c8\u5e0c\u503c\u90fd\u4e00\u6837(\u8bf4\u660e\u662f\u540c\u4e00\u4e2a\u6587\u4ef6)\uff0c\u4e8e\u662f\u6211\u5c31\u5c0623\u79cb\u5b63\u7684 <code>sqlite_shell.py</code> \u89e3\u538b\u66ff\u6362\u4e86\u539f\u6709\u7684\u6587\u4ef6\uff0c\u6700\u540e\u53ef\u4ee5\u8fd0\u884c\u6700\u521d\u7684\u547d\u4ee4\u3002</p> sqlite_shell.py sqlite_shell.py<pre><code>#!/usr/bin/env python\n\n# Licensed under the MIT license\n\n# A simple SQLite shell that uses the built-in Python adapter.\n\nimport codecs\nimport io\nimport os\nimport sys\nimport sqlite3\nimport time\nimport warnings\n\ntry: FileNotFoundError\nexcept NameError: FileNotFoundError = OSError\n\nif str != bytes: buffer = bytes\nif str != bytes: unicode = str\n\ntry: import msvcrt\nexcept ImportError: msvcrt = None\n\nCP_UTF8 = 65001\npythonapi = None\nif msvcrt:\n    import ctypes\n    (BOOL, DWORD, HANDLE, UINT) = (ctypes.c_long, ctypes.c_ulong, ctypes.c_void_p, ctypes.c_uint)\n    GetConsoleCP = ctypes.WINFUNCTYPE(UINT)(('GetConsoleCP', ctypes.windll.kernel32))\n    SetConsoleCP = ctypes.WINFUNCTYPE(BOOL, UINT)(('SetConsoleCP', ctypes.windll.kernel32))\n    GetConsoleOutputCP = ctypes.WINFUNCTYPE(UINT)(('GetConsoleOutputCP', ctypes.windll.kernel32))\n    SetConsoleOutputCP = ctypes.WINFUNCTYPE(BOOL, UINT)(('SetConsoleOutputCP', ctypes.windll.kernel32))\n    GetConsoleMode = ctypes.WINFUNCTYPE(BOOL, HANDLE, ctypes.POINTER(DWORD), use_last_error=True)(('GetConsoleMode', ctypes.windll.kernel32))\n    GetNumberOfConsoleInputEvents = ctypes.WINFUNCTYPE(BOOL, HANDLE, ctypes.POINTER(DWORD), use_last_error=True)(('GetNumberOfConsoleInputEvents', ctypes.windll.kernel32))\n    ReadConsoleW = ctypes.WINFUNCTYPE(BOOL, HANDLE, ctypes.c_void_p, DWORD, ctypes.POINTER(DWORD), ctypes.c_void_p, use_last_error=True)(('ReadConsoleW', ctypes.windll.kernel32))\n    WriteConsoleW = ctypes.WINFUNCTYPE(BOOL, HANDLE, ctypes.c_void_p, DWORD, ctypes.POINTER(DWORD), ctypes.c_void_p, use_last_error=True)(('WriteConsoleW', ctypes.windll.kernel32))\n    class Py_buffer(ctypes.Structure): _fields_ = [('buf', ctypes.c_void_p), ('obj', ctypes.py_object), ('len', ctypes.c_ssize_t), ('itemsize', ctypes.c_ssize_t), ('readonly', ctypes.c_int), ('ndim', ctypes.c_int), ('format', ctypes.c_char_p), ('shape', ctypes.POINTER(ctypes.c_ssize_t)), ('strides', ctypes.POINTER(ctypes.c_ssize_t)), ('suboffsets', ctypes.POINTER(ctypes.c_ssize_t))] + ([('smalltable', ctypes.c_ssize_t * 2)] if sys.version_info[0] &lt;= 2 else []) + [('internal', ctypes.c_void_p)]\n    try: from ctypes import pythonapi\n    except ImportError: pass\nif pythonapi:\n    def getbuffer(b, writable):\n        arr = Py_buffer()\n        pythonapi.PyObject_GetBuffer(ctypes.py_object(b), ctypes.byref(arr), ctypes.c_int(writable))\n        try: buf = (ctypes.c_ubyte * arr.len).from_address(arr.buf)\n        finally: pythonapi.PyBuffer_Release(ctypes.byref(arr))\n        return buf\n\nENCODING = 'utf-8'\n\nif sys.version_info[0] &lt; 3:\n    class NotASurrogateError(Exception): pass\n    def surrogateescape_handler(exc):\n        # Source: https://github.com/PythonCharmers/python-future/blob/aef57391c0cd58bf840dff5e2bc2c8c0f5b0a1b4/src/future/utils/surrogateescape.py\n        mystring = exc.object[exc.start:exc.end]\n        try:\n            if isinstance(exc, UnicodeDecodeError):\n                decoded = []\n                for ch in mystring:\n                    if isinstance(ch, int):\n                        code = ch\n                    else:\n                        code = ord(ch)\n                    if 0x80 &lt;= code &lt;= 0xFF:\n                        decoded.append(unichr(0xDC00 + code))\n                    elif code &lt;= 0x7F:\n                        decoded.append(unichr(code))\n                    else:\n                        raise NotASurrogateError()\n                decoded = str().join(decoded)\n            elif isinstance(exc, UnicodeEncodeError):\n                decoded = []\n                for ch in mystring:\n                    code = ord(ch)\n                    if not 0xD800 &lt;= code &lt;= 0xDCFF:\n                        raise NotASurrogateError()\n                    if 0xDC00 &lt;= code &lt;= 0xDC7F:\n                        decoded.append(unichr(code - 0xDC00))\n                    elif code &lt;= 0xDCFF:\n                        decoded.append(unichr(code - 0xDC00))\n                    else:\n                        raise NotASurrogateError()\n                decoded = str().join(decoded)\n            else:\n                raise exc\n        except NotASurrogateError:\n            raise exc\n        return (decoded, exc.end)\n    codecs.register_error('surrogateescape', surrogateescape_handler)\n\ndef exception_encode(ex, codec):\n    if str == bytes:\n        reduced = ex.__reduce__()\n        ex = reduced[0](*tuple(map(lambda arg: codec.decode(arg)[0] if isinstance(arg, bytes) else arg, reduced[1])))\n    return ex\n\ndef sql_commands(read_line):\n    delims = ['\"', \"'\", ';', '--']\n    counter = 0\n    in_string = None\n    j = i = 0\n    prev_line = None\n    line = None\n    concat = []\n    while True:\n        if line is None:\n            while True:  # process preprocessor directives\n                counter += 1\n                not_in_the_middle_of_any_input = not in_string and i == j and all(map(lambda chunk_: len(chunk_) == 0, concat))\n                line = read_line(counter - 1, not_in_the_middle_of_any_input, prev_line)\n                empty_string = line[:0] if line is not None else line\n                prev_line = line\n                if not line:\n                    break\n                if not_in_the_middle_of_any_input and line.startswith(\".\"):\n                    yield line\n                    line = None\n                else:\n                    break\n            if not line:\n                break\n            j = i = 0\n        if j &lt; len(line):\n            (j, delim) = min(map(lambda pair: pair if pair[0] &gt;= 0 else (len(line), pair[1]), map(lambda d: (line.find(d, j), d), in_string or delims if in_string != '--' else \"\\n\")))\n            if i &lt; j: concat.append(line[i:j]); i = j\n            if not in_string:\n                if j &lt; len(line):\n                    j += len(delim)\n                    if delim == ';':\n                        i = j\n                        concat.append(line[j : j + len(delim)])    # ensure delimeter is the same type as the string (it may not be due to implicit conversion)\n                        # Eat up any further spaces until a newline\n                        while j &lt; len(line):\n                            delim = line[j:j+1]\n                            if not delim.isspace(): break\n                            j += 1\n                            if delim == \"\\n\": break\n                        if i &lt; j: concat.append(line[i:j]); i = j\n                        yield empty_string.join(concat)\n                        del concat[:]\n                    else:\n                        in_string = delim\n            else:\n                if j &lt; len(line):\n                    ch = line[j:j+1]\n                    assert ch == in_string or in_string == '--'\n                    j += 1\n                    i = j\n                    concat.append(ch)\n                    in_string = None\n        else:\n            if i &lt; j: concat.append(line[i:j]); i = j\n            line = None\n\nclass WindowsConsoleIOMixin(object):\n    # Ctrl+C handling with ReadFile() is messed up on Windows starting on Windows 8... here's some background reading:\n    #   https://stackoverflow.com/a/43260436\n    #   https://github.com/microsoft/terminal/issues/334\n    # We use ReadConsole when we can, so it doesn't affect us, but it's good info to know regardless.\n    def __init__(self, fd):\n        assert isatty(fd), \"file descriptor must refer to a console (note that on Windows, NUL satisfies isatty(), but is not a console)\"\n        self.fd = fd\n        self.handle = msvcrt.get_osfhandle(fd)\n    def fileno(self): return self.fd\n    def isatty(self): return isatty(self.fd)\n    def seekable(self): return False\n    def readable(self): return GetNumberOfConsoleInputEvents(self.handle, ctypes.byref(DWORD(0))) != 0\n    def writable(self): n = DWORD(0); return WriteConsoleW(self.handle, ctypes.c_void_p(), n, ctypes.byref(n), ctypes.c_void_p()) != 0\n    def readwcharsinto(self, buf, n):\n        nr = DWORD(n)\n        old_error = ctypes.get_last_error()\n        ctypes.set_last_error(0)\n        success = ReadConsoleW(self.handle, buf, nr, ctypes.byref(nr), ctypes.c_void_p())\n        error = ctypes.get_last_error()\n        ctypes.set_last_error(old_error)\n        if not success: raise ctypes.WinError(error)\n        ERROR_OPERATION_ABORTED = 995\n        if nr.value == 0 and error == ERROR_OPERATION_ABORTED:\n            # Apparently this can trigger pending KeyboardInterrupts?\n            time.sleep(1.0 / (1 &lt;&lt; 64))\n            raise KeyboardInterrupt()  # If Python doesn't raise it, we can\n        return nr.value\n    def writewchars(self, buf, n):\n        nw = DWORD(n)\n        if not WriteConsoleW(self.handle, buf, nw, ctypes.byref(nw), ctypes.c_void_p()):\n            raise ctypes.WinError()\n        return nw.value\n\nclass WindowsConsoleRawIO(WindowsConsoleIOMixin, io.RawIOBase):\n    def readinto(self, b):\n        wordsize = ctypes.sizeof(ctypes.c_wchar)\n        return self.readwcharsinto(getbuffer(b, True), len(b) // wordsize) * wordsize\n    def write(self, b):\n        wordsize = ctypes.sizeof(ctypes.c_wchar)\n        return self.writewchars(getbuffer(b, False), len(b) // wordsize) * wordsize\n\nclass WindowsConsoleTextIO(WindowsConsoleIOMixin, io.TextIOBase):\n    buf = None\n    buffered = unicode()\n    translate = True\n    def getbuf(self, ncodeunits):\n        buf = self.buf\n        if buf is None or len(buf) &lt; ncodeunits:\n            self.buf = buf = ctypes.create_unicode_buffer(ncodeunits)\n        return buf\n    @staticmethod  # Don't let classes override this... they can override the caller instead\n    def do_read(self, nchars, translate_newlines):\n        prenewline = os.linesep[:-1]\n        newline = os.linesep[-1:]\n        empty = os.linesep[:0]\n        if nchars is None or nchars &lt; -1: nchars = -1\n        ncodeunits = nchars if nchars &gt;= 0 else io.DEFAULT_BUFFER_SIZE  # Unit mismatch, but doesn't matter; we'll loop\n        buf = None\n        istart = 0\n        while True:\n            iend = self.buffered.find(newline, istart, min(istart + nchars, len(self.buffered)) if nchars &gt;= 0 else None) if newline is not None else nchars\n            if iend &gt;= 0: iend += len(newline) if newline is not None else 0\n            if 0 &lt;= iend &lt;= len(self.buffered):\n                break\n            if buf is None: buf = self.getbuf(ncodeunits)\n            istart = len(self.buffered)\n            chunk = buf[:self.readwcharsinto(buf, ncodeunits)]\n            if translate_newlines: chunk = chunk.replace(prenewline, empty)\n            if chunk.startswith('\\x1A'):  # EOF on Windows (Ctrl+Z) at the beginning of a line results in the entire rest of the buffer being discarded\n                iend = istart\n                break\n            # Python 2 and Python 3 behaviors differ on Windows... Python 2's sys.stdin.readline() just deletes the next character if it sees EOF in the middle of a string! I won't emulate that here.\n            self.buffered += chunk  # We're relying on Python's concatenation optimization here... we don't do it ourselves, since we want self.buffered to be valid every iteration in case there is an exception raised\n        result = self.buffered[:iend]\n        self.buffered = self.buffered[iend:]\n        return result\n    def read(self, nchars=-1): return WindowsConsoleTextIO.do_read(self, nchars, None, self.translate)\n    def readline(self, nchars=-1): return WindowsConsoleTextIO.do_read(self, nchars, self.translate)\n    def write(self, text): buf = ctypes.create_unicode_buffer(text); return self.writewchars(buf, max(len(buf) - 1, 0))\n\ndef wrap_windows_console_io(stream, is_output):\n    fd = None\n    if stream is not None and sys.version_info[0] &lt; 3 and msvcrt and (is_output or pythonapi) and isatty(stream):\n        try: fd = stream.fileno()\n        except io.UnsupportedOperation: pass\n    result = stream\n    if fd is not None:\n        f = GetConsoleOutputCP if is_output else GetConsoleCP\n        if not f or f() != CP_UTF8:\n            try:\n                if True or is_output:\n                    result = WindowsConsoleTextIO(fd)\n                else:\n                    result = io.TextIOWrapper((io.BufferedWriter if is_output else io.BufferedReader)(WindowsConsoleRawIO(fd)), 'utf-16-le', 'strict', line_buffering=True)\n            except IOError: pass\n    return result\n\nclass NonOwningTextIOWrapper(io.TextIOWrapper):\n    def __init__(self, base_textiowrapper, **kwargs):\n        assert isinstance(base_textiowrapper, io.TextIOWrapper)\n        self.base = base_textiowrapper  # must keep a reference to this alive so it doesn't get closed\n        super(NonOwningTextIOWrapper, self).__init__(base_textiowrapper.buffer, **kwargs)\n    def close(self):\n        super(NonOwningTextIOWrapper, self).flush()\n\ndef wrap_unicode_stdio(stream, is_writer, encoding):  # The underlying stream must NOT be used directly until the stream returned by this function is disposed of\n    if isinstance(stream, io.TextIOWrapper):\n        stream.flush()  # Make sure nothing is left in the buffer before we re-wrap it\n        none = object()\n        kwargs = {}\n        for key in ['encoding', 'errors', 'newline', 'line_buffering', 'write_through']:\n            value = getattr(stream, 'newlines' if key == 'newline' else key, none)\n            if value is not none:\n                kwargs[key] = value\n        kwargs['encoding'] = encoding\n        result = NonOwningTextIOWrapper(stream, **kwargs)\n    elif 'PYTHONIOENCODING' not in os.environ and str == bytes and stream in (sys.stdin, sys.stdout, sys.stderr):\n        result = (codecs.getwriter if is_writer else codecs.getreader)(encoding)(stream)\n    else:\n        result = stream\n    return result\n\nclass StringEscapeParser(object):\n    def __init__(self):\n        import re\n        self.pattern = re.compile(\"\\\"((?:[^\\\"\\\\n]+|\\\\\\\\.)*)(?:\\\"|$)|\\'([^\\'\\\\n]*)(?:\\'|$)|(\\\\S+)\")\n        self.escape_pattern = re.compile(\"\\\\\\\\(.)\", re.DOTALL)\n    @staticmethod\n    def escape_replacement(m):\n        text = m.group(1)\n        if text == \"\\\\\": text = \"\\\\\"\n        elif text == \"/\": text = \"\\n\"\n        elif text == \"n\": text = \"\\n\"\n        elif text == \"r\": text = \"\\r\"\n        elif text == \"t\": text = \"\\t\"\n        elif text == \"v\": text = \"\\v\"\n        elif text == \"f\": text = \"\\f\"\n        elif text == \"a\": text = \"\\a\"\n        elif text == \"b\": text = \"\\b\"\n        return text\n    def __call__(self, s):\n        escape_pattern = self.escape_pattern\n        escape_replacement = self.escape_replacement\n        result = []\n        for match in self.pattern.finditer(s):\n            [m1, m2, m3] = match.groups()\n            if m1 is not None: result.append(escape_pattern.sub(escape_replacement, m1))\n            if m2 is not None: result.append(m2)\n            if m3 is not None: result.append(escape_pattern.sub(escape_replacement, m3))\n        return result\n\nclass Database(object):\n    def __init__(self, name, *args, **kwargs):\n        self.connection = sqlite3.connect(name, *args, **kwargs)\n        self.cursor = self.connection.cursor()\n        self.name = name  # assign name only AFTER cursor is created\n\ndef isatty(file_or_fd):\n    result = True\n    method = getattr(file_or_fd, 'isatty', None) if not isinstance(file_or_fd, int) else None  # this check is just an optimization\n    if method is not None:\n        try: tty = method()\n        except io.UnsupportedOperation: tty = None\n        result = result and tty is not None and tty\n    method = getattr(file_or_fd, 'fileno', None) if not isinstance(file_or_fd, int) else None  # this check is just an optimization\n    if method is not None:\n        try: fd = method()\n        except io.UnsupportedOperation: fd = None\n        result = result and fd is not None and os.isatty(fd) and (not msvcrt or GetConsoleMode(msvcrt.get_osfhandle(fd), ctypes.byref(DWORD(0))) != 0)\n    return result\n\ndef can_call_input_for_stdio(stream):\n    return stream == sys.stdin and sys.version_info[0] &gt;= 3\n\nclass StdIOProxy(object):\n    # Maybe useful later: codecs.StreamRecoder(bytesIO, codec.decode, codec.encode, codec.streamwriter, codec.streamreader, errors='surrogateescape')\n    def __init__(self, stdin, stdout, stderr, codec, allow_set_code_page):\n        self.codec = codec\n        streams = (stdin, stdout, stderr)\n        for stream in streams:\n            assert isinstance(stream, io.IOBase) or sys.version_info[0] &lt; 3 and isinstance(stream, file) or hasattr(stream, 'mode'), \"unable to determine stream type\"\n            assert not isinstance(stream, io.RawIOBase), \"RAW I/O APIs are different and not supported\"\n        self.streaminfos = tuple(map(lambda stream:\n            (\n                stream,\n                isinstance(stream, io.BufferedIOBase) or isinstance(stream, io.RawIOBase) or not isinstance(stream, io.TextIOBase) and 'b' in stream.mode,\n                isinstance(stream, io.TextIOBase) or not (isinstance(stream, io.BufferedIOBase) or isinstance(stream, io.RawIOBase)) and 'b' not in stream.mode,\n                allow_set_code_page\n            ),\n            streams))\n    @property\n    def stdin(self): return self.streaminfos[0][0]\n    @property\n    def stdout(self): return self.streaminfos[1][0]\n    @property\n    def stderr(self): return self.streaminfos[2][0]\n    def _coerce(self, streaminfo, codec, arg):\n        stream = streaminfo[0]\n        can_binary = streaminfo[1]\n        can_text = streaminfo[2]\n        if not isinstance(arg, bytes) and not isinstance(arg, buffer) and not isinstance(arg, unicode):\n            arg = unicode(arg)\n        if isinstance(arg, bytes) or isinstance(arg, buffer):\n            if not can_binary:\n                arg = codec.decode(arg, 'surrogateescape')[0]\n        elif isinstance(arg, unicode):\n            if not can_text:\n                arg = codec.encode(unicode(arg), 'strict')[0]\n        return arg\n    @staticmethod\n    def _do_readline(stream, allow_set_code_page, *args):\n        new_code_page = CP_UTF8\n        old_code_page = GetConsoleCP() if msvcrt and GetConsoleCP and isatty(stream) else None\n        if old_code_page == new_code_page: old_code_page = None  # Don't change code page if it's already correct...\n        if old_code_page is not None:\n            if not SetConsoleCP(new_code_page):\n                old_code_page = None\n        try:\n            result = stream.readline(*args)\n        finally:\n            if old_code_page is not None:\n                SetConsoleCP(old_code_page)\n        return result\n    @staticmethod\n    def _do_write(stream, allow_set_code_page, *args):\n        new_code_page = CP_UTF8\n        old_code_page = GetConsoleOutputCP() if msvcrt and GetConsoleOutputCP and isatty(stream) else None\n        if old_code_page == new_code_page: old_code_page = None  # Don't change code page if it's already correct...\n        if old_code_page is not None:\n            if not SetConsoleOutputCP(new_code_page):\n                old_code_page = None\n        try:\n            result = stream.write(*args)\n        finally:\n            if old_code_page is not None:\n                SetConsoleCP(old_code_page)\n        return result\n    def _readln(self, streaminfo, codec, prompt):\n        stream = streaminfo[0]\n        can_binary = streaminfo[1]\n        allow_set_code_page = streaminfo[3]\n        if can_call_input_for_stdio(stream) and not can_binary:  # input() can't work with binary data\n            result = self._coerce(streaminfo, codec, \"\")\n            try:\n                result = input(*((self._coerce(streaminfo, codec, prompt),) if prompt is not None else ()))\n                result += self._coerce(streaminfo, codec, \"\\n\")\n            except EOFError: pass\n        else:\n            self.output(*((prompt,) if prompt is not None else ()))\n            self.error()\n            result = StdIOProxy._do_readline(stream, allow_set_code_page)\n        return result\n    def _writeln(self, streaminfo, codec, *args, **kwargs):\n        stream = streaminfo[0]\n        allow_set_code_page = streaminfo[3]\n        flush = kwargs.pop('flush', True)\n        kwargs.setdefault('end', '\\n')\n        kwargs.setdefault('sep', ' ')\n        end = kwargs.get('end')\n        sep = kwargs.get('sep')\n        first = True\n        for arg in args:\n            if first: first = False\n            elif sep is not None:\n                StdIOProxy._do_write(stream, allow_set_code_page, self._coerce(streaminfo, codec, sep))\n            StdIOProxy._do_write(stream, allow_set_code_page, self._coerce(streaminfo, codec, arg))\n        if end is not None:\n            StdIOProxy._do_write(stream, allow_set_code_page, self._coerce(streaminfo, codec, end))\n        if flush: stream.flush()\n    def inputln(self, prompt=None): return self._readln(self.streaminfos[0], self.codec, prompt)\n    def output(self, *args, **kwargs): kwargs.setdefault('end', None); return self._writeln(self.streaminfos[1], self.codec, *args, **kwargs)\n    def outputln(self, *args, **kwargs): return self._writeln(self.streaminfos[1], self.codec, *args, **kwargs)\n    def error(self, *args, **kwargs): kwargs.setdefault('end', None); return self._writeln(self.streaminfos[2], self.codec, *args, **kwargs)\n    def errorln(self, *args, **kwargs): return self._writeln(self.streaminfos[2], self.codec, *args, **kwargs)\n\nclass bytes_comparable_with_unicode(bytes):  # For Python 2/3 compatibility, to allow implicit conversion between strings and bytes when it is safe. (Used for strings like literals which we know be safe.)\n    codec = codecs.lookup('ascii')  # MUST be a safe encoding\n    @classmethod\n    def coerce(cls, other, for_output=False):\n        return cls.codec.encode(other)[0] if not isinstance(other, bytes) else bytes_comparable_with_unicode(other) if for_output else other\n    @classmethod\n    def translate_if_bytes(cls, value):\n        if value is not None and isinstance(value, bytes): value = cls(value)\n        return value\n    def __hash__(self): return super(bytes_comparable_with_unicode, self).__hash__()  # To avoid warning\n    def __eq__(self, other): return super(bytes_comparable_with_unicode, self).__eq__(self.coerce(other))\n    def __ne__(self, other): return super(bytes_comparable_with_unicode, self).__ne__(self.coerce(other))\n    def __lt__(self, other): return super(bytes_comparable_with_unicode, self).__lt__(self.coerce(other))\n    def __gt__(self, other): return super(bytes_comparable_with_unicode, self).__gt__(self.coerce(other))\n    def __le__(self, other): return super(bytes_comparable_with_unicode, self).__le__(self.coerce(other))\n    def __ge__(self, other): return super(bytes_comparable_with_unicode, self).__ge__(self.coerce(other))\n    def __getitem__(self, index): return self.coerce(super(bytes_comparable_with_unicode, self).__getitem__(index), True)\n    def __add__(self, other): return self.coerce(super(bytes_comparable_with_unicode, self).__add__(self.coerce(other)), True)\n    def __iadd__(self, other): return self.coerce(super(bytes_comparable_with_unicode, self).__iadd__(self.coerce(other)), True)\n    def __radd__(self, other): return self.coerce(self.coerce(other).__add__(self), True)\n    def find(self, other, *args): return super(bytes_comparable_with_unicode, self).find(self.coerce(other), *args)\n    def join(self, others): return self.coerce(super(bytes_comparable_with_unicode, self).join(map(self.coerce, others)), True)\n    def startswith(self, other): return super(bytes_comparable_with_unicode, self).startswith(self.coerce(other))\n    def __str__(self): return self.codec.decode(self)[0]\n    if str == bytes:\n        __unicode__ = __str__\n        def __str__(self): raise NotImplementedError()\n\ndef wrap_bytes_comparable_with_unicode_readline(readline):\n    def callback(*args):\n        line = readline(*args)\n        line = bytes_comparable_with_unicode.translate_if_bytes(line)\n        return line\n    return callback\n\ndef main(program, *args, **kwargs):  # **kwargs = dict(stdin=file, stdout=file, stderr=file); useful for callers who import this module\n    import argparse  # slow import (compiles regexes etc.), so don't import it until needed\n    argparser = argparse.ArgumentParser(\n        prog=os.path.basename(program),\n        usage=None,\n        description=None,\n        epilog=None,\n        parents=[],\n        formatter_class=argparse.RawTextHelpFormatter)\n    argparser.add_argument('-version', '--version', action='store_true', help=\"show SQLite version\")\n    argparser.add_argument('-batch', '--batch', action='store_true', help=\"force batch I/O\")\n    argparser.add_argument('-init', '--init', metavar=\"FILE\", help=\"read/process named file\")\n    argparser.add_argument('filename', nargs='?', metavar=\"FILENAME\", help=\"is the name of an SQLite database.\\nA new database is created if the file does not previously exist.\")\n    argparser.add_argument('sql', nargs='*', metavar=\"SQL\", help=\"SQL commnds to execute after opening database\")\n    argparser.add_argument('--readline', action='store', metavar=\"(true|false)\", default=\"true\", choices=(\"true\", \"false\"), help=\"whether to import readline if available (default: %(default)s)\")\n    argparser.add_argument('--self-test', action='store_true', help=\"perform a basic self-test\")\n    argparser.add_argument('--cross-test', action='store_true', help=\"perform a basic test against the official executable\")\n    argparser.add_argument('--unicode-stdio', action='store', metavar=\"(true|false)\", default=\"true\", choices=(\"true\", \"false\"), help=\"whether to enable Unicode wrapper for standard I/O (default: %(default)s)\")\n    argparser.add_argument('--console', action='store', metavar=\"(true|false)\", default=\"true\", choices=(\"true\", \"false\"), help=\"whether to auto-detect and use console window APIs (default: %(default)s)\")\n    argparser.add_argument('--encoding', default=ENCODING, help=\"the default encoding to use (default: %(default)s)\")\n    (stdin, stdout, stderr) = (kwargs.pop('stdin', sys.stdin), kwargs.pop('stdout', sys.stdout), kwargs.pop('stderr', sys.stderr))\n    parsed_args = argparser.parse_args(args)\n    codec = codecs.lookup(parsed_args.encoding or argparser.get_default('encoding'))\n    if parsed_args.self_test: self_test(codec)\n    if parsed_args.cross_test: cross_test(\"sqlite3\", codec)\n    parse_escaped_strings = StringEscapeParser()\n    if parsed_args.unicode_stdio == \"true\":\n        stdin = wrap_unicode_stdio(stdin, False, codec.name)\n        stdout = wrap_unicode_stdio(stdout, True, codec.name)\n        stderr = wrap_unicode_stdio(stderr, True, codec.name)\n    if parsed_args.console == \"true\":\n        stdin = wrap_windows_console_io(stdin, False)\n        stdout = wrap_windows_console_io(stdout, True)\n        stderr = wrap_windows_console_io(stderr, True)\n    allow_set_code_page = sys.version_info[0] &lt; 3 and False  # This is only necessary on Python 2 if we use the default I/O functions instead of bypassing to ReadConsole()/WriteConsole()\n    stdio = StdIOProxy(stdin, stdout, stderr, codec, allow_set_code_page)\n    db = None\n    no_args = len(args) == 0\n    init_sql = parsed_args.sql\n    is_nonpipe_input = stdin.isatty()  # NOT the same thing as TTY! (NUL and /dev/null are the difference)\n    init_show_prompt = not parsed_args.batch and is_nonpipe_input\n    if not parsed_args.batch and isatty(stdin) and (parsed_args.readline == \"true\" or __name__ == '__main__') and parsed_args.readline != \"false\":\n        try:\n            with warnings.catch_warnings():\n                warnings.filterwarnings('ignore', category=DeprecationWarning)\n                import readline\n        except ImportError: pass\n    if parsed_args and parsed_args.version:\n        stdio.outputln(sqlite3.sqlite_version);\n    else:\n        filename = parsed_args.filename\n        if filename is None: filename = \":memory:\"\n        db = Database(filename, isolation_level=None)\n    def exec_script(db, filename, ignore_io_errors):\n        try:\n            with io.open(filename, 'r', encoding=codec.name) as f:  # Assume .sql files are text -- any binary data inside them should be X'' encoded, not embedded directly\n                for command in sql_commands(wrap_bytes_comparable_with_unicode_readline(lambda *args: (lambda s: (s) or None)(f.readline()))):\n                    result = exec_command(db, command, False and ignore_io_errors)\n                    if result is not None:\n                        return result\n        except IOError as ex:\n            stdio.errorln(ex)\n            if not ignore_io_errors: return ex.errno\n    def raise_invalid_command_error(command):\n        if isinstance(command, bytes): command = codec.decode(command)[0]\n        if command.startswith(\".\"): command = command[1:]\n        raise RuntimeError(\"Error: unknown command or invalid arguments:  \\\"%s\\\". Enter \\\".help\\\" for help\" % (command.rstrip().replace(\"\\\\\", \"\\\\\\\\\").replace(\"\\\"\", \"\\\\\\\"\"),))\n    def exec_command(db, command, ignore_io_errors):\n        results = None\n        query = None\n        query_parameters = {}\n        try:\n            if command.startswith(\".\"):\n                args = list(parse_escaped_strings(command))\n                if args[0] in (\".quit\", \".exit\"):\n                    return 0\n                elif args[0] == \".help\":\n                    stdio.error(\"\"\"\n.cd DIRECTORY          Change the working directory to DIRECTORY\n.dump                  Dump the database in an SQL text format\n.exit                  Exit this program\n.help                  Show this message\n.open FILE             Close existing database and reopen FILE\n.print STRING...       Print literal STRING\n.quit                  Exit this program\n.read FILENAME         Execute SQL in FILENAME\n.schema ?PATTERN?      Show the CREATE statements matching PATTERN\n.show                  Show the current values for various settings\n.tables ?TABLE?        List names of tables\n\"\"\".lstrip())\n                elif args[0] == \".cd\":\n                    if len(args) != 2: raise_invalid_command_error(command)\n                    os.chdir(args[1])\n                elif args[0] == \".dump\":\n                    if len(args) != 1: raise_invalid_command_error(command)\n                    foreign_keys = db.cursor.execute(\"PRAGMA foreign_keys;\").fetchone()[0]\n                    if foreign_keys in (0, \"0\", \"off\", \"OFF\"):\n                        stdio.outputln(\"PRAGMA foreign_keys=OFF;\", flush=False)\n                    for line in db.connection.iterdump():\n                        stdio.outputln(line, flush=False)\n                    stdio.output()\n                elif args[0] == \".open\":\n                    if len(args) &lt;= 1: raise_invalid_command_error(command)\n                    filename = args[-1]\n                    for option in args[+1:-1]:\n                        raise ValueError(\"option %s not supported\" % (repr(option),))\n                    try: db.__init__(filename)\n                    except sqlite3.OperationalError as ex:\n                        ex.args = ex.args[:0] + (\"Error: unable to open database \\\"%s\\\": %s\" % (filename, ex.args[0]),) + ex.args[1:]\n                        raise\n                elif args[0] == \".print\":\n                    stdio.outputln(*args[1:])\n                elif args[0] == \".read\":\n                    if len(args) != 2: raise_invalid_command_error(command)\n                    exec_script(db, args[1], ignore_io_errors)\n                elif args[0] == \".schema\":\n                    if len(args) &gt; 2: raise_invalid_command_error(command)\n                    pattern = args[1] if len(args) &gt; 1 else None\n                    query_parameters['type'] = 'table'\n                    if pattern is not None:\n                        query_parameters['pattern'] = pattern\n                    query = \"SELECT sql || ';' FROM sqlite_master WHERE type = :type\" + (\" AND name LIKE :pattern\" if pattern is not None else \"\") + \";\"\n                elif args[0] == \".show\":\n                    if len(args) &gt; 2: raise_invalid_command_error(command)\n                    stdio.errorln(\"    filename:\", db.name)\n                elif args[0] == \".tables\":\n                    if len(args) &gt; 2: raise_invalid_command_error(command)\n                    pattern = args[1] if len(args) &gt; 1 else None\n                    query_parameters['type'] = 'table'\n                    if pattern is not None:\n                        query_parameters['pattern'] = pattern\n                    query = \"SELECT name FROM sqlite_master WHERE type = :type\" + (\" AND name LIKE :pattern\" if pattern is not None else \"\") + \";\"\n                else:\n                    raise_invalid_command_error(args[0])\n            else:\n                query = command\n            if query is not None:\n                results = db.cursor.execute(query if isinstance(query, unicode) else codec.decode(query, 'surrogatereplace')[0], query_parameters)\n        except (RuntimeError, OSError, FileNotFoundError, sqlite3.OperationalError) as ex:\n            stdio.errorln(exception_encode(ex, codec))\n        if results is not None:\n            for row in results:\n                stdio.outputln(*tuple(map(lambda item: item if item is not None else \"\", row)), sep=\"|\", flush=False)\n            stdio.output()\n    if db:\n        if parsed_args and parsed_args.init:\n            if is_nonpipe_input: stdio.errorln(\"-- Loading resources from\", parsed_args.init)\n            exec_script(db, parsed_args.init, False)\n        def read_stdin(index, not_in_the_middle_of_any_input, prev_line):\n            show_prompt = init_show_prompt\n            to_write = []\n            if index &lt; len(init_sql):\n                line = init_sql[index]\n                if not line.startswith(\".\") and not line.rstrip().endswith(\";\"):\n                    line += \";\"\n            elif index == len(init_sql) and len(init_sql) &gt; 0:\n                line = None\n            else:\n                if show_prompt:\n                    if not_in_the_middle_of_any_input:\n                        show_prompt = False\n                        if index == 0:\n                            to_write.append(\"SQLite version %s (adapter version %s)\\nEnter \\\".help\\\" for usage hints.\\n\" % (sqlite3.sqlite_version, sqlite3.version))\n                            if no_args:\n                                to_write.append(\"Connected to a transient in-memory database.\\nUse \\\".open FILENAME\\\" to reopen on a persistent database.\\n\")\n                    if index &gt; 0 and not prev_line:\n                        to_write.append(\"\\n\")\n                    to_write.append(\"%7s \" % (\"sqlite%s&gt;\" % (\"\",) if not_in_the_middle_of_any_input else \"...&gt;\",))\n                try:\n                    line = stdio.inputln(\"\".join(to_write))\n                except KeyboardInterrupt:\n                    line = \"\"\n                    raise  # just kidding, don't handle it for now...\n            return line\n        for command in sql_commands(wrap_bytes_comparable_with_unicode_readline(read_stdin)):\n            result = exec_command(db, command, True)\n            if result is not None:\n                return result\n        if init_show_prompt and len(init_sql) == 0:\n            stdio.outputln()\n\ndef call_program(cmdline, input_text):\n    import subprocess\n    return subprocess.Popen(cmdline, bufsize=0, stdin=subprocess.PIPE, stdout=subprocess.PIPE, stderr=subprocess.PIPE, universal_newlines=False).communicate(input_text)\n\ndef test_query():\n    hexcodec = codecs.lookup('hex_codec')\n    ascii = 'ascii'\n    data1 = b\"\\xD8\\xA2\"\n    data2 = b\"\\x01\\x02\\xFF\\x01\\xFF\\xFE\\xFD\"\n    values = [data1, data2]\n    query_bytes = b'SELECT %s;' % (b\", \".join(map(lambda b: b\"X'%s'\" % (hexcodec.encode(b)[0].upper(),), values)),)\n    expected_bytes = b\"%s\\n\" % (b\"|\".join(values),)\n    return query_bytes, expected_bytes\n\ndef cross_test(sqlite_cmdline, codec):\n    (query_bytes, expected_bytes) = test_query()\n    (official_output, official_error) = call_program(sqlite_cmdline, query_bytes)\n    # We can't use os.linesep here since binaries may belong to different platforms (Win32/MinGW vs. MSYS/Cygwin vs. WSL...)\n    official_output = official_output.replace(b\"\\r\\n\", b\"\\n\")\n    official_error = official_error.replace(b\"\\r\\n\", b\"\\n\")\n    if official_output != expected_bytes:\n        raise sqlite3.ProgrammingError(\"expected bytes are wrong: official %s != expected %s\" % (repr(official_output), repr(expected_bytes)))\n    if official_error:\n        raise sqlite3.ProgrammingError(\"did not expect errors from official binary\")\n\ndef self_test(codec):\n    (query_bytes, expected_bytes) = test_query()\n    if not (lambda stdin, stdout, stderr: not main(sys.argv[0], stdin=stdin, stdout=stdout, stderr=stderr) and stdout.getvalue() == expected_bytes)(io.BytesIO(query_bytes), io.BytesIO(), io.BytesIO()):\n        raise sqlite3.ProgrammingError(\"byte I/O is broken\")\n    if not (lambda stdin, stdout, stderr: not main(sys.argv[0], stdin=stdin, stdout=stdout, stderr=stderr) and stdout.getvalue() == codec.decode(expected_bytes, 'surrogateescape'))(io.StringIO(query_bytes.decode(ascii)), io.StringIO(), io.StringIO()):\n        raise sqlite3.ProgrammingError(\"string I/O is broken\")\n\nif __name__ == '__main__':\n    import sys\n    exit_code = main(*sys.argv)\n    if exit_code not in (None, 0): raise SystemExit(exit_code)\n</code></pre>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part3/#2_3","title":"2","text":"<p>Q4\u4e2d\uff0c\u6211\u672c\u6765\u5199\u7684\u662f</p> <pre><code>CREATE TABLE matchmaker AS\n  select pet, song, a.color, b.color from students as a, students as b\n  where a.pet = b.pet and a.song = b.song and a.time &lt; b.time;\n</code></pre> <p>\u4f46\u662f\u663e\u793a\u4e86\u8fd9\u6837\u7684\u62a5\u9519</p> <pre><code>ambiguous column name: pet\nno such table: matchmaker\n</code></pre> <p>\u5206\u6790\u5e94\u8be5\u662f\u7528\u8868\u8054\u63a5\u81ea\u8eab\u5e76\u52a0\u4e0a\u4e86\u522b\u540d\u65f6\uff0c\u5217\u7684\u540d\u79f0\u4e5f\u9700\u8981\u52a0\u4e0a\u522b\u540d\uff0c\u4fee\u6539\u540e\u6700\u540e\u901a\u8fc7</p> code <pre><code>CREATE TABLE matchmaker AS\n  select a.pet, a.song, a.color, b.color from students as a, students as b\n  where a.pet = b.pet and a.song = b.song and a.time &lt; b.time;\n</code></pre>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part3/#3_2","title":"3","text":"<p>\u5728\u505aQ5\u65f6\u53d1\u73b0\uff0c\u5982\u679c\u8054\u63a5\u4e86\u591a\u4e2a\u8868\uff0c\u6bcf\u4e2a\u8868\u7684\u5217\u540d\u9700\u8981\u4f7f\u7528 <code>.</code> \u6765\u4f7f\u7528\uff0c\u5373\u4f7f\u8fd9\u4e2a\u5217\u540d\u5728\u5176\u4ed6\u8868\u4e2d\u4e0d\u5b58\u5728\uff0c\u4f8b\u5982</p> <pre><code>select * from students, numbers where '7' = 'True';\n</code></pre> <p>\u8fd9\u884c\u8bed\u53e5\u8fd0\u884c\u540e\u6ca1\u6709\u7ed3\u679c\uff0c\u6216\u8005\u8bf4\u6ca1\u6709\u5339\u914d\u7684\u884c\uff0c</p> <pre><code>select * from students, numbers where students.'7' = 'True';\n</code></pre> <p>\u4f46\u8fd9\u4e00\u884c\u8bed\u53e5\u5c31\u4f1a\u6709\u7ed3\u679c</p> code <pre><code>CREATE TABLE sevens AS\n  select a.seven from students as a, numbers as b where a.time = b.time and a.number = 7 and b.'7' = 'True';\n</code></pre>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part3/#lecture-33-aggregation","title":"Lecture 33 Aggregation","text":""},{"location":"Notes%20of%20Courses/CS61A/CS61A_part3/#1_4","title":"1","text":"<p>sql\u4e2d\u7684\u805a\u5408\u51fd\u6570 Aggregation function \uff0c\u53ef\u4ee5\u4f7f\u7528\u591a\u884c\u7684\u6570\u636e\u8fdb\u884c\u5904\u7406\uff0c\u6bd4\u5982</p> <ul> <li><code>max</code> <code>min</code> \u53d6\u6700\u5927/\u6700\u5c0f</li> <li><code>sum</code> \u53d6\u6240\u6709\u6570\u636e\u7684\u548c</li> <li><code>avg</code> \u53d6\u6240\u6709\u6570\u636e\u7684\u5e73\u5747\u503c</li> <li><code>count</code> \u83b7\u53d6\u6570\u636e\u7684\u4e2a\u6570</li> </ul> <p>\u5728\u4f20\u5165\u53c2\u6570(\u5217\u540d)\u65f6\uff0c\u8fd8\u53ef\u4ee5\u5728\u53c2\u6570\u524d\u6dfb\u52a0 <code>distinct</code> \uff0c\u8868\u793a\u8fd9\u4e00\u5217\u4e2d\u91cd\u590d\u7684\u5143\u7d20\u53ea\u53d6\u7528\u4e00\u4e2a\uff0c\u53ef\u4ee5\u53c2\u8003\u4e0b\u56fe</p> <p></p> <p></p> <p></p> <p>\u805a\u5408\u51fd\u6570\u4e5f\u53ef\u4ee5\u548c\u5176\u4ed6\u666e\u901a\u7684\u8868\u8fbe\u5f0f\u4e00\u8d77\u6df7\u5408\u4f7f\u7528\uff0c\u6765\u83b7\u53d6\u5176\u4ed6\u6709\u7528\u7684\u4fe1\u606f(\u540c\u4e00\u884c\u6570\u636e\u7684\u5176\u4ed6\u4fe1\u606f)\uff0c\u5982\u4e0a\u56fe\u4e2dJohn\u7684\u6f14\u793a\uff0c</p> <p>\u4f46\u6709\u4e9b\u805a\u5408\u51fd\u6570\u7ed3\u679c\u4e0d\u4f1a\u662f\u67d0\u884c\u6570\u636e\u4e2d\u7684\u6570\u503c\uff0c</p> <p>Quote</p> <p>John:</p> <p>...So, you have to be careful about selecting single values in conjunction with aggregations. Some aggregations give you a meaningful value, like <code>min</code> and <code>max</code> ; others don't, like <code>avg</code> .</p> <p>John:</p> <p>...\u5f53\u4f60\u4e0e\u805a\u5408\u51fd\u6570\u4e00\u8d77\u9009\u62e9\u5355\u4e00\u503c\u65f6\uff0c\u4f60\u5fc5\u987b\u5c0f\u5fc3\u3002\u6709\u4e9b\u805a\u5408\u51fd\u6570\u4f1a\u7ed9\u4f60\u4e00\u4e2a\u6709\u610f\u4e49\u7684\u503c\uff0c\u6bd4\u5982 <code>min</code> \u548c <code>max</code> \uff0c\u800c\u5176\u4ed6\u4e00\u4e9b\u5374\u4e0d\u4f1a\uff0c\u6bd4\u5982 <code>avg</code> \u3002</p> <p>\u5e76\u4e14\uff0c\u4eceJohn\u7684demo\u6f14\u793a\u4e2d\u53ef\u4ee5\u770b\u5230\uff0c\u5728\u4f7f\u7528 <code>min</code> \u6216 <code>max</code> \u65f6\uff0c\u5373\u4f7f\u6709\u591a\u884c\u6570\u636e\u90fd\u662f\u6700\u5c0f/\u5927\u503c\uff0c\u4f46\u662f\u5374\u53ea\u662f\u8fd4\u56de\u4e86\u4e00\u4e2a\u7ed3\u679c</p> <pre><code>sqlite&gt; select max(legs), kind from animals;\n4|cat\n</code></pre>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part3/#2_4","title":"2","text":"<p>\u5206\u7ec4 group</p> <p>\u53ef\u4ee5\u4f7f\u7528 <code>group by</code> \u8fdb\u884c\u5206\u7ec4\uff0c\u5728 <code>group by</code> \u540e\u5199(\u5355\u4e2a\u6216\u591a\u4e2a)\u5217\u540d\u6216\u8868\u8fbe\u5f0f\uff0c\u5c31\u4f1a\u628a\u6bcf\u4e2a\u76f8\u540c\u7684\u503c\u5bf9\u5e94\u7684\u90a3\u4e00\u884c\u5206\u5230\u540c\u4e00\u4e2a\u7ec4\uff0c\u800c\u5982\u679c\u4f7f\u7528\u805a\u5408\u51fd\u6570\u5c31\u4f1a\u5206\u522b\u4f5c\u7528\u4e8e\u6bcf\u4e2a\u7ec4(\u800c\u4e0d\u662f\u4f5c\u7528\u4e8e\u6574\u4e2a\u8868\u6240\u6709\u884c\u7684\u6570\u636e)\uff0c\u53ef\u4ee5\u53c2\u8003\u4e0a\u56fe\u4e2dJohn\u7684demo\u6f14\u793a</p> <p></p> <p>\u5728\u5206\u7ec4\u65f6\uff0c\u8fd8\u53ef\u4ee5\u4f7f\u7528 <code>having</code> \u6765\u5bf9\u7ec4\u8fdb\u884c\u7b5b\u9009(\u533a\u522b\u4e8e <code>where</code> \u662f\u5bf9\u5355\u884c\u6570\u636e\u8fdb\u884c\u7b5b\u9009)</p>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part3/#lecture-33-qa","title":"Lecture 33 Q&amp;A","text":""},{"location":"Notes%20of%20Courses/CS61A/CS61A_part3/#1_5","title":"1","text":"<p>\u6709\u4eba\u5411John\u63d0\u95ee\u7684mentor13(\u5728\u7f51\u7ad9\u4e0a\u6ca1\u627e\u5230)\u7684\u4e00\u9898\uff0c</p> <p>Quote</p> <p>Fill in <code>skip-list</code> , which takes in a potentially nested list <code>lst</code> and a single-argument filter function <code>filter-fn</code> that returns a boolean when called, and goes through each element in order. It returns a new list that contains all elements that return true when passed into <code>filter-fn</code> . The returned list is not nested.</p> <pre><code>;Doctests\nscm&gt; (skip-list '(1 (3)) even?)\n()\nscm&gt; (skip-list'(1 (2 (3 4) 5) 6 (7) 8 9) odd?)\n(1 3 5 7 9)\n</code></pre> <pre><code>(define (skip-list lst filter-fn)\n    (define (helper lst lst-so-far next)\n        (cond\n            ((null? lst)\n                (if (null? ______)\n                    ______\n                    ______)\n            )\n            ((pair? ______)\n                (______))\n            ((filter-fn (car lst))\n                ______)\n            (else\n                ______)\n        )\n    )\n    (helper ______)\n)\n</code></pre> <p>\u4e8e\u662f\u81ea\u5df1\u5199\u4e86\u4e00\u4e0b\uff0c</p> <p>\u7531\u4e8e\u4e0d\u6e05\u695a <code>null?</code> \u548c <code>pair?</code> \u7684\u4f5c\u7528\uff0c\u4e8e\u662f\u5148\u8bd5\u4e86\u4e00\u4e0b\uff0c\u53d1\u73b0 <code>null?</code> \u53ea\u5728\u4f20\u5165\u7a7a\u5217\u8868 <code>nil</code> \u6216\u8005 <code>()</code> \u65f6\u624d\u8fd4\u56de <code>true</code> \uff0c\u800c <code>pair?</code> \u53ea\u5728\u4f20\u5165\u4e1c\u897f\u4e3a\u5217\u8868\uff0c\u4e14\u5217\u8868\u4e0d\u4e3a\u7a7a\u65f6\u8fd4\u56de <code>true</code> (\u4f20\u5165 <code>(())</code> \u65f6\u4e5f\u8fd4\u56de <code>true</code> )\u3002</p> <p>\u6700\u540e\u5199\u4e86\u597d\u4e00\u4f1a\u624d\u5199\u51fa\u6765\uff0c\u8fd9\u9898\u6709\u70b9\u590d\u6742\uff0c\u56e0\u4e3a\u9700\u8981\u628a\u5d4c\u5957\u7684\u5217\u8868\u7ed9\u5c55\u5f00\uff0c</p> <p>\u6240\u4ee5\u4e3a\u4e86\u5904\u7406\u8fd9\u6837\u7684\u60c5\u51b5\uff0c\u5728\u8fdb\u5165\u66f4\u6df1\u5c42\u7684\u5217\u8868\u65f6\uff0c\u5c31\u9700\u8981\u901a\u8fc7 <code>next</code> \u53c2\u6570\u6765\u6807\u8bb0\u4e4b\u524d\u7684\u4f4d\u7f6e(\u4e00\u5f00\u59cb\u8fd8\u4ee5\u4e3a <code>next</code> \u6307\u7684\u662f\u5217\u8868\u7684\u4e4b\u540e\u7684\u90e8\u5206\uff0c\u4f46\u662f\u60f3\u5230\u8fd9\u6837\u7684\u60c5\u51b5\u4e00\u822c\u4f7f\u7528 <code>rest</code> \u6765\u547d\u540d)\uff0c</p> <p>\u6700\u597d\u60f3\u7684\u5c31\u662f <code>(filter-fn (car lst)</code> \u548c <code>else</code> \u4e24\u884c\uff0c\u56e0\u4e3a\u8fd9\u4e24\u884c\u5c31\u5bf9\u5e94\u666e\u901a\u7684\u60c5\u51b5\uff0c\u5373\u5217\u8868\u4e0d\u662f\u5d4c\u5957\u7684\uff0c\u90a3\u4e48\u5c31\u5927\u6982\u53ef\u4ee5\u5f97\u5230</p> <pre><code>((filter-fn (car lst))\n    (helper (cdr lst) (append lst-so-far (list (car lst))) next))\n(else\n    (helper (cdr lst) lst-so-far next))\n</code></pre> <p>\u8fd9\u91cc\u6211\u4f7f\u7528\u4e86scheme\u4e2d\u7684 <code>append</code> \u51fd\u6570\uff0c\u56e0\u4e3a\u9700\u8981\u5c06\u7b26\u5408\u7b5b\u9009\u6761\u4ef6\u7684\u5143\u7d20\u62fc\u63a5\u5230 <code>lst-so-far</code> \u7684\u5c3e\u90e8\uff0c</p> <p><code>append</code> \u51fd\u6570\u7684\u7528\u6cd5\u662f\u4f20\u5165\u591a\u4e2a\u5217\u8868\uff0c\u5c06\u4ed6\u4eec\u6309\u987a\u5e8f\u62fc\u5230\u4e00\u8d77\uff0c\u6240\u4ee5\u8fd9\u91cc\u7684\u4ee3\u7801\u5c31\u5199\u6210\u4e86 <code>(list (car lst))</code> </p> <p>\u4e00\u5f00\u59cb\u5199\u7684\u662f</p> <pre><code>(append lst-so-far (car lst))\n</code></pre> <p>\u7136\u540e\u8fd0\u884c\u6d4b\u8bd5\u65f6\u5c31\u62a5\u9519\u4e86\ud83d\ude05</p> <pre><code>scm&gt; (skip-list '(1 (3)) even?)\n()\nscm&gt; (skip-list '(1 (2 (3 4) 5) 6 (7) 8 9) odd?)\nTraceback (most recent call last):\n  1     (append lst-so-far (car lst))\nError: argument 0 of append has wrong type (int)\n</code></pre> <p>\u63a5\u7740\u6765\u5904\u7406 <code>pair?</code> \u8fd9\u4e2a\u60c5\u51b5\uff0c\u6839\u636e\u521a\u624d\u7684\u4e24\u79cd\u60c5\u51b5\u5927\u6982\u5c31\u80fd\u731c\u5230\u8fd9\u91cc\u5e94\u8be5\u5c31\u662f\u5224\u65ad\u7b2c\u4e00\u4e2a\u5143\u7d20\u662f\u4e0d\u662f\u5217\u8868\uff0c\u6240\u4ee5 <code>(pair? (car lst))</code> \uff0c</p> <p>\u4e8e\u662f\u5982\u679c\u662f\u7b2c\u4e00\u4e2a\u5143\u7d20\u662f\u5217\u8868\uff0c\u90a3\u4e48\u80af\u5b9a\u9700\u8981\u5411\u5185\u7ee7\u7eed\u8d70\uff0c\u53ef\u4ee5\u731c\u5230\u8fd9\u79cd\u60c5\u51b5\u4e0b\u9012\u5f52\u8c03\u7528\u7684 <code>helper</code> \u7684\u7b2c\u4e00\u4e2a\u53c2\u6570\u4f1a\u662f <code>(car lst)</code> \uff0c</p> <p>\u7136\u540e\u6700\u5173\u952e\u7684\u5730\u65b9\u5728\u4e8e\uff0c\u9700\u8981\u8bb0\u4f4f <code>lst</code> \u4e4b\u540e\u7684\u5143\u7d20\uff0c\u4e00\u5f00\u59cb\u6211\u4ee5\u4e3a <code>helper</code> \u7b2c\u4e09\u4e2a\u53c2\u6570\u5c31\u662f <code>(cdr lst)</code> \uff0c\u4f46\u60f3\u5230\u5982\u679c\u518d\u6709\u4e00\u5c42\u5d4c\u5957\u7684\u5217\u8868\uff0c\u539f\u672c\u7684 <code>next</code> \u5c31\u4f1a\u88ab\u8986\u76d6\u4e22\u5931\uff0c</p> <p>\u6700\u540e\u60f3\u4e86\u597d\u4e45\u7ec8\u4e8e\u60f3\u5230\u5e94\u8be5\u662f\u628a\u4e24\u8005\u5408\u5e76\u5230\u4e00\u8d77(\u8fd9\u6837\u4e24\u8005\u7684\u4fe1\u606f\u90fd\u5305\u542b\u4e86)\uff0c\u6240\u4ee5</p> <pre><code>((pair? (car lst))\n    (helper (car lst) lst-so-far (cons (cdr lst) next)))\n</code></pre> <p>\u4e8e\u662fbase case\u7684\u60c5\u51b5\u5c31\u4e0d\u96be\u60f3\u4e86\uff0c\u7ed3\u675f\u9012\u5f52\u65f6\u8fd4\u56de <code>lst-so-far</code> \u5373\u53ef\uff0c</p> <pre><code>((null? lst)\n\n    (if (null? next)\n        lst-so-far\n        (helper (car next) lst-so-far (cdr next)))\n)\n</code></pre> <p>\u6240\u4ee5 <code>skip-list</code> \u4e2d\u7684\u90a3\u4e00\u884c\u5c31\u662f</p> <pre><code>(helper lst nil nil)\n</code></pre> <p>\u5b8c\u6574\u7684\u7b54\u6848\u4e3a</p> <pre><code>(define (skip-list lst filter-fn)\n    (define (helper lst lst-so-far next)\n        (cond\n            ((null? lst)\n                (if (null? next)\n                    lst-so-far\n                    (helper (car next) lst-so-far (cdr next)))\n            )\n            ((pair? (car lst))\n                (helper (car lst) lst-so-far (cons (cdr lst) next)))\n            ((filter-fn (car lst))\n                (helper (cdr lst) (append lst-so-far (list (car lst))) next))\n            (else\n                (helper (cdr lst) lst-so-far next))\n        )\n    )\n    (helper lst nil nil)\n)\n</code></pre> <p>John\u6700\u540e\u7684\u7b54\u6848\u548c\u6211\u7684\u6709\u4e9b\u533a\u522b\uff0c\u4ed6\u662f\u4f7f\u7528\u4e86 <code>append</code> \u6765\u8fde\u63a5 <code>(cdr lst)</code> \u548c <code>next</code> \uff0c</p> <pre><code>(helper (car lst) lst-so-far (append (cdr lst) next))\n</code></pre> <p>\u800cbase case\u4e2d\u5c31\u662f</p> <pre><code>(if (null? next)\n    lst-so-far\n    (helper next lst-so-far nil))\n</code></pre> code <pre><code>(define (skip-list lst filter-fn)\n    (define (helper lst lst-so-far next)\n        (cond\n            ((null? lst)\n                (if (null? next)\n                    lst-so-far\n                    (helper next lst-so-far nil))\n            )\n            ((pair? (car lst))\n                (helper (car lst) lst-so-far (append (cdr lst) next))\n            ((filter-fn (car lst))\n                (helper (cdr lst) (append lst-so-far (list (car lst))) next))\n            (else\n                (helper (cdr lst) lst-so-far next))\n        )\n    )\n    (helper lst nil nil)\n)\n</code></pre> <p>\u800cJohn\u53c8\u8bf4\u5230\u8fd9\u9898\u63d0\u4f9b\u7684\u4ee3\u7801\u6846\u67b6\u4e2d\u7684 <code>helper</code> \u51fd\u6570\uff0c\u5176\u5b9e\u8ba9\u8fd9\u9898\u53d8\u5f97\u590d\u6742\u4e86\uff0c <code>lst-so-far</code> \u5bf9\u5e94\u7740\u4ece\u5934(\u5de6\u8fb9)\u52a0\u8f7d\u7ed3\u679c\uff0c\u800c\u5982\u679c\u6309\u7167\u4ee5\u5f80\u7684\u601d\u8def\uff0c\u4ece\u672b\u5c3e(\u53f3\u8fb9)\u52a0\u8f7d\u7ed3\u679c\uff0c\u4f1a\u66f4\u7b80\u5355\uff0c\u4ee3\u7801\u662f</p> <pre><code>(define (skip-list s f)\n  (cond ((null? s) nil)\n        ((list? (car s)) (append (skip-list (car s) f) (skip-list (cdr s) f)))\n        ((f (car s)) (cons (car s) (skip-list (cdr s) f)))\n        (else (skip-list (cdr s) f))))\n</code></pre>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part3/#2_5","title":"2","text":"<p>\u6709\u4eba\u63d0\u95ee\u768417\u5e74\u79cb\u5b63\u7684\u671f\u672b\u8003\u8bd5\u7b2c6\u9898</p> <p>Quote</p> <p>Simplify! Simplify! For this problem, consider a very small subset of Scheme containing only if expression, <code>(if pred then=part else part)</code> , and atoms including symbols, <code>#t</code> for true, and <code>#f</code> for false. Such expressions can be simplified according to the following transformation rules. Here, <code>P</code> , <code>E1</code> , and <code>E2</code> are Scheme expressions in the subset, and <code>P'</code> , <code>E1'</code> , and <code>E2'</code> are their simplified versions.</p> <ul> <li>The expression <code>(if P E1 E2)</code> simplified to<ul> <li><code>E1'</code> if <code>P'</code> is <code>#t</code> .</li> <li><code>E2'</code> if <code>P'</code> is <code>#f</code> .</li> <li><code>E1'</code> if <code>E1'</code> equals <code>E2</code>\u2018 .</li> <li>Otherwise, an <code>if</code> expression with <code>P'</code> , <code>E1'</code> , and <code>E2'</code> as the predicate, then-part, and else-part.</li> </ul> </li> <li>Any expression, <code>E</code> , simplies to <code>#t</code> if <code>E</code> is known to be true (see below); or to <code>#f</code> if it is known to be false.</li> <li>Finally, in the expression <code>(if P E1 E2)</code> , <code>P'</code> is known to be true while simplifying <code>E1</code> and is known to be false while simplifying <code>E2</code> . Initially, only <code>#t</code> is known to be true and only <code>#f</code> is known to be false.</li> </ul> <p>Fill in the blanks on the next page so that <code>(simp E)</code> returns the simplied version of <code>E</code> according to these rules, and the helper function <code>(simp-ontext E known-t known-f)</code> returns the simpliation of <code>E</code> given that <code>known-t</code> is a list of expressions known to be true, and <code>known-f</code> is a list of expressions known to be false.</p> <p>For convenience, assume that <code>(nth k L)</code> is defined to return element k of list <code>L</code> (where 0 is the first), and that <code>(in? E L)</code> is defined to return true if and only if E is <code>equal?</code> to a member of the list L.</p> <pre><code>scm&gt; (simp '(if a b c))\n(if a b c)\nscm&gt; (simp '(if a b b))\nb\nscm&gt; (simp '(if #t (if #f a b) c))\nb\nscm&gt; (simp '(if a (if a b c) (if a d e)))\n(if a b e)\nscm&gt; (simp '(if (if #t a b) (if a d e) f))\n(if a d f)\nscm&gt; (simp '(if (if a b b) (if b c d) (if e f f)))\n(if b c f)\nscm&gt; (simp '(if (if a b c) (if (if a b c) x y) (if (if a b c) y z)))\n(if (if a b c) x z)\nscm&gt; (simp '(if (if a b c) (if (if a (if a b b) c) d e) f))\n(if (if a b c) d f)\n</code></pre> <pre><code>(define (simp expr)\n  (simp-context expr ______ ______))\n\n(define (simp-context expr known-t known-f)\n  (define simp-expr (if (pair? expr)\n                        (simp-if (nth 1 expr) (nth 2 expr) (nth 3 expr) known-t known-f)\n                        expr))\n  (cond (______ #t)\n        (______ #f)\n        (else ______)))\n\n(define (simp-if pred then-part else-part known-t known-f)\n  (let ((simp-pred (simp-context pred ______)))\n    (define simp-then\n      ______)\n    (define simp-else\n      ______)\n    (cond ((equal? simp-pred #t) simp-then)\n          (______ simp-else)\n          (______ simp-then)\n          (else ______))))\n</code></pre> <p>\u4e8e\u662f\u81ea\u5df1\u5199\u4e86\u4e00\u4e0b</p> <p>\u9898\u76ee\u4e2d\u63d0\u5230\u4f46\u89e3\u91ca\u5668\u4e2d\u5e76\u6ca1\u6709\u7684\u4e24\u4e2a\u51fd\u6570 <code>nth</code> \u548c <code>in?</code> \uff0c\u4e8e\u662f\u6211\u81ea\u5df1\u7528\u4ee3\u7801\u5b9e\u73b0</p> <p><pre><code>(define (nth k L)\n (if (= k 0)\n     (car L)\n     (nth (- k 1) (cdr L))))\n\n(define (in? E L)\n (cond ((null? L) false)\n       ((equal? E (car L)) true)\n       (else (in? E (cdr L)))))\n</code></pre> </p> <p>\u770b\u5b8c\u4e86\u9898\u76ee\u611f\u89c9\u6ca1\u660e\u767d\u9700\u8981\u5e72\u4ec0\u4e48\ud83d\ude05\uff0c\u4f46\u770b\u5230\u63d0\u4f9b\u7684\u4f8b\u5b50\u5c31\u660e\u767d\u4e86\u3002</p> <p>\u9898\u76ee\u662f\u8981\u5b9e\u73b0\u5316\u7b80 <code>if</code> \u8868\u8fbe\u5f0f\u7684\u51fd\u6570\uff0c</p> <pre><code>scm&gt; (simp '(if a b b))\nb\nscm&gt; (simp '(if #t (if #f a b) c))\nb\n</code></pre> <p>\u8fd9\u4e24\u4e2a\u4f8b\u5b50\u5c55\u793a\u4e86\u6700\u7b80\u5355\u7684\u80fd\u5316\u7b80\u7684\u60c5\u51b5\uff0c</p> <ul> <li>\u5982\u679c\u6ee1\u8db3\u548c\u4e0d\u6ee1\u8db3\u6761\u4ef6\uff0c\u8fd4\u56de\u7684\u4e24\u79cd\u7ed3\u679c\u662f\u4e00\u6837\u7684\uff0c\u90a3\u4e48\u76f4\u63a5\u8868\u8fbe\u5f0f\u53ef\u4ee5\u5316\u7b80\u6210\u8fd9\u4e2a\u7ed3\u679c</li> <li>\u5982\u679c\u6761\u4ef6\u53ef\u4ee5\u786e\u5b9a\u4e3a\u771f\uff0c\u90a3\u4e48\u5c31\u8fd4\u56de \u6ee1\u8db3\u65f6\u7684\u8868\u8fbe\u5f0f\u7684\u7b80\u5316\u7248 \uff0c\u800c\u5982\u679c\u53ef\u4ee5\u786e\u5b9a\u4e3a\u5047\uff0c\u5c31\u8fd4\u56de \u4e0d\u6ee1\u8db3\u65f6\u7684\u8868\u8fbe\u5f0f\u7684\u7b80\u5316\u7248</li> </ul> <p>\u800c\u66f4\u590d\u6742\u7684\u60c5\u51b5\u53ef\u4ee5\u53c2\u8003\u7b2c4\u4e2a\u4f8b\u5b50</p> <pre><code>scm&gt; (simp '(if a (if a b c) (if a d e)))\n(if a b e)\n</code></pre> <p>\u4e00\u5f00\u59cb\u770b\u5230\u8fd9\u4e2a\u4f8b\u5b50\u6ca1\u60f3\u660e\u767d\u8981\u5982\u4f55\u5b9e\u73b0\u8fd9\u6837\u7684\u64cd\u4f5c\uff0c\u4f46\u4e4b\u540e\u770b\u5230\u4e86\u4ee3\u7801\u5c31\u660e\u767d\u4e86</p> <p>\u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c\u9700\u8981\u7406\u89e3\u4e00\u4e2a\u5173\u952e\u4e4b\u5904\uff0c <code>(if a b c)</code> \u80fd\u8f6c\u53d8\u6210 <code>b</code> \uff0c\u662f\u56e0\u4e3a\u5982\u679c\u5df2\u7ecf\u8fdb\u5165\u5230\u9700\u8981\u8fd0\u7b97 <code>(if a b c)</code> \u8868\u8fbe\u5f0f\u65f6\uff0c\u8bf4\u660e <code>a</code> \u5df2\u7ecf\u786e\u5b9a\u4e3a\u771f\u4e86(\u56e0\u4e3a\u8054\u7cfb\u5230\u9898\u76ee\u4e2d\u8bf4\u5230 <code>known-t</code> \u548c <code>known-f</code> \u662f \u786e\u5b9a\u4e3a\u771f/\u5047\u7684\u8868\u8fbe\u5f0f\u7684\u5217\u8868)</p> <p>\u7136\u540e\u770b\u4ee3\u7801\uff0c\u6838\u5fc3\u7684\u90e8\u5206\u662f <code>simp-if</code> \u518d\u662f <code>simp-context</code> \uff0c\u770b\u5230 <code>simp-if</code> \u4e2d\u7684\u8fd9\u4e00\u884c\uff0c</p> <pre><code>(let ((simp-pred (simp-context pred ______))) ...)\n</code></pre> <p>\u6211\u5c31\u660e\u767d\u4e86\uff0c<code>simp-context</code> \u662f\u7528\u6765\u5316\u7b80\u5355\u4e2a\u8868\u8fbe\u5f0f\uff0c\u7ee7\u800c\u660e\u767d <code>simp-if</code> \u662f\u7528\u6765\u5316\u7b80 <code>if</code> \u8868\u8fbe\u5f0f\u7684\uff0c</p> <p>\u56e0\u6b64\u5927\u6982\u53ef\u4ee5\u731c\u51fa\uff0c\u8fd9\u4e00\u884c\u7684\u7a7a\u5e94\u8be5\u5c31\u662f\u6700\u7b80\u5355\u7684 <code>known-t known-f</code> \uff0c\u7ee7\u800c\u53c8\u5f88\u5bb9\u6613\u53ef\u4ee5\u60f3\u5230 <code>simp-then</code> \u548c <code>simp-else</code> \u4e5f\u9700\u8981\u8c03\u7528 <code>simp-context</code> \u5e76\u5404\u81ea\u628a <code>pred</code> \u52a0\u4e0a</p> <pre><code>(define simp-then\n  (simp-context then-part (cons simp-pred known-t) known-f))\n(define simp-else\n  (simp-context else-part known-t (cons simp-pred known-f)))\n</code></pre> <p>\u4e8e\u662f\u6700\u540e\u7684 <code>cond</code> \u4e2d\uff0c\u5c31\u5bf9\u5e94\u9898\u76ee\u4e2d\u7684\u56db\u4e2a\u60c5\u51b5\uff0c\u4e0d\u96be\u5199\u51fa\u4ee3\u7801\uff0c\u4f46\u9700\u8981\u6ce8\u610f\u5747\u8981\u4f7f\u7528\u5316\u7b80\u4e4b\u540e\u7684\u8868\u8fbe\u5f0f\uff0c\u5176\u4e2d\u6700\u540e\u4e00\u79cd\u60c5\u51b5\u5bf9\u5e94\u4e0d\u80fd\u5316\u7b80\u7684\u60c5\u51b5\uff0c\u5219\u9700\u8981\u628a\u5404\u4e2a\u90e8\u5206\u91cd\u65b0(\u7528 <code>list</code> )\u62fc\u6210 <code>if</code> \u8868\u8fbe\u5f0f\uff0c</p> <pre><code>(cond ((equal? simp-pred #t) simp-then)\n      ((equal? simp-pred #f) simp-else)\n      ((equal? simp-then simp-else) simp-then)\n      (else (list 'if simp-pred simp-then simp-else)))))\n</code></pre> <p>\u7136\u540e <code>simp-context</code> \u4e2d\uff0c\u5c31\u662f\u9700\u8981\u5224\u65ad\u5316\u7b80\u540e\u7684\u8868\u8fbe\u5f0f <code>simp-expr</code> (\u7ed9\u4e86\u80af\u5b9a\u6709\u7528\u80af\u5b9a\u662f\u8981\u7528\u4e0a\u7684\ud83d\ude05)\u662f\u4e0d\u662f\u5728 <code>known-t</code> \u6216\u8005 <code>known-f</code> \u4e2d\uff0c</p> <pre><code>(cond ((in? simp-expr known-t) #t)\n      ((in? simp-expr known-f) #f)\n      (else simp-expr)))\n</code></pre> <p>\u6700\u540e\u7684 <code>simp</code> \u4e2d\u5c31\u5f88\u5bb9\u6613\u4e86\uff0c</p> <p>\u6240\u4ee5\u5b8c\u6574\u7684\u4ee3\u7801\u662f\u8fd9\u6837</p> <pre><code>(define (simp expr)\n  (simp-context expr '(#t) '(#f)))\n\n(define (simp-context expr known-t known-f)\n  (define simp-expr (if (pair? expr)\n                        (simp-if (nth 1 expr) (nth 2 expr) (nth 3 expr) known-t known-f)\n                        expr))\n  (cond ((in? simp-expr known-t) #t)\n        ((in? simp-expr known-f) #f)\n        (else simp-expr)))\n\n(define (simp-if pred then-part else-part known-t known-f)\n  (let ((simp-pred (simp-context pred known-t known-f)))\n    (define simp-then\n      (simp-context then-part (cons simp-pred known-t) known-f))\n    (define simp-else\n      (simp-context else-part known-t (cons simp-pred known-f)))\n    (cond ((equal? simp-pred #t) simp-then)\n          ((equal? simp-pred #f) simp-else)\n          ((equal? simp-then simp-else) simp-then)\n          (else (list 'if simp-pred simp-then simp-else)))))\n</code></pre> <p>\u611f\u89c9\u8fd9\u9898\u8fd8\u662f\u633a\u6709\u610f\u601d\u7684</p>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part3/#3_3","title":"3","text":"<p>\u5728\u6d4b\u8bd5scheme\u4ee3\u7801\u65f6\u53d1\u73b0\uff0c\u8bfe\u7a0b(\u4e4b\u524dhw\u548clab\u4e2d)\u63d0\u4f9b\u7684scheme\u89e3\u91ca\u5668\u4e2d\u5185\u7f6e\u4e86\u52a0\u8f7d <code>.scm</code> \u6587\u4ef6\u7684\u51fd\u6570 <code>load</code> \uff0c</p> <p>\u53d1\u73b0\u4e86\u51e0\u79cd\u52a0\u8f7d\u7684\u65b9\u5f0f\uff0c</p> <ul> <li> <p>1</p> <pre><code>(load \"\u6587\u4ef6\u540d\")\n</code></pre> </li> <li> <p>2</p> <pre><code>(load '\u6587\u4ef6\u540d)\n</code></pre> </li> </ul> <p>\u4ee5\u53ca\uff0c\u5982\u679c\u4e0d\u6dfb\u52a0\u6587\u4ef6\u540e\u7f00\u540d\uff0c\u4f1a\u9ed8\u8ba4\u8ba4\u4e3a\u662fscm\u6587\u4ef6\uff0c\u5373\u4f1a\u81ea\u52a8\u6dfb\u52a0 <code>.scm</code></p> <pre><code>scm&gt; (load \"a\")\nTraceback (most recent call last):\n  0     (load \"a\")\nError: [Errno 2] No such file or directory: 'a.scm' \nscm&gt; (load '../a)  \nTraceback (most recent call last):\n  0     (load (quote ../a))\nError: [Errno 2] No such file or directory: '../a.scm' \n</code></pre>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part3/#lecture-34-database","title":"Lecture 34 Database","text":""},{"location":"Notes%20of%20Courses/CS61A/CS61A_part3/#1_6","title":"1","text":"<p>sql\u4e2d\u521b\u5efa\u6570\u636e\u8868\u7684\u64cd\u4f5c\uff0c</p> <p>John\u8bf4\u5230\uff0c\u53ea\u9700\u8981\u638c\u63e1\u90e8\u5206\u5373\u53ef(\u56fe\u4e2d\u9ed1\u8272\u7684\u90e8\u5206)</p> <p></p> <p>\u5220\u9664\u8868\u7684\u64cd\u4f5c</p> <p></p> <p>\u5728\u8868\u4e0a\u7684\u63d2\u5165\u7684\u64cd\u4f5c</p> <p>John\u7684demo\u6f14\u793a</p> <pre><code>sqlite&gt; create table primes(n, prime);\nsqlite&gt; drop table if exists primes;\nsqlite&gt; select * from primes;\nError: no such table: primes\nsqlite&gt; create table primes(n UNIQUE, prime DEFAULT 1);\nsqlite&gt; select * from primes;\nsqlite&gt; INSERT INTO primes VALUES (2, 1), (3, 1);\nsqlite&gt; select * from primes;\n2|1\n3|1\nsqlite&gt; INSERT INTO primes(n) VALUES (4), (5), (6), (7);\nsqlite&gt; select * from primes;\n2|1\n3|1\n4|1\n5|1\n6|1\n7|1\nsqlite&gt; INSERT INTO primes(n) SELECT n+6 FROM primes;\nsqlite&gt; select * from primes;\n2|1\n3|1\n4|1\n5|1\n6|1\n7|1\n8|1\n9|1\n10|1\n11|1\n12|1\n13|1\nsqlite&gt; INSERT INTO primes(n) SELECT n+12 FROM primes;\nsqlite&gt; select * from primes;\n2|1\n3|1\n4|1\n5|1\n6|1\n7|1\n8|1\n9|1\n10|1\n11|1\n12|1\n13|1\n14|1\n15|1\n16|1\n17|1\n18|1\n19|1\n20|1\n21|1\n22|1\n23|1\n24|1\n25|1\n</code></pre> <p></p> <p>\u66f4\u65b0\u8868\u4e2d\u5217\u7684\u6570\u636e\u7684\u64cd\u4f5c <code>update</code></p> <p>John\u7684demo\u6f14\u793a</p> <pre><code>sqlite&gt; UPDATE primes SET prime=0 WHERE n&gt;2 AND n%2=0;\nsqlite&gt; select * from primes;\n2|1\n3|1\n4|0\n5|1\n6|0\n7|1\n8|0\n9|1\n10|0\n11|1\n12|0\n13|1\n14|0\n15|1\n16|0\n17|1\n18|0\n19|1\n20|0\n21|1\n22|0\n23|1\n24|0\n25|1\nsqlite&gt; UPDATE primes SET prime=0 WHERE n&gt;3 AND n%3=0;\nsqlite&gt; UPDATE primes SET prime=0 WHERE n&gt;5 AND n%5=0;\nsqlite&gt; select * from primes;\n2|1\n3|1\n4|0\n5|1\n6|0\n7|1\n8|0\n9|0\n10|0\n11|1\n12|0\n13|1\n14|0\n15|0\n16|0\n17|1\n18|0\n19|1\n20|0\n21|0\n22|0\n23|1\n24|0\n25|0\n</code></pre> <p></p> <p>\u8868\u4e2d\u5220\u9664\u7684\u64cd\u4f5c</p> <p>John\u7684demo\u6f14\u793a</p> <pre><code>sqlite&gt; DELETE FROM primes WHERE prime=0;\nsqlite&gt; select * from primes;\n2|1\n3|1\n5|1\n7|1\n11|1\n13|1\n17|1\n19|1\n23|1\n</code></pre>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part3/#2_6","title":"2","text":"<p>John demo\u6f14\u793a\u4e86\u5982\u4f55\u5728python\u4e2d\u4f7f\u7528sql</p> <p></p> <ul> <li> <p>\u4f7f\u7528 <code>sqlite3.Connection(\"xxx.db\")</code> \u6765\u52a0\u8f7ddb\u6587\u4ef6\uff0c\u7136\u540e\u4f1a\u8fd4\u56de\u4e00\u4e2a <code>Connection</code> \u7c7b\u7684\u5b9e\u4f8b</p> <p>db\u6587\u4ef6\u662f\u6570\u636e\u5e93 database\u6587\u4ef6</p> </li> <li> <p>\u4f7f\u7528 <code>execute</code> \u65b9\u6cd5\u53ef\u4ee5\u6267\u884csql\u7684\u547d\u4ee4/\u8bed\u53e5</p> <p>\u5e76\u4e14\uff0c\u53ef\u4ee5\u6709\u5982\u4e0a\u56fe\u4e2d\u7684\u8fd9\u6837\u7684\u64cd\u4f5c</p> <pre><code>db.execute(\"INSERT INTO nums VALUES (?), (?), (?);\", range(4, 7))\n</code></pre> </li> <li> <p>\u8c03\u7528 <code>execute</code> \u65b9\u6cd5\uff0c\u65b9\u6cd5\u7684\u8fd4\u56de\u503c\u6709 <code>fetchall</code> \u65b9\u6cd5\uff0c\u53ef\u4ee5\u5c06\u672c\u6765\u5e94\u8be5\u663e\u793a\u7684\u6570\u636e\u8f6c\u6362\u6210\u5143\u7ec4\uff0c\u5982\u4e0a\u56fe\u4e2d\u7684</p> <pre><code>print(db.execute(\"SELECT * FROM nums;\").fetchall())\n</code></pre> <pre><code>~/lec$ python3 ex.py\n[(2,), (3,), (4,), (5,), (6,)]\n</code></pre> </li> <li> <p>\u4f7f\u7528 <code>commit</code> \u65b9\u6cd5\u53ef\u4ee5\u5c06\u6570\u636e\u50a8\u5b58\u5230\u5bf9\u5e94\u7684db\u6587\u4ef6\u4e2d\uff0c\u5982\u679c\u6ca1\u6709\u8fd9\u4e2a\u6587\u4ef6\u4f1a\u65b0\u5efa\u4e00\u4e2a\u6587\u4ef6\uff0c\u4e0a\u56feJohn\u7684demo\u6f14\u793a\u4e2d\uff0c\u8fd0\u884c <code>python3 ex.py</code> \u524d\u5df2\u7ecf\u8fd0\u884c <code>rm n.db</code> \u547d\u4ee4</p> </li> </ul>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part3/#3_4","title":"3","text":"<p>John\u8bf4\u9053\uff0c\u4e3a\u4e86\u907f\u514d\u5728python\u4e2d\u4f7f\u7528sql\uff0c\u63d2\u5165\u67d0\u4e9b\u7279\u6b8a\u7684\u540d\u5b57\u800c\u5f15\u53d1\u7684\u4e00\u4e9b\u9519\u8bef\uff0c\u8981(\u5982\u4e0a\u56fe)\u4f7f\u7528 <code>execute</code> \u65b9\u6cd5\u6765\u63d2\u5165\u540d\u5b57\uff0c</p> <p>\u800c\u4e0d\u662f\u4f7f\u7528python\u7684\u5b57\u7b26\u4e32\u62fc\u63a5\u548c <code>executescript</code> \u65b9\u6cd5( <code>executescript</code> \u65b9\u6cd5\u4f1a\u6267\u884c\u591a\u884csql\u8bed\u53e5)</p>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part3/#lecture-34-qa","title":"Lecture 34 Q&amp;A","text":""},{"location":"Notes%20of%20Courses/CS61A/CS61A_part3/#1_7","title":"1","text":"<p>John\u89e3\u91ca\u4e4b\u524d\u8bfe\u4e0a\u7528python\u548csql\u6a21\u62df\u8d4c\u573a21\u70b9 Casino Blackjack\u6e38\u620f\u7684\u4ee3\u7801\u4e2d\u7684 <code>sqlite3.Connection</code> \u7c7b\u7684\u5177\u4f53\u4f5c\u7528</p> <p>Quote</p> <p>John:</p> <p>The question is, here are some demos from today's lecture. There's this line that's like \"build a connection\" to some database,</p> <pre><code>db = sqlite3.Connection('number.db')\n</code></pre> <p>and then, you know, we give it a name \u2013 give it any name you want, \"db\" or \"n\" or something like that. What would happen if you evaluated this same expression a second time? Would that give you a new database or the same database, or would it erase the old one? Like, what's the story?</p> <p>And the story is that this name, which describes the name of a file on your file system, is a database that won't ever just get erased. Instead, it's persistent. Even if you quit Python and start Python again, it will retain whatever information was in it before. If you evaluate this expression multiple times, then you just get multiple connections to the same database with the same data in it, and that's okay. Actually, databases are designed to have multiple connections.</p> <p>And what do these connections mean? That means different programs might all be changing the database or querying the database at the same time. But that doesn't mean that the database is going to get refreshed or changed or something like that. It basically just stays there and accumulates information over time. If one program changes it and then another program queries it, that second program is going to see the changes from the first program.</p> <p>So, I think within a particular Python program, there really isn't a good reason to have multiple connections. Usually, those multiple connections come from multiple Python programs, or maybe they're not all Python, but you certainly could do it, and I don't think anything would break.</p> <p>John:</p> <p>\u95ee\u9898\u662f\uff0c\u8fd9\u91cc\u6709\u4eca\u5929\u8bb2\u5ea7\u4e2d\u7684\u4e00\u4e9b\u6f14\u793a\u3002\u6709\u8fd9\u6837\u4e00\u884c\u4ee3\u7801\uff0c\u7c7b\u4f3c\u4e8e\u201c\u5efa\u7acb\u4e00\u4e2a\u8fde\u63a5\u201d\u5230\u67d0\u4e2a\u6570\u636e\u5e93\uff0c</p> <pre><code>db = sqlite3.Connection('number.db')\n</code></pre> <p>\u7136\u540e\uff0c\u4f60\u77e5\u9053\uff0c\u6211\u4eec\u7ed9\u5b83\u4e00\u4e2a\u540d\u5b57 - \u968f\u4fbf\u53d6\u4e2a\u540d\u5b57\uff0c\u6bd4\u5982\u201cdb\u201d\u6216\u201cn\u201d\u4e4b\u7c7b\u7684\u3002\u5982\u679c\u4f60\u591a\u6b21\u8bc4\u4f30\u76f8\u540c\u7684\u8868\u8fbe\u5f0f\u4f1a\u53d1\u751f\u4ec0\u4e48\uff1f\u8fd9\u4f1a\u7ed9\u4f60\u4e00\u4e2a\u65b0\u7684\u6570\u636e\u5e93\u8fd8\u662f\u76f8\u540c\u7684\u6570\u636e\u5e93\uff0c\u6216\u8005\u4f1a\u64e6\u9664\u65e7\u7684\u6570\u636e\u5e93\uff1f\u8fd9\u662f\u4ec0\u4e48\u60c5\u51b5\uff1f</p> <p>\u6545\u4e8b\u662f\uff0c\u8fd9\u4e2a\u63cf\u8ff0\u4f60\u6587\u4ef6\u7cfb\u7edf\u4e0a\u6587\u4ef6\u540d\u7684\u540d\u79f0\u662f\u4e00\u4e2a\u6570\u636e\u5e93\uff0c\u5b83\u4e0d\u4f1a\u88ab\u8f7b\u6613\u64e6\u9664\u3002\u76f8\u53cd\uff0c\u5b83\u662f\u6301\u4e45\u7684\u3002\u5373\u4f7f\u4f60\u9000\u51fa Python \u5e76\u91cd\u65b0\u542f\u52a8 Python\uff0c\u5b83\u5c06\u4fdd\u7559\u4e4b\u524d\u7684\u6240\u6709\u4fe1\u606f\u3002\u5982\u679c\u4f60\u591a\u6b21\u8bc4\u4f30\u8fd9\u4e2a\u8868\u8fbe\u5f0f\uff0c\u90a3\u4e48\u4f60\u53ea\u662f\u5f97\u5230\u5bf9\u540c\u4e00\u4e2a\u6570\u636e\u5e93\u7684\u591a\u4e2a\u8fde\u63a5\uff0c\u5176\u4e2d\u5305\u542b\u76f8\u540c\u7684\u6570\u636e\uff0c\u8fd9\u662f\u53ef\u4ee5\u7684\u3002\u5b9e\u9645\u4e0a\uff0c\u6570\u636e\u5e93\u88ab\u8bbe\u8ba1\u4e3a\u5177\u6709\u591a\u4e2a\u8fde\u63a5\u3002</p> <p>\u90a3\u4e48\u8fd9\u4e9b\u8fde\u63a5\u610f\u5473\u7740\u4ec0\u4e48\uff1f\u8fd9\u610f\u5473\u7740\u4e0d\u540c\u7684\u7a0b\u5e8f\u53ef\u80fd\u4f1a\u540c\u65f6\u66f4\u6539\u6570\u636e\u5e93\u6216\u67e5\u8be2\u6570\u636e\u5e93\u3002\u4f46\u8fd9\u5e76\u4e0d\u610f\u5473\u7740\u6570\u636e\u5e93\u4f1a\u88ab\u5237\u65b0\u3001\u66f4\u6539\u6216\u7c7b\u4f3c\u7684\u4e8b\u60c5\u3002\u5b83\u57fa\u672c\u4e0a\u5c31\u5728\u90a3\u91cc\uff0c\u5e76\u968f\u7740\u65f6\u95f4\u7d2f\u79ef\u4fe1\u606f\u3002\u5982\u679c\u4e00\u4e2a\u7a0b\u5e8f\u66f4\u6539\u4e86\u5b83\uff0c\u7136\u540e\u53e6\u4e00\u4e2a\u7a0b\u5e8f\u67e5\u8be2\u5b83\uff0c\u90a3\u4e48\u7b2c\u4e8c\u4e2a\u7a0b\u5e8f\u5c06\u770b\u5230\u7b2c\u4e00\u4e2a\u7a0b\u5e8f\u7684\u66f4\u6539\u3002</p> <p>\u56e0\u6b64\uff0c\u6211\u8ba4\u4e3a\u5728\u4e00\u4e2a\u7279\u5b9a\u7684 Python \u7a0b\u5e8f\u4e2d\uff0c\u6ca1\u6709\u771f\u6b63\u9700\u8981\u6709\u591a\u4e2a\u8fde\u63a5\u7684\u597d\u7406\u7531\u3002\u901a\u5e38\uff0c\u8fd9\u4e9b\u591a\u4e2a\u8fde\u63a5\u6765\u81ea\u591a\u4e2a Python \u7a0b\u5e8f\uff0c\u6216\u8005\u5b83\u4eec\u5e76\u975e\u5168\u90e8\u90fd\u662f Python\uff0c\u4f46\u4f60\u5f53\u7136\u53ef\u4ee5\u8fd9\u6837\u505a\uff0c\u6211\u8ba4\u4e3a\u4e0d\u4f1a\u6709\u4ec0\u4e48\u95ee\u9898\u3002</p>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part3/#2_7","title":"2","text":"<p>\u6709\u4eba\u63d0\u95eescheme\u4e2d\u5728 <code>let</code> \u4e2d\u7684 <code>define</code> \u662f\u5426\u4f1a\u5f71\u54cd\u5230\u5168\u5c40\u6846\u67b6\uff0c</p> <p>John\u8fdb\u884c\u6f14\u793a\uff0c\u53d1\u73b0 <code>let</code> \u8bed\u53e5\u4e2d\u5d4c\u5957\u7684 <code>define</code> \u8bed\u53e5\u5e76\u4e0d\u4f1a\u4fee\u6539\u4e0a\u4e00\u5c42\u6846\u67b6\uff0c\u800c\u53ea\u4f1a\u4fee\u6539 <code>let</code> \u7684\u6846\u67b6</p> <pre><code>scm&gt; (let ((x 1)) (define a x) (+ x 1))\n2\nscm&gt; a\nTraceback (most recent call last):\n  0     a\nError: unknown identifier: a\nscm&gt; (let ((x 1)) (define a x) (+ x a))\n2\n</code></pre>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part3/#3_5","title":"3","text":"<p>\u6709\u4eba\u63d0\u95eesql\u4e2d <code>select</code> \u80fd\u4e0d\u80fd\u5d4c\u5957\u5728 <code>where</code> \u4e2d\uff0c\u4e8e\u662fJohn\u6f14\u793a\u4e86\u4e00\u79cd\u7528\u6cd5</p> <pre><code>sqlite&gt; CREATE TABLE numbers AS SELECT 1 AS n UNION SELECT 2 UNION SELECT 3 UNION SELECT 5;\nsqlite&gt; SELECT * FROM numbers;\n1\n2\n3\n5\nsqlite&gt; SELECT * FROM numbers WHERE (SELECT MAX(n) FROM NUMBERS) &gt; n;\n1\n2\n3\n</code></pre> <p>\u4e00\u5f00\u59cb\u8fd8\u6ca1\u7406\u89e3\u8fd9\u662f\u4ec0\u4e48\u610f\u601d\ud83d\ude05\uff0c\u770b\u4e86\u4e00\u4f1a\u4e4b\u540e\u624d\u660e\u767d\uff0c\u62ec\u53f7\u5185\u7684 <code>select</code> \u8bed\u53e5\u5927\u6982\u662f\u4ece\u539f\u6765\u7684\u8868\u521b\u5efa\u4e86\u4e00\u884c\u65b0\u7684\u6570\u636e\uff0c\u7136\u540e\u7528\u8fd9\u884c\u65b0\u7684\u6570\u636e\u5728 <code>where</code> \u4e2d\u8fdb\u884c\u7b5b\u9009\uff0c\u6240\u4ee5\u8fd9\u91cc <code>MAX(n)</code> \u6700\u540e\u83b7\u5f97\u7684\u662f5\uff0c\u800c\u5c0f\u4e8e5\u7684\u53ea\u67091 2 3</p> <p>\u4f46\u662f\u89c9\u5f97\u8fd9\u79cd\u7528\u6cd5\u786e\u5b9e\u5982\u540cJohn\u8bf4\u7684\u4e00\u6837\u6ca1\u4ec0\u4e48\u592a\u5927\u7684\u4f5c\u7528\ud83d\ude05</p>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part3/#hw-09","title":"HW 09","text":""},{"location":"Notes%20of%20Courses/CS61A/CS61A_part3/#1_8","title":"1","text":"<p>Q2\u4e2d\uff0c\u4e00\u5f00\u59cb\u60f3\u7684\u662f\u5224\u65ad\u7236\u6bcd\u5728\u4e0d\u5728 <code>parents</code> \u4e2d\uff0c\u4f46\u6700\u540e\u53d1\u73b0\u6392\u5e8f\u9700\u8981\u6309\u7167\u7236\u6bcd\u7684\u8eab\u9ad8\u6765\u6392\u5e8f\uff0c\u6240\u4ee5\u53d1\u73b0\u53ea\u80fd\u5224\u65ad\u5b50\u5973\u5728\u4e0d\u5728 <code>parents</code> \u4e2d\uff0c</p> <p>\u5e76\u4e14\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u662f\u4ece\u9ad8\u5230\u77ee\u6392\u5e8f\uff0c\u6240\u4ee5\u9700\u8981\u4e58\u4e00\u4e2a <code>-1</code> (\u4e00\u5f00\u59cb\u6ca1\u6ce8\u610f\u7ed3\u679c\u521a\u597d\u53cd\u8fc7\u6765\u4e86\ud83d\ude05)</p> code <pre><code>CREATE TABLE by_parent_height AS\n  select a.child from parents as a, dogs as b\n  where b.name = a.parent order by b.height*-1;\n</code></pre>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part3/#2_8","title":"2","text":"<p>Q3\u9898\u76ee\u7684\u63d0\u793a\u4e2d\u63d0\u5230sql\u4e2d\u8fde\u63a5\u5b57\u7b26\u4e32\u8981\u4f7f\u7528 <code>||</code></p> <p>Hint: In order to concatenate two strings into one, use the <code>||</code> operator.</p> code <pre><code>CREATE TABLE siblings AS\n  select a.child as first_child, b.child as second_child from parents as a, parents as b\n  where a.child &lt; b.child and a.parent = b.parent;\n\nCREATE TABLE sentences AS\n  select \"The two siblings, \"||a.first_child||\" plus \"||a.second_child||\" have the same size: \"||b.size \n  from siblings as a, size_of_dogs as b, size_of_dogs as c \n  where a.first_child = b.name and a.second_child = c.name and b.size = c.size;\n</code></pre>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part3/#lecture-35-tail-calls","title":"Lecture 35 Tail Calls","text":""},{"location":"Notes%20of%20Courses/CS61A/CS61A_part3/#1_9","title":"1","text":"<p>John\u4ecb\u7ecd\u4e86\u4e00\u4e0b \u51fd\u6570\u5f0f\u7f16\u7a0b Functional Programming</p> <p></p> <p>\u6240\u6709\u7684\u51fd\u6570\u90fd\u662f\u7eaf\u51fd\u6570\u3002</p> <p>\u6ca1\u6709\u91cd\u65b0\u8d4b\u503c\uff0c\u4e5f\u6ca1\u6709\u53ef\u53d8\u7684\u6570\u636e\u7c7b\u578b\u3002</p> <p>\u540d\u79f0-\u503c\u7684\u7ed1\u5b9a\u662f\u6c38\u4e45\u7684\u3002</p> <p>\u51fd\u6570\u5f0f\u7f16\u7a0b\u7684\u4f18\u52bf\uff1a</p> <ul> <li>\u8868\u8fbe\u5f0f\u7684\u503c\u4e0e\u5b50\u8868\u8fbe\u5f0f\u6c42\u503c\u7684\u987a\u5e8f\u65e0\u5173\u3002</li> <li>\u5b50\u8868\u8fbe\u5f0f\u53ef\u4ee5\u5b89\u5168\u5730\u5e76\u884c\u6216\u6309\u9700(\u60f0\u6027\u5730)\u8fdb\u884c\u6c42\u503c\u3002</li> <li>\u5f15\u7528\u900f\u660e\u6027\uff1a\u5f53\u6211\u4eec\u7528\u5b50\u8868\u8fbe\u5f0f\u7684\u503c\u66ff\u6362\u8be5\u5b50\u8868\u8fbe\u5f0f\u7684\u503c\u65f6\uff0c\u8868\u8fbe\u5f0f\u7684\u503c\u4e0d\u4f1a\u6539\u53d8\u3002</li> </ul>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part3/#2_9","title":"2","text":"<p>John\u63d0\u5230\u4e86\u533a\u5206\u51fa\u5c3e\u8c03\u7528\u7684\u4e00\u79cd\u65b9\u6cd5\uff0c</p> <p>Quote</p> <p>John:</p> <p>...It's a distinction that figures out whether, when one procedure is calling another procedure, is there more work to do when that called procedure is finished or not. If there isn't anything else to do, besides just return the value of the expression you call, well then that's a tail call.</p> <p>John:</p> <p>...\u8fd9\u662f\u4e00\u79cd\u533a\u5206\u7684\u65b9\u6cd5\uff0c\u7528\u4e8e\u786e\u5b9a\u5f53\u4e00\u4e2a\u8fc7\u7a0b\u8c03\u7528\u53e6\u4e00\u4e2a\u8fc7\u7a0b\u65f6\uff0c\u8c03\u7528\u7684\u8fc7\u7a0b\u5b8c\u6210\u540e\u662f\u5426\u8fd8\u6709\u5176\u4ed6\u5de5\u4f5c\u8981\u505a\u3002\u5982\u679c\u9664\u4e86\u8fd4\u56de\u4f60\u8c03\u7528\u7684\u8868\u8fbe\u5f0f\u7684\u503c\u4e4b\u5916\u6ca1\u6709\u5176\u4ed6\u4e8b\u60c5\u8981\u505a\uff0c\u90a3\u4e48\u8fd9\u5c31\u662f\u4e00\u4e2a\u5c3e\u8c03\u7528\u3002</p> <p>\u7136\u540e\u53c8\u4ecb\u7ecd\u4e86\u5c3e\u8c03\u7528\u7684\u4e00\u4e9b\u7279\u5f81</p> <p></p>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part3/#3_6","title":"3","text":"<p>John\u8bf4\u9053 \u662f\u7ebf\u6027\u9012\u5f52 linear recursion\u4f46\u4e0d\u662f/\u4e0d\u6ee1\u8db3\u5c3e\u8c03\u7528\u683c\u5f0f\u7684\u51fd\u6570\uff0c\u53ef\u4ee5\u88ab\u6539\u5199\u6210\u5c3e\u9012\u5f52/\u5c3e\u8c03\u7528\u7684\u5f62\u5f0f\uff0c\u5e76\u7528\u6c42\u94fe\u8868\u957f\u5ea6\u7684\u51fd\u6570\u6765\u8bf4\u660e</p>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part3/#4_1","title":"4","text":"<p>John\u4e3e\u4e86\u51e0\u4e2a\u4f8b\u5b50\u8bf4\u660e\u662f\u5c3e\u9012\u5f52\u7684\u51fd\u6570\u662f\u4ec0\u4e48\u6837\u7684</p> <p></p>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part3/#5_1","title":"5","text":"<p>John\u5728\u7528 <code>reduce</code> \u51fd\u6570\u8bb2\u89e3\u5c3e\u8c03\u7528\uff0c\u8bf4\u5728 <code>reduce</code> \u7684\u5b9e\u73b0\u4e2d\uff0c\u9664\u4e86 <code>(procedure start (car s))</code> \u90fd\u662f\u5c3e\u8c03\u7528\uff0c\u800c\u6700\u7ec8 <code>reduce</code> \u662f\u5426\u53ea\u9700\u4f7f\u7528\u56fa\u5b9a\u5927\u5c0f\u7684\u7a7a\u95f4 \u53d6\u51b3\u4e8e <code>procedure</code> \u662f\u5426\u4f7f\u7528\u56fa\u5b9a\u5927\u5c0f\u7684\u7a7a\u95f4</p>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part3/#6_1","title":"6","text":"<p>John\u8bb2\u89e3\u5982\u4f55\u5c06 <code>map</code> \u51fd\u6570\u6539\u5199\u6210\u5c3e\u9012\u5f52\u7684\u5f62\u5f0f\uff0c</p> <p>\u5927\u81f4\u7684\u601d\u8def\u662f\uff0c\u5148\u5c06\u5e94\u7528\u51fd\u6570\u5230\u76ee\u6807\u94fe\u8868\u4e0a\uff0c\u5f97\u5230\u4e00\u4e2a\u5012\u5e8f\u7684\u94fe\u8868(\u56e0\u4e3a\u8981\u5c3e\u9012\u5f52\u7684\u8bdd\u5c31\u53ea\u80fd\u4ece\u5c3e\u90e8\u5f00\u59cb)\uff0c\u7136\u540e\u518d\u5c06\u5012\u5e8f\u7684\u94fe\u8868\u7684\u987a\u5e8f\u8f6c\u6362\u56de\u6765( <code>reverse</code> \u51fd\u6570)\uff0c\u800c\u8fd9\u4e2a\u8fc7\u7a0b\u4e5f\u662f\u5c3e\u9012\u5f52\u7684\uff0c\u6240\u4ee5\u6574\u4e2a <code>map</code> \u5c31\u5b9e\u73b0\u4e86\u5c3e\u9012\u5f52\u7684\u5f62\u5f0f</p>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part3/#lab-13","title":"Lab 13","text":""},{"location":"Notes%20of%20Courses/CS61A/CS61A_part3/#1_10","title":"1","text":"<p>\u53d1\u73b0\u8fd9\u4e2alab\u7684zip\u4e2d\u7684 <code>sqlite_shell.py</code> \u6587\u4ef6\u548clab12\u4e2d\u4e00\u6837\u662f\u7a7a\u7684</p>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part3/#2_10","title":"2","text":"<p>\u5728\u5199Q3\u65f6\uff0c\u53d1\u73b0 <code>where</code> \u653e\u5728 <code>group by</code> \u4e4b\u540e\u4f1a\u62a5\u9519\uff0c</p> <pre><code>near \"where\": syntax error\n</code></pre> <p>\u7136\u540e\u8c03\u6574\u4e86\u4e00\u4e0b\u987a\u5e8f\u4e4b\u540e\u5c31\u597d\u4e86</p> code <pre><code>create table helper as\n  select a.name as name, min(a.MSRP/a.rating), b.store as store \n  from products as a, lowest_prices as b where a.name = b.item group by category;\n\nCREATE TABLE shopping_list AS\n  -- SELECT \"REPLACE THIS LINE WITH YOUR SOLUTION\";\n  select name, store from helper;\n</code></pre>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part3/#lecture-36-macros","title":"Lecture 36 Macros","text":""},{"location":"Notes%20of%20Courses/CS61A/CS61A_part3/#1_11","title":"1","text":"<p>\u5173\u4e8e \u5b8f Macro \u7684\u4e00\u4e9b\u8bf4\u660e</p> <p>\u5b8f\u8c03\u7528\u8868\u8fbe\u5f0f\u7684\u6c42\u503c\u8fc7\u7a0b:</p> <ul> <li>\u8ba1\u7b97\u64cd\u4f5c\u7b26\u5b50\u8868\u8fbe\u5f0f\uff0c\u5176\u7ed3\u679c\u4e3a\u4e00\u4e2a\u5b8f</li> <li>\u5bf9\u64cd\u4f5c\u6570\u8868\u8fbe\u5f0f\u8fdb\u884c\u8c03\u7528\uff0c\u800c\u4e0d\u5148\u5bf9\u5b83\u4eec\u8fdb\u884c\u6c42\u503c</li> <li>\u8ba1\u7b97\u4ece\u5b8f\u8fc7\u7a0b\u8fd4\u56de\u7684\u8868\u8fbe\u5f0f</li> </ul>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part3/#2_11","title":"2","text":"<p>John\u6f14\u793a\u4e86\u5982\u679c\u4e0d\u4f7f\u7528\u5b8f\uff0c\u5c31\u65e0\u6cd5\u5b9e\u73b0 <code>twice</code> \u51fd\u6570\uff0c</p>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part3/#3_7","title":"3","text":"<p>John\u6f14\u793a\u4e86\u4f7f\u7528 <code>define-macro</code> \u548c <code>define</code> \u5e94\u7528\u4e8e\u540c\u6837\u7684\u4ee3\u7801\u7684\u4e0d\u540c\u6548\u679c</p> <p></p> <p></p>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part3/#lab-14","title":"Lab 14","text":""},{"location":"Notes%20of%20Courses/CS61A/CS61A_part3/#1_12","title":"1","text":"<p>Q1\uff0c\u9700\u8981\u6ce8\u610f\u6ca1\u6709\u8fd4\u56de\u503c(\u4ece\u6d4b\u8bd5\u6587\u6863\u4e2d\u53ef\u4ee5\u5f97\u77e5)</p> code <pre><code>def prune_min(t):\n    \"*** YOUR CODE HERE ***\"\n    if t.is_leaf():\n        return\n    min_b = min(t.branches, key=lambda t: t.label)\n    prune_min(min_b)\n    t.branches = [min_b]\n</code></pre>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part3/#2_12","title":"2","text":"<p>Q2\u8fd9\u9898\u6ca1\u6709\u7ed9\u4f8b\u5b50\uff0c\u6240\u4ee5\u5bfc\u81f4\u6211\u4e00\u5f00\u59cb\u6ca1\u7406\u89e3\u51c6\u786e\u9898\u76ee\u7684\u610f\u601d\ud83d\ude05\uff0c\u7406\u89e3\u51c6\u786e\u4e86\u5c31\u4e0d\u662f\u5f88\u96be\u4e86\uff0c</p> <p>\u8fd9\u662f\u4e24\u4e2a\u6d4b\u8bd5\u7684\u4f8b\u5b50</p> <pre><code>scm&gt; (car (split-at '(1 2 3 4 5) 3))\n(1 2 3)\nscm&gt; (cdr (split-at '(1 2 3 4 5) 3))\n(4 5)\n</code></pre> code <pre><code>(define (split-at lst n)\n  'YOUR-CODE-HERE\n  (if (or (null? lst) (= n 0))\n      (cons nil lst)\n      (let ((rest (split-at (cdr lst) (- n 1))))\n           (cons (cons (car lst) (car rest)) (cdr rest))))\n)\n</code></pre>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part3/#3_8","title":"3","text":"<p>Q3\u8fd9\u9898\u6709\u70b9\u96be\u60f3\uff0c\u6211\u60f3\u4e86\u4e00\u4f1a\u624d\u60f3\u51fa\u4ee3\u7801</p> code <pre><code>(define (compose-all funcs)\n  'YOUR-CODE-HERE\n  (if (null? funcs)\n      (lambda (x) x)\n      (lambda (x) ((compose-all (cdr funcs)) ((car funcs) x))))\n)\n</code></pre>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part3/#4_2","title":"4","text":"<p>Q4\u8fd9\u9898\u633a\u96be\u7684\uff0c\u60f3\u4e86\u597d\u4e45\u624d\u60f3\u51fa\u6765</p> <p>\u4e00\u5f00\u59cb\u4ee5\u4e3a\uff0c\u9700\u8981\u5c06\u5217\u8868\u4e2d\u7684\u5143\u7d20\u4e00\u4e2a\u4e00\u4e2a\u9012\u5f52\u5730\u53bb\u9664\u6765\u5224\u65ad(\u53ef\u80fd\u662fscheme\u5199\u591a\u4e86\u7684\u539f\u56e0\ud83d\ude05)\uff0c\u7136\u540e\u5c1d\u8bd5\u4e86\u5f88\u4e45\u90fd\u6ca1\u6709\u601d\u8def\uff0c</p> <p>\u5728\u91cd\u65b0\u7406\u89e3\u8fd9\u4e2a\u4f8b\u5b50\u65f6\uff0c</p> <pre><code>&gt;&gt;&gt; num_splits([1, 5, 4], 0)  # splits to [1, 4] and [5]\n1\n</code></pre> <p>\u7a81\u7136\u60f3\u5230 <code>1 - 5 + 4 = 0</code> \uff0c\u7136\u540e\u5c31\u60f3\u5230\u4e86\u53ef\u4ee5\u901a\u8fc7\u7ed9\u6570\u5b57\u52a0\u4e0a\u6b63\u8d1f\u53f7\u6765\u5224\u65ad\u5206\u5230\u54ea\u4e00\u8fb9\uff0c\u4e8e\u662f\u5199\u4e86\u4e00\u4e2a\u8f85\u52a9\u51fd\u6570</p> <pre><code>def spliter(s, d, current_diff):\n    if s == []:\n        return 1 if current_diff &gt;= 0 and current_diff &lt;= d else 0\n    else:\n        return spliter(s[1:], d, current_diff + s[0]) + spliter(s[1:], d, current_diff - s[0])\n</code></pre> <p>\u5224\u65ad <code>current_diff &gt;= 0</code> \u672c\u6765\u662f\u60f3\u901a\u8fc7\u8fd9\u6837\u6765\u53bb\u6389\u76f8\u53cd\u987a\u5e8f/\u8fb9\u7684\u4e00\u534a(\u987a\u5e8f\u76f8\u53cd\u7684\u8bdd\u6700\u540e\u7684\u5dee\u503c\u5e94\u8be5\u521a\u597d\u662f\u76f8\u53cd\u6570)\uff0c\u4f46\u662f\u5c31\u5728 <code>num_splits([1, 5, 4], 0)</code> \u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c\u91cd\u590d\u7684\u53e6\u4e00\u534a\u5dee\u503c\u4e5f\u521a\u597d\u662f0\uff0c\u4e8e\u662f\u6700\u540e\u5f97\u5230\u4e862</p> <p>\u7136\u540e\u601d\u8003\u4e86\u4e00\u4f1a\u540e\uff0c\u4fee\u6539\u6210\u4e86\u76f4\u63a5\u7b97\u51fa\u5305\u542b\u91cd\u590d\u7684\u6240\u6709\u7684\u60c5\u51b5\uff0c\u518d\u96642\u5c31\u597d\u4e86</p> code <pre><code>def num_splits(s, d):\n    \"*** YOUR CODE HERE ***\"\n    def spliter(s, d, current_diff):\n        if s == []:\n            return 1 if abs(current_diff) &lt;= d else 0\n        else:\n            return spliter(s[1:], d, current_diff + s[0]) + spliter(s[1:], d, current_diff - s[0])\n    return spliter(s, d, 0) // 2\n</code></pre>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part3/#4_3","title":"4","text":"<p>Q6\uff0c\u8fd9\u9898\u9898\u76ee\u770b\u7740\u6bd4\u8f83\u590d\u6742\uff0c\u4f46\u5176\u5b9e\u5927\u6982\u7684\u4ee3\u7801\u6846\u67b6\u57fa\u672c\u4e0a\u90fd\u5df2\u7ecf\u5199\u597d\u4e86\uff0c\u9700\u8981\u586b\u5145\u7684\u90e8\u5206\u601d\u8def\u548c\u4e4b\u524d\u7684\u4e00\u9898\u5927\u81f4\u4e0a\u662f\u7c7b\u4f3c\u7684\uff0c\u6240\u4ee5\u6700\u540e\u5199\u8d77\u6765\u8fd8\u662f\u6bd4\u8f83\u597d\u5199\u7684</p> <p>\u5199\u7684\u8fc7\u7a0b\u4e2d\u53d1\u73b0\uff0cpython\u4e2d\u5b57\u7b26\u4e32\u4e0d\u80fd\u7528 \u5207\u7247\u8d4b\u503c</p> <pre><code>&gt;&gt;&gt; align_skeleton(skeleton=\"i\", code=\"i\")\nTraceback (most recent call last):\n  File \"C:\\Courses\\cs61a\\lab\\lab14\\lab14.py\", line 189, in align_skeleton\n    result, cost = helper_align(0, 0)\n  File \"C:\\Courses\\cs61a\\lab\\lab14\\lab14.py\", line 178, in helper_align\n    match_match[0:0] = skel_char\nTypeError: 'str' object does not support item assignment\n</code></pre> code <pre><code>def align_skeleton(skeleton, code):\n    \"\"\"\n    Aligns the given skeleton with the given code, minimizing the edit distance between\n    the two. Both skeleton and code are assumed to be valid one-line strings of code. \n\n    &gt;&gt;&gt; align_skeleton(skeleton=\"\", code=\"\")\n    ''\n    &gt;&gt;&gt; align_skeleton(skeleton=\"\", code=\"i\")\n    '+[i]'\n    &gt;&gt;&gt; align_skeleton(skeleton=\"i\", code=\"\")\n    '-[i]'\n    &gt;&gt;&gt; align_skeleton(skeleton=\"i\", code=\"i\")\n    'i'\n    &gt;&gt;&gt; align_skeleton(skeleton=\"i\", code=\"j\")\n    '+[j]-[i]'\n    &gt;&gt;&gt; align_skeleton(skeleton=\"x=5\", code=\"x=6\")\n    'x=+[6]-[5]'\n    &gt;&gt;&gt; align_skeleton(skeleton=\"return x\", code=\"return x+1\")\n    'returnx+[+]+[1]'\n    &gt;&gt;&gt; align_skeleton(skeleton=\"while x&lt;y\", code=\"for x&lt;y\")\n    '+[f]+[o]+[r]-[w]-[h]-[i]-[l]-[e]x&lt;y'\n    &gt;&gt;&gt; align_skeleton(skeleton=\"def f(x):\", code=\"def g(x):\")\n    'def+[g]-[f](x):'\n    \"\"\"\n    skeleton, code = skeleton.replace(\" \", \"\"), code.replace(\" \", \"\")\n\n    def helper_align(skeleton_idx, code_idx):\n        \"\"\"\n        Aligns the given skeletal segment with the code.\n        Returns (match, cost)\n            match: the sequence of corrections as a string\n            cost: the cost of the corrections, in edits\n        \"\"\"\n        if skeleton_idx == len(skeleton) and code_idx == len(code):\n            return \"\", 0\n        if skeleton_idx &lt; len(skeleton) and code_idx == len(code):\n            edits = \"\".join([\"-[\" + c + \"]\" for c in skeleton[skeleton_idx:]])\n            return edits, len(skeleton) - skeleton_idx\n        if skeleton_idx == len(skeleton) and code_idx &lt; len(code):\n            edits = \"\".join([\"+[\" + c + \"]\" for c in code[code_idx:]])\n            return edits, len(code) - code_idx\n\n        possibilities = []\n        skel_char, code_char = skeleton[skeleton_idx], code[code_idx]\n        # Match\n        if skel_char == code_char:\n            match_match, cost_match = helper_align(skeleton_idx + 1, code_idx + 1)\n            match_match = skel_char + match_match\n            possibilities .append((match_match, cost_match))\n        # Insert\n        match_insert, cost_insert = helper_align(skeleton_idx, code_idx + 1)\n        # match_insert[0:0] = \"+[\" + code_char + \"]\"\n        match_insert = \"+[\" + code_char + \"]\" + match_insert\n        possibilities.append((match_insert, cost_insert + 1))\n        # Delete\n        match_delete, cost_delete = helper_align(skeleton_idx + 1, code_idx)\n        # match_delete[0:0] = \"-[\" + skel_char + \"]\"\n        match_delete = \"-[\" + skel_char + \"]\" + match_delete\n        possibilities.append((match_delete, cost_delete + 1))\n        return min(possibilities, key=lambda x: x[1])\n    result, cost = helper_align(0, 0)\n    return result\n</code></pre>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part3/#5_2","title":"5","text":"<p>Q8\uff0c\u8fd9\u9898\u4e00\u5f00\u59cb\u6ca1\u770b\u89c1\u9700\u8981\u7528 <code>foldl</code> \u6216\u8005 <code>foldr</code> \u6765\u5b9e\u73b0\uff0c\u6240\u4ee5\u76f4\u63a5\u5199\u51fa\u6765\u4e86</p> <pre><code>def filterl(lst, pred):\n    \"*** YOUR CODE HERE ***\"\n    if lst is Link.empty:\n        return lst\n    elif pred(lst.first):\n        return Link(lst.first, filterl(lst.rest, pred))\n    else:\n        return filterl(lst.rest, pred)\n</code></pre> <p>\u4e4b\u540e\u7528 <code>foldl</code> \u5b9e\u73b0\u4e86\uff0c\u4f46\u662f\u611f\u89c9\u7528\u4e86 <code>foldl</code> \u7684\u6211\u7684\u4ee3\u7801\u5e76\u6ca1\u6709\u6bd4\u4e4b\u524d\u7b80\u5355\ud83d\ude05</p> <pre><code>def filterl(lst, pred):\n    \"*** YOUR CODE HERE ***\"\n    def fn_pred(r, v):\n        if not pred(v):\n            return r\n        elif r is Link.empty:\n            return Link(v, r)\n        else:\n            r.rest = Link(v)\n            return r\n    return foldl(lst, fn_pred, Link.empty)\n</code></pre> <p>\u7136\u540e\u60f3\u4e86\u60f3\uff0c\u6309\u7167\u9898\u76ee\u7684\u610f\u601d\uff0c\u4f7f\u7528 <code>foldl</code> \u6216\u8005 <code>foldr</code> \u5e94\u8be5\u662f\u80fd\u7b80\u5316\u4ee3\u7801\uff0c\u53c8\u60f3\u5230 <code>foldl</code> \u4e2d\u662f\u5c06\u94fe\u8868\u4e2d\u7684\u5143\u7d20\u4ece\u5de6\u5230\u53f3\u5e94\u7528\u5230 <code>fn</code> \u4e2d\uff0c\u6240\u4ee5 <code>foldr</code> \u51fd\u6570\u5c31\u5e94\u8be5(\u521a\u597d\u76f8\u53cd)\u662f\u4ece\u53f3\u5230\u5de6\u5e94\u7528\u94fe\u8868\u4e2d\u7684\u5143\u7d20\uff0c\u4e8e\u662f\u7528\u4ee3\u7801\u5b9e\u73b0\u4e86 <code>foldr</code> </p> <pre><code>def foldr(link, fn, z):\n    \"\"\" Right fold \"\"\"\n    if link is Link.empty:\n        return z\n    return fn(foldr(link.rest, fn, z), link.first)\n</code></pre> <p>\u7136\u540e\u7528 <code>foldr</code> \u5b9e\u73b0\u4e86\u8fd9\u9898(\u8fd9\u6837\u5c31\u7b80\u5355\u591a\u4e86\ud83d\ude0a)</p> <pre><code>def filterl(lst, pred):\n    \"*** YOUR CODE HERE ***\"\n    return foldr(lst, lambda r, v: Link(v, r) if pred(v) else r, Link.empty)\n</code></pre> <p>\u4e4b\u540e\u53bb21\u5e74\u79cb\u5b63\u5b66\u671f\u7684lab14\u4e2d\uff0c\u770b\u5230\u4e86\u5b9e\u73b0 <code>foldr</code> \u51fd\u6570\u7684\u9898\u76eeFold Right</p> <pre><code>def foldr(link, fn, z):\n    \"\"\" Right fold\n    &gt;&gt;&gt; lst = Link(3, Link(2, Link(1)))\n    &gt;&gt;&gt; foldr(lst, sub, 0) # (3 - (2 - (1 - 0)))\n    2\n    &gt;&gt;&gt; foldr(lst, add, 0) # (3 + (2 + (1 + 0)))\n    6\n    &gt;&gt;&gt; foldr(lst, mul, 1) # (3 * (2 * (1 * 1)))\n    6\n    \"\"\"\n    \"*** YOUR CODE HERE ***\"\n</code></pre> <p>\u53d1\u73b0\u5c31\u8ddf\u6211\u521a\u624d\u60f3\u7684\u4e00\u6837\uff0c</p> <p>\u4e0d\u8fc7\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c <code>fn</code> \u7684\u4e24\u4e2a\u53c2\u6570\u7684\u4f4d\u7f6e\u548c\u6211\u4e4b\u524d\u7684\u5b9e\u73b0\u662f\u53cd\u8fc7\u6765\u7684\uff0c\u56e0\u6b64\u6700\u540e <code>foldr</code> \u548c <code>filterl</code> \u6b63\u786e\u7684\u5b9e\u73b0\u4ee3\u7801\u5e94\u8be5\u662f</p> <pre><code>def foldr(link, fn, z):\n    \"\"\" Right fold \"\"\"\n    if link is Link.empty:\n        return z\n    return fn(link.first, foldr(link.rest, fn, z))\n</code></pre> <pre><code>def filterl(lst, pred):\n    \"*** YOUR CODE HERE ***\"\n    return foldr(lst, lambda v, r: Link(v, r) if pred(v) else r, Link.empty)\n</code></pre>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part3/#6_2","title":"6","text":"<p>Q9\uff0c\u8fd9\u9898\u6709\u70b9\u610f\u601d\uff0c\u9898\u76ee\u4e2d\u8bf4\u9700\u8981\u7528\u5230\u4e4b\u524d\u5b9e\u73b0\u7684 <code>foldl</code> \u51fd\u6570\uff0c\u5e76\u4e14\u53ea\u9700\u8981\u4e00\u884c\u4ee3\u7801\u5c31\u53ef\u4ee5\u5b9e\u73b0\u4e86\uff0c</p> <p>\u4e00\u5f00\u59cb\u6211\u5199\u7684\u662f</p> <pre><code>return foldl(lst, lambda l, r: Link(l.first, r), Link.empty)\n</code></pre> <p>\u7136\u540e\u53d1\u751f\u4e86\u62a5\u9519</p> <pre><code>Traceback (most recent call last):\n  ...\n  File \"C:\\Courses\\cs61a\\lab\\lab14\\lab14.py\", line 237, in &lt;lambda&gt;\n    return foldl(lst, lambda l, r: Link(l.first, r), Link.empty)\nAttributeError: 'tuple' object has no attribute 'first'\n</code></pre> <p>\u7136\u540e\u610f\u8bc6\u5230\u4f20\u5165\u7684 <code>fn</code> \u5e94\u8be5\u539f\u59cb\u7684\u503c\u5728\u7b2c\u4e00\u4e2a\u53c2\u6570\u4f4d\uff0c\u4e8e\u662f\u4fee\u6539\u4e86\u4e00\u4e0b\u987a\u5e8f</p> <pre><code>return foldl(lst, lambda r, l: Link(l.first, r), Link.empty)\n</code></pre> <p>\u4f46\u662f\u8fd8\u662f\u62a5\u9519\u4e86</p> <pre><code>AttributeError: 'int' object has no attribute 'first'\n</code></pre> <p>\u7136\u540e\u6211\u610f\u8bc6\u5230 <code>foldl</code> \u51fd\u6570\u4e2d\u62ff\u5230\u7684\u5e94\u8be5\u662f <code>lst</code> \u7684\u5143\u7d20\uff0c\u4e8e\u662f\u6700\u540e\u5c31\u6539\u597d\u4e86</p> code <pre><code>def reverse(lst):\n    \"*** YOUR CODE HERE ***\"\n    return foldl(lst, lambda r, l: Link(l.first, r), Link.empty)\n</code></pre> <p>\u5199\u5b8cQ10\u4e4b\u540e\u5c1d\u8bd5\u4e86\u4e00\u4e0b Extra for experience\uff0c\u5373\u4e0d\u9002\u7528 <code>Link</code> \u6784\u9020\u51fd\u6570\u6765\u5b9e\u73b0 <code>reverse</code> (\u53ef\u4ee5\u4e0d\u4f7f\u7528 <code>foldl</code> \u548c <code>foldr</code> )\uff0c\u611f\u89c9\u8fd8\u884c\uff0c\u5199\u4e86\u4e00\u4e2a\u8f85\u52a9\u51fd\u6570\u5c31\u80fd\u5b9e\u73b0\u4e86</p> code <pre><code>def reverse(lst):\n    \"*** YOUR CODE HERE ***\"\n    def reverse_helper(lst, rest):\n        if lst is Link.empty:\n            return rest\n        else:\n            old_rest, lst.rest = lst.rest, rest\n            return reverse_helper(old_rest, lst)\n    return reverse_helper(lst, Link.empty)\n</code></pre>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part3/#7_1","title":"7","text":"<p>Q10\uff0c\u8fd9\u9898\u9898\u76ee\u4e0d\u96be\u7406\u89e3\uff0c\u4f46\u662f\u4ee3\u7801\u7684\u5b9e\u73b0\u601d\u8def\u6709\u70b9\u7ed5\uff0c\u6211\u60f3\u4e86\u597d\u4e00\u4f1a\u624d\u634b\u6e05\u695a(\u56e0\u4e3a\u8981\u628a\u987a\u5e8f\u53cd\u8fc7\u6765\ud83d\ude05)</p> <p>\u6211\u6700\u540e\u662f\u501f\u52a9\u7b2c\u4e00\u4e2a\u6d4b\u8bd5\u7528\u4f8b\u6765\u7406\u89e3\u7684\uff0c</p> <pre><code>&gt;&gt;&gt; lst = Link(3, Link(2, Link(1)))\n&gt;&gt;&gt; foldr(lst, sub, 0) # (3 - (2 - (1 - 0)))\n</code></pre> <p>\u628a\u8fd9\u4e2a\u6d4b\u8bd5\u7528\u4f8b\u4e2d\u7684 <code>-</code> \u770b\u6210\u662f <code>fn</code></p> <p>\u548c</p> <pre><code>&gt;&gt;&gt; list = Link(3, Link(2, Link(1)))\n&gt;&gt;&gt; foldl2(list, sub, 0) # (((0 - 3) - 2) - 1)\n</code></pre> <p>\u5728 <code>foldr</code> \u4e2d\uff0c\u5230\u8fbe\u94fe\u8868\u7684\u672b\u5c3e\u65f6\uff0c\u5c31\u4f1a\u76f4\u63a5\u8fd4\u56de\u521d\u59cb\u503c <code>z</code> \uff0c\u5373 <code>identity</code> \u51fd\u6570\uff0c\u7136\u540e <code>step</code> \u5c31\u4f1a\u63a5\u6536\u5230 <code>1</code> \u548c <code>identity</code> (\u5206\u522b\u5bf9\u5e94 <code>x</code> \u548c <code>g</code> )\uff0c\u800c\u5728 <code>foldl2</code> \u4e2d\uff0c\u662f\u9700\u8981\u628a <code>1</code> \u5957\u5728\u6700\u5916\u9762\uff0c\u6240\u4ee5\u8fd9\u91cc\u7684 <code>step</code> \u662f\u9700\u8981\u8fd4\u56de\u4e00\u4e2a <code>f(?) = (? - 1)</code> \u51fd\u6570\u7684\u51fd\u6570\uff0c</p> <p>\u800c\u6700\u540e\u8fd4\u56de\u5230\u4e86\u6700\u5f00\u59cb\u65f6\uff0c <code>x</code> \u5bf9\u5e94 <code>3</code> \uff0c <code>g</code> \u5c31\u5e94\u8be5\u5bf9\u5e94\u7684\u662f\u4e00\u4e2a <code>f(?) = ((? - 2) - 1)</code> \u7684\u51fd\u6570\uff0c\u800c\u8fd9\u65f6\u4f1a\u88ab\u4f20\u5165 <code>foldl2</code> \u7684 <code>z</code> \u548c <code>3</code> \uff0c\u6240\u4ee5 <code>?</code> \u5bf9\u5e94\u7684\u5c31\u662f <code>fn(z, x)</code> \uff0c\u5373 <code>step</code> \u4e2d\u5e94\u8be5\u662f <code>g(fn(z, x))</code> \uff0c\u6700\u540e\u5dee\u4e0d\u591a\u5c31\u505a\u51fa\u6765\u4e86</p> code <pre><code>def foldl2(link, fn, z):\n    def step(x, g):\n        \"*** YOUR CODE HERE ***\"\n        return lambda z: g(fn(z, x))\n    return foldr(link, step, identity)(z)\n</code></pre>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part3/#lecture-36-qa","title":"Lecture 36 Q&amp;A","text":""},{"location":"Notes%20of%20Courses/CS61A/CS61A_part3/#1_13","title":"1","text":"<p>\u6709\u4eba\u63d0\u95ee19\u5e74\u79cb\u5b63\u671f\u672b\u8003\u8bd5\u7b2c6\u9898c\u9898\uff0c</p> <p>Quote</p> <p>(20 points) Palindromes</p> <p>Definition. A palindrome is a sequence that has the same elements in normal and reverse order.</p> <p>(a) (3 pt) Implement <code>pal</code> , which takes a positive integer <code>n</code> and returns a positive integer with the digits of <code>n</code> followed by the digits of <code>n</code> in reverse order.</p> <p>Important: You may not write <code>str</code> , <code>repr</code> , <code>list</code> , <code>tuple</code> , <code>[</code> , or <code>]</code> .</p> <pre><code>def pal(n):\n    \"\"\"Return a palindrome starting with n.\n\n    &gt;&gt;&gt; pal(12430)\n    1243003421\n    \"\"\"\n    m = n\n    while m:\n        n, m = ____________________________________ , ____________________________________\n    return n\n</code></pre> <p>(b) (4 pt) Implement <code>contains</code> , which takes non-negative integers <code>a</code> and <code>b</code> . It returns whether all of the digits of a also appear in order among the digits of <code>b</code> .</p> <p>Important: You may not write <code>str</code> , <code>repr</code> , <code>list</code> , <code>tuple</code> , <code>[</code> , or <code>]</code> .</p> <pre><code>def contains(a, b):\n    \"\"\"Return whether the digits of a are contained in the digits of b.\n\n    &gt;&gt;&gt; contains(357, 12345678)\n    True\n    &gt;&gt;&gt; contains(753, 12345678)\n    False\n    &gt;&gt;&gt; contains(357, 37)\n    False\n    \"\"\"\n    if a == b:\n        return True\n    if ________________________________________ &gt; _________________________________________:\n        return False\n    if ________________________________________ == ________________________________________:\n        return contains( _______________________________ , _______________________________ )\n    else:\n        return contains( _______________________________ , _______________________________ )\n</code></pre> <p>(c) (6 pt) Implement <code>big</code> , a helper function for <code>biggest_palindrome</code> . The <code>biggest_palindrome</code> function takes a non-negative integer <code>n</code> and returns the largest palindrome integer with an even number of digits that appear among the digits of <code>n</code> in order. If there is no even-length palindrome among the digits of <code>n</code> , then <code>biggest_palindrome(n)</code> returns 0. You may call <code>pal</code> and <code>contains</code> . </p> <p>Important: You may not write <code>str</code> , <code>repr</code> , <code>list</code> , <code>tuple</code> , <code>[</code> , or <code>]</code> .</p> <pre><code>def biggest_palindrome(n):\n    \"\"\"Return the largest even-length palindrome in n.\n\n    &gt;&gt;&gt; biggest_palindrome(3425534)\n    4554\n    &gt;&gt;&gt; biggest_palindrome(126130450234125)\n    21300312\n    \"\"\"\n    return big(n, 0)\n\ndef big(n, k):\n    \"\"\"A helper function for biggest_palindrome.\"\"\"\n    if n == 0:\n        return 0\n    choices = [big( _________________ , k) , big( _________________ , _________________ )]\n    if contains(k, ______________________________________________________________________):\n        __________________________________________________________________________________\n    return max(choices)\n</code></pre> <p>(d) (1 pt) Circle the term that fills in the blank: the <code>is_palindrome</code> function defined below runs in ____ time in the length of its input.</p> <ul> <li>Constant</li> <li>Logarithmic</li> <li>Linear</li> <li>Quadratic</li> <li>Exponential</li> <li>None of these</li> </ul> <pre><code>def is_palindrome(s):\n    \"\"\"Return whether a list of numbers s is a palindrome.\"\"\"\n    return all([s[i] == s[len(s) - i - 1] for i in range(len(s))])\n</code></pre> <p>Assume that <code>len</code> runs in constant time and <code>all</code> runs in linear time in the length of its input. Selecting an element of a list by its index requires constant time. Constructing a <code>range</code> requires constant time.</p> <p>(e) (6 pt) Implement <code>outer</code> , a helper function for <code>palinkdrome</code> . The <code>palinkdrome</code> function takes a positive integer <code>n</code> and returns a one-argument function that, when called repeatedly <code>n</code> times, returns a <code>Link</code> containing the sequence of arguments to the repeated calls followed by that sequence in reverse order. The <code>Link</code> class appears on Page 2 (left column) of the Midterm 2 study guide.</p> <pre><code>def palinkdrome(n):\n    \"\"\"Return a function that returns a palindrome starting with the args of n repeated calls.\n    &gt;&gt;&gt; print(palinkdrome(3)(5)(6)(7))\n    &lt;5 6 7 7 6 5&gt;\n    &gt;&gt;&gt; print(palinkdrome(1)(4))\n    &lt;4 4&gt;\n    \"\"\"\n    return outer(Link.empty, n)\n\ndef outer(r, n):\n    def inner(k):\n        s = Link(k, ______________________________________________________________)\n        if n == 1:\n            t = __________________________________________________________________\n            while s is not Link.empty:\n                t, s = Link(________________, ________________) , ________________\n            return t\n        else:\n            return ____________________________________________________________\n    return ________________________________________________________________________\n</code></pre> <pre><code>class Link:\n    \"\"\"A linked list.\n\n    &gt;&gt;&gt; s = Link(1)\n    &gt;&gt;&gt; s.first\n    1\n    &gt;&gt;&gt; s.rest is Link.empty\n    True\n    &gt;&gt;&gt; s = Link(2, Link(3, Link(4)))\n    &gt;&gt;&gt; s.first = 5\n    &gt;&gt;&gt; s.rest.first = 6\n    &gt;&gt;&gt; s.rest.rest = Link.empty\n    &gt;&gt;&gt; s                                    # Displays the contents of repr(s)\n    Link(5, Link(6))\n    &gt;&gt;&gt; s.rest = Link(7, Link(Link(8, Link(9))))\n    &gt;&gt;&gt; s\n    Link(5, Link(7, Link(Link(8, Link(9)))))\n    &gt;&gt;&gt; print(s)                             # Prints str(s)\n    &lt;5 7 &lt;8 9&gt;&gt;\n    \"\"\"\n    empty = ()\n\n    def __init__(self, first, rest=empty):\n        assert rest is Link.empty or isinstance(rest, Link)\n        self.first = first\n        self.rest = rest\n\n    def __repr__(self):\n        if self.rest is not Link.empty:\n            rest_repr = ', ' + repr(self.rest)\n        else:\n            rest_repr = ''\n        return 'Link(' + repr(self.first) + rest_repr + ')'\n\n    def __str__(self):\n        string = '&lt;'\n        while self.rest is not Link.empty:\n            string += str(self.first) + ' '\n            self = self.rest\n        return string + str(self.first) + '&gt;'\n</code></pre> <p>\u4e8e\u662f\u5c1d\u8bd5\u81ea\u5df1\u5199\u4e00\u4e0b\uff0c\u53d1\u73b0\u786e\u5b9ec\u9898\u96be\u60f3\ud83d\ude05\uff0c</p> <p>\u6211\u770b\u5230\u4ee3\u7801\u7684\u65f6\u5019\uff0c\u5927\u6982\u80fd\u60f3\u5230\u4ed6\u7684\u5927\u81f4\u60f3\u6cd5/\u601d\u8def\uff0c\u4f46\u662f\u4e0d\u77e5\u5230\u8981\u5982\u4f55\u7528\u4ee3\u7801\u5b9e\u73b0(\u8ddf\u4ed6\u7ed9\u7684\u4ee3\u7801\u6846\u67b6\u5bf9\u4e0d\u4e0a)\u3002</p> <p>\u4e00\u5f00\u59cb\u770b\u5b8c\u4e86\u4ee3\u7801\u4e4b\u540e\uff0c\u6211\u6700\u5148\u731c\u5230\u7684\u662f <code>choices</code> \u8fd9\u884c\u7684\u4f5c\u7528</p> <pre><code>choices = [big(_________________, k), big(_________________, _________________ )]\n</code></pre> <p>\u6211\u60f3\u5230\u5e94\u8be5\u662f\u8003\u8651\u6700\u540e\u4e00\u4f4d\u662f\u5426\u7b97\u5165\u56de\u6587\u6570\u4e2d/\u662f\u5426\u53d6\u7528\u6700\u540e\u4e00\u4f4d\uff0c</p> <p>\u6bd4\u5982 213123 \u8fd9\u4e2a\u6570\u5b57\uff0c\u5982\u679c\u53d6\u75283\uff0c\u90a3\u4e48\u7ed3\u679c\u53ea\u80fd\u662f33\uff0c\u5982\u679c\u4e0d\u53d6\u75283\u7684\u8bdd\uff0c\u7ed3\u679c\u5e94\u662f2112</p> <p>\u5e76\u4e14\u5c06\u4e24\u79cd\u60c5\u51b5\u7684\u7ed3\u679c\u90fd\u653e\u5230 <code>choices</code> \u4e2d\uff0c\u6700\u540e\u518d\u9009\u5176\u4e2d\u7684\u6700\u5927\u503c(\u5bf9\u5e94 <code>return max(choices)</code> \u8fd9\u884c\u4ee3\u7801)\uff0c</p> <p>\u7136\u540e\u53c8\u6ce8\u610f\u5230\u8fd9\u662f\u4e2a\u9012\u5f52\u7684\u7ed3\u6784\uff0c\u6240\u4ee5\u5e94\u8be5\u662f\u8981\u5c06 <code>n // 10</code> \u4f20\u5165\uff0c\u6240\u4ee5\u5927\u6982\u731c\u6d4b\u8fd9\u884c\u4ee3\u7801\u662f\u8fd9\u6837</p> <pre><code>choices = [big(n // 10, k), big(n // 10, k * 10 + n % 10)]\n</code></pre> <p>\u800c\u5728 <code>if</code> \u4e2d\uff0c\u611f\u89c9\u5e94\u8be5\u662f\u6ee1\u8db3\u4e00\u4e2a\u4ec0\u4e48\u6761\u4ef6\uff0c\u4f1a\u628a\u4e00\u4e2a\u7ed3\u679c\u52a0\u5230 <code>choices</code> \u4e2d\uff0c\u7136\u540e\u53c8\u6839\u636e\u4e4b\u524d\u5199\u7684\u4ee3\u7801\u4e2d <code>k</code> \u53ea\u662f\u56de\u6587\u7684\u4e00\u534a\uff0c\u6240\u4ee5\u611f\u89c9\u8fd9\u884c\u53ef\u80fd\u662f</p> <pre><code>choices += [pal(k)]\n</code></pre> <p>\u800c\u7531\u4e8e\u6211\u5ffd\u7565\u4e86 <code>k * 10 + n % 10</code> \u8fd9\u91cc\u521a\u597d\u4f1a \u4ee5\u5012\u8fc7\u6765\u7684\u987a\u5e8f \u628a\u539f\u59cb\u6570\u5b57\u7684\u6570\u4f4d\u653e\u5230 <code>k</code> \u4e0a\uff0c\u6240\u4ee5\u4e00\u5f00\u59cb\u5728 <code>if</code> \u7684\u5224\u65ad\u6761\u4ef6\u4e2d\uff0c\u6211\u5199\u7684\u662f</p> <pre><code>if contains(k, pal(n)):\n</code></pre> <p>\u4f46\u662f\u6d4b\u8bd5\u65f6\u4e0e\u6b63\u786e\u7ed3\u679c\u4e0d\u5bf9</p> <pre><code>Failed example:\n    biggest_palindrome(126130450234125)\nExpected:\n    21300312\nGot:\n    2143223412\n</code></pre> <p>\u672c\u6765\u5df2\u7ecf\u60f3\u4e0d\u51fa\u8981\u5982\u4f55\u4fee\u6539\u4e86\uff0c\u4f46\u968f\u4fbf\u5c1d\u8bd5\u4fee\u6539\u4e86\u4e00\u4e0b</p> <pre><code>if contains(k, n):\n</code></pre> <p>\u7136\u540e\u60ca\u5947\u5730\u53d1\u73b0\u901a\u8fc7\u6d4b\u8bd5\u4e86\ud83d\ude2e\uff0c\u4e8e\u662f\u4e4b\u540e\u5c31\u60f3\u660e\u767d\u4e86\u539f\u56e0</p> <pre><code>def biggest_palindrome(n):\n    \"\"\"Return the largest even-length palindrome in n.\n\n    &gt;&gt;&gt; biggest_palindrome(3425534)\n    4554\n    &gt;&gt;&gt; biggest_palindrome(126130450234125)\n    21300312\n    \"\"\"\n    return big(n, 0)\n\ndef big(n, k):\n    \"\"\"A helper function for biggest_palindrome.\"\"\"\n    if n == 0:\n        return 0\n    choices = [big(n // 10, k), big(n // 10, k * 10 + n % 10)]\n    if contains(k, n):\n        choices += [pal(k)]\n    return max(choices)\n</code></pre> <p>\u6240\u6709\u7684\u9898\u76ee\u7684\u4ee3\u7801</p> (a)(b)(c)(e) <pre><code>def pal(n):\n    \"\"\"Return a palindrome starting with n.\n\n    &gt;&gt;&gt; pal(12430)\n    1243003421\n    \"\"\"\n    m = n\n    while m:\n        n, m = n * 10 + m % 10, m // 10\n    return n\n</code></pre> <pre><code>def contains(a, b):\n    \"\"\"Return whether the digits of a are contained in the digits of b.\n\n    &gt;&gt;&gt; contains(357, 12345678)\n    True\n    &gt;&gt;&gt; contains(753, 12345678)\n    False\n    &gt;&gt;&gt; contains(357, 37)\n    False\n    \"\"\"\n    if a == b:\n        return True\n    if a &gt; b:\n        return False\n    if a % 10 == b % 10:\n        return contains(a // 10, b // 10)\n    else:\n        return contains(a, b // 10)\n</code></pre> <pre><code>def biggest_palindrome(n):\n    \"\"\"Return the largest even-length palindrome in n.\n\n    &gt;&gt;&gt; biggest_palindrome(3425534)\n    4554\n    &gt;&gt;&gt; biggest_palindrome(126130450234125)\n    21300312\n    \"\"\"\n    return big(n, 0)\n\ndef big(n, k):\n    \"\"\"A helper function for biggest_palindrome.\"\"\"\n    if n == 0:\n        return 0\n    choices = [big(n // 10, k), big(n // 10, k * 10 + n % 10)]\n    if contains(k, n):\n        choices += [pal(k)]\n    return max(choices)\n</code></pre> <pre><code>def palinkdrome(n):\n    \"\"\"Return a function that returns a palindrome starting with the args of n repeated calls.\n    &gt;&gt;&gt; print(palinkdrome(3)(5)(6)(7))\n    &lt;5 6 7 7 6 5&gt;\n    &gt;&gt;&gt; print(palinkdrome(1)(4))\n    &lt;4 4&gt;\n    \"\"\"\n    return outer(Link.empty, n)\n\ndef outer(r, n):\n    def inner(k):\n        s = Link(k, r)\n        if n == 1:\n            t = s\n            while s is not Link.empty:\n                t, s = Link(s.first, t), s.rest\n            return t\n        else:\n            return outer(s, n - 1)\n    return inner\n</code></pre> <p>\u6709\u4eba\u95ee\u9053John\u662f\u5982\u4f55\u5904\u7406\u8fd9\u4e2a\u95ee\u9898\u7684\uff0c\u4e0b\u9762\u662fJohn\u7684\u89e3\u91ca</p> <p>Quote</p> <p>John:</p> <p>Yeah, great question. So how do you approach this problem? What are the steps? Um, one is to recognize that there's a tree recursion problem. You could do that from the syntax because there are two calls to <code>big</code> , or you could do that from the kind of nature of the problem, which is they were doing some search among all the possible subsets of digits in here. Which one's the biggest looks like a tree recursion problem. Um, so you have to look for a way to distill that into a sequence of choices.</p> <p>And, uh, a common sequence of choices that you have is to keep the last digit or you don't. I mean, we've seen that in a few different examples. Um, but and so it happens to apply here. Sometimes it's not clear what kind of sequence of choices you need to make, but that is a big part of solving a tree recursion problem. So, um, yeah, how you figure out what that choice is is to think about all the different possibilities that you need to consider. So, all the different palindromes within here, and how would I enumerate that set? Well, all the ones that have a four at the end and all the ones that don't is a way of partitioning that set using an operation that I could repeat over and over again. So, that's how you kind of figure out what choice you're going to be making.</p> <p>I guess that got us as far as thinking probably what we're going to do is call <code>big</code> where we keep the last digit and <code>big</code> where we don't. Now is the hard part, which is how are we going to represent this notion of keeping the last digit? It's not like we have a list called digits where we're appending the last digit to. Instead, what we're doing is we're effectively reassigning k. Here, k either stays the same or k includes one more digit than it was before. So, whenever you make a recursive call, a good way to think about what you're doing is that you're assigning these formal parameters to new values.</p> <p>So, I guess that starts to explain what's going on here. The last piece is very problem-specific. How would you know that you've found a palindrome and therefore you want to consider that as one of the choices? You know, these two lines wouldn't show up in any other tree recursion problems. They're really just about palindromes because it happens to be that one way of describing a palindrome is that you find some digits within half the number, and then you make sure those digits also appear in the other half of the number in reverse order. How would you discover this? I guess, um, hopefully, the definition of the palindrome would get you there. Like, how do you describe a palindrome? It's like some digits, and then those digits also have to be contained in the other half of the number in reverse order.</p> <p>John:</p> <p>\u662f\u7684\uff0c\u8fd9\u662f\u4e00\u4e2a\u5f88\u597d\u7684\u95ee\u9898\u3002\u90a3\u4e48\u4f60\u5982\u4f55\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff1f\u6709\u54ea\u4e9b\u6b65\u9aa4\uff1f\u55ef\uff0c\u9996\u5148\u8981\u8ba4\u8bc6\u5230\u8fd9\u662f\u4e00\u4e2a\u6811\u9012\u5f52\u95ee\u9898\u3002\u4f60\u53ef\u4ee5\u4ece\u8bed\u6cd5\u4e0a\u770b\u51fa\u6765\uff0c\u56e0\u4e3a\u6709\u4e24\u6b21\u5bf9 <code>big</code> \u7684\u8c03\u7528\uff0c\u6216\u8005\u4f60\u53ef\u4ee5\u4ece\u95ee\u9898\u7684\u6027\u8d28\u4e0a\u770b\u51fa\u6765\uff0c\u4ed6\u4eec\u5728\u8fd9\u91cc\u8fdb\u884c\u4e86\u4e00\u4e9b\u641c\u7d22\uff0c\u641c\u7d22\u6240\u6709\u53ef\u80fd\u7684\u6570\u5b57\u5b50\u96c6\uff0c\u627e\u51fa\u5176\u4e2d\u6700\u5927\u7684\u4e00\u4e2a\uff0c\u770b\u8d77\u6765\u50cf\u4e00\u4e2a\u6811\u9012\u5f52\u95ee\u9898\u3002\u90a3\u4e48\uff0c\u4f60\u5fc5\u987b\u5bfb\u627e\u4e00\u79cd\u5c06\u5176\u5f52\u7eb3\u4e3a\u4e00\u7cfb\u5217\u9009\u62e9\u7684\u65b9\u6cd5\u3002</p> <p>\u800c\u4e14\uff0c\u4f60\u901a\u5e38\u4f1a\u6709\u4e00\u7cfb\u5217\u5171\u540c\u7684\u9009\u62e9\uff0c\u6bd4\u5982\u4fdd\u7559\u6700\u540e\u4e00\u4f4d\u6570\u5b57\u6216\u8005\u4e0d\u4fdd\u7559\u3002\u6211\u7684\u610f\u601d\u662f\uff0c\u6211\u4eec\u5728\u51e0\u4e2a\u4e0d\u540c\u7684\u4f8b\u5b50\u4e2d\u90fd\u770b\u5230\u8fc7\u3002\u4f46\u662f\u5728\u67d0\u4e9b\u60c5\u51b5\u4e0b\uff0c\u4e0d\u6e05\u695a\u9700\u8981\u505a\u51fa\u4ec0\u4e48\u6837\u7684\u9009\u62e9\uff0c\u4f46\u8fd9\u662f\u89e3\u51b3\u6811\u9012\u5f52\u95ee\u9898\u7684\u4e00\u4e2a\u91cd\u8981\u90e8\u5206\u3002\u6240\u4ee5\uff0c\u55ef\uff0c\u4f60\u5982\u4f55\u786e\u5b9a\u8fd9\u4e2a\u9009\u62e9\u662f\u4ec0\u4e48\uff0c\u5c31\u662f\u8003\u8651\u4f60\u9700\u8981\u8003\u8651\u7684\u6240\u6709\u4e0d\u540c\u53ef\u80fd\u6027\u3002</p> <p>\u6240\u4ee5\uff0c\u5728\u8fd9\u91cc\u9762\u7684\u6240\u6709\u4e0d\u540c\u56de\u6587\u6570\uff0c\u6211\u8be5\u5982\u4f55\u679a\u4e3e\u8fd9\u4e2a\u96c6\u5408\u5462\uff1f\u55ef\uff0c\u6240\u6709\u4ee5\u56db\u7ed3\u5c3e\u7684\u56de\u6587\u6570\u548c\u6240\u6709\u4e0d\u4ee5\u56db\u7ed3\u5c3e\u7684\u56de\u6587\u6570\u662f\u4e00\u79cd\u5212\u5206\u8fd9\u4e2a\u96c6\u5408\u7684\u65b9\u6cd5\uff0c\u4f7f\u7528\u4e00\u4e2a\u53ef\u4ee5\u4e00\u904d\u53c8\u4e00\u904d\u91cd\u590d\u7684\u64cd\u4f5c\u3002\u6240\u4ee5\uff0c\u8fd9\u5c31\u662f\u4f60\u5982\u4f55\u60f3\u51fa\u4f60\u5c06\u8981\u505a\u51fa\u7684\u9009\u62e9\u7684\u65b9\u5f0f\u3002</p> <p>\u6211\u60f3\uff0c\u8fd9\u8ba9\u6211\u4eec\u60f3\u5230\uff0c\u6211\u4eec\u53ef\u80fd\u8981\u505a\u7684\u4e8b\u60c5\u662f\u8c03\u7528\u4fdd\u7559\u6700\u540e\u4e00\u4f4d\u6570\u5b57\u7684 <code>big</code> \uff0c\u548c\u4e0d\u4fdd\u7559\u7684 <code>big</code> \u3002\u73b0\u5728\uff0c\u56f0\u96be\u7684\u90e8\u5206\u6765\u4e86\uff0c\u5c31\u662f\u6211\u4eec\u5982\u4f55\u8868\u793a\u4fdd\u7559\u6700\u540e\u4e00\u4f4d\u6570\u5b57\u7684\u8fd9\u4e2a\u6982\u5ff5\u5462\uff1f\u8fd9\u4e0d\u50cf\u6211\u4eec\u6709\u4e00\u4e2a\u540d\u4e3adigits\u7684\u5217\u8868\uff0c\u6211\u4eec\u5728\u5176\u4e2d\u6dfb\u52a0\u6700\u540e\u4e00\u4f4d\u6570\u5b57\u3002\u76f8\u53cd\uff0c\u6211\u4eec\u6b63\u5728\u6709\u6548\u5730\u91cd\u65b0\u5206\u914dk\u3002\u5728\u8fd9\u91cc\uff0ck\u8981\u4e48\u4fdd\u6301\u4e0d\u53d8\uff0c\u8981\u4e48\u6bd4\u4ee5\u524d\u591a\u5305\u542b\u4e00\u4f4d\u6570\u5b57\u3002\u6240\u4ee5\uff0c\u6bcf\u5f53\u4f60\u8fdb\u884c\u9012\u5f52\u8c03\u7528\u65f6\uff0c\u601d\u8003\u4f60\u6b63\u5728\u505a\u7684\u4e8b\u60c5\u7684\u4e00\u4e2a\u597d\u65b9\u6cd5\u662f\uff0c\u4f60\u6b63\u5728\u5c06\u8fd9\u4e9b\u5f62\u5f0f\u53c2\u6570\u8d4b\u4e88\u65b0\u7684\u503c\u3002</p> <p>\u6240\u4ee5\uff0c\u6211\u60f3\u8fd9\u5f00\u59cb\u89e3\u91ca\u8fd9\u91cc\u53d1\u751f\u4e86\u4ec0\u4e48\u3002\u6700\u540e\u4e00\u5757\u662f\u975e\u5e38\u7279\u5b9a\u4e8e\u95ee\u9898\u7684\u3002\u4f60\u5982\u4f55\u77e5\u9053\u627e\u5230\u4e86\u4e00\u4e2a\u56de\u6587\u6570\uff0c\u56e0\u6b64\u4f60\u60f3\u628a\u5b83\u89c6\u4e3a\u9009\u62e9\u4e4b\u4e00\uff1f\u4f60\u77e5\u9053\uff0c\u8fd9\u4e24\u884c\u4e0d\u4f1a\u51fa\u73b0\u5728\u4efb\u4f55\u5176\u4ed6\u6811\u9012\u5f52\u95ee\u9898\u4e2d\u3002\u5b83\u4eec\u5b9e\u9645\u4e0a\u53ea\u6d89\u53ca\u56de\u6587\u6570\uff0c\u56e0\u4e3a\u78b0\u5de7\u63cf\u8ff0\u56de\u6587\u6570\u7684\u4e00\u79cd\u65b9\u5f0f\u662f\uff0c\u5728\u6570\u5b57\u7684\u4e00\u534a\u4e2d\u627e\u5230\u4e00\u4e9b\u6570\u5b57\uff0c\u7136\u540e\u786e\u4fdd\u8fd9\u4e9b\u6570\u5b57\u4e5f\u4ee5\u76f8\u53cd\u7684\u987a\u5e8f\u51fa\u73b0\u5728\u6570\u5b57\u7684\u53e6\u4e00\u534a\u4e2d\u3002\u4f60\u5982\u4f55\u53d1\u73b0\u8fd9\u4e00\u70b9\u5462\uff1f\u6211\u60f3\uff0c\u5e0c\u671b\u56de\u6587\u6570\u7684\u5b9a\u4e49\u4f1a\u8ba9\u4f60\u660e\u767d\u3002\u5c31\u50cf\uff0c\u4f60\u5982\u4f55\u63cf\u8ff0\u4e00\u4e2a\u56de\u6587\u6570\uff0c\u5c31\u662f\u4e00\u4e9b\u6570\u5b57\uff0c\u7136\u540e\u8fd9\u4e9b\u6570\u5b57\u4e5f\u5fc5\u987b\u5305\u542b\u5728\u6570\u5b57\u7684\u53e6\u4e00\u534a\u4e2d\uff0c\u5e76\u4e14\u662f\u76f8\u53cd\u7684\u987a\u5e8f\u3002</p>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part3/#2_13","title":"2","text":"<p>\u6709\u4eba\u63d0\u95ee19\u5e74\u590f\u5b63\u671f\u672b\u8003\u8bd5\u7684\u7b2c8\u9898</p> <p>Quote</p> <p>(10 points) The Big SQL</p> <p>The <code>ingredients</code> table describes the <code>dish</code> and <code>part</code> for each part of each dish at a restaurant. The <code>shops</code> table describes the <code>food</code> , <code>shop</code> , and <code>price</code> for each part of a dish sold at each of two shops. All ingredients (parts) are sold by both shops, and each ingredient will only appear once for each shop. Write your SQL statements so that they would still be correct if table contents changed. You can assume the shops table will only ever contain two shops ( <code>A</code> and <code>B</code> ).</p> <pre><code>CREATE TABLE ingredients AS\n  SELECT \"chili\" AS dish, \"beans\" AS part UNION\n  SELECT \"chili\"        , \"onions\"        UNION\n  SELECT \"soup\"         , \"broth\"         UNION\n  SELECT \"soup\"         , \"onions\"        UNION\n  SELECT \"beans\"        , \"beans\";\n\nCREATE TABLE shops AS\n  SELECT \"beans\" AS food, \"A\" AS shop, 2 AS price UNION\n  SELECT \"beans\"        , \"B\"        , 2 AS price UNION\n  SELECT \"onions\"       , \"A\"        , 3          UNION\n  SELECT \"onions\"       , \"B\"        , 2          UNION\n  SELECT \"broth\"        , \"A\"        , 3          UNION\n  SELECT \"broth\"        , \"B\"        , 5;\n</code></pre> <p>(a) (2 pt)  Select a two-column table with one row per food that describes the lowest price for each food.</p> <pre><code>SELECT food, _________________ FROM shops ________________________;\n</code></pre> <pre><code>beans|2\nbroth|3\nonions|2\n</code></pre> <p>(b) (4 pt) Select a two-column table with one row per dish that describes the total cost of each dish if all parts are purchased from shop A.</p> <pre><code>SELECT ________________________ FROM _____________________________\n  WHERE __________________________________________________________;\n</code></pre> <pre><code>beans|2\nchili|5\nsoup|6\n</code></pre> <p>(c) (4 pt) In two different ways, select a one-column table of all foods that have a different price at each store.</p> <pre><code>SELECT _________ FROM __________________________________, __________________________________\n  WHERE ____________________________________________________________________________________;\nSELECT _________ FROM shops GROUP BY _______________________________________________________;\n</code></pre> <pre><code>onions\nbroth\n</code></pre> <p>\u81ea\u5df1\u505a\u4e86\u4e00\u4e0b\u8fd9\u9898\uff0c\u6700\u540e\u611f\u89c9\u9664\u4e86c\u9898\u4e2d\u8981\u5b9e\u73b0\u7684\u7b2c\u4e8c\u79cd\u65b9\u6cd5\uff0c\u5176\u4ed6\u90fd\u4e0d\u662f\u5f88\u96be</p> <pre><code>python sqlite_shell.py -i test.sql\n</code></pre> (a)(b)(c) <pre><code>SELECT food, min(price) FROM shops GROUP BY food;\n</code></pre> <pre><code>SELECT a.dish, sum(b.price) FROM ingredients AS a, shops AS b\n  WHERE a.part = b.food AND b.shop = \"A\" GROUP BY a.dish;\n</code></pre> <pre><code>SELECT a.food FROM shops AS a, shops AS b\n  WHERE a.food = b.food AND a.shop &lt; b.shop AND a.price != b.price;\nSELECT food FROM shops GROUP BY food HAVING min(price) != max(price);\n</code></pre> <p>\u770b\u4e86John\u7684\u89e3\u7b54\uff0c\u53d1\u73b0\u4ed6c\u9898\u7684\u7b2c\u4e8c\u79cd\u5199\u6cd5\u6bd4\u6211\u66f4\u7b80\u6d01\u4e00\u4e9b</p> <pre><code>SELECT food FROM shops GROUP BY food HAVING MIN(price) != MAX(price);\n</code></pre>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part3/#lecture-37-final-examples","title":"Lecture 37 Final Examples","text":""},{"location":"Notes%20of%20Courses/CS61A/CS61A_part3/#1_14","title":"1","text":"<p>\u5c1d\u8bd5\u5b9e\u73b0\u8bfe\u4e0a\u7684\u8fd9\u9898</p> <pre><code>class Tree:\n    \"\"\"\n    &gt;&gt;&gt; t = Tree(3, [Tree(2, [Tree(5)]), Tree(4)])\n    &gt;&gt;&gt; t.label\n    3\n    &gt;&gt;&gt; t.branches[0].label\n    2\n    &gt;&gt;&gt; t.branches[1].is_leaf()\n    True\n    \"\"\"\n    def __init__(self, label, branches=[]):\n        for b in branches:\n            assert isinstance(b, Tree)\n        self.label = label\n        self.branches = list(branches)\n\n    def is_leaf(self):\n        return not self.branches\n\n    def map(self, fn):\n        \"\"\"\n        Apply a function `fn` to each node in the tree and mutate the tree.\n\n        &gt;&gt;&gt; t1 = Tree(1)\n        &gt;&gt;&gt; t1.map(lambda x: x + 2)\n        &gt;&gt;&gt; t1.map(lambda x : x * 4)\n        &gt;&gt;&gt; t1.label\n        12\n        &gt;&gt;&gt; t2 = Tree(3, [Tree(2, [Tree(5)]), Tree(4)])\n        &gt;&gt;&gt; t2.map(lambda x: x * x)\n        &gt;&gt;&gt; t2\n        Tree(9, [Tree(4, [Tree(25)]), Tree(16)])\n        \"\"\"\n        self.label = fn(self.label)\n        for b in self.branches:\n            b.map(fn)\n\n    def __contains__(self, e):\n        \"\"\"\n        Determine whether an element exists in the tree.\n\n        &gt;&gt;&gt; t1 = Tree(1)\n        &gt;&gt;&gt; 1 in t1\n        True\n        &gt;&gt;&gt; 8 in t1\n        False\n        &gt;&gt;&gt; t2 = Tree(3, [Tree(2, [Tree(5)]), Tree(4)])\n        &gt;&gt;&gt; 6 in t2\n        False\n        &gt;&gt;&gt; 5 in t2\n        True\n        \"\"\"\n        if self.label == e:\n            return True\n        for b in self.branches:\n            if e in b:\n                return True\n        return False\n\n    def __repr__(self):\n        if self.branches:\n            branch_str = ', ' + repr(self.branches)\n        else:\n            branch_str = ''\n        return 'Tree({0}{1})'.format(self.label, branch_str)\n\n    def __str__(self):\n        def print_tree(t, indent=0):\n            tree_str = '  ' * indent + str(t.label) + \"\\n\"\n            for b in t.branches:\n                tree_str += print_tree(b, indent + 1)\n            return tree_str\n        return print_tree(self).rstrip()\n</code></pre> <pre><code>def bigs(t):\n    \"\"\"Return the number of nodes in t that are larger than all their ancestor nodes.\n\n    &gt;&gt;&gt; a = Tree(1, [Tree(4, [Tree(4), Tree(5)], Tree(3, [Tree(0, [Tree(2)])])])\n    &gt;&gt;&gt; bigs(a)\n    4\n    \"\"\"\n    def f(a, x):\n        if ____________________________________________________:\n            return 1 + ________________________________________\n        else:\n            return ____________________________________________\n    return ____________________________________________________\n</code></pre> <p>\u611f\u89c9\u4e0d\u7b97\u96be</p> <pre><code>def bigs(t):\n    def f(a, x):\n        if a.label &gt; x:\n            return 1 + sum([f(b, a.label) for b in a.branches])\n        else:\n            return sum([f(b, x) for b in a.branches])\n    return 1 + sum([f(b, t.label) for b in t.branches])\n</code></pre> <p></p> <p>John\u6700\u540e\u5c55\u793a\u4e86\u5982\u4f55\u4e00\u6b65\u6b65\u5f97\u5230\u6700\u540e\u7684\u7b54\u6848/\u4ee3\u7801</p> <p></p> <p>John\u5c55\u793a\u4e86\u53e6\u4e00\u79cd\u4f7f\u7528 <code>nonlocal</code> \u8bed\u53e5\u6765\u5b9e\u73b0\u7684\u9012\u5f52\u7684\u65b9\u6cd5</p>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part3/#2_14","title":"2","text":"<p>John\u5c55\u793a\u4e86\u4e00\u79cd\u7f16\u5199\u7a0b\u5e8f\u89e3\u51b3\u95ee\u9898\u7684\u6b65\u9aa4\uff0c\u4ed6\u8ba4\u4e3a\u8fd9\u867d\u7136\u4e0d\u662f\u4e00\u4e2a\u5b8c\u7f8e\u7684\u65b9\u6cd5\uff0c\u4f46\u662f\u662f\u4e00\u4e2a\u6bd4\u8f83\u6709\u7528\u548c\u8003\u8651\u5468\u5230\u7684\u65b9\u6cd5\uff0c\u53ef\u4ee5\u5728\u7b2c\u4e00\u773c\u4e0d\u77e5\u9053\u95ee\u9898\u5982\u4f55\u89e3\u51b3\u65f6\u60f3\u60f3\u8fd9\u6837\u7684\u65b9\u6cd5</p> <p>\u4ece\u95ee\u9898\u5206\u6790\u5230\u6570\u636e\u5b9a\u4e49</p> <p>\u786e\u5b9a\u5fc5\u987b\u8868\u793a\u7684\u4fe1\u606f\u4ee5\u53ca\u5728\u9009\u62e9\u7684\u7f16\u7a0b\u8bed\u8a00\u4e2d\u5982\u4f55\u8868\u793a\u8fd9\u4e9b\u4fe1\u606f\u3002\u5236\u5b9a\u6570\u636e\u5b9a\u4e49\u5e76\u7528\u4f8b\u5b50\u52a0\u4ee5\u8bf4\u660e\u3002</p> <p>\u7b7e\u540d\u3001\u76ee\u7684\u8bed\u53e5\u3001\u5934\u90e8</p> <p>\u8bf4\u660e\u6240\u9700\u51fd\u6570\u6d88\u8017\u548c\u4ea7\u751f\u7684\u6570\u636e\u7c7b\u578b\u3002\u5bf9\u95ee\u9898\u201c\u51fd\u6570\u8ba1\u7b97\u4ec0\u4e48\u201d\u63d0\u51fa\u7b80\u660e\u7684\u56de\u7b54\u3002\u5b9a\u4e49\u4e00\u4e2a\u7b26\u5408\u7b7e\u540d\u7684\u5b58\u6839\u3002</p> <p>\u529f\u80fd\u793a\u4f8b</p> <p>\u901a\u8fc7\u4f8b\u5b50\u6f14\u793a\u51fd\u6570\u7684\u76ee\u7684\u3002</p> <p>\u51fd\u6570\u6a21\u677f</p> <p>\u5c06\u6570\u636e\u5b9a\u4e49\u8f6c\u5316\u4e3a\u51fd\u6570\u7684\u5927\u7eb2\u3002</p> <p>\u6d4b\u8bd5</p> <p>\u5c06\u4f8b\u5b50\u8868\u8fbe\u4e3a\u6d4b\u8bd5\uff0c\u5e76\u786e\u4fdd\u51fd\u6570\u901a\u8fc7\u6240\u6709\u6d4b\u8bd5\u3002\u8fd9\u6837\u505a\u6709\u52a9\u4e8e\u53d1\u73b0\u9519\u8bef\u3002\u6d4b\u8bd5\u4e5f\u53ef\u4ee5\u4f5c\u4e3a\u4f8b\u5b50\u7684\u8865\u5145\uff0c\u5e2e\u52a9\u4ed6\u4eba\u5728\u9700\u8981\u65f6\u9605\u8bfb\u548c\u7406\u89e3\u5b9a\u4e49-\u800c\u5bf9\u4e8e\u4efb\u4f55\u4e25\u8083\u7684\u7a0b\u5e8f\uff0c\u8fd9\u662f\u5fc5\u8981\u7684\u3002 </p>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part3/#3_9","title":"3","text":"<p>\u5c1d\u8bd5\u5b9e\u73b0\u8fd9\u4e00\u9898</p> <pre><code>def smalls(t):\n    \"\"\"Return the non-leaf nodes in t that are smaller than all their descendants.\n\n    &gt;&gt;&gt; a = Tree(1, [Tree(2, [Tree(4), Tree(5)]), Tree(3, [Tree(0, [Tree(6)])])])\n    &gt;&gt;&gt; sorted([t.label for t in smalls(a)])\n    [0, 2]\n    \"\"\"\n    result = []\n    def process(t):\n        if t.is_leaf():\n            return __________________________________________\n        else:\n            smallest = ______________________________________\n            if ______________________________________________:\n                _____________________________________________\n            return min(smallest, t.label)\n    process(t)\n    return result\n</code></pre> <p>\u6211\u7684\u5b9e\u73b0</p> <pre><code>def smalls(t):\n    result = []\n    def process(t):\n        if t.is_leaf():\n            return t.label\n        else:\n            smallest = min([process(b) for b in t.branches])\n            if t.label &lt; smallest:\n                result.append(t)\n            return min(smallest, t.label)\n    process(t)\n    return result\n</code></pre> <p></p>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part3/#lecture-37-qa","title":"Lecture 37 Q&amp;A","text":""},{"location":"Notes%20of%20Courses/CS61A/CS61A_part3/#1_15","title":"1","text":"<p>\u8bfe\u4e0a\u63d0\u5230\u768418\u5e74\u6625\u5b63\u671f\u672b\u8003\u8bd5\u7684\u7b2c5\u9898</p> <p>Quote</p> <p>(12 points) Function As Expected</p> <p>Definition. For \\(n &gt; 1\\) , an order n function takes one argument and returns an onder \\(n - 1\\) function.</p> <p>An order 1 function is any function that takes one argument.</p> <p>(a) (6 pt) Implement <code>scurry</code> , which takes a function <code>f</code> and a positive integers <code>n</code> . <code>f</code> must be a function that takes a list as its argument. <code>scurry</code> returns an order n function that, when called successively n times on a sequence of values \\(x_1, x_2, ... x_n\\) , returns the result of calling <code>f</code> on a list containing \\(x_1, x_2, ... x_n\\) .</p> <pre><code>def scurry(f, n):\n    \"\"\"Return a function that calls f on a list of arguments after being called n times.\n\n    &gt;&gt;&gt; scurry(sum, 4)(1)(1)(3)(2)  # equivalent to sum([1, 1, 3, 2])\n    7\n    &gt;&gt;&gt; scurry(len, 3)(7)([8])(-9)  # equivalent to len([7, [8], -9])\n    3\n    \"\"\"\n    def h(k, args_so_far):\n        if k == 0:\n            return ________________________________________________________________________\n        return ____________________________________________________________________________\n    return ________________________________________________________________________________\n</code></pre> <p>(b) (6 pt) Implement <code>factorize</code> , which takes two integers <code>n</code> and <code>k</code> , both larger than 1. It returns the number of ways that <code>n</code> can be expressed as a product of non-decreasing integers greater than or equal to <code>k</code> .</p> <pre><code>def factorize(n, k=2):\n    \"\"\"Return the number of ways to factorize positive integer n.\n\n    &gt;&gt;&gt; factorize(7)  # 7\n    1\n    &gt;&gt;&gt; factorize(12) # 2*2*3, 2*6, 3*4, 12\n    4\n    &gt;&gt;&gt; factorize(36) # 2*2*3*3, 2*2*9, 2*3*6, 2*18, 3*3*4, 3*12, 4*9, 6*6, 36\n    9\n    \"\"\"\n    if _____________________________________________________________________________________:\n        return 1\n    elif ___________________________________________________________________________________:\n        return 0\n    elif ___________________________________________________________________________________:\n        return factorize(_________________________________, ________________________________)\n    return _________________________________________________________________________________\n</code></pre> <p>\u81ea\u5df1\u5c1d\u8bd5\u505a\u4e86\u4e00\u4e0b\uff0c\u611f\u89c9\u8fd8\u86ee\u6709\u610f\u601d\uff0c</p> <p>\u611f\u89c9\u662f\u56e0\u4e3a\u5df2\u7ecf\u505a\u8fc7\u5f88\u591a\u7c7b\u4f3c\u7684\u9898\u76ee\uff0c\u6240\u4ee5\u505ab\u9898\u65f6\uff0c\u5f88\u5feb\u5c31\u60f3\u5230\u4e86 <code>if</code> \u7684\u51e0\u79cd\u60c5\u51b5\uff0c\u5206\u522b\u662f \u521a\u597d\u76f8\u7b49\u6574\u9664\u5f971\uff0c\u65e0\u6cd5\u9664\uff0c\u80fd\u6574\u9664\uff0c\u4e0d\u80fd\u6574\u9664</p> (a)(b) <pre><code>def scurry(f, n):\n    def h(k, args_so_far):\n        if k == 0:\n            return f(args_so_far)\n        return lambda x: h(k - 1, args_so_far + [x])\n    return h(n, [])\n</code></pre> <pre><code>def factorize(n, k=2):\n    if k == n:\n        return 1\n    elif k &gt; n:\n        return 0\n    elif n % k != 0:\n        return factorize(n, k + 1)\n    return factorize(n // k, k) + factorize(n, k + 1)\n</code></pre> <p>John\u89e3\u7b54\u8fd9\u9898\u65f6\u8bf4\u5230b\u9898\u7b2c\u4e00\u79cd\u60c5\u51b5\u4e2d <code>n == k</code> \u548c <code>n == 1</code> \u4e24\u4e2a\u5224\u65ad\u6761\u4ef6\u90fd\u53ef\u4ee5\uff0c\u7136\u540e\u8bd5\u4e86\u4e00\u4e0b\u53d1\u73b0\u771f\u7684\u80fd\u901a\u8fc7</p>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part3/#2_15","title":"2","text":"<p>John\u63d0\u5230scheme\u4e2d\u4e5f\u6709\u7c7b\u4f3cpython\u4e2d <code>*args</code> \u7684\u4f20\u5165\u4e0d\u5b9a\u4e2a\u6570\u53c2\u6570\u7684\u65b9\u6cd5\uff0c\u5728\u5b9a\u4e49\u51fd\u6570\u65f6\uff0c\u53ef\u4ee5\u4f7f\u7528 <code>. args</code> \u7684\u5f62\u5f0f\u6765\u83b7\u53d6\u6240\u6709\u7684\u53c2\u6570(\u53ef\u89c1\u4e8e\u4e0b\u56fe)\uff0c\u7136\u540e <code>args</code> \u5c31\u4f1a\u662f\u4e00\u4e2a\u94fe\u8868</p> <p></p>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part3/#lecture-38-conclusion","title":"Lecture 38 Conclusion","text":""},{"location":"Notes%20of%20Courses/CS61A/CS61A_part3/#1_16","title":"1","text":"<p>John\u548cHany\u63d0\u5230\u7684\u4e00\u4e9b\u5173\u4e8e\u6280\u672f\u7684\u601d\u8003(\u7684\u5176\u4e2d\u4e00\u90e8\u5206)</p> <p>Quote</p> <p>John:</p> <p>...Yeah, and so the one thing I'd love to leave you all with is the idea that you don't just decide, \"I'm gonna become a software engineer for life\" or, \"Oh, I'm gonna become a regulator for life.\" That's just not how it is. I mean, so many people take meandering paths in their lives where they do some of both. They understand the technology well enough that they realize, \"Oh, their impact should be figuring out how to collaborate with government to regulate it in a way that has the right sorts of trade-offs.\"</p> <p> </p> <p>Hany:</p> <p>Yeah, let me add one more thing too, John, and this is something you need to practice from a very young age, like right now, which is how do you talk to people who are not technical about technical things? There's always this language barrier between us computer scientists and our regulators and our lawyers. It's really good to get in the habit of thinking about how do you take these, in some cases, very complex things and explain them in honest and clear ways so that people can understand them, process them, and then reason about them properly.</p> <p>John:</p> <p>...\u662f\u7684\uff0c\u6240\u4ee5\u6211\u60f3\u7559\u7ed9\u5927\u5bb6\u7684\u4e00\u4e2a\u60f3\u6cd5\u662f\uff0c\u4f60\u4e0d\u53ea\u662f\u51b3\u5b9a\u201c\u6211\u8981\u6210\u4e3a\u4e00\u540d\u7ec8\u8eab\u8f6f\u4ef6\u5de5\u7a0b\u5e08\u201d\u6216\u201c\u54e6\uff0c\u6211\u8981\u7ec8\u8eab\u6210\u4e3a\u76d1\u7ba1\u8005\u201d\u3002\u60c5\u51b5\u5e76\u975e\u5982\u6b64\u3002\u6211\u610f\u5473\u7740\u5f88\u591a\u4eba\u5728\u4ed6\u4eec\u7684\u751f\u6d3b\u4e2d\u8d70\u8fc7\u66f2\u6298\u7684\u9053\u8def\uff0c\u65e2\u6d89\u8db3\u6280\u672f\uff0c\u53c8\u7406\u89e3\u5f97\u8db3\u591f\u6df1\u523b\uff0c\u4ee5\u81f3\u4e8e\u610f\u8bc6\u5230\u4ed6\u4eec\u7684\u5f71\u54cd\u5e94\u8be5\u662f\u5f04\u6e05\u695a\u5982\u4f55\u4e0e\u653f\u5e9c\u5408\u4f5c\uff0c\u4ee5\u4e00\u79cd\u5177\u6709\u6b63\u786e\u6743\u8861\u7684\u65b9\u5f0f\u8fdb\u884c\u76d1\u7ba1\u3002</p> <p> </p> <p>Hany:</p> <p>\u662f\u7684\uff0c\u7ea6\u7ff0\uff0c\u518d\u8865\u5145\u4e00\u70b9\uff0c\u8fd9\u662f\u4f60\u9700\u8981\u4ece\u5f88\u5c0f\u7684\u65f6\u5019\u5c31\u5f00\u59cb\u7ec3\u4e60\u7684\u4e8b\u60c5\uff0c\u5c31\u50cf\u73b0\u5728\u8fd9\u6837\uff0c\u90a3\u5c31\u662f\u5982\u4f55\u4e0e\u4e0d\u61c2\u6280\u672f\u7684\u4eba\u8c08\u8bba\u6280\u672f\u95ee\u9898\uff1f\u6211\u4eec\u8ba1\u7b97\u673a\u79d1\u5b66\u5bb6\u3001\u76d1\u7ba1\u8005\u548c\u5f8b\u5e08\u4e4b\u95f4\u603b\u662f\u5b58\u5728\u8fd9\u79cd\u8bed\u8a00\u969c\u788d\u3002\u517b\u6210\u4e00\u4e2a\u4e60\u60ef\uff0c\u601d\u8003\u5982\u4f55\u4ee5\u771f\u5b9e\u800c\u6e05\u6670\u7684\u65b9\u5f0f\u89e3\u91ca\u8fd9\u4e9b\uff0c\u6709\u65f6\u662f\u975e\u5e38\u590d\u6742\u7684\u4e8b\u60c5\uff0c\u4ee5\u4fbf\u4eba\u4eec\u80fd\u591f\u7406\u89e3\u3001\u5904\u7406\uff0c\u5e76\u6b63\u786e\u5730\u8fdb\u884c\u63a8\u7406\u3002</p>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part3/#2_16","title":"2","text":"<p>John\u548cHany\u8c08\u5230\u4eba\u751f/\u751f\u6d3b(life)</p> <p>Quote</p> <p>John:</p> <p>Here's my spiel about life. You know, I'm not going to tell you how to live your life, but I wanted to remind you of a few things.</p> <p>One is about freedom, which is that when you learn how to write software, then your skills are going to be in demand. There's no question about that. Lots of people are going to work with you. In fact, there are so many different problems to solve that we can't solve them all with the people that we've trained to do this kind of thing. So, that means that what you decide to work on actually influences what gets built in the world.</p> <p>What you decide to work on will also influence your own experience. I think I've known a lot of people now in the tech industry, and the ones who make the most money are not the ones that seem most fulfilled or most happy to me. The ones that seem like they're very comfortable with their life usually have found something that they're good at, something that they enjoy, and it also happens to be something that matters to the world in some way. You know, if you find that combination, then great. So, when I say freedom, I mean you can choose what you work on. You don't have to just take the internship from the company that's got the flashiest website or the best reputation. There are lots of cool things to do out there, and you should be selective and search for something that is a good fit for you.</p> <p> </p> <p>Hany:</p> <p>Yeah, I think that's exactly right, John. I think one of the greatest gifts in life is being able to wake up every day and do the things that you find fulfilling, that you're good at, that you're excited about. And, by the way, to boot, somebody's willing to pay you to do them. It's an incredible gift.</p> <p>Thinking about what are you prioritizing? For some people, the priority is they want to make a lot of money. That's fine, that's a different choice. But think about what's going to be important to you. And here's the rub, by the way: What's important to you when you're 20, and when you're 30, 40, 50, and 60, it's going to be different. And I will tell you, I have a lot of friends who left grad school, made a lot of money on Wall Street, but when they turned 40 and started looking down the line at what's their legacy, it wasn't quite as good.</p> <p>Whereas I can look at my legacy as an academic and interact with smart young people, trying to inspire and motivate them. You can feel really good about that. So try to think not just about what's today but also, you know, 10, 20, 30 years from now.</p> <p> </p> <p>John:</p> <p>Yeah, exactly. And you might change course. You know, I didn't discover that I liked teaching until I tried it, which was when I went to grad school. I didn't do any of that in undergrad. So, if you haven't figured out the perfect thing for you yet, don't worry. But, make sure that you think about the kind of long-term implications of whatever you do commit to.</p> <p>John:</p> <p>\u5173\u4e8e\u4eba\u751f\uff0c\u6211\u60f3\u8bf4\u7684\u4e00\u4e9b\u8bdd\u3002\u6211\u4e0d\u4f1a\u544a\u8bc9\u4f60\u5982\u4f55\u8fc7\u4f60\u7684\u4eba\u751f\uff0c\u4f46\u6211\u60f3\u63d0\u9192\u4f60\u4e00\u4e9b\u4e8b\u60c5\u3002</p> <p>\u9996\u5148\u662f\u5173\u4e8e\u81ea\u7531\u7684\u95ee\u9898\uff0c\u5b66\u4f1a\u5199\u8f6f\u4ef6\u540e\uff0c\u4f60\u7684\u6280\u80fd\u5c06\u4f1a\u53d7\u5230\u9700\u6c42\uff0c\u6beb\u65e0\u7591\u95ee\u3002\u5f88\u591a\u4eba\u4f1a\u548c\u4f60\u4e00\u8d77\u5de5\u4f5c\u3002\u4e8b\u5b9e\u4e0a\uff0c\u6709\u5f88\u591a\u4e0d\u540c\u7684\u95ee\u9898\u9700\u8981\u89e3\u51b3\uff0c\u800c\u6211\u4eec\u65e0\u6cd5\u4ec5\u51ed\u6211\u4eec\u57f9\u8bad\u51fa\u6765\u7684\u4eba\u6765\u89e3\u51b3\u6240\u6709\u95ee\u9898\u3002\u6240\u4ee5\uff0c\u8fd9\u610f\u5473\u7740\u4f60\u51b3\u5b9a\u5de5\u4f5c\u7684\u5b9e\u9645\u4e0a\u4f1a\u5f71\u54cd\u5728\u4e16\u754c\u4e0a\u6784\u5efa\u4ec0\u4e48\u3002</p> <p>\u4f60\u51b3\u5b9a\u4ece\u4e8b\u4ec0\u4e48\u5de5\u4f5c\u4e5f\u5c06\u5f71\u54cd\u4f60\u81ea\u5df1\u7684\u7ecf\u9a8c\u3002\u6211\u8ba4\u8bc6\u4e86\u5f88\u591a\u79d1\u6280\u884c\u4e1a\u7684\u4eba\uff0c\u6700\u8d5a\u94b1\u7684\u4eba\u5e76\u4e0d\u662f\u6211\u8ba4\u4e3a\u6700\u5145\u5b9e\u6216\u6700\u5e78\u798f\u7684\u4eba\u3002\u90a3\u4e9b\u770b\u8d77\u6765\u975e\u5e38\u8212\u9002\u7684\u4eba\u901a\u5e38\u627e\u5230\u4e86\u81ea\u5df1\u64c5\u957f\u7684\u4e8b\u60c5\uff0c\u559c\u6b22\u505a\u7684\u4e8b\u60c5\uff0c\u800c\u4e14\u8fd9\u4e8b\u60c5\u6070\u597d\u5bf9\u4e16\u754c\u6709\u610f\u4e49\u3002\u4f60\u77e5\u9053\uff0c\u5982\u679c\u4f60\u627e\u5230\u4e86\u8fd9\u79cd\u7ec4\u5408\uff0c\u90a3\u5c31\u592a\u597d\u4e86\u3002\u6240\u4ee5\uff0c\u5f53\u6211\u8bf4\u81ea\u7531\u65f6\uff0c\u6211\u662f\u6307\u4f60\u53ef\u4ee5\u9009\u62e9\u4f60\u8981\u4ece\u4e8b\u7684\u5de5\u4f5c\u3002\u4f60\u4e0d\u5fc5\u53ea\u662f\u9009\u62e9\u90a3\u5bb6\u7f51\u7ad9\u6700\u70ab\u6216\u58f0\u8a89\u6700\u597d\u7684\u516c\u53f8\u7684\u5b9e\u4e60\u673a\u4f1a\u3002\u6709\u5f88\u591a\u6709\u8da3\u7684\u4e8b\u60c5\u7b49\u7740\u4f60\u53bb\u505a\uff0c\u4f60\u5e94\u8be5\u6709\u9009\u62e9\u5730\u5bfb\u627e\u9002\u5408\u4f60\u7684\u4e1c\u897f\u3002</p> <p> </p> <p>Hany:</p> <p>\u662f\u7684\uff0c\u6211\u8ba4\u4e3a\u7ea6\u7ff0\u8bf4\u5f97\u5bf9\u3002\u6211\u8ba4\u4e3a\u4eba\u751f\u4e2d\u6700\u4f1f\u5927\u7684\u793c\u7269\u4e4b\u4e00\u662f\u6bcf\u5929\u9192\u6765\uff0c\u505a\u4f60\u89c9\u5f97\u5145\u5b9e\u3001\u64c5\u957f\u5e76\u4e14\u611f\u5230\u5174\u594b\u7684\u4e8b\u60c5\u3002\u800c\u4e14\uff0c\u987a\u4fbf\u8bf4\u4e00\u4e0b\uff0c\u8fd8\u6709\u4eba\u613f\u610f\u4e3a\u4f60\u4ed8\u94b1\u6765\u505a\u8fd9\u4e9b\u4e8b\u60c5\u3002\u8fd9\u662f\u4e00\u4efd\u96be\u4ee5\u7f6e\u4fe1\u7684\u793c\u7269\u3002</p> <p>\u8003\u8651\u4e00\u4e0b\u4f60\u6b63\u5728\u4f18\u5148\u8003\u8651\u4ec0\u4e48\uff1f\u5bf9\u4e8e\u4e00\u4e9b\u4eba\u6765\u8bf4\uff0c\u4f18\u5148\u8003\u8651\u7684\u662f\u4ed6\u4eec\u60f3\u8d5a\u5f88\u591a\u94b1\u3002\u90a3\u6ca1\u95ee\u9898\uff0c\u8fd9\u662f\u4e00\u4e2a\u4e0d\u540c\u7684\u9009\u62e9\u3002\u4f46\u8981\u8003\u8651\u5bf9\u4f60\u6765\u8bf4\u4ec0\u4e48\u624d\u91cd\u8981\u3002\u800c\u4e14\u987a\u4fbf\u8bf4\u4e00\u4e0b\uff0c\u73b0\u5728\u662f\u5173\u952e\uff1a\u5f53\u4f6020\u5c81\u300130\u5c81\u300140\u5c81\u300150\u5c81\u548c60\u5c81\u65f6\uff0c\u5bf9\u4f60\u91cd\u8981\u7684\u4e1c\u897f\u4f1a\u6709\u6240\u4e0d\u540c\u3002\u6211\u544a\u8bc9\u4f60\uff0c\u6211\u6709\u5f88\u591a\u670b\u53cb\u79bb\u5f00\u7814\u7a76\u751f\u5b66\u6821\uff0c\u5728\u534e\u5c14\u8857\u8d5a\u4e86\u5f88\u591a\u94b1\uff0c\u4f46\u5f53\u4ed6\u4eec40\u5c81\u65f6\u5f00\u59cb\u601d\u8003\u81ea\u5df1\u7684\u9057\u4ea7\u65f6\uff0c\u60c5\u51b5\u5c31\u4e0d\u90a3\u4e48\u7406\u60f3\u4e86\u3002</p> <p>\u800c\u6211\u4f5c\u4e3a\u4e00\u540d\u5b66\u8005\uff0c\u53ef\u4ee5\u770b\u5f85\u6211\u7684\u9057\u4ea7\uff0c\u4e0e\u806a\u660e\u7684\u5e74\u8f7b\u4eba\u4e92\u52a8\uff0c\u8bd5\u56fe\u6fc0\u53d1\u548c\u6fc0\u52b1\u4ed6\u4eec\u3002\u4f60\u53ef\u4ee5\u56e0\u6b64\u611f\u5230\u975e\u5e38\u81ea\u8c6a\u3002\u56e0\u6b64\uff0c\u8bd5\u7740\u4e0d\u53ea\u8003\u8651\u4eca\u5929\uff0c\u8fd8\u8981\u8003\u8651\uff0c\u4f60\u77e5\u9053\uff0c\u672a\u676510\u300120\u300130\u5e74\u3002</p> <p> </p> <p>John:</p> <p>\u662f\u7684\uff0c\u786e\u5b9e\u3002\u800c\u4e14\u4f60\u53ef\u80fd\u4f1a\u6539\u53d8\u65b9\u5411\u3002\u4f60\u77e5\u9053\uff0c\u6211\u76f4\u5230\u5c1d\u8bd5\u624d\u53d1\u73b0\u6211\u559c\u6b22\u6559\u5b66\uff0c\u90a3\u662f\u6211\u4e0a\u7814\u7a76\u751f\u5b66\u6821\u65f6\u3002\u5728\u672c\u79d1\u65f6\u6211\u6ca1\u6709\u5c1d\u8bd5\u8fc7\u8fd9\u4e9b\u3002\u6240\u4ee5\uff0c\u5982\u679c\u4f60\u8fd8\u6ca1\u627e\u5230\u5b8c\u5168\u9002\u5408\u4f60\u7684\u4e8b\u60c5\uff0c\u4e0d\u7528\u62c5\u5fc3\u3002\u4f46\u662f\uff0c\u8bf7\u786e\u4fdd\u4f60\u8003\u8651\u4f60\u6240\u627f\u8bfa\u7684\u4e8b\u60c5\u7684\u957f\u8fdc\u5f71\u54cd\u3002</p>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part3/#3_10","title":"3","text":"<p>John\u548cHany\u63d0\u5230\u4e0d\u53ea\u8981\u4e13\u7cbe\u4e8e\u8ba1\u7b97\u673a\u4e13\u4e1a\u7684\u6280\u672f\uff0c\u5b66\u4e60\u5176\u4ed6\u9886\u57df\u7684\u77e5\u8bc6\u4f1a\u66f4\u597d</p> <p>Quote</p> <p>Hany:</p> <p>Ah, what would be a good career path if someone were to want to go into law and policy regarding tech? Since, as John mentioned, they need someone who understands the law and tech side of things.</p> <p>Yeah, that's a good question. A lot of the big companies these days are hiring people to work on policy. For example, there are people who are responsible for global policy, domestic policy. They often are lawyers, which is good in some ways, but I would like to see some more technologists there.</p> <p>For me, I like people who, maybe instead of a CS major, they're a CS minor or, in addition to a CS major, they've also studied politics or economics or something in the social sciences where they can think about the implications of policies. I find historians really fascinating in this regard, political scientists who think about laws, for example, understanding that. But typically, it's that kind of dual career that is very useful.</p> <p> </p> <p>John:</p> <p>Yeah, a lot of people I know who are really interesting and really effective, they know something really well, and then they know something else quite well. And by quite well, I mean not just like they've read a lot of New York Times articles about it, but like, you know, they've gone pretty deep.</p> <p>So yeah, whether it's, you know, the software really well and the policy issues pretty well, or vice versa, you can be extraordinarily effective in either way, much more so than being like, \"Yeah, just even more deep into policy but you don't understand the technology.\"</p> <p>Hany:</p> <p>\u554a\uff0c\u5982\u679c\u6709\u4eba\u60f3\u8981\u4ece\u4e8b\u4e0e\u79d1\u6280\u76f8\u5173\u7684\u6cd5\u5f8b\u548c\u653f\u7b56\u5de5\u4f5c\uff0c\u4ec0\u4e48\u6837\u7684\u804c\u4e1a\u9053\u8def\u4f1a\u662f\u4e00\u4e2a\u4e0d\u9519\u7684\u9009\u62e9\u5462\uff1f\u6b63\u5982John\u6240\u63d0\u5230\u7684\uff0c\u4ed6\u4eec\u9700\u8981\u4e86\u89e3\u6cd5\u5f8b\u548c\u6280\u672f\u65b9\u9762\u7684\u4eba\u624d\u3002</p> <p>\u662f\u7684\uff0c\u8fd9\u662f\u4e00\u4e2a\u5f88\u597d\u7684\u95ee\u9898\u3002\u5982\u4eca\uff0c\u5f88\u591a\u5927\u516c\u53f8\u90fd\u5728\u62db\u8058\u8d1f\u8d23\u653f\u7b56\u65b9\u9762\u5de5\u4f5c\u7684\u4eba\u5458\u3002\u4f8b\u5982\uff0c\u6709\u4eba\u8d1f\u8d23\u5168\u7403\u653f\u7b56\u3001\u56fd\u5185\u653f\u7b56\u3002\u4ed6\u4eec\u901a\u5e38\u662f\u5f8b\u5e08\uff0c\u4ece\u67d0\u4e9b\u65b9\u9762\u6765\u8bf4\u662f\u597d\u7684\uff0c\u4f46\u6211\u5e0c\u671b\u80fd\u770b\u5230\u66f4\u591a\u7684\u6280\u672f\u4eba\u624d\u52a0\u5165\u3002</p> <p>\u5bf9\u6211\u6765\u8bf4\uff0c\u6211\u559c\u6b22\u90a3\u4e9b\u53ef\u80fd\u4e0d\u662f\u8ba1\u7b97\u673a\u79d1\u5b66\u4e13\u4e1a\u4e3b\u4fee\u7684\u4eba\uff0c\u800c\u662f\u8ba1\u7b97\u673a\u79d1\u5b66\u4e13\u4e1a\u8f85\u4fee\u6216\u8005\u540c\u65f6\u5b66\u4e60\u653f\u6cbb\u3001\u7ecf\u6d4e\u6216\u793e\u4f1a\u79d1\u5b66\u7b49\u65b9\u9762\u7684\u4eba\uff0c\u4ed6\u4eec\u80fd\u591f\u601d\u8003\u653f\u7b56\u7684\u5f71\u54cd\u3002\u5728\u8fd9\u65b9\u9762\uff0c\u6211\u89c9\u5f97\u5386\u53f2\u5b66\u5bb6\u5728\u8fd9\u65b9\u9762\u975e\u5e38\u8ff7\u4eba\uff0c\u653f\u6cbb\u79d1\u5b66\u5bb6\u4e5f\u5728\u601d\u8003\u6cd5\u5f8b\u7b49\u65b9\u9762\u7684\u95ee\u9898\uff0c\u7406\u89e3\u8fd9\u4e9b\u662f\u5f88\u6709\u5e2e\u52a9\u7684\u3002\u4f46\u901a\u5e38\u6765\u8bf4\uff0c\u8fd9\u79cd\u53cc\u91cd\u804c\u4e1a\u80cc\u666f\u662f\u975e\u5e38\u6709\u7528\u7684\u3002</p> <p> </p> <p>John:</p> <p>\u662f\u7684\uff0c\u6211\u8ba4\u8bc6\u7684\u8bb8\u591a\u975e\u5e38\u6709\u8da3\u4e14\u975e\u5e38\u6709\u6548\u7684\u4eba\uff0c\u4ed6\u4eec\u64c5\u957f\u67d0\u4e2a\u9886\u57df\uff0c\u7136\u540e\u53c8\u5bf9\u53e6\u4e00\u4e2a\u9886\u57df\u4e86\u89e3\u5f97\u76f8\u5f53\u900f\u5f7b\u3002\u5f53\u6211\u8bf4\u76f8\u5f53\u900f\u5f7b\u65f6\uff0c\u6211\u6307\u7684\u4e0d\u4ec5\u4ec5\u662f\u8bfb\u4e86\u5f88\u591a\u300a\u7ebd\u7ea6\u65f6\u62a5\u300b\u7684\u6587\u7ae0\uff0c\u800c\u662f\u6df1\u5165\u4e86\u89e3\u4e86\u8bb8\u591a\u3002</p> <p>\u6240\u4ee5\uff0c\u662f\u7684\uff0c\u65e0\u8bba\u662f\u5bf9\u8f6f\u4ef6\u4e86\u89e3\u5f97\u5f88\u900f\u5f7b\uff0c\u5bf9\u653f\u7b56\u95ee\u9898\u4e5f\u4e86\u89e3\u5f97\u76f8\u5f53\u900f\u5f7b\uff0c\u8fd8\u662f\u76f8\u53cd\uff0c\u4f60\u90fd\u53ef\u4ee5\u5728\u4efb\u4e00\u65b9\u9762\u53d6\u5f97\u975e\u51e1\u7684\u6210\u5c31\uff0c\u8fdc\u6bd4\u53ea\u662f\u6df1\u5165\u4e86\u89e3\u653f\u7b56\u800c\u5bf9\u6280\u672f\u4e00\u65e0\u6240\u77e5\u66f4\u4e3a\u6709\u6548\u3002</p>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part3/#4_4","title":"4","text":"<p>\u6709\u4eba\u63d0\u95ee\u5c45\u5bb6\u4e0a\u5b66\u611f\u5230\u4e0e\u5b66\u6821\u8131\u79bb\uff0cHany\u8fdb\u884c\u56de\u7b54\uff0c\u5e76\u63d0\u5230\u5904\u4e8e\u4f4e\u8c37\u4e2d\u7684\u5efa\u8bae</p> <p>Quote</p> <p>Hany:</p> <p>What, um, yeah, god, this is a tough question. I don't know that I have an answer, but I want to answer the question anyway. Um, what advice would you have for someone living at home for this year and feeling kind of detached from the university and academia?</p> <p>Oh man, I gotta tell you, that question just breaks my heart because I know a lot of people are going through that. So I don't know if I have a good answer for you, but let me try a few things. Um, this will end. We will come out at the other end of this. And the one thing that I've learned, having been around for a few decades now, is when you're in the middle of a hard time like this, whether it's something like this global pandemic or it's family or it's work or it's a relationship or it's personal or it's health, when you're in the middle of it, it feels really bad. And it is, but you always come out the other end.</p> <p>And in all of these cases, I will look back at it and will say to myself, you know what, I've come back from this, better, stronger, more mature. Um, and there will be positives that come from this. So for me, what I do is I try to think down the line, six months, nine months from now, we're going to be back, and will we be better for this? We will be, hopefully, better human beings, better societies, and we will learn how to work through hardships. It's a shitty answer, by the way, for what to do right now, but it's a more hopeful answer for what's downstream for you.</p> <p>Hany:</p> <p>\u55ef\uff0c\u55ef\uff0c\u5929\u54ea\uff0c\u8fd9\u662f\u4e00\u4e2a\u68d8\u624b\u7684\u95ee\u9898\u3002\u6211\u4e0d\u77e5\u9053\u6211\u662f\u5426\u6709\u4e00\u4e2a\u7b54\u6848\uff0c\u4f46\u6211\u8fd8\u662f\u60f3\u56de\u7b54\u8fd9\u4e2a\u95ee\u9898\u3002\u55ef\uff0c\u5bf9\u4e8e\u90a3\u4e9b\u4eca\u5e74\u7559\u5728\u5bb6\u91cc\u5e76\u611f\u5230\u6709\u70b9\u8131\u79bb\u5927\u5b66\u548c\u5b66\u672f\u754c\u7684\u4eba\uff0c\u4f60\u6709\u4ec0\u4e48\u5efa\u8bae\uff1f</p> <p>\u54e6\uff0c\u5929\u554a\uff0c\u6211\u5f97\u544a\u8bc9\u4f60\uff0c\u8fd9\u4e2a\u95ee\u9898\u771f\u7684\u8ba9\u6211\u5fc3\u788e\uff0c\u56e0\u4e3a\u6211\u77e5\u9053\u5f88\u591a\u4eba\u90fd\u7ecf\u5386\u4e86\u8fd9\u79cd\u60c5\u51b5\u3002\u6240\u4ee5\u6211\u4e0d\u77e5\u9053\u6211\u662f\u5426\u6709\u4e00\u4e2a\u597d\u7684\u7b54\u6848\u7ed9\u4f60\uff0c\u4f46\u8ba9\u6211\u8bd5\u8bd5\u51e0\u4e2a\u65b9\u6cd5\u3002\u55ef\uff0c\u8fd9\u4f1a\u7ed3\u675f\u7684\u3002\u6211\u4eec\u4f1a\u5ea6\u8fc7\u96be\u5173\u7684\u3002\u800c\u6211\u5b66\u5230\u7684\u4e00\u4ef6\u4e8b\u662f\uff0c\u7ecf\u5386\u4e86\u51e0\u5341\u5e74\uff0c\u5f53\u4f60\u5904\u4e8e\u8fd9\u6837\u7684\u8270\u96be\u65f6\u523b\uff0c\u65e0\u8bba\u662f\u50cf\u8fd9\u6837\u7684\u5168\u7403\u5927\u6d41\u884c\uff0c\u8fd8\u662f\u5bb6\u5ead\u3001\u5de5\u4f5c\u3001\u4eba\u9645\u5173\u7cfb\u3001\u4e2a\u4eba\u95ee\u9898\u6216\u5065\u5eb7\u95ee\u9898\uff0c\u5f53\u4f60\u6b63\u5904\u4e8e\u5176\u4e2d\u65f6\uff0c\u611f\u89c9\u771f\u7684\u5f88\u7cdf\u7cd5\u3002\u786e\u5b9e\u5982\u6b64\uff0c\u4f46\u4f60\u603b\u4f1a\u8d70\u51fa\u56f0\u5883\u3002</p> <p>\u5728\u6240\u6709\u8fd9\u4e9b\u60c5\u51b5\u4e0b\uff0c\u6211\u4f1a\u56de\u987e\u4e00\u4e0b\uff0c\u5bf9\u81ea\u5df1\u8bf4\uff0c\u4f60\u77e5\u9053\u5417\uff0c\u6211\u4ece\u4e2d\u8d70\u4e86\u51fa\u6765\uff0c\u53d8\u5f97\u66f4\u597d\u3001\u66f4\u5f3a\u5927\u3001\u66f4\u6210\u719f\u3002\u55ef\uff0c\u4f1a\u6709\u4e00\u4e9b\u79ef\u6781\u7684\u65b9\u9762\u3002\u6240\u4ee5\u5bf9\u6211\u6765\u8bf4\uff0c\u6211\u505a\u7684\u662f\u5c3d\u91cf\u5f80\u524d\u770b\uff0c\u516d\u4e2a\u6708\u3001\u4e5d\u4e2a\u6708\u540e\uff0c\u6211\u4eec\u4f1a\u56de\u6765\u7684\uff0c\u6211\u4eec\u4f1a\u56e0\u6b64\u53d8\u5f97\u66f4\u597d\u5417\uff1f\u6211\u4eec\u4f1a\uff0c\u5e0c\u671b\u6210\u4e3a\u66f4\u597d\u7684\u4eba\u7c7b\uff0c\u66f4\u597d\u7684\u793e\u4f1a\uff0c\u6211\u4eec\u4f1a\u5b66\u4f1a\u5982\u4f55\u514b\u670d\u56f0\u5883\u3002\u8fd9\u5bf9\u4e8e\u73b0\u5728\u8be5\u600e\u4e48\u529e\u6765\u8bf4\u662f\u4e00\u4e2a\u7cdf\u7cd5\u7684\u7b54\u6848\uff0c\u4f46\u5bf9\u4e8e\u4f60\u672a\u6765\u7684\u60c5\u51b5\u800c\u8a00\uff0c\u8fd9\u662f\u4e00\u4e2a\u66f4\u6709\u5e0c\u671b\u7684\u7b54\u6848\u3002</p>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part3/#5_3","title":"5","text":"<p>John\u63d0\u5230\u4e0d\u8981\u4e0e\u4ed6\u4eba\u6bd4\u8f83\uff0c\u800c\u662f\u6ce8\u91cd\u81ea\u6211\u7684\u63d0\u5347</p> <p>Quote</p> <p>John:</p> <p>Yeah, we've got two minutes left. Maybe, um, since I started by talking about the final exam, I'll end with something related, which is a piece of advice that I got when I was getting married. So, I was a Ph.D. student at the time, and my mom pulled me aside on my wedding day and said, \"John, I want to give you some advice.\" And I was like, \"Oh, great. She's going to tell me to listen to my wife or whatever.\" But she didn't. She said only two words that have stuck with me for a long time. She said, \"Don't compare.\" And then she was like, \"Okay, you can go back to doing whatever you're doing.\"</p> <p>At the time, this was very hard for me to process because I was in a university, which is all about comparing people based on, like, what their exam score was. And, you know, it turns out that out there in the world, there are no exams that everybody takes that are standardized anymore. All that matters is what you go and get done on your own particular path. So, comparing yourselves to other people becomes meaningless rapidly, as what really matters is what you can do yourself, like what you're capable of and what you bother to do and how you choose to spend your time.</p> <p>But it took years of this two-word phrase, \"Don't compare,\" to marinate inside of me, and for me to realize that my self-worth really has nothing to do with what other people can do and whether I can do it better than them or worse than them, and it has everything to do with what I've done and what I'm gonna do next, and how I spend my time to better myself. So, I should just focus on improving myself and forget about what everybody else is doing.</p> <p>So, um, you're gonna go take a final, and a bunch of other people are gonna take this final exam too. But who cares? This course is not graded on a curve; it's just you doing your best work. So, I do hope you prepare, I do hope you get some good sleep and all of that, but at the same time, I don't think you need to worry about the histogram and how your friends are doing. Just help each other out and focus on yourself in the end.</p> <p> </p> <p>Hany:</p> <p>That's incredibly beautiful, John. I want to say two things. First of all, I'm gonna go talk to my mother because I didn't get nearly such good advice growing up, so I'm gonna have a word with her. I want to re-emphasize this because this is something that took me a long time in life to understand - not to compare. There's a trap too that we fall into, which is that we compare, for example, how big our house is to that one friend, how much money we make to another friend, the kind of clothes we have to this friend, and how smart we are to that friend. We pick and choose these things, and that's, first of all, even doing that individually is meaningless. But also, it's a trap, and this is the problem with social media - you see these curated worlds of other people, and it's a trap. One of the great things about getting older (and you will get there, I promise you) is that you will realize it's a trap and it means absolutely nothing. It really is a very internal thing. What are you doing? Who do you want to be? How do you want to go through this world? How do you want to treat other people? At the end of the day, that, and almost nothing else, is going to matter. And you've got to just trust that it's going to be there.</p> <p>John:</p> <p>\u662f\u7684\uff0c\u6211\u4eec\u8fd8\u6709\u4e24\u5206\u949f\u5de6\u53f3\uff0c\u4e5f\u8bb8\uff0c\u7531\u4e8e\u6211\u4e00\u5f00\u59cb\u8c08\u5230\u671f\u672b\u8003\u8bd5\uff0c\u6211\u4f1a\u4ee5\u4e0e\u4e4b\u76f8\u5173\u7684\u4e8b\u60c5\u7ed3\u675f\u3002\u8fd9\u4e0e\u6211\u7ed3\u5a5a\u65f6\u83b7\u5f97\u7684\u4e00\u4e9b\u5efa\u8bae\u6709\u5173\u3002\u90a3\u65f6\uff0c\u6211\u8fd8\u662f\u4e00\u540d\u535a\u58eb\u751f\uff0c\u6211\u5988\u5988\u5728\u6211\u5a5a\u793c\u90a3\u5929\u62c9\u7740\u6211\u4e00\u8fb9\u8bf4\uff1a\u201cJohn\uff0c\u6211\u60f3\u7ed9\u4f60\u4e00\u4e9b\u5efa\u8bae\u3002\u201d\u6211\u5f53\u65f6\u89c9\u5f97\uff1a\u201c\u54e6\uff0c\u592a\u597d\u4e86\uff0c\u5979\u4f1a\u544a\u8bc9\u6211\u542c\u4ece\u59bb\u5b50\u7684\u8bdd\u6216\u5176\u4ed6\u4ec0\u4e48\u7684\u3002\u201d\u4f46\u5979\u6ca1\u6709\u3002\u5979\u53ea\u8bf4\u4e86\u4e24\u4e2a\u8bcd\uff0c\u8fd9\u4e24\u4e2a\u8bcd\u4e00\u76f4\u5728\u6211\u5fc3\u4e2d\u3002\u5979\u8bf4\uff1a\u201c\u4e0d\u8981\u6bd4\u8f83\u3002\u201d\u7136\u540e\u5979\u8bf4\uff1a\u201c\u597d\u5427\uff0c\u4f60\u53ef\u4ee5\u56de\u53bb\u505a\u4f60\u6b63\u5728\u505a\u7684\u4e8b\u60c5\u4e86\u3002\u201d</p> <p>\u5f53\u65f6\uff0c\u8fd9\u5bf9\u6211\u6765\u8bf4\u5f88\u96be\u7406\u89e3\uff0c\u56e0\u4e3a\u6211\u8eab\u5904\u4e00\u4e2a\u5927\u5b66\uff0c\u90a3\u91cc\u4e00\u5207\u90fd\u662f\u5173\u4e8e\u6839\u636e\u8003\u8bd5\u6210\u7ee9\u6bd4\u8f83\u4eba\u4eec\u7684\u5730\u65b9\u3002\u4f60\u77e5\u9053\uff0c\u4e8b\u5b9e\u8bc1\u660e\uff0c\u5728\u8fd9\u4e2a\u4e16\u754c\u4e0a\uff0c\u6ca1\u6709\u4eba\u518d\u63a5\u53d7\u6807\u51c6\u5316\u7684\u8003\u8bd5\u4e86\u3002\u771f\u6b63\u91cd\u8981\u7684\u662f\u4f60\u6309\u7167\u81ea\u5df1\u7684\u7279\u5b9a\u8def\u5f84\u6240\u505a\u7684\u4e8b\u60c5\u3002\u56e0\u6b64\uff0c\u4e0e\u5176\u4ed6\u4eba\u6bd4\u8f83\u53d8\u5f97\u8fc5\u901f\u53d8\u5f97\u6beb\u65e0\u610f\u4e49\uff0c\u56e0\u4e3a\u771f\u6b63\u91cd\u8981\u7684\u662f\u4f60\u81ea\u5df1\u80fd\u505a\u4ec0\u4e48\uff0c\u4f60\u6709\u4ec0\u4e48\u672c\u9886\uff0c\u4ee5\u53ca\u4f60\u9009\u62e9\u5982\u4f55\u5ea6\u8fc7\u65f6\u95f4\u3002</p> <p>\u4f46\u662f\uff0c\u201c\u4e0d\u8981\u6bd4\u8f83\u201d\u8fd9\u4e24\u4e2a\u8bcd\u5728\u6211\u5185\u5fc3\u53d1\u9175\u4e86\u597d\u591a\u5e74\uff0c\u6211\u624d\u610f\u8bc6\u5230\u6211\u7684\u81ea\u6211\u4ef7\u503c\u5b9e\u9645\u4e0a\u4e0e\u5176\u4ed6\u4eba\u80fd\u505a\u4ec0\u4e48\u65e0\u5173\uff0c\u6211\u662f\u5426\u80fd\u505a\u5f97\u6bd4\u4ed6\u4eec\u597d\u6216\u5dee\uff0c\u800c\u4e0e\u6211\u5df2\u7ecf\u505a\u4e86\u4ec0\u4e48\u4ee5\u53ca\u6211\u5c06\u6765\u4f1a\u505a\u4ec0\u4e48\uff0c\u4ee5\u53ca\u6211\u5982\u4f55\u82b1\u65f6\u95f4\u6765\u63d0\u5347\u81ea\u5df1\u6709\u5173\u3002\u6240\u4ee5\uff0c\u6211\u5e94\u8be5\u4e13\u6ce8\u4e8e\u6539\u5584\u81ea\u5df1\uff0c\u5fd8\u8bb0\u5176\u4ed6\u4eba\u5728\u505a\u4ec0\u4e48\u3002</p> <p>\u6240\u4ee5\uff0c\u4f60\u8981\u53bb\u53c2\u52a0\u671f\u672b\u8003\u8bd5\uff0c\u5176\u4ed6\u5f88\u591a\u4eba\u4e5f\u4f1a\u53c2\u52a0\u8fd9\u4e2a\u671f\u672b\u8003\u8bd5\u3002\u4f46\u8c01\u5728\u4e4e\u5462\uff1f\u8fd9\u95e8\u8bfe\u4e0d\u662f\u6309\u7167\u66f2\u7ebf\u8bc4\u5206\u7684\uff0c\u8fd9\u53ea\u662f\u4f60\u5c3d\u529b\u800c\u4e3a\u3002\u6240\u4ee5\uff0c\u6211\u5e0c\u671b\u4f60\u505a\u597d\u51c6\u5907\uff0c\u4e5f\u5e0c\u671b\u4f60\u6709\u5145\u8db3\u7684\u7761\u7720\u7b49\u7b49\uff0c\u4f46\u4e0e\u6b64\u540c\u65f6\uff0c\u6211\u8ba4\u4e3a\u4f60\u65e0\u9700\u62c5\u5fc3\u76f4\u65b9\u56fe\u548c\u4f60\u7684\u670b\u53cb\u4eec\u7684\u60c5\u51b5\u3002\u4e92\u76f8\u5e2e\u52a9\uff0c\u6700\u7ec8\u4e13\u6ce8\u4e8e\u81ea\u5df1\u3002</p> <p> </p> <p>Hany:</p> <p>\u8fd9\u771f\u7684\u975e\u5e38\u7f8e\u597d\uff0c\u7ea6\u7ff0\u3002\u6211\u60f3\u8bf4\u4e24\u4ef6\u4e8b\u3002\u9996\u5148\uff0c\u6211\u8981\u53bb\u627e\u6211\u5988\u5988\u804a\u804a\uff0c\u56e0\u4e3a\u6211\u5728\u6210\u957f\u8fc7\u7a0b\u4e2d\u6ca1\u6709\u5f97\u5230\u8fd9\u4e48\u597d\u7684\u5efa\u8bae\uff0c\u6240\u4ee5\u6211\u8981\u548c\u5979\u8c08\u8c08\u3002\u6211\u60f3\u91cd\u7533\u4e00\u4e0b\uff0c\u56e0\u4e3a\u8fd9\u662f\u6211\u5f88\u957f\u65f6\u95f4\u624d\u660e\u767d\u7684\u4e8b\u60c5\u2014\u2014\u4e0d\u8981\u6bd4\u8f83\u3002\u6211\u4eec\u4e5f\u4f1a\u9677\u5165\u4e00\u4e2a\u9677\u9631\uff0c\u6bd4\u5982\u6211\u4eec\u4f1a\u6bd4\u8f83\u6211\u4eec\u7684\u623f\u5b50\u6709\u591a\u5927\uff0c\u4e0e\u670b\u53cb\u76f8\u6bd4\u6211\u4eec\u6323\u591a\u5c11\u94b1\uff0c\u4e0e\u53e6\u4e00\u4e2a\u670b\u53cb\u76f8\u6bd4\u6211\u4eec\u6709\u4ec0\u4e48\u6837\u7684\u8863\u670d\uff0c\u751a\u81f3\u4e0e\u90a3\u4f4d\u670b\u53cb\u76f8\u6bd4\u6211\u4eec\u6709\u591a\u806a\u660e\u3002\u6211\u4eec\u9009\u62e9\u8fd9\u4e9b\u4e8b\u60c5\uff0c\u9996\u5148\uff0c\u5355\u72ec\u505a\u8fd9\u4e9b\u662f\u6beb\u65e0\u610f\u4e49\u7684\u3002\u4f46\u540c\u6837\uff0c\u8fd9\u662f\u4e00\u4e2a\u9677\u9631\uff0c\u8fd9\u5c31\u662f\u793e\u4ea4\u5a92\u4f53\u7684\u95ee\u9898\u2014\u2014\u4f60\u770b\u5230\u5176\u4ed6\u4eba\u7ecf\u8fc7\u7cbe\u5fc3\u7b56\u5212\u7684\u4e16\u754c\uff0c\u8fd9\u662f\u4e00\u4e2a\u9677\u9631\u3002\u53d8\u8001\u7684\u4e00\u4e2a\u597d\u5904\uff08\u4f60\u4f1a\u5230\u8fbe\u90a3\u91cc\u7684\uff0c\u6211\u5411\u4f60\u4fdd\u8bc1\uff09\u662f\u4f60\u4f1a\u610f\u8bc6\u5230\u8fd9\u662f\u4e00\u4e2a\u9677\u9631\uff0c\u5b83\u6beb\u65e0\u610f\u4e49\u3002\u8fd9\u786e\u5b9e\u662f\u4e00\u79cd\u975e\u5e38\u5185\u5728\u7684\u4e1c\u897f\u3002\u4f60\u5728\u505a\u4ec0\u4e48\uff1f\u4f60\u60f3\u6210\u4e3a\u8c01\uff1f\u4f60\u60f3\u5982\u4f55\u5ea6\u8fc7\u8fd9\u4e2a\u4e16\u754c\uff1f\u4f60\u60f3\u5982\u4f55\u5bf9\u5f85\u5176\u4ed6\u4eba\uff1f\u5728\u4e00\u5929\u7ed3\u675f\u65f6\uff0c\u90a3\u51e0\u4e4e\u662f\u552f\u4e00\u91cd\u8981\u7684\u4e8b\u60c5\u3002\u4f60\u53ea\u9700\u76f8\u4fe1\u5b83\u4f1a\u5728\u90a3\u91cc\u3002</p>"},{"location":"Notes%20of%20Courses/CS61B/CS61B/","title":"CS61B","text":"<p> \u7ea6 10610 \u4e2a\u5b57  963 \u884c\u4ee3\u7801  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 47 \u5206\u949f</p> <p>cs61b\u53ef\u7528\u7684gradescope\u8bfe\u7a0b\u9080\u8bf7\u7801\u662f MB7ZPY\uff0c\u622a\u6b62\u523024\u5e74\u5e95</p> <p>\u53c2\u8003</p> <p>cs61b Lab0/1 setup - \u77e5\u4e4e (zhihu.com)</p>"},{"location":"Notes%20of%20Courses/CS61B/CS61B/#lecture-0-intro-hello-world-java","title":"Lecture 0 Intro, Hello World Java","text":""},{"location":"Notes%20of%20Courses/CS61B/CS61B/#1","title":"1","text":"<p>java\u4e2d\u6240\u6709\u51fd\u6570\u90fd\u5e94\u8be5\u5b58\u5728\u4e8e\u7c7b\u4e2d\uff0c\u56e0\u6b64java\u4e2d\u6240\u6709\u7684\u51fd\u6570\u90fd\u662f\u65b9\u6cd5 method</p>"},{"location":"Notes%20of%20Courses/CS61B/CS61B/#hw-0","title":"HW 0","text":""},{"location":"Notes%20of%20Courses/CS61B/CS61B/#1_1","title":"1","text":"<p>java\u4e2d\u6570\u7ec4\u7684\u4f7f\u7528\u65b9\u6cd5</p> <pre><code>int[] numbers = new int[3];\nnumbers[0] = 4;\nnumbers[1] = 7;\nnumbers[2] = 10;\nSystem.out.println(numbers[1]);\n</code></pre> <p>\u6216\u8005</p> <pre><code>int[] numbers = new int[]{4, 7, 10};\nSystem.out.println(numbers[1]);\n</code></pre> <p>\u53ef\u4ee5\u4f7f\u7528 <code>.length</code> \u6765\u83b7\u53d6\u6570\u7ec4\u7684\u957f\u5ea6\uff0c\u4f8b\u5982</p> <pre><code>int[] numbers = new int[]{4, 7, 10};\nSystem.out.println(numbers.length);\n</code></pre>"},{"location":"Notes%20of%20Courses/CS61B/CS61B/#2","title":"2","text":"<p>In Java, the <code>for</code> keyword has the syntax below:</p> <pre><code>for (initialization; termination; increment) {\n    statement(s)\n}\n</code></pre> <p>The initialization, termination, and increment must be semicolon separated. Each of these three can feature multiple comma-separated statements, e.g.</p> <pre><code>for (int i = 0, j = 10; i &lt; j; i += 1) {\n    System.out.println(i + j);\n}\n</code></pre> <p>Comma separated <code>for</code> loops should be used sparingly.</p> <p>java\u4e2d <code>for</code> \u7684\u4f7f\u7528\u65b9\u6cd5(\u8ddfc\u4e2d\u5dee\u4e0d\u591a)</p>"},{"location":"Notes%20of%20Courses/CS61B/CS61B/#3","title":"3","text":"<p>Exercise 4</p> code <pre><code>public class BreakContinue {\n    public static void windowPosSum(int[] a, int n) {\n        /** your code here */ \n        for (int i = 0; i &lt; a.length; i += 1) {\n            if (a[i] &lt; 0) {\n                continue;\n            }\n\n            int sum = 0;\n            for (int j = 0; j &lt;= n; j += 1) {\n                if (i + j &gt;= a.length) {\n                    break;\n                }\n                sum += a[i + j];\n            }\n\n            a[i] = sum;\n        }\n    }\n\n    public static void main(String[] args) {\n        int[] a = {1, 2, -3, 4, 5, 4};\n        int n = 3;\n        windowPosSum(a, n);\n\n        // Should print 4, 8, -3, 13, 9, 4\n        System.out.println(java.util.Arrays.toString(a));\n    }\n}\n</code></pre>"},{"location":"Notes%20of%20Courses/CS61B/CS61B/#4","title":"4","text":"<p><code>for</code> \u5faa\u73af\u8bed\u53e5\u7684\u589e\u5f3a</p> <p>java\u4e2d <code>for</code> \u53ef\u4ee5\u6709\u76f8\u4f3c\u4e8epython\u4e2d\u5217\u8868\u63a8\u5bfc\u5f0f\u7684\u7528\u6cd5(\u628a\u6570\u7ec4\u4e2d\u7684\u5143\u7d20\u89e3\u538b\u51fa\u6765)</p> <pre><code>public class EnhancedForBreakDemo {\n    public static void main(String[] args) {\n        String[] a = {\"cat\", \"dog\", \"laser horse\", \"ketchup\", \"horse\", \"horbse\"};\n\n        for (String s : a) {\n            for (int j = 0; j &lt; 3; j += 1) {\n                System.out.println(s);\n                if (s.contains(\"horse\")) {\n                    break;\n                }                \n            }\n        }\n    }\n}\n</code></pre> <p>\u6ce8\u610f\u5230\uff0cjava\u4e2d\uff0c\u5b57\u7b26\u4e32String\u6709 <code>contain</code> \u65b9\u6cd5\uff0c\u53ef\u4ee5\u5224\u65ad\u662f\u5426\u5305\u542b\u67d0\u4e2a\u5b50\u5b57\u7b26\u4e32</p>"},{"location":"Notes%20of%20Courses/CS61B/CS61B/#lecture-2-defining-and-using-classes","title":"Lecture 2 Defining and Using Classes","text":""},{"location":"Notes%20of%20Courses/CS61B/CS61B/#1_2","title":"1","text":"<p>Josh\u6f14\u793a\u4e86\u5728\u7ec8\u7aef\u4e2d\u8fd0\u884cjava\u6587\u4ef6\u7684\u65b9\u6cd5\uff0c</p> <p>\u9700\u8981\u5148\u4f7f\u7528 <code>javac</code> \u6765\u7f16\u8bd1java\u6587\u4ef6\uff0c\u7136\u540e\u4f1a\u751f\u6210class\u6587\u4ef6\uff0c</p> <p>\u518d\u4f7f\u7528 <code>java</code> \u6587\u4ef6\u6765\u8fd0\u884cclass\u6587\u4ef6(\u8f93\u5165\u547d\u4ee4\u65f6\u53ef\u4ee5\u5ffd\u7565 <code>.class</code> \u540e\u7f00)</p> <p><code>cat</code> \u547d\u4ee4\u53ef\u4ee5\u5728\u7ec8\u7aef\u4e2d\u8f93\u51fa/\u663e\u793a\u6587\u4ef6\u7684\u5185\u5bb9</p> <p>Josh\u63d0\u5230\u8fd0\u884cjava\u7a0b\u5e8f\u7684\u4e24\u6b65\u6b65\u9aa4</p> <pre><code>flowchart LR\na(Hello.java) --&gt; b[Compiler&lt;br&gt;&lt;code&gt;javac&lt;/code&gt;] --&gt; c(Hello.class) --&gt; d[Interpreter&lt;br&gt;&lt;code&gt;java&lt;/code&gt;] --&gt; e([stuff&lt;br&gt;happens])</code></pre> <p>\u4f46Josh\u4e5f\u63d0\u5230\u8fd9\u4e0d\u662f\u552f\u4e00(\u8fd0\u884cjava\u7a0b\u5e8f)\u7684\u65b9\u6cd5</p>"},{"location":"Notes%20of%20Courses/CS61B/CS61B/#2_1","title":"2","text":"<p>Josh\u6f14\u793a\u4e86\u8c03\u7528\u5176\u4ed6java\u6587\u4ef6\u4e2d\u7684\u51fd\u6570</p> DogLauncher.javaDog.java <pre><code>public class DogLauncher {\n    public static void main(String[] args) {\n        Dog.makeNoise();\n    }\n}\n</code></pre> <pre><code>public class Dog {\n    public static void makeNoise() {\n        System.out.println(\"Bark!\");\n    }\n}\n</code></pre> <p>\u7136\u540e\u53d1\u73b0\uff0c\u540c\u4e00\u76ee\u5f55\u4e0b\u7684java\u6587\u4ef6\u4e4b\u95f4\u53ef\u4ee5(\u50cfJosh\u6f14\u793a\u7684\u4e00\u6837)\u76f4\u63a5\u76f8\u4e92\u8c03\u7528\u51fd\u6570(\u800c\u4e0d\u9700\u8981 <code>import</code> \uff0c\u4e0d\u540c\u76ee\u5f55\u4e0b\u4e0d\u80fd\u8fd9\u6837\u76f4\u63a5\u8c03\u7528)</p>"},{"location":"Notes%20of%20Courses/CS61B/CS61B/#3_1","title":"3","text":"<p>\u76f4\u63a5\u901a\u8fc7 <code>\u7c7b\u540d.\u65b9\u6cd5</code> \u7684\u65b9\u6cd5\u53ea\u80fd\u8c03\u7528 <code>static</code> \u5c5e\u6027\u7684\u51fd\u6570(\u611f\u89c9\u6709\u70b9\u7c7b\u4f3c\u4e8epython\u4e2d\u7684\u7c7b\u5c5e\u6027\u548c\u5b9e\u4f8b\u5c5e\u6027\u7684\u533a\u522b)\uff0c\u6ca1\u6709 <code>static</code> \u7684\u51fd\u6570\u53ea\u80fd\u901a\u8fc7\u5b9e\u4f8b\u53bb\u8c03\u7528</p> <pre><code>public class Dog {\n    public int weightInPounds;\n\n    public void makeNoise() {\n        if (weightInPounds &lt; 10) {\n            System.out.println(\"yip!\");\n        } else if (weightInPounds &lt; 30) {\n            System.out.println(\"bark.\");\n        } else {\n            System.out.println(\"woooof!\");\n        }\n    }\n}\n</code></pre> <p>\u5982\u679c\u76f4\u63a5\u4f7f\u7528\u7c7b\u540d\u53bb\u8c03\u7528\uff0c</p> <pre><code>public class DogLauncher {\n    public static void main(String[] args) {\n        Dog.makeNoise();\n    }\n}\n</code></pre> <p>\u4f1a\u6709\u5982\u4e0b\u62a5\u9519</p> <pre><code>DogLauncher.java:3 error: non-static method makeNoise() cannot be referenced from a static context:\n        Dog.makeNoise();\n1 error\n</code></pre> <p>\u5982\u679c\u4fee\u6539\u6210</p> <pre><code>public class DogLauncher {\n    public static void main(String[] args) {\n        Dog d = new Dog();\n        d.weightInPounds = 20;\n        d.makeNoise();\n    }\n}\n</code></pre> <p>\u5c31\u80fd\u6b63\u5e38\u7f16\u8bd1</p>"},{"location":"Notes%20of%20Courses/CS61B/CS61B/#4_1","title":"4","text":"<p>\u5b9a\u4e49\u4e00\u4e2a\u7c7b\u7684\u5927\u6982\u4ee3\u7801\u7ed3\u6784</p> <p></p>"},{"location":"Notes%20of%20Courses/CS61B/CS61B/#5","title":"5","text":"<p>\u5728\u4f7f\u7528\u81ea\u5b9a\u4e49\u7684\u7c7b\u6765\u521b\u5efa\u6570\u7ec4\u65f6\uff0c\u6570\u7ec4\u5728\u521b\u5efa\u65f6\u5e76\u4e0d\u4f1a\u521b\u5efa\u7c7b\u7684\u5bf9\u8c61\uff0c\u5373</p> <pre><code>Dog[] dogs = new Dog[2];\n</code></pre> <p>\u53ea\u4f1a\u521b\u5efa\u4e00\u4e2a\u6570\u7ec4\uff0c\u5e76\u4e0d\u4f1a\u521b\u5efa\u4e24\u4e2aDog\u5b9e\u4f8b</p>"},{"location":"Notes%20of%20Courses/CS61B/CS61B/#6","title":"6","text":"<p><code>static</code> \u7684\u51fd\u6570\u4e0d\u80fd\u8c03\u7528\u5b9e\u4f8b\u7684\u53d8\u91cf</p>"},{"location":"Notes%20of%20Courses/CS61B/CS61B/#7","title":"7","text":"<p>\u5728\u4e0d\u662f <code>static</code> \u7684\u51fd\u6570\u4e2d\uff0c\u53ef\u4ee5\u4f7f\u7528 <code>this</code> \u6765\u83b7\u5f97\u81ea\u8eab\u8fd9\u4e2a\u5b9e\u4f8b(\u4e0ec\u4e2d\u7684 <code>this</code> \u7565\u6709\u4e0d\u540c\uff0cc\u4e2d <code>this</code> \u662f\u6307\u9488\uff0cjava\u4e2d <code>this</code> \u4e0d\u662f\u6307\u9488)</p>"},{"location":"Notes%20of%20Courses/CS61B/CS61B/#8","title":"8","text":"<p>Josh\u5efa\u8bae\uff0c\u5bf9\u4e8e\u7c7b\u4e2d\u7684 <code>static</code> \u7684\u5c5e\u6027\uff0c\u4f7f\u7528\u7c7b\u540d\u53bb\u83b7\u53d6\u8fd9\u4e2a\u5c5e\u6027\uff0c\u800c\u4e0d\u8981\u4f7f\u7528\u5b9e\u4f8b\u53bb\u83b7\u53d6\u8fd9\u4e2a\u5c5e\u6027</p>"},{"location":"Notes%20of%20Courses/CS61B/CS61B/#9","title":"9","text":"<p><code>static</code> \u7684\u51fd\u6570\u4e2d\u5982\u679c\u60f3\u8981\u8bbf\u95ee \u975e <code>static</code> \u7684\u5c5e\u6027(\u5373\u5b9e\u4f8b\u5c5e\u6027)\uff0c\u9700\u8981\u4f20\u5165\u5b9e\u4f8b\u5e76\u901a\u8fc7\u5b9e\u4f8b\u6765\u8bbf\u95ee</p>"},{"location":"Notes%20of%20Courses/CS61B/CS61B/#10","title":"10","text":"<p>Josh\u5728\u8bfe\u4e0a\u63d0\u5230\u4e86\u4e00\u4e2a\u7f51\u7ad9\uff0c\u548ccs61a\u4e2d\u7684python tutor\u7c7b\u4f3c\u7684\u7f51\u7ad9\uff0c\u4f46\u662f\u662fjava\u8bed\u8a00</p> <p>Java Visualizer (uwaterloo.ca)</p>"},{"location":"Notes%20of%20Courses/CS61B/CS61B/#11","title":"11","text":"<p>Josh\u63d0\u5230\uff0c\u4f7f\u7528helper\u51fd\u6570\u6765\u628a\u5927\u95ee\u9898\u5206\u89e3\u6210\u5c0f\u95ee\u9898\uff0c</p> <p>\u5e76\u4e14\u8fd9\u6837\u505a\u6709\u51e0\u70b9\u597d\u5904</p> <ul> <li>more narratively clear</li> <li>easier to get right when you write it</li> <li>easier to debug</li> </ul> <p>\u7136\u540eJosh\u901a\u8fc7\u4e00\u4e2a\u5177\u4f53\u4f8b\u5b50\u6f14\u793a\uff0c</p> <p></p> <p>Josh\u5c55\u793a\u5982\u679c\u4ee3\u7801\u5199\u5728\u4e00\u4e2a\u51fd\u6570\u4e2d\uff0c\u5927\u6982\u662f\u8fd9\u6837</p> <pre><code>public static Dog[] largerThanFourNeighbors(Dog[] dogs) {\n    for (int i = 0; i &lt; dogs.length; i += 1) {\n        boolean largest = true;\n\n        for (int j = -2; j &lt;= 2; j += 1) {\n            if (i + j &lt; 0) {\n                continue;\n            }\n            if (i + j &gt;= dogs.length) {\n                break;\n            }\n            if (j == 0) {\n                continue;\n            }\n\n            Dog neighbor = dogs[i + j];\n            if (neighbor.weightInPounds &gt; dogs[i].weightInPounds) {\n                largest = false;\n            }\n        }\n        ...\n    }\n}\n</code></pre> <p>\u800c\u5206\u6210\u4e0d\u540c\u7684\u51fd\u6570\u53bb\u7f16\u5199\uff0c\u5c31\u4f1a\u770b\u8d77\u6765\u7ed3\u6784\u66f4\u52a0\u6e05\u6670\uff0cdebug\u4e5f\u4f1a\u66f4\u65b9\u4fbf</p> <pre><code>public static Dog[] largerThanFourNeighbors(Dog[] dogs) {\n    Dog[] returnDogs = new Dog[dogs.length];\n    int cnt = 0;\n\n    for (int i = 0; i &lt; dogs.length; i += 1) {\n        if (isBiggestOfFour(dogs, i)) {\n            returnDogs[cnt] = dogs[i];\n            cnt = cnt + 1;\n        }\n    }\n\n    returnDogs = arrayWithNoNulls(returnDogs, cnt);\n    return returnDogs;\n}\n\n/** cnt is the number of non-null items */\npublic static Dog[] arrayWithNoNulls(Dog[] dogs, int cnt) {\n    Dog[] noNullDogs = new Dog[cnt];\n    for (int i = 0; i &lt; cnt; i += 1) {\n        noNullDogs[i] = dogs[i];\n    }\n    return noNullDogs;\n}\n\n/** Return true if dogs[i] is larger than its four neighbors */\npublic static boolean isBiggestOfFour(Dog[] dogs, int i) {\n    boolean isBiggest = true;\n    for (int j = -2; j &lt;= 2; j += 1) {\n        int compareIndex = i + j;\n\n        /* avoid comparing ourself to ourself */\n        if (j == 0) {\n            continue;\n        }\n\n        if (validIndex(dogs, i + j)) {\n            if (dogs[compareIndex].weightInPounds &gt; dogs[i].weightInPounds) {\n                isBiggest = false;\n            }\n        }\n    }\n    return isBiggest;\n}\n\npublic static boolean validIndex(Dog[] dogs, int i) {\n    if (i &lt; 0) {\n        return false;\n    }\n    if (i &gt;= dogs.length) {\n        return false;\n    }\n    return true;\n}\n</code></pre> <pre><code>public static void main(String[] args) {\n    Dog[] dogs = new Dog[] {\n        new Dog(10),\n        new Dog(15),\n        new Dog(20),\n        new Dog(15),\n        new Dog(10),\n        new Dog(5),\n        new Dog(10),\n        new Dog(15),\n        new Dog(22),\n        new Dog(15),\n        new Dog(20),\n    };\n    Dog[] bigDogs = largerThanFourNeighbors(dogs);\n\n    for (int k = 0; k &lt; bigDogs.length; k += 1) {\n        System.out.print(bigDogs[k].weightInPounds + \" \");\n    }\n    System.out.println();\n}\n</code></pre>"},{"location":"Notes%20of%20Courses/CS61B/CS61B/#lecture-2-qa","title":"Lecture 2 Q&amp;A","text":""},{"location":"Notes%20of%20Courses/CS61B/CS61B/#1_3","title":"1","text":"<p>Josh\u5728\u6f14\u793a\u65f6\uff0c\u53d1\u73b0\u4ed6\u7684IDEA\u4e2d\u88c5\u6709Java Visualizer\u7684\u63d2\u4ef6\uff0c\u80fd\u76f4\u63a5\u5728IDEA\u4e2d\u5728\u8c03\u8bd5\u65f6\u770b\u5230\u53ef\u89c6\u5316\u7684\u73af\u5883\u56fe environment diagram\uff0c</p> <p>\u611f\u89c9\u633a\u6709\u7528\uff0c\u4e8e\u662f\u4e5f\u5b89\u88c5\u4e86\u8fd9\u4e2a\u63d2\u4ef6</p> <p>Josh\u8c03\u8bd5\u65f6\u8fd8\u7528\u4e86\u4e00\u4e0bstep over \u6b65\u8fc7\u7684\u64cd\u4f5c\uff0c\u4e4b\u524d\u4e0d\u592a\u6e05\u695a \u6b65\u8fc7 step over \u3001 \u6b65\u5165 step into \u3001 \u6b65\u51fa step out \u7684\u5177\u4f53\u542b\u4e49\uff0c\u4e8e\u662f\u5c31\u53bb\u67e5\u4e86\u4e00\u4e0b\uff0c</p> <p>\u3010pycharm\u8c03\u8bd5\u3011Pycharm \u65ad\u70b9\u8df3\u8f6c\u53ca Step Over/Step Into/Step Out \u7b49\u7684\u4f7f\u7528_pycharm\u4e2d\u7684step over\u548c-CSDN\u535a\u5ba2</p> <p>\u4ece\u8fd9\u7bc7\u6587\u7ae0\u4e0a\u4e86\u89e3\u5230\uff0c</p> <ul> <li> <p>\u6b65\u8fc7 step over \u662f\u5982\u679c\u8fd9\u4e00\u884c\u6709\u8c03\u7528\u5176\u4ed6\u51fd\u6570\uff0c\u90a3\u4e48\u4f1a\u6267\u884c\u5b8c\u8c03\u7528\u7684\u51fd\u6570\uff0c\u7136\u540e\u8d70\u5230\u4e0b\u4e00\u884c\u4ee3\u7801</p> </li> <li> <p>\u6b65\u5165 step into \u662f\u5982\u679c\u8fd9\u4e00\u884c\u6709\u8c03\u7528\u5176\u4ed6\u51fd\u6570\uff0c\u90a3\u4e48\u5c31\u4f1a\u8d70\u5230\u88ab\u8c03\u7528\u51fd\u6570\u7684\u7b2c\u4e00\u884c\u4ee3\u7801</p> <p>\u5982\u679c\u8fd9\u4e00\u884c\u6ca1\u6709\u8c03\u7528\u5176\u4ed6\u51fd\u6570\uff0c\u90a3\u4e48\u6b65\u8fc7step over\u548c\u6b65\u5165 step into\u6548\u679c\u5c31\u662f\u4e00\u6837\u7684(\u90fd\u662f\u8d70\u5230\u4e0b\u4e00\u884c\u4ee3\u7801)</p> </li> <li> <p>\u6b65\u51fa step out \u662f\u7ed3\u5408\u6b65\u5165 step into\u6765\u4f7f\u7528\u7684\uff0c\u6b65\u51fa step out\u4f1a\u6267\u884c\u5b8c\u5f53\u524d\u6574\u4e2a\u51fd\u6570\uff0c\u7136\u540e\u56de\u5230\u524d\u4e00\u4e2a\u51fd\u6570\u8c03\u7528\u8fd9\u4e2a\u51fd\u6570\u7684\u4f4d\u7f6e</p> </li> </ul>"},{"location":"Notes%20of%20Courses/CS61B/CS61B/#project-0","title":"Project 0","text":""},{"location":"Notes%20of%20Courses/CS61B/CS61B/#1_4","title":"1","text":"<p>\u7531\u4e8e\u5728\u8bfe\u7a0b\u7f51\u7ad9\u4e0a\u6ca1\u6709\u627e\u5230\u80fd\u4e0b\u8f7d\u63d0\u4f9b\u7684\u521d\u59cb\u4ee3\u7801\u7684\u5730\u65b9(\u8bfe\u7a0b\u7f51\u7ad9\u4e0a\u63d0\u4f9b\u7684\u65b9\u6cd5\u662f\u8bfe\u7a0b\u7684\u5b66\u751f\u4ecegithub\u4e0a <code>git pull</code> \u81ea\u5df1\u5bf9\u5e94\u5b66\u53f7\u7684\u4ed3\u5e93)\uff0c</p> <p>\u4e8e\u662f\u5728github\u4e0a\u641c\u7d22 <code>cs61b sp21</code> \u6765\u641c\u7d22\u522b\u4eba\u5b8c\u6210\u7684\u4f5c\u4e1a\u4ed3\u5e93\uff0c\u770b\u770b\u80fd\u4e0d\u80fd\u627e\u5230\u539f\u59cb\u7684\u4ee3\u7801\uff0c</p> <p>\u7136\u540e\u70b9\u51fb\u6700\u67e5\u770b\u591astar\u7684\u4ed3\u5e93</p> <p>exuanbo/cs61b-sp21: CS 61B, Spring 2021 (github.com)</p> <p>\u53d1\u73b0\u5728 <code>README.md</code> \u4e2d\u6709\u5199\u7740cs61b sp21\u7684\u5b98\u65b9\u539f\u59cb\u4ee3\u7801\u4ed3\u5e93</p> <p>Berkeley-CS61B/skeleton-sp21: starter code for spring 21 (github.com)</p> <p>\u4e8e\u662f\u5c31\u987a\u4fbf\u53d1\u73b0\u4e86cs61b\u7684\u5b98\u65b9github\u8d26\u53f7</p> <p>Public Access Resources</p> <p>Previous course staff have made some iterations of this course available for auditors -- both Berkeley students and members of the public. While the assignment skeletons and specifications will be available for most years, some assignments have autograders that are not public. The most recent version with a public autograder is Spring 2021.</p> <p>Here's lints to the relevant materials:</p> <ul> <li>SP21 Course Website</li> <li>Skeleton code</li> <li>Java Libraries</li> <li>Lecture Code</li> </ul> <p>Tooling</p> <p>61B uses some tools to run its course. These are the open-source ones that we maintain for ourselves and actively use.</p> <ul> <li>IntelliJ Plugin - A style checker</li> <li>Java Visualizer - An IntelliJ plugin to visualize the data layout in Java applications. Externally maintained.</li> <li>jh61b - A JUnit executor to output test results in Gradescope's format</li> <li>BSAG - A Better SimpleAutograder for custom Gradescope logic<ul> <li>bsag-jh61b - BSAG steps for jh61b components</li> </ul> </li> </ul>"},{"location":"Notes%20of%20Courses/CS61B/CS61B/#2_2","title":"2","text":"<p>\u8bf4\u660e\u4e2d\u63d0\u5230\uff0c\u6846\u67b6\u4ee3\u7801\u4f7f\u7528\u4e86\u4e00\u79cd\u53eb\u505a \u6a21\u578b-\u89c6\u56fe-\u63a7\u5236\u5668\u6a21\u5f0f Model-View-Controller Pattern (MVC) \u7684\u6a21\u5f0f</p> <p>The MVC pattern divides our problem into three parts:</p> <ul> <li>The model represents the subject matter being represented and acted upon \u2013 in this case incorporating the state of a board game and the rules by which it may be modified. Our model resides in the <code>Model</code> , <code>Side</code> , <code>Board</code> , and <code>Tile</code> classes. The instance variables of <code>Model</code> fully determine what the state of the game is. Note: You\u2019ll only be modifying the <code>Model</code> class.</li> <li>A view of the model, which displays the game state to the user. Our view resides in the <code>GUI</code> and <code>BoardWidget</code> classes.</li> <li>A controller for the game, which translates user actions into operations on the model. Our controller resides mainly in the <code>Game</code> class, although it also uses the GUI class to read keystrokes.</li> </ul>"},{"location":"Notes%20of%20Courses/CS61B/CS61B/#3_2","title":"3","text":"<p>java\u4e2d\u5224\u65ad\u662f\u5426\u4e3a <code>null</code> \u53ef\u4ee5\u4f7f\u7528 <code>==</code></p>"},{"location":"Notes%20of%20Courses/CS61B/CS61B/#4_2","title":"4","text":"<p>\u5728\u5c1d\u8bd5\u5b8c\u6210 <code>tilt</code> \u51fd\u6570\u7684\u8fc7\u7a0b\u4e2d\uff0c\u4e00\u5171\u8fdb\u884c\u4e863\u6b21\u5c1d\u8bd5\uff0c</p> <p>\u524d\u4e24\u6b21\u5c1d\u8bd5\u5927\u81f4\u601d\u8def\u90fd\u662f\uff0c\u6bcf\u4e00\u5217\u53ea\u904d\u5386\u4e00\u6b21\uff0c\u7136\u540e\u6807\u8bb0\u7a7a\u7684\u4f4d\u7f6e\u548c\u4e0a\u4e00\u4e2a\u74f7\u7816 tile(\u7b2c2\u6b21\u5c1d\u8bd5\u4e0e\u7b2c1\u6b21\u7684\u533a\u522b\u5728\u4e8e\uff0c\u5c06\u5904\u7406\u6bcf\u4e00\u5217\u5199\u6210\u4e86\u4e00\u4e2a\u51fd\u6570)\uff0c</p> <p>\u4f46\u662f\u4e24\u6b21\u90fd\u662f\u53ea\u80fd\u901a\u8fc7 <code>TestUpOnly</code> \u800c\u4e0d\u80fd\u901a\u8fc7 <code>TestModel</code> \u3002</p> <p>\u7b2c3\u6b21\u5c1d\u8bd5\u6253\u7b97\u653e\u5f03\u8fd9\u4e2a\u601d\u8def\uff0c\u800c\u662f\u5c06\u6bcf\u4e00\u5c0f\u6b65\u90fd\u5199\u6210\u4e00\u4e2a\u51fd\u6570\uff0c\u5e76\u4e14\u7531\u4e8e\u7559\u610f\u5230\u9898\u76ee\u8bf4\u660e\u4e2d\u63d0\u5230 <code>board.move</code> \u65b9\u6cd5\u5982\u679c\u5408\u5e76\u4e86\u74f7\u7816\u4f1a\u8fd4\u56de <code>true</code> \u4e8e\u662f\u6253\u7b97\u5229\u7528\u8fd9\u4e00\u70b9\uff0c\u6700\u540e\u5199\u5b8c\u5e76debug\u5b8c\u540e\uff0c\u6ca1\u60f3\u5230\u4e0d\u4ec5\u901a\u8fc7\u4e86 <code>TestUpOnly</code> \u4e5f\u901a\u8fc7\u4e86 <code>TestModel</code> (\ud83d\ude2e\u5f88\u9707\u60ca\uff0c\u4e0d\u77e5\u9053\u4e3a\u4ec0\u4e48)</p> code <pre><code>public boolean tilt(Side side) {\n    ...\n\n    board.setViewingPerspective(side);\n    for (int i = 0; i &lt; board.size(); i++) {\n        if (processCol(i)) {\n            changed = true;\n        }\n    }\n    board.setViewingPerspective(Side.NORTH);\n\n    ...\n}\n\npublic boolean processCol(int col) {\n    boolean changed = false;\n    int size = board.size();\n\n    boolean[] isMerged = new boolean[size];\n    for (int i = 0; i &lt; size; i++) {\n        int row = size - i - 1;\n        isMerged[row] = false;\n\n        if (needMove(col, row)) {\n            int target = findTarget(col, row, isMerged);\n            boolean doMerge = board.move(col, target, board.tile(col, row));\n\n            if (doMerge) {\n                isMerged[target] = true;\n                score += board.tile(col, target).value();\n            }\n\n            changed = true;\n        }\n    }\n    return changed;\n}\n\npublic boolean needMove(int col, int row) {\n    Tile tile = board.tile(col, row);\n    if (tile == null) {\n        return false;\n    } else if (row == board.size() - 1) {\n        return false;\n    } else {\n        Tile upTile = board.tile(col, row + 1);\n        return upTile == null || upTile.value() == tile.value();\n    }\n}\n\npublic int findTarget(int col, int row, boolean[] isMerge) {\n    int target = findEmptyTarget(col, row);\n\n    if (target + 1 &lt; board.size() &amp;&amp; !isMerge[target + 1]\n            &amp;&amp; board.tile(col, row).value() == board.tile(col, target + 1).value()) {\n        target += 1;\n    }\n    return target;\n}\n\npublic int findEmptyTarget(int col, int row) {\n    int target = row;\n    for (int i = row + 1; i &lt; board.size(); i++) {\n        if (board.tile(col, i) != null) {\n            break;\n        }\n        target = i;\n    }\n    return target;\n}\n</code></pre>"},{"location":"Notes%20of%20Courses/CS61B/CS61B/#5_1","title":"5","text":"<p>\u4e0d\u77e5\u9053\u662f\u4ec0\u4e48\u539f\u56e0\uff0c\u5728\u6211\u7684\u7535\u8111\u4e0a\u8fd0\u884c\u540e\u6309\u65b9\u5411\u952e\u6ca1\u6709\u53cd\u5e94\uff0c</p> <p>\u4e8e\u662f\u542f\u52a8\u8c03\u5f0f\u6a21\u5f0f\u67e5\u770b\u95ee\u9898\uff0c\u53d1\u73b0\u5728 <code>Game.java:37</code> \u4e2d</p> <pre><code>String cmnd = _source.getKey();\n</code></pre> <p>\u6309\u538b\u5de6\u952e\u540e\u7684 <code>cmnd</code> \u662f <code>\"\u5411\u5de6\u7bad\u5934\"</code> \uff0c\u4e8e\u662f\u7ee7\u7eed\u8ffd\u8e2a\u51fd\u6570\uff0c\u53d1\u73b0\u6e90\u5934\u5728 <code>GUISource.java:36</code> \u5904\uff0c</p> <p></p> <p>\u6240\u4ee5\u5c31\u5728 <code>switch</code> \u4e2d\u65b0\u52a0\u4e86\u51e0\u4e2a <code>case</code></p> <pre><code>switch (command) {\n    ...\n    case \"\u5411\u4e0a\u7bad\u5934\" :\n        command = \"Up\";\n        break;\n    case \"\u5411\u53f3\u7bad\u5934\" :\n        command = \"Right\";\n        break;\n    case \"\u5411\u4e0b\u7bad\u5934\" :\n        command = \"Down\";\n        break;\n    case \"\u5411\u5de6\u7bad\u5934\" :\n        command = \"Left\";\n        break;\n    default :\n        break;\n}\n</code></pre> <p>\u7136\u540e\u5c31\u80fd\u6b63\u5e38\u8fd0\u884c\u5e76\u73a9\u6e38\u620f\u4e86\ud83d\ude04</p>"},{"location":"Notes%20of%20Courses/CS61B/CS61B/#lecture-3-testing","title":"Lecture 3 Testing","text":""},{"location":"Notes%20of%20Courses/CS61B/CS61B/#1_5","title":"1","text":"<p>java\u4e2d\u5224\u65ad\u4e24\u4e2a\u6570\u7ec4\u4e2d\u7684\u5143\u7d20\u662f\u5426\u76f8\u7b49\uff0c\u53ef\u4ee5\u4f7f\u7528</p> <pre><code>java.util.Arrays.equals(a, b);\n</code></pre> <p>java\u4e2d\u6709\u7528\u4e8e\u6d4b\u8bd5\u7684\u5de5\u5177junit\uff0c</p> <p>\u4f8b\u5982\u6d4b\u8bd5\u6570\u7ec4\u662f\u5426\u548c\u9884\u671f\u503c\u4e00\u6837\uff0c\u5e76\u4e14\u5982\u679c\u4e0d\u4e00\u6837\u53ef\u4ee5\u663e\u793a\u51fa\u9519\u7684\u5143\u7d20</p> <pre><code>String[] input = {\"i\", \"have\", \"an\", \"egg\"};\nString[] expected = {\"an\", \"egg\", \"have\", \"i\"};\n\norg.junit.Assert.assertArrayEquals(expected, input);\n</code></pre>"},{"location":"Notes%20of%20Courses/CS61B/CS61B/#2_3","title":"2","text":"<p>java\u4e2d\u5b57\u7b26\u4e32\u4e0d\u80fd\u76f4\u63a5\u6bd4\u8f83\u5927\u5c0f\uff0c\u53ef\u4ee5\u4f7f\u7528 <code>str1.compareTo(str2)</code> \u7684\u65b9\u6cd5(\u4f7f\u7528\u5b57\u7b26\u4e32\u7684 <code>compareTo</code> \u65b9\u6cd5)\u6bd4\u8f83\uff0c</p> <ul> <li>\u5982\u679c\u5c0f\u4e8e\u4f20\u5165\u7684\u5b57\u7b26\u4e32\uff0c\u4f1a\u8fd4\u56de <code>-1</code></li> <li>\u76f8\u7b49\u8fd4\u56de <code>0</code></li> <li>\u5927\u4e8e\u8fd4\u56de <code>1</code></li> </ul>"},{"location":"Notes%20of%20Courses/CS61B/CS61B/#3_3","title":"3","text":"<p>\u5728Josh\u7684\u6f14\u793a\u4e2d\u53d1\u73b0\uff0cidea(\u53ef\u80fd\u5176\u4ed6jetbrains\u7684ide\u4e5f\u5dee\u4e0d\u591a)\u4e2d\u7684\u65ad\u70b9\u53f3\u952e\u53ef\u4ee5\u6dfb\u52a0\u6761\u4ef6</p>"},{"location":"Notes%20of%20Courses/CS61B/CS61B/#4_3","title":"4","text":"<p>\u7f16\u5199\u7684\u6d4b\u8bd5\u7684\u51fd\u6570\uff0c\u53ef\u4ee5\u5728non-static\u51fd\u6570\u58f0\u660e\u4e0a\u6dfb\u52a0\u88c5\u9970\u7b26 <code>@org.junit.Test</code> \uff0c\u7136\u540e\u5c31\u53ef\u4ee5\u4e0d\u7528\u5728 <code>main</code> \u4e2d\u8c03\u7528\u8fd9\u4e2a\u51fd\u6570\uff0c\u53ef\u4ee5\u76f4\u63a5\u8fd0\u884c\u6587\u4ef6\u5c31\u53ef\u4ee5\u8fdb\u884c\u6d4b\u8bd5\uff0c\u4f8b\u5982</p> <pre><code>@org.junit.Test\npublic void testSort() {\n    String[] input = {\"i\", \"have\", \"an\", \"egg\"};\n    String[] expected  = {\"an\", \"egg\", \"have\", \"i\"};\n\n    Sort.sort(input);\n\n    org.junit.Assert.assertArrayEquals(expected, input);\n}\n</code></pre> <p>\u4e3a\u4e86\u65b9\u4fbf\uff0c\u8fd8\u53ef\u4ee5</p> <pre><code>import org.junit.Test;\n</code></pre> <p>\u7136\u540e\u5c31\u53ef\u4ee5\u76f4\u63a5 <code>@Test</code> \u65e2\u53ef\u4ee5\u4e86</p> <p>\u4e3a\u4e86\u65b9\u4fbf\uff0c\u8fd8\u53ef\u4ee5\u5bfc\u5165 <code>Assert</code></p> <pre><code>import org.junit.Assert.*;\n</code></pre>"},{"location":"Notes%20of%20Courses/CS61B/CS61B/#5_2","title":"5","text":"<p>Josh\u63d0\u5230\u4e86\u4e00\u4e2a\u6982\u5ff5\uff0c\u6d4b\u8bd5\u9a71\u52a8\u5f00\u53d1 Test-Driven Development (TDD)\uff0c</p> <p></p> <p>\u5927\u6982\u610f\u601d\u662f\uff0c\u5982\u679c\u8981\u5b9e\u73b0\u4e00\u4e2a\u529f\u80fd\uff0c\u5148\u786e\u5b9a\u7279\u5f81\uff0c\u518d\u6839\u636e\u8fd9\u4e2a\u7279\u5f81\u7f16\u5199\u6d4b\u8bd5\u4f8b\u5b50\uff0c\u4e00\u5f00\u59cb\u8fd0\u884c\u65e0\u6cd5\u901a\u8fc7\u6d4b\u8bd5\uff0c\u6240\u4ee5\u7f16\u5199\u4ee3\u7801\u4ee5\u901a\u8fc7\u6d4b\u8bd5\uff0c\u7136\u540e\u518d\u6539\u8fdb\u4ee3\u7801\uff0c\u5faa\u73af\u5f80\u590d</p>"},{"location":"Notes%20of%20Courses/CS61B/CS61B/#lecture-3-qa","title":"Lecture 3 Q&amp;A","text":""},{"location":"Notes%20of%20Courses/CS61B/CS61B/#1_6","title":"1","text":"<p>\u6709\u4eba\u63d0\u95eepython\u4e2d\u7684 <code>is</code> \u548c <code>==</code> \u5206\u522b\u5bf9\u5e94java\u4e2d\u7684\u4ec0\u4e48\uff0c</p> <p>Josh\u8bf4\uff0cjava\u4e2d <code>==</code> \u7c7b\u4f3c\u4e8epython\u4e2d\u7684 <code>is</code> (\u4f1a\u68c0\u67e5\u5bf9\u8c61\u7684\u5730\u5740)\uff0c\u800cjava\u4e2d\u7c7b\u7684 <code>.equals()</code> \u65b9\u6cd5\u7c7b\u4f3c\u4e8epython\u4e2d\u7684 <code>==</code> (python\u4e2d\u81ea\u5b9a\u4e49\u7c7b\u9700\u8981\u5b9e\u73b0 <code>__eq__</code> \u65b9\u6cd5)</p> <p>\u5728java\u4e2d\uff0c\u5982\u679c\u6ca1\u6709\u91cd\u5199 <code>equals</code> \u65b9\u6cd5\uff0c\u90a3\u4e48\u9ed8\u8ba4\u7684 <code>equals</code> \u65b9\u6cd5\u662f\u68c0\u67e5\u5730\u5740</p>"},{"location":"Notes%20of%20Courses/CS61B/CS61B/#2_4","title":"2","text":"<p>\u6709\u4eba\u63d0\u95ee\uff0cJosh\u6f14\u793a</p> <pre><code>System.out.println(5 + 6 + \"hi\" + 5 + 6);\n</code></pre> <p>\u6700\u540e\u663e\u793a\u51fa\u6765\u662f <code>11hi56</code> \uff0c</p> <p>\u4e8e\u662f\u53d1\u73b0java\u662f\u4ece\u5de6\u5f80\u53f3\u8fdb\u884c\u8fd0\u7b97\uff0c\u4e00\u5f00\u59cb <code>5 + 6</code> \u5f97\u5230 <code>11</code> \uff0c\u7136\u540e <code>+ \"hi\"</code> \u5f97\u5230 <code>\"11hi\"</code> \uff0c\u56e0\u6b64\u6700\u540e\u5c31\u4f1a\u5f97\u5230 <code>\"11hi56\"</code></p>"},{"location":"Notes%20of%20Courses/CS61B/CS61B/#lecture-4-references-recursion-and-lists","title":"Lecture 4 References, Recursion, and Lists","text":""},{"location":"Notes%20of%20Courses/CS61B/CS61B/#1_7","title":"1","text":"<p>\u5982\u679c\u81ea\u5b9a\u4e49\u5bf9\u8c61\u5b9e\u4f8b\u8d4b\u503c\u7ed9\u4e00\u4e2a\u65b0\u7684\u53d8\u91cf\uff0c\u5e76\u4f7f\u7528\u65b0\u7684\u53d8\u91cf\u6765\u4fee\u6539\u5c5e\u6027\uff0c\u90a3\u4e48\u4fee\u6539\u7684\u662f\u539f\u5b9e\u4f8b\u672c\u8eab\u7684\u5c5e\u6027\uff0c\u4f8b\u5982</p> <pre><code>Walrus a = new Walrus(1000, 8.3);\nWalrus b;\nb = a;\nb.weight = 5;\nSystem.out.println(a);\nSystem.out.println(b);\n</code></pre> <pre><code>weight: 5, tusk size: 8.30\nweight: 5, tusk size: 8.30\n</code></pre>"},{"location":"Notes%20of%20Courses/CS61B/CS61B/#lecture-4-qa","title":"Lecture 4 Q&amp;A","text":""},{"location":"Notes%20of%20Courses/CS61B/CS61B/#1_8","title":"1","text":"<p>java\u4e2d\u7684String\u5b57\u7b26\u4e32(\u521b\u5efa\u540e)\u4e0d\u80fd\u88ab\u4fee\u6539</p>"},{"location":"Notes%20of%20Courses/CS61B/CS61B/#2_5","title":"2","text":"<p>java\u4e2d\u53ef\u4ee5\u4f7f\u7528\u4e09\u76ee\u8fd0\u7b97\u7b26(\u548cc\u4e2d\u4e00\u6837)</p>"},{"location":"Notes%20of%20Courses/CS61B/CS61B/#lab-2","title":"Lab 2","text":""},{"location":"Notes%20of%20Courses/CS61B/CS61B/#1_9","title":"1","text":"<p>\u5728Lab 2 Setup\u7684One-Time Setup\u4e2d\uff0c\u9700\u8981\u5728IDEA\u7684\u4e3b\u754c\u9762(\u6ca1\u6709\u6253\u5f00\u9879\u76ee\u7684\u754c\u9762)\u4e2d\u6253\u5f00\u8bbe\u7f6e\uff0c</p> <p>windows\u4e2d\u53ef\u4ee5\u4f7f\u7528 Ctrl+Alt+S \u6253\u5f00\u8bbe\u7f6e\u754c\u9762\uff0c\u4e5f\u53ef\u4ee5\u5728 <code>\u81ea\u5b9a\u4e49 &gt; \u6240\u6709\u8bbe\u7f6e...</code> \u4e2d\u6253\u5f00\u8bbe\u7f6e\u754c\u9762</p> <p>\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u5728\u65b0\u7248\u7684IDEA\u4e2d\uff0c\u8981\u628a\u300e\u4f7f\u7528 .mvn/maven.config \u4e2d\u7684\u8bbe\u7f6e\u300f\u8fd9\u4e2a\u9009\u9879==\u53bb\u6389\u52fe\u9009==(\u9ed8\u8ba4\u662f\u52fe\u9009\u4e0a\u7684)\uff0c\u5426\u5219\u300e\u672c\u5730\u4ed3\u5e93\u300f\u8bbe\u7f6e\u7684\u91cd\u5199\u7684\u66f4\u6539\u4e0d\u4f1a\u5e94\u7528\u5230\u6bcf\u4e2a\u65b0\u7684\u9879\u76ee\u4e0a</p> <p></p>"},{"location":"Notes%20of%20Courses/CS61B/CS61B/#2_6","title":"2","text":"<p>\u4e00\u5f00\u59cb\u6211\u4f7f\u7528\u7684jdk\u662f\u4e4b\u524d\u5b89\u88c5\u7684azul zulu\u7684jdk\uff0c\u4f46\u662flab 2 setup\u4e00\u76f4\u65e0\u6cd5\u914d\u7f6e\u597dmaven\uff0c</p> <p>\u4e8e\u662f\u5c31\u53bb\u88c5\u4e86oracel\u7684openjdk 17\uff0c\u6700\u540e\u5c31\u53ef\u4ee5\u8fd0\u884c\u4e86</p>"},{"location":"Notes%20of%20Courses/CS61B/CS61B/#3_4","title":"3","text":"<p>This is because JUnit tests are short-circuiting \u2013 as soon as one of the asserts in a method fails, it will output the failure and move on to the next test.</p> <p>\u5982\u679c\u6d4b\u8bd5\u7684\u51fd\u6570(\u6dfb\u52a0\u4e86 <code>@Test</code> \u7684\u51fd\u6570)\u4e2d\uff0c\u6709\u4e00\u4e2a <code>assert</code> \u9519\u4e86\uff0c\u90a3\u4e48\u5c31\u4f1a\u76f4\u63a5\u62a5\u9519\uff0c\u7136\u540e\u8fdb\u884c\u4e0b\u4e00\u4e2a\u8981\u6d4b\u8bd5\u7684\u51fd\u6570</p>"},{"location":"Notes%20of%20Courses/CS61B/CS61B/#4_4","title":"4","text":"<p>\u4ece <code>IntList.java</code> \u7684 <code>of</code> \u51fd\u6570\u4e2d\u53d1\u73b0\uff0cjava\u4e2d\u5728\u58f0\u660e\u51fd\u6570\u65f6\uff0c\u53ef\u4ee5\u4f7f\u7528 <code>...</code> \u6765\u4ee5\u6570\u7ec4\u7684\u5f62\u5f0f\u83b7\u53d6\u4f20\u5165\u7684\u591a\u4e2a\u53c2\u6570(\u7c7b\u4f3c\u4e8epython\u4e2d\u7684 <code>*args</code> )\uff0c\u4f8b\u5982</p> <pre><code>public static int max(int ...argList) {\n    int result = 0;\n    for (int i = 0; i &lt; argList.length; i++) {\n        if (argList[i] &gt; result) {\n            result = argList[i];\n        }\n    }\n    return result;\n}\n</code></pre>"},{"location":"Notes%20of%20Courses/CS61B/CS61B/#5_3","title":"5","text":"<p>\u6700\u540e\u53d1\u73b0 <code>DebugExercise2.java</code> \u4e2d\u7684 <code>max</code> \u9700\u8981\u4fee\u6539(\u6539\u6210\u80fd\u6b63\u786e\u8fd4\u56de\u6700\u5927\u503c)\uff0c\u5426\u5219gradescope\u4e0a\u7684 <code>b001) DebugExercise: Hidden Test 1</code> \u8fd9\u4e2a\u6d4b\u8bd5\u5c31\u901a\u8fc7\u4e0d\u4e86</p>"},{"location":"Notes%20of%20Courses/CS61B/CS61B/#lecture-5-sllists-nested-classes-sentinel-nodes","title":"Lecture 5 SLLists, Nested Classes, Sentinel Nodes","text":""},{"location":"Notes%20of%20Courses/CS61B/CS61B/#1_10","title":"1","text":"<p>Josh\u8bf4\uff0c\u5982\u679c\u5d4c\u5957\u7684\u7c7b\uff0c\u91cc\u9762\u7684\u7c7b\u5982\u679c\u4e0d\u9700\u8981\u8bbf\u95ee\u5916\u9762\u7c7b\u7684\u5c5e\u6027\uff0c\u90a3\u4e48\u53ef\u4ee5\u52a0\u4e0a <code>static</code> \u5173\u952e\u5b57\uff0c\u597d\u5904\u662f\u53ef\u4ee5\u8282\u7701\u4e00\u4e9b\u7a7a\u95f4\uff0c\u4f8b\u5982</p> <pre><code>public class SLList {\n    private static class IntNode {\n        public int item;\n        public IntNode next;\n        public IntNode(int i, IntNode n) {\n            item = i;\n            next = n;\n        }\n        ...\n    }\n}\n</code></pre> <p>\u4e2a\u4eba\u7406\u89e3\u662f\uff0c\u5982\u679c\u662fnon-static\uff0c\u90a3\u4e48\u6bcf\u6b21\u5b9e\u4f8b\u5316\u5916\u9762\u7684\u7c7b\u65f6\uff0c\u90fd\u4f1a\u7ed9\u5b9e\u4f8b\u6dfb\u52a0\u8fd9\u4e2a\u5c5e\u6027\uff0c\u5982\u679c\u662fstatic\uff0c\u90a3\u4e48\u5c31\u4e0d\u4f1a\u8fd9\u6837</p>"},{"location":"Notes%20of%20Courses/CS61B/CS61B/#2_7","title":"2","text":"<p>Josh\u63d0\u5230\uff0cjava\u4ee3\u7801\u4e2d\u4e00\u4e2a <code>public</code> \u7684\u51fd\u6570\u914d\u4e00\u4e2a <code>private</code> \u7684\u540c\u540dhelper\u51fd\u6570\u5f88\u5e38\u89c1</p>"},{"location":"Notes%20of%20Courses/CS61B/CS61B/#3_5","title":"3","text":"<p>\u5982\u679c\u9700\u8981\u521b\u5efa\u7a7a\u94fe\u8868\uff0c\u53ef\u4ee5\u7ed9\u94fe\u8868\u6dfb\u52a0 \u54e8\u5175\u8282\u70b9 sentinel node (\u5373\u7a7a\u7684\u5934\u8282\u70b9)\uff0c\u5c31\u53ef\u4ee5\u5728\u5b9e\u73b0\u94fe\u8868\u7684\u5176\u4ed6\u529f\u80fd\u65f6\uff0c\u907f\u514d\u5904\u7406\u7a7a\u94fe\u8868\u7684\u7279\u6b8a\u60c5\u51b5</p>"},{"location":"Notes%20of%20Courses/CS61B/CS61B/#lecture-5-qa","title":"Lecture 5 Q&amp;A","text":""},{"location":"Notes%20of%20Courses/CS61B/CS61B/#1_11","title":"1","text":"<p>\u6709\u4eba\u63d0\u95ee\u5173\u4e8eJosh\u8bfe\u4e0a\u8bf4\u7684\uff0c\u5d4c\u5957\u5728\u5185\u90e8\u5b9a\u4e49\u7684\u7c7b\uff0c\u5982\u679c\u628a\u7c7b\u8bbe\u7f6e\u6210\u4e86 <code>private</code> \u7684\u5c5e\u6027\uff0c\u90a3\u4e48\u7c7b\u7684\u6210\u5458\u8bbe\u7f6e\u6210 <code>public</code> \u8fd8\u662f <code>private</code> \u90fd\u5dee\u522b\u4e0d\u5927\uff0c</p> <p>Josh\u56de\u7b54\uff0c\u56e0\u4e3a\u7c7b\u8bbe\u7f6e\u6210 <code>private</code> \u4e4b\u540e\uff0c\u91cc\u9762\u7684\u65b9\u6cd5\u548c\u5c5e\u6027(\u5728\u5916\u5c42\u7684\u7c7b\u4e4b\u5916)\u5c31\u90fd\u65e0\u6cd5\u8bbf\u95ee\u5230\u4e86(\u5e94\u8be5\u662f\u8fde\u6784\u9020\u65b9\u6cd5\u4e5f\u65e0\u6cd5\u8bbf\u95ee\u5230)\uff0c\u6240\u4ee5\u6210\u5458\u7684\u5c5e\u6027\u662f <code>public</code> \u8fd8\u662f <code>private</code> \u90fd\u4e00\u6837</p>"},{"location":"Notes%20of%20Courses/CS61B/CS61B/#lecture-6-dllists-arrays","title":"Lecture 6 DLLists, Arrays","text":""},{"location":"Notes%20of%20Courses/CS61B/CS61B/#1_12","title":"1","text":"<p>\u4ecb\u7ecd\u4e86\u53cc\u5411\u94fe\u8868 doubly linked list (DLList) (\u4e0e\u4e4b\u5bf9\u5e94\u7684\u662f\u5355\u5411\u94fe\u8868 singly linked list (SLList) )\uff0c\u4e3a\u4e86\u907f\u514d\u53cc\u5411\u94fe\u8868\u7684\u5934\u548c\u5c3e\u90fd\u6307\u5411\u540c\u4e00\u4e2a\u54e8\u5175\u8282\u70b9\u7684\u60c5\u51b5\uff0c</p> <p></p> <p>\u63d0\u5230\u4e86\u4e24\u79cd\u89e3\u51b3\u65b9\u6cd5\uff0c</p> <ul> <li> <p>\u8bbe\u7f6e\u4e24\u4e2a\u54e8\u5175\u8282\u70b9</p> <p></p> </li> <li> <p>\u6216\u8005\uff0c\u8bbe\u7f6e\u6210\u5faa\u73af\u7684\u53cc\u5411\u94fe\u8868</p> <p></p> </li> </ul>"},{"location":"Notes%20of%20Courses/CS61B/CS61B/#2_8","title":"2","text":"<p>\u5982\u679c\u60f3\u8981\u94fe\u8868\u7ed3\u6784\u50a8\u5b58\u4e0d\u540c\u7684\u6570\u636e\u7c7b\u578b(\u800c\u4e0d\u91cd\u590d\u5b9e\u73b0\u4ee3\u7801)\uff0c\u53ef\u4ee5\u5728\u5b9a\u4e49\u7c7b\u65f6\uff0c\u5728\u7c7b\u540d\u540e\u4f7f\u7528 <code>&lt;...&gt;</code> \u6dfb\u52a0\u81ea\u5b9a\u4e49\u540d\u79f0\uff0c\u4e4b\u540e\u5728\u58f0\u660e\u5bf9\u5e94\u53d8\u91cf\u7684\u6570\u636e\u7c7b\u578b\u65f6\uff0c\u90fd\u4f7f\u7528\u8fd9\u4e2a\u540d\u79f0\uff0c\u4f8b\u5982</p> <pre><code>public class SLList&lt;LochNess&gt; {\n    private class StuffNode {\n        public LochNess item;\n        public StuffNode next;\n\n        public StuffNode(LochNess i, StuffNode n) {\n            item = i;\n            next = n;\n        }\n    }\n\n    private StuffNode first;\n    private int size;\n\n    public SLList(LochNess x) {\n        first = new StuffNode(x, null);\n        size = 1;\n    }\n\n    ...\n}\n</code></pre> <p>\u4f7f\u7528\u8fd9\u4e2a\u7c7b\u65f6\uff0c\u5219\u9700\u8981\u5728 <code>&lt;&gt;</code> \u4e2d\u6dfb\u52a0\u6570\u636e\u7c7b\u578b</p> <pre><code>SLList&lt;String&gt; s1 = new SLList&lt;String&gt;(\"bone\");\n</code></pre> <p>\u4e5f\u53ef\u4ee5\u5c06\u6784\u9020\u51fd\u6570\u7684 <code>String</code> \u53bb\u9664</p> <pre><code>SLList&lt;String&gt; s1 = new SLList&lt;&gt;(\"bone\");\n</code></pre>"},{"location":"Notes%20of%20Courses/CS61B/CS61B/#3_6","title":"3","text":"<p>java\u4e2d\u521b\u5efa\u6570\u7ec4\u76843\u79cd\u65b9\u6cd5\uff0c</p> <pre><code>y = new int[3];\n</code></pre> <pre><code>x = new int[] {1, 2, 3, 4, 5};\n</code></pre> <pre><code>int[] w = {9, 10, 11, 12, 13};\n</code></pre> <p>\u4f46\u9700\u8981\u6ce8\u610f\u7b2c3\u79cd\u65b9\u6cd5\u4e0d\u80fd\u5bf9\u5df2\u7ecf\u58f0\u660e\u7684\u53d8\u91cf\u4f7f\u7528</p>"},{"location":"Notes%20of%20Courses/CS61B/CS61B/#4_5","title":"4","text":"<p><code>System.arraycopy</code> \u7684\u7528\u6cd5\uff0c</p> <p>Takes 5 parameters:</p> <ul> <li>Source array</li> <li>Start position in source</li> <li>Target array</li> <li>Start position in target</li> <li>Number to copy</li> </ul> <p>\u4ee5 <code>System.arraycopy(b, 0, x, 3, 2)</code> \u4e3a\u4f8b\uff0c</p> <ul> <li><code>b</code> \u662f\u8981\u590d\u5236\u7684\u6570\u7ec4</li> <li><code>0</code> \u662f <code>b</code> \u4e2d\u5f00\u59cb\u590d\u5236\u7684\u4e0b\u6807</li> <li><code>x</code> \u662f\u8981\u7c98\u8d34\u590d\u5236\u5185\u5bb9\u7684\u6570\u7ec4</li> <li><code>3</code> \u662f <code>x</code> \u4e2d\u5f00\u59cb\u7c98\u8d34\u7684\u4e0b\u6807</li> <li><code>2</code> \u662f\u590d\u5236\u7684\u5143\u7d20\u4e2a\u6570</li> </ul> <p>\u5982\u679c <code>b</code> \u662f <code>{9, 10, 11}</code> \uff0c<code>x</code> \u662f <code>{-1, 2, 5, 4, 99}</code> \uff0c</p> <p>\u90a3\u4e48\u590d\u5236\u540e <code>x</code> \u5c31\u53d8\u6210 <code>{-1, 2, 5, 9, 10}</code> </p>"},{"location":"Notes%20of%20Courses/CS61B/CS61B/#5_4","title":"5","text":"<p>java\u4e2d\uff0c\u4e8c\u7ef4\u6570\u7ec4\u7684\u6bcf\u4e2a\u5143\u7d20\u662f\u4e00\u7ef4\u6570\u7ec4\u7684\u5730\u5740\uff0c\u6240\u4ee5\u540c\u4e00\u4e2a\u4e8c\u7ef4\u6570\u7ec4\u4e2d\u53ef\u4ee5\u5b58\u50a8\u4e0d\u540c\u957f\u5ea6\u7684\u4e00\u7ef4\u6570\u7ec4</p> <p></p>"},{"location":"Notes%20of%20Courses/CS61B/CS61B/#lecture-7-alists-resizing-vs-slists","title":"Lecture 7 ALists, Resizing, vs. SLists","text":""},{"location":"Notes%20of%20Courses/CS61B/CS61B/#1_13","title":"1","text":"<p>\u8bfe\u4e0a\u8bf4\u5230 \u987a\u5e8f\u8868 (\u57fa\u4e8e\u6570\u7ec4\u7684\u5217\u8868) array based list (AList) \u7531\u4e8e\u5728\u5b58\u50a8\u6570\u636e\u4e2a\u6570\u8fbe\u5230\u6570\u7ec4\u957f\u5ea6\u65f6\u9700\u8981\u66f4\u6362\u4e00\u4e2a\u66f4\u5927\u7684\u6570\u7ec4\uff0c\u4f46\u5982\u679c\u6bcf\u6b21\u6269\u5c55\u90fd\u53ea\u589e\u52a0\u56fa\u5b9a\u7684\u957f\u5ea6\uff0c\u90a3\u4e48\u6570\u636e\u91cf\u5927\u65f6\u7a0b\u5e8f\u5c31\u4f1a\u8fd0\u884c\u6bd4\u8f83\u6162\uff0c\u6240\u4ee5\u63d0\u5230\u6bcf\u6b21\u6269\u5c55\u53ef\u4ee5\u6269\u5c55\u6210\u4e4b\u524d\u957f\u5ea6\u76842\u500d</p>"},{"location":"Notes%20of%20Courses/CS61B/CS61B/#2_9","title":"2","text":"<p>\u5728\u628a\u987a\u5e8f\u8868\u6539\u9020\u6210 \u6cdb\u578b\u987a\u5e8f\u8868 \u65f6\uff0c\u5728\u6784\u9020\u6570\u7ec4\u65f6\uff0c</p> <pre><code>public class AList&lt;Item&gt; {\n    private Item[] items;\n    private int size;\n\n    public AList() {\n        items = new Item[100];\n        size = 0;\n    }\n}\n</code></pre> <p><code>new Item[100]</code> IDEA\u62a5\u9519(\u4f1a\u5f15\u8d77generic array creation\u7684\u9519\u8bef)\uff0c\u800c\u9700\u8981\u6539\u6210</p> <pre><code>items = (Item[]) new Object[100];\n</code></pre>"},{"location":"Notes%20of%20Courses/CS61B/CS61B/#3_7","title":"3","text":"<p>\u7531\u4e8e\u5728java\u4e2d\uff0c\u5bf9\u8c61\u53ea\u6709\u5931\u53bb\u6700\u540e\u4e00\u4e2a\u6307\u5411 reference\u65f6\uff0c\u624d\u4f1a\u88ab\u56de\u6536\u7a7a\u95f4\uff0c\u6240\u4ee5\u5728\u6cdb\u578b\u987a\u5e8f\u8868\u7684\u5220\u9664\u65b9\u6cd5\u4e2d\uff0c\u9700\u8981\u628a\u6570\u7ec4\u4e2d(\u9700\u8981\u5220\u53bb\u7684)\u6700\u540e\u4e00\u4e2a\u5143\u7d20\u6307\u5411 <code>null</code></p>"},{"location":"Notes%20of%20Courses/CS61B/CS61B/#lab-3","title":"Lab 3","text":""},{"location":"Notes%20of%20Courses/CS61B/CS61B/#1_14","title":"1","text":"<p>\u5f02\u5e38\u65ad\u70b9\u7684\u4f7f\u7528\uff0c</p> <p>\u5728 \u8fd0\u884c --- \u67e5\u770b\u65ad\u70b9 \u4e2d\u6253\u5f00\uff0c\u6216\u8005\u4f7f\u7528 Ctrl+Shift+F8 \u6253\u5f00\uff0c</p> <p></p> <p>\u9009\u4e2d(\u4efb\u4f55\u5f02\u5e38)\u65ad\u70b9\uff0c\u8fd8\u53ef\u4ee5\u5728\u300e\u6761\u4ef6\u300f\u4e2d\u6dfb\u52a0\u5224\u65ad\u7684\u6761\u4ef6</p> <p>\u5982</p> <pre><code>this instanceof java.lang.ArrayIndexOutOfBoundsException\n</code></pre>"},{"location":"Notes%20of%20Courses/CS61B/CS61B/#lecture-8-inheritance-implements","title":"Lecture 8 Inheritance, Implements","text":""},{"location":"Notes%20of%20Courses/CS61B/CS61B/#1_15","title":"1","text":"<p>\u63a5\u53e3 interface \u7684\u4f7f\u7528\u65b9\u6cd5\uff0c\u4f8b\u5982</p> <p>\u5148\u5b9e\u73b0\u4e00\u4e2a\u63a5\u53e3(\u4f7f\u7528 <code>interface</code> \u5173\u952e\u5b57)\uff0c</p> <pre><code>public interface List61B&lt;Item&gt; {\n    public void addFirst(Item x);\n    public void addLast(Item y);\n    public Item getFirst();\n    public Item getLast();\n    public Item removeLast();\n    public Item get(int i);\n    public void insert(Item x, int position);\n    public in size();\n}\n</code></pre> <p>\u7136\u540e\u4e4b\u524d\u7684SLList\u548cAList\u7c7b\u5c31\u53ef\u4ee5\u6dfb\u52a0\u4e0a <code>implements List61B&lt;...&gt;</code></p> <pre><code>public class AList&lt;Item&gt; implements List61B&lt;Item&gt; {\n    ...\n}\n</code></pre> <pre><code>public class SLList&lt;BLorp&gt; implements List61B&lt;Blorp&gt; {\n    ...\n}\n</code></pre> <p>\u800c\u518d\u5c06\u51fd\u6570\u4f20\u5165\u7684\u53c2\u6570\u6539\u6210 <code>List61B&lt;String&gt; list</code> (\u539f\u6765\u662f <code>SLList</code> \u6216 <code>AList</code> )\uff0c\u90a3\u4e48\u5728\u8c03\u7528\u8fd9\u4e2a\u51fd\u6570\u65f6\uff0c\u4f20\u5165SLList\u6216\u8005AList\u5b9e\u4f8b\u90fd\u53ef\u4ee5</p> <p></p> <p>\u7ee7\u627f\u63a5\u53e3\u7684\u5b50\u7c7b\u5fc5\u987b\u5b9e\u73b0\u63a5\u53e3\u7684\u6240\u6709\u65b9\u6cd5</p>"},{"location":"Notes%20of%20Courses/CS61B/CS61B/#2_10","title":"2","text":"<ul> <li>Override \u8986\u5199 \u6307\u7684\u662f\u5b50\u7c7b\u5728\u7c7b\u4e2d\u91cd\u65b0\u91cd\u65b0\u5b9e\u73b0\u7236\u7c7b\u6216\u8005\u63a5\u53e3\u4e2d\u7684\u65b9\u6cd5</li> <li>Overload \u91cd\u8f7d \u6307\u7684\u662f\u540c\u4e00\u4e2a\u51fd\u6570\u88ab\u91cd\u590d\u591a\u6b21\u5b9e\u73b0(\u53ef\u4ee5\u662f\u5728\u4e0d\u540c\u7684\u5b50\u7c7b\u4e2d)</li> </ul>"},{"location":"Notes%20of%20Courses/CS61B/CS61B/#3_8","title":"3","text":"<p><code>@Override</code> \u6ce8\u91ca\uff0c\u4f5c\u7528\u662f\u53ea\u6709\u51fd\u6570\u662f\u8986\u5199\u7236\u7c7b\u6216\u63a5\u53e3\u7684\u51fd\u6570\u65f6\uff0c\u624d\u4f1a\u88ab\u7f16\u8bd1</p> <p>Why use <code>@Override</code> ?</p> <ul> <li>Main reason: Protects against typos.<ul> <li>If you say <code>@Override</code> , but it the method isn't actually overriding anything, you'll get a compile error.</li> <li>e.g. <code>public void addLats(Item x)</code></li> </ul> </li> <li>Reminds programmer that method definition came from somewhere higher up in the inheritance hierarchy.</li> </ul>"},{"location":"Notes%20of%20Courses/CS61B/CS61B/#4_6","title":"4","text":"<p>Implementation Inheritance \u5b9e\u73b0\u7ee7\u627f\uff0c\u4f7f\u7528 <code>default</code> \u5173\u952e\u5b57\uff0c\u53ef\u4ee5\u5728\u63a5\u53e3\u4e2d\u5b9e\u73b0\u51fd\u6570\uff0c\u5e76\u4e14\u5b50\u7c7b\u80fd\u7ee7\u627f\u5df2\u7ecf\u5b9e\u73b0\u597d\u7684\u51fd\u6570(\u5c31\u53ef\u4ee5\u4e0d\u7528\u8986\u5199)\uff0c\u4f8b\u5982</p> <pre><code>default public void print() {\n    for (int i = 0; i &lt; size(); i += 1) {\n        System.out.print(get(i) + \" \");\n    }\n    System.out.println();\n}\n</code></pre> <p>\u7531\u4e8e\u662f\u5728\u63a5\u53e3\u4e2d\u5b9e\u73b0\uff0c\u6240\u4ee5\u53ea\u80fd\u4f7f\u7528\u63a5\u53e3\u4e2d\u7684\u65b9\u6cd5</p>"},{"location":"Notes%20of%20Courses/CS61B/CS61B/#5_5","title":"5","text":"<p>\u5982\u679c\u58f0\u660e\u7684\u662f\u7236\u7c7b\u7684\u53d8\u91cf\uff0c\u4f46\u6307\u5411\u7684\u662f\u5b50\u7c7b\u7684\u5b9e\u4f8b\uff0c\u5728\u4f7f\u7528\u8fd9\u4e2a(\u7236\u7c7b\u7c7b\u578b\u7684)\u53d8\u91cf\u8c03\u7528\u8986\u5199\u7684\u65b9\u6cd5\u65f6\uff0c\u7531\u4e8e \u52a8\u6001\u65b9\u6cd5\u9009\u62e9 Dynamic Method Selection\uff0c\u6700\u7ec8\u8fd0\u884c\u65f6\u8fd0\u884c\u7684\u4f1a\u662f\u5b9e\u9645\u5b50\u7c7b\u5b9e\u4f8b\u7684\u65b9\u6cd5</p> <p></p> <p>\u5982\u679c\u5728\u5b50\u7c7b\u4e2d\u53ea\u662f\u91cd\u8f7d\u800c\u6ca1\u6709\u8986\u5199\u7684\u65b9\u6cd5\uff0c\u90a3\u4e48\u5982\u679c\u53d8\u91cf\u58f0\u660e\u65f6\u662f\u7236\u7c7b\u7684\u7c7b\u578b\uff0c\u5728\u8c03\u7528\u91cd\u8f7d\u7684\u65b9\u6cd5\u65f6\uff0c\u5c31\u4f1a\u8c03\u7528\u7236\u7c7b\u7684\u65b9\u6cd5\uff0c\u800c\u5982\u679c\u662f\u5b50\u7c7b\u7684\u7c7b\u578b\u5c31\u4f1a\u8c03\u7528\u5b50\u7c7b\u7684\u65b9\u6cd5(\u5982\u4e0a\u56fe\u4e2d\uff0c\u4ece\u7236\u7c7b\u548c\u5b50\u7c7b\u7684\u65b9\u6cd5\u4e2d\u4f20\u5165\u7684\u53c2\u6570\u4e0d\u4e00\u81f4\u53ef\u4ee5\u770b\u51fa\u662f\u91cd\u8f7d\uff0c\u6240\u4ee5 <code>a.praise(d)</code> \u8c03\u7528\u7684\u662f <code>Animal</code> \u7c7b\u7684\u65b9\u6cd5)</p> <p>\u6559\u6388\u7684\u89e3\u91ca\uff1a</p> <p>this praise method, it's overloaded, not overriden. Notice that this is not the same method signature in the dog class, it's not praise animal in the dog class, it's praise dog in the dog class. This is actually a totally new method, so it's not overriding, it's overloading. The other praise method in this dog class</p> <p>Josh\u8bf4\u9053\uff0c\u53e6\u4e00\u79cd\u52a8\u6001\u65b9\u6cd5\u9009\u62e9\u7684\u7406\u89e3\u662f\uff0c\u628a\u5b83\u5f53\u6210\u662f\u4e00\u4e2a\u4e24\u6b65\u7684\u5904\u7406\u8fc7\u7a0b\uff0c\u7b2c\u4e00\u6b65\u5728\u7f16\u8bd1\u65f6\u53d1\u751f\uff0c\u7b2c\u4e8c\u6b65\u5728\u8fd0\u884c\u65f6\u53d1\u751f</p> <ul> <li>At compile time: We determine the signature S of the method to be called.<ul> <li>S is decided using ONLY static types.</li> </ul> </li> <li>At runtime: The dynamic type of the invoking object uses its method with this exact signature S.</li> </ul> <p>\u5982\u4e0a\u56fe\u4e2d\u7684\u4f8b\u5b50</p> <pre><code>Animal a = new Dog();\nDog d = new Dog();\na.greet(d);  // greet(Animal a)\na.sniff(d);  // sniff(Animal a)\nd.praise(d); // praise(Dog a)\na.praise(d); // praise(Animal a)\n</code></pre> <p>\u5728\u7f16\u8bd1\u65f6\uff0c\u4f1a\u53d8\u91cf\u7684\u6570\u636e\u7c7b\u578b\u4ee5\u53ca\u8c03\u7528\u65b9\u6cd5\u65f6\u4f20\u5165\u7684\u53c2\u6570\u786e\u5b9a\u8c03\u7528\u7684\u51fd\u6570\uff0c\u5982 <code>a.praise(d)</code> \u4e2d <code>a</code> \u662f <code>Animal</code> \uff0c\u6240\u4ee5\u4f1a\u5bfb\u627e <code>Animal</code> \u7c7b\u4e2d\u7684\u65b9\u6cd5\uff0c\u6839\u636e\u4f20\u5165\u7684\u53c2\u6570 <code>d</code> \u662f <code>Animal</code> (\u7684\u5b50\u7c7b)\uff0c\u6240\u4ee5\u786e\u5b9a\u8c03\u7528\u7684\u65b9\u6cd5\u4e3a <code>praise(Animal a)</code> \uff0c</p> <p>\u5728\u8fd0\u884c\u65f6\uff0c\u518d\u6839\u636e\u5177\u4f53\u53d8\u91cf\u6307\u5411\u7684\u5b9e\u4f8b\u8c03\u7528\u5bf9\u5e94\u7684\u65b9\u6cd5\uff0c\u5982 <code>a.sniff(d)</code> \u5728\u7f16\u8bd1\u65f6\u786e\u5b9a\u65b9\u6cd5\u4e3a <code>sniff(Animal a)</code> \uff0c\u800c\u5b9e\u4f8b <code>a</code> ( <code>Dog</code> \u7c7b)\u4e2d\u6709\u5bf9\u5e94\u7684\u65b9\u6cd5\uff0c\u6240\u4ee5\u8c03\u7528\u7684\u5c31\u662f <code>Dog</code> \u7c7b\u7684 <code>sniff</code> \u65b9\u6cd5</p>"},{"location":"Notes%20of%20Courses/CS61B/CS61B/#6_1","title":"6","text":"<pre><code>import java.util.List;\nimport java.util.ArrayList;\n</code></pre> <p>\u53ef\u4ee5\u5bfc\u5165java\u5df2\u7ecf\u5b9e\u73b0\u597d\u7684\u94fe\u8868\u7c7b</p>"},{"location":"Notes%20of%20Courses/CS61B/CS61B/#lecture-8-qa","title":"Lecture 8 Q&amp;A","text":""},{"location":"Notes%20of%20Courses/CS61B/CS61B/#1_16","title":"1","text":"<p>\u6709\u4eba\u63d0\u95ee\u5173\u4e8ejava\u4e2d\u7c7b\u578b\u8f6c\u6362 Casting\u7684\u95ee\u9898</p> <pre><code>Bird bird = new Falcon();\nFalcon falcon = (Falcon) bird;\n</code></pre> <p>\u8fd9\u4e24\u884c\u4ee3\u7801(\u8bbe\u7f6e\u7684\u53d8\u91cf)\u5bf9\u5e94\u7684\u9759\u6001\u7c7b\u578b\u548c\u52a8\u6001\u7c7b\u578b\u662f\u8fd9\u6837\uff0c</p> Static Type Dynamic Type <code>bird</code> Bird Falcon <code>falcon</code> Falcon Falcon <p>\u7136\u540eJosh\u5bf9\u4ee3\u7801\u7a0d\u52a0\u4fee\u6539\uff0c</p> <pre><code>Bird bird = (Bird) new Falcon();\nFalcon falcon = (Falcon) bird;\n</code></pre> <p>\u7136\u540e\u8bf4\u9053\u7b2c\u4e00\u884c\u52a0\u4e0a <code>(Bird)</code> \u4e5f\u4e0d\u4f1a\u6539\u53d8\u5bf9\u5e94\u7684\u9759\u6001\u7c7b\u578b\u548c\u52a8\u6001\u7c7b\u578b\uff0c</p> <p>in fact, a cast doesn't change anything, it never changes anything. When I think about a cast as I'll say in lecture 9 is, it tells the compiler don't do your normal type checking, I know what I'm doing. It doesn't actually change anything, it just says for the purposes of type checking pretend this is a bird.</p>"},{"location":"Notes%20of%20Courses/CS61B/CS61B/#2_11","title":"2","text":"<p>\u6709\u4eba\u5411Josh\u63d0\u95ee\u4e00\u9898\uff0c\u8981\u6c42\u53ea\u4fee\u6539\u539f\u65b9\u9635(\u4e0d\u521b\u5efa\u65b0\u77e9\u9635)\u4f7f\u77e9\u9635\u65cb\u8f6c90\u00b0\uff0c\u7b54\u6848\u7684\u505a\u6cd5\u5927\u6982\u662f\uff0c\u56e0\u4e3a\u65b9\u9635\u4e2d\u7684\u6bcf\u4e2a\u4f4d\u7f6e\u65cb\u8f6c4\u6b21\u5c31\u4f1a\u56de\u5230\u539f\u6765\u7684\u4f4d\u7f6e\uff0c\u6240\u4ee5\u628a\u6bcf\u4e2a\u5143\u7d20\u66ff\u6362\u5230\u65cb\u8f6c\u540e\u7684\u4f4d\u7f6e\uff0c\u518d\u628a\u65b0\u4f4d\u7f6e\u7684\u65e7\u5143\u7d20\u6362\u5230\u65cb\u8f6c\u540e\u7684\u4f4d\u7f6e\uff0c\u5faa\u73af4\u6b21\u5c31\u80fd\u6362\u597d4\u4e2a\u5143\u7d20\uff0c\u53ef\u4ee5\u53c2\u8003Josh\u753b\u7684\u56fe</p> <p></p>"},{"location":"Notes%20of%20Courses/CS61B/CS61B/#project-1","title":"Project 1","text":""},{"location":"Notes%20of%20Courses/CS61B/CS61B/#1_17","title":"1","text":"<p>Java instanceof - javatpoint</p> <p>The java instanceof operator is used to test whether the object is an instance of the specified type (class or subclass or interface).</p> <p>\u8bfe\u7a0b\u7f51\u7ad9\u4e0a\u8bf4\u4f1a\u7528\u5230 <code>instanceof</code> \u5173\u952e\u5b57\uff0c\u7136\u540e\u6839\u636e\u8bfe\u7a0b\u7f51\u7ad9\u4e0a\u63d0\u4f9b\u7684\u94fe\u63a5\uff0c<code>instanceof</code> \u5173\u952e\u5b57\u7684\u89e3\u91ca\u5982\u4e0a</p>"},{"location":"Notes%20of%20Courses/CS61B/CS61B/#2_12","title":"2","text":"<p>\u7531\u4e8e <code>ArrayDeque</code> \u6ca1\u6709\u6d4b\u8bd5\u7684\u6587\u4ef6\uff0c\u5982\u679c\u8981\u6d4b\u8bd5\u7684\u8bdd\u9700\u8981\u81ea\u5df1\u5199\u4e00\u4e2a\u6d4b\u8bd5\u7684\u6587\u4ef6\uff0c\u8bfe\u7a0b\u7f51\u7ad9\u4e0a\u5efa\u8bae\u53ef\u4ee5\u53c2\u8003Lab 3\u4e2d\u7684\u6d4b\u8bd5\uff0c</p> <p>So how do you verify correctness of your data structure? You use your skills that you got from Lab 3! You are encouraged to copy and paste those tests for <code>SList</code> and <code>AList</code> and adapt them for these data structures. The tests will look very similar and only require basic changes.</p> <p>\u4e8e\u662f\u6211cv\u4e86 <code>TestBuggyAList.java</code> \uff0c\u7136\u540e\u6539\u6210\u4e86</p> code RandomizedComparisonTest.java<pre><code>package deque;\n\nimport ...;\n\npublic class RandomizedComparisonTest {\n    // YOUR TESTS HERE\n    @Test\n    public void testThreeAddThreeRemove() {\n        LinkedListDeque&lt;Integer&gt; l1 = new LinkedListDeque&lt;&gt;();\n        ArrayDeque&lt;Integer&gt; l2 = new ArrayDeque&lt;&gt;();\n\n        ...\n    }\n\n    @Test\n    public void randomizedTest() {\n        LinkedListDeque&lt;Integer&gt; L = new LinkedListDeque&lt;&gt;();\n        ArrayDeque&lt;Integer&gt; L2 = new ArrayDeque&lt;&gt;();\n\n        int N = 100000;\n        for (int i = 0; i &lt; N; i += 1) {\n            int operationNumber = StdRandom.uniform(0, 4);\n            if (operationNumber == 0) {\n                ...\n            } else if (operationNumber == 3) {\n                // addFirst\n                int randVal = StdRandom.uniform(0, 100);\n                L.addFirst(randVal);\n                L2.addFirst(randVal);\n                System.out.println(\"addFirst(\" + randVal + \")\");\n            }\n        }\n    }\n}\n</code></pre>"},{"location":"Notes%20of%20Courses/CS61B/CS61B/#3_9","title":"3","text":"<p>java\u4e2d\u751f\u6210\u968f\u673a\u6570\u53ef\u4ee5\u4f7f\u7528 <code>Math.random()</code> \uff0c\u4f1a\u8fd4\u56de <code>[0, 1)</code> \u7684\u968f\u673a\u6570</p>"},{"location":"Notes%20of%20Courses/CS61B/CS61B/#4_7","title":"4","text":"<p>\u5728autograder\u4e2d\uff0c<code>Deque</code> \u7684\u5b50\u7c7b\u53ef\u80fd\u4e0d\u6b62\u81ea\u5df1\u5b9e\u73b0\u7684 <code>LinkedListDeque</code> \u548c <code>ArrayDeque</code> \uff0c\u6240\u4ee5\u5728\u5b9e\u73b0 <code>equals</code> \u65b9\u6cd5\u65f6\uff0c\u9700\u8981\u8003\u8651\u5230\u8fd9\u6837\u7684\u60c5\u51b5( <code>equals</code> \u65b9\u6cd5\u7684\u8981\u6c42\u662f\uff0c\u53ea\u8981\u662f <code>Deque</code> \u5e76\u4e14\u6240\u6709\u5143\u7d20\u6309\u987a\u5e8f\u4e00\u81f4\uff0c\u5219\u8ba4\u4e3a\u76f8\u7b49)</p>"},{"location":"Notes%20of%20Courses/CS61B/CS61B/#lecture-9-extends-casting-higher-order-functions","title":"Lecture 9 Extends, Casting, Higher Order Functions","text":""},{"location":"Notes%20of%20Courses/CS61B/CS61B/#1_18","title":"1","text":"<p><code>extends</code> \u5173\u952e\u5b57\uff0c\u80fd\u7ee7\u627f\u53e6\u4e00\u4e2a\u7c7b\u7684\u6240\u6709\u4e0d\u662f <code>private</code> \u7684\u5c5e\u6027(\u5305\u62ec\u65b9\u6cd5)\uff0c\u7136\u540e\u53ef\u4ee5\u6dfb\u52a0\u65b0\u7684\u65b9\u6cd5</p> <p>\u7ee7\u627f\u4e86\u4e4b\u540e\uff0c\u53ef\u4ee5\u4f7f\u7528 <code>super</code> \u6765\u8bbf\u95ee\u7236\u7c7b\u7684\u975e <code>private</code> \u7684\u5c5e\u6027</p> <p>\u5b50\u7c7b\u7684\u6784\u9020\u51fd\u6570\u4e2d\uff0c\u5982\u679c\u6ca1\u6709\u663e\u5f0f\u5730\u8c03\u7528\u7236\u7c7b\u7684\u6784\u9020\u51fd\u6570(\u901a\u8fc7 <code>super([...]);</code> \u8c03\u7528)\uff0c\u90a3\u4e48\u4f1a\u81ea\u52a8\u9690\u5f0f\u5730\u8c03\u7528(\u8c03\u7528 <code>super();</code> )</p> <p></p>"},{"location":"Notes%20of%20Courses/CS61B/CS61B/#2_13","title":"2","text":"<p>Java\u4e2d\u7684\u9ad8\u9636\u51fd\u6570 Higher Order Functions</p> <p>Josh\u5728\u8bfe\u4e0a\u5c55\u793a\u4e86\u4e00\u4e2a\u4f8b\u5b50(\u4f7f\u7528interface)</p> JavaPython IntUnaryFunction<pre><code>public interface IntUnaryFunction {\n    int apply(int x);\n}\n</code></pre> TenX<pre><code>public class TenX implements IntUnaryFunction {\n    public int apply(int x) {\n        return 10 * x;\n    }\n}\n</code></pre> HoFDemo<pre><code>public class HoFDemo {\n    public static int do_twice(IntUnaryFunction f, int x) {\n        return f.apply(f.apply(x));\n    }\n    public static void main(String[] args) {\n        System.out.println(do_twice(new TenX(), 2));\n    }\n}\n</code></pre> <pre><code>def tenX(x):\n    return 10 * x\n\ndef do_twice(f, x):\n    return f(f(x))\n\nprint(do_twice(tenX, 2))\n</code></pre>"},{"location":"Notes%20of%20Courses/CS61B/CS61B/#lecture-10-subtype-polymorphism-vs-hofs","title":"Lecture 10 Subtype Polymorphism vs. HoFs","text":""},{"location":"Notes%20of%20Courses/CS61B/CS61B/#1_19","title":"1","text":"<p>Josh\u63d0\u5230 <code>OurComparable</code> \u7684\u7f3a\u70b9</p> <pre><code>public interface OurComparable {\n    public int compareTo(Object o);\n}\n</code></pre> <p>\u5373\u5728\u8fd0\u884c\u65f6(\u5982\u679c\u7c7b\u578b\u4e0d\u4e00\u81f4)\u4f1a\u51fa\u73b0\u9519\u8bef</p> <pre><code>public class Dog implements OurComparable {\n    public int compareTo(Object obj) {\n        /** Warning, cast can cause runtime error! */\n        Dog uddaDog = (Dog) obj;\n        return this.size - uddaDog.size;\n    }\n}\n</code></pre> <p>\u6240\u4ee5(\u4e3a\u4e86\u907f\u514d\u8fd9\u79cd\u60c5\u51b5)\u8981\u6362\u6210\u4f7f\u7528 <code>Comparable&lt;T&gt;</code> (java\u5185\u7f6e\u7684\u63a5\u53e3)</p> <pre><code>public interface Comparable&lt;T&gt; {\n    public int compareTo(T obj);\n}\n</code></pre> <pre><code>public class Dog implements Comparable&lt;Dog&gt; {\n    public int compareTo(Dog uddaDog) {\n        return this.size - uddaDog.size;\n    }\n}\n</code></pre>"},{"location":"Notes%20of%20Courses/CS61B/CS61B/#2_14","title":"2","text":"<p>Josh\u63d0\u5230\uff0c\u7c7b\u4f3c\u4e8epython\u4e2d\u4f20\u5165 \u6bd4\u8f83\u51fd\u6570 \u8fdb\u884c\u4e0d\u540c\u7684\u6bd4\u8f83</p> python<pre><code>def print_larget(x, y, compare, stringify):\n    if compare(x, y):\n        return stringify(x)\n    return stringify(y)\n</code></pre> <p>java\u4e2d\u901a\u5e38\u4f7f\u7528 <code>Comparator</code> \uff0c\u4ed6\u5c55\u793a\u7684\u793a\u4f8b\u5982\u4e0b</p> java<pre><code>import java.util.Comparator;\n\npublic class Dog {\n    private String name;\n    ...\n    private static class NameComparator implements Comparator&lt;Dog&gt; {\n        public int compare(Dog a, Dog b) {\n            return a.name.compareTo(b.name);\n        }\n    }\n\n    public static class Comparator&lt;Dog&gt; getNameComparator() {\n        return new NameComparator();\n    }\n}\n</code></pre> <pre><code>Comparator&lt;Dog&gt; cd = Dog.getNameComparator();\nif (cd.compare(d1, d3) &gt; 0) {\n    d1.bark();\n} else {\n    d3.bark();\n}\n</code></pre>"},{"location":"Notes%20of%20Courses/CS61B/CS61B/#lecture-10-qa","title":"Lecture 10 Q&amp;A","text":""},{"location":"Notes%20of%20Courses/CS61B/CS61B/#1_20","title":"1","text":"<p>Josh\u6839\u636e\u4e0b\u9762\u8fd9\u4e2aLecture 10\u8bfe\u4e0a\u63d0\u5230\u7684\u4f8b\u5b50\uff0c\u5bf9\u7c7b\u578b\u8f6c\u6362 Casting\u8fdb\u884c\u4e86\u8fdb\u4e00\u6b65\u7684\u89e3\u91ca</p> <pre><code>Object o2 = new ShowDog(\"Mortimer\", \"Corgi\", 25, 512.2);\n\nShowDog sdx = ((ShowDog) o2);\nsdx.bark();\n\nDog dx = ((Dog) o2);\ndx.bark();\n\n((Dog) o2).bark();\n\nObject o3 = (Dog) o2;\no3.bark();  // Compile error\n</code></pre> <p>\u7c7b\u578b\u8f6c\u6362\u4e0d\u4f1a\u6539\u53d8\u539f\u672c\u53d8\u91cf\u7684\u9759\u6001\u7c7b\u578b\u548c\u52a8\u6001\u7c7b\u578b(\u5373\u5b9e\u9645\u7684\u7c7b\u578b)\uff0c\u4f46\u662f\u4f8b\u5982\u8fd9\u4e00\u884c\u4ee3\u7801\u4e2d</p> <pre><code>ShowDog sdx = ((ShowDog) o2);\n</code></pre> <p><code>((ShowDog) o2)</code> \u7531\u4e8e\u6709\u7c7b\u578b\u8f6c\u6362 Casting\uff0c\u6240\u4ee5\u8fd9\u4e2a\u8868\u8fbe\u5f0f(\u6574\u4f53)\u4f1a\u88ab\u8ba4\u4e3a\u9759\u6001\u7c7b\u578b\u662f <code>ShowDog</code> \uff0c\u56e0\u800c\u80fd\u8d4b\u503c\u7ed9\u9759\u6001\u7c7b\u578b\u540c\u4e3a <code>ShowDog</code> \u7684 <code>sdx</code> \uff0c\u800c\u5982\u679c\u4e0d\u52a0\u7c7b\u578b\u8f6c\u6362\uff0c</p> <pre><code>ShowDog sdx = o2;\n</code></pre> <p>\u5373\u4f7f <code>o2</code> \u7684\u52a8\u6001\u7c7b\u578b(\u5b9e\u9645\u7684\u7c7b\u578b)\u662f <code>ShowDog</code> \uff0c\u4f46\u662f\u56e0\u4e3a <code>o2</code> \u9759\u6001\u7c7b\u578b\u662f <code>Object</code> \uff0c <code>Object</code> \u4e0d\u80fd\u8d4b\u503c\u7ed9 <code>ShowDog</code> (\u53ea\u6709 <code>ShowDog</code> \u7c7b\u548c <code>ShowDog</code> \u7684\u5b50\u7c7b\u624d\u80fd\u8d4b\u503c\u7ed9 <code>ShowDog</code> )\uff0c\u6240\u4ee5\u4f1a\u4ea7\u751f\u7f16\u8bd1\u9519\u8bef</p>"},{"location":"Notes%20of%20Courses/CS61B/CS61B/#lab-4","title":"Lab 4","text":""},{"location":"Notes%20of%20Courses/CS61B/CS61B/#1_21","title":"1","text":"<p>\u53ef\u4ee5\u901a\u8fc7 <code>git checkout</code> \u6765\u53d8\u66f4\u6587\u4ef6\u5230\u67d0\u4e2acommit\u7684\u72b6\u6001</p> <pre><code>git checkout ... path/to/file\n</code></pre> <p><code>...</code> \u5904\u53ef\u4ee5\u662fcommit\u7684\u7f16\u53f7(\u4f8b\u5982 <code>47bb0877</code> )\uff0c\u6216\u8005branch(\u4f8b\u5982 <code>main</code> )\u6216\u8005tag(\u4f8b\u5982 <code>origin/main</code> )</p>"},{"location":"Notes%20of%20Courses/CS61B/CS61B/#lecture-11-exceptions-iterators-object-methods","title":"Lecture 11 Exceptions, Iterators, Object Methods","text":""},{"location":"Notes%20of%20Courses/CS61B/CS61B/#1_22","title":"1","text":"<p>java\u4e2d\u7684\u96c6\u5408 Set <code>java.util.Set</code> \u4e0d\u80fd\u5728\u4e00\u4e2aset\u4e2d\u52a0\u5165\u4e24\u4e2a\u4e00\u6837\u7684\u5143\u7d20</p> <p>Stores a set of values with on duplicates. Has no sense of order.</p> JavaPython <pre><code>Set&lt;String&gt; S = new HashSet&lt;&gt;();\nS.add(\"Tokyo\");\nS.add(\"Beijing\");\nS.add(\"Lagos\");\nS.add(\"S\u00e3o Paulo\");\nSystem.out.println(S.contains(\"Tokyo\"));\n</code></pre> Output<pre><code>true\n</code></pre> <pre><code>s = set()\ns.add(\"Tokyo\")\ns.add(\"Beijing\")\ns.add(\"Lagos\")\ns.add(\"S\u00e3o Paulo\")\nprint(\"Tokyo\" in s)\n</code></pre> Output<pre><code>True\n</code></pre>"},{"location":"Notes%20of%20Courses/CS61B/CS61B/#2_15","title":"2","text":"<p>\u7c7b\u4f3c\u5728python\u4e2d\u7528 <code>raise</code> \u5f15\u53d1\u9519\u8bef\uff0c\u5728java\u4e2d\u53ef\u4ee5\u4f7f\u7528 <code>throw</code> \u629b\u51fa\u5f02\u5e38\uff0c\u4f8b\u5982</p> <pre><code>public void add(T x) {\n    if (x == null) {\n        throw new IllegalArgumentException(\"Cannot add null!\");\n    }\n}\n</code></pre>"},{"location":"Notes%20of%20Courses/CS61B/CS61B/#3_10","title":"3","text":"<p>java\u4e2d\u7684foreach\u5faa\u73af/\u589e\u5f3afor\u5faa\u73af Enhanced For loop\uff0c</p> <pre><code>Set&lt;Integer&gt; javaset = new HashSet&lt;Integer&gt;();\n</code></pre> Enhanced For / foreach<pre><code>for (int x : javaset) {\n    System.out.println(x);\n}\n</code></pre> \u666e\u901afor\u5faa\u73af<pre><code>Iterator&lt;Integer&gt; seer = javaset.iterator();\n\nwhile (seer.hasNext()) {\n    System.out.println(seer.next());\n}\n</code></pre> <p>\u63a5\u53e3 <code>Iterator</code> \u9700\u8981\u5b9e\u73b02\u4e2a\u65b9\u6cd5</p> <pre><code>public interface Iterator&lt;T&gt; {\n    boolean hasNext();\n    T next();\n}\n</code></pre> <p>Josh\u5b9e\u73b0\u7684\u793a\u4f8b</p> <pre><code>public class ArraySet&lt;T&gt; {\n    private class ArraySetIterator implements Iterator&lt;T&gt; {\n        private int wizPos;\n        public ArraySetIterator() {\n            wizPos = 0;\n        }\n\n        public boolean hasNext() {\n            return wizPos &lt; size;\n        }\n\n        public T next() {\n            T returnItem = items[wizPos];\n            wizPos += 1;\n            return returnItem;\n        }\n    }\n}\n</code></pre> <p>\u5982\u679c\u60f3\u8981\u652f\u6301\u589e\u5f3afor\u5faa\u73af\uff0c\u90a3\u4e48\u9700\u8981\u8ba9\u7c7b\u5b9e\u73b0 <code>Iterable</code> \u63a5\u53e3</p> <pre><code>public interface Iterable&lt;T&gt; {\n    Iterator&lt;T&gt; iterator();\n}\n</code></pre> <p>\u4f8b\u5982</p> <pre><code>public class ArraySet&lt;T&gt; implements Iterable&lt;T&gt; {\n    ...\n    public Iterator&lt;T&gt; iterator() { ... }\n}\n</code></pre> <p>\u6216\u8005\u9700\u8981\u662f <code>Iterable</code> \u7684\u5b50\u7c7b\uff0c\u5982\u4e0b\u9762\u7684 <code>Set</code> \u7c7b</p> <pre><code>public class Collection&lt;E&gt; extends Iterable&lt;E&gt; { ... }\n</code></pre> <pre><code>public class Set&lt;E&gt; extends Collection&lt;E&gt; { ... }\n</code></pre>"},{"location":"Notes%20of%20Courses/CS61B/CS61B/#4_8","title":"4","text":"<p>java\u4e2d\u6240\u6709\u7c7b\u90fd\u662f <code>Object</code> \u7c7b\u7684\u5b50\u7c7b</p> <p><code>Object</code> \u4e2d\u6bd4\u8f83\u91cd\u8981\u76844\u4e2a\u65b9\u6cd5(61b\u4e2d\u4f1a\u6d89\u53ca\u5230\u7684)</p> <ul> <li><code>String toString()</code></li> <li><code>boolean equals(Object obj)</code></li> <li><code>Class&lt;?&gt; getClass()</code></li> <li><code>int hashCode()</code></li> </ul>"},{"location":"Notes%20of%20Courses/CS61B/CS61B/#5_6","title":"5","text":"<p>java\u4e2d\uff0c\u4e00\u4e2a <code>String</code> \u52a0\u4e0a\u53e6\u5916\u4e00\u4e2a\u4e1c\u897f\u7684\u65f6\u5019\uff0c\u4f1a\u81ea\u52a8\u9690\u5f0f\u5730\u8c03\u7528 <code>toString</code> \u65b9\u6cd5</p>"},{"location":"Notes%20of%20Courses/CS61B/CS61B/#6_2","title":"6","text":"<p>Josh\u8bf4\u9053\uff0cjava\u4e2d \u5b57\u7b26\u4e32\u62fc\u63a5 \u6bd4\u8f83\u8017\u65f6\uff0c\u6240\u4ee5\u53ef\u4ee5\u4f7f\u7528 <code>StringBuilder</code> \uff0c\u4f8b\u5982</p> <pre><code>@Override\npublic String toString() {\n    StringBuilder returnSB = new StringBuilder(\"{\");\n    for (int i = 0; i &lt; size - 1; i += 1) {\n        returnSB.append(items[i].toString());\n        returnSB.append(\", \");\n    }\n    returnSB.append(items[size - 1]);\n    returnSB.append(\"}\");\n    return returnSB.toString();\n}\n</code></pre>"},{"location":"Notes%20of%20Courses/CS61B/CS61B/#7_1","title":"7","text":"<p><code>==</code> \u548c <code>.equals</code> \u7684\u533a\u522b</p> <ul> <li><code>==</code> \u6bd4\u8f83\u4e24\u4e2a\u662f\u4e0d\u662f\u6307\u5411\u540c\u4e00\u4e2a\u5b9e\u4f8b</li> <li><code>.equals</code> \u8c03\u7528\u7684\u662f\u7c7b\u5185\u7684 <code>.equals</code> \u65b9\u6cd5</li> </ul>"},{"location":"Notes%20of%20Courses/CS61B/CS61B/#8_1","title":"8","text":"<p>Josh\u5b9e\u73b0 <code>equals</code> \u7684\u793a\u4f8b</p> <pre><code>@Override\npublic boolean equals(Object other) {\n    if (this == other) {\n        return true;\n    }\n    if (other == null) {\n        return false;\n    }\n    if (other.getClass() != Array.class) {  // or != this.getClass()\n        return false;\n    }\n    ArraySet&lt;T&gt; o = (ArraySet&lt;T&gt;) other;\n    if (o.size() != this.size()) {\n        return false;\n    }\n    for (T item : this) {\n        if (!o.contains(item)) {\n            return false;\n        }\n    }\n    return true;\n}\n</code></pre> <p>\u6ce8\u610f\u5230\u4f7f\u7528\u4e86 <code>.getClass</code> \u65b9\u6cd5</p>"},{"location":"Notes%20of%20Courses/CS61B/CS61B/#9_1","title":"9","text":"<p>Josh\u63d0\u5230\u4e86 <code>String.join</code> \u51fd\u6570\u7684\u4f7f\u7528(\u7528\u6765\u7b80\u5316 <code>.toString</code> \u65b9\u6cd5\u7684\u5b9e\u73b0)</p> <pre><code>public String toString() {\n    List&lt;String&gt; listOfItems = new ArrayList&lt;&gt;();\n    for (T x : this) {\n        listOfItems.add(x.toString());\n    }\n    return \"{\" + String.join(\", \", listOfItems) + \"}\";\n}\n</code></pre> <p><code>String.join</code> \u51fd\u6570\u7684\u4e00\u79cd\u7528\u6cd5\u662f\u4f20\u5165\u4e2d\u95f4\u7528\u4e8e\u5206\u5272\u7684\u5b57\u7b26\u4e32\uff0c\u548c\u4e00\u4e2a <code>Iterable</code> \uff0c\u7136\u540e\u4f1a\u8fd4\u56de\u7528 <code>Iterable</code> \u4e2d\u7684\u5143\u7d20\u62fc\u63a5\u7684\u5b57\u7b26\u4e32</p>"},{"location":"Notes%20of%20Courses/CS61B/CS61B/#10_1","title":"10","text":"<p>Josh\u4ecb\u7ecd\u4e86 <code>of</code> \u9759\u6001\u65b9\u6cd5\u7684\u5b9e\u73b0\u548c\u7528\u6cd5</p> <pre><code>public class ArratSet&lt;T&gt; implements Iterable&lt;T&gt; {\n    public static &lt;Glerp&gt; ArratSet&lt;Glerp&gt; of(Glerp... stuff) {\n        ArratSet&lt;Glerp&gt; returnSet = new ArratSet&lt;Glerp&gt;();\n        for (Glerp x : stuff) {\n            returnSet.add(x);\n        }\n        return returnSet;\n    }\n}\n</code></pre> <ul> <li>\u56e0\u4e3a\u662f\u9759\u6001\u65b9\u6cd5\uff0c\u6240\u4ee5 <code>of</code> \u4e0d\u77e5\u9053 <code>T</code> \u662f\u4ec0\u4e48\uff0c\u6240\u4ee5\u9700\u8981\u58f0\u660e\u4e00\u4e2a\u65b0\u7684 <code>Glerp</code></li> <li><code>Glerp...</code> \u662f\u4e00\u4e2a\u53ef\u53d8\u6570\u91cf\u7684\u53c2\u6570(\u7c7b\u4f3c\u4e8epython\u4e2d\u7684 <code>*args</code> )\uff0c\u5e76\u4e14\u662f <code>Iterable</code> (\u53ef\u4ee5\u4f7f\u7528foreach)</li> </ul> <p>Josh\u5c55\u793a\u7684\u4f7f\u7528\u7684\u793a\u4f8b</p> <pre><code>ArraySet&lt;String&gt; asetOfStrings = ArraySet.of(\"hi\", \"I'm\", \"here\");\nSystem.out.println(asetOfStrings);\n</code></pre> Output<pre><code>{hi, I'm, here}\n</code></pre>"},{"location":"Notes%20of%20Courses/CS61B/CS61B/#lecture-11-qa","title":"Lecture 11 Q&amp;A","text":""},{"location":"Notes%20of%20Courses/CS61B/CS61B/#1_23","title":"1","text":"<p>Josh\u5c55\u793a\u4e86\u4f7f\u7528 <code>Arrays.sort(T[] a, Comparator&lt;? super T&gt; c)</code> \u51fd\u6570\uff0c\u5c06\u4e00\u4e2a\u6570\u7ec4\u6309\u7167\u81ea\u5b9a\u4e49\u7684\u6392\u5e8f\u65b9\u5f0f\u8fdb\u884c\u6392\u5e8f\u7684\u65b9\u6cd5</p> <pre><code>import org.junit.Test;\nimport java.util.Arrays;\nimport java.util.Comparator;\nimport static org.junit.Assert.assertEquals;\n\npublic class SevenCountComparator implements Comparator&lt;Integer&gt; {\n    @Test\n    public void testSevenCount() {\n        assertEquals(1, sevenCount(7));\n        assertEquals(0, sevenCount(9));\n        assertEquals(2, sevenCount(707));\n        assertEquals(6, sevenCount(77707077));\n    }\n\n    private int sevenCount(int a) {\n        String s = Integer.toString(a);\n        int count = 0;\n        for (int i = 0; i &lt; s.length(); i += 1) {\n            if (s.charAt(i) == '7') {\n                count += 1;\n            }\n        }\n        return count;\n    }\n\n    public int compare(Integer a, Integer b) {\n        return sevenCount(a) - sevenCount(b);\n    }\n\n    public static void main(String[] args) {\n        Integer[] a = {1, 3, 65, 88, 7, 126, 777, 728, 10912983, 99999999};\n        Arrays.sort(a, new SevenCountComparator());\n\n        System.out.println(Arrays.toString(a));\n    }\n}\n</code></pre> Output<pre><code>[1, 3, 65, 88, 126, 10912983, 99999999, 7, 728, 777]\n</code></pre>"},{"location":"Notes%20of%20Courses/CS61B/CS61B/#lecture-12-command-line-programming-git-project-2-preview","title":"Lecture 12 Command Line Programming, Git, Project 2 Preview","text":""},{"location":"Notes%20of%20Courses/CS61B/CS61B/#1_24","title":"1","text":"<p>Josh\u5c55\u793a <code>main</code> \u51fd\u6570 <code>args</code> \u53c2\u6570\u7684\u4f5c\u7528\uff0c\u4f5c\u7528\u5927\u81f4\u662f\u7528\u547d\u4ee4\u884c\u8fd0\u884cjava\u6587\u4ef6\u65f6\u7ed9\u83b7\u53d6\u4f20\u5165\u7684\u53c2\u6570</p> Hello.java<pre><code>public class Hello {\n    public static void main(String[] args) {\n        System.out.println(args[0]);\n        System.out.println(args[1]);\n        System.out.println(args[2]);\n    }\n}\n</code></pre> <pre><code>$ javac Hello.java\n$ java Hello.java one two three four\none\ntwo\nthree\n</code></pre>"},{"location":"Notes%20of%20Courses/CS61B/CS61B/#2_16","title":"2","text":"<p>ppt\u4e2d\u5c55\u793a\u4e86\u53ef\u4ee5\u4f7f\u7528 <code>Integer.parseInt()</code> \u5c06\u5b57\u7b26\u4e32\u8f6c\u6362\u6210\u5bf9\u5e94\u7684\u6570\u5b57\u7684\u65b9\u6cd5</p>"},{"location":"Notes%20of%20Courses/CS61B/CS61B/#3_11","title":"3","text":"<p>Josh\u89e3\u91cagit\u4f7f\u7528git-SHA1\u54c8\u5e0c\u503c\u6765\u5b58\u50a8\u6587\u4ef6\u7684\u65b9\u5f0f</p> <ul> <li> <p>First, git computes the git-SHA1 hash:</p> <ul> <li>HelloWorld.java \u2192 <code>66ccdc645c9d156d5c796dbe6ed768430c1562a2</code></li> </ul> </li> <li> <p>Git creates a folder called <code>.git/objects/66</code></p> <ul> <li>The <code>66</code> is the first two characters of the git-SHA1 hash.</li> </ul> </li> <li> <p>Git stores the contents in a file called</p> <p><code>ccdc645c9d156d5c796dbe6ed768430c1562a2</code>.</p> <ul> <li>File is stored in a compressed format (zlib) to save space.</li> </ul> </li> </ul> <pre><code>$ cd .git\n/.git$ cd objects\n/.git/objects$ cd 66\n/.git/objects/66$ ls\nccdc645c9d156d5c796dbe6ed768430c1562a2\n/.git/objects/66$ cat ~/Scuts/gitview.py\nimport sys\nimport zlib  # A compression / decompression library\nfilename = sys.argv[1]\ncompressed_contents = open(filename, 'rb').read()\ndecompressed_contents = zlib.decompress(compressed_contents)\ntry:\n    print(decompressed_contents.decode('utf-8'))\nexcept:\n    print(decompressed_contents)\n/.git/objects/66$ python3 ~/Scuts/gitview.py ccdc645c9d156d5c796dbe6ed768430c1562a2\nblob 115public class HelloWorld {\n        public static void main(String[] args) {\n                System.out.println(\"Hello World!\");\n        }\n}\n</code></pre>"},{"location":"Notes%20of%20Courses/CS61B/CS61B/#lecture-13-asymptotics-i","title":"Lecture 13 Asymptotics I","text":""},{"location":"Notes%20of%20Courses/CS61B/CS61B/#1_25","title":"1","text":"<p>Big Theta \u548c Big O \u7684\u533a\u522b</p> <p>Whereas Big Theta can informally be thought of as something like \u201cequals\u201d, Big O can be thought of as \u201cless than or equal\u201d.</p> <p>Example, the following are all true:</p> <ul> <li>N\u00b3 + 3N\u2074 \u2208 \u0398(N\u2074)</li> <li>N\u00b3 + 3N\u2074 \u2208 O(N\u2074)</li> <li>N\u00b3 + 3N\u2074 \u2208 O(N\u2076)</li> <li>N\u00b3 + 3N\u2074 \u2208 O(N!)</li> <li>N\u00b3 + 3N\u2074 \u2208 O(N<sup>N!</sup>)</li> </ul> <p>$$   R(N) \u2208 \u0398(f(N)) \u21d2 k_1 \u00b7 f(N) \u2264 R(N) \u2264 k_2 \u00b7 f(N)   $$</p> <p>$$   R(N) \u2208 Of(N)) \u21d2 R(N) \u2264 k_2 \u00b7 f(N)   $$</p>"},{"location":"Notes%20of%20Courses/CS61B/CS61B/#lecture-14-disjoint-sets","title":"Lecture 14 Disjoint Sets","text":""},{"location":"Notes%20of%20Courses/CS61B/CS61B/#1_26","title":"1","text":"<p>\u8fd9\u8282\u8bfeJosh\u8bb2\u6388\u4e86 \u5f97\u5230\u5e94\u7528\u4e8e\u201c\u52a8\u6001\u8fde\u63a5 Dynamic Connectivity\u201d\u95ee\u9898\u7684\u201c\u4e0d\u4ea4\u96c6 Disjoint Sets\u201d\u6570\u636e\u7ed3\u6784\u7684\u8fc7\u7a0b</p> <p>The ideas that made our implementation efficient:</p> <ul> <li>Represent sets as connected components (don't track individual connections).<ul> <li>ListOfSetsDS: Store connected components as a List of Sets (slow, complicated).</li> <li>QuickFindDS: Store connected components as set ids.</li> <li>QuickUnionDS: Store connected components as parent ids.<ul> <li>WeightedQuickUnionDS: Also track the size of each set, and use size to decide on new tree root.<ul> <li>WeightedQuickUnionWithPathCompressionDS: On calls to connect and isConnected, set parent id to the root for all items seen.</li> </ul> </li> </ul> </li> </ul> </li> </ul> Implementation Runtime ListOfSetsDS O(NM) QuickFindDS \u0398(NM) QuickUnionDS O(NM) WeightedQuickUnionDS O(N + M log N) WeightedQuickUnionWithPathCompressionDS O(N + M \u03b1(N)) <p>Runtimes are given assuming:</p> <ul> <li>We have a DisjointSets object of size N.</li> <li>We perform M operations, where an operation is defined as either a call to <code>connected</code> or <code>isConnected</code>.</li> </ul> <p>\u8981\u70b91</p> <p>\u5c06\u8fde\u901a\u5206\u91cf connected components\u7528\u96c6\u5408\u8868\u793a(\u5ffd\u7565\u5177\u4f53\u7684\u8fb9)\uff0c\u4f8b\u5982</p> <code>connect(2, 3)</code> \u64cd\u4f5c\u524d<code>connect(2, 3)</code> \u64cd\u4f5c\u540e <pre><code>flowchart TD\n0 --- 4\n0 --- 1 --- 2\n3 --- 5\n6</code></pre> <pre><code>{0, 1, 2, 4}, {3, 5}, {6}\n</code></pre> <pre><code>flowchart TD\n0 --- 4\n0 --- 1 --- 2 --- 3\n3 --- 5\n6</code></pre> <pre><code>{0, 1, 2, 4, 3, 5}, {6}\n</code></pre> <p>\u8981\u70b92</p> <p>QuickUnionDS\uff0c\u7528\u4e00\u4e2a\u6570\u7ec4\u6807\u8bb0\u6bcf\u4e2a\u8282\u70b9\u7684\u7236\u8282\u70b9(\u4f7f\u5f97\u6bcf\u4e2a\u8fde\u901a\u5206\u91cf\u50cf\u4e00\u4e2a\u6811\u4e00\u6837)\uff0c\u8fd9\u6837\u53ef\u4ee5\u51cf\u5c11 <code>connect</code> \u6240\u9700\u8981\u505a\u7684\u66f4\u6539/\u6240\u9700\u8981\u7684\u64cd\u4f5c(\u76f8\u6bd4\u4e8eListOfSetsDS)</p> <code>parent</code> -1 0 1 -1 0 3 -1 0 1 2 3 4 5 6 <pre><code>flowchart TD\n0 --- 4\n0 --- 1 --- 2\n3 --- 5\n6</code></pre> <p>\u8981\u70b93</p> <p>WeightedQuickUnionDS\uff0c\u6807\u8bb0\u6bcf\u4e2a\u6811\u7684\u5927\u5c0f\uff0c\u6bcf\u6b21 <code>connected</code> \u65f6\uff0c\u90fd\u5c06\u5c0f\u6811\u7684\u6839\u8fde\u63a5\u5230\u5927\u6811\u7684\u6839\u4e0a\uff0c\u8fd9\u6837\u80fd\u4f7f\u5f97 <code>connected</code> \u540e\u7684\u6811\u7684\u5c42\u6570\u4e0d\u4f1a\u592a\u9ad8\uff0c\u4f7f\u5f97 <code>connect</code> \u548c <code>isConnected</code> \u7684\u590d\u6742\u5ea6\u90fd\u964d\u5230 O(log N).</p> <pre><code>flowchart TD\n0 --- 1\n0 --- 2\n0 --- 3\n0 --- 4\n0 --- 5\n6 --- 7\n6 --- 8 --- 9</code></pre> <p>Two common approaches:</p> <ul> <li> <p>Use values other than -1 in <code>parent</code> array for root nodes to track size.</p> <code>parent</code> -6 0 0 0 0 0 -4 6 6 8 0 1 2 3 4 5 6 7 8 9 </li> <li> <p>Create a separate <code>size</code> array.</p> <code>size</code> 6 1 1 1 1 1 4 1 2 1 0 1 2 3 4 5 6 7 8 9 </li> </ul> <p>\u8981\u70b94</p> <p>WeightedQuickUnionWithPathCompressionDS\uff0c\u5728 <code>isConnected</code> \u65f6\u628a\u7ecf\u8fc7\u7684\u8282\u70b9\u76f4\u63a5\u6539\u4e3a\u8fde\u63a5\u5230\u6839\u8282\u70b9\u4e0a</p> <code>isConnected(15, 10)</code> \u524d<code>isConnected(15, 10)</code> \u540e <pre><code>flowchart TD\n0 --- 1([\"1\"]) --- 5([\"5\"]) --- 11([\"11\"]) --- 15([\"15\"])\n5 --- 12\n1 --- 6 --- 13\n1 --- 7\n0 --- 2 --- 8 --- 14\n2 --- 9\n0 --- 3([\"3\"]) --- 10([\"10\"])\n0 --- 4</code></pre> <pre><code>flowchart TD\n0 --- 15([\"15\"])\n0 --- 11([\"11\"])\n0 --- 5([\"5\"])\n0 --- 1([\"1\"])\n5 --- 12\n1 --- 6 --- 13\n1 --- 7\n0 --- 2 --- 8 --- 14\n2 --- 9\n0 --- 3([\"3\"])\n0 --- 10([\"10\"])\n0 --- 4</code></pre> <p>\u4f7f\u5f97N\u4e2a\u8282\u70b9M\u6b21\u64cd\u4f5c\u7684\u590d\u6742\u5ea6\u51cf\u5c11\u5230 O(N + M lg* N)</p> <p>\\(2\\) = lg* 1</p> <p>\\(2^{2^{2^{2}}}\\) = lg* 4</p> <p>...</p>"},{"location":"Notes%20of%20Courses/CS61B/CS61B/#lec-15-asymptotics-ii","title":"Lec 15 Asymptotics II","text":""},{"location":"Notes%20of%20Courses/CS61B/CS61B/#1_27","title":"1","text":"<p>Josh\u8bb2\u89e3\u52a0\u5165\u4e00\u6b21Merge\u5bf9\u9009\u62e9\u6392\u5e8f Selection Sort\u7684\u5177\u4f53\u52a0\u901f\u8fc7\u7a0b\uff0c\u5e76\u8fdb\u800c\u8bb2\u89e3\u5f52\u5e76\u6392\u5e8f Merge Sort\u65f6\u5982\u4f55\u6bd4\u9009\u62e9\u6392\u5e8f\u66f4\u5feb\u7684</p> <p>Runtime of selection sort is \u0398(N\u00b2):</p> <ul> <li>Look at all N unfixed items to find smallest.</li> <li>Then look at N-1 remaining unfixed.</li> <li>...</li> <li>Look at last two unfixed items.</li> <li>Done, sum is 2+3+4+5+...+N = \u0398(N\u00b2)</li> </ul> <p>Given that runtime is quadratic, for N = 64, we might sat the runtime for selection sort is 2,048 arbitrary units of time (AU).</p> <p>Using Merge to Speed Up the Sorting Process</p> <p>Merging can give us an improvement over vanilla selection sort:</p> <ul> <li>Selection sort the left half: \u0398(N\u00b2).</li> <li>Selection sort the right half: \u0398(N\u00b2).</li> <li>Merge the results: \u0398(N).</li> </ul> <p>N=64: ~1088 AU.</p> <ul> <li>Merge: ~64 AU.</li> <li>Selection Sort: ~2*512 = ~1024 AU.</li> </ul> <p>Still \u0398(N\u00b2), but faster since N+2*(N/2)\u00b2 &lt; N\u00b2</p> <ul> <li>~1088 vs. ~2048 AU for N=64.</li> </ul> <p>Mergesort Order of Growth</p> <p>Mergesort has worst case runtime = \u0398(N log N).</p> <ul> <li>Every level takes ~N AU.<ul> <li>Top level takes ~N AU.</li> <li>Next  level takes ~N/2 + ~N/2 =  ~N.</li> <li>One more level down: ~N/4 + ~N/4 + ~N/4 + ~N/4 = ~N.</li> </ul> </li> <li>Thus, total runtime is ~Nk, where k is the number of levels.<ul> <li>How many levels? Goes until we get to size 1.</li> <li>k = log\u2082(N).</li> </ul> </li> <li>Overall runtime is \u0398(N log N).</li> </ul> <p>Mergesort using Recurrence Relations (Extra)</p> <p>C(N): Number of calls to mergesort + number of array writes.   $$   C(N) = \\begin{cases}   1 &amp; : N &lt; 2 \\   2C(N/2) + N &amp; : N \u2265 2 \\   \\end{cases}   $$</p> <p>$$   \\begin{equation}   \\begin{aligned}   C(N) &amp; = 2(2C(N/4) + N/2) + N \\        &amp; = 4C(N/4) + N + N \\        &amp; = 8C(N/8) + N + N + N \\        &amp; = N \\cdot 1 + N + N + \\ldots + N  (k = \\lg N)\\        &amp; = N + N \\lg N \\in \\Theta(N \\lg N)   \\end{aligned}   \\end{equation}   $$</p>"},{"location":"Notes%20of%20Courses/CS61B/CS61B/#lecture-16-adts-sets-maps-bsts","title":"Lecture 16 ADTs, Sets, Maps, BSTs","text":""},{"location":"Notes%20of%20Courses/CS61B/CS61B/#1_28","title":"1","text":"<p>Josh\u8bfe\u4e0a\u63d0\u5230\u7684java\u4e2d\u7684map\u7684\u4f7f\u7528\u793a\u4f8b(\u548cpython\u4e2d\u7684\u5b57\u5178\u7c7b\u4f3c)</p> JavaPython <pre><code>Map&lt;String, Integer&gt; m = new TreeMap&lt;&gt;();\nString[] text = {\"sumomo\", \"mo\", \"momo\", \"mo\", \"momo\", \"no\", \"uchi\"};\n\nfor (String s : text) {\n    int currentCount = m.getOrDefault(s, 0);\n    m.put(s, currentCount + 1);\n}\n</code></pre> <pre><code>m = {}\ntext = [\"sumomo\", \"mo\", \"momo\", \"mo\", \"momo\", \"no\", \"uchi\"]\nfor s in text:\n    current_count = m.get(s, 0)\n    m[s] = current_count + 1\n</code></pre>"},{"location":"Notes%20of%20Courses/CS61B/CS61B/#2_17","title":"2","text":"<p>Josh\u5728\u8bb2\u5230\u4e8c\u5206\u67e5\u627e\u6811\u7684\u63d2\u5165 insert\u65b9\u6cd5\u65f6\uff0c</p> <pre><code>static BST insert(BST T, Key ik) {\n    if (T == null)\n        return new BST(ik);\n    if (ik &lt; T.key)\n        T.left = insert(T.left, ik);\n    else if (ik &gt; T.key)\n        T.right = insert(T.right, ik);\n    return T;\n}\n</code></pre> <p>\u8981\u4f7f\u7528\u4e0a\u9762\u8fd9\u6837\u7684\u4ee3\u7801\u7ed3\u6784\uff0c\u907f\u514d\u4f7f\u7528\u4e0b\u9762\u8fd9\u6837\u7684\u4ee3\u7801(\u6bd4\u4e0a\u9762\u7684\u8981\u590d\u6742\uff0c\u4e5f\u4e0d\u7f8e\u89c2)</p> <p>ARMS LENGTH RECURSION!!!! No good.</p> <p>A common rookie bad habit to avoid:</p> <pre><code>    if (T.left == null)\n        T.left = new BST(ik);\n    else if (T.right = null)\n        T.right = new BST(ik);\n</code></pre>"},{"location":"Notes%20of%20Courses/CS61B/CS61B/#3_12","title":"3","text":"<p>Josh\u8bb2\u5230\uff0c\u5728\u5bf9\u4e8c\u5206\u67e5\u627e\u6811\u8fdb\u884c\u5220\u9664\u64cd\u4f5c\u65f6\uff0c\u5982\u679c\u8981\u5220\u9664\u7684\u8282\u70b9\u6709\u4e24\u4e2a\u5b50\u8282\u70b9\uff0c\u90a3\u4e48\u9700\u8981\u627e\u5230\u5de6\u5b50\u6811\u4e2d\u7684\u6700\u5927\u8282\u70b9(a.k.a predecessor)\u6216\u8005\u53f3\u5b50\u6811\u4e2d\u7684\u6700\u5c0f\u8282\u70b9(a.k.a successor)\uff0c\u7ee7\u7eed\u9012\u5f52\u5730\u5220\u9664\u8fd9\u4e2a\u8282\u70b9\uff0c\u6700\u540e\u7528\u8fd9\u4e2a\u8282\u70b9\u7684\u503c\u6784\u9020\u4e00\u4e2a\u65b0\u7684\u8282\u70b9\u4ee3\u66ff\u88ab\u5220\u9664\u7684\u8282\u70b9\uff0c</p> <p>\u4f8b\u5982\uff0c\u8981\u5220\u9664 <code>k</code></p> <pre><code>flowchart TD\nk[\"k (to be deleted)\"] --- e --- b --- a\nb --- d\ne --- g([\"g\"]) --- f\ng --- null1(\" \")\nk --- v --- p --- m([\"m\"])\np --- r\nv --- y --- x\ny --- z</code></pre> <p>\u90a3\u4e48 <code>g</code> \u662fpredecessor\uff0c<code>m</code> \u662fsuccessor\uff0c</p> <p>\u5982\u679c\u9009\u62e9 <code>g</code> \u4ee3\u66ff <code>k</code> \u7684\u4f4d\u7f6e\uff0c\u90a3\u4e48\u6700\u540e\u7684\u7ed3\u679c\u5c31\u662f</p> <pre><code>flowchart TD\ng --- e --- b --- a\nb --- d\ne --- f\ng --- v --- p --- m\np --- r\nv --- y --- x\ny --- z</code></pre>"},{"location":"Notes%20of%20Courses/CS61B/CS61B/#4_9","title":"4","text":"<p>Josh\u63d0\u5230\uff0c\u4f7f\u7528\u4e8c\u5206\u67e5\u627e\u6811\u6765\u5b9e\u73b0\u4e4b\u524d\u63d0\u5230\u7684map\uff0c\u5c06key\u548cvalue\u4e00\u8d77\u4f5c\u4e3a\u6811\u7684\u4e00\u4e2a\u8282\u70b9\u5373\u53ef\uff0c\u67e5\u627e\u65f6\u6309\u7167key\u7684\u503c\u6765\u67e5\u627e\uff0c\u4f8b\u5982</p> <pre><code>flowchart TD\nsumomo[\"sumomo | 1\"] --- momo[\"momo | 2\"] --- mo[\"mo | 2\"]\nmomo --- no[\"no | 1\"]\nsumomo --- uchi[\"uchi | 1\"]</code></pre>"},{"location":"Notes%20of%20Courses/CS61B/CS61B/#lecture-16-qa","title":"Lecture 16 Q&amp;A","text":""},{"location":"Notes%20of%20Courses/CS61B/CS61B/#1_29","title":"1","text":"<p>\u6709\u4eba\u63d0\u95ee\u8fd9\u4e00\u9898</p> <pre><code>public static void f5(int N, int m) {\n    if (N &lt; 10) { return; }\n    for (int i = 0; i &lt;= N % 10; i++) {\n        f5(N / 10, M / 10);\n        System.out.println(M);\n    }\n}\n</code></pre> <p>\u9898\u76ee\u662f\u95ee\u8fd9\u4e2a\u51fd\u6570\u7684\u65f6\u95f4\u590d\u6742\u5ea6O\u662f\u591a\u5c11\u3002</p> <p>\u6700\u540e\u53d1\u73b0\uff0c\u901a\u8fc7\u53d6\u6700\u574f\u60c5\u51b5\u7684N\uff0c999...9\u5bf9\u5e94\u4f1a <code>println</code> 1+10+100+...=111...1\u6b21\uff0c\u6240\u4ee5\u590d\u6742\u5ea6\u662fO(N)\uff0c</p> <p>\u6240\u4ee5\u6211\u89c9\u5f97\u8fd9\u79cd\u9898\u53ef\u4ee5\u76f4\u63a5\u53d6\u6700\u574f\u7684\u60c5\u51b5\u8fdb\u884c\u5206\u6790\u5224\u65ad</p>"},{"location":"Notes%20of%20Courses/CS61B/CS61B/#lab-6","title":"Lab 6","text":""},{"location":"Notes%20of%20Courses/CS61B/CS61B/#1_30","title":"1","text":"<p>\u5b9e\u9a8c\u8bf4\u660e\u4e2d\u63d0\u5230\u4e86\uff0cjava\u4e2d\u53ef\u4ee5\u8fd9\u6837\u83b7\u53d6\u5230\u8fd0\u884c\u65f6\u7684\u8def\u5f84(\u5f53\u524d\u5de5\u4f5c\u76ee\u5f55 current working directory)</p> <pre><code>System.getProperty(\"user.dir\")\n</code></pre> <p>The current working directory (CWD) of a Java program is the directory from where you execute that Java program. You can access the CWD from within a Java program by using <code>System.getProperty(\"user.dir\")</code>.</p> <p>\u6559\u7a0b\u4e2d\u7ed9\u51fa\u4e86IDEA\u4e2d\u8bbe\u7f6e\u5f53\u524d\u5de5\u4f5c\u76ee\u5f55\u7684\u65b9\u6cd5\uff0c</p> <p>In IntelliJ, the CWD is given by the specified directory under Run &gt; Edit Configurations &gt; Working Directory</p> <p>\u300e\u5f53\u524d\u6587\u4ef6\u300f\u4e0b\u7684\u300e\u7f16\u8f91\u914d\u7f6e\u300f&gt;\u300e<code>+</code>\u300f&gt;\u300e\u5e94\u7528\u7a0b\u5e8f\u300f\uff0c\u7136\u540e\u5728\u4e4b\u540e\u7684\u754c\u9762\u91cc\u5c31\u53ef\u4ee5\u8bbe\u7f6e\u5f53\u524d\u5de5\u4f5c\u76ee\u5f55\u4e86</p> <p></p> <p></p> <p></p>"},{"location":"Notes%20of%20Courses/CS61B/CS61B/#2_18","title":"2","text":"<p>\u5b9e\u9a8c\u8bf4\u660e\u4e2d\u7ed9\u51fa\u7684java\u4e2d\u5173\u4e8e\u6587\u4ef6\u548c\u6587\u4ef6\u5939\u7684\u64cd\u4f5c</p> <p>Files</p> <p>You can make a File object in Java with the File constructor and passing in the path to the file:</p> <pre><code>File f = new File(\"dummy.txt\");\n</code></pre> <p>The above path is a relative path where we are referring to the file <code>dummy.txt</code> in our Java program\u2019s CWD. You can think of this File object as a reference to the actual file <code>dummy.txt</code> - when we create the new File object, we aren\u2019t actually creating the <code>dummy.txt</code> file itself, we are just saying, \u201cin the future, when I do operations with <code>f</code>, I want to do these operations on <code>dummy.txt</code>\u201d. To actually create this <code>dummy.txt</code> file, we could call</p> <pre><code>f.createNewFile();\n</code></pre> <p>and then the file <code>dummy.txt</code> will actually now exist (and you could see it in File Explorer / Finder).</p> <p>You can check if the file \u201cdummy.txt\u201d already exists or not with the <code>exists</code> method of the File class:</p> <pre><code>f.exists()\n</code></pre> <p>Actually writing to a file is pretty ugly in Java. To keep things simple, we\u2019ve provided you with a <code>Utils.java</code>. This class will be very handy for this lab and in Gitlet. You should look at the list of available methods in <code>Utils.java</code> to get a sense of what it can do for you. See the FAQ at the bottom of this lab for hints on what to focus on.</p> <p>As an example, if you want to write a String to a file, you can do the following:</p> <pre><code>Utils.writeContents(f, \"Hello World\");\n</code></pre> <p>Now <code>dummy.txt</code> would now have the text \u201cHello World\u201d in it.</p> <p>Directories</p> <p>Directories in Java are also represented with File objects. For example, you can make a File object that represents a directory:</p> <pre><code>File d = new File(\"dummy\");\n</code></pre> <p>Similar to files, this directory might not actually exist in your file system. To actually create the folder in your file system, you can run:</p> <pre><code>d.mkdir();\n</code></pre> <p>and now there should be a folder called <code>dummy</code> in your CWD. You should also checkout the <code>mkdirs()</code> method, whose documentation can be found here.</p>"},{"location":"Notes%20of%20Courses/CS61B/CS61B/#3_13","title":"3","text":"<p>\u5b9e\u9a8c\u8bf4\u660e\u4e2d\u63d0\u5230\u4e86java\u4e2d\u5c06\u53d8\u91cf\u4fdd\u5b58\u5230\u6587\u4ef6\u4e2d\u7684\u65b9\u6cd5\uff0c\u5373\u8ba9\u81ea\u5b9a\u4e49\u7684\u7c7b\u5b9e\u73b0 <code>java.io.Serializable</code> \u8fd9\u4e2a\u63a5\u53e3\uff0c\u7136\u540e\u5c31\u53ef\u4ee5(\u7ed3\u5408java\u4e2d\u5bf9\u6587\u4ef6\u7684\u64cd\u4f5c)\u5c06\u53d8\u91cf\u5199\u5165\u5230\u6307\u5b9a\u7684\u6587\u4ef6\u5f53\u4e2d\u6216\u4ece\u6587\u4ef6\u4e2d\u8bfb\u53d6(\u611f\u89c9\u548cpython\u4e2d\u7684pickle\u5305\u6bd4\u8f83\u7c7b\u4f3c)\uff0c\u4f8b\u5982</p> <pre><code>import java.io.Serializable;\n\npublic class Model implements Serializable {\n    ...\n}\n</code></pre> \u5199\u5165<pre><code>Model m = ....;\nFile outFile = new File(saveFileName);\ntry {\n    ObjectOutputStream out =\n        new ObjectOutputStream(new FileOutputStream(outFile));\n    out.writeObject(m);\n    out.close();\n} catch (IOException excp) {\n    ...\n}\n</code></pre> \u8bfb\u53d6<pre><code>Model m;\nFile inFile = new File(saveFileName);\ntry {\n    ObjectInputStream inp =\n        new ObjectInputStream(new FileInputStream(inFile));\n    m = (Model) inp.readObject();\n    inp.close();\n} catch (IOException | ClassNotFoundException excp) {\n    ...\n    m = null;\n}\n</code></pre>"},{"location":"Notes%20of%20Courses/CS61B/CS61B/#4_10","title":"4","text":"<p>\u5728\u4f7f\u7528 <code>make</code> \u65f6\uff0c\u9700\u8981\u4f7f\u7528git bash\uff0c\u4f7f\u7528powershell\u65f6\u51fa\u73b0\u4e86\u8fd9\u6837\u7684\u62a5\u9519</p> <pre><code>PS C:\\Github\\CS-61B-Spring-2021\\hwCode\\lab6&gt; make check              \n\"C:/Program Files (x86)/GnuWin32/bin/make\" -C testing PYTHON=python3 TESTER_FLAGS=\"\" check\nmake[1]: Entering directory `C:/Github/CS-61B-Spring-2021/hwCode/lab6/testing'\n\u7cfb\u7edf\u627e\u4e0d\u5230\u6307\u5b9a\u7684\u8def\u5f84\u3002\n'true' \u4e0d\u662f\u5185\u90e8\u6216\u5916\u90e8\u547d\u4ee4\uff0c\u4e5f\u4e0d\u662f\u53ef\u8fd0\u884c\u7684\u7a0b\u5e8f\n\u6216\u6279\u5904\u7406\u6587\u4ef6\u3002\nmake[1]: *** [check] \u9519\u8bef 1\nmake[1]: Leaving directory `C:/Github/CS-61B-Spring-2021/hwCode/lab6/testing'\nmake: *** [check] \u9519\u8bef 2\n</code></pre> <p>\u6362\u6210git bash\u4e4b\u540e\uff0c\u8fd0\u884c <code>make check</code> \u65f6\u51fa\u73b0\u4e86\u8fd9\u6837\u7684\u62a5\u9519</p> <pre><code>$ make check\n\"C:/Program Files (x86)/GnuWin32/bin/make\" -C testing PYTHON=python3 TESTER_FLAGS=\"\" check\nmake[1]: Entering directory `C:/Github/CS-61B-Spring-2021/hwCode/lab6/testing'\nTesting application capers.Main...\npython3 tester.py  --src=our-src our/*.in\nmake[1]: *** [check] \u9519\u8bef 49\nmake[1]: Leaving directory `C:/Github/CS-61B-Spring-2021/hwCode/lab6/testing'\nmake: *** [check] \u9519\u8bef 2\n</code></pre> <p>\u53d1\u73b0\u6309\u7167\u4efb\u52a1\u8bf4\u660eFAQs\u4e2d\u8bf4\u7684\uff0c\u7531\u4e8ewindows\u4e2d\u7684\u8fd0\u884cpython\u7684\u547d\u4ee4\u662f <code>python</code> \u800c\u4e0d\u662f <code>python3</code> \uff0c\u6240\u4ee5\u52a0\u4e00\u4e2a <code>PYTHON=python</code> \u5373\u53ef</p> <pre><code>make check PYTHON=python\n</code></pre>"},{"location":"Notes%20of%20Courses/CS61B/CS61B/#lecture-17-b-trees-2-3-2-3-4-trees","title":"Lecture 17 B-Trees (2-3, 2-3-4 Trees)","text":""},{"location":"Notes%20of%20Courses/CS61B/CS61B/#1_31","title":"1","text":"<p>Big O\u867d\u7136\u7c7b\u4f3c\u4e8e\u5c0f\u4e8e\u7b49\u4e8e\uff0c\u4f46\u662f\u901a\u5e38\u7528\u4e8e\u8868\u793a\u6700\u574f\u7684\u60c5\u51b5\u7684Big Theta\u662f\u8fd9\u6837</p> <p>(Big O) Allows us to make simple blanket statements, e.g. can just say \u201cbinary search is O(log N)\u201d instead of \u201cbinary search is \u0398(log N) in the worst cast\u201d.</p>"},{"location":"Notes%20of%20Courses/CS61B/CS61B/#2_19","title":"2","text":"<p>\u6811\u7684\u9ad8\u5ea6 Height\u3001\u6df1\u5ea6 Depth\u7684\u5b9a\u4e49\uff0c\u4ee5\u53ca\u5b83\u4eec\u548c\u8fd0\u884c\u65f6\u95f4 Runtime\u7684\u5173\u7cfb</p> <pre><code>flowchart TD\nk --- e --- b --- a\nb --- d\ne --- g --- f\ng --- j\nk --- v --- p --- r --- s\nv --- y --- z</code></pre> <p>Height and Depth</p> <p>Height and average depth are important properties of BSTs.</p> <ul> <li>The \u201cdepth\u201d of a node is how far it is from the root, e.g. depth(g) = 2.</li> <li>The \u201cheight\u201d of a tree is the depth of its deepest leaf, e.g. height(T) = 4.</li> <li>The \u201caverage depth\u201d of a tree is the average depth of a tree's nodes.<ul> <li>(0x1 + 1x2 + 2x4 + 3x6 + 4x1)/(1+2+4+6+1) = 2.35</li> </ul> </li> </ul> <p>Height, Depth and Runtime</p> <p>Height and average depth determine runtimes for BST operations.</p> <ul> <li>The \u201cheight\u201d of a tree determines the worst case runtime to find a node.<ul> <li>Example: Worst case is contains(s), requires 5 comparisons (height + 1).</li> </ul> </li> <li>The \u201caverage depth\u201d determines the average case runtime to find a node.<ul> <li>Example: Average case is 3.35 comparisons (average depth + 1).</li> </ul> </li> </ul>"},{"location":"Notes%20of%20Courses/CS61B/CS61B/#3_14","title":"3","text":"<p>ppt\u4e2d\u5c55\u793a\u7684\u4e00\u4e2a3\u9636B\u6811\u6dfb\u52a0\u5143\u7d20\u53d8\u5316\u7684\u8fc7\u7a0b</p> <p></p>"},{"location":"Notes%20of%20Courses/CS61B/CS61B/#4_11","title":"4","text":"<p>\u7279\u6b8aB\u6811\u7684\u522b\u79f0</p> <ul> <li>B-trees of order L=3 (like we used today) are also called a 2-3-4 tree or a 2-4 tree.<ul> <li>\u201c2-3-4\u201d refers to the number of children that a node can have, e.g. a 2-3-4 tree node may have 2, 3, or 4 children.</li> </ul> </li> <li>B-trees of order L=2 are also called a 2-3 tree.</li> </ul> <p>B-Trees are most popular in two specific contexts:</p> <ul> <li>Small L (L=2, L=3):<ul> <li>Used as a conceptually simple balanced search tree (as today).</li> </ul> </li> <li>L is very large (say thousands).<ul> <li>Used in practice for databases and filesystems (i.e. systems with very large records).</li> </ul> </li> </ul> <p>B\u6811\u7684\u4e24\u4e2a\u4e0d\u53d8\u5f0f Invariant</p> <ul> <li>All leaves must be the same distance from the source.</li> <li>A non-leaf node with k items must have exactly k+1 children.</li> </ul> <p>B\u6811\u7684\u9ad8\u5ea6\uff1a\u5728 ~log<sub>L+1</sub>(N) \u548c ~log\u2082(N) \u4e4b\u95f4</p>"},{"location":"Notes%20of%20Courses/CS61B/CS61B/#5_7","title":"5","text":"<p>B\u6811\u7684\u8fd0\u884c\u65f6\u95f4 Runtime</p> <p>Runtime for <code>contains</code></p> <p>Runtime for contains:</p> <ul> <li>Worst case number of nodes to inspect: H + 1</li> <li>Worst case number of items to inspect per node: L</li> <li>Overall runtime: O(HL)</li> </ul> <p>Since H = \u0398(log N), overall runtime is O(L log N).</p> <ul> <li>Since L is a constant, runtime is therefore O(log N).</li> </ul> <p>Runtime for <code>add</code>:</p> <ul> <li>Worst case number of nodes to inspect: H + 1</li> <li>Worst case number of items to inspect per node: L</li> <li>Worst case number of split operations: H + 1</li> <li>Overall runtime: O(HL)</li> </ul> <p>... O(log N).</p>"},{"location":"Notes%20of%20Courses/CS61B/CS61B/#lecture-18-red-black-trees","title":"Lecture 18 Red Black Trees","text":""},{"location":"Notes%20of%20Courses/CS61B/CS61B/#1_32","title":"1","text":"<p>Josh\u4ecb\u7ecd\u5230\u7ea2\u9ed1\u6811\u548c2-3 tree\u662f\u4e00\u6837\u7684(\u6570\u5b66\u4e0a\u53ef\u4ee5\u53eb\u505a\u53cc\u5c04 bijection)\uff0c\u4e0b\u56feppt\u4e2d\u5c55\u793a\u7684\u662f\u5de6\u503e Left-Leaning\u7ea2\u9ed1\u6811\uff0c\u5de6\u503e\u5373\u4ee3\u8868 \u8868\u793a2-3tree\u4e2d\u540c\u4e00\u4e2a\u8282\u70b9\u4e0a\u4e24\u4e2a\u5143\u7d20\u7684\u7ea2\u9ed1\u6811\u7684\u4e24\u4e2a\u8282\u70b9 \u4e4b\u95f4\u7528\u8fde\u63a5\u5de6\u5b50\u6811\u7684\u7ebf\u8fdb\u884c\u8fde\u63a5</p> <p></p> <p>Some handy LLRB properties:</p> <ul> <li>No node has two red links [otherwise it'd be a analogous to a 4-node, which are disallowed in 2-3 trees].</li> <li>Every path from root to a leaf has same number of black links [because 2-3 trees have the same number of links to every leaf]. LLRBs are therefore balanced.</li> </ul>"},{"location":"Notes%20of%20Courses/CS61B/CS61B/#2_20","title":"2","text":"<p>Josh\u901a\u8fc74\u4e2a\u4f8b\u5b50\uff0c\u8bb2\u89e3\u4e86\u7ea2\u9ed1\u6811\u5982\u4f55\u6784\u5efa\u7684\u8fc7\u7a0b</p> <ul> <li>When insering: Use a red link.</li> <li>If there is a right leaning \u201c3-node\u201d, we have a Left Leaning Violation.<ul> <li>Rotate left the appropriate node to fix.</li> </ul> </li> <li>If there are two consecutive left links, we have an Incorrect 4 Node Violation.<ul> <li>Rotate right the appropriate node to fix.</li> </ul> </li> <li>If there are any nodes with two red children, we have a Temporary 4 Node.<ul> <li>Color flip the node to emulate the split operation.</li> </ul> </li> </ul> <p></p> <p></p> <p></p> <p></p> <p></p>"},{"location":"Notes%20of%20Courses/CS61B/CS61B/#lab-7","title":"Lab 7","text":""},{"location":"Notes%20of%20Courses/CS61B/CS61B/#1_33","title":"1","text":"<p>\u4efb\u52a1\u8bf4\u660e\u4e2d\u63d0\u5230\u4e86\u6cdb\u578b generic\u4e5f\u53ef\u4ee5\u6307\u5b9a\u7c7b\u578b</p> <p>This can be enforced in Java with a bounded type parameter. Consider the example below, taken from the Oracle docs:</p> <pre><code>/*\n * Bounded type parameters allow you to invoke methods defined in the bounds:\n * The `isEven` method invokes the `intValue` method defined in the \n * `Integer` class through `n`.\n */\n\npublic class NaturalNumber&lt;T extends Integer&gt; {\n\n    private T n;\n\n    public NaturalNumber(T n)  { this.n = n; }\n\n    public boolean isEven() {\n        return n.intValue() % 2 == 0;\n    }\n\n    // ...\n}\n</code></pre>"},{"location":"Notes%20of%20Courses/CS61B/CS61B/#lecture-19-hashing","title":"Lecture 19 Hashing","text":""},{"location":"Notes%20of%20Courses/CS61B/CS61B/#1_34","title":"1","text":"<p>Josh\u63d0\u5230\u901a\u8fc7\u5c06\u54c8\u5e0c\u8868\u4ece\u50a8\u5b58 <code>true</code> \u6216 <code>false</code> \u6539\u6210\u50a8\u5b58\u54c8\u5e0c\u503c\u4e3a\u5bf9\u5e94\u4e0b\u6807\u7684\u5bf9\u8c61\u6765\u89e3\u51b3 \u6b67\u4e49 Ambiguity \u7684\u95ee\u9898</p> <p>\u800c\u53ef\u4ee5\u4f7f\u7528\u4e0d\u540c\u7684\u6570\u636e\u7ed3\u6784\u53bb\u5b9e\u73b0\u8fd9\u4e2a\u65b9\u6cd5</p> <p>Resolving Ambiguity</p> <p>Suppose N items have the same numerical representation h:</p> <ul> <li>Instead of storing <code>true</code> in position h, store a \u201cbucket\u201d of these N items at position h.</li> </ul> <p>How to implement a \u201cbucket\u201d?</p> <ul> <li>Conceptually simplest way: LinkedList.</li> <li>Could also use ArrayLists.</li> <li>Could also use an ArraySet.</li> <li>Will see it doesn't really matter what you do.</li> </ul> <p>\u8fd8\u80fd\u518d\u8fdb\u4e00\u6b65\u5bf9\u54c8\u5e0c\u503c\u53d6\u6a21\uff0c\u800c\u51cf\u5c11\u4e0b\u6807\u7684\u603b\u6570</p> <ul> <li>Data is converted by hash function into an integer representation called a hash code.</li> <li>The hash code is then reduced to a valid index, usually using the modulus operators, e.g. 2348762878 % 10 = 8.</li> </ul> <p>\u4f46\u662f\u8fd9\u6837\u4f1a\u4f7f\u5f97\u6bcf\u4e2abucket\u7684\u957f\u5ea6\u4e3a\u0398(N) (\u5219\u54c8\u5e0c\u8868\u7684\u64cd\u4f5c\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e5f\u662f\u0398(N) )\uff0c\u6240\u4ee5\u901a\u8fc7\u52a8\u6001\u589e\u52a0bucket\u7684\u4e2a\u6570\u6765\u4f7f\u5f97\u65f6\u95f4\u590d\u6742\u5ea6\u53d8\u6210O(1)</p> <p>One example strategy: When N/M is \u2265 1.5, then double M.</p> <ul> <li>We often call this process of increasing M \u201cresizing\u201d.</li> <li>N/M is often called the \u201cload factor\u201d. It represents how full the hash table is.</li> </ul>"},{"location":"Notes%20of%20Courses/CS61B/CS61B/#2_21","title":"2","text":"<p>Josh\u63d0\u5230\u4e86\u4e24\u4e2a\u9700\u8981\u6ce8\u610f\u7684\u8b66\u544a</p> <p>Two Important Warnings When Using HashMaps/HashSets</p> <p>Warning #1: Never store objects that can change in a <code>HashSet</code> or <code>HashMap</code>!</p> <ul> <li>If an object's variables changes, then its hashCode changes. May result in items getting lost.</li> </ul> <p>Warning #2: Never override <code>equals</code> without also overriding <code>hashCode</code>.</p> <ul> <li>Can also lead to items getting lost and genarally weird behavior.</li> <li>HashMaps and HashSets use equals to determine if an item exists in a particular bucket.</li> <li>See HW3 or the study guide problems.</li> </ul>"},{"location":"Notes%20of%20Courses/CS61B/CS61B/#homework-2","title":"Homework 2Q1 Asymptotic Warmup32 PointsQ2 Asymptotic Potpourri32 PointsQ2 WQU32 PointsQ4 Switcheroo32 PointsQ5 Mechanical Hashing32 Points","text":"<p>\u6211\u7684\u7b54\u6848(\u597d\u50cf\u5b98\u65b9\u6ca1\u6709\u63d0\u4f9b\u53c2\u8003\u7b54\u6848)</p> \u6211\u7684\u7b54\u6848\u53ca\u601d\u8def <p>HW2: Conceptual Review</p> <p></p> <p>Give the tightest asymptotic bound on <code>foo(n)</code>.</p> <pre><code>public int foo(int n) {\n   if (n == 0) {\n      return 0;\n   }\n   bloop(n);\n   return foo(n/3) + foo(n/3) + foo(n/3);\n\npublic int bloop(int n) {\n   for (int i = 0; i &lt; n; i += 1) {\n      System.out.println(\"Ah, loops too\");\n   }\n   return n;\n}\n</code></pre> <ul> <li> \\(\\Omega(1)\\)</li> <li> \\(\\Omega(\\log(n))\\)</li> <li> \\(\\Omega(n)\\)</li> <li> \\(\\Omega(n \\cdot \\log(n))\\)</li> <li> \\(\\Omega(n^2)\\)</li> <li> \\(\\Omega(n^3)\\)</li> <li> \\(\\Omega(3^n)\\)</li> <li> \\(\\Omega(n!)\\)</li> <li> \\(\\Theta(1)\\)</li> <li> \\(\\Theta(\\log(n))\\)</li> <li> \\(\\Theta(n)\\)</li> <li> \\(\\Theta(n \\cdot \\log(n))\\)</li> <li> \\(\\Theta(n^2)\\)</li> <li> \\(\\Theta(n^3)\\)</li> <li> \\(\\Theta(3^n)\\)</li> <li> \\(\\Theta(n!)\\)</li> <li> \\(O(1)\\)</li> <li> \\(O(\\log(n))\\)</li> <li> \\(O(n)\\)</li> <li> \\(O(n \\cdot \\log(n))\\)</li> <li> \\(O(n^2)\\)</li> <li> \\(O(n^3)\\)</li> <li> \\(O(3^n)\\)</li> <li> \\(O(n!)\\)</li> </ul> \u601d\u8def <p><code>foo</code> \u7684\u6bcf\u4e00\u5c42\u9012\u5f52\uff0c<code>foo(n/3) + foo(n/3) + foo(n/3)</code> \u52a0\u8d77\u6765\u521a\u597d\u4f1a <code>println</code> n\u6b21\uff0c\u800c\u4e00\u5171\u4f1a\u6709 \\(\\log_3 n\\) \u5c42\u9012\u5f52\uff0c\u6240\u4ee5\u662f \\(\\Theta(n \\cdot \\log(n))\\)</p> <p></p> <p>Note: This is the hardest problem on this Homework. If you are stuck on it for a long time, move on to other problems, and post on Ed or come to Office Hours so we can help you.</p> <p>Give the runtime of the following functions in \\(\\Theta\\) notation. Your answer should be a function of N that is as simple as possible with no unnecessary leading constants or lower order terms.</p> <p>Q2.1 Mystery 18 Points</p> <pre><code>public void mystery1(int n) {\n   for (int i = n; i &gt; 0; i = i / 2) {\n      for (int j = 0; j &lt; 100000000; j += 2) {\n         System.out.println(\"Hello World\");\n      }\n   }\n}\n</code></pre> <ul> <li> \\(1\\)</li> <li> \\(\\log(n)\\)</li> <li> \\(n\\)</li> <li> \\(n \\cdot \\log(n)\\)</li> <li> \\((\\log(n))^2\\)</li> <li> \\(n^2\\)</li> <li> \\(n^2\\cdot\\log(n)\\)</li> <li> \\(2^n\\)</li> <li> \\(n!\\)</li> <li> Other</li> </ul> <p>Q2.2 Mystery 28 Points</p> <pre><code>public void mystery2(int n) {\n   for (int i = 1; i &lt; n; i += 1) {\n      for (int j = 0; j &lt; n; j += 1) {\n         i = i * 2;\n         j = j * 2;\n      }\n   }\n}\n</code></pre> <ul> <li> \\(1\\)</li> <li> \\(\\log(n)\\)</li> <li> \\(n\\)</li> <li> \\(n \\cdot \\log(n)\\)</li> <li> \\((\\log(n))^2\\)</li> <li> \\(n^2\\)</li> <li> \\(n^2\\cdot\\log(n)\\)</li> <li> \\(2^n\\)</li> <li> \\(n!\\)</li> <li> Other</li> </ul> \u601d\u8def <p>\u5f53\u5185\u90e8 <code>j</code> \u7684\u5faa\u73af\u7ed3\u675f\u7684\u65f6\u5019( <code>j &gt;= n</code> \u65f6)\uff0c\u57fa\u672c\u4e0a\u4e5f\u6709 <code>i &gt;= n</code> \u4e86\uff0c\u5916\u90e8 <code>i</code> \u7684\u5faa\u73af\u5927\u6982\u53ea\u80fd\u5faa\u73af1\u52302\u6b21\uff0c\u56e0\u6b64\u662f \\(\\Theta(\\log(n))\\)</p> <p>Q2.3 Mystery 38 Points</p> <pre><code>public void mystery3(int n) {\n    for (int i = n; i &gt; 0; i = i / 2) {\n        for (int j = 1; j &lt; i * i; j *= 2) {\n            System.out.println(\"Hello World\");\n        }\n    }\n}\n</code></pre> <p>What sum represents the work done by <code>mystery3(n)</code>?</p> <ul> <li> \\(1 + 2 + 3 + \\cdots + n\\)</li> <li> \\(1 + 2 + 3 + \\cdots + \\log(n)\\)</li> <li> \\(2^0 + 2^1 + 2^2 + \\cdots + 2^{\\log(n)}\\)</li> <li> \\(2^0 + 2^1 + 2^2 + \\cdots + 2^n\\)</li> <li> \\(2^0 + 2^1 + 2^2 + \\cdots + n^2\\)</li> <li> \\(\\log(n^2) + \\log\\left(\\frac{n^2}{2}\\right) + \\log\\left(\\frac{n^2}{2^2}\\right) + \\log\\left(\\frac{n^2}{2^3}\\right) + \\cdots + 1\\)</li> <li> \\(\\log(n) + \\log\\left(\\frac{n}{2}\\right) + \\log\\left(\\frac{n}{3}\\right) + \\cdots + 1\\)</li> <li> Other</li> </ul> <p>Q2.4 Mystery 48 Points</p> <p>Here, assume that the <code>SLList</code> constructor, and the <code>size</code> and <code>addFirst</code> methods take constant time.</p> <pre><code>public void mystery4(int n) {\n    SLList&lt;Integer&gt; list = new SLList&lt;&gt;();\n    for (int i = 1; list.size() &lt; n; i += 1) {\n        for (int j = 0; j &lt; i; j += 1) {\n            list.addFirst(j);\n        }\n        System.out.print(list.size() + \" + \");\n    }\n}\n</code></pre> <ul> <li> \\(1\\)</li> <li> \\(\\log(n)\\)</li> <li> \\(n\\)</li> <li> \\(n \\cdot \\log(n)\\)</li> <li> \\((\\log(n))^2\\)</li> <li> \\(n^2\\)</li> <li> \\(n^2\\cdot\\log(n)\\)</li> <li> \\(2^n\\)</li> <li> \\(n!\\)</li> <li> Other</li> </ul> <p>Q3.1 Mechanical8 Points</p> <p>Here, fill in the value in each index of the resulting underlying array of the Weighted Quick Union object.</p> <p>Value in index 0:</p> <pre><code>5\n</code></pre> <p>Value in index 1:</p> <pre><code>0\n</code></pre> <p>Value in index 2:</p> <pre><code>5\n</code></pre> <p>Value in index 3:</p> <pre><code>2\n</code></pre> <p>Value in index 4:</p> <pre><code>2\n</code></pre> <p>Value in index 5:</p> <pre><code>-5\n</code></pre> <p>Value in index 6:</p> <pre><code>-1\n</code></pre> <p>Value in index 7:</p> <pre><code>5\n</code></pre> <p>Value in index 8:</p> <pre><code>-1\n</code></pre> <p>Value in index 9:</p> <pre><code>5\n</code></pre> <p>Value in index 10:</p> <pre><code>-1\n</code></pre> \u601d\u8def <p>\u8fd9\u9898\u4e2d\u5173\u952e\u7684\u7ed3\u675f\u5faa\u73af\u7684\u5224\u65ad\u6761\u4ef6\u662f <code>list.size() &lt; n</code> \uff0c\u6240\u4ee5\u5728\u7ed3\u675f\u524d\uff0c\u94fe\u8868\u53ea\u4f1a\u88ab\u6dfb\u52a0n\u4e2a\u5de6\u53f3\u7684\u5143\u7d20\uff0c\u6240\u4ee5\u662f \\(\\Theta(n)\\)</p> <p></p> <p>Draw the Weighted Quick Union object on 0 through 10, that results from the following <code>connect</code> calls. Do not use path compression. Note that if we connect two sets of  equal weight, by convention we make the set whose root has a smaller number the child of the other. We use the convention that if an element is the root of the set, its array value is the weight of the set negated.</p> <pre><code>connect(0, 1);\nconnect(2, 3);\nconnect(9, 5);\nconnect(5, 7);\nconnect(7, 1);\nconnect(4, 2);\nconnect(3, 1);\n</code></pre> \u601d\u8def <p>\u7528\u8868\u683c\u8bb0\u5f55\u6570\u7ec4\u7684\u53d8\u5316\u5982\u4e0b</p> \u6570\u7ec4\u4e0b\u6807 0 1 2 3 4 5 6 7 8 9 10 \u521d\u59cb -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 connect(0, 1) -2 0 connect(2, 3) -2 2 connect(9, 5) -2 5 connect(5, 7) -3 5 connect(7, 1) 5 -4 connect(4, 2) -3 2 connect(3, 1) 5 -5 \u7ed3\u675f 5 0 5 2 2 -5 -1 5 -1 5 -1 <p>Q3.2 Best and Worst Heights8 Points</p> <p>Assume that a single node has a height of 0. What are the shortest and tallest heights for a Quick Union object with 16 connected elements? What about for a Weighted Quick Union object?</p> <p>Quick Union: Shortest</p> <pre><code>1\n</code></pre> <p>Quick Union: Tallest</p> <pre><code>15\n</code></pre> <p>Weighted Quick Union: Shortest</p> <pre><code>1\n</code></pre> <p>Weighted Quick Union: Tallest</p> <pre><code>4\n</code></pre> \u601d\u8def <p>\u4e24\u8005\u6700\u597d\u7684\u60c5\u51b5\u90fd\u662f\u6240\u6709\u8282\u70b9\u90fd\u8fde\u5728\u540c\u4e00\u4e2a\u6839\u8282\u70b9\u4e0a(\u6240\u4ee5\u9ad8\u5ea6\u90fd\u662f1)\uff0cQuick Union\u6700\u574f\u7684\u60c5\u51b5\u662f\u53d8\u6210\u7c7b\u4f3c\u94fe\u8868\uff0c\u6240\u4ee5\u9ad8\u5ea6\u662fn-1=15\uff0cWeighted Quick Union\u6309\u7167Josh ppt\u4e0a\u7684\u56fe\uff0c\u6700\u574f\u7684\u60c5\u51b5\u7684\u9ad8\u5ea6\u662flog\u2082n=4\u3002</p> <p>\u4e0b\u9762\u4e24\u9898\u7684\u6700\u597d\u6700\u574f\u60c5\u51b5\u4e5f\u5dee\u4e0d\u591a\u5c31\u662f\u8fd9\u6837\u7684\u60c5\u51b5\uff0c\u56e0\u6b64\u7b54\u6848\u7c7b\u4f3c\u3002</p> <p>Q3.3 Connect Runtime8 Points</p> <p>What are the best and worst runtimes for <code>connect</code> in a Quick Union object with \\(n\\) elements? What about in a Weighted Quick Union object?</p> <p>Quick Union: Best Case</p> <ul> <li> \\(1\\)</li> <li> \\(\\log(n)\\)</li> <li> \\(n\\)</li> <li> \\(n \\cdot \\log(n)\\)</li> <li> \\(n^2\\)</li> <li> \\(2^n\\)</li> <li> Other</li> </ul> <p>Quick Union: Worst Case</p> <ul> <li> \\(1\\)</li> <li> \\(\\log(n)\\)</li> <li> \\(n\\)</li> <li> \\(n \\cdot \\log(n)\\)</li> <li> \\(n^2\\)</li> <li> \\(2^n\\)</li> <li> Other</li> </ul> <p>Weighted Quick Union: Best Case</p> <ul> <li> \\(1\\)</li> <li> \\(\\log(n)\\)</li> <li> \\(n\\)</li> <li> \\(n \\cdot \\log(n)\\)</li> <li> \\(n^2\\)</li> <li> \\(2^n\\)</li> <li> Other</li> </ul> <p>Weighted Quick Union: Worst Case</p> <ul> <li> \\(1\\)</li> <li> \\(\\log(n)\\)</li> <li> \\(n\\)</li> <li> \\(n \\cdot \\log(n)\\)</li> <li> \\(n^2\\)</li> <li> \\(2^n\\)</li> <li> Other</li> </ul> <p>Q3.4 isConnected Runtime8 Points</p> <p>What are the best and worst runtimes for <code>isConnected</code> in a Quick Union object with \\(n\\) elements? What about in a Weighted Quick Union object?</p> <p>Quick Union: Best Case</p> <ul> <li> \\(1\\)</li> <li> \\(\\log(n)\\)</li> <li> \\(n\\)</li> <li> \\(n \\cdot \\log(n)\\)</li> <li> \\(n^2\\)</li> <li> \\(2^n\\)</li> <li> Other</li> </ul> <p>Quick Union: Worst Case</p> <ul> <li> \\(1\\)</li> <li> \\(\\log(n)\\)</li> <li> \\(n\\)</li> <li> \\(n \\cdot \\log(n)\\)</li> <li> \\(n^2\\)</li> <li> \\(2^n\\)</li> <li> Other</li> </ul> <p>Weighted Quick Union: Best Case</p> <ul> <li> \\(1\\)</li> <li> \\(\\log(n)\\)</li> <li> \\(n\\)</li> <li> \\(n \\cdot \\log(n)\\)</li> <li> \\(n^2\\)</li> <li> \\(2^n\\)</li> <li> Other</li> </ul> <p>Weighted Quick Union: Worst Case</p> <ul> <li> \\(1\\)</li> <li> \\(\\log(n)\\)</li> <li> \\(n\\)</li> <li> \\(n \\cdot \\log(n)\\)</li> <li> \\(n^2\\)</li> <li> \\(2^n\\)</li> <li> Other</li> </ul> <p></p> <p>Consider the following 2-3 tree:</p> <p></p> <p>Q4.1 Balance the Tree20 Points</p> <p>Convert this 2-3 tree to an LLRB, and describe the 6 LLRB operations to balance the tree after inserting the number 11. The LLRB operations are: <code>rotateRight(x)</code>, <code>rotateLeft(x)</code>, and <code>colorFlip(x)</code></p> <pre><code>rotateLeft(10)\n</code></pre> <pre><code>rotateRight(15)\n</code></pre> <pre><code>colorFlip(11)\n</code></pre> <pre><code>rotateLeft(9)\n</code></pre> <pre><code>rotateRight(17)\n</code></pre> <pre><code>colorFlip(11)\n</code></pre> \u601d\u8def <p>\u539f\u59cb\u7ea2\u9ed1\u6811</p> <p></p> <p>\u63d2\u516511</p> <p></p> <p><code>rotateLeft(10)</code></p> <p></p> <p><code>rotateRight(15)</code></p> <p></p> <p><code>colorFlip(11)</code></p> <p></p> <p><code>rotateLeft(9)</code></p> <p></p> <p><code>rotateRight(17)</code></p> <p></p> <p><code>colorFlip(11)</code></p> <p></p> <p>Q4.2 LLRB Height6 Points</p> <p>After inserting 11 and balancing the LLRB, how many nodes are on along the longest path from the root to a leaf.</p> <pre><code>4\n</code></pre> <p>Q4.3 Red Links6 Points</p> <p>After inserting 11 and balancing the LLRB, how many red links are on along the longest path from the root to a leaf.</p> <pre><code>2\n</code></pre> <p></p> <p>Suppose we insert the following words into an initially empty hash table, in this order: kerfuffle, broom, hroom, ragamuffin, donkey, brekky, blob, zenzizenzizenzic, and yap. Assume that the hash code of a String is just its length (note that this is not actually the hash code for Strings in Java). Use separate chaining to resolve collisions. Assume 4 is the initial size of the hash table array, and double this array\u2019s size when the load factor is equal to 1. Illustrate this hash table with a box-and-pointer diagram.</p> <p>For each index of the final hash table, specify what Strings are stored in it. If it is empty, write <code>None</code>. In your final answer, do not wrap Strings in quotes. </p> <p>If an index has more than 1 String in it, separate them using a comma and a single space. For example, if index 0 stores the Strings <code>one</code> and <code>two</code>, your answer should be <code>one, two</code>.</p> <p>Elements in index 0:</p> <pre><code>zenzizenzizenzic\n</code></pre> <p>Elements in index 1:</p> <pre><code>None\n</code></pre> <p>Elements in index 2:</p> <pre><code>None\n</code></pre> <p>Elements in index 3:</p> <pre><code>yap\n</code></pre> <p>Elements in index 4:</p> <pre><code>blob\n</code></pre> <p>Elements in index 5:</p> <pre><code>broom, hroom\n</code></pre> <p>Elements in index 6:</p> <pre><code>donkey, brekky\n</code></pre> <p>Elements in index 7:</p> <pre><code>None\n</code></pre> <p>Elements in index 8:</p> <pre><code>None\n</code></pre> <p>Elements in index 9:</p> <pre><code>kerfuffle\n</code></pre> <p>Elements in index 10:</p> <pre><code>ragamuffin\n</code></pre> <p>Elements in index 11:</p> <pre><code>None\n</code></pre> <p>Elements in index 12:</p> <pre><code>None\n</code></pre> <p>Elements in index 13:</p> <pre><code>None\n</code></pre> <p>Elements in index 14:</p> <pre><code>None\n</code></pre> <p>Elements in index 15:</p> <pre><code>None\n</code></pre>"},{"location":"Notes%20of%20Courses/CS61B/CS61B/#project-2","title":"Project 2","text":""},{"location":"Notes%20of%20Courses/CS61B/CS61B/#1_35","title":"1","text":"<p>\u5728\u8c03\u7528 <code>gitlet.Utils</code> \u4e2d\u7684 <code>plainFilenamesIn</code> \u65b9\u6cd5\uff0c\u4f7f\u7528\u8fd4\u56de\u7684 <code>List</code> \u7684\u8fc7\u7a0b\u4e2d\uff0c\u53d1\u73b0\u5728\u8c03\u7528 <code>remove</code> \u65b9\u6cd5\u65f6\uff0c\u51fa\u73b0\u4e86 <code>UnsupportedOperationException</code> \u7684\u62a5\u9519\uff0c</p> <p>\u6700\u540e\u5728\u7f51\u4e0a\u641c\u7d22\uff0c\u53d1\u73b0\u662f\u8fd9\u6837\u7684\u539f\u56e0</p> <p>java - Why do I get an UnsupportedOperationException when trying to remove an element from a List? - Stack Overflow</p> <p>(\u6839\u636e\u8fd9\u4e2a\u56de\u7b54)\u5bf9\u6b64\u53ef\u4ee5\u8fd9\u6837\u8fdb\u884c\u4fee\u6539</p> <pre><code>List&lt;String&gt; list = new LinkedList&lt;String&gt;(Arrays.asList(split));\n</code></pre>"},{"location":"Notes%20of%20Courses/CS61B/CS61B/#lecture-21-tree-and-graph-traversals","title":"Lecture 21 Tree and Graph Traversals","text":""},{"location":"Notes%20of%20Courses/CS61B/CS61B/#1_36","title":"1","text":"<p>Josh\u5728\u4ecb\u7ecd\u4e8c\u53c9\u6811\u7684\u4e09\u79cd\u904d\u5386\u65b9\u5f0f\u65f6\uff0c\u63d0\u5230\u4e86\u4e00\u4e2a\u6bd4\u8f83\u65b9\u4fbf\u7684\u5c0f\u6280\u5de7</p> <p></p> <p>A Useful Visual Trick (for Humans, Not Algorithms)</p> <ul> <li>Preorder traversal: We trace a path around the graph, from the top going counter-clockwise. \u201cVisit\u201d every time we pass the LEFT of a node.</li> <li>Inorder traversal: \u201cVisit\u201d when you cross the bottom of a node.</li> <li>Postorder traversal: \u201cVisit\u201d when you cross the right a node.</li> </ul>"},{"location":"git%E7%9B%B8%E5%85%B3/fastgithub/","title":"FastGithub","text":"<p> \u7ea6 11 \u4e2a\u5b57 </p>"},{"location":"git%E7%9B%B8%E5%85%B3/fastgithub/#1","title":"1","text":"<p>FastGithub\u4e0b\u8f7d\u53ca\u4f7f\u7528 - \u77e5\u4e4e (zhihu.com)</p>"},{"location":"git%E7%9B%B8%E5%85%B3/github%20copilot/","title":"Github Copilot","text":"<p> \u7ea6 244 \u4e2a\u5b57  7 \u884c\u4ee3\u7801  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 1 \u5206\u949f</p>"},{"location":"git%E7%9B%B8%E5%85%B3/github%20copilot/#1","title":"1","text":"<p>Copilot\u6fc0\u6d3b\u65b9\u5f0f</p> <ol> <li> <p>\u6210\u529f\u8ba4\u8bc1\u5b66\u751f\u5305\u540e\uff0c\u6253\u5f00GitHub\uff0c\u8fdb\u5165\u4e2a\u4eba\u8bbe\u7f6e-&gt;Billing and plans-&gt;Plans and usage-&gt;Enable GitHub Copilot\u3002</p> </li> <li> <p>\u8df3\u8f6c\u540e\u70b9\u51fbGet access to GitHub Copilot\u5c31\u597d\u5566\u3002</p> </li> <li> <p>\u8df3\u8f6c\u540e\u7684\u9875\u9762\u9009\u62e9Allow\u3002 </p> </li> </ol>"},{"location":"git%E7%9B%B8%E5%85%B3/github%20copilot/#2","title":"2","text":"<p>pycharm\u3001clion\u7b49ide\u5b89\u88c5github copilot\u63d2\u4ef6\u540e\uff0c\u65e0\u6cd5\u767b\u9646\uff0c\u53ef\u4ee5\u5728\u8bbe\u7f6e\u4e2d\u8bbe\u7f6eide\u7684\u7f51\u7edc\u4ee3\u7406</p> <p></p> <p>clash:</p> <ul> <li>\u4e3b\u673a\uff1a127.0.0.1</li> <li>\u7aef\u53e3\uff1a7890</li> </ul>"},{"location":"git%E7%9B%B8%E5%85%B3/github%20copilot/#3","title":"3","text":"<p>\u4f7f\u7528\u7ecf\u9a8c\uff1a</p> <ol> <li>\u5148\u7528\u82f1\u6587\u5199\u4e00\u6bb5\u6ce8\u91ca\uff08\u4e0d\u4f1a\u53ef\u4ee5\u4e2d\u6587\u5199\u51fa\u518d\u7528\u767e\u5ea6\u7ffb\u8bd1\uff09</li> <li>\u518d\u56de\u8f66\u7b49\u5f85copilot\u7f16\u5199\u4ee3\u7801</li> <li>\u6700\u540e\u6839\u636e\u5177\u4f53\u9700\u6c42\u9002\u5f53\u4fee\u6539</li> </ol> <p>\u793a\u4f8b\uff1a</p> <p>\u60f3\u5728python\u6587\u4ef6\u4e2d\u7f16\u5199\u4e00\u4e2a\u51fd\u6570\u5c06\u5185\u5bb9\u5199\u5165\u540c\u76ee\u5f55\u4e0b\u7684 <code>latex.md</code> \u6587\u4ef6</p> <pre><code># Define a function to overwrite the content in the latex.md file and open it with VSCode\n</code></pre> <p>\u82e5\u5e72\u6b21\u56de\u8f66\u540e</p> <pre><code># Define a function to overwrite the content in the latex.md file and open it with VSCode\ndef write_latex_md(content):\n    with open(\"latex.md\", \"w\") as f:\n        f.write(content)\n    os.system(\"code latex.md\")\n</code></pre>"},{"location":"git%E7%9B%B8%E5%85%B3/github%20copilot/#4","title":"4","text":"<p>\u5728VSCode\u4e2d\u4f7f\u7528github copilot\u804a\u5929\u529f\u80fd\u65f6\uff0c\u663e\u793a</p> <pre><code>Cannot read properties of undefined (reading 'split')\n</code></pre> <p>\u641c\u7d22\u76f8\u5173\u4fe1\u606f\uff0c\u627e\u5230</p> <p>\"Cannot read properties of undefined (reading 'split')\" after first message \u00b7 community \u00b7 Discussion #102408 (github.com)</p> <p>\u6839\u636enaveen-98\u7684\u56de\u7b54\u4e2d\u7684 <code>Disable and re-enable GitHub Copilot</code> \uff0c\u7981\u7528\u518d\u91cd\u65b0\u542f\u7528github copilot\u63d2\u4ef6\u4e4b\u540e\uff0c\u53ef\u4ee5\u6b63\u5e38\u4f7f\u7528\u4e86</p>"},{"location":"git%E7%9B%B8%E5%85%B3/github%26gitee/","title":"Github &amp; Gitee","text":"<p> \u7ea6 1485 \u4e2a\u5b57  67 \u884c\u4ee3\u7801  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 6 \u5206\u949f</p>"},{"location":"git%E7%9B%B8%E5%85%B3/github%26gitee/#1","title":"1","text":"<ul> <li> <p>gitee SSH\u516c\u94a5\u8bbe\u7f6e</p> <p>SSH \u516c\u94a5\u8bbe\u7f6e | Gitee \u4ea7\u54c1\u6587\u6863</p> </li> <li> <p>github SSH key \u8bbe\u7f6e</p> <p>\u8d26\u6237\u6dfb\u52a0SSH: Adding a new SSH key to your GitHub account - GitHub Docs</p> <p>\u751f\u6210SSH: Generating a new SSH key and adding it to the ssh-agent - GitHub Docs</p> </li> </ul>"},{"location":"git%E7%9B%B8%E5%85%B3/github%26gitee/#2","title":"2","text":"<p>\u4e0a\u4f20\u6587\u4ef6\u81f3\u4ed3\u5e93\uff1a</p> <pre><code>git add --all\ngit commit -m \"...\" # \u4f1a\u5728\u4ed3\u5e93\u5bf9\u5e94\u6587\u4ef6\u7684\u5904\u663e\u793a\uff0c\u5e94\u8be5\u662f\u7528\u4e8e\u6807\u8bb0\u54ea\u4e00\u6b21\u4e0a\u4f20\ngit push -u origin [ master | main ]\n</code></pre>"},{"location":"git%E7%9B%B8%E5%85%B3/github%26gitee/#3","title":"3","text":"<p>gitee pages \u66f4\u65b0\u9700\u8981\u624b\u52a8\u70b9\u51fb\u66f4\u65b0\uff0c</p> <p>github pages \u53ef\u4ee5\u81ea\u52a8\u66f4\u65b0</p>"},{"location":"git%E7%9B%B8%E5%85%B3/github%26gitee/#4","title":"4","text":"<p>Generating a new SSH key and adding it to the ssh-agent - GitHub Docs</p> <p></p> <pre><code>ssh-keygen -t ed25519 -C \"xxx@example.com\"\n</code></pre> <p>\u7b2c\u4e8c\u884c\u586b\u5199\u6587\u4ef6\u8981\u4fdd\u5b58\u7684\u4f4d\u7f6e\uff08\u76f4\u63a5\u590d\u5236\u7ed9\u7684\u5c31\u597d\u4e86\uff09\uff0c\u7136\u540e<code>passphrase</code>\u53ef\u4ee5\u4e0d\u8bbe\u7f6e\uff0c\u4e4b\u540e\u628a<code>~/.ssh/id_ed25519.pub</code>\u4e2d\u7684\u5168\u90e8\u590d\u5236\u7c98\u8d34\u5230github\u8bbe\u7f6essh\u4e2d\u5c31\u884c\u4e86</p>"},{"location":"git%E7%9B%B8%E5%85%B3/github%26gitee/#5","title":"5","text":"<p>\u66f4\u65b0\u672c\u5730\u7684\u4ed3\u5e93\uff1a</p> <pre><code>git pull\n</code></pre>"},{"location":"git%E7%9B%B8%E5%85%B3/github%26gitee/#6","title":"6","text":"<p>github \u4ed3\u5e93\u8bbe\u7f6e \u8ba8\u8bba GitHub Discussions</p> <p>GitHub Discussions \u6587\u6863 - GitHub \u6587\u6863</p> <p>\u5728 Settings - General - Features - Discussions \u524d\u9762\u52fe\u9009\u4e0a</p> <p>\u5c31\u53ef\u4ee5\u6253\u5f00\u8ba8\u8bba\u529f\u80fd\u4e86</p>"},{"location":"git%E7%9B%B8%E5%85%B3/github%26gitee/#7","title":"7","text":"<p>git \u4ee3\u7406\u76f8\u5173\u95ee\u9898</p> <p>\u7531\u4e8e\u4e4b\u524d\u60f3\u5728 git bash \u7ec8\u7aef\u4e2d\u4f7f\u7528 clash \u7684\u4ee3\u7406\u6240\u4ee5\u5728 <code>E:\\Program Files\\Git\\etc\\bash.bashrc</code> \u6700\u4e0a\u65b9\u6309\u7f51\u4e0a\u8bf4\u7684\u6dfb\u52a0\u4e86</p> <pre><code># Clash\nexport http_proxy=https://127.0.0.1:7890;export https_proxy=https://127.0.0.1:7890\n</code></pre> <p>\u7136\u540e\u53d1\u73b0 <code>git clone</code> \u5728\u4e0d\u6253\u5f00 clash \u7684\u60c5\u51b5\u4e0b\u4f1a\u6709\u62a5\u9519</p> <pre><code>Collecting git+https://github.com/huggingface/peft.git (from -r requirements.txt (line 8))\n  Cloning https://github.com/huggingface/peft.git to c:\\users\\administrator\\appdata\\local\\temp\\pip-req-build-t4u9g6h5\n  Running command git clone --filter=blob:none --quiet https://github.com/huggingface/peft.git 'C:\\Users\\Administrator\\AppData\\Local\\Temp\\pip-req-build-t4u9g6h5'\n  fatal: unable to access 'https://github.com/huggingface/peft.git/': Failed to connect to 127.0.0.1 port 7890 after 2032 ms: Couldn't connect to server\n</code></pre> <p>\u6240\u4ee5\u5728\u7f51\u4e0a\u67e5\u8be2\u76f8\u5173\u4fe1\u606f\uff0c\u53d1\u73b0\u8fd9\u7bc7\u6587\u7ae0</p> <p>\u89e3\u51b3git\u4e0b\u8f7d\u51fa\u73b0\uff1aFailed to connect to 127.0.0.1 port 1080: Connection refused\u62d2\u7edd\u8fde\u63a5\u9519\u8bef-CSDN\u535a\u5ba2</p> <p>\u53ef\u4ee5\u901a\u8fc7(windows\u4e5f\u53ef\u4ee5)</p> <pre><code>git config --global http.proxy\ngit config --global https.proxy\n</code></pre> <p>\u67e5\u8be2 git http \u548c htttps \u6709\u6ca1\u6709\u4f7f\u7528\u4ee3\u7406</p> <p>\u6587\u7ae0\u8fd8\u8bf4\u5230 linux \u8fd8\u53ef\u4ee5\u4f7f\u7528</p> <pre><code>env|grep -I proxy\n</code></pre> <p>\u6765\u67e5\u8be2\u7cfb\u7edf\u73af\u5883\u6709\u6ca1\u6709\u4ee3\u7406\uff0c\u4e0d\u8fc7windows\u4e0b\u8fd9\u4e2a\u547d\u4ee4\u8fd0\u884c\u4e0d\u4e86</p> <p>\u53d6\u6d88\u4ee3\u7406\u7684\u65b9\u6cd5</p> <p>\u6211\u5728 windows git bash \u4e0a\u4f7f\u7528</p> <pre><code>git config --global --unset http.proxy\ngit config --global --unset https.proxy\n</code></pre> <p>\u6210\u529f\u53d6\u6d88\u4e86\u4ee3\u7406</p> <p>\u800c\u6587\u7ae0\u4e2d\u7684\u53e6\u4e00\u79cd\u65b9\u6cd5</p> <pre><code>unset http_proxy\nunset ftp_proxy\nunset all_proxy\nunset https_proxy\nunset no_proxy\n</code></pre> <p>\u6211\u8bd5\u4e86\u5728 windows git bash \u4e0a\u4e0d\u884c\uff0c\u53ef\u80fd\u5728linux\u4e0a\u53ef\u4ee5</p> <p>\u6700\u540e\u6211\u53d6\u6d88\u4e86\u4ee3\u7406\u4e4b\u540e <code>git clone</code> \u5c31\u4e0d\u4f1a\u6709\u4e4b\u524d\u7684 <code>Failed to connect to 127.0.0.1 port 7890</code> </p> <p>\u4f46\u662f\u6ca1\u6253\u5f00 clash \u65f6\uff0c\u53d8\u6210\u4e86</p> <pre><code>fatal: unable to access 'https://github.com/huggingface/peft.git/': Failed to connect to github.com port 443 after 21065 ms: Couldn't connect to server\n</code></pre>"},{"location":"git%E7%9B%B8%E5%85%B3/github%26gitee/#8","title":"8","text":"<p>git \u8bbe\u7f6e\u4ee3\u7406</p> <p>(\u56e0\u4e3a\u6709\u65f6\u53ef\u80fd\u4f1a git clone \u4e0d\u4e86)</p> <p>\u3010git\u9519\u8bef\u3011Error: Failed to connect to github.com port 443 after 21074 ms: Timed out_Sheyami\u7684\u535a\u5ba2-CSDN\u535a\u5ba2</p> <pre><code>git config --global http.proxy http://127.0.0.1:7890\ngit config --global https.proxy http://127.0.0.1:7890\n</code></pre>"},{"location":"git%E7%9B%B8%E5%85%B3/github%26gitee/#9","title":"9","text":"<p>\u590d\u73b0\u4ee3\u7801</p> <p>git bash \u4e2d\u5728\u8fd0\u884c\u547d\u4ee4\u662f\uff0c\u53ef\u4ee5\u73af\u5883\u53d8\u91cf(\u6216\u8005\u53eb\u5168\u5c40\u53d8\u91cf\uff1f)\uff0c\u5982</p> <pre><code>HF_DATASETS_OFFLINE=1 TRANSFORMERS_OFFLINE=1 \\\npython examples/pytorch/translation/run_translation.py --model_name_or_path t5-small --dataset_name wmt16 --dataset_config ro-en ...\n</code></pre> <p>\u6216</p> <pre><code># Make sure you have git-lfs installed (https://git-lfs.com)\ngit lfs install\ngit clone https://huggingface.co/decapoda-research/llama-7b-hf\n\n# if you want to clone without large files \u2013 just their pointers\n# prepend your git clone with the following env var:\nGIT_LFS_SKIP_SMUDGE=1\n</code></pre>"},{"location":"git%E7%9B%B8%E5%85%B3/github%26gitee/#10","title":"10","text":"<p>\u53ef\u4ee5\u4f7f\u7528 <code>--amend</code> \u6765\u4fee\u6539\u4e0a\u4e00\u6b21 <code>commit</code> \u63d0\u4ea4</p> <pre><code>usage: git commit [-a | --interactive | --patch] [-s] [-v] [-u&lt;mode&gt;] [--amend]\n                  [--dry-run] [(-c | -C | --squash) &lt;commit&gt; | --fixup [(amend|reword):]&lt;commit&gt;)]\n                  [-F &lt;file&gt; | -m &lt;msg&gt;] [--reset-author] [--allow-empty]\n                  [--allow-empty-message] [--no-verify] [-e] [--author=&lt;author&gt;]\n                  [--date=&lt;date&gt;] [--cleanup=&lt;mode&gt;] [--[no-]status]\n                  [-i | -o] [--pathspec-from-file=&lt;file&gt; [--pathspec-file-nul]]\n                  [(--trailer &lt;token&gt;[(=|:)&lt;value&gt;])...] [-S[&lt;keyid&gt;]]\n                  [--] [&lt;pathspec&gt;...]\n    ...\n    --amend               amend previous commit\n</code></pre> <pre><code>git commit --amend -m \"...\"\n</code></pre>"},{"location":"git%E7%9B%B8%E5%85%B3/github%26gitee/#11","title":"11","text":"<p>\u5b66\u4e60 git \u7684\u89c6\u9891</p> <p>Git + GitHub 10\u5206\u949f\u5b8c\u5168\u5165\u95e8_\u54d4\u54e9\u54d4\u54e9_bilibili</p> <p>Git + GitHub 10\u5206\u949f\u5b8c\u5168\u5165\u95e8 (\u8fdb\u9636)_\u54d4\u54e9\u54d4\u54e9_bilibili</p> <p>GitHub \u5230\u5e95\u600e\u4e48\u7528\uff1f\u5341\u5206\u949f\u5b66\u4f1a GitHub \u57fa\u7840\u77e5\u8bc6_\u54d4\u54e9\u54d4\u54e9_bilibili</p>"},{"location":"git%E7%9B%B8%E5%85%B3/github%26gitee/#12","title":"12","text":"<p>github \u63d0\u4ea4 PR Pull requests \u7684\u65b9\u6cd5\uff0c</p> <p>\u9700\u8981\u5148\u5c06\u522b\u4eba\u7684\u4ed3\u5e93 fork \u5230\u81ea\u5df1\u7684\u4ed3\u5e93\u4e2d\uff0c\u7136\u540e\u8fdb\u884c\u4fee\u6539\uff0c</p> <p>\u4e4b\u540e\u5c31\u53ef\u4ee5\u5728\u81ea\u5df1 fork \u7684\u4ed3\u5e93\u6216\u8005\u539f\u672c\u7684\u4ed3\u5e93\u4e2d\u63d0\u4ea4 PR Pull requests</p>"},{"location":"git%E7%9B%B8%E5%85%B3/github%26gitee/#13","title":"13","text":"<p>\u67e5\u770b\u4ed3\u5e93\u5173\u8054\u7684\u8fdc\u7a0b\u5e93\u7684\u547d\u4ee4</p> <pre><code>git remote -v\n</code></pre> <p>\u5c06\u672c\u5730\u4ed3\u5e93\u5173\u8054\u591a\u4e2a\u8fdc\u7a0b\u5e93</p> <p>\u65b9\u6cd5\u4e00 (\u4e0d\u80fd\u540c\u65f6\u63a8\u9001)</p> <p>Gitee\u5bfc\u5165Github\u4ed3\u5e93\u5e76\u540c\u6b65\u66f4\u65b0_gitee\u5f3a\u5236\u540c\u6b65-CSDN\u535a\u5ba2</p> <p>\u5173\u8054\u7684\u8fdc\u7a0b\u5e93\u540d\u9ed8\u8ba4\u4e3a <code>origin</code> \uff0c</p> <p>\u6dfb\u52a0\u65b0\u7684\u8fdc\u7a0b\u5e93</p> <pre><code>git remote add github git@github.com:RonaldLN/Exam-for-Software-of-DRB-of-2023.git\n</code></pre> <p><code>github</code> \u5904\u53ef\u4ee5\u6539\u6210\u5176\u4ed6(\u81ea\u5b9a\u4e49\u7684)\u8fdc\u7a0b\u5e93\u540d\uff0c\u6700\u540e\u662f\u8fdc\u7a0b\u5e93\u7684\u5730\u5740\uff0c</p> <p>\u6dfb\u52a0\u540e\uff0c\u8fdb\u884c <code>git remote -v</code> \u67e5\u770b\u4f1a\u53d1\u73b0</p> <pre><code>github  git@github.com:RonaldLN/Exam-for-Software-of-DRB-of-2023.git (fetch)\ngithub  git@github.com:RonaldLN/Exam-for-Software-of-DRB-of-2023.git (push)\norigin  git@gitee.com:ronald-luo/test.git (fetch)\norigin  git@gitee.com:ronald-luo/test.git (push)\n</code></pre> <p>\u56e0\u6b64\u5728 <code>git push</code> \u65f6\u9700\u8981\u9009\u62e9\u8981\u63a8\u9001\u7684\u8fdc\u7a0b\u5e93\u7684\u5e93\u540d\u8fdb\u884c\u63a8\u9001</p> <pre><code>git push -u xxx branch\n</code></pre> <p>\u5220\u9664\u5173\u8054\u7684\u8fdc\u7a0b\u5e93\u7684\u547d\u4ee4</p> <pre><code>git remote rm xxx\n</code></pre> <p>\u65b9\u6cd5\u4e8c (\u53ef\u4ee5\u540c\u65f6\u63a8\u9001)</p> <p>Git\u540c\u65f6\u63a8\u9001\u591a\u4e2a\u8fdc\u7a0b\u4ed3\u5e93 - \u77e5\u4e4e (zhihu.com)</p> <p>\u7531\u4e8e\u9ed8\u8ba4\u5173\u8054\u7684\u8fdc\u7a0b\u5e93\u540d\u662f <code>origin</code> \uff0c</p> <p>\u6240\u4ee5\u901a\u8fc7</p> <pre><code>git remote set-url --add origin git@github.com:RonaldLN/Exam-for-Software-of-DRB-of-2023.git\n</code></pre> <p>\u6765\u5728 <code>origin</code> \u5e93\u540d\u4e0b\u6dfb\u52a0\u8fdc\u7a0b\u5e93\uff0c</p> <p>\u7136\u540e <code>git remote -v</code> \u67e5\u770b</p> <pre><code>origin  git@gitee.com:ronald-luo/test.git (fetch)\norigin  git@gitee.com:ronald-luo/test.git (push)\norigin  git@github.com:RonaldLN/Exam-for-Software-of-DRB-of-2023.git (push)\n</code></pre> <p>\u56e0\u6b64\u5728\u63a8\u9001 <code>origin</code> \u65f6\u5c31\u4f1a\u5411 github \u548c gitee \u4e00\u8d77\u63a8\u9001</p>"},{"location":"git%E7%9B%B8%E5%85%B3/github%26gitee/#14","title":"14","text":"<p>\u4fee\u6539\u672c\u5730\u5206\u652f\u540d\u7684\u547d\u4ee4</p> <pre><code>git branch -m oldName newName\n</code></pre>"},{"location":"git%E7%9B%B8%E5%85%B3/github%26gitee/#15","title":"15","text":"<p>\u5c06\u4e24\u4e2a\u8fdc\u7a0b\u4ed3\u5e93\u514b\u9686\u5230\u4e00\u4e2a\u672c\u5730\u4ed3\u5e93\u7684\u4e24\u4e2a\u5206\u652f\uff0c\u5e76\u4e14\u5408\u5e76\u7684\u65b9\u6cd5</p> <p>\u5982\u4f55\u5408\u5e76\u4e24\u4e2a\u4e0d\u540c\u7684 Git \u4ed3\u5e93\uff1f - \u77e5\u4e4e (zhihu.com)</p>"},{"location":"git%E7%9B%B8%E5%85%B3/github%26gitee/#16","title":"16","text":"<p>\u5982\u679c\u4ed3\u5e93\u4e2d\u7684\u67d0\u4e2a\u6587\u4ef6\u5939\uff0c\u91cc\u9762\u6709 <code>.git/</code> \u6587\u4ef6\u5939\uff0c\u5373\u662f\u53e6\u4e00\u4e2a\u4ed3\u5e93\uff0c\u90a3\u4e48\u8fd9\u4e2a\u6587\u4ef6\u5939\u4e2d\u7684\u6587\u4ef6\u4e0d\u4f1a\u88abgit\u8bc6\u522b\u5230</p>"},{"location":"git%E7%9B%B8%E5%85%B3/github%26gitee/#17","title":"17","text":"<p>\u6dfb\u52a0submodule</p> <pre><code>git submodule add xxx.git [\u8def\u5f84]\n</code></pre>"},{"location":"git%E7%9B%B8%E5%85%B3/github%26gitee/#18","title":"18","text":"<p>\u5728windows\u4e0a\u5b89\u88c5 <code>git-filter-repo</code> \uff0c</p> <p>\u53c2\u8003 python - <code>git filter-repo</code> commands output nothing on Windows - Stack Overflow \u4e2d TTT\u7684\u56de\u7b54</p> <ol> <li>\u8fd0\u884c <code>git --exec-path</code> \u67e5\u770b <code>git.exe</code> \u6240\u5728\u7684\u8def\u5f84</li> <li>\u4e0b\u8f7d <code>git-filter-repo</code> \u6587\u4ef6(\u6ce8\u610f\u4e0d\u8981\u6709\u540e\u7f00\uff0c\u53ef\u80fd\u4e0b\u8f7d\u4f1a\u81ea\u52a8\u6dfb\u52a0 <code>.txt</code> \u540e\u7f00)\uff0c\u5e76\u5c06 <code>git-filter-repo</code> \u590d\u5236\u5230 <code>git.exe</code> \u6240\u5728\u7684\u8def\u5f84</li> <li>\u5728\u9700\u8981\u8fd0\u884c <code>git filter-repo</code> \u547d\u4ee4\u7684\u4ed3\u5e93/\u8def\u5f84\u4e0b\uff0c\u5c1d\u8bd5\u8fd0\u884c\u547d\u4ee4<ul> <li>\u5982\u679c\u547d\u4ee4\u80fd\u6b63\u5e38\u8fd0\u884c\uff0c\u4f1a\u663e\u793a <code>No arguments specified.</code> \uff0c\u90a3\u4e48\u5c31\u4e0d\u7528\u6267\u884c\u4e0b\u4e00\u6b65</li> </ul> </li> <li>\u5982\u679c\u6ca1\u6709\u663e\u793a\u7684\u4fe1\u606f\uff0c\u6216\u8005\u663e\u793a\u7c7b\u4f3c\u4e8e <code>/usr/bin/env: \u2018python3\u2019: No such file or directory</code> \u7684\u62a5\u9519\u4fe1\u606f\uff0c\u90a3\u4e48\u5c06 <code>git-filter-repo</code> \u6587\u4ef6\u7b2c\u4e00\u884c <code>#!/usr/bin/env python3</code> \u4e2d\u7684 <code>python3</code> \u6362\u6210 <code>python</code></li> </ol>"},{"location":"git%E7%9B%B8%E5%85%B3/github%26gitee/#19","title":"19","text":"<p>\u5c06\u5b50\u6587\u4ef6\u5939\u62c6\u5206\u6210\u65b0\u4ed3\u5e93 - GitHub \u6587\u6863</p> <p>\u9700\u8981\u5b89\u88c5 <code>git-filter-repo</code> \uff0c</p> <p>\u6709\u4e24\u79cd\u62c6\u5206\u7684\u5f62\u5f0f\uff1a</p> <ol> <li> <p>\u53ea\u4fdd\u7559\u67d0\u4e2a\u5b50\u6587\u4ef6\u5939\u5230\u65b0\u4ed3\u5e93\u4e2d\uff0cgit\u7684\u5386\u53f2\u8bb0\u5f55\u91cc\u4e5f\u53ea\u4f1a\u4fdd\u7559\u4e0e\u8fd9\u4e2a\u6587\u4ef6\u5939\u76f8\u5173\u7684commit</p> <pre><code>git filter-repo --path FOLDER-NAME/\n</code></pre> <p>Filter the specified branch in your directory and remove empty commits</p> </li> <li> <p>\u5c06\u67d0\u4e2a\u5b50\u6587\u4ef6\u5939\u4f5c\u4e3a\u65b0\u4ed3\u5e93\u7684\u6839\u76ee\u5f55\uff0c\u5373\u628a\u8be5\u5b50\u6587\u4ef6\u5939\u4f5c\u4e3a\u4e00\u4e2a\u65b0\u7684\u4ed3\u5e93\uff0c\u5e76\u53ea\u4fdd\u7559\u76f8\u5173\u7684commit(commit\u4e2d\u6587\u4ef6\u7684\u8def\u5f84\u4f1a\u81ea\u52a8\u8fdb\u884c\u66f4\u6539)</p> <pre><code>git filter-repo --subdirectory-filter FOLDER-NAME\n</code></pre> <p>Filter the specific branch by using a single sub-directory as the root for the new repository</p> </li> </ol>"},{"location":"git%E7%9B%B8%E5%85%B3/github%26gitee/#20","title":"20","text":"<p>windows\u5347\u7ea7git</p> <p>How to upgrade Git on Windows to the latest version - Stack Overflow</p> <p>Dutch Glory\u7684\u56de\u7b54\u63d0\u5230windows\u4e2d\u53ef\u4ee5\u4f7f\u7528\u4ee5\u4e0b\u547d\u4ee4\u5347\u7ea7git</p> <pre><code>git update-git-for-windows\n</code></pre>"},{"location":"git%E7%9B%B8%E5%85%B3/github%26gitee/#21","title":"21","text":"<p>\u5982\u679cclone\u4e0b\u6765\u7684\u4ed3\u5e93\u4e2d\u6709submodule\u5b50\u6a21\u5757\uff0c\u4f46\u5bf9\u5e94\u8def\u5f84\u53ea\u6709\u4e00\u4e2a\u7a7a\u6587\u4ef6\u5939\uff0c\u90a3\u4e48\u53ef\u4ee5\u4f7f\u7528 <code>--init</code> \u53c2\u6570\u6765\u62c9\u53d6\u5bf9\u5e94\u7684\u6587\u4ef6</p> <p><code>--recursive</code> \u8868\u793a\u9012\u5f52\u5bf9\u6240\u6709\u5d4c\u5957\u5b50\u6a21\u5757\u8fdb\u884c\u64cd\u4f5c</p> <pre><code>git submodule update --init --recursive\n</code></pre> <p>\u5982\u679csubmodule\u5b50\u6a21\u5757\u4e2d\u6709\u5927\u6587\u4ef6\uff0c\u90a3\u4e48\u53ef\u4ee5\u4f7f\u7528\u8fd9\u6837\u7684\u547d\u4ee4\u5bf9\u6240\u6709submodule\u62c9\u53d6\u5927\u6587\u4ef6</p> <pre><code>git submodule foreach git lfs pull\n</code></pre>"},{"location":"git%E7%9B%B8%E5%85%B3/github%26gitee/#22","title":"22","text":"<p>\u5982\u679c\u60f3\u5728clone\u7684\u65f6\u5019\u5c31\u987a\u4fbf\u628asubmodule\u4e00\u5e76\u514b\u9686\u597d\uff0c\u6dfb\u52a0\u4e00\u4e2a <code>--recurse-submodules</code> \u53c2\u6570</p> <pre><code>git clone --recurse-submodules\n</code></pre>"},{"location":"git%E7%9B%B8%E5%85%B3/github%26gitee/#23","title":"23","text":"<p>\u53ef\u4ee5\u4f7f\u7528 <code>git archive</code> \u547d\u4ee4\u6765\u6253\u5305(\u67d0\u4e2a\u5206\u652f\u7684)\u4ee3\u7801</p> <pre><code>git archive main --format=tar.gz --output=/path/to/main.tar.gz\n</code></pre> <p>\u6216\u8005\u4f7f\u7528zip\u683c\u5f0f\u6253\u5305</p> <pre><code>git archive main --format=zip --output=main.zip\n</code></pre>"},{"location":"git%E7%9B%B8%E5%85%B3/github%26gitee/#24","title":"24","text":"<p>\u5728\u7ec8\u7aef\u4e2d\u6253\u5370git\u7248\u672c\u6811(\u5386\u53f2\u6240\u6709\u7684commits)</p> <pre><code>git log --oneline --graph --decorate --all\n</code></pre> <p>\u53c2\u8003</p> <p>gitk - Viewing full version tree in git - Stack Overflow</p>"},{"location":"markdown%E7%9B%B8%E5%85%B3/hexo/","title":"Hexo","text":"<p> \u7ea6 189 \u4e2a\u5b57  9 \u884c\u4ee3\u7801  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 1 \u5206\u949f</p>"},{"location":"markdown%E7%9B%B8%E5%85%B3/hexo/#1","title":"1","text":"<p>### \u5b89\u88c5\u524d\u63d0</p> <p>\u5b89\u88c5 Hexo \u76f8\u5f53\u7b80\u5355\uff0c\u53ea\u9700\u8981\u5148\u5b89\u88c5\u4e0b\u5217\u5e94\u7528\u7a0b\u5e8f\u5373\u53ef\uff1a</p> <ul> <li>Node.js (Node.js \u7248\u672c\u9700\u4e0d\u4f4e\u4e8e 10.13\uff0c\u5efa\u8bae\u4f7f\u7528 Node.js 12.0 \u53ca\u4ee5\u4e0a\u7248\u672c)</li> <li>Git</li> </ul> <p>\u5b89\u88c5 <code>hexo</code> </p> <pre><code>npm install -g hexo-cli\n</code></pre> <p>\u5efa\u7ad9 | Hexo</p> <pre><code>hexo init &lt;folder&gt;\ncd &lt;folder&gt;\nnpm install\n</code></pre> <p>\u611f\u89c9\u8ddf mkdocs \u6709\u70b9\u7c7b\u4f3c</p> <p>\u9884\u89c8</p> <p>\u6307\u4ee4 - server| Hexo</p> <pre><code>hexo server\n</code></pre> <p>\u542f\u52a8\u670d\u52a1\u5668\u3002\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u8bbf\u95ee\u7f51\u5740\u4e3a\uff1a <code>http://localhost:4000/</code>\u3002</p> \u9009\u9879 \u63cf\u8ff0 <code>-p</code>, <code>--port</code> \u91cd\u8bbe\u7aef\u53e3 <code>-s</code>, <code>--static</code> \u53ea\u4f7f\u7528\u9759\u6001\u6587\u4ef6 <code>-l</code>, <code>--log</code> \u542f\u52a8\u65e5\u8bb0\u8bb0\u5f55\uff0c\u4f7f\u7528\u8986\u76d6\u8bb0\u5f55\u683c\u5f0f <pre><code>E:\\Github\\hexotest2&gt;hexo server\nINFO  Validating config\nINFO  Start processing\nINFO  Hexo is running at http://localhost:4000/ . Press Ctrl+C to stop.\n</code></pre>"},{"location":"markdown%E7%9B%B8%E5%85%B3/hexo/#2","title":"2","text":"<p>\u4f7f\u7528\u4e3b\u9898 <code>Hexo Aurora Theme</code> </p> <ul> <li> <p>\u5b98\u65b9\u7f51\u7ad9\uff1a</p> <p>Hexo Aurora Docs | Hexo Aurora Docs (tridiamond.tech)</p> </li> <li> <p>\u5b98\u65b9 github \u4ed3\u5e93\uff1a</p> <p>auroral-ui/hexo-theme-aurora: \ud83c\udff3\ufe0f\u200d\ud83c\udf08 Futuristic auroral Hexo theme. (github.com)</p> </li> </ul> <p>\u5728\u4f7f\u7528 hexo \u642d\u5efa\u597d\u521d\u59cb\u7684\u7f51\u7ad9\u540e\uff0c\u5c31\u53ef\u4ee5\u6309\u7167</p> <p>\u5feb\u901f\u4e0a\u624b | Hexo Aurora Docs (tridiamond.tech)</p> <p>\u4e2d\u7684\u6307\u5f15\u6765\u5c06\u9ed8\u8ba4\u7684\u4e3b\u9898\u6362\u6210 <code>Aurora</code></p>"},{"location":"markdown%E7%9B%B8%E5%85%B3/mermaid/","title":"Mermaid","text":"<p> \u7ea6 70 \u4e2a\u5b57  31 \u884c\u4ee3\u7801  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 1 \u5206\u949f</p>"},{"location":"markdown%E7%9B%B8%E5%85%B3/mermaid/#_1","title":"\u793a\u4f8b","text":"<pre><code>flowchart LR\n\u5d07\u9ad8 --&gt; \u5f62\u5f0f\u7279\u5f81 --&gt; a[\"\u201c\u5927\u201d\"] --&gt; b[\"\u6765\u6e90\u4e8e\u4e2a\u4eba\u5411\u4eba\u7c7b\u603b\u4f53\u7684\u5347\u534e&lt;br \\&gt;\uff08\u65e0\u9650\uff09\"]\na --&gt; c[\"\u8d85\u8d8a\u6709\u9650\u7684\u5f62\u4f53\uff0c&lt;br \\&gt;\u5e26\u6709\u8d8b\u5411\u65e0\u9650\u6027\u7684\u7279\u70b9\"]\n\u5d07\u9ad8 --- d[\"\uff08\u201c\u5c0f\u201d\u5bf9\u201c\u5927\u201d\uff0c\u201c\u5f31\u201d\u5bf9\u201c\u5f3a\u201d\uff09&lt;br \\&gt;\u594b\u6597\u6297\u4e89\u7684\u8fc7\u7a0b\"] --- \u77db\u76fe --&gt; e[\"\u611f\u53d7\u5230\u529b\u91cf&lt;br \\&gt;\uff08\u8d85\u7ea7\u82f1\u96c4\uff09\"]\nf[\"\u6765\u6e90\u4e8e\u4e2a\u4f53\u5230\u603b\u4f53\u7684\u751f\u5316\uff08\u8d85\u8d8a\u6027\uff09\"] --&gt; e\n\u5d07\u9ad8 --- \u4fa7\u91cd\u5c55\u793a\u4eba\u7684\u672c\u8d28\u5bf9\u8c61\u5316\u5b9e\u73b0\u7684\u66f2\u6298\u8fc7\u7a0b\nsubgraph g[\" \"]\n\u75db\u82e6\u7684\n\u6109\u60a6\u6027\nend\n\u77db\u76fe --- g\n\u75db\u82e6\u7684 --- \u4e2a\u4f53\u7684\u6297\u4e89\n\u6109\u60a6\u6027 --- \u4e2a\u4f53\u5230\u603b\u4f53\u7684\u5347\u534e\n</code></pre> <pre><code>flowchart LR\n\u5d07\u9ad8 --&gt; \u5f62\u5f0f\u7279\u5f81 --&gt; a[\"\u201c\u5927\u201d\"] --&gt; b[\"\u6765\u6e90\u4e8e\u4e2a\u4eba\u5411\u4eba\u7c7b\u603b\u4f53\u7684\u5347\u534e&lt;br \\&gt;\uff08\u65e0\u9650\uff09\"]\na --&gt; c[\"\u8d85\u8d8a\u6709\u9650\u7684\u5f62\u4f53\uff0c&lt;br \\&gt;\u5e26\u6709\u8d8b\u5411\u65e0\u9650\u6027\u7684\u7279\u70b9\"]\n\u5d07\u9ad8 --- d[\"\uff08\u201c\u5c0f\u201d\u5bf9\u201c\u5927\u201d\uff0c\u201c\u5f31\u201d\u5bf9\u201c\u5f3a\u201d\uff09&lt;br \\&gt;\u594b\u6597\u6297\u4e89\u7684\u8fc7\u7a0b\"] --- \u77db\u76fe --&gt; e[\"\u611f\u53d7\u5230\u529b\u91cf&lt;br \\&gt;\uff08\u8d85\u7ea7\u82f1\u96c4\uff09\"]\nf[\"\u6765\u6e90\u4e8e\u4e2a\u4f53\u5230\u603b\u4f53\u7684\u751f\u5316\uff08\u8d85\u8d8a\u6027\uff09\"] --&gt; e\n\u5d07\u9ad8 --- \u4fa7\u91cd\u5c55\u793a\u4eba\u7684\u672c\u8d28\u5bf9\u8c61\u5316\u5b9e\u73b0\u7684\u66f2\u6298\u8fc7\u7a0b\nsubgraph g[\" \"]\n\u75db\u82e6\u7684\n\u6109\u60a6\u6027\nend\n\u77db\u76fe --- g\n\u75db\u82e6\u7684 --- \u4e2a\u4f53\u7684\u6297\u4e89\n\u6109\u60a6\u6027 --- \u4e2a\u4f53\u5230\u603b\u4f53\u7684\u5347\u534e</code></pre> <p>Typora(meimaid)\u7ed8\u5236\u6d41\u7a0b\u56fe - \u77e5\u4e4e (zhihu.com)</p>"},{"location":"markdown%E7%9B%B8%E5%85%B3/mermaid/#1","title":"1","text":"<p>\u6709\u6807\u70b9\u6216\u7279\u6b8a\u7b26\u53f7\uff0c\u5982<code>\u201c</code> \u3001<code>&lt;</code>\u3001<code>\uff08</code>\u3001\u7a7a\u683c\u3001html\u6362\u884c\u7b26 \u7b49\u65f6\uff0c\u9700\u8981\u7528\u5b57\u6bcd\u52a0<code>[]</code>\u6765\u5f62\u6210\u5355\u5143\u5757\uff0c\u5982\uff1a</p> <pre><code>d[\"\uff08\u201c\u5c0f\u201d\u5bf9\u201c\u5927\u201d\uff0c\u201c\u5f31\u201d\u5bf9\u201c\u5f3a\u201d\uff09&lt;br \\&gt;\u594b\u6597\u6297\u4e89\u7684\u8fc7\u7a0b\"]\n</code></pre>"},{"location":"markdown%E7%9B%B8%E5%85%B3/mermaid/#2","title":"2","text":"<p>\u652f\u6301html</p> <ul> <li>\u6362\u884c  <code>&lt;br \\&gt;</code></li> <li>\u659c\u4f53 <code>&lt;i&gt;...&lt;/i&gt;</code></li> <li>\u52a0\u7c97\u3001\u4e0b\u5212\u7ebf\u3001\u5927\u53f7\u5c0f\u53f7\u5b57\u4f53 ...</li> </ul>"},{"location":"markdown%E7%9B%B8%E5%85%B3/mermaid/#3","title":"3","text":"<pre><code>subgraph g[\" \"]\na\nb\nend\n</code></pre> <p>\u5b50\u56fe\uff0c\u5982\u4e0a\uff0c\u9700\u8981\u4e00\u4e2a\u540d\u79f0\uff0c\u53ef\u4ee5\u6307\u5411\u6216\u88ab\u6307\u5411</p>"},{"location":"markdown%E7%9B%B8%E5%85%B3/mermaid/#4","title":"4","text":"<p>\u5728\u7ebf\u753bmermaid\u56fe\u7f51\u7ad9</p> <p>Online FlowChart &amp; Diagrams Editor - Mermaid Live Editor</p>"},{"location":"markdown%E7%9B%B8%E5%85%B3/mkdocs%28material%29/","title":"Mkdocs (Material)","text":"<p> \u7ea6 5328 \u4e2a\u5b57  903 \u884c\u4ee3\u7801  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 29 \u5206\u949f</p>"},{"location":"markdown%E7%9B%B8%E5%85%B3/mkdocs%28material%29/#1","title":"1","text":"<p>Installation - Material for MkDocs (squidfunk.github.io)</p>"},{"location":"markdown%E7%9B%B8%E5%85%B3/mkdocs%28material%29/#2","title":"2","text":"<pre><code>markdown_extensions:\n  - pymdownx.superfences: # mermaid\u753b\u56fe\n      custom_fences:\n        - name: mermaid\n          class: mermaid\n          format: !!python/name:pymdownx.superfences.fence_code_format\n  - attr_list # \u77e9\u5f62\u6309\u94ae/\u6309\u952e\n  - def_list # a \u65e0\u5e8f/\u6709\u5e8f/\u4efb\u52a1 \u5217\u8868\n  - pymdownx.tasklist: # a\n      custom_checkbox: true\n  - pymdownx.critic # b Formatting \u542b \u9ad8\u4eae/\u5220\u9664\u7ebf/\u4e0b\u5212\u7ebf/\u4e0a\u4e0b\u89d2\u6807 [\u7b49]\n  - pymdownx.caret # b\n  - pymdownx.keys # b\n  - pymdownx.mark # b\n  - pymdownx.tilde # b\n  - toc: # \u76ee\u5f55\u76f8\u5173\n      permalink: true # \u6bcf\u4e2a\u9875\u9762\u5185\uff0c\u5404\u6807\u9898\u4f1a\u751f\u6210\u5404\u81ea\u7684\u94fe\u63a5\n      # title: \u76ee\u5f55 # \u4fee\u6539\u9875\u9762\u53f3\u4fa7 Table of contents \u6587\u5b57\n  - footnotes # \u811a\u6ce8\n  - pymdownx.highlight: # c \u4ee3\u7801\u5757\u914d\u7f6e\n      anchor_linenums: true\n      line_spans: __span\n      pygments_lang_class: true\n  - pymdownx.inlinehilite # c\n  - pymdownx.snippets # c\n  - pymdownx.superfences # c\n  - admonition # d \u6807\u6ce8\n  - pymdownx.details # d\n  - pymdownx.superfences # d\n  - pymdownx.emoji: # \u4f7f\u7528emoji\u548cicon\n      emoji_index: !!python/name:material.extensions.emoji.twemoji \n      emoji_generator: !!python/name:material.extensions.emoji.to_svg\n  - pymdownx.superfences # e \u5185\u5bb9\u9009\u9879\u5361\n  - pymdownx.tabbed: # e\n      alternate_style: true\n  - md_in_html # \u5728 md \u6587\u6863\u4e2d\u80fd\u663e\u793a html \u7684\u6548\u679c\n</code></pre>"},{"location":"markdown%E7%9B%B8%E5%85%B3/mkdocs%28material%29/#3","title":"3","text":"<pre><code>theme:\n  name: material # \u56fa\u5b9a\n  # language: zh # \u8bed\u8a00\u8bbe\u7f6e\u4e3a\u4e2d\u6587(\u4f1a\u6539\u53d8\u641c\u7d22\u680f/\u6700\u540e\u4fee\u6539 \u7b49\u6587\u5b57)\uff0c\u9ed8\u8ba4\u4e3a\u82f1\u6587\n  logo: assets/logo.jpg # \u9875\u9762\u4e2d\u9876\u90e8\u680f\u5de6\u4fa7\u56fe\u6807\n  favicon: assets/favicon.jpg # \u6d4f\u89c8\u5668\u9875\u9762\u6807\u7b7e\u56fe\u6807\n  custom_dir: overrides # html\u6e90\u4ee3\u7801\u6269\u5c55\u6587\u4ef6\u5939\n  features:\n    - navigation.expand # \u76ee\u5f55\u81ea\u52a8\u5c55\u5f00\u5b50\u76ee\u5f55\n    # - toc.integrate # \u53f3\u8fb9\u7684toc\u878d\u5408\u5230\u5de6\u4fa7\u7684\u76ee\u5f55\u4e2d\n    - toc.follow # \u53f3\u4fa7toc\u968f\u7740\u9875\u9762\u6ed1\u52a8\u81ea\u52a8\u6ed1\u52a8\n    - navigation.top # \u6709\u56de\u5230\u9875\u9762\u6700\u4e0a\u65b9top\u7684\u6309\u952e\n    - search.suggest # \u641c\u7d22\u5efa\u8bae\n    - navigation.footer # \u9875\u9762\u5e95\u90e8\u6709\u4e0b\u4e00\u9875\u7684\u94fe\u63a5(\u6309\u76ee\u5f55\u4e0a\u7684\u987a\u5e8f)\n    - navigation.tabs # \u4e00\u7ea7\u76ee\u5f55\u878d\u5408\u81f3\u9876\u680f\uff0c\u5e76\u4e14\u53ea\u5c55\u793a\u4e8c\u7ea7\u76ee\u5f55\n    - navigation.tracking # \u5728\u7ffb\u5230\u9875\u9762\u5bf9\u5e94\u7684\u6807\u9898\u5904\u65f6\uff0c\u4f1a\u5c06\u5730\u5740\u680f\u7684\u5730\u5740\u66f4\u65b0\u6210\u6807\u9898\u5904\u7684\u94fe\u63a5\n    - navigation.instant\n    - navigation.instant.progress # \u9875\u9762\u9876\u90e8\u663e\u793a\u52a0\u8f7d\u8fdb\u5ea6\u6761\n    - content.code.copy # \u4ee3\u7801\u5757\u590d\u5236\u6309\u952e\n    - search.suggest # \u641c\u7d22\u5efa\u8bae\n    - search.highlight # \u641c\u7d22\u7ed3\u679c\u9ad8\u4eae/\u7a81\u51fa\u663e\u793a\n    - search.share # \u641c\u7d22\u7ed3\u679c\u5206\u4eab\n</code></pre>"},{"location":"markdown%E7%9B%B8%E5%85%B3/mkdocs%28material%29/#4","title":"4","text":"<p>\u663c\u591c\u6a21\u5f0f\u5207\u6362\u6309\u952e</p> <pre><code>theme:\n  palette: \n\n    # Palette toggle for light mode\n    - media: \"(prefers-color-scheme: light)\"\n      scheme: default\n      toggle:\n        icon: material/weather-night # \u56fe\u6807(\u53ef\u6539\uff0c\u4e0b\u540c)\n        name: Switch to dark mode\n\n    # Palette toggle for dark mode\n    - media: \"(prefers-color-scheme: dark)\"\n      scheme: slate\n      toggle:\n        icon: material/weather-sunny\n        name: Switch to light mode\n</code></pre>"},{"location":"markdown%E7%9B%B8%E5%85%B3/mkdocs%28material%29/#5","title":"5","text":"<p>\u76ee\u5f55</p> <pre><code>nav:\n  - \u4e00\u7ea7\u76ee\u5f55a: \"a.md\"\n  - \u4e00\u7ea7\u76ee\u5f55b: \"b.md\"\n  - \u4e00\u7ea7\u76ee\u5f55c: # \u6709\u5b50\u76ee\u5f55\u4e0d\u80fd\u5305\u542b\u94fe\u63a5\n    - \u4e8c\u7ea7\u76ee\u5f55aa: \"aa.md\"\n    - \u4e8c\u7ea7\u76ee\u5f55ab: \n      - \u4e09\u7ea7\u76ee\u5f55aaa: \"aaa.md\"\n  - \u4e00\u7ea7\u76ee\u5f55d: \"d.md\"\n  ...\n</code></pre>"},{"location":"markdown%E7%9B%B8%E5%85%B3/mkdocs%28material%29/#6","title":"6","text":"<pre><code>plugins:\n  # - blog: # \u8bbe\u7f6eblog\n  #     blog_dir: . # \u8bbe\u7f6eblog\u5bf9\u5e94\u7684\u8def\u5f84\n  #     blog_toc: true # \u8bbe\u7f6eblog\u7d22\u5f15\u9875\u9762\u7684\u76ee\u5f55\n  #     post_date_format: full # \u8bbe\u7f6eblog\u7d22\u5f15\u9875\u9762\u7684\u65e5\u671f\u683c\u5f0f\n  #     archive_toc: true\n  #     categories_toc: true\n  #     pagination_format: \"$link_first $link_previous ~2~ $link_next $link_last\" # \u8bbe\u7f6eblog\u7d22\u5f15\u9875\u9762\u7684\u5206\u9875\u683c\u5f0f\n  #     pagination_keep_content: true # \u8bbe\u7f6eblog\u7d22\u5f15\u9875\u9762\u7684\u5206\u9875\u5185\u5bb9\n  #     draft_if_future_date: true # \u8bbe\u7f6e\u5982\u679cblog\u7684\u65e5\u671f\u662f\u672a\u6765\u7684\u8bdd\uff0c\u5c31\u4f1a\u88ab\u5f53\u6210\u8349\u7a3f\u4e0d\u4f1a\u88ab\u53d1\u5e03\n  - i18n: # \u8bed\u8a00\u5207\u6362 (\u9700\u8981\u653e\u5728 git-revision-date-localized \u4e4b\u524d)\n    # v0.5.6\n      # default_language: en\n      # material_alternate: true\n      # languages:\n      #   zh:\n      #     name: \u7b80\u4f53\u4e2d\u6587\n      #     build: true\n      #   en:\n      #     name: English labels (\u82f1\u6587\u6807\u7b7e)\n      #     build: false\n    # v1.0.3\n      reconfigure_search: false\n      languages:\n          - locale: zh\n            name: \u7b80\u4f53\u4e2d\u6587\n            build: true\n            default: false\n          - locale: en\n            name: English labels (\u82f1\u6587\u6807\u7b7e)\n            build: true\n            default: true\n  - git-revision-date-localized: # \u9875\u9762\u4e0b\u65b9\u521b\u5efa\u548c\u4fee\u6539\u65f6\u95f4\n      enable_creation_date: true\n      type: timeago\n  - glightbox # \u56fe\u7247\u653e\u5927\n  - search: # \u641c\u7d22(\u652f\u6301\u4e2d\u6587\u3001\u82f1\u6587)\n      # separator: '[\\s\\-,:!=\\[\\]()\"/]+|(?!\\b)(?=[A-Z][a-z])|\\.(?!\\d)|&amp;[lg]t;'\n      separator: '[\\\\s\\\\u200b\\\\u3000\\\\-\u3001\u3002\uff0c\uff0e\uff1f\uff01\uff1b\\s\\-,:!=\\[\\]()\"/]+|(?!\\b)(?=[A-Z][a-z])|\\.(?!\\d)|&amp;[lg]t;'\n      # jieba_dict: jieba_dict/dict.txt.big\n      # jieba_dict_user: jieba_dict/user_dict.txt\n      lang: \n        # - zh\n        - ja\n        - en\n  # - tags # \u6dfb\u52a0\u7ed9\u5355\u4e2a\u6587\u6863\u6dfb\u52a0tag\u6807\u7b7e\n  - statistics # \u7edf\u8ba1\u9875\u9762\u5b57\u6570\u3001\u4ee3\u7801\u884c\u6570\u3001\u9605\u8bfb\u65f6\u95f4\n</code></pre> <ul> <li>\u8bed\u8a00\u5207\u6362</li> <li>\u9875\u9762\u4e0b\u65b9\u521b\u5efa\u548c\u4fee\u6539\u65f6\u95f4</li> <li>\u56fe\u7247\u653e\u5927</li> </ul>"},{"location":"markdown%E7%9B%B8%E5%85%B3/mkdocs%28material%29/#7","title":"7","text":"<p>\u53f3\u4e0a\u89d2github\u4ed3\u5e93</p> <p>Adding a git repository - Material for MkDocs (squidfunk.github.io)</p> <pre><code>repo_url: https://github.com/RonaldLN/Project-Application-Form-of-AIGC\nrepo_name: Project-Application-Form-of-AIGC\n</code></pre>"},{"location":"markdown%E7%9B%B8%E5%85%B3/mkdocs%28material%29/#8","title":"8","text":"<p>\u4e0a\u4f20\u5230<code>github</code>\u3001<code>gitee</code>\u4ed3\u5e93\uff1a</p> <pre><code>mkdocs gh-deploy --force\n</code></pre> <p>(\u8be5\u547d\u4ee4\u53ea\u4e0a\u4f20site\u6587\u4ef6\u5939\u81f3gh-pages\u5206\u652f\uff0c\u82e5\u662fgithub\u4ed3\u5e93\uff0c\u4f1a\u81ea\u52a8\u9009\u62e9gh-pages\u5206\u652f\u751f\u6210github pages\u9875\u9762)</p>"},{"location":"markdown%E7%9B%B8%E5%85%B3/mkdocs%28material%29/#9","title":"9","text":"<p>\u6dfb\u52a0 KaTeX \u516c\u5f0f\u4e66\u5199</p> <p><code>docs/javascripts/katex.js</code>:</p> <pre><code>document$.subscribe(({ body }) =&gt; { \n  renderMathInElement(body, {\n    delimiters: [\n      { left: \"$$\",  right: \"$$\",  display: true },\n      { left: \"$\",   right: \"$\",   display: false },\n      { left: \"\\\\(\", right: \"\\\\)\", display: false },\n      { left: \"\\\\[\", right: \"\\\\]\", display: true }\n    ],\n  })\n})\n</code></pre> <p><code>mkdocs.yml</code>:</p> <pre><code>extra_javascript:\n  - javascripts/katex.js \n  - https://cdnjs.cloudflare.com/ajax/libs/KaTeX/0.16.7/katex.min.js  \n  - https://cdnjs.cloudflare.com/ajax/libs/KaTeX/0.16.7/contrib/auto-render.min.js\n\nextra_css:\n  - https://cdnjs.cloudflare.com/ajax/libs/KaTeX/0.16.7/katex.min.css\n</code></pre>"},{"location":"markdown%E7%9B%B8%E5%85%B3/mkdocs%28material%29/#10","title":"10","text":"<p>\u653e\u5728 <code>/doc</code>\u5185\u5b50\u6587\u4ef6\u5939\u91cc\u7684md\u6587\u4ef6\u4f1a\u6839\u636e\u8be5\u5b50\u6587\u4ef6\u5939\u540d\u81ea\u52a8\u751f\u6210\u4e00\u7ea7\u76ee\u5f55\uff08\u5982\u679c\u6ca1\u6709\u81ea\u5b9a\u4e49\u76ee\u5f55\uff09</p>"},{"location":"markdown%E7%9B%B8%E5%85%B3/mkdocs%28material%29/#11","title":"11","text":"<p>\u6dfb\u52a0\u8c37\u6b4c\u5206\u6790</p> <pre><code>extra:\n  analytics:\n    provider: google\n    property: G-xxxxxxxxxx\n</code></pre>"},{"location":"markdown%E7%9B%B8%E5%85%B3/mkdocs%28material%29/#12","title":"12","text":"<p>\u56fe\u50cf\u5ef6\u8fdf\u52a0\u8f7d</p> <p>\u5728\u6bcf\u4e2a\u56fe\u50cf\u540e\u52a0\u4e0a <code>{ loading=lazy }</code> </p> <pre><code>![xxx](.../xxx.png){ loading=lazy }\n</code></pre>"},{"location":"markdown%E7%9B%B8%E5%85%B3/mkdocs%28material%29/#13","title":"13","text":"<p>\u8bbe\u7f6e\u6bcf\u4e2a\u6587\u7ae0\u5e95\u90e8\u663e\u793a\u521b\u5efa\u548c\u66f4\u65b0\u65f6\u95f4</p> <p>Adding a git repository - Material for MkDocs (squidfunk.github.io)</p> <p>\u6dfb\u52a0\u5305\uff1a</p> <pre><code>pip install mkdocs-git-revision-date-localized-plugin\n</code></pre> <p>\u6dfb\u52a0\u5230 <code>mkdocs.yml</code>:</p> <pre><code>plugins:\n  - git-revision-date-localized:\n      enable_creation_date: true\n      type: timeago\n</code></pre>"},{"location":"markdown%E7%9B%B8%E5%85%B3/mkdocs%28material%29/#14","title":"14","text":"<p>\u56fe\u7247\u7f29\u653e\u529f\u80fd/\u70b9\u51fb\u653e\u5927</p> <p>Images - Material for MkDocs (squidfunk.github.io)</p> <p><code>pip</code>:</p> <pre><code>pip install mkdocs-glightbox\n</code></pre> <p><code>mkdocs.yml</code>:</p> <pre><code>plugins:\n  - glightbox\n</code></pre> <p>\u63d2\u4ef6\u5b98\u65b9\u4f7f\u7528\u6587\u6863\uff1a</p> <p>blueswen/mkdocs-glightbox: A MkDocs plugin supports image lightbox (zoom effect) with GLightbox. (github.com)</p>"},{"location":"markdown%E7%9B%B8%E5%85%B3/mkdocs%28material%29/#15","title":"15","text":"<p>\u6dfb\u52a0\u7248\u6743\u4fe1\u606f</p> <pre><code>copyright: Copyright &amp;copy; 2023 - 2023 Ronald Luo\n</code></pre>"},{"location":"markdown%E7%9B%B8%E5%85%B3/mkdocs%28material%29/#16","title":"16","text":"<p>\u641c\u7d22</p> <pre><code>theme:\n    ...\n    features:\n    ...\n    - search.suggest # \u641c\u7d22\u5efa\u8bae\n    - search.highlight # \u641c\u7d22\u7ed3\u679c\u9ad8\u4eae/\u7a81\u51fa\u663e\u793a\n    - search.share # \u641c\u7d22\u7ed3\u679c\u5206\u4eab\n\nplugins:\n  ...\n  - search: # \u641c\u7d22(\u9009\u62e9\u652f\u6301\u4e2d\u6587\u3001\u82f1\u6587)\n      separator: '[\\s\\-,:!=\\[\\]()\"/]+|(?!\\b)(?=[A-Z][a-z])|\\.(?!\\d)|&amp;[lg]t;'\n      lang: \n        # - zh\n        - ja\n        - en\n</code></pre> <p>\u4e2d\u6587\u6682\u4e0d\u652f\u6301\uff0c\u53ef\u4ee5\u9009\u62e9\u65e5\u6587( <code>ja</code> )\u4ee3\u66ff</p> <p>\u4e2d\u6587\u652f\u6301(\u5373\u5c06)</p> <p>Setting up site search - Material for MkDocs (squidfunk.github.io)</p> <p>\u4e3a\u4e86\u5728\u5185\u7f6e\u641c\u7d22\u63d2\u4ef6\u4e2d\u6dfb\u52a0\u5bf9\u4e2d\u6587\u7684\u652f\u6301\uff0c\u8bf7\u901a\u8fc7 <code>pip</code> \u5b89\u88c5 jieba \u6587\u672c\u5206\u5272\u5e93\uff0c\u63d2\u4ef6\u5c06\u901a\u8fc7\u5206\u53e5\u5668\u8fd0\u884c\u6240\u6709\u6587\u672c\uff1a</p> <pre><code>pip install jieba\n</code></pre> <p>\u641c\u7d22\u5efa\u8bae\u529f\u80fd\uff1a</p> <p>\u542f\u7528\u641c\u7d22\u5efa\u8bae\u540e\uff0c\u641c\u7d22\u5c06\u663e\u793a\u6700\u540e\u4e00\u4e2a\u5355\u8bcd\u7684\u6700\u53ef\u80fd\u5b8c\u6210\u60c5\u51b5\uff0c\u8be5\u5355\u8bcd\u53ef\u4ee5\u901a\u8fc7 Right \u952e\u586b\u5145</p>"},{"location":"markdown%E7%9B%B8%E5%85%B3/mkdocs%28material%29/#17","title":"17","text":"<p>\u8bed\u8a00\u5207\u6362</p> <p>\u53c2\u8003</p> <p>cs-self-learning/mkdocs.yml at master \u00b7 PKUFlyingPig/cs-self-learning (github.com)</p> <p>\u9700\u8981\u5b89\u88c5 <code>mkdocs-static-i18n</code> \u5305</p> <pre><code>pip install mkdocs-static-i18n\n</code></pre> <p>\u5e76\u4e14\u5728 <code>mkdocs.yml</code> \u4e2d <code>plugins:</code> \u91cc <code>- i18n:</code> \u9700\u8981\u5199\u5728 <code>git-revision-date-localized</code> \u4e4b\u524d</p> <p>\u62a5\u9519\u4fe1\u606f\uff1a</p> <pre><code>Error: [git-revision-date-localized] should be defined after the i18n plugin in your mkdocs.yml file. This is because i18n adds a 'locale' variable to markdown pages that this plugin supports.\n</code></pre> <p>\u5e76\u4e14\u6dfb\u52a0\u4e86i18n\u9700\u8981\u6ce8\u91ca\u6389 <code>theme:</code> \u4e2d\u7684 <code>language:</code> </p> <p>\u6b64\u5916\uff0c</p> <p>\u82e5\u60f3\u6dfb\u52a0\u5bf9\u5e94\u8bed\u8a00\u7248\u672c\u7684\u6587\u6863\uff0c\u6bd4\u5982 <code>index.md</code> \u7684\u4e2d\u6587\u7248\uff0c\u5219\u5728\u76f8\u540c\u8def\u5f84\u4e0b\u521b\u5efa <code>index.zh.md</code> \u8fdb\u884c\u7f16\u5199</p> <p>\u53c2\u8003</p> <p>cs-self-learning/docs at master \u00b7 PKUFlyingPig/cs-self-learning (github.com)</p> <p>ultrabug/mkdocs-static-i18n: MkDocs i18n plugin using static translation markdown files (github.com)</p> <p>`mkdocs-static-i18n\u63d2\u4ef6\u7248\u672c\u66f4\u65b0:</p> <p>1.0.0\u4e4b\u540e\u7684\u7248\u672c\uff0c\u4f3c\u4e4e\u914d\u7f6e\u683c\u5f0f\u6539\u53d8\u4e86\uff0ccs-self-learning/docs at master \u00b7 PKUFlyingPig/cs-self-learning (github.com) \u8fd9\u91cc\u9762\u4f7f\u7528\u7684\u683c\u5f0f\u53ef\u80fd\u662f\u65e7\u7248\u7684\uff0c\u65b0\u7248\u7684\u914d\u7f6e\u683c\u5f0f\u53ef\u4ee5\u89c1Setting up languages - MkDocs static i18n plugin documentation (en) (ultrabug.github.io)\uff1a</p> <pre><code>- i18n:\n      reconfigure_search: false\n      languages:\n          - locale: zh\n            name: \u7b80\u4f53\u4e2d\u6587\n            build: true\n            default: false\n          - locale: en\n            name: English labels (\u82f1\u6587\u6807\u7b7e)\n            build: true\n            default: true\n</code></pre> <p>\u7531\u4e8e\u5e94\u8be5\u662f\u53bb\u9664\u4e86 <code>default_language</code> \u8fd9\u4e2a\u9009\u9879\uff0c\u6240\u4ee5\u9ed8\u8ba4\u8bed\u8a00\u9700\u8981\u5728\u8bed\u8a00\u91cc\u9762\u5355\u72ec\u8bbe\u7f6e\uff0c\u9ed8\u8ba4\u8bed\u8a00\u9700\u8981\u5c06 <code>build</code> \u548c <code>default</code> \u90fd\u8bbe\u7f6e\u4e3a <code>true</code> \uff0c\u5426\u5219\u4f1a\u62a5\u9519\u3002</p> <p>(\u65b0\u7248\u4e2d <code>default_language</code> \u548c <code>material_alternate</code> \u4e24\u4e2a\u9009\u9879\u90fd\u5df2\u7ecf\u4e0d\u80fd\u7528\uff0c\u5982\u679c\u914d\u7f6e\u4f1a\u62a5\u9519)</p> <p>\u6b64\u5916\uff0c\u7531\u4e8e mkdocs-material \u672c\u8eab\u7684\u641c\u7d22\u529f\u80fd\u4e0d\u652f\u6301\u4e2d\u6587 <code>zh</code> \uff0c\u56e0\u6b64\u9700\u8981\u5c06 <code>reconfigure_search</code> \u8bbe\u7f6e\u4e3a <code>false</code> </p> <p>Setting up search - MkDocs static i18n plugin documentation (en) (ultrabug.github.io)</p> <p>26\u8bb0\u5f55\u7684\u8be2\u95ee\u8fc7\u7a0b\u4e2d\u6d89\u53ca\u5230\u4e86\u8fd9\u4e2a\u95ee\u9898</p>"},{"location":"markdown%E7%9B%B8%E5%85%B3/mkdocs%28material%29/#18","title":"18","text":"<p>\u6dfb\u52a0\u81ea\u5b9a\u4e49\u7684\u4ee3\u7801</p> <p>javascript - How to add script to head tag in MkDocs? - Stack Overflow</p> <p>Customization - Material for MkDocs (squidfunk.github.io)</p> <p>\u4ee5\u6dfb\u52a0\u767e\u5ea6\u7edf\u8ba1\u7684\u4ee3\u7801\u4e3a\u4f8b\uff1a</p> <p>\u5148\u5728 <code>mkdocs.yml</code> \u4e2d\u6dfb\u52a0\u4ee5\u4e0b\u5185\u5bb9</p> <pre><code>theme:\n  ...\n  custom_dir: overrides\n</code></pre> <p>Customization - Material for MkDocs (squidfunk.github.io)</p> <p>\u5e76\u4e14\u5728 <code>mkdocs.yml</code> \u76f8\u540c\u8def\u5f84\u4e0b\u521b\u5efa <code>overrides</code> \u6587\u4ef6\u5939</p> <p>\u518d\u5728\u8be5\u6587\u4ef6\u5939\u4e2d\u521b\u5efa <code>main.html</code> \u6587\u4ef6</p> <pre><code>.\n\u251c\u2500 overrides/\n\u2502  \u2514\u2500 main.html\n\u2514\u2500 mkdocs.yml\n</code></pre> <p>\u5e76\u5728\u8be5\u6587\u4ef6\u4e2d\u6dfb\u52a0\u5982\u4e0b\u5185\u5bb9\uff1a</p> <pre><code>{% extends \"base.html\" %}\n\n{% block extrahead %}\n  &lt;!-- \u4ece \u767e\u5ea6\u7edf\u8ba1-\u4ee3\u7801\u83b7\u53d6 \u4e2d\u83b7\u53d6\u7684\u4ee3\u7801 --&gt;\n  &lt;script&gt;\n    var _hmt = _hmt || [];\n    (function() {\n      var hm = document.createElement(\"script\");\n      hm.src = \"https://hm.baidu.com/hm.js?xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\";\n      var s = document.getElementsByTagName(\"script\")[0]; \n      s.parentNode.insertBefore(hm, s);\n    })();\n    &lt;/script&gt;\n{% endblock %}\n</code></pre> <p>\u5982\u679c\u8981\u8ffd\u52a0(\u800c\u4e0d\u662f\u8986\u5199)\uff0c\u9700\u8981\u6dfb\u52a0 <code>{{ super() }}</code> \u6765\u5305\u542b\u539f\u6709\u4ee3\u7801\uff0c\u5982</p> <pre><code>{% extends \"base.html\" %}\n\n{% block scripts %}\n  &lt;!-- Add scripts that need to run before here --&gt;\n  {{ super() }}\n  &lt;!-- Add scripts that need to run afterwards here --&gt;\n{% endblock %}\n</code></pre> <p>(\u7531\u4e8e <code>extrahead</code> \u672c\u8eab\u5c31\u4e3a\u7a7a\uff0c</p> <p>Empty block to add custom meta tags</p> <p>\u6240\u4ee5\u4e0d\u9700\u8981\u5305\u542b\u539f\u6709\u4ee3\u7801\uff0c\u53ef\u4ee5\u76f4\u63a5\u8986\u5199)</p>"},{"location":"markdown%E7%9B%B8%E5%85%B3/mkdocs%28material%29/#19","title":"19","text":"<p>Setting up the footer - Material for MkDocs (squidfunk.github.io)</p> <p>\u6dfb\u52a0social links\u65f6\uff0c(\u4ee5\u53calogo\u548cgit\u4ed3\u5e93\u56fe\u6807)\u53ef\u4ee5\u66f4\u6539icon</p> <pre><code>extra:\n  social:\n    - icon: simple/github\n      link: https://github.com/RonaldLN\n    - icon: simple/gitee\n      link: https://gitee.com/ronald-luo\n    - icon: material/email-fast\n      link: mailto:&lt;ln12142325@mail.nwpu.edu.cn&gt;\n</code></pre> <p>\u53ef\u7528\u7684icon\u53ef\u4ee5\u5728</p> <p>Icons, Emojis - Material for MkDocs (squidfunk.github.io)</p> <p>\u4e2d\u67e5\u8be2\uff0c</p> <p>\u4f46\u5728\u5199\u5165 <code>mkdocs.yml</code> \u65f6\u9700\u8981\u9002\u5f53\u4fee\u6539\uff0c\u5982</p> <ul> <li> <code>:octicons-mail-16:</code> \u6539\u4e3a <code>octicons/mail-16</code></li> <li> <code>:material-email-fast:</code> \u6539\u4e3a <code>material/email-fast</code></li> <li> <code>:simple-github:</code> \u6539\u4e3a <code>simple/github</code></li> </ul>"},{"location":"markdown%E7%9B%B8%E5%85%B3/mkdocs%28material%29/#20","title":"20","text":"<p>Content tabs - Material for MkDocs (squidfunk.github.io)</p> <p>\u5185\u5bb9\u9009\u9879\u5361</p> <p><code>mkdocs.yml</code>:</p> <pre><code>markdown_extensions:\n  - pymdownx.superfences\n  - pymdownx.tabbed:\n      alternate_style: true \n</code></pre> <p>\u793a\u4f8b</p> <pre><code>=== \"Unordered list\"\n\n    * Sed sagittis eleifend rutrum\n    * Donec vitae suscipit est\n    * Nulla tempor lobortis orci\n\n=== \"Ordered list\"\n\n    1. Sed sagittis eleifend rutrum\n    2. Donec vitae suscipit est\n    3. Nulla tempor lobortis orci\n</code></pre>"},{"location":"markdown%E7%9B%B8%E5%85%B3/mkdocs%28material%29/#21","title":"21","text":"<p>\u5c0f\u6280\u5de7</p> <p>\u5982\u679c \u5185\u5bb9\u9009\u9879\u5361 \u6216\u8005 \u544a\u8beb/\u4fe1\u606f \u4e0d\u80fd\u5728\u6709\u5e8f\u5217\u8868\u4e2d\u663e\u793a(\u6216 \u6709\u5e8f\u5217\u8868\u56e0\u4e3a \u5185\u5bb9\u9009\u9879\u5361 \u6216\u8005 \u544a\u8beb/\u4fe1\u606f \u88ab\u4e2d\u65ad)\uff0c\u5982</p> <pre><code>1.   \u6b65\u9aa4\u4e00\n\n     !!! note\n\n         ...\n\n2.   \u6b65\u9aa4\u4e8c\n\n     ...\n</code></pre> <ol> <li> <p>\u6b65\u9aa4\u4e00</p> <p>!!! note</p> <pre><code> ...\n</code></pre> </li> <li> <p>\u6b65\u9aa4\u4e8c</p> <p>...</p> </li> </ol> <p>\u5219\u53ef\u4ee5\u501f\u52a9 \u5f15\u7528 <code>&gt;</code></p> <pre><code>1.   \u6b65\u9aa4\u4e00\n\n     &gt; !!! note\n     &gt; \n     &gt;     ...\n\n     &amp;nbsp;\n\n     &gt; === \"tab\"\n     &gt; \n     &gt;     ...\n\n2.   \u6b65\u9aa4\u4e8c\n\n     ...\n</code></pre> <ol> <li> <p>\u6b65\u9aa4\u4e00</p> <p>Note</p> <p>...</p> <p> </p> tab <p>...</p> </li> <li> <p>\u6b65\u9aa4\u4e8c</p> <p>...</p> </li> </ol>"},{"location":"markdown%E7%9B%B8%E5%85%B3/mkdocs%28material%29/#22","title":"22","text":"<p>\u5c0f\u6280\u5de7</p> <p>\u5728typora\u4e2d</p> <pre><code>&gt;   ...\n\n&gt;   ...\n</code></pre> <p>\u4f1a\u663e\u793a\u6210\u4e24\u4e2a\u5206\u5f00\u7684\u5f15\u7528</p> <p>\u800c\u5728 material for mkdocs \u751f\u6210\u7684\u9875\u9762\u4e2d\uff0c\u4f1a\u5408\u6210\u4e00\u4e2a\u8fde\u7740\u7684\u5f15\u7528</p> <p>\u5904\u7406\u6280\u5de7 \u53ef\u4ee5\u7528 <code>&amp;nbsp;</code> (\u597d\u50cf\u662fhtml\u4e2d\u7684\u7a7a\u683c)\u6765\u5206\u5f00\u4e24\u4e2a\u5f15\u7528\uff1a</p> <pre><code>&gt;   ...\n\n&amp;nbsp;\n\n&gt;   ...\n</code></pre>"},{"location":"markdown%E7%9B%B8%E5%85%B3/mkdocs%28material%29/#23","title":"23","text":"<p>\u7528 material for mkdocs \u5728 github \u6216 gitee \u4e0a\u90e8\u7f72\u9759\u6001\u7f51\u9875\u7684(\u6211\u7684)\u65b9\u6cd5\uff1a</p> <ol> <li>\u5148\u5728 github \u6216 gitee \u4e0a\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u4ed3\u5e93(\u53ef\u4ee5\u9009\u62e9\u81ea\u52a8\u6dfb\u52a0README.md\u6587\u4ef6\uff0c\u56e0\u4e3a\u8fd9\u6837\u4f1a\u81ea\u52a8\u521b\u5efa\u51fa main \u6216 master \u5206\u652f)</li> <li>\u7136\u540e\u5c06\u4ed3\u5e93 <code>git clone</code> \u5230\u672c\u5730\u4e2d</li> <li>\u518d\u5728\u547d\u4ee4\u884c\u4e2d <code>mkdocs new xxx</code> \u90a3\u4e2a\u6587\u4ef6\u5939</li> <li>\u6700\u540e\u6dfb\u52a0md\u6587\u6863\u6587\u4ef6\uff0c\u518d\u90e8\u7f72\u5230\u4ed3\u5e93\u5373\u53ef</li> </ol>"},{"location":"markdown%E7%9B%B8%E5%85%B3/mkdocs%28material%29/#24","title":"24","text":"<p>\u5173\u4e8emkdocs-material\u7684tag\u529f\u80fd</p> <p>Setting up tags - Material for MkDocs (squidfunk.github.io)</p> <p>(\u4e2a\u4eba\u731c\u6d4b)\u5176\u4f5c\u7528\u5728\u4e8e\uff0c\u80fd\u591f\u5728\u6bcf\u4e2a\u9875\u9762\u7684\u7b2c\u4e00\u4e2a\u6807\u9898\u4e0a\u65b9\u663e\u793a\u4e00\u4e2a\u6216\u591a\u4e2a \u6807\u7b7e (\u597d\u50cf\u53ea\u80fd\u5728\u9875\u9762\u7684\u4e0a\u65b9)\uff0c\u4ee5\u53ca\u5728\u641c\u7d22\u65f6\uff0c\u542b\u6709\u5bf9\u5e94\u6807\u7b7e\u7684\u7f51\u9875/\u6587\u6863\u4e0b\u4e5f\u4f1a\u663e\u793a\u51fa\u8be5\u6807\u7b7e(\u8fd9\u4e2a\u6709\u5229\u4e8e\u641c\u7d22\u6587\u6863\uff0c\u6216\u8005\u6587\u6863\u5206\u7c7b)</p> <p>\u7136\u540e\u8fd8\u6709\u4e00\u4e2a\u529f\u80fd\u662f\uff0c\u80fd\u8bbe\u7f6e\u4e00\u4e2a\u6587\u6863\u6210\u4e3a \u6807\u7b7e\u7d22\u5f15\u9875 (Setting up tags - Material for MkDocs (squidfunk.github.io))\uff0c\u80fd\u663e\u793a\u6807\u7b7e\u88ab\u54ea\u4e9b\u9875\u9762/\u6587\u6863\u5305\u542b\u4e86</p> <p>Tags support \ud83c\udd95 \u00b7 Issue #2593 \u00b7 squidfunk/mkdocs-material (github.com)</p> <p>\u8fd9\u4e2a\u7f51\u9875\u80fd\u770b\u5230\u4e00\u4e9b\u6548\u679c</p>"},{"location":"markdown%E7%9B%B8%E5%85%B3/mkdocs%28material%29/#25","title":"25","text":"<p>\u4e2d\u6587\u7684\u641c\u7d22\u652f\u6301</p> <p>Setting up site search - Material for MkDocs (squidfunk.github.io)</p> <p>\u9700\u8981\u4ecejieba github\u4ed3\u5e93\u4e2d\u4e0b\u8f7d <code>dict.txt</code> \u6216 <code>dict.txt.small</code> \u6216 <code>dict.txt.big</code> \u6587\u4ef6\uff0c\u7136\u540e\u653e\u5230\u672c\u5730\u9879\u76ee\u4e2d</p> <p><code>mkdocs.yml</code> \u4e2d\uff0c</p> <pre><code>plugins:\n  - search:\n      jieba_dict: dict.txt \n      jieba_dict_user: user_dict.txt\n</code></pre> <p><code>dict.txt</code> \u548c <code>user_dict.txt</code> \u4e24\u5904\u5bf9\u5e94\u7684\u662f <code>mkdocs.yml</code> \u6587\u4ef6\u7684\u4f4d\u7f6e\uff0c\u6240\u4ee5\u5982\u679c\u5c06\u8fd9\u4e24\u4e2a\u8def\u5f84\u66ff\u6362\u6210\u522b\u7684\u8def\u5f84\uff0c\u6839\u76ee\u5f55\u5e94\u8be5\u662f <code>mkdocs.yml</code> \u7684\u76ee\u5f55</p> <p>\u5e76\u4e14\u8981\u53bb\u9664\u6389 <code>lang</code> \u9009\u9879(\u5177\u4f53\u53ef\u89c126)</p>"},{"location":"markdown%E7%9B%B8%E5%85%B3/mkdocs%28material%29/#26","title":"26","text":"<p>\u4e00\u6b21\u62a5\u544a\u9519\u8bef\u7684\u7ecf\u5386</p> <p>2023-09-11</p> <p>Why does mkdocs-material display unsupported Chinese when running the mkdocs gh-deploy -- force command \u00b7 squidfunk/mkdocs-material \u00b7 Discussion #5992 (github.com)</p> <p>stage 1</p> <p>\u4f5c\u8005\u8ba9\u521b\u5efa\u4e00\u4e2a\u6700\u5c0f\u590d\u5236\u4ef6\u7136\u540e\u4e0a\u4f20\uff0c</p> <p>Creating a reproduction - Material for MkDocs (squidfunk.github.io)</p> <p>\u6211\u5927\u81f4\u7684\u64cd\u4f5c\u8fc7\u7a0b\u662f\uff0c\u521b\u5efa\u4e00\u4e2a\u65b0\u7684mkdocs\u9879\u76ee\uff0c\u7136\u540e\u6309\u6587\u6863\u8bf4\u7684 \u5728 <code>mkdocs.yml</code> \u6587\u4ef6\u4e2d\u6dfb\u52a0\u5fc5\u8981\u7684\u914d\u7f6e\uff0c</p> <ul> <li> <p><code>yaml     theme:       name: material</code></p> <p>\u57fa\u672c\u4e0a\u5fc5\u987b\u7684</p> </li> <li> <p>```yaml     plugins:</p> <ul> <li>search:       jieba_dict: jieba_dict/dict.txt.big       jieba_dict_user: jieba_dict/user_dict.txt       lang:          - zh ```</li> </ul> <p>\u62a5\u9519\u7684\u5730\u65b9</p> </li> </ul> <p>\u7136\u540e <code>mkdocs build</code> \u4e00\u4e0b\uff0c\u51fa\u73b0\u4e86\u62a5\u9519\uff0c(\u5982\u679c\u6ca1\u6709\u5e94\u8be5\u5c31\u662f\u7ee7\u7eed\u6309\u539f\u6765\u7684\u914d\u7f6e\u6dfb\u52a0\u53ef\u80fd\u5bfc\u81f4\u62a5\u9519\u7684\u914d\u7f6e\uff0c\u4e0d\u65ad\u5c1d\u8bd5\u76f4\u5230\u51fa\u73b0\u62a5\u9519)</p> <p>\u518d\u6309\u6587\u6863\u8bf4\u7684\uff0c\u6dfb\u52a0\u751f\u6210\u9519\u8bef\u62a5\u544a\u7684\u63d2\u4ef6</p> <pre><code>plugins:\n  - info\n</code></pre> <p>\u6700\u540e\u518d <code>mkdocs build</code> \u4e00\u6b21\uff0c\u4f46\u662f\u8fd9\u6b21\u9700\u8981\u80fd\u8fde\u63a5\u4e0a github (\u8981\u6302\u68af\u5b50)\uff0c\u7136\u540e\u4f1a\u5728\u9879\u76ee\u6839\u76ee\u5f55\u751f\u6210\u4e00\u4e2a zip \u6587\u4ef6</p> <p></p> <p>stage 2</p> <p>\u4f5c\u8005\u56de\u590d\uff0c\u5c06 <code>search</code> \u4e2d\u7684 <code>lang</code> \u9009\u9879\u5168\u90e8\u53bb\u9664\u5373\u53ef</p> <p>\u4f46\u5728\u6211\u53bb\u9664\u540e\uff0c\u4ecd\u4ea7\u751f\u4e86\u4e00\u884c\u62a5\u9519</p> <pre><code>...\nWARNING - Language 'zh' is not supported by Lunr.js, not setting it in the 'plugins.search.lang' option\n...\n</code></pre> <p>\u6000\u7591\u662f\u7531\u4e8e\u4f7f\u7528\u4e86\u8bed\u8a00\u5207\u6362\u7684\u63d2\u4ef6 <code>i18n</code> \u4e2d\u8bbe\u7f6e\u7684 <code>zh</code> \u5bfc\u81f4\u7684\uff0c</p> <p>\u5c06\u63d2\u4ef6\u7684\u914d\u7f6e\u4ee3\u7801\u6ce8\u91ca\u6389\u4e4b\u540e\uff0c\u518d\u6b21\u914d\u7f6e\uff0c\u53d1\u73b0\u62a5\u9519\u4fe1\u606f\u6d88\u5931(\u6240\u4ee5\u786e\u5b9a\u62a5\u9519\u4fe1\u606f\u662f\u7531\u4e8e\u5728i18n\u63d2\u4ef6\u4e2d\u8bbe\u7f6e\u4e86 <code>zh</code> \u76f8\u5173\u7684\u914d\u7f6e\u4ea7\u751f\u7684)</p> <p>\u5728\u67e5\u770b\u4e86 <code>mkdocs-static-i18n</code> \u7684\u5b98\u65b9\u6587\u6863(Installation - MkDocs static i18n plugin documentation (en) (ultrabug.github.io))\u4e4b\u540e\uff0c\u53d1\u73b0\u63d2\u4ef6\u6709\u4e2a\u9009\u9879\u53ef\u4ee5\u4e0d\u66f4\u6539mkdocs-material\u539f\u6709\u7684\u5185\u7f6esearch\u63d2\u4ef6\u7684\u914d\u7f6e</p> <p>Setting up search - MkDocs static i18n plugin documentation (en) (ultrabug.github.io)</p> <p>\u7136\u540e\u53d1\u73b0\u8fd9\u662f\u65b0\u7248\u672c\u624d\u6709\u7684\u9009\u9879\uff0c\u6240\u4ee5\u5c06\u539f\u6709\u7248\u672c <code>v0.5.6</code> \u66f4\u65b0\u4e3a <code>v1.0.3</code> \uff0c\u4f46\u65b0\u7248\u672c\u7684\u8bed\u8a00\u914d\u7f6e\u4e5f\u6539\u53d8\uff0cSetting up languages - MkDocs static i18n plugin documentation (en) (ultrabug.github.io)\uff0c</p> <p>(\u5176\u4f59\u7684\u4e00\u4e9b\u5173\u4e8e\u65b0\u7248\u53d8\u5316\u7684\u53d1\u73b0\u53ef\u89c1\u4e8e18)</p> <p>\u7ecf\u8fc7\u8c03\u6574\u548c\u9009\u9879\u7684\u8bbe\u7f6e\uff0c\u6700\u540e\u62a5\u9519\u4fe1\u606f\u6d88\u5931\u4e86\u3002</p> <p>\u4f46\u662f\u641c\u7d22\u529f\u80fd\u7684\u4e2d\u6587\u5206\u5272\u4ecd\u7136\u4e0d\u80fd\u7528\uff0c\u5411\u4f5c\u8005\u518d\u6b21\u8be2\u95ee</p> <p>stage 3</p> <p>\u4f5c\u8005\u56de\u590d\u4ed6\u5c1d\u8bd5\u4e86\uff0c\u53ef\u4ee5\u6b63\u5e38\u4f7f\u7528</p> <p>\u7ecf\u8fc7\u5c1d\u8bd5\uff0c\u53d1\u73b0\u9700\u8981\u5c06 <code>theme</code> \u8bbe\u7f6e\u4e2d\u7684 <code>language</code> \u8bbe\u7f6e\u6210 <code>zh</code> \u624d\u80fd\u4f7f\u641c\u7d22\u7684\u4e2d\u6587\u652f\u6301\u6b63\u5e38(\u4e0d\u52a0\u5c31\u4e0d\u884c)\uff0c\u5e76\u5411\u4f5c\u8005\u53cd\u6620</p> <p>\u4f5c\u8005\u56de\u590d\uff0c\u56e0\u4e3a\u8bbe\u7f6e\u4e86 <code>language: zh</code> \u4f1a\u81ea\u52a8\u914d\u7f6e\u641c\u7d22\u5206\u5272(search separator)\uff0c\u5982\u679c\u6ca1\u6709\u8bbe\u7f6e <code>language: zh</code> \uff0c\u5219\u9700\u8981\u624b\u52a8\u6dfb\u52a0\u76f8\u5e94\u7684\u641c\u7d22\u5206\u5272(search separator)\uff0c\u53c2\u8003Chinese search support - Material for MkDocs (squidfunk.github.io)</p> <p>\u4f46\u662f\u6211\u770b\u5230\u4ed6\u7ed9\u51fa\u7684github\u91cc\u7684\u6587\u4ef6\u91cc\uff0c\u8bbe\u7f6e\u7684\u7684\u5206\u5272\u8981\u66f4\u591a( <code>\"search.config.separator\": \"[\\\\s\\\\u200b\\\\u3000\\\\-\u3001\u3002\uff0c\uff0e\uff1f\uff01\uff1b]+\",</code> )\uff0c\u6240\u4ee5\u6211\u9009\u53d6\u4e86\u90a3\u4e2a\u6587\u4ef6\u91cc\u7684\u914d\u7f6e\u6dfb\u52a0\u5230\u6211\u7684 <code>mkdocs.yml</code> \u6587\u4ef6\u91cc</p> <pre><code>  - search:\n      separator: '[\\\\s\\\\u200b\\\\u3000\\\\-\u3001\u3002\uff0c\uff0e\uff1f\uff01\uff1b\\s\\-,:!=\\[\\]()\"/]+|(?!\\b)(?=[A-Z][a-z])|\\.(?!\\d)|&amp;[lg]t;'\n</code></pre> <p>\u539f\u672c\u4e3a\uff1a</p> <pre><code>  - search:\n      separator: '[\\s\\-,:!=\\[\\]()\"/]+|(?!\\b)(?=[A-Z][a-z])|\\.(?!\\d)|&amp;[lg]t;'\n</code></pre> <p>\u7ecf\u8fc7\u6d4b\u8bd5\uff0c\u641c\u7d22\u4e2d\u6587\u652f\u6301\u80fd\u591f\u6b63\u5e38\u4f7f\u7528\uff0c\u5e76\u4e14 <code>i18n</code> \u63d2\u4ef6\u4e5f\u80fd\u6b63\u5e38\u4f7f\u7528</p>"},{"location":"markdown%E7%9B%B8%E5%85%B3/mkdocs%28material%29/#27","title":"27","text":"<p>\u4e2d\u6587\u641c\u7d22\u652f\u6301\u611f\u89c9\u4e0d\u662f\u5f88\u597d\u7528\uff0c\u6240\u4ee5\u7528\u56de\u4e86\u539f\u6765\u7684\u914d\u7f6e</p> <pre><code>  - search: # \u641c\u7d22(\u9009\u62e9\u652f\u6301\u4e2d\u6587\u3001\u82f1\u6587)\n      separator: '[\\u200b\\u3000\\-\u3001\u3002\uff0c\uff0e\uff1f\uff01\uff1b\\s\\-,:!=\\[\\]()\"/]+|(?!\\b)(?=[A-Z][a-z])|\\.(?!\\d)|&amp;[lg]t;'\n      # jieba_dict: jieba_dict/dict.txt.big\n      # jieba_dict_user: jieba_dict/user_dict.txt\n      lang: \n        # - zh\n        - ja\n        - en\n</code></pre>"},{"location":"markdown%E7%9B%B8%E5%85%B3/mkdocs%28material%29/#28","title":"28","text":"<p>\u914d\u7f6eblog\u7684\u8fc7\u7a0b\u8bb0\u5f55</p> <p>Setting up a blog - Material for MkDocs (squidfunk.github.io)</p> <p>\u5148\u914d\u7f6e\u597d\uff0c\u518d\u53d1\u5e03blog</p> <p>\u8bbe\u7f6eblog\u63d2\u4ef6\uff1a</p> <pre><code>plugin:\n  - blog\n</code></pre> <p>\u5e76\u521b\u5efa\u76f8\u5e94\u7684\u76ee\u5f55\u7ed3\u6784\uff1a</p> <pre><code>.\n\u251c\u2500 docs/\n\u2502  \u2514\u2500 blog/\n\u2502     \u251c\u2500 posts/\n\u2502     \u2514\u2500 index.md\n\u2514\u2500 mkdocs.yml\n</code></pre> <p>\u5e76\u5c06 <code>blog</code> \u8def\u5f84\u4e0b\u7684 <code>index.md</code> \u6dfb\u52a0\u5230 <code>mkdocs.yml</code> \u76ee\u5f55\u7684\u914d\u7f6e\u4e2d\uff1a</p> <pre><code>nav:\n  - Blog:\n    - blog/index.md \n</code></pre> <p>\u9ed8\u8ba4\u914d\u7f6e\u4e0b\uff0cblog\u5bf9\u5e94\u7684\u76ee\u5f55\u662f\u4e0a\u9762\u76ee\u5f55\u7ed3\u6784\u4e2d\u7684 <code>blog/</code> \uff0c</p> <p>\u5982\u679c\u8981\u81ea\u5b9a\u4e49blog\u7684\u76ee\u5f55\uff0c\u6bd4\u5982\u8981\u8bbe\u7f6e\u72ec\u7acb\u7684blog\uff0c\u53ef\u4ee5\u5c06 <code>blog-dir</code> \u8bbe\u7f6e\u6210 <code>.</code> \uff1a</p> <pre><code>plugins:\n  - blog:\n      blog_dir: .\n</code></pre> <p>\u90a3\u4e48\u5982\u679c\u5176\u4ed6\u7684\u8def\u5f84\u4f7f\u7528\u9ed8\u8ba4\u7684\u8bbe\u7f6e\u7684\u8bdd\uff0c\u6587\u4ef6\u7ed3\u6784\u5e94\u8be5\u53d8\u6210</p> <pre><code>.\n\u251c\u2500 docs/\n\u2502  \u251c\u2500 posts/\n\u2502  \u2514\u2500 index.md\n\u2514\u2500 mkdocs.yml\n</code></pre> <p>\u90a3\u4e48\u4e4b\u524d\u7684\u76ee\u5f55\u7684\u8bbe\u7f6e\u5e94\u8be5\u6539\u6210</p> <pre><code>nav:\n  - Blog:\n    - index.md \n</code></pre> <p><code>post_dir</code> \u53c2\u6570\u540c\u7406</p> <p>\u6700\u7ec8\u6211\u7684\u914d\u7f6e\uff1a</p> <pre><code>nav:\n  - Blog:\n    - index.md \n\nplugins:\n  - blog: # \u8bbe\u7f6eblog\n      blog_dir: . # \u8bbe\u7f6eblog\u5bf9\u5e94\u7684\u8def\u5f84\n      blog_toc: true # \u8bbe\u7f6eblog\u7d22\u5f15\u9875\u9762\u7684\u76ee\u5f55\n      post_date_format: full # \u8bbe\u7f6eblog\u7d22\u5f15\u9875\u9762\u7684\u65e5\u671f\u683c\u5f0f\n      archive_toc: true\n      categories_toc: true\n      pagination_format: \"$link_first $link_previous ~2~ $link_next $link_last\" # \u8bbe\u7f6eblog\u7d22\u5f15\u9875\u9762\u7684\u5206\u9875\u683c\u5f0f\n      pagination_keep_content: true # \u8bbe\u7f6eblog\u7d22\u5f15\u9875\u9762\u7684\u5206\u9875\u5185\u5bb9\n      draft_if_future_date: true # \u8bbe\u7f6e\u5982\u679cblog\u7684\u65e5\u671f\u662f\u672a\u6765\u7684\u8bdd\uff0c\u5c31\u4f1a\u88ab\u5f53\u6210\u8349\u7a3f\u4e0d\u4f1a\u88ab\u53d1\u5e03\n</code></pre> <p>\u5728post\u5bf9\u5e94\u7684\u76ee\u5f55\u4e2d\u521b\u5efablog\u6587\u6863(\u9ed8\u8ba4\u4e3a <code>{blog}/posts</code> )\uff0c</p> <pre><code>---\ndraft: false\ndate: 2023-09-11\nauthors:\n  - ronald_luo\ncategories:\n  - Configure &amp; Debug\n---\n\n# \u4e00\u6b21\u5728github\u4e0a\u8be2\u95ee\u4f5c\u8005\u7684\u7ecf\u5386\n\n&gt;   2023-09-11\n\n[Why does mkdocs-material display unsupported Chinese when running the mkdocs gh-deploy -- force command \u00b7 squidfunk/mkdocs-material \u00b7 Discussion #5992 (github.com)](https://github.com/squidfunk/mkdocs-material/discussions/5992)\n\n&lt;!-- more --&gt;\n\n## **stage 1**\n\n\u4f5c\u8005\u8ba9\u521b\u5efa\u4e00\u4e2a*\u6700\u5c0f\u590d\u5236\u4ef6*\u7136\u540e\u4e0a\u4f20\uff0c\n\n...\n</code></pre> <ul> <li><code>draft</code> : \u662f\u5426\u8bbe\u7f6e\u6210\u8349\u7a3f\uff0c\u53ea\u6709\u9884\u89c8\u4f1a\u6784\u5efa\uff0c\u53d1\u5e03\u4e0d\u4f1a\u6784\u5efa</li> <li><code>date</code> : \u65e5\u671f</li> <li><code>authors</code> : \u9009\u62e9\u4e00\u4e2a\u6216\u591a\u4e2a <code>.author.yml</code> \u6587\u4ef6\u4e2d\u5df2\u6709\u7684\u4f5c\u8005</li> <li><code>categories</code> : \u9009\u62e9\u5206\u7c7b</li> <li><code>&lt;!-- more --&gt;</code> : \u6458\u8981\u8bbe\u7f6e\uff0c\u4e3b\u9875\u4e2d\u53ea\u663e\u793a\u4ee3\u7801\u4e4b\u524d\u7684\u5185\u5bb9</li> </ul> <p>\u6ce8\u610f\uff1a\u4e00\u7ea7\u6807\u9898\u53ea\u80fd\u8bbe\u7f6e\u4e00\u4e2a\uff0c\u5426\u5219\u76ee\u5f55\u4e0d\u4f1a\u663e\u793a</p> <p>How can I make the table of content appear for each post in my blog? \u00b7 squidfunk/mkdocs-material \u00b7 Discussion #5998 (github.com)</p> <p>\u5176\u4f59\u4e00\u4e9b\u9009\u9879</p> <p>Adding categories</p> <p>\u8bbe\u7f6e\u5206\u7c7b\u6bd4\u8f83\u7b80\u5355 \u6613\u61c2</p> <p>Adding tags</p> <p>\u6dfb\u52a0tags\u5728\u6211\u7684\u5c1d\u8bd5\u8fc7\u7a0b\u4e2d\u53ea\u80fd\u5728\u641c\u7d22\u7ed3\u679c\u4e2d\u663e\u793atag\uff0c\u6587\u7ae0\u9876\u90e8\u5e76\u4e0d\u80fd\u663e\u793atag\uff0c\u611f\u89c9\u5b9e\u7528\u6027\u4e0d\u662f\u5f88\u9ad8\uff0c\u6240\u4ee5\u5c31\u6ca1\u6709\u6dfb\u52a0\u8fd9\u4e2a\u4e1c\u897f</p> <p>Setting the reading time</p> <p>\u9605\u8bfb\u65f6\u95f4\u5728blog\u63d2\u4ef6\u91cc\u5185\u7f6e\u6709\u8fd9\u4e2a\u529f\u80fd\uff0c\u4e0d\u7528\u8bbe\u7f6e\u4e5f\u80fd\u663e\u793a\u9605\u8bfb\u65f6\u95f4\uff0c\u4f46\u662f\u5982\u679c\u8ba4\u4e3a\u4e0d\u51c6\u7684\u8bdd\uff0c\u53ef\u4ee5\u81ea\u5df1\u5bf9\u5355\u7bc7blog\u8bbe\u7f6e\u9605\u8bfb\u65f6\u95f4\u800c\u8986\u76d6\u6389\u81ea\u52a8\u8ba1\u7b97\u7684</p>"},{"location":"markdown%E7%9B%B8%E5%85%B3/mkdocs%28material%29/#29","title":"29","text":"<p>\u66f4\u6539\u548c\u914d\u7f6e\u81ea\u5b9a\u4e49\u7684\u7f51\u9875\u989c\u8272\u7684\u8bb0\u5f55</p> <p>\u5982\u679c\u53ea\u9700\u4fee\u6539\u9876\u90e8\u680f\u7684\u989c\u8272\u548c\u9f20\u6807\u653e\u7f6e\u5904\u7684\u94fe\u63a5\u7684\u5f3a\u8c03\u8272\uff0c\u5e76\u4e14\u4e0d\u4f7f\u7528\u81ea\u5b9a\u4e49\u7684\u989c\u8272\uff0c\u90a3\u4e48\u6839\u636e\u5b98\u65b9\u6587\u6863\u4e2d\u7684\u6307\u793a\uff0c</p> <p>Changing the colors - Material for MkDocs (squidfunk.github.io)</p> <p>\u5728 <code>mkdocs.yml</code> \u6dfb\u52a0\u76f8\u5e94\u7684\u914d\u7f6e\u5373\u53ef</p> <p>\u914d\u7f6e\u81ea\u5b9a\u4e49\u7684\u7f51\u9875\u4e3b\u9898(\u7f51\u9875\u5305\u62ec\u5e95\u8272\u3001\u9876\u90e8\u680f\u989c\u8272\u3001\u5f3a\u8c03\u8272)</p> <p>\u5728\u5bf9\u5e94\u8def\u5f84\u65b0\u5efa\u6587\u4ef6 <code>docs/stylesheets/extra.css</code> </p> <p>\u5e76\u5728 <code>mkdocs.yml</code> \u4e2d\u6dfb\u52a0\uff1a</p> <pre><code>extra_css:\n  - stylesheets/extra.css\n</code></pre> <p>\u989c\u8272\u8ba1\u7b97\u5668 - \u5728\u7ebf\u989c\u8272\u5de5\u5177 - PhotoKit.com</p> <p>\u8fd9\u4e2a\u7f51\u7ad9\u80fd\u67e5\u8be2\u989c\u8272\u7684HSL\u3001HSV\u3001HEX\u3001RGB\u7b49\u5bf9\u5e94\u7684\u503c</p> <p>css\u6587\u4ef6\u4e2d\u7684\u8bbe\u7f6e\u4ee3\u7801\uff1a</p> <ul> <li> <p>\u6df1\u8272\u4e3b\u9898\uff1a</p> <p>\u6211\u662f\u76f4\u63a5\u4ecemkdocs\u6784\u5efa\u7684\u7f51\u9875\u7684css\u6587\u4ef6\u4e2d\u590d\u5236\u4e86\u9ed8\u8ba4 <code>slate</code> \u4e3b\u9898\u7684\u914d\u7f6e\u4ee3\u7801\u5e76\u7a0d\u52a0\u4fee\u6539\u5f97\u5230\u6211\u81ea\u5b9a\u4e49\u7684\u4e3b\u9898\u914d\u7f6e\u4ee3\u7801\uff1a</p> <pre><code>[data-md-color-scheme=\"forest-dark\"] {\n  --md-hue: 221;\n  --md-default-fg-color: hsla(var(--md-hue), 75%, 95%, 1);\n  --md-default-fg-color--light: hsla(var(--md-hue), 75%, 90%, 0.62);\n  --md-default-fg-color--lighter: hsla(var(--md-hue), 75%, 90%, 0.32);\n  --md-default-fg-color--lightest: hsla(var(--md-hue), 75%, 90%, 0.12);\n  --md-default-bg-color: hsla(var(--md-hue), 45%, 22%, 1);\n  --md-default-bg-color--light: hsla(var(--md-hue), 45%, 22%, 0.54);\n  --md-default-bg-color--lighter: hsla(var(--md-hue), 45%, 22%, 0.26);\n  --md-default-bg-color--lightest: hsla(var(--md-hue), 45%, 22%, 0.07);\n  --md-code-fg-color: hsla(var(--md-hue), 18%, 86%, 1);\n  --md-code-bg-color: hsla(var(--md-hue), 45%, 16%, 1);\n  --md-code-hl-color: #4287ff26;\n  --md-code-hl-number-color: #e6695b;\n  --md-code-hl-special-color: #f06090;\n  --md-code-hl-function-color: #c973d9;\n  --md-code-hl-constant-color: #9383e2;\n  --md-code-hl-keyword-color: #6791e0;\n  --md-code-hl-string-color: #2fb170;\n  --md-code-hl-name-color: var(--md-code-fg-color);\n  --md-code-hl-operator-color: var(--md-default-fg-color--light);\n  --md-code-hl-punctuation-color: var(--md-default-fg-color--light);\n  --md-code-hl-comment-color: var(--md-default-fg-color--light);\n  --md-code-hl-generic-color: var(--md-default-fg-color--light);\n  --md-code-hl-variable-color: var(--md-default-fg-color--light);\n  --md-typeset-color: var(--md-default-fg-color);\n  --md-typeset-a-color: var(--md-primary-fg-color);\n  --md-typeset-mark-color: #ffb7424d;\n  --md-typeset-kbd-color: hsla(var(--md-hue), 15%, 94%, 0.12);\n  --md-typeset-kbd-accent-color: hsla(var(--md-hue), 15%, 94%, 0.2);\n  --md-typeset-kbd-border-color: hsla(var(--md-hue), 15%, 14%, 1);\n  --md-typeset-table-color: hsla(var(--md-hue), 75%, 95%, 0.12);\n  --md-typeset-table-color--light: hsla(var(--md-hue), 75%, 95%, 0.035);\n  --md-admonition-fg-color: var(--md-default-fg-color);\n  --md-admonition-bg-color: var(--md-default-bg-color);\n  --md-footer-bg-color: hsla(var(--md-hue), 15%, 12%, 0.87);\n  --md-footer-bg-color--dark: hsla(var(--md-hue), 15%, 10%, 1);\n  --md-shadow-z1: 0 0.2rem 0.5rem #0003, 0 0 0.05rem #0000001a;\n  --md-shadow-z2: 0 0.2rem 0.5rem #0000004d, 0 0 0.05rem #00000040;\n  --md-shadow-z3: 0 0.2rem 0.5rem #0006, 0 0 0.05rem #00000059;\n  color-scheme: dark;\n\n  --md-primary-fg-color: hsl(30, 78%, 61%);\n  --md-primary-fg-color--light: hsl(38, 91%, 82%);\n  --md-primary-fg-color--dark: hsl(25, 26%, 34%);\n  --md-primary-bg-color: #fff;\n  --md-primary-bg-color--light: #ffffffb3;\n\n  --md-typeset-a-color: var(--md-primary-fg-color);\n\n  --md-accent-fg-color: hsl(36, 100%, 45%);\n  --md-accent-fg-color--transparent: #f500561a;\n  --md-accent-bg-color: #fff;\n  --md-accent-bg-color--light: #ffffffb3;\n}\n</code></pre> <p>\u7f51\u9875\u5e95\u8272\u63a8\u8350\u91c7\u7528HSL\u6a21\u5f0f\u8bbe\u7f6e\u989c\u8272\uff0c\u56e0\u4e3a\u539f\u59cb\u7684\u4ee3\u7801\u4e2d\uff0c\u5355\u72ec\u5c06\u201cH\u201d(hue)\u8bbe\u7f6e\u4e3a\u4e00\u4e2a\u53c2\u6570 <code>--md-hue</code> \uff0c\u7136\u540e\u518d\u5176\u4ed6\u5c5e\u6027\u4e2d\u76f4\u63a5\u4f7f\u7528\u8fd9\u4e2a\u53c2\u6570\u6765\u914d\u7f6e\u76f8\u5e94\u7684\u7f51\u9875\u989c\u8272\u5c5e\u6027</p> <p>\u4e0e\u7f51\u9875\u5e95\u8272\u76f8\u5173\u7684\u5c5e\u6027\u6709\uff1a</p> <ul> <li> <p><code>--md-hue</code> \uff1a\u8bbe\u7f6e\u5e95\u8272\u7684\u8272\u76f8(Hue)\uff0c\u8303\u56f4\u4e3a 0 - 360</p> </li> <li> <p><code>css       --md-default-bg-color: hsla(var(--md-hue), 45%, 22%, 1);       --md-default-bg-color--light: hsla(var(--md-hue), 45%, 22%, 0.54);       --md-default-bg-color--lighter: hsla(var(--md-hue), 45%, 22%, 0.26);       --md-default-bg-color--lightest: hsla(var(--md-hue), 45%, 22%, 0.07);</code></p> <p><code>--md-default-bg-color</code> \u5bf9\u5e94\u7684\u5c31\u662f\u7f51\u9875\u7684\u5e95\u8272\uff0c<code>45%</code> \u5bf9\u5e94\u7684\u4f4d\u7f6e\u662fHSL\u4e2d\u7684S\u9971\u548c\u5ea6\uff0c<code>22%</code> \u5bf9\u5e94\u7684\u4f4d\u7f6e\u662fHSL\u4e2d\u7684L\u4eae\u5ea6\uff0c\u53e6\u5916\u4e09\u4e2a\u5c5e\u6027\u6682\u4e0d\u77e5\u9053\u5bf9\u5e94\u7684\u989c\u8272\u5728\u54ea\u91cc\uff0c\u4f46\u4ecb\u4e8e\u540d\u5b57\uff0c\u6240\u4ee5\u8ba4\u4e3a\u8fd9\u56db\u4e2a\u5c5e\u6027\u662f\u4e00\u5757\u7684</p> </li> <li> <p><code>--md-code-bg-color</code> \u8bbe\u7f6e\u4ee3\u7801\u5757\u7684\u5e95\u8272\uff0c\u53c2\u6570\u4e0e <code>--md-default-bg-color</code> \u4e00\u6837\uff0c\u6df1\u8272\u6a21\u5f0f\u4e0b\uff0c\u4ee3\u7801\u5757\u7684\u5e95\u8272\u7684\u4eae\u5ea6\u4e00\u822c\u8bbe\u7f6e\u6210\u7f51\u9875\u5e95\u8272\u7684\u4eae\u5ea6 -6%</p> </li> </ul> <p>\u4e0e\u9876\u90e8\u680f\u989c\u8272\u76f8\u5173\u7684\u5c5e\u6027\uff1a</p> <pre><code>  --md-primary-fg-color: hsl(30, 78%, 61%);\n  --md-primary-fg-color--light: hsl(38, 91%, 82%);\n  --md-primary-fg-color--dark: hsl(25, 26%, 34%);\n  --md-primary-bg-color: #fff;\n  --md-primary-bg-color--light: #ffffffb3;\n\n  --md-typeset-a-color: var(--md-primary-fg-color);\n</code></pre> <p><code>--md-primary-fg-color</code> \u662f\u76f4\u63a5\u51b3\u5b9a\u9876\u90e8\u680f\u989c\u8272\u7684\u5c5e\u6027\uff0c\u7528HSL(\u5982 <code>hsl(30, 78%, 61%)</code> )\uff0cHEX(\u5982 <code>#db9aa5</code> )\u5f62\u5f0f\u90fd\u53ef\u4ee5\u8bbe\u7f6e\u989c\u8272</p> <p><code>--md-primary-fg-color--light</code> \u548c <code>--md-primary-fg-color--dark</code> \u867d\u7136\u8fd8\u4e0d\u77e5\u9053\u8fd9\u4e24\u4e2a\u6709\u4ec0\u4e48\u7528\uff0c\u4f46\u662f\u6211\u53c2\u8003\u5b98\u65b9\u6587\u6863\u4ee5\u53ca\u9ed8\u8ba4slate\u4e3b\u9898\u5bf9\u5e94\u7684css\u6587\u4ef6\u4e2d\u7684\u90e8\u5206\uff0c\u5c06light\u8bbe\u7f6e\u6210\u540c\u8272\u7cfb\u7684\u6d45\u8272\uff0cdark\u8bbe\u7f6e\u6210\u540c\u8272\u7cfb\u7684\u6df1\u8272\uff0c\u5982\u4e0a\u9762\u7684\u4ee3\u7801(\u8bbe\u7f6e\u7684\u662f\u9ec4\u8272\u8272\u7cfb)</p> <p><code>--md-typeset-a-color</code> \u662f\u8bbe\u7f6e\u94fe\u63a5\u7b49\u5730\u65b9\u7684\u989c\u8272\uff0c\u76f4\u63a5\u5c06\u5176\u8bbe\u7f6e\u6210\u4e0e\u9876\u90e8\u680f\u989c\u8272\u4e00\u81f4\u5373\u53ef\uff1a</p> <pre><code>  --md-typeset-a-color: var(--md-primary-fg-color);\n</code></pre> <p>\u4e0e\u5f3a\u8c03\u8272\u76f8\u5173\u7684\u5c5e\u6027\uff1a</p> <pre><code>  --md-accent-fg-color: hsl(36, 100%, 45%);\n  --md-accent-fg-color--transparent: #f500561a;\n  --md-accent-bg-color: #fff;\n  --md-accent-bg-color--light: #ffffffb3;\n</code></pre> <p>\u53ea\u7528\u4fee\u6539 <code>--md-accent-fg-color</code> \u5c5e\u6027\u5373\u53ef</p> </li> <li> <p>\u6d45\u8272\u4e3b\u9898\uff1a</p> <p>\u4e0b\u9762\u662f\u6211\u76ee\u524d(\u5176\u4e2d\u4e00\u4e2a\u4e3b\u9898)\u7684\u8bbe\u7f6e\uff1a</p> <pre><code>[data-md-color-scheme=\"forest\"] {\n  --md-hue: 82;\n  --md-default-bg-color: hsla(var(--md-hue), 93%, 90%, 1);\n  --md-default-bg-color--light: hsla(var(--md-hue), 93%, 90%, 0.54);\n  --md-default-bg-color--lighter: hsla(var(--md-hue), 93%, 90%, 0.26);\n  --md-default-bg-color--lightest: hsla(var(--md-hue), 93%, 90%, 0.07);\n  --md-code-bg-color: hsla(var(--md-hue), 58%, 88%, 1);\n\n  --md-primary-fg-color: hsl(38, 100%, 34%);\n  --md-primary-fg-color--light: hsl(38, 91%, 82%);\n  --md-primary-fg-color--dark: hsl(25, 26%, 34%);\n  --md-primary-bg-color: #fff;\n  --md-primary-bg-color--light: #ffffffb3;\n\n  --md-typeset-a-color: var(--md-primary-fg-color);\n\n  --md-accent-fg-color: hsl(36, 100%, 45%);\n  --md-accent-fg-color--transparent: #f500561a;\n  --md-accent-bg-color: #fff;\n  --md-accent-bg-color--light: #ffffffb3;\n\n  --md-admonition-fg-color: var(--md-default-fg-color);\n  --md-admonition-bg-color: var(--md-default-bg-color);\n}\n</code></pre> <p>\u76f8\u5173\u7684\u9009\u9879\u4e0e\u6df1\u8272\u4e3b\u9898\u4e2d\u7684\u8bbe\u7f6e\u90fd\u5dee\u4e0d\u591a\uff0c\u597d\u50cf\u8981\u6ce8\u610f\u7684\u53ea\u6709\u6211\u8bbe\u7f6e\u7684\u6d45\u8272\u6a21\u5f0f\u4e0b\u7684\u4ee3\u7801\u5757\u7684\u5e95\u8272\u4eae\u5ea6\u662f\u6bd4\u7f51\u9875\u5e95\u8272\u8981\u9ad83%\u5de6\u53f3\uff0c\u4ee5\u53ca\u8865\u5145\u76f8\u5e94\u7684\u8bbe\u7f6e(\u53c2\u8003\u914d\u7f6e\u8fc7\u7a0b\u7684\u8bb0\u5f55)</p> </li> </ul> <p><code>css</code> \u6587\u4ef6\u4e2d\u7684 <code>data-md-color-scheme=</code> \u540e\u7684\u5f15\u53f7(\u6ca1\u6709\u5f15\u53f7\u4e5f\u53ef\u4ee5)\u4e2d\u7684\u5185\u5bb9\uff0c\u5c31\u662f\u53ef\u4ee5/\u5e94\u8be5\u5199\u5728 <code>mkdocs.yml</code> \u4e2d <code>scheme:</code> \u540e\u7684\u5173\u952e\u5b57\uff0c\u4f46\u662f\u8981\u6ce8\u610f\uff0c\u5982\u679c\u60f3\u8bbe\u7f6e\u7684\u5173\u952e\u5b57\u4e0d\u6b62\u4e00\u4e2a\u5355\u8bcd\uff0c\u90a3\u4e48 <code>css</code> \u6587\u4ef6\u4e2d\u7684\u8bbe\u7f6e\u5355\u8bcd\u4e4b\u95f4\u5e94\u8be5\u7528\u77ed\u6a2a\u7ebf <code>-</code> \u8fde\u63a5</p> <p><code>mkdocs.yml</code> \u4e2d\u7684\u8bbe\u7f6e\uff1a</p> <p>\u53ef\u4ee5\u6309 Color scheme \u4e2d\u76f4\u63a5\u8bbe\u7f6e <code>scheme</code> \u9009\u9879</p> <p>\u4e5f\u53ef\u4ee5\u6309 Color palette toggle \u8bbe\u7f6e\u591a\u4e2a\u4e3b\u9898\u5207\u6362\uff0c\u800c\u90fd\u662f\u5728\u76f8\u5e94\u7684 <code>scheme</code> \u9009\u9879\u4e4b\u540e\u586b\u5199\u8bbe\u7f6e\u7684\u5bf9\u5e94 \u5173\u952e\u5b57/\u4e3b\u9898\u540d\u5b57 \u5373\u53ef</p>"},{"location":"markdown%E7%9B%B8%E5%85%B3/mkdocs%28material%29/#30","title":"30","text":"<p>\u6dfb\u52a0\u8bc4\u8bba</p> <p>Adding a comment system - Material for MkDocs (squidfunk.github.io)</p> <p>\u9700\u8981\u5148\u5c06github\u4ed3\u5e93\u7684\u8ba8\u8bba\u6253\u5f00(\u53ef\u89c1 \u624b\u518c - github - 6)</p> <p>\u7136\u540e\u6309\u7167\u8bf4\u660e\u6587\u6863\u4e0a\u7684\uff0c\u5b89\u88c5 Giscus GitHub App \u5e76\u7ed9\u5bf9\u5e94\u4ed3\u5e93\u7684\u6743\u9650\uff0c</p> <p>\u7136\u540e\u5728 giscus \u7f51\u9875\u4e0a\u81ea\u884c\u9009\u62e9\u4e00\u4e9b\u9009\u9879\uff0c\u7136\u540e\u751f\u6210\u4e00\u5c0f\u6bb5\u4ee3\u7801</p> <p>\u518d\u5728 <code>mkdocs.yml</code> \u76f8\u540c\u8def\u5f84\u7684 <code>overrides</code> \u6587\u4ef6\u5939\u4e2d(\u5982\u679c\u6ca1\u6709\u5c31\u521b\u5efa\u4e00\u4e2a)\uff0c\u521b\u5efa <code>overrides/partials/comments.html</code> :</p> <pre><code>{% if page.meta.comments %}\n  &lt;h2 id=\"__comments\"&gt;{{ lang.t(\"meta.comments\") }}&lt;/h2&gt;\n  &lt;!-- Insert generated snippet here --&gt;\n\n  &lt;!-- Synchronize Giscus theme with palette --&gt;\n  &lt;script&gt;\n    var giscus = document.querySelector(\"script[src*=giscus]\")\n\n    // Set palette on initial load\n    var palette = __md_get(\"__palette\")\n    if (palette &amp;&amp; typeof palette.color === \"object\") {\n      var theme = palette.color.scheme === \"slate\"\n        ? \"transparent_dark\"\n        : \"light\"\n\n      // Instruct Giscus to set theme\n      giscus.setAttribute(\"data-theme\", theme) \n    }\n\n    // Register event handlers after documented loaded\n    document.addEventListener(\"DOMContentLoaded\", function() {\n      var ref = document.querySelector(\"[data-md-component=palette]\")\n      ref.addEventListener(\"change\", function() {\n        var palette = __md_get(\"__palette\")\n        if (palette &amp;&amp; typeof palette.color === \"object\") {\n          var theme = palette.color.scheme === \"slate\"\n            ? \"transparent_dark\"\n            : \"light\"\n\n          // Instruct Giscus to change theme\n          var frame = document.querySelector(\".giscus-frame\")\n          frame.contentWindow.postMessage(\n            { giscus: { setConfig: { theme } } },\n            \"https://giscus.app\"\n          )\n        }\n      })\n    })\n  &lt;/script&gt;\n{% endif %}\n</code></pre> <p>\u5e76\u5c06 giscus \u7f51\u9875\u4e0a\u751f\u6210\u7684\u4ee3\u7801\u7c98\u8d34\u5230\u6ce8\u91ca\u4e2d\u7684\u5bf9\u5e94\u4f4d\u7f6e</p> <p>\u6b64\u5916</p> <p>\u7531\u4e8e\u6211\u4f7f\u7528\u7684\u662f\u81ea\u5b9a\u4e49\u7684\u989c\u8272\uff0c\u5e76\u4e14\u8bc4\u8bba\u7684\u989c\u8272\u4e5f\u60f3\u8fdb\u884c\u4e00\u4e9b\u4fee\u6539\uff0c\u6240\u4ee5\u5bf9\u4e0a\u9762\u7684\u4ee3\u7801\u8fdb\u884c\u4e00\u4e9b\u4fee\u6539</p> <p>\u9700\u8981\u5173\u6ce8\u4e24\u5904</p> <pre><code>      var theme = palette.color.scheme === \"slate\"\n        ? \"transparent_dark\"\n        : \"light\"\n</code></pre> <p>\u6211\u5c06 <code>\"slate\"</code> \u6539\u6210\u4e86\u6211\u4e4b\u524d\u81ea\u5b9a\u4e49\u7684\u7f51\u9875\u4e3b\u9898 <code>\"sunset-glow-dark\"</code> \uff0c\u5c06 <code>\"transparent_dark\"</code> \u548c <code>\"light\"</code> \u6539\u6210\u4e86\u6211\u8ba4\u4e3a\u66f4\u9002\u5408\u6211\u81ea\u5b9a\u4e49\u4e3b\u9898\u7684\u989c\u8272 <code>\"noborder_dark\"</code> \u548c <code>\"dark_dimmed\"</code></p>"},{"location":"markdown%E7%9B%B8%E5%85%B3/mkdocs%28material%29/#31","title":"31","text":"<p>\u89e3\u51b3 <code>i18n</code> \u63d2\u4ef6\u9996\u9875\u8fdb\u884c\u8bed\u8a00\u5207\u6362\u65f6\uff0c\u8df3\u8f6c\u5230\u4e0d\u5b58\u5728\u7684\u7f51\u5740\u5e76\u663e\u793a404\u9875\u9762\u7684\u95ee\u9898</p> <p>9\u670818\u65e5\u5728 issue \u5411\u4f5c\u8005\u63d0\u95ee</p> <p>Link setting error on homepage (<code>index.md</code> <code>index.html</code>) \u00b7 Issue #261 \u00b7 ultrabug/mkdocs-static-i18n (github.com)</p> <p>\u4f5c\u8005\u5bf9\u6211\u7684 issue \u8fdb\u884c\u56de\u7b54</p> <p>\u89e3\u51b3\u65b9\u6cd5\u662f\uff0c</p> <p>\u9700\u8981\u5728 <code>mkdocs.yml</code> \u6587\u4ef6\u4e2d\uff0c\u6dfb\u52a0 <code>site_url</code> \u7684\u8bbe\u7f6e\uff0c</p> <pre><code>site_url: https://ronaldln.github.io/MyPamphlet\n</code></pre>"},{"location":"markdown%E7%9B%B8%E5%85%B3/mkdocs%28material%29/#32","title":"32","text":"<p>\u975e blog \u9875\u9762\u8bbe\u7f6e \u9875\u9762\u5b57\u6570\u3001\u4ee3\u7801\u884c\u6570\u3001\u9605\u8bfb\u65f6\u95f4\u7edf\u8ba1</p> <p>\u4f7f\u7528 <code>mkdocs-statistics-plugin</code> \u63d2\u4ef6</p> <p>TonyCrane/mkdocs-statistics-plugin: A MkDocs plugin that generate statistic data of a site (github.com)</p> <p>\u5148 <code>pip install</code></p> <pre><code>pip install mkdocs-statistics-plugin\n</code></pre> <p>\u7136\u540e\u5728 <code>mkdocs.yml</code> \u4e2d\u6dfb\u52a0\u8bbe\u7f6e</p> <pre><code>plugins:\n  - statistics\n</code></pre> <p>\u4e00\u4e9b\u53ef\u4ee5\u8bbe\u7f6e\u7684\u9009\u9879\uff1a</p> <ul> <li><code>page_check_metadata</code> : \u9ed8\u8ba4\u4e3a\u7a7a\uff0c\u7528\u4e8e\u7b5b\u9009\u6dfb\u52a0\u7edf\u8ba1\u4fe1\u606f\u7684\u9875\u9762(\u53ea\u5728\u542b\u6709\u6307\u5b9a\u5c5e\u6027\u7684\u9875\u9762\u4e2d\u6dfb\u52a0\u7edf\u8ba1\u4fe1\u606f\uff0c\u5982\u542b\u6709 <code>comments</code> )</li> <li><code>page_read_time</code> : \u9ed8\u8ba4\u4e3a <code>true</code> \uff0c\u8bbe\u7f6e\u662f\u5426\u663e\u793a\u9605\u8bfb\u65f6\u95f4</li> <li><code>page_template</code> : \u9ed8\u8ba4\u4e3a\u7a7a\uff0c\u8bbe\u7f6e\u81ea\u5b9a\u4e49\u7684\u7edf\u8ba1\u4fe1\u606f\u6837\u5f0f\uff0c\u8def\u5f84\u76f8\u5bf9\u4e8e <code>/docs</code> </li> </ul> <p>\u8bbe\u7f6e\u81ea\u5b9a\u4e49\u7684\u7edf\u8ba1\u4fe1\u606f\u6837\u5f0f</p> <p>\u6a21\u677f\u6587\u4ef6\u5728\u4ed3\u5e93\u4e2d\u6709\uff0c<code>mkdocs_statistics_plugin/templates/page_statistics.html</code></p> <p>\u6211\u5728 blog \u4e2d\u8bbe\u7f6e\u4e86\u81ea\u5b9a\u4e49\u7684\u6837\u5f0f\uff0c\u6211\u628a\u6837\u5f0f\u6587\u4ef6\u8bbe\u7f6e\u4e3a <code>/docs/page_template/page_statistics.html</code> \uff0c\u5e76\u7a0d\u52a0\u4e86\u4fee\u6539( <code>&lt;div&gt;</code> \u91cc\u9762\u683c\u5f0f\u4e0e <code>markdown</code> (\u6240\u4ee5\u8981\u6362\u884c\u9700\u8981\u4e24\u884c))</p> <pre><code>&lt;div markdown=\"1\" style=\"margin-top: -30px; font-size: 0.75em; opacity: 0.7;\"&gt;\n&amp;nbsp;\n\n:material-circle-edit-outline: \u7ea6 {{ words }} \u4e2a\u5b57 {% if code_lines != 0 %} \u2022 :fontawesome-solid-code: {{ code_lines }} \u884c\u4ee3\u7801 {% endif %}{% if read_time %}:material-clock-time-two-outline: {% if read_time == 0 %}\u9884\u8ba1\u9605\u8bfb\u65f6\u95f4\u4e0d\u5230 1 \u5206\u949f{% else %}\u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 {{ read_time }} \u5206\u949f{% endif %}{% endif %}\n\n---\n&lt;/div&gt;\n</code></pre> <p><code>mkdocs.yml</code> \u4e2d</p> <pre><code>plugins:\n  - statistics: # \u7edf\u8ba1\u9875\u9762\u5b57\u6570\u3001\u4ee3\u7801\u884c\u6570\u3001\u9605\u8bfb\u65f6\u95f4\n      page_template: \"page_template/page_statistics.html\"\n</code></pre>"},{"location":"markdown%E7%9B%B8%E5%85%B3/mkdocs%28material%29/#33","title":"33","text":"<p>\u5982\u679c\u6362\u7528 Google Font \u4e0a\u6536\u5f55\u7684\u5b57\u4f53\uff0c\u76f4\u63a5\u6309\u7167 Changing the fonts - Material for MkDocs (squidfunk.github.io) \u4e2d\u7684\u65b9\u6cd5\u64cd\u4f5c\u5373\u53ef\uff0c\u4f46\u662f\u8fd9\u79cd\u65b9\u6cd5\u5e94\u8be5\u4e0d\u80fd\u4f7f\u7528\u591a\u4e2a\u5b57\u4f53</p> <p>\u4f7f\u7528\u672a\u88ab Google Font \u6536\u5f55\u7684\u5b57\u4f53\uff0c\u4ee5\u53ca\u4f7f\u7528\u591a\u4e2a\u5b57\u4f53\u7684\u65b9\u6cd5(\u4e2d\u82f1\u6587\u4e0d\u540c\u5b57\u4f53)</p> <p>\u9700\u8981\u627e\u5230\u5b57\u4f53\u7684 <code>css</code> \u6587\u4ef6\uff0cGoogle Font \u4e0a\u7684\u5b57\u4f53\u53ef\u4ee5\u9009\u62e9\u5177\u4f53\u7c97\u7ec6\u89c4\u683c\u540e\uff0c\u70b9\u51fb\u9875\u9762\u53f3\u4e0a\u89d2\u50cf\u8d2d\u7269\u888b\u4e00\u6837\u7684\u56fe\u6807\uff0c\u7136\u540e\u5728\u53f3\u4fa7\u51fa\u73b0\u7684\u4e00\u680f\u4e2d\u627e\u5230 <code>css</code> \u6587\u4ef6\u5bf9\u5e94\u7684\u5730\u5740\uff0c\u4ee5\u53ca\u80fd\u770b\u5230\u5173\u952e\u5b57\uff0c</p> <p>\u6211\u4f7f\u7528\u4e86 Google Font \u4e0a\u7684 \u601d\u6e90\u5b8b\u4f53\uff0c\u5176\u5bf9\u5e94\u5730\u5740</p> <pre><code>https://fonts.googleapis.com/css2?family=Noto+Serif+SC&amp;display=swap\n</code></pre> <p>\u5173\u952e\u5b57\u4e3a <code>Noto Serif SC</code> \uff0c</p> <p>\u5982\u679c\u662f\u672a\u88ab Google Font \u6536\u5f55\u7684\u5b57\u4f53\uff0c\u5219\u9700\u8981\u53e6\u5916\u53bb\u5bfb\u627e\u5176 <code>css</code> \u7684\u5730\u5740\uff0c</p> <p>\u7136\u540e\u5728 <code>mkdocs.yml</code> \u4e2d <code>extra_css</code> \u5904\u52a0\u4e0a\u76f8\u5e94\u7684 <code>css</code> \u5730\u5740\uff0c</p> <p>\u518d\u5728\u8bbe\u7f6e\u81ea\u5b9a\u4e49\u7f51\u9875\u5916\u89c2\u7684 <code>css</code> \u6587\u4ef6\u4e2d(\u6211\u4e0e\u5b98\u65b9\u6587\u6863\u4e0a\u4e00\u6837\uff0c\u4f7f\u7528 <code>docs/stylesheets/extra.css</code> )\u6dfb\u52a0</p> <pre><code>:root {\n  --md-text-font: \"JetBrains Mono\", \"LXGW WenKai Screen\"; \n  --md-code-font: \"JetBrains Mono\", \"Noto Serif SC\";\n}\n</code></pre>"},{"location":"markdown%E7%9B%B8%E5%85%B3/mkdocs%28material%29/#34","title":"34","text":"<p>\u4fee\u6539 \u4ee3\u7801\u5757 \u548c \u884c\u5185\u4ee3\u7801 \u4e2d\u7684 \u5b57\u4f53\u5927\u5c0f \u548c \u884c\u95f4\u8ddd</p> <p>\u8be6\u7ec6\u5c1d\u8bd5/\u8bd5\u9519\u8fc7\u7a0b\u7ec6\u8282\u53c2\u8003 \u8c03\u6574 mkdocs-material \u7f51\u9875\u5916\u89c2\u8fc7\u7a0b\u8bb0\u5f55</p> <p>\u5927\u81f4\u65b9\u6cd5\u662f\uff0c\u5728\u8bbe\u7f6e\u7f51\u9875\u6837\u5f0f\u7684 <code>css</code> \u6587\u4ef6\u4e2d(\u5b98\u65b9\u6587\u6863\u4e2d\u4f7f\u7528\u7684\u662f <code>docs/stylesheets/extra.css</code> \uff0c\u6211\u4f7f\u7528\u7684\u662f <code>docs/stylesheets/custom.css</code> )\uff0c</p> <pre><code>/* \u4fee\u6539\u6240\u6709\u4ee3\u7801\u5b57\u4f53\u5927\u5c0f */\n.md-typeset code {\n  font-size: .65rem;\n}\n\n/* (\u8986\u76d6)\u4fee\u6539\u884c\u5185\u4ee3\u7801\u5b57\u4f53\u5927\u5c0f */\n.md-typeset code:not(pre code) {\n  font-size: inherit;\n}\n\n/* \u4fee\u6539\u4ee3\u7801\u5757\u884c\u95f4\u8ddd */\n.md-typeset pre {\n  line-height: 1.8;\n}\n</code></pre> <p>\u5bf9\u8fd9\u51e0\u4e2a\u5c5e\u6027\u7684\u503c\u8fdb\u884c\u76f8\u5e94\u7684\u4fee\u6539(\u5982\u679c\u6ca1\u6709\u5c5e\u6027\u6dfb\u52a0\u5373\u53ef\uff0c\u4f1a \u8986\u76d6 \u539f\u6709\u7684\u9ed8\u8ba4\u5c5e\u6027\u503c)</p>"},{"location":"markdown%E7%9B%B8%E5%85%B3/mkdocs%28material%29/#35","title":"35","text":"<p>\u4fee\u6539 giscus \u7684\u6837\u5f0f</p> <p>\u8be6\u7ec6\u5c1d\u8bd5/\u8bd5\u9519\u8fc7\u7a0b\u7ec6\u8282\u53c2\u8003 \u8c03\u6574 mkdocs-material \u7f51\u9875\u5916\u89c2\u8fc7\u7a0b\u8bb0\u5f55</p> <p>\u7ecf\u8fc7\u5728\u6d4f\u89c8\u5668\u4e0a\u6d4b\u8bd5\u53d1\u73b0\u4e86\u76f8\u5173\u7684\u51e0\u4e2a\u5c5e\u6027</p> <p></p> <ul> <li><code>--color-btn-primary-text</code> : \u53f3\u4e0b\u89d2  \u4f7f\u7528 Github \u767b\u5f55 \u7684\u6309\u94ae\u5904\uff0c\u8bbe\u7f6e\u5b57\u7684\u989c\u8272</li> <li><code>--color-btn-primary-bg</code> : \u540c\u4e0a\uff0c\u8bbe\u7f6e\u6309\u94ae(\u6574\u4f53\u586b\u5145)\u7684\u989c\u8272</li> <li><code>--color-btn-primary-border</code> : \u540c\u4e0a\uff0c\u8bbe\u7f6e\u6309\u94ae\u8fb9\u6846\u7684\u989c\u8272</li> <li><code>--color-btn-primary-hover-bg</code> : \u8bbe\u7f6e\u5c06\u9f20\u6807\u653e\u7f6e\u5728\u6309\u94ae\u4e0a\u65f6\uff0c\u6309\u94ae(\u6574\u4f53\u586b\u5145)\u7684\u989c\u8272</li> <li><code>--color-btn-primary-hover-border</code> : \u540c\u4e0a\uff0c\u8bbe\u7f6e\u6309\u94ae\u8fb9\u6846\u7684\u989c\u8272</li> <li><code>--color-fg-default</code> : \u8bbe\u7f6e <code>n</code> \u4e2a\u8868\u60c5 \u3001 <code>n</code> \u6761\u8bc4\u8bba \u3001\u8f93\u5165/\u9884\u89c8 (\u9009\u4e2d\u90a3\u4e2a) \u7684\u5b57\u4f53\u989c\u8272</li> <li><code>--color-fg-muted</code> : \u8bbe\u7f6e <code>n</code> \u4e2a\u8868\u60c5 \u4e0b\u7684\u7b11\u8138 \u3001\u8f93\u5165/\u9884\u89c8 (\u6ca1\u9009\u4e2d\u90a3\u4e2a) \u3001\u53f3\u4e0a\u5904 <code>Aa</code> \u3001\u6309\u94ae\u4e0a\u65b9\u7684markdown\u6807\u5fd7 \u7684\u989c\u8272</li> <li><code>--color-canvas-default</code> : \u8bbe\u7f6e \u8f93\u5165 \u548c \u6309\u94ae \u6240\u5728\u7684\u4e2d\u7a7a\u7684(\u6316\u53bb\u4e2d\u95f4\u8f93\u5165\u8bc4\u8bba\u6587\u672c\u7684\u533a\u57df)\u7684\u6846\u7684\u989c\u8272</li> <li><code>--color-canvas-inset</code> : \u8bbe\u7f6e \u4e2d\u95f4\u8f93\u5165\u8bc4\u8bba\u6587\u672c\u7684\u533a\u57df \u7684\u989c\u8272</li> <li><code>--color-canvas-subtle</code> : \u8bbe\u7f6e \u9884\u89c8 \u6240\u5728\u7684\u4e0a\u65b9\u7684\u6846\u7684\u989c\u8272</li> <li><code>--color-border-default</code> : \u8bbe\u7f6e\u6240\u6709\u52fe\u52d2\u8fb9\u6846\u7684\u7ebf\u7684\u989c\u8272</li> <li><code>--color-accent-fg</code> : \u8bbe\u7f6e \u5c06\u9f20\u6807\u79fb\u52a8\u5230 markdown\u6807\u5fd7 \u6216 <code>Aa</code> \u5904\u65f6\uff0c\u4ee5\u53ca\u5728\u8bc4\u8bba\u6587\u672c\u7684\u533a\u57df\u4e2d\u8f93\u5165\u65f6\u533a\u57df\u7684\u6846\uff0c\u6539\u53d8\u7684\u989c\u8272</li> <li><code>--color-btn-primary-selected-bg</code> : \u8bbe\u7f6e\u767b\u5f55\u6309\u94ae\u70b9\u51fb\u65f6\u7684\u989c\u8272</li> <li><code>--color-btn-primary-disabled-text</code> : \u8bbe\u7f6e\u767b\u5f55\u4e4b\u540e\uff0c\u8bc4\u8bba\u6309\u94ae\u7684\u8bc4\u8bba\u4e24\u4e2a\u5b57\u7684\u989c\u8272</li> <li><code>--color-btn-primary-disabled-bg</code> : \u540c\u4e0a\uff0c\u8bc4\u8bba\u6309\u94ae\u7684\u989c\u8272</li> <li><code>--color-btn-primary-disabled-border</code> : \u540c\u4e0a\uff0c\u8bc4\u8bba\u6309\u94ae\u8fb9\u6846\u7684\u989c\u8272</li> </ul> <p>\u7136\u540e\u57fa\u4e8e giscus \u5df2\u6709\u4e3b\u9898\u7684 css \u6587\u4ef6\u8fdb\u884c\u4fee\u6539\uff0c\u5982 <code>light</code> <code>noborder_dark</code> \uff0c\u5c06\u5bf9\u5e94\u7684\u5c5e\u6027\u7684\u503c\u8bbe\u7f6e\u6210\u81ea\u5df1\u60f3\u8bbe\u7f6e\u7684\u5c31\u53ef\u4ee5\u4e86\uff0c</p> <p>\u6700\u540e\u6211\u4fee\u6539\u5b8c\u7684</p> giscus_sunset_glow.cssgiscus_sunset_glow_dark.css giscus_sunset_glow.css <pre><code>/*! MIT License\n* Copyright (c) 2018 GitHub Inc.\n* https://github.com/primer/primitives/blob/main/LICENSE\n*/\nmain {\n--color-prettylights-syntax-comment: #6e7781;\n--color-prettylights-syntax-constant: #0550ae;\n--color-prettylights-syntax-entity: #8250df;\n--color-prettylights-syntax-storage-modifier-import: #24292f;\n--color-prettylights-syntax-entity-tag: #116329;\n--color-prettylights-syntax-keyword: #cf222e;\n--color-prettylights-syntax-string: #0a3069;\n--color-prettylights-syntax-variable: #953800;\n--color-prettylights-syntax-brackethighlighter-unmatched: #82071e;\n--color-prettylights-syntax-invalid-illegal-text: #f6f8fa;\n--color-prettylights-syntax-invalid-illegal-bg: #82071e;\n--color-prettylights-syntax-carriage-return-text: #f6f8fa;\n--color-prettylights-syntax-carriage-return-bg: #cf222e;\n--color-prettylights-syntax-string-regexp: #116329;\n--color-prettylights-syntax-markup-list: #3b2300;\n--color-prettylights-syntax-markup-heading: #0550ae;\n--color-prettylights-syntax-markup-italic: #24292f;\n--color-prettylights-syntax-markup-bold: #24292f;\n--color-prettylights-syntax-markup-deleted-text: #82071e;\n--color-prettylights-syntax-markup-deleted-bg: #ffebe9;\n--color-prettylights-syntax-markup-inserted-text: #116329;\n--color-prettylights-syntax-markup-inserted-bg: #dafbe1;\n--color-prettylights-syntax-markup-changed-text: #953800;\n--color-prettylights-syntax-markup-changed-bg: #ffd8b5;\n--color-prettylights-syntax-markup-ignored-text: #eaeef2;\n--color-prettylights-syntax-markup-ignored-bg: #0550ae;\n--color-prettylights-syntax-meta-diff-range: #8250df;\n--color-prettylights-syntax-brackethighlighter-angle: #57606a;\n--color-prettylights-syntax-sublimelinter-gutter-mark: #8c959f;\n--color-prettylights-syntax-constant-other-reference-link: #0a3069;\n--color-btn-text: #24292f;\n--color-btn-bg: #f6f8fa;\n--color-btn-border: #1f232826;\n--color-btn-shadow: 0 1px 0 #1f23280a;\n--color-btn-inset-shadow: inset 0 1px 0 #ffffff40;\n--color-btn-hover-bg: #f3f4f6;\n--color-btn-hover-border: #1f232826;\n--color-btn-active-bg: #ebecf0;\n--color-btn-active-border: #1f232826;\n--color-btn-selected-bg: #eeeff2;\n/* --color-btn-primary-text: #fff; */\n/* --color-btn-primary-bg: #1f883d; */\n/* --color-btn-primary-border: #1f232826; */\n--color-btn-primary-shadow: 0 1px 0 #1f23281a;\n--color-btn-primary-inset-shadow: inset 0 1px 0 #ffffff08;\n/* --color-btn-primary-hover-bg: #1a7f37; */\n/* --color-btn-primary-hover-border: #1f232826; */\n/* --color-btn-primary-selected-bg: #187733; */\n--color-btn-primary-selected-shadow: inset 0 1px 0 #002d1133;\n/* --color-btn-primary-disabled-text: #fffc; */\n/* --color-btn-primary-disabled-bg: #94d3a2; */\n/* --color-btn-primary-disabled-border: #1f232826; */\n--color-action-list-item-default-hover-bg: #d0d7de52;\n--color-segmented-control-bg: #eaeef2;\n--color-segmented-control-button-bg: #fff;\n--color-segmented-control-button-selected-border: #8c959f;\n/* --color-fg-default: #1f2328; */\n/* --color-fg-muted: #656d76; */\n--color-fg-subtle: #6e7781;\n/* --color-canvas-default: #fff; */\n--color-canvas-overlay: #fff;\n/* --color-canvas-inset: #f6f8fa; */\n/* --color-canvas-subtle: #f6f8fa; */\n/* --color-border-default: #d0d7de; */\n--color-border-muted: #d8dee4;\n--color-neutral-muted: #afb8c133;\n/* --color-accent-fg: #0969da; */\n--color-accent-emphasis: #0969da;\n--color-accent-muted: #54aeff66;\n--color-accent-subtle: #ddf4ff;\n--color-success-fg: #1a7f37;\n--color-attention-fg: #9a6700;\n--color-attention-muted: #d4a72c66;\n--color-attention-subtle: #fff8c5;\n--color-danger-fg: #d1242f;\n--color-danger-muted: #ff818266;\n--color-danger-subtle: #ffebe9;\n--color-primer-shadow-inset: inset 0 1px 0 #d0d7de33;\n--color-scale-gray-1: #eaeef2;\n--color-scale-blue-1: #b6e3ff;\n\n/*! Extensions from @primer/css/alerts/flash.scss */\n--color-social-reaction-bg-hover: var(--color-scale-gray-1);\n--color-social-reaction-bg-reacted-hover: var(--color-scale-blue-1);\n\n/* Custom style for sunset-glow mode */\n--primary-default: 123, 117, 165;\n--bg-default: 219, 154, 165;\n--color-btn-primary-text: #000000de;\n--color-btn-primary-bg: rgba(var(--primary-default), 0.45);\n--color-btn-primary-border: rgba(var(--primary-default), 0.5);\n--color-btn-primary-hover-bg: rgba(var(--primary-default), 0.3);\n--color-btn-primary-hover-border: rgba(var(--primary-default), 0.75);\n--color-btn-primary-selected-bg: rgba(var(--primary-default), 0.75);\n--color-btn-primary-disabled-text: #000000de;\n--color-btn-primary-disabled-bg: var(--color-btn-primary-bg);\n--color-btn-primary-disabled-border: var(--color-btn-primary-border);\n--color-fg-default: #000000de;\n--color-fg-muted: #0000008a;\n--color-canvas-default: hsl(322 21% 77% / 1);\n--color-canvas-inset: hsl(0 21% 87% / 1);\n--color-canvas-subtle: hsl(274 21% 70% / 1);\n--color-border-default: hsl(274 21% 70% / 1);\n--color-accent-fg: hsl(274 21% 70% / 1);\n}\n\nmain .pagination-loader-container {\nbackground-image: url(https://github.com/images/modules/pulls/progressive-disclosure-line.svg)\n}\n\nmain .gsc-loading-image {\nbackground-image: url(https://github.githubassets.com/images/mona-loading-default.gif)\n}\n</code></pre> giscus_sunset_glow_dark.css <pre><code>main {\n--primary-default: 20, 222, 155;\n--bg-default: 22, 22, 24;\n--color-prettylights-syntax-comment: #8b949e;\n--color-prettylights-syntax-constant: #79c0ff;\n--color-prettylights-syntax-entity: #d2a8ff;\n--color-prettylights-syntax-storage-modifier-import: #c9d1d9;\n--color-prettylights-syntax-entity-tag: #7ee787;\n--color-prettylights-syntax-keyword: #ff7b72;\n--color-prettylights-syntax-string: #a5d6ff;\n--color-prettylights-syntax-variable: #ffa657;\n--color-prettylights-syntax-brackethighlighter-unmatched: #f85149;\n--color-prettylights-syntax-invalid-illegal-text: #f0f6fc;\n--color-prettylights-syntax-invalid-illegal-bg: #8e1519;\n--color-prettylights-syntax-carriage-return-text: #f0f6fc;\n--color-prettylights-syntax-carriage-return-bg: #b62324;\n--color-prettylights-syntax-string-regexp: #7ee787;\n--color-prettylights-syntax-markup-list: #f2cc60;\n--color-prettylights-syntax-markup-heading: #1f6feb;\n--color-prettylights-syntax-markup-italic: #c9d1d9;\n--color-prettylights-syntax-markup-bold: #c9d1d9;\n--color-prettylights-syntax-markup-deleted-text: #ffdcd7;\n--color-prettylights-syntax-markup-deleted-bg: #67060c;\n--color-prettylights-syntax-markup-inserted-text: #aff5b4;\n--color-prettylights-syntax-markup-inserted-bg: #033a16;\n--color-prettylights-syntax-markup-changed-text: #ffdfb6;\n--color-prettylights-syntax-markup-changed-bg: #5a1e02;\n--color-prettylights-syntax-markup-ignored-text: #c9d1d9;\n--color-prettylights-syntax-markup-ignored-bg: #1158c7;\n--color-prettylights-syntax-meta-diff-range: #d2a8ff;\n--color-prettylights-syntax-brackethighlighter-angle: #8b949e;\n--color-prettylights-syntax-sublimelinter-gutter-mark: #484f58;\n--color-prettylights-syntax-constant-other-reference-link: #a5d6ff;\n--color-btn-text: #ebebf5db;\n--color-btn-bg: rgba(var(--bg-default), 1);\n--color-btn-border: rgba(var(--bg-default), 1);\n--color-btn-shadow: 0 1px 0 rgba(var(--bg-default), 1);\n--color-btn-inset-shadow: inset 0 1px 0 rgba(var(--bg-default), 1);\n--color-btn-hover-bg: rgba(var(--bg-default), 0.5);\n--color-btn-hover-border: rgba(var(--bg-default), 0.5);\n--color-btn-active-bg: rgba(var(--primary-default), 0.2);\n--color-btn-active-border: rgba(var(--primary-default), 1);\n--color-btn-selected-bg: rgba(var(--primary-default), 0.15);\n/* --color-btn-primary-text: #fff; */\n/* --color-btn-primary-bg: rgba(var(--primary-default), 0.45); */\n/* --color-btn-primary-border: rgba(var(--primary-default), 0.5); */\n--color-btn-primary-shadow: 0 1px 0 #1b1f241a;\n--color-btn-primary-inset-shadow: inset 0 1px 0 #ffffff08;\n/* --color-btn-primary-hover-bg: rgba(var(--primary-default), 0.53); */\n/* --color-btn-primary-hover-border: rgba(var(--primary-default), 0.75); */\n/* --color-btn-primary-selected-bg: rgba(var(--primary-default), 0.45); */\n--color-btn-primary-selected-shadow: inset 0 1px 0 #002d1133;\n/* --color-btn-primary-disabled-text: #fffc; */\n/* --color-btn-primary-disabled-bg: rgba(var(--primary-default), 0.5); */\n/* --color-btn-primary-disabled-border: rgba(var(--primary-default), 0.5); */\n--color-action-list-item-default-hover-bg: #b1bac41f;\n--color-segmented-control-bg: #6e76811a;\n--color-segmented-control-button-bg: #0d1117;\n--color-segmented-control-button-selected-border: rgba(var(--bg-default), 0.85);\n/* --color-fg-default: #ebebf5db; */\n/* --color-fg-muted: #ebebf599; */\n--color-fg-subtle: #ebebf580;\n/* --color-canvas-default: #1e1e20; */\n--color-canvas-overlay: #1e1e20;\n/* --color-canvas-inset: rgba(var(--bg-default), 0.85); */\n/* --color-canvas-subtle: rgba(var(--bg-default), 1); */\n/* --color-border-default: rgba(var(--bg-default), 0.85); */\n--color-border-muted: #afb8c133;\n--color-neutral-muted: #afb8c133;\n/* --color-accent-fg: rgba(var(--primary-default), 0.85); */\n--color-accent-emphasis: rgba(var(--primary-default), 0.95);\n--color-accent-muted: rgba(var(--primary-default), 0.4);\n--color-accent-subtle: rgba(var(--primary-default), 0.1);\n--color-success-fg: #3fb950;\n--color-attention-fg: #d29922;\n--color-attention-muted: #bb800966;\n--color-attention-subtle: #bb800926;\n--color-danger-fg: #f85149;\n--color-danger-muted: #f8514966;\n--color-danger-subtle: #f851491a;\n--color-primer-shadow-inset: 0 1px 0 rgba(var(--bg-default), 1), inset 0 1px 0 rgba(var(--bg-default), 1);\n--color-scale-gray-7: #161618;\n--color-scale-blue-8: #10b98126;\n\n/*! Extensions from @primer/css/alerts/flash.scss */\n--color-social-reaction-bg-hover: var(--color-scale-gray-7);\n--color-social-reaction-bg-reacted-hover: var(--color-scale-blue-8);\n\n/* Custom style for sunset-glow mode */\n--custom-primary-default: 123, 117, 165;\n/* --custom-bg-default: 219, 154, 165; */\n--color-btn-primary-text: #fcece9;\n--color-btn-primary-bg: rgba(var(--custom-primary-default), 0.85);\n--color-btn-primary-border: rgba(var(--custom-primary-default), 0.5);\n--color-btn-primary-hover-bg: rgba(var(--custom-primary-default), 0.7);\n--color-btn-primary-hover-border: rgba(var(--custom-primary-default), 0.35);\n--color-btn-primary-selected-bg: rgba(var(--custom-primary-default), 0.5);\n--color-btn-primary-disabled-text: #fcece9;\n--color-btn-primary-disabled-bg: var(--color-btn-primary-bg);\n--color-btn-primary-disabled-border: var(--color-btn-primary-border);\n--color-fg-default: #fcece9;\n--color-fg-muted: #a4908c;\n--color-canvas-default: hsl(309 5% 15% / 1);\n--color-canvas-inset: hsl(8 5% 12% / 1);\n--color-canvas-subtle: rgb(75 59 92);\n--color-border-default: rgba(0, 0, 0, 0);\n--color-accent-fg: rgba(var(--custom-primary-default), 0.7);\n}\n\nmain .pagination-loader-container {\nbackground-image: url(https://github.com/images/modules/pulls/progressive-disclosure-line-dark.svg)\n}\n\nmain .gsc-loading-image {\nbackground-image: url(https://github.githubassets.com/images/mona-loading-dark.gif)\n}\n</code></pre> <p>\u7136\u540e\uff0c\u9700\u8981\u5728\u4e4b\u524d\u8bbe\u7f6egiscus\u65f6\u4f7f\u7528\u7684 <code>comments.html</code> \u4e2d\uff0c\u5c06css\u6587\u4ef6\u6dfb\u52a0\u5230\u4e24\u5904\u8bbe\u7f6e\u4e3b\u9898\u7684\u4ee3\u7801\u4e2d</p> <pre><code>      var theme = palette.color.scheme === \"sunset-glow-dark\"\n        ? \"https://cdn.jsdelivr.net/gh/RonaldLN/MyPamphlet-Blog@main/docs/stylesheets/giscus_sunset_glow_dark.css\"\n        : \"https://cdn.jsdelivr.net/gh/RonaldLN/MyPamphlet-Blog@main/docs/stylesheets/giscus_sunset_glow.css\"\n</code></pre> <p>\u4ee5\u53ca</p> <pre><code>{% if page.meta.comments %}\n  ...\n  &lt;script src=\"https://giscus.app/client.js\"\n        ...\n        data-theme=\"https://cdn.jsdelivr.net/gh/RonaldLN/MyPamphlet-Blog@main/docs/stylesheets/giscus_sunset_glow.css\"\n        ...\n        async&gt;\n  &lt;/script&gt;\n...\n{% endif %}\n</code></pre> <p>\u8fd9\u91cc\u662f\u4f7f\u7528\u4e86 jsdelivr \u7f51\u7ad9 \u6765\u5bf9github\u4ed3\u5e93\u4e2d\u7684\u6587\u4ef6\u8fdb\u884c cdn \u52a0\u901f(\u4e0d\u9700\u8981\u6ce8\u518c\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528)\uff0c\u4f7f\u7528\u65b9\u6cd5\u53ef\u4ee5\u53c2\u8003\u7f51\u7ad9\u7684\u8bf4\u660e\u6587\u6863</p> <p>Documentation - jsDelivr</p>"},{"location":"markdown%E7%9B%B8%E5%85%B3/mkdocs%28material%29/#36","title":"36","text":"<p>\u8bbe\u7f6e\u53f3\u4fa7 toc \u76ee\u5f55\u81ea\u52a8\u5c55\u5f00\u6298\u53e0</p> <p>\u8be6\u7ec6\u5c1d\u8bd5/\u8bd5\u9519\u8fc7\u7a0b\u7ec6\u8282\u53c2\u8003 \u8c03\u6574 mkdocs-material \u7f51\u9875\u5916\u89c2\u8fc7\u7a0b\u8bb0\u5f55</p> <p>\u4e3b\u8981\u662f\u53c2\u8003\u4e86 \u9e64\u7fd4\u4e07\u91cc\u7684\u7b14\u8bb0\u672c (tonycrane.cc) \u4f5c\u8005\u4ed3\u5e93\u4e2d\u7684\u8bbe\u7f6e\uff0c</p> <p>\u5c06\u4ed3\u5e93\u4e2d\u7684 <code>docs/css/fold_toc.css</code> \u548c <code>docs/js/toc.js</code> \u4e0b\u8f7d\u5230 <code>docs/javascripts/toc.js</code> \u548c <code>docs/stylesheets/fold_toc.css</code> \u4e2d(\u4e5f\u53ef\u4ee5\u653e\u7f6e\u5728\u5176\u4ed6\u8def\u5f84\uff0c\u5728\u4e4b\u540e\u7684\u8bbe\u7f6e\u4e2d\u76f8\u5e94\u4fee\u6539\u5373\u53ef)</p> <p>\u7136\u540e\u5728 <code>overrides/main.html</code> (\u5982\u679c\u6ca1\u6709\u521b\u5efa\u5373\u53ef)\u4e2d\u8986\u5199 <code>site_nav</code> \u5757(\u53ef\u53c2\u8003\u5b98\u65b9\u6587\u6863 Overriding blocks)\uff0c\u5bfc\u5165\u8fd9\u4e24\u4e2a\u6587\u4ef6\u5373\u53ef</p> <pre><code>{% extends \"base.html\" %}\n\n{% block site_nav %}\n  &lt;!-- Add scripts that need to run before here --&gt;\n  {{ super() }}\n  &lt;!-- Add scripts that need to run afterwards here --&gt;\n  {% if page.toc and not \"toc.integrate\" in features %}\n    &lt;script src=\"https://cdn.jsdelivr.net/gh/RonaldLN/MyPamphlet@main/docs/javascripts/toc.js\" defer&gt;&lt;/script&gt;\n    &lt;link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/gh/RonaldLN/MyPamphlet@main/docs/stylesheets/fold_toc.css\"&gt;\n  {% endif %}\n{% endblock %}\n</code></pre>"},{"location":"markdown%E7%9B%B8%E5%85%B3/mkdocs%28material%29/#37","title":"37","text":"<p>\u66f4\u6539 blog index\u9875\u9762\u4e2d \u6bcf\u7bc7\u535a\u5ba2\u7684\u6458\u5f55 excerpt \u90e8\u5206\u7684\u6837\u5f0f</p> <p>\u57fa\u4e8e\u5b98\u65b9\u6587\u6863\u4e2d\u7684 Setup and theme structure \uff0c\u8bbe\u7f6e <code>overrides/partials/post.html</code> \uff0c</p> <p>\u56e0\u4e3a <code>partials/post.html</code> \u5904\u7684\u6ce8\u91ca\u5199\u7740 <code># Blog post excerpt</code> \uff0c\u8bf4\u660e\u8fd9\u4e2a\u662f\u8bbe\u7f6e\u6bcf\u7bc7\u535a\u5ba2\u7684\u6458\u5f55 excerpt \u7684\u6837\u5f0f\u7684</p> <p>\u7136\u540e\u7531\u4e8e\u6211\u4e4b\u524d\u7684\u7ecf\u9a8c\uff0c\u7528\u9664\u4e86 <code>main.html</code> \u4e4b\u5916\u7684\u5176\u4ed6\u6587\u4ef6\u8fdb\u884c\u8986\u5199\u65f6\uff0c\u90fd\u4e0d\u80fd\u4f7f\u7528 <code>{{ super() }}</code> \u6765\u83b7\u53d6\u9ed8\u8ba4\u7684\u4ee3\u7801( <code>main.html</code> \u4e3b\u8981\u662f\u62ff\u6765\u8986\u5199\u5757 block \u7684\uff0c\u53c2\u8003 Overriding blocks)\uff0c</p> <p>\u6240\u4ee5\u6211\u67e5\u770b\u5b98\u65b9\u6587\u6863\u7684\u4ed3\u5e93\u4e2d\u662f\u5426\u6709\u5bf9\u5e94\u7684\u6a21\u677f\uff0c\u7136\u540e\u53d1\u73b0 <code>material/templates/</code> \u4e2d\u6709\u6a21\u677f\uff0c\u4e8e\u662f\u590d\u5236 <code>post.html</code> \u7684\u4ee3\u7801</p> <p>mkdocs-material/material/templates/partials/post.html at master \u00b7 squidfunk/mkdocs-material (github.com) </p> <p>\u7136\u540e\u53bb\u751f\u6210\u7684\u9875\u9762\u4e2d\u67e5\u770b\u8981\u4fee\u6539\u7684\u5730\u65b9\u7684\u5bf9\u5e94\u6e90\u4ee3\u7801\uff0c</p> <p></p> <p>\u518d\u5728 <code>post.html</code> \u4e2d\u627e\u5230\u76f8\u5e94\u7684\u4ee3\u7801\u90e8\u5206</p> <pre><code>&lt;div class=\"md-post__content md-typeset\"&gt;\n  {{ post.content }}\n  &lt;nav class=\"md-post__action\"&gt;\n    &lt;a href=\"{{ post.url | url }}\"&gt;\n      {{ lang.t(\"blog.continue\") }}\n    &lt;/a&gt;\n  &lt;/nav&gt;\n&lt;/div&gt;\n</code></pre> <p>\u7ecf\u8fc7\u51e0\u6b21\u5c1d\u8bd5\u540e\uff0c\u6700\u540e\u6211\u4fee\u6539\u4e3a\u4e86</p> <pre><code>&lt;div class=\"md-post__content md-typeset\"&gt;\n  {{ post.content }}\n  &lt;nav class=\"md-post__action\"&gt;\n    &lt;a href=\"{{ post.url | url }}\"&gt;\n      ...\n      &lt;br /&gt;\n      {{ lang.t(\"blog.continue\") }}\n    &lt;/a&gt;\n    &lt;hr&gt;\n  &lt;/nav&gt;\n&lt;/div&gt;\n</code></pre> post.html <pre><code>{#-\n  This file was automatically generated - do not edit\n-#}\n&lt;article class=\"md-post md-post--excerpt\"&gt;\n  &lt;header class=\"md-post__header\"&gt;\n    {% if post.authors %}\n      &lt;nav class=\"md-post__authors md-typeset\"&gt;\n        {% for author in post.authors %}\n          &lt;span class=\"md-author\"&gt;\n            &lt;img src=\"{{ author.avatar }}\" alt=\"{{ author.name }}\"&gt;\n          &lt;/span&gt;\n        {% endfor %}\n      &lt;/nav&gt;\n    {% endif %}\n    &lt;div class=\"md-post__meta md-meta\"&gt;\n      &lt;ul class=\"md-meta__list\"&gt;\n        &lt;li class=\"md-meta__item\"&gt;\n          &lt;time datetime=\"{{ post.config.date.created }}\"&gt;\n            {{- post.config.date.created | date -}}\n          &lt;/time&gt;\n          {#- Collapse whitespace -#}\n        &lt;/li&gt;\n        {% if post.categories %}\n          &lt;li class=\"md-meta__item\"&gt;\n            {{ lang.t(\"blog.categories.in\") }}\n            {% for category in post.categories %}\n              &lt;a href=\"{{ category.url | url }}\" class=\"md-meta__link\"&gt;\n                {{- category.title -}}\n              &lt;/a&gt;\n              {%- if loop.revindex &gt; 1 %}, {% endif -%}\n            {% endfor -%}\n          &lt;/li&gt;\n        {% endif %}\n        {% if post.config.readtime %}\n          {% set time = post.config.readtime %}\n          &lt;li class=\"md-meta__item\"&gt;\n            {% if time == 1 %}\n              {{ lang.t(\"readtime.one\") }}\n            {% else %}\n              {{ lang.t(\"readtime.other\") | replace(\"#\", time) }}\n            {% endif %}\n          &lt;/li&gt;\n        {% endif %}\n      &lt;/ul&gt;\n      {% if post.config.draft %}\n        &lt;span class=\"md-draft\"&gt;\n          {{ lang.t(\"blog.draft\") }}\n        &lt;/span&gt;\n      {% endif %}\n    &lt;/div&gt;\n  &lt;/header&gt;\n  &lt;div class=\"md-post__content md-typeset\"&gt;\n    {{ post.content }}\n    &lt;nav class=\"md-post__action\"&gt;\n      &lt;a href=\"{{ post.url | url }}\"&gt;\n        ...\n        &lt;br /&gt;\n        {{ lang.t(\"blog.continue\") }}\n      &lt;/a&gt;\n      &lt;hr&gt;\n    &lt;/nav&gt;\n  &lt;/div&gt;\n&lt;/article&gt;\n</code></pre> <p>\u6700\u540e\u6548\u679c</p> \u4fee\u6539\u540e\u4fee\u6539\u524d <p></p> <p></p>"},{"location":"markdown%E7%9B%B8%E5%85%B3/mkdocs%28material%29/#38","title":"38","text":"<p>\u7ed9\u5355\u4e2a\u9875\u9762\u9690\u85cf\u53f3\u4fa7\u76ee\u5f55\u680f\u6216\u8005\u5de6\u4fa7\u5bfc\u822a\u680f</p> <p>Hiding the sidebars</p> <pre><code>---\nhide:\n  - navigation\n  - toc\n---\n\n# Page title\n...\n</code></pre>"},{"location":"markdown%E7%9B%B8%E5%85%B3/mkdocs%28material%29/#39","title":"39","text":"<p>\u5982\u679c\u4f7f\u7528html\u4e2d\u7684\u6807\u9898 <code>&lt;h1&gt;</code> <code>&lt;h2&gt;</code> <code>&lt;h3&gt;</code> <code>&lt;h4&gt;</code> <code>&lt;h5&gt;</code> <code>&lt;h6&gt;</code> \uff0c\u5982</p> <pre><code>...\n\n&lt;h1&gt;My Title&lt;/h1&gt;\n\n...\n</code></pre> <p>\u90a3\u4e48\u5728\u751f\u6210\u7684\u7f51\u9875\u7684\u53f3\u4fa7\u76ee\u5f55\u4e2d\uff0c\u8fd9\u6837\u7684\u6807\u9898\u4e0d\u4f1a\u51fa\u73b0\u5728\u76ee\u5f55\u91cc\u3002</p> <p>\u4f46\u8fd9\u6837\u7684\u5199\u6cd5\u91ccmarkdown\u8bed\u6cd5(\u5982\u52a0\u7c97 \u884c\u5185\u4ee3\u7801\u7b49)\u65e0\u6cd5\u4f7f\u7528</p>"},{"location":"markdown%E7%9B%B8%E5%85%B3/mkdocs%28material%29/#40","title":"40","text":"<p>\u4ee3\u7801\u5757\u7684\u884c\u53f7\u7684\u9ed8\u8ba4\u5b57\u4f53\u5927\u5c0f\u662f <code>.85em</code> \uff0c\u5982\u679c\u4fee\u6539\u4e86\u4ee3\u7801\u5757\u7684\u5b57\u4f53\u5927\u5c0f\uff0c\u5e76\u9700\u8981\u663e\u793a\u884c\u53f7\uff0c\u884c\u53f7\u7684\u914d\u7f6e\u4e5f\u9700\u8981\u4e00\u5e76\u4fee\u6539</p> docs/stylesheets/custom.css<pre><code>/* \u4fee\u6539\u4ee3\u7801\u5757\u884c\u53f7(\u6570\u5b57)\u7684\u5b57\u4f53\u5927\u5c0f */\n.highlighttable .linenos {\n  /* font-size: 0.93em; */\n  font-size: .65rem;\n}\n</code></pre>"},{"location":"markdown%E7%9B%B8%E5%85%B3/mkdocs%28material%29/#41","title":"41","text":"<p>\u7c7b\u4f3c\u4e8e\u56fe\u50cf\u5ef6\u8fdf\u52a0\u8f7d\u7684\u65b9\u5f0f\uff0c\u53ef\u4ee5\u5728\u56fe\u50cf\u4e4b\u540e\u7684\u52a0 <code>{}</code> \u5e76\u5728\u5176\u4e2d\u6dfb\u52a0 <code>style=\"zoom:n%\"</code> \u6765\u8c03\u6574\u56fe\u50cf\u7f29\u653e\u6bd4\u4f8b</p> <p>\u793a\u4f8b</p> <pre><code>![xxx](.../xxx.png){ loading=lazy style=\"zoom:33%\" }\n</code></pre>"},{"location":"markdown%E7%9B%B8%E5%85%B3/mkdocs%28material%29/#42","title":"42","text":"<p>\u53ef\u4ee5\u501f\u52a9mkdocs-awesome-nav\u63d2\u4ef6\u6765(\u90e8\u5206)\u8986\u76d6\u5bfc\u822a\u4e2d\u6587\u4ef6\u5939\u7684\u6807\u9898\uff0c\u4f8b\u5982\uff1a</p> .nav.yml<pre><code>nav:\n    - index.md\n    - \u6a21\u5757: modules\n    - \"*\"\n</code></pre> <p>\u53c2\u8003\u5b98\u65b9\u6587\u6863</p> <p>Custom Navigation - Awesome Nav for MkDocs</p> \u4fee\u6539\u524d\u4fee\u6539\u540e <p></p> <p></p> <p>\u4ece\u8fd9\u4e2aissue\u4e2d</p> <p>Question about the automatic navigation menu \u00b7 squidfunk/mkdocs-material \u00b7 Discussion #4684</p> <p>sennewood\u7684\u56de\u590d\u4e2d\u5f97\u77e5\u4e86\u8fd9\u4e2a\u63d2\u4ef6</p>"},{"location":"python%E7%9B%B8%E5%85%B3/matplotlib/","title":"Matplotlib","text":"<p> \u7ea6 950 \u4e2a\u5b57  90 \u884c\u4ee3\u7801  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 4 \u5206\u949f</p>"},{"location":"python%E7%9B%B8%E5%85%B3/matplotlib/#1","title":"1","text":"<p>\u901a\u8fc7 <code>figure(num)</code> \u65b9\u6cd5\u521b\u5efa\u591a\u4e2a\u7a97\u53e3\uff0c\u5e76\u4e14\u53ef\u4ee5\u901a\u8fc7\u53c2\u6570 <code>figsize=(width, height)</code> \u8bbe\u7f6e\u7a97\u53e3\u7684\u5927\u5c0f</p> <p>\u4e14\uff0c\u8bbe\u7f6e\u56fe\u4f8b( <code>legned()</code> )\u3001\u5750\u6807\u8f74\u6807\u7b7e\u548c\u6807\u9898( <code>title(\"text\")</code> )\u7684\u51fd\u6570\u53ea\u5bf9\u4ee3\u7801\u4e2d\u6700\u8fd1\u7684\u7a97\u53e3\u6709\u6548</p>"},{"location":"python%E7%9B%B8%E5%85%B3/matplotlib/#2","title":"2","text":"<p>\u4fdd\u5b58\u56fe\u50cf\u7684\u65b9\u6cd5</p> <pre><code>from matplotlib import pyplot as plt\n</code></pre> <p><code>plt.savefig()</code> \u53ef\u4ee5\u628a\u56fe\u50cf\u4fdd\u5b58\u6210\u56fe\u7247\uff0c\u4f46\u662f\u4f1a\u628a\u4e4b\u524d\u6dfb\u52a0\u8fc7\u7684\u6570\u636e\u90fd\u653e\u5728\u4e00\u4e2a\u56fe\u91cc\u9762</p> <p>\u6211\u5c31\u6bcf\u6b21\u8f93\u51fa\u6210\u6587\u4ef6\u540e\u6e05\u9664\u6570\u636e</p> <pre><code>plt.savefig(path + '.png')\nplt.clf()\n</code></pre>"},{"location":"python%E7%9B%B8%E5%85%B3/matplotlib/#3","title":"3","text":"<pre><code>import matplotlib\n\nfig = matplotlib.pyplot.figure()\n</code></pre> <p>\u76f4\u63a5\u4f7f\u7528\u4f1a\u62a5\u9519</p> <pre><code>AttributeError: module 'matplotlib' has no attribute 'pyplot'\n</code></pre> <p>\u9700\u8981\u5355\u72ec\u8fdb\u884c\u5bfc\u5165</p> <pre><code>import matplotlib.pyplot as plt\n</code></pre> <p>\u4ee3\u7801\u4e2d\u8fdb\u884c\u76f8\u5e94\u7684\u4fee\u6539\u5c31\u53ef\u4ee5\u6b63\u5e38\u4f7f\u7528</p> chat log <p>user: </p> <p>matplotlib\u600e\u4e48\u6253\u5370\u4e24\u5f20\u56fe\uff1f</p> <p>chatgpt: </p> <p>\u8981\u5728 Matplotlib \u4e2d\u6253\u5370\u4e24\u5f20\u56fe\uff0c\u53ef\u4ee5\u4f7f\u7528 <code>plt.subplot()</code> \u51fd\u6570\u6216 <code>plt.subplots()</code> \u51fd\u6570\u6765\u521b\u5efa\u5b50\u56fe\u3002\u4e0b\u9762\u662f\u4f7f\u7528 <code>plt.subplot()</code> \u51fd\u6570\u6253\u5370\u4e24\u5f20\u56fe\u7684\u793a\u4f8b\u4ee3\u7801\uff1a</p> <pre><code>import matplotlib.pyplot as plt\nimport numpy as np\n\n# \u521b\u5efa\u6570\u636e\nx = np.linspace(0, 2 * np.pi, 100)\ny1 = np.sin(x)\ny2 = np.cos(x)\n\n# \u7ed8\u5236\u7b2c\u4e00\u5f20\u56fe\nplt.subplot(2, 1, 1)\nplt.plot(x, y1)\nplt.title('Sin')\n\n# \u7ed8\u5236\u7b2c\u4e8c\u5f20\u56fe\nplt.subplot(2, 1, 2)\nplt.plot(x, y2)\nplt.title('Cos')\n\n# \u663e\u793a\u56fe\u50cf\nplt.show()\n</code></pre> <p>\u5728\u4e0a\u9762\u7684\u4ee3\u7801\u4e2d\uff0c<code>plt.subplot(2, 1, 1)</code> \u521b\u5efa\u4e86\u4e00\u4e2a 2 \u884c 1 \u5217\u7684\u5b50\u56fe\u7f51\u683c\uff0c\u5e76\u5c06\u5f53\u524d\u7684 Axes \u5bf9\u8c61\u8bbe\u7f6e\u4e3a\u7b2c\u4e00\u4e2a\u5b50\u56fe\u3002\u7136\u540e\uff0c\u6211\u4eec\u4f7f\u7528 <code>plt.plot()</code> \u51fd\u6570\u7ed8\u5236\u7b2c\u4e00\u4e2a\u56fe\uff0c\u5e76\u4f7f\u7528 <code>plt.title()</code> \u51fd\u6570\u6dfb\u52a0\u6807\u9898\u3002\u63a5\u4e0b\u6765\uff0c<code>plt.subplot(2, 1, 2)</code> \u8bbe\u7f6e\u5f53\u524d\u7684 Axes \u5bf9\u8c61\u4e3a\u7b2c\u4e8c\u4e2a\u5b50\u56fe\uff0c\u5e76\u7ed8\u5236\u7b2c\u4e8c\u4e2a\u56fe\u3002\u6700\u540e\uff0c\u6211\u4eec\u8c03\u7528 <code>plt.show()</code> \u51fd\u6570\u663e\u793a\u56fe\u50cf\u3002</p> <p>\u5982\u679c\u4f60\u60f3\u8981\u66f4\u7075\u6d3b\u5730\u63a7\u5236\u5b50\u56fe\u7684\u5e03\u5c40\uff0c\u53ef\u4ee5\u4f7f\u7528 <code>plt.subplots()</code> \u51fd\u6570\u3002\u4e0b\u9762\u662f\u4f7f\u7528 <code>plt.subplots()</code> \u51fd\u6570\u6253\u5370\u4e24\u5f20\u56fe\u7684\u793a\u4f8b\u4ee3\u7801\uff1a</p> <pre><code>import matplotlib.pyplot as plt\nimport numpy as np\n\n# \u521b\u5efa\u6570\u636e\nx = np.linspace(0, 2 * np.pi, 100)\ny1 = np.sin(x)\ny2 = np.cos(x)\n\n# \u521b\u5efa\u5b50\u56fe\nfig, axs = plt.subplots(2, 1, figsize=(6, 6))\n\n# \u7ed8\u5236\u7b2c\u4e00\u5f20\u56fe\naxs[0].plot(x, y1)\naxs[0].set_title('Sin')\n\n# \u7ed8\u5236\u7b2c\u4e8c\u5f20\u56fe\naxs[1].plot(x, y2)\naxs[1].set_title('Cos')\n\n# \u8c03\u6574\u5b50\u56fe\u4e4b\u95f4\u7684\u95f4\u8ddd\nfig.tight_layout()\n\n# \u663e\u793a\u56fe\u50cf\nplt.show()\n</code></pre> <p>\u5728\u4e0a\u9762\u7684\u4ee3\u7801\u4e2d\uff0c<code>plt.subplots(2, 1, figsize=(6, 6))</code> \u521b\u5efa\u4e86\u4e00\u4e2a 2 \u884c 1 \u5217\u7684\u5b50\u56fe\u7f51\u683c\uff0c\u5e76\u5c06\u8fd4\u56de\u7684 Figure \u5bf9\u8c61\u548c Axes \u5bf9\u8c61\u5b58\u50a8\u5728\u53d8\u91cf <code>fig</code> \u548c <code>axs</code> \u4e2d\u3002\u7136\u540e\uff0c\u6211\u4eec\u4f7f\u7528 <code>axs[0].plot()</code> \u548c <code>axs[1].plot()</code> \u51fd\u6570\u5206\u522b\u5728\u7b2c\u4e00\u4e2a\u548c\u7b2c\u4e8c\u4e2a\u5b50\u56fe\u4e2d\u7ed8\u5236\u56fe\u50cf\uff0c\u5e76\u4f7f\u7528 <code>axs[0].set_title()</code> \u548c <code>axs[1].set_title()</code> \u51fd\u6570\u6dfb\u52a0\u6807\u9898\u3002\u6700\u540e\uff0c\u6211\u4eec\u4f7f\u7528 <code>fig.tight_layout()</code> \u51fd\u6570\u8c03\u6574\u5b50\u56fe\u4e4b\u95f4\u7684\u95f4\u8ddd\uff0c\u5e76\u8c03\u7528 <code>plt.show()</code> \u51fd\u6570\u663e\u793a\u56fe\u50cf\u3002</p> <p>user: </p> <p>\u5982\u4f55\u6253\u5f00figure2?</p> <p>chatgpt: </p> <p>\u5982\u679c\u4f60\u60f3\u8981\u6253\u5f00 Matplotlib \u4e2d\u7684\u7b2c\u4e8c\u4e2a Figure \u7a97\u53e3\uff0c\u53ef\u4ee5\u4f7f\u7528 <code>plt.figure()</code> \u51fd\u6570\u521b\u5efa\u4e00\u4e2a\u65b0\u7684 Figure \u5bf9\u8c61\uff0c\u5e76\u5728\u8c03\u7528 <code>plt.show()</code> \u51fd\u6570\u4e4b\u524d\u8c03\u7528 <code>plt.figure()</code> \u51fd\u6570\u3002</p> <p>\u4e0b\u9762\u662f\u4e00\u4e2a\u7b80\u5355\u7684\u793a\u4f8b\u4ee3\u7801\uff0c\u6f14\u793a\u5982\u4f55\u6253\u5f00\u7b2c\u4e8c\u4e2a Figure \u7a97\u53e3\uff1a</p> <pre><code>import matplotlib.pyplot as plt\nimport numpy as np\n\n# \u521b\u5efa\u6570\u636e\nx = np.linspace(0, 2 * np.pi, 100)\ny1 = np.sin(x)\ny2 = np.cos(x)\n\n# \u521b\u5efa\u7b2c\u4e00\u4e2a\u56fe\u5f62\u7a97\u53e3\nplt.figure(1)\nplt.plot(x, y1)\nplt.title('Sin')\n\n# \u521b\u5efa\u7b2c\u4e8c\u4e2a\u56fe\u5f62\u7a97\u53e3\nplt.figure(2)\nplt.plot(x, y2)\nplt.title('Cos')\n\n# \u663e\u793a\u56fe\u50cf\nplt.show()\n</code></pre> <p>\u5728\u4e0a\u9762\u7684\u4ee3\u7801\u4e2d\uff0c\u6211\u4eec\u9996\u5148\u5728 <code>plt.figure(1)</code> \u4e2d\u521b\u5efa\u7b2c\u4e00\u4e2a\u56fe\u5f62\u7a97\u53e3\uff0c\u5e76\u5728\u5176\u4e2d\u7ed8\u5236\u4e86\u4e00\u4e2a\u6b63\u5f26\u51fd\u6570\u56fe\u50cf\u3002\u7136\u540e\uff0c\u6211\u4eec\u5728 <code>plt.figure(2)</code> \u4e2d\u521b\u5efa\u4e86\u7b2c\u4e8c\u4e2a\u56fe\u5f62\u7a97\u53e3\uff0c\u5e76\u5728\u5176\u4e2d\u7ed8\u5236\u4e86\u4f59\u5f26\u51fd\u6570\u56fe\u50cf\u3002\u6700\u540e\uff0c\u6211\u4eec\u8c03\u7528 <code>plt.show()</code> \u51fd\u6570\u6765\u663e\u793a\u8fd9\u4e24\u4e2a\u56fe\u5f62\u7a97\u53e3\u3002</p> <p>\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u6bcf\u6b21\u8c03\u7528 <code>plt.figure()</code> \u51fd\u6570\u90fd\u4f1a\u521b\u5efa\u4e00\u4e2a\u65b0\u7684 Figure \u5bf9\u8c61\uff0c\u5e76\u5c06\u5176\u8bbe\u4e3a\u5f53\u524d Figure \u5bf9\u8c61\u3002\u56e0\u6b64\uff0c\u5982\u679c\u4f60\u9700\u8981\u5728\u591a\u4e2a Figure \u7a97\u53e3\u4e2d\u7ed8\u5236\u4e0d\u540c\u7684\u56fe\u5f62\uff0c\u8bf7\u786e\u4fdd\u5728\u6bcf\u4e2a Figure \u7a97\u53e3\u4e2d\u4f7f\u7528\u4e0d\u540c\u7684 Figure \u5bf9\u8c61\u3002</p> <p>user: </p> <p>\u5982\u4f55\u8bbe\u7f6e\u56fe\u5f62\u7a97\u53e3\u7684\u5927\u5c0f\uff0c\u6bd4\u5982\u663e\u793a\u66f4\u957f\u7684x\u8f74</p> <p>chatgpt: </p> <p>\u8981\u8bbe\u7f6e Matplotlib \u4e2d\u56fe\u5f62\u7a97\u53e3\u7684\u5927\u5c0f\uff0c\u53ef\u4ee5\u4f7f\u7528 <code>plt.figure()</code> \u51fd\u6570\u7684 <code>figsize</code> \u53c2\u6570\u3002<code>figsize</code> \u53c2\u6570\u63a5\u53d7\u4e00\u4e2a\u5143\u7ec4\uff0c\u7528\u4e8e\u6307\u5b9a\u56fe\u5f62\u7a97\u53e3\u7684\u5bbd\u5ea6\u548c\u9ad8\u5ea6\uff0c\u5355\u4f4d\u4e3a\u82f1\u5bf8\u3002</p> <p>\u4f8b\u5982\uff0c\u5982\u679c\u4f60\u60f3\u8981\u663e\u793a\u66f4\u957f\u7684 x \u8f74\uff0c\u53ef\u4ee5\u901a\u8fc7\u589e\u52a0\u56fe\u5f62\u7a97\u53e3\u7684\u5bbd\u5ea6\u6765\u5b9e\u73b0\u3002\u4e0b\u9762\u662f\u4e00\u4e2a\u793a\u4f8b\u4ee3\u7801\uff0c\u6f14\u793a\u5982\u4f55\u8bbe\u7f6e\u56fe\u5f62\u7a97\u53e3\u7684\u5927\u5c0f\uff1a</p> <pre><code>import matplotlib.pyplot as plt\nimport numpy as np\n\n# \u521b\u5efa\u6570\u636e\nx = np.linspace(0, 2 * np.pi, 100)\ny = np.sin(x)\n\n# \u521b\u5efa\u56fe\u5f62\u7a97\u53e3\uff0c\u5e76\u8bbe\u7f6e\u5927\u5c0f\nplt.figure(figsize=(8, 4))\n\n# \u7ed8\u5236\u56fe\u50cf\nplt.plot(x, y)\nplt.xlabel('X')\nplt.ylabel('Y')\nplt.title('Sin')\n\n# \u663e\u793a\u56fe\u50cf\nplt.show()\n</code></pre> <p>\u5728\u4e0a\u9762\u7684\u4ee3\u7801\u4e2d\uff0c\u6211\u4eec\u4f7f\u7528 <code>plt.figure(figsize=(8, 4))</code> \u51fd\u6570\u521b\u5efa\u4e00\u4e2a\u5927\u5c0f\u4e3a 8x4 \u82f1\u5bf8\u7684\u56fe\u5f62\u7a97\u53e3\uff0c\u7136\u540e\u5728\u5176\u4e2d\u7ed8\u5236\u4e86\u4e00\u4e2a\u6b63\u5f26\u51fd\u6570\u56fe\u50cf\u3002\u901a\u8fc7\u589e\u52a0\u56fe\u5f62\u7a97\u53e3\u7684\u5bbd\u5ea6\uff0cx \u8f74\u7684\u957f\u5ea6\u4e5f\u968f\u4e4b\u589e\u52a0\u3002</p> <p>\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u56fe\u5f62\u7a97\u53e3\u7684\u5927\u5c0f\u53ef\u80fd\u56e0\u64cd\u4f5c\u7cfb\u7edf\u548c\u663e\u793a\u5668\u800c\u5f02\uff0c\u56e0\u6b64\u4f60\u53ef\u80fd\u9700\u8981\u6839\u636e\u5b9e\u9645\u60c5\u51b5\u8c03\u6574\u7a97\u53e3\u5927\u5c0f\u3002</p>"},{"location":"python%E7%9B%B8%E5%85%B3/mediapipe/","title":"MediaPipe","text":"<p> \u7ea6 134 \u4e2a\u5b57  3 \u884c\u4ee3\u7801 </p>"},{"location":"python%E7%9B%B8%E5%85%B3/mediapipe/#1","title":"1","text":"<p>\u4e00\u5f00\u59cb\u5b89\u88c5mediapipe\u65f6</p> <pre><code>pip install mediapipe\n</code></pre> <p>\u663e\u793a\u4e86\u5982\u4e0b\u62a5\u9519</p> <pre><code>ERROR: Could not find a version that satisfies the requirement mediapipe (from versions: none)\nERROR: No matching distribution found for mediapipe\n</code></pre> <p>\u7136\u540egoogle\u641c\u7d22\u4fe1\u606f\uff0c\u5728github issues\u4e0a\u7684\u8fd9\u4e2a\u56de\u7b54\u4e0a\u770b\u5230\u4e86\u5b98\u65b9\u6587\u6863\u4e2d\u5bf9\u8fd9\u4e2a\u60c5\u51b5\u7684\u8bf4\u660e\uff0c</p> <p>mediapipe/docs/getting_started/troubleshooting.md at master \u00b7 google/mediapipe (github.com)</p> <p>\u7136\u540e\u53d1\u73b0\u662f\u7531\u4e8e\u6700\u5f00\u59cb\u5b89\u88c5\u7684python\u662f32\u4f4d\u7684\u7248\u672c\uff0c\u6240\u4ee5\u91cd\u65b0\u53bb\u5b89\u88c5\u4e8664\u4f4d\u7684python (python-3.10.11-amd64.exe)</p> <p>Please note that MediaPipe Python PyPI officially supports the 64-bit version of Python 3.7 to 3.10 on the following OS:</p> <ul> <li>x86_64 Linux</li> <li>x86_64 macOS 10.15+</li> <li>amd64 Windows</li> </ul> <p>\u6362\u621064\u4f4d\u7684python\u4e4b\u540e\u5c31\u53ef\u4ee5\u6b63\u5e38 <code>pip install mediapipe</code> \u4e86</p>"},{"location":"python%E7%9B%B8%E5%85%B3/numpy/","title":"NumPy","text":"<p> \u7ea6 138 \u4e2a\u5b57 </p>"},{"location":"python%E7%9B%B8%E5%85%B3/numpy/#1","title":"1","text":"<p>\u4e00\u4e2a10\u5206\u949f\u7684numpy\u5165\u95e8\u6559\u7a0b_\u54d4\u54e9\u54d4\u54e9_bilibili</p>"},{"location":"python%E7%9B%B8%E5%85%B3/numpy/#2","title":"2","text":"<p>\u5148\u8fdb\u89c6\u89c9</p> <p>numpy\u6559\u7a0b07---ndarray\u7684\u4fdd\u5b58\u4e0e\u52a0\u8f7d_ndarray\u4fdd\u5b58-CSDN\u535a\u5ba2</p> <p><code>ndarray</code> \u7c7b\u7684\u8f93\u51fa\u548c\u8bfb\u53d6\uff0c\u53ef\u4ee5\u7528 <code>np</code> \u7c7b\u7684\u65b9\u6cd5\u8f93\u51fa\u548c\u52a0\u8f7d\uff0c\u6709\u4e24\u79cd\u8f93\u51fa\u5f62\u5f0f</p> <ul> <li> <p>\u4e8c\u8fdb\u5236\u683c\u5f0f(\u8f93\u51fa\u6210 <code>.npy</code> \u6587\u4ef6)</p> <p>\u4f7f\u7528 <code>np.save(\"file\", array)</code> \u65b9\u6cd5\uff0c <code>\"file\"</code> \u662f\u76ee\u6807\u6587\u4ef6\u540d\uff0c\u5982\u679c\u4e0d\u52a0\u540e\u7f00\uff0c\u4f1a\u81ea\u52a8\u6dfb\u52a0 <code>.npy</code> \u540e\u7f00\uff0c<code>array</code> \u662f <code>ndarray</code> \u5b9e\u4f8b</p> </li> <li> <p>\u6587\u672c\u683c\u5f0f</p> <p>\u4f7f\u7528 <code>np.savetxt(\"fname\", array)</code> \u65b9\u6cd5\uff0c<code>\"fname\"</code> \u9700\u8981\u586b\u5199\u5b8c\u6574\u7684\u6587\u4ef6\u540d\uff0c<code>array</code> \u662f <code>ndarray</code> \u5b9e\u4f8b</p> </li> </ul>"},{"location":"python%E7%9B%B8%E5%85%B3/openpyxl%28%E7%94%A8%E4%BA%8Eexcel%29/","title":"OpenPyXL","text":"<p> \u7ea6 620 \u4e2a\u5b57  271 \u884c\u4ee3\u7801  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 5 \u5206\u949f</p>"},{"location":"python%E7%9B%B8%E5%85%B3/openpyxl%28%E7%94%A8%E4%BA%8Eexcel%29/#1","title":"1","text":"<p>2023\u6570\u6a21\u56fd\u8d5b</p> <p>\u8bfb\u53d6\u548c\u5199\u5165\u7684\u51fd\u6570</p> <pre><code>import openpyxl\n\n\n# \u5b9a\u4e49\u4e00\u4e2a\u51fd\u6570\uff0c\u4ece Excel \u6587\u4ef6\u4e2d\u83b7\u53d6\u6570\u636e\u5e76\u5b58\u50a8\u5230\u5217\u8868\u4e2d\ndef get_data_from_excel(file_name, sheet_name):\n    # \u521b\u5efa\u4e00\u4e2a\u7a7a\u5217\u8868\u6765\u5b58\u50a8\u6570\u636e\n    data_list = []\n    # \u6253\u5f00 Excel \u6587\u4ef6\n    wb = openpyxl.load_workbook(file_name)\n    # \u83b7\u53d6\u5de5\u4f5c\u8868\n    sheet = wb[sheet_name]\n    # \u83b7\u53d6\u6700\u5927\u884c\u6570\n    max_row = sheet.max_row\n    # \u83b7\u53d6\u6700\u5927\u5217\u6570\n    max_column = sheet.max_column\n    # \u4f7f\u7528\u5faa\u73af\u4ece Excel \u6587\u4ef6\u4e2d\u83b7\u53d6\u6570\u636e\n    for i in range(2, max_row + 1):\n        # \u521b\u5efa\u4e00\u4e2a\u7a7a\u5217\u8868\u6765\u5b58\u50a8\u6bcf\u884c\u7684\u6570\u636e\n        sub_list = []\n        for j in range(1, max_column + 1):\n            # \u83b7\u53d6\u6bcf\u4e2a\u5355\u5143\u683c\u7684\u6570\u636e\n            cell = sheet.cell(row=i, column=j)\n            # \u5c06\u6570\u636e\u6dfb\u52a0\u5230\u5b50\u5217\u8868\u4e2d\n            sub_list.append(cell.value)\n        # \u5c06\u5b50\u5217\u8868\u6dfb\u52a0\u5230\u6570\u636e\u5217\u8868\u4e2d\n        data_list.append(sub_list)\n    # \u8fd4\u56de\u6570\u636e\u5217\u8868\n    return data_list\n\n\n# \u5b9a\u4e49\u4e00\u4e2a\u51fd\u6570\uff0c\u5c06\u6570\u636e\u5199\u5165 Excel \u6587\u4ef6\u4e2d\ndef write_data_to_excel(file_name, sheet_name, data_list):\n    # \u6253\u5f00 Excel \u6587\u4ef6\n    wb = openpyxl.load_workbook(file_name)\n    # \u5982\u679c\u5de5\u4f5c\u8868\u4e0d\u5b58\u5728\uff0c\u5219\u521b\u5efa\u5b83\n    if sheet_name not in wb.sheetnames:\n        wb.create_sheet(sheet_name)\n    # \u83b7\u53d6\u5de5\u4f5c\u8868\n    sheet = wb[sheet_name]\n    # \u6839\u636e\u6570\u636e\u7684\u5927\u5c0f\u83b7\u53d6\u6700\u5927\u884c\u6570\u548c\u5217\u6570\n    max_row = len(data_list)\n    max_column = len(data_list[0])\n    # \u4f7f\u7528\u5faa\u73af\u5c06\u6570\u636e\u5199\u5165 Excel \u6587\u4ef6\u4e2d\n    for i in range(2, max_row + 2):\n        for j in range(1, max_column + 1):\n            # \u83b7\u53d6\u6bcf\u4e2a\u5355\u5143\u683c\u7684\u6570\u636e\n            cell = sheet.cell(row=i, column=j)\n            # \u5c06\u6570\u636e\u5199\u5165\u5355\u5143\u683c\n            cell.value = data_list[i - 2][j - 1]\n    # \u4fdd\u5b58 Excel \u6587\u4ef6\n    wb.save(file_name)\n</code></pre> <ul> <li>\u6ce8\u610f\uff1a\u5199\u5165\u7684\u51fd\u6570\u9700\u8981\u76ee\u6807\u6587\u4ef6\u5df2\u7ecf\u521b\u5efa\u597d/\u5df2\u7ecf\u5b58\u5728</li> <li>\u8be5\u5199\u5165\u51fd\u6570\u5c06list\u5217\u8868\u5199\u5165excel\u8868\u683c\u65f6\uff0c\u4f1a\u7a7a\u51fa\u7b2c\u4e00\u884c(\u53ef\u4ee5\u7528\u4e8e\u586b\u5199\u680f\u76ee\u540d\u79f0)</li> </ul> chat log <p>user:</p> <pre><code>import openpyxl\n\n\n# define a function to get the data from an Excel file to a list\ndef get_data(file_name, sheet_name):\n    # create an empty list to store the data\n    data_list = []\n    # open the Excel file\n    wb = openpyxl.load_workbook(file_name)\n    # get the sheet\n    sheet = wb[sheet_name]\n    # get the max row\n    max_row = sheet.max_row\n    # get the max column\n    max_column = sheet.max_column\n    # use a for loop to get the data from the Excel file\n    for i in range(2, max_row + 1):\n        # create an empty list to store the data of each row\n        sub_list = []\n        for j in range(1, max_column + 1):\n            # get the data of each cell\n            cell = sheet.cell(row=i, column=j)\n            # add the data to the sub list\n            sub_list.append(cell.value)\n        # add the sub list to the data list\n        data_list.append(sub_list)\n    # return the data list\n    return data_list\n\n\ndata = get_data(\"data.xlsx\", \"Sheet1\")\n# print(data)\nnew_data = []\nfor line in data:\n    if line[1] == 'A':\n        line[2] /= 0.6\n        line[3] /= 0.6\n    elif line[1] == 'B':\n        line[2] /= 0.66\n        line[3] /= 0.66\n    else:\n        line[2] /= 0.72\n        line[3] /= 0.72\n    new_data += [line]\n\n# print(new_data)\n\n\n# define a function to write the data to an Excel file\ndef write_data(file_name, sheet_name, data_list):\n    # open the Excel file\n    wb = openpyxl.load_workbook(file_name)\n    # get the sheet\n    sheet = wb[sheet_name]\n    # get the max row\n    max_row = sheet.max_row\n    # get the max column\n    max_column = sheet.max_column\n    # use a for loop to write the data to the Excel file\n    for i in range(2, max_row + 1):\n        for j in range(1, max_column + 1):\n            # get the data of each cell\n            cell = sheet.cell(row=i, column=j)\n            # write the data to the cell\n            cell.value = data_list[i - 2][j - 1]\n    # save the Excel file\n    wb.save(file_name)\n\n\nwrite_data(\"data.xlsx\", \"Sheet2\", new_data)\n</code></pre> <p>My code did not successfully write the data to the Excel file. Can you help me see what the error is and how to modify it?</p> <p>chatgpt:</p> <p>Based on the code you provided, there are a couple of issues that might be causing the problem you are encountering when trying to write data to an Excel file:</p> <ol> <li>The \"Sheet2\" sheet does not exist in the Excel file.</li> </ol> <p>If the sheet you are trying to write to does not exist in the Excel file, you will need to create it first before you can write data to it. You can do this using the <code>create_sheet()</code> method of the workbook object. For example:</p> <pre><code>wb.create_sheet(\"Sheet2\")\n</code></pre> <ol> <li>The range of cells to write to is incorrect.</li> </ol> <p>In the <code>write_data()</code> function, the range of cells to write to is determined based on the maximum number of rows and columns in the sheet. However, if the size of the data you are trying to write is smaller than the size of the sheet, you will end up overwriting some cells with empty values. To avoid this, you should use the actual size of the data to determine the range of cells to write to. You can do this by using the <code>len()</code> function to get the number of rows in the data list. For example:</p> <pre><code>max_row = len(data_list)\nmax_column = len(data_list[0])\n</code></pre> <p>Here's the modified code with these changes:</p> <pre><code>import openpyxl\n\n\n# define a function to get the data from an Excel file to a list\ndef get_data(file_name, sheet_name):\n    # create an empty list to store the data\n    data_list = []\n    # open the Excel file\n    wb = openpyxl.load_workbook(file_name)\n    # get the sheet\n    sheet = wb[sheet_name]\n    # get the max row\n    max_row = sheet.max_row\n    # get the max column\n    max_column = sheet.max_column\n    # use a for loop to get the data from the Excel file\n    for i in range(2, max_row + 1):\n        # create an empty list to store the data of each row\n        sub_list = []\n        for j in range(1, max_column + 1):\n            # get the data of each cell\n            cell = sheet.cell(row=i, column=j)\n            # add the data to the sub list\n            sub_list.append(cell.value)\n        # add the sub list to the data list\n        data_list.append(sub_list)\n    # return the data list\n    return data_list\n\n\ndata = get_data(\"data.xlsx\", \"Sheet1\")\n# print(data)\nnew_data = []\nfor line in data:\n    if line[1] == 'A':\n        line[2] /= 0.6\n        line[3] /= 0.6\n    elif line[1] == 'B':\n        line[2] /= 0.66\n        line[3] /= 0.66\n    else:\n        line[2] /= 0.72\n        line[3] /= 0.72\n    new_data += [line]\n\n# print(new_data)\n\n\n# define a function to write the data to an Excel file\ndef write_data(file_name, sheet_name, data_list):\n    # open the Excel file\n    wb = openpyxl.load_workbook(file_name)\n    # create the sheet if it doesn't exist\n    if sheet_name not in wb.sheetnames:\n        wb.create_sheet(sheet_name)\n    # get the sheet\n    sheet = wb[sheet_name]\n    # get the max row and column based on the size of the data\n    max_row = len(data_list)\n    max_column = len(data_list[0])\n    # use a for loop to write the data to the Excel file\n    for i in range(2, max_row + 2):\n        for j in range(1, max_column + 1):\n            # get the data of each cell\n            cell = sheet.cell(row=i, column=j)\n            # write the data to the cell\n            cell.value = data_list[i - 2][j - 1]\n    # save the Excel file\n    wb.save(file_name)\n\n\nwrite_data(\"data.xlsx\", \"Sheet2\", new_data)\n</code></pre> <p>With these changes, the code should now write the data to the \"Sheet2\" sheet in the \"data.xlsx\" file.</p> <p>user:</p> <p>\u4f60\u80fd\u7528\u4e2d\u6587\u518d\u8f93\u51fa\u4e00\u904d\u5417\uff1f</p> <p>chatgpt:</p> <p>\u5f53\u4f60\u5c1d\u8bd5\u5411 Excel \u6587\u4ef6\u5199\u5165\u6570\u636e\u65f6\uff0c\u4ee3\u7801\u53ef\u80fd\u51fa\u73b0\u4e00\u4e9b\u95ee\u9898\u3002\u6839\u636e\u4f60\u63d0\u4f9b\u7684\u4ee3\u7801\uff0c\u53ef\u80fd\u4f1a\u51fa\u73b0\u4ee5\u4e0b\u95ee\u9898\uff1a</p> <ol> <li>Excel \u6587\u4ef6\u4e2d\u4e0d\u5b58\u5728 \"Sheet2\" \u5de5\u4f5c\u8868\u3002</li> </ol> <p>\u5982\u679c\u4f60\u5c1d\u8bd5\u5199\u5165\u7684\u5de5\u4f5c\u8868\u5728 Excel \u6587\u4ef6\u4e2d\u4e0d\u5b58\u5728\uff0c\u4f60\u9700\u8981\u5148\u521b\u5efa\u5b83\u624d\u80fd\u5411\u5176\u5199\u5165\u6570\u636e\u3002\u4f60\u53ef\u4ee5\u4f7f\u7528\u5de5\u4f5c\u7c3f\u5bf9\u8c61\u7684 <code>create_sheet()</code> \u65b9\u6cd5\u6765\u521b\u5efa\u5de5\u4f5c\u8868\u3002\u4f8b\u5982\uff1a</p> <pre><code>wb.create_sheet(\"Sheet2\")\n</code></pre> <ol> <li>\u8981\u5199\u5165\u7684\u5355\u5143\u683c\u8303\u56f4\u4e0d\u6b63\u786e\u3002</li> </ol> <p>\u5728 <code>write_data()</code> \u51fd\u6570\u4e2d\uff0c\u8981\u5199\u5165\u7684\u5355\u5143\u683c\u8303\u56f4\u662f\u57fa\u4e8e\u5de5\u4f5c\u8868\u7684\u6700\u5927\u884c\u6570\u548c\u5217\u6570\u6765\u786e\u5b9a\u7684\u3002\u4f46\u662f\uff0c\u5982\u679c\u4f60\u8981\u5199\u5165\u7684\u6570\u636e\u5927\u5c0f\u5c0f\u4e8e\u5de5\u4f5c\u8868\u7684\u5927\u5c0f\uff0c\u4f60\u5c06\u4f1a\u8986\u76d6\u4e00\u4e9b\u5355\u5143\u683c\uff0c\u4f7f\u5b83\u4eec\u7684\u503c\u4e3a\u7a7a\u3002\u4e3a\u4e86\u907f\u514d\u8fd9\u79cd\u60c5\u51b5\uff0c\u4f60\u5e94\u8be5\u4f7f\u7528\u5b9e\u9645\u6570\u636e\u7684\u5927\u5c0f\u6765\u786e\u5b9a\u8981\u5199\u5165\u7684\u5355\u5143\u683c\u8303\u56f4\u3002\u4f60\u53ef\u4ee5\u4f7f\u7528 <code>len()</code> \u51fd\u6570\u83b7\u53d6\u6570\u636e\u5217\u8868\u4e2d\u7684\u884c\u6570\u3002\u4f8b\u5982\uff1a</p> <pre><code>max_row = len(data_list)\nmax_column = len(data_list[0])\n</code></pre> <p>\u4ee5\u4e0b\u662f\u4fee\u6539\u540e\u7684\u4ee3\u7801\uff0c\u5176\u4e2d\u5305\u542b\u8fd9\u4e9b\u66f4\u6539\uff1a</p> <pre><code>import openpyxl\n\n\n# \u5b9a\u4e49\u4e00\u4e2a\u51fd\u6570\uff0c\u4ece Excel \u6587\u4ef6\u4e2d\u83b7\u53d6\u6570\u636e\u5e76\u5b58\u50a8\u5230\u5217\u8868\u4e2d\ndef get_data(file_name, sheet_name):\n    # \u521b\u5efa\u4e00\u4e2a\u7a7a\u5217\u8868\u6765\u5b58\u50a8\u6570\u636e\n    data_list = []\n    # \u6253\u5f00 Excel \u6587\u4ef6\n    wb = openpyxl.load_workbook(file_name)\n    # \u83b7\u53d6\u5de5\u4f5c\u8868\n    sheet = wb[sheet_name]\n    # \u83b7\u53d6\u6700\u5927\u884c\u6570\n    max_row = sheet.max_row\n    # \u83b7\u53d6\u6700\u5927\u5217\u6570\n    max_column = sheet.max_column\n    # \u4f7f\u7528\u5faa\u73af\u4ece Excel \u6587\u4ef6\u4e2d\u83b7\u53d6\u6570\u636e\n    for i in range(2, max_row + 1):\n        # \u521b\u5efa\u4e00\u4e2a\u7a7a\u5217\u8868\u6765\u5b58\u50a8\u6bcf\u884c\u7684\u6570\u636e\n        sub_list = []\n        for j in range(1, max_column + 1):\n            # \u83b7\u53d6\u6bcf\u4e2a\u5355\u5143\u683c\u7684\u6570\u636e\n            cell = sheet.cell(row=i, column=j)\n            # \u5c06\u6570\u636e\u6dfb\u52a0\u5230\u5b50\u5217\u8868\u4e2d\n            sub_list.append(cell.value)\n        # \u5c06\u5b50\u5217\u8868\u6dfb\u52a0\u5230\u6570\u636e\u5217\u8868\u4e2d\n        data_list.append(sub_list)\n    # \u8fd4\u56de\u6570\u636e\u5217\u8868\n    return data_list\n\n\ndata = get_data(\"data.xlsx\", \"Sheet1\")\n# print(data)\nnew_data = []\nfor line in data:\n    if line[1] == 'A':\n        line[2] /= 0.6\n        line[3] /= 0.6\n    elif line[1] == 'B':\n        line[2] /= 0.66\n        line[3] /= 0.66\n    else:\n        line[2] /= 0.72\n        line[3] /= 0.72\n    new_data += [line]\n\n# print(new_data)\n\n\n# \u5b9a\u4e49\u4e00\u4e2a\u51fd\u6570\uff0c\u5c06\u6570\u636e\u5199\u5165 Excel \u6587\u4ef6\u4e2d\ndef write_data(file_name, sheet_name, data_list):\n    # \u6253\u5f00 Excel \u6587\u4ef6\n    wb = openpyxl.load_workbook(file_name)\n    # \u5982\u679c\u5de5\u4f5c\u8868\u4e0d\u5b58\u5728\uff0c\u5219\u521b\u5efa\u5b83\n    if sheet_name not in wb.sheetnames:\n        wb.create_sheet(sheet_name)\n    # \u83b7\u53d6\u5de5\u4f5c\u8868\n    sheet = wb[sheet_name]\n    # \u6839\u636e\u6570\u636e\u7684\u5927\u5c0f\u83b7\u53d6\u6700\u5927\u884c\u6570\u548c\u5217\u6570\n    max_row = len(data_list)\n    max_column = len(data_list[0])\n    # \u4f7f\u7528\u5faa\u73af\u5c06\u6570\u636e\u5199\u5165 Excel \u6587\u4ef6\u4e2d\n    for i in range(2, max_row + 2):\n        for j in range(1, max_column + 1):\n            # \u83b7\u53d6\u6bcf\u4e2a\u5355\u5143\u683c\u7684\u6570\u636e\n            cell = sheet.cell(row=i, column=j)\n            # \u5c06\u6570\u636e\u5199\u5165\u5355\u5143\u683c\n            cell.value = data_list[i - 2][j - 1]\n    # \u4fdd\u5b58 Excel \u6587\u4ef6\n    wb.save(file_name)\n\n\nwrite_data(\"data.xlsx\", \"Sheet2\", new_data)\n</code></pre> <p>\u7ecf\u8fc7\u8fd9\u4e9b\u66f4\u6539\uff0c\u4ee3\u7801\u73b0\u5728\u5e94\u8be5\u80fd\u591f\u5c06\u6570\u636e\u5199\u5165\u5230 \"data.xlsx\" \u6587\u4ef6\u4e2d\u7684 \"Sheet2\" \u5de5\u4f5c\u8868\u4e2d\u3002</p>"},{"location":"python%E7%9B%B8%E5%85%B3/python%E8%AF%AD%E8%A8%80/","title":"Python \u8bed\u8a00","text":"<p> \u7ea6 575 \u4e2a\u5b57  87 \u884c\u4ee3\u7801  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 3 \u5206\u949f</p> <p>Info</p> <p>\u6b64\u5904\u7528\u4e8e\u8bb0\u5f55\u6211\u81ea\u5df1\u53d1\u73b0\u7684python\u4e2d\u7684(\u6211\u4e4b\u524d\u4e0d\u77e5\u9053\u7684)\u64cd\u4f5c</p>"},{"location":"python%E7%9B%B8%E5%85%B3/python%E8%AF%AD%E8%A8%80/#1","title":"1","text":"<p>2023\u6570\u6a21\u56fd\u8d5b</p> <p>\u5728\u5b57\u5178\u4e2d\u76f4\u63a5\u67e5\u8be2\u3001\u53d6\u51fa\u7684\u662f key \u7684\u503c</p> <p>1</p> <p><code>in</code> \u8bed\u53e5\u53ef\u4ee5\u5224\u65ad \u67d0\u4e2a key \u662f\u5426\u5728\u67d0\u4e2a\u5b57\u5178\u4e2d\uff0c\u5982</p> <pre><code># \u4ece\u9644\u5f552\u7684Excel\u8868\u683c\u4e2d\u8bfb\u53d6\u6570\u636e\ndatas2 = get_data(\"2.xlsx\", \"Sheet1\")\n# \u521b\u5efa\u4e00\u4e2a\u5b57\u5178\u6765\u5b58\u50a8\u9500\u91cf\u6570\u636e\uff0c\u5b57\u5178\u7684\u952e\u662f\u4ea7\u54c1\u7f16\u53f7\uff0c\u503c\u662f\u5305\u542b\u9500\u552e\u5b63\u5ea6\u6570\u636e\u7684\u5d4c\u5957\u5b57\u5178\nxiaoliang = {}\n# \u904d\u5386\u9644\u5f552\u4e2d\u7684\u6570\u636e\nfor data in datas2:\n    # \u5982\u679c\u4ea7\u54c1\u7f16\u53f7\u4e0d\u5728\u5b57\u5178\u4e2d\uff0c\u6dfb\u52a0\u4e00\u4e2a\u65b0\u7684\u952e\u503c\u5bf9\n    if data[2] not in xiaoliang:\n        # \u9500\u552e\u6570\u636e\u5b57\u5178\u7684\u952e\u662f\u5e74\u4efd\u548c\u5b63\u5ea6\u7684\u7ec4\u5408\uff0c\u521d\u59cb\u503c\u4e3a0\n        xiaoliang[data[2]] = {y * 100 + s: 0 for y in range(2020, 2024) for s in range(1, 5)}\n    # \u66f4\u65b0\u9500\u552e\u6570\u636e\u5b57\u5178\uff0c\u6839\u636e\u9500\u552e\u65e5\u671f\u83b7\u53d6\u5b63\u5ea6\u5e76\u5c06\u9500\u552e\u6570\u91cf\u7d2f\u52a0\u5230\u76f8\u5e94\u7684\u5b63\u5ea6\n    xiaoliang[data[2]][get_season(data[0])] += data[3]\n</code></pre> <p>\u5176\u4e2d</p> <pre><code>    if data[2] not in xiaoliang:\n        ...\n</code></pre> <p>\u80fd\u5224\u65ad\u5b57\u5178xiaoliang\u662f\u5426\u5df2\u7ecf\u5b58\u5728\u4e3a <code>data[2]</code> \u7684\u952e(\u6ca1\u6709\u53ef\u4ee5\u8fdb\u884c\u521d\u59cb\u5316\u7b49\u64cd\u4f5c)</p> <p>2</p> <p><code>for</code> \u8bed\u53e5(\u5faa\u73af\u4ee5\u53ca\u5217\u8868\u63a8\u5bfc\u5f0f)\u76f4\u63a5\u7528\u4e8e\u5b57\u5178\u53d6\u51fa\u7684\u662f key\uff0c</p> <pre><code>for xl in xiaoliang:\n    new_xl = [round(xiaoliang[xl][x], 3) for x in xiaoliang[xl]]\n    xiaoliang[xl] = new_xl\n</code></pre> <p>\u5982\u679c\u9700\u8981\u53d6\u51fa value \u5219\u53ef\u4ee5\u4f7f\u7528\u5b57\u5178\u7684 <code>.item()</code> (\u53d6\u51fakey\u548cvalue) \u6216 <code>.values()</code> (\u53ea\u53d6\u51favalue) \u65b9\u6cd5\uff1a</p> <pre><code># \u5b9a\u4e49\u4e00\u4e2a\u51fd\u6570\uff0c\u5c06dict\u8f6c\u6362\u6210list\ndef dict_to_list(dict1):\n    list1 = []\n    for key, value in dict1.items():\n        list1.append([key, value])\n    return list1\n</code></pre> <pre><code>for value in xxx.values():\n    ...\n</code></pre>"},{"location":"python%E7%9B%B8%E5%85%B3/python%E8%AF%AD%E8%A8%80/#3","title":"3","text":"<p>2023\u6570\u6a21\u56fd\u8d5b</p> <p>\u5b57\u5178\u7684 <code>.values()</code> \u65b9\u6cd5\uff0c\u8fd4\u56de\u7684\u662f\u4e00\u4e2a dict_values \u7c7b\u578b\uff0c\u5982\u679c\u9700\u8981\u7684\u662f\u5217\u8868\uff0c\u5219\u9700\u8981\u7c7b\u578b\u8f6c\u6362\uff1a</p> <pre><code>&gt;&gt;&gt; d = {\"key\": 0}\n&gt;&gt;&gt; d.values()\ndict_values([0])\n&gt;&gt;&gt; list(d.values())\n[0]\n</code></pre>"},{"location":"python%E7%9B%B8%E5%85%B3/python%E8%AF%AD%E8%A8%80/#4","title":"4","text":"<p>2023\u6570\u6a21\u56fd\u8d5b</p> <p>\u5b57\u5178\u4e0d\u80fd\u5207\u7247</p>"},{"location":"python%E7%9B%B8%E5%85%B3/python%E8%AF%AD%E8%A8%80/#5","title":"5","text":"<p>2023\u6570\u6a21\u56fd\u8d5b</p> <p>Note</p> <p>json\u6587\u4ef6\u8bfb\u53d6\u901f\u5ea6\u5f88\u5feb\uff0c\u6211\u8ba4\u4e3a\u5f88\u9002\u5408\u7528\u4e8e\u5904\u7406\u6570\u636e</p> <p>\u8bfb\u53d6\u548c\u5199\u5165json\u6587\u4ef6\u7684\u51fd\u6570</p> <pre><code>import json\n\n\n# \u5b9a\u4e49\u4e00\u4e2a\u51fd\u6570\uff0c\u5c06dict\u5b58\u5230\u6307\u5b9a\u7684json\u6587\u4ef6\u4e2d\ndef write_data(file_name, data):\n    # \u6253\u5f00json\u6587\u4ef6\n    with open(file_name, \"w\", encoding=\"utf-8\") as f:\n        # \u5c06\u6570\u636e\u5199\u5165json\u6587\u4ef6\u4e2d\n        json.dump(data, f, ensure_ascii=False, indent=4)\n\n\n# \u5b9a\u4e49\u4e00\u4e2a\u51fd\u6570\uff0c\u4ecejson\u6587\u4ef6\u4e2d\u8bfb\u53d6\u6570\u636e\ndef read_data(file_name):\n    # \u6253\u5f00json\u6587\u4ef6\n    with open(file_name, \"r\", encoding=\"utf-8\") as f:\n        # \u8bfb\u53d6json\u6587\u4ef6\u4e2d\u7684\u6570\u636e\n        data = json.load(f)\n        # \u8fd4\u56de\u6570\u636e\n        return data\n</code></pre> <ul> <li>\u5199\u5165\u51fd\u6570\u5982\u679c\u76ee\u6807\u6587\u4ef6\u4e0d\u5b58\u5728\uff0c\u4f1a\u81ea\u52a8\u65b0\u5efa\u4e00\u4e2a\u5bf9\u5e94\u7684\u6587\u4ef6</li> <li>\u5199\u5165\u51fd\u6570\u9700\u8981\u4f20\u5165\u4e00\u4e2a\u5b57\u5178\uff0c(\u5982\u679c\u60f3\u5b58\u50a8\u5217\u8868\u7c7b\u578b\u7684\u6570\u636e\uff0c\u53ef\u4ee5\u5728\u5217\u8868\u5916\u5957\u4e00\u4e2a\u53ea\u542b\u4e00\u4e2a\u952e\u7684\u5b57\u5178)</li> </ul>"},{"location":"python%E7%9B%B8%E5%85%B3/python%E8%AF%AD%E8%A8%80/#6","title":"6","text":"<p>2023\u6570\u6a21\u56fd\u8d5b</p> <p>\u5bf9\u5c0f\u6570\u56db\u820d\u4e94\u5165 \u4f7f\u7528 <code>round()</code> \u51fd\u6570\uff0c\u5982</p> <pre><code># \u5c06\u7ed3\u679c\u6570\u636e\u7684\u5c0f\u6570\u4f4d\u6570\u4fdd\u7559\u4e09\u4f4d\nfor _, value in data_res.items():\n    for i in range(12):\n        value[i] = round(value[i], 3)\n</code></pre> <p>\u7b2c\u4e00\u4e2a\u53c2\u6570\u65f6\u8981\u820d\u5165\u7684\u503c\uff0c\u7b2c\u4e8c\u4e2a\u53c2\u6570\u662f\u8981\u4fdd\u7559\u7684\u5c0f\u6570\u4f4d\u6570</p>"},{"location":"python%E7%9B%B8%E5%85%B3/python%E8%AF%AD%E8%A8%80/#7","title":"7","text":"<p>2023\u6570\u6a21\u56fd\u8d5b</p> <p>datetime\u7c7b\u578b</p> <ul> <li> <p>datetime\u53ef\u4ee5\u76f4\u63a5\u83b7\u53d6 \u5e74\u3001\u6708\u3001\u65e5 \u7b49\u7684\u6570\u636e</p> <pre><code># \u5b9a\u4e49\u4e00\u4e2a\u51fd\u6570\uff0c\u4f20\u5165datetime\uff0c\u5224\u65ad\u5728\u54ea\u4e00\u5e74\u7684\u54ea\u4e2a\u5b63\u5ea6\u4e2d\ndef get_season(date):\n    season = 0\n    if date.month in [1, 2, 3]:\n        season = 1\n    elif date.month in [4, 5, 6]:\n        season = 2\n    elif date.month in [7, 8, 9]:\n        season = 3\n    elif date.month in [10, 11, 12]:\n        season = 4\n    return int(date.year * 100 + season)\n</code></pre> </li> <li> <p>datetime\u53ef\u4ee5\u7c7b\u578b\u8f6c\u6362\u6210str\uff0c\u4f1a\u8f6c\u6210\u5f62\u5982 <code>\"2023-09-11 18:40:22.834683\"</code> \u7684\u5b57\u7b26\u4e32</p> <pre><code>&gt;&gt;&gt; import datetime\n&gt;&gt;&gt; now = datetime.datetime.now()\n&gt;&gt;&gt; now\ndatetime.datetime(2023, 9, 11, 18, 40, 22, 834683)\n&gt;&gt;&gt; str(now)\n'2023-09-11 18:40:22.834683'\n</code></pre> </li> </ul>"},{"location":"python%E7%9B%B8%E5%85%B3/python%E8%AF%AD%E8%A8%80/#8","title":"8","text":"<p>2023\u6570\u6a21\u56fd\u8d5b</p> <p>\u5c06\u5217\u8868\u5199\u5165csv\u6587\u4ef6\u7684\u51fd\u6570</p> <pre><code># \u5b9a\u4e49\u4e00\u4e2a\u51fd\u6570\uff0c\u5c06list\u5b58\u5165csv\u6587\u4ef6\ndef write_data_to_csv(file_name, data_list):\n    # \u6253\u5f00csv\u6587\u4ef6\n    with open(file_name, \"w\", encoding=\"gbk\", newline=\"\") as f:\n        # \u521b\u5efa\u4e00\u4e2acsv\u5199\u5165\u5668\n        writer = csv.writer(f)\n        # \u5c06\u6570\u636e\u5199\u5165csv\u6587\u4ef6\u4e2d\n        writer.writerows(data_list)\n</code></pre> <p><code>encoding</code> \u53c2\u6570\u662f\u7f16\u7801\u683c\u5f0f\uff0c\u9009\u62e9 <code>\"gbk\"</code> excel\u80fd\u6b63\u5e38\u6253\u5f00\uff0c\u9009\u62e9 <code>\"utf-8\"</code> excel\u597d\u50cf\u4f1a\u663e\u793a\u4e71\u7801</p>"},{"location":"python%E7%9B%B8%E5%85%B3/python%E8%AF%AD%E8%A8%80/#9","title":"9","text":"<p>\u547d\u4ee4\u884c\u4e2d\u7684python\u7684\u9000\u51fa\uff1a</p> <ul> <li>Linux\u7cfb\u7edf\u4e0b(\u53ef\u80fdMacOS\u7cfb\u7edf\u4e0b\u4e5f\u662f)\uff0c\u662f Ctrl+D</li> <li>Windows\u7cfb\u7edf\u4e0b\uff0c\u5219\u662f Ctrl+D \u7136\u540e Enter</li> </ul>"},{"location":"python%E7%9B%B8%E5%85%B3/python%E8%AF%AD%E8%A8%80/#10","title":"10","text":"<p>\u590d\u73b0\u4ee3\u7801</p> <p>\u5076\u7136\u4ece</p> <pre><code>cache_dir = kwargs.pop(\"cache_dir\", None)\n</code></pre> <p>\u53d1\u73b0\u4e00\u4e2a\u5b57\u5178\u7684 <code>.pop()</code> \u65b9\u6cd5\u7684\u7528\u6cd5\uff0c</p> <pre><code>def pop(self, k, d=None): # real signature unknown; restored from __doc__\n    \"\"\"\n    D.pop(k[,d]) -&gt; v, remove specified key and return the corresponding value.\n    \n    If key is not found, default is returned if given, otherwise KeyError is raised\n    \"\"\"\n    pass\n</code></pre> <p>If key is not found, default is returned if given, otherwise KeyError is raised</p> <p>\u7b2c\u4e8c\u4e2a\u53c2\u6570\u7684\u4f4d\u7f6e\u662f\u9ed8\u8ba4\u8fd4\u56de\u503c\uff0c\u5373\u5982\u679c\u6ca1\u6709\u67d0\u4e2akey\u5bf9\u5e94\u7684\u503c\uff0c\u90a3\u4e48\u5c31\u8fd4\u56de\u8fd9\u4e2a\u9ed8\u8ba4\u7684\u503c\uff0c\u5426\u5219\u4f1a\u5f15\u8d77 <code>KeyError</code></p>"},{"location":"python%E7%9B%B8%E5%85%B3/python%E8%AF%AD%E8%A8%80/#11","title":"11","text":"<p>\u5982\u679c\u8981\u5728\u51fd\u6570\u5185\u90e8\u4f7f\u7528\u5168\u5c40\u53d8\u91cf\uff0c\u4f7f\u7528 <code>global</code> \u5173\u952e\u5b57\uff0c\u8ddf <code>nonlocal</code> \u7c7b\u4f3c</p>"},{"location":"python%E7%9B%B8%E5%85%B3/scipy/","title":"SciPy","text":"<p> \u7ea6 3554 \u4e2a\u5b57  386 \u884c\u4ee3\u7801  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 17 \u5206\u949f</p>"},{"location":"python%E7%9B%B8%E5%85%B3/scipy/#1","title":"1","text":"<p>\u5b8c\u6210\u793a\u4f8b</p> <pre><code>import numpy as np\nfrom scipy.integrate import odeint\nimport matplotlib.pyplot as plt\n\nm1 = 4866\nm2 = 2433\nk1 = 31557.298\nk2 = 80000\nk3 = 10000\nk4 = 656.3516\nF = 6250\nw = 1.4005\nm_c = 1335.535\n\n\n# \u5b9a\u4e49\u4e8c\u5143\u5fae\u5206\u65b9\u7a0b\u51fd\u6570\ndef f(y, x, m1, m2, k1, k2, k3, k4, F, w, m_c):\n    # return [y[2], y[3], (-k1 * y[0] - k2 * (y[0] - y[1]) - k3 * (y[2] - y[3]) ** 1.5 - k4 * y[2] + F * np.cos(w * x)) / (m1 + m_c),\n    #         (k2 * (y[0] - y[1]) + k3 * (y[2] - y[3]) ** 1.5) / m2]\n    sign = np.sign(y[2] - y[3])\n    return [y[2], y[3],\n            (-k1 * y[0] - k2 * (y[0] - y[1]) - k3 * sign * abs(y[2] - y[3]) ** 1.5 - k4 * y[2] + F * np.cos(w * x)) / (\n                        m1 + m_c),\n            (k2 * (y[0] - y[1]) + k3 * sign * abs(y[2] - y[3]) ** 1.5) / m2]\n\n# \u521d\u59cb\u6761\u4ef6\ny0 = [0, 0, 0, 0]\n\n# \u81ea\u53d8\u91cf\u8303\u56f4\nx = np.linspace(0, 5, 1000)\n\n# \u6c42\u89e3\u5fae\u5206\u65b9\u7a0b\u7ec4\nsol = odeint(f, y0, x, args=(m1, m2, k1, k2, k3, k4, F, w, m_c))\n\n# \u5206\u522b\u63d0\u53d6y1\u548cy2\u7684\u503c\ny1 = sol[:, 0]\ny2 = sol[:, 1]\ny3 = sol[:, 2]\ny4 = sol[:, 3]\n\n# \u7ed8\u5236\u51fd\u6570\u56fe\u50cf\nplt.plot(x, y1, label='x1')\nplt.plot(x, y2, label='x2')\nplt.plot(x, y3, label='x3')\nplt.plot(x, y4, label='x4')\n\n# \u6dfb\u52a0\u56fe\u4f8b\u3001\u5750\u6807\u8f74\u6807\u7b7e\u548c\u6807\u9898\nplt.legend()\nplt.xlabel('t')\nplt.ylabel('x')\nplt.title('Solution of a System of Differential Equations')\n\n# \u663e\u793a\u56fe\u50cf\nplt.show()\n</code></pre>"},{"location":"python%E7%9B%B8%E5%85%B3/scipy/#2","title":"2","text":"<p><code>np.linspace(0, 5, 1000)</code> </p> <pre><code>@array_function_dispatch(_linspace_dispatcher)\ndef linspace(start, stop, num=50, ...):\n    ...\n</code></pre> <p>\u7b2c\u4e00\u3001\u4e8c\u4e2a\u53c2\u6570\u662f\u8d77\u59cb\u548c\u7ed3\u675f\uff0c\u7b2c\u4e09\u4e2a\u53c2\u6570\u662f\u5206\u5272\u70b9\u7684\u6570\u91cf\uff08\u8d8a\u591a\u70b9\u8d8a\u5bc6\uff0c\u66f2\u7ebf\u8d8a\u5e73\u6ed1\uff09\uff0c\u9ed8\u8ba450</p> chat log <p>user: </p> <p>\u4f60\u77e5\u9053scipy\u5417\uff1f</p> <p>chatgpt: </p> <p>\u662f\u7684\uff0c\u6211\u77e5\u9053Scipy\u3002Scipy\u662f\u4e00\u4e2a\u7528\u4e8e\u6570\u5b66\u3001\u79d1\u5b66\u548c\u5de5\u7a0b\u8ba1\u7b97\u7684Python\u5e93\u3002\u5b83\u5efa\u7acb\u5728NumPy\u5e93\u7684\u57fa\u7840\u4e0a\uff0c\u63d0\u4f9b\u4e86\u8bb8\u591a\u7528\u4e8e\u4fe1\u53f7\u5904\u7406\u3001\u4f18\u5316\u3001\u7edf\u8ba1\u5206\u6790\u3001\u7ebf\u6027\u4ee3\u6570\u548c\u6570\u503c\u79ef\u5206\u7b49\u65b9\u9762\u7684\u51fd\u6570\u548c\u5de5\u5177\u3002Scipy\u8fd8\u5305\u62ec\u4e86\u4e00\u4e9b\u7279\u6b8a\u51fd\u6570\u3001\u5085\u91cc\u53f6\u53d8\u6362\u3001\u4fe1\u53f7\u6ee4\u6ce2\u5668\u3001\u6700\u4f18\u5316\u5668\u3001\u7ebf\u6027\u4ee3\u6570\u5de5\u5177\u548c\u968f\u673a\u6570\u751f\u6210\u5668\u7b49\u529f\u80fd\u3002Scipy\u662fPython\u79d1\u5b66\u8ba1\u7b97\u5e93\u7684\u4e00\u4e2a\u5f3a\u5927\u800c\u5e7f\u6cdb\u4f7f\u7528\u7684\u7ec4\u4ef6\uff0c\u5176\u7075\u6d3b\u6027\u548c\u6613\u7528\u6027\u4f7f\u5176\u6210\u4e3a\u79d1\u5b66\u5bb6\u3001\u5de5\u7a0b\u5e08\u548c\u7814\u7a76\u4eba\u5458\u7684\u9996\u9009\u4e4b\u4e00\u3002</p> <p>user: </p> <p>\u600e\u4e48\u4f7f\u7528scipy\u4f60\u77e5\u9053\u5417\uff1f</p> <p>chatgpt: </p> <p>\u662f\u7684\uff0c\u6211\u53ef\u4ee5\u7ed9\u60a8\u63d0\u4f9b\u4f7f\u7528Scipy\u7684\u57fa\u672c\u6b65\u9aa4\uff1a</p> <ol> <li> <p>\u5b89\u88c5Scipy\u5e93\uff1a\u5728\u60a8\u7684Python\u73af\u5883\u4e2d\u4f7f\u7528pip\u547d\u4ee4\u6765\u5b89\u88c5Scipy\u5e93\u3002\u4f8b\u5982\u5728\u547d\u4ee4\u63d0\u793a\u7b26\u4e2d\u8f93\u5165\uff1a<code>pip install scipy</code>\u3002</p> </li> <li> <p>\u5bfc\u5165Scipy\u6a21\u5757\uff1a\u5728Python\u4ee3\u7801\u4e2d\u5bfc\u5165Scipy\u6a21\u5757\u3002\u4f8b\u5982\uff1a<code>import scipy</code>\u3002</p> </li> <li> <p>\u4f7f\u7528Scipy\u51fd\u6570\uff1a\u4f7f\u7528Scipy\u63d0\u4f9b\u7684\u51fd\u6570\u6765\u8fdb\u884c\u6570\u5b66\u3001\u79d1\u5b66\u548c\u5de5\u7a0b\u8ba1\u7b97\u3002\u4f8b\u5982\uff0c\u8981\u8fdb\u884c\u7ebf\u6027\u4ee3\u6570\u8ba1\u7b97\uff0c\u53ef\u4ee5\u4f7f\u7528Scipy\u4e2d\u7684<code>linalg</code>\u6a21\u5757\uff0c\u5982\u4e0b\u6240\u793a\uff1a</p> </li> </ol> <pre><code>import scipy.linalg as la\n\n# \u521b\u5efa\u4e00\u4e2a2x2\u7684\u77e9\u9635\nA = np.array([[1, 2], [3, 4]])\n\n# \u8ba1\u7b97\u77e9\u9635\u7684\u884c\u5217\u5f0f\ndet_A = la.det(A)\n\n# \u8ba1\u7b97\u77e9\u9635\u7684\u9006\ninv_A = la.inv(A)\n</code></pre> <p>\u9664\u4e86\u7ebf\u6027\u4ee3\u6570\uff0cScipy\u8fd8\u63d0\u4f9b\u4e86\u8bb8\u591a\u5176\u4ed6\u6a21\u5757\u548c\u51fd\u6570\uff0c\u4f8b\u5982\uff1a</p> <ul> <li><code>scipy.optimize</code>\uff1a\u63d0\u4f9b\u4e86\u4f18\u5316\u7b97\u6cd5\uff0c\u7528\u4e8e\u5bfb\u627e\u51fd\u6570\u7684\u6700\u5c0f\u503c\u6216\u6700\u5927\u503c\u3002</li> <li><code>scipy.integrate</code>\uff1a\u63d0\u4f9b\u4e86\u6570\u503c\u79ef\u5206\u51fd\u6570\u3002</li> <li><code>scipy.stats</code>\uff1a\u63d0\u4f9b\u4e86\u7edf\u8ba1\u5206\u6790\u51fd\u6570\uff0c\u7528\u4e8e\u751f\u6210\u548c\u64cd\u4f5c\u6982\u7387\u5206\u5e03\u3002</li> <li><code>scipy.signal</code>\uff1a\u63d0\u4f9b\u4e86\u4fe1\u53f7\u5904\u7406\u51fd\u6570\uff0c\u4f8b\u5982\u6ee4\u6ce2\u5668\u548c\u5085\u91cc\u53f6\u53d8\u6362\u7b49\u3002</li> </ul> <p>Scipy\u5e93\u7684\u4f7f\u7528\u975e\u5e38\u5e7f\u6cdb\uff0c\u5982\u679c\u60a8\u9700\u8981\u8fdb\u884c\u7279\u5b9a\u7684\u6570\u5b66\u3001\u79d1\u5b66\u6216\u5de5\u7a0b\u8ba1\u7b97\uff0c\u53ef\u4ee5\u5148\u770b\u770bScipy\u5e93\u662f\u5426\u63d0\u4f9b\u4e86\u76f8\u5173\u7684\u51fd\u6570\u548c\u5de5\u5177\u3002</p> <p>user: </p> <p>\u90a3\u4f60\u77e5\u9053\u5982\u4f55\u4f7f\u7528scipy\u89e3\u4e8c\u5143\u5fae\u5206\u65b9\u7a0b\u7ec4\u5417\uff1f</p> <p>chatgpt: </p> <p>\u662f\u7684\uff0c\u4f7f\u7528Scipy\u53ef\u4ee5\u89e3\u4e8c\u5143\u5fae\u5206\u65b9\u7a0b\u7ec4\u3002\u4e0b\u9762\u662f\u4e00\u4e2a\u7b80\u5355\u7684\u4f8b\u5b50\uff0c\u5c55\u793a\u4e86\u5982\u4f55\u4f7f\u7528Scipy\u89e3\u4e8c\u5143\u5fae\u5206\u65b9\u7a0b\u7ec4\uff1a</p> <p>\u5047\u8bbe\u6211\u4eec\u8981\u89e3\u51b3\u4ee5\u4e0b\u4e8c\u5143\u5fae\u5206\u65b9\u7a0b\u7ec4\uff1a</p> <p>y1' = -2y1 + y2 y2' = y1 - 2y2</p> <p>\u5176\u4e2dy1\u548cy2\u662f\u5173\u4e8e\u81ea\u53d8\u91cfx\u7684\u51fd\u6570\u3002\u4e3a\u4e86\u89e3\u51b3\u8fd9\u4e2a\u65b9\u7a0b\u7ec4\uff0c\u6211\u4eec\u9700\u8981\u5c06\u5b83\u8f6c\u6362\u4e3a\u77e9\u9635\u5f62\u5f0f\uff1a</p> <p>[d/dx(y1)]   [-2  1]   [y1] [d/dx(y2)] = [ 1 -2] * [y2]</p> <p>\u7136\u540e\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528Scipy\u7684<code>odeint</code>\u51fd\u6570\u6765\u89e3\u51b3\u8be5\u65b9\u7a0b\u7ec4\u3002<code>odeint</code>\u51fd\u6570\u53ef\u4ee5\u7528\u6765\u89e3\u51b3\u4e00\u822c\u5f62\u5f0f\u7684\u5e38\u5fae\u5206\u65b9\u7a0b\u7ec4\u3002\u4ee5\u4e0b\u662f\u4e00\u4e2a\u4f7f\u7528<code>odeint</code>\u51fd\u6570\u6765\u89e3\u51b3\u4e0a\u8ff0\u4e8c\u5143\u5fae\u5206\u65b9\u7a0b\u7ec4\u7684\u793a\u4f8b\u4ee3\u7801\uff1a</p> <pre><code>import numpy as np\nfrom scipy.integrate import odeint\n\n# \u5b9a\u4e49\u4e8c\u5143\u5fae\u5206\u65b9\u7a0b\u51fd\u6570\ndef f(y, x):\n    return [-2*y[0] + y[1], y[0] - 2*y[1]]\n\n# \u521d\u59cb\u6761\u4ef6\ny0 = [1, 0]\n\n# \u81ea\u53d8\u91cf\u8303\u56f4\nx = np.linspace(0, 10, 100)\n\n# \u6c42\u89e3\u5fae\u5206\u65b9\u7a0b\u7ec4\nsol = odeint(f, y0, x)\n\n# \u5206\u522b\u63d0\u53d6y1\u548cy2\u7684\u503c\ny1 = sol[:, 0]\ny2 = sol[:, 1]\n</code></pre> <p>\u5728\u8fd9\u4e2a\u793a\u4f8b\u4e2d\uff0c\u6211\u4eec\u9996\u5148\u5b9a\u4e49\u4e86\u4e00\u4e2a\u51fd\u6570f\u6765\u8868\u793a\u4e8c\u5143\u5fae\u5206\u65b9\u7a0b\u7ec4\u3002\u7136\u540e\uff0c\u6211\u4eec\u6307\u5b9a\u4e86\u521d\u59cb\u6761\u4ef6y0\u548c\u81ea\u53d8\u91cf\u8303\u56f4x\uff0c\u5e76\u4f7f\u7528<code>odeint</code>\u51fd\u6570\u6765\u6c42\u89e3\u5fae\u5206\u65b9\u7a0b\u7ec4\u3002\u6700\u540e\uff0c\u6211\u4eec\u63d0\u53d6\u4e86y1\u548cy2\u7684\u503c\uff0c\u5e76\u5c06\u5b83\u4eec\u5b58\u50a8\u5728y1\u548cy2\u6570\u7ec4\u4e2d\u3002</p> <p>\u8bf7\u6ce8\u610f\uff0c<code>odeint</code>\u51fd\u6570\u7684\u7b2c\u4e00\u4e2a\u53c2\u6570\u662f\u8868\u793a\u5fae\u5206\u65b9\u7a0b\u7ec4\u7684\u51fd\u6570\u540d\uff0c\u7b2c\u4e8c\u4e2a\u53c2\u6570\u662f\u521d\u59cb\u6761\u4ef6\uff0c\u7b2c\u4e09\u4e2a\u53c2\u6570\u662f\u81ea\u53d8\u91cf\u8303\u56f4\u3002\u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c\u6211\u4eec\u4f7f\u7528<code>numpy.linspace</code>\u51fd\u6570\u6765\u751f\u6210\u81ea\u53d8\u91cf\u8303\u56f4x\u3002</p> <p>user: </p> <p>\u5982\u4f55\u6253\u5370y1 y2\u6210\u51fd\u6570\u56fe\u50cf\uff1f</p> <p>chatgpt: </p> <p>\u8981\u5c06y1\u548cy2\u6253\u5370\u6210\u51fd\u6570\u56fe\u50cf\uff0c\u6211\u4eec\u9700\u8981\u4f7f\u7528Matplotlib\u5e93\u3002Matplotlib\u662f\u4e00\u4e2aPython\u5e93\uff0c\u53ef\u7528\u4e8e\u7ed8\u5236\u5404\u79cd\u7c7b\u578b\u7684\u56fe\u5f62\uff0c\u5305\u62ec\u7ebf\u56fe\u3001\u6563\u70b9\u56fe\u3001\u6761\u5f62\u56fe\u3001\u997c\u56fe\u7b49\u7b49\u3002</p> <p>\u4ee5\u4e0b\u662f\u4e00\u4e2a\u793a\u4f8b\u4ee3\u7801\uff0c\u5c55\u793a\u4e86\u5982\u4f55\u4f7f\u7528Matplotlib\u5e93\u7ed8\u5236y1\u548cy2\u7684\u51fd\u6570\u56fe\u50cf\uff1a</p> <pre><code>import numpy as np\nfrom scipy.integrate import odeint\nimport matplotlib.pyplot as plt\n\n# \u5b9a\u4e49\u4e8c\u5143\u5fae\u5206\u65b9\u7a0b\u51fd\u6570\ndef f(y, x):\n    return [-2*y[0] + y[1], y[0] - 2*y[1]]\n\n# \u521d\u59cb\u6761\u4ef6\ny0 = [1, 0]\n\n# \u81ea\u53d8\u91cf\u8303\u56f4\nx = np.linspace(0, 10, 100)\n\n# \u6c42\u89e3\u5fae\u5206\u65b9\u7a0b\u7ec4\nsol = odeint(f, y0, x)\n\n# \u5206\u522b\u63d0\u53d6y1\u548cy2\u7684\u503c\ny1 = sol[:, 0]\ny2 = sol[:, 1]\n\n# \u7ed8\u5236\u51fd\u6570\u56fe\u50cf\nplt.plot(x, y1, label='y1')\nplt.plot(x, y2, label='y2')\n\n# \u6dfb\u52a0\u56fe\u4f8b\u3001\u5750\u6807\u8f74\u6807\u7b7e\u548c\u6807\u9898\nplt.legend()\nplt.xlabel('x')\nplt.ylabel('y')\nplt.title('Solution of a System of Differential Equations')\n\n# \u663e\u793a\u56fe\u50cf\nplt.show()\n</code></pre> <p>\u5728\u8fd9\u4e2a\u793a\u4f8b\u4e2d\uff0c\u6211\u4eec\u9996\u5148\u6c42\u89e3\u4e86\u5fae\u5206\u65b9\u7a0b\u7ec4\uff0c\u5e76\u63d0\u53d6\u4e86y1\u548cy2\u7684\u503c\u3002\u7136\u540e\uff0c\u6211\u4eec\u4f7f\u7528Matplotlib\u7684<code>plot</code>\u51fd\u6570\u7ed8\u5236\u4e86y1\u548cy2\u7684\u51fd\u6570\u56fe\u50cf\uff0c\u5e76\u4f7f\u7528<code>legend</code>\u51fd\u6570\u6dfb\u52a0\u4e86\u56fe\u4f8b\u3002\u6700\u540e\uff0c\u6211\u4eec\u4f7f\u7528<code>xlabel</code>\u3001<code>ylabel</code>\u548c<code>title</code>\u51fd\u6570\u6dfb\u52a0\u4e86\u5750\u6807\u8f74\u6807\u7b7e\u548c\u6807\u9898\uff0c\u5e76\u4f7f\u7528<code>show</code>\u51fd\u6570\u663e\u793a\u4e86\u56fe\u50cf\u3002</p> <p>\u8fd9\u4e2a\u4ee3\u7801\u4f1a\u751f\u6210\u4e00\u4e2a\u5305\u542by1\u548cy2\u51fd\u6570\u56fe\u50cf\u7684\u7a97\u53e3\u3002\u60a8\u53ef\u4ee5\u901a\u8fc7\u8c03\u6574x\u8303\u56f4\u3001\u521d\u59cb\u6761\u4ef6\u548c\u5fae\u5206\u65b9\u7a0b\u51fd\u6570\u6765\u751f\u6210\u4e0d\u540c\u7684\u56fe\u50cf\u3002</p> <p>user: </p> <p>\u7cfb\u6570\u6d6e\u70b9\u6570\u65f6\uff0c\u62a5\u9519\u4e86\uff0c TypeError: unsupported operand type(s) for *: 'function' and 'float' \u5e94\u8be5\u5982\u4f55\u89e3\u51b3\uff1f</p> <p>chatgpt: </p> <p>\u8fd9\u4e2a\u9519\u8bef\u901a\u5e38\u662f\u7531\u4e8e\u53c2\u6570\u7c7b\u578b\u4e0d\u5339\u914d\u5f15\u8d77\u7684\u3002\u5177\u4f53\u5730\u8bf4\uff0c\u5728\u60a8\u7684\u4ee3\u7801\u4e2d\uff0c\u60a8\u53ef\u80fd\u5728\u4f7f\u7528<code>odeint</code>\u51fd\u6570\u65f6\u5c06\u4e00\u4e2a\u51fd\u6570\u5bf9\u8c61\u4e0e\u4e00\u4e2a\u6d6e\u70b9\u6570\u76f8\u4e58\uff0c\u4ece\u800c\u5bfc\u81f4\u4e86\u8fd9\u4e2a\u9519\u8bef\u3002</p> <p>\u8981\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u60a8\u53ef\u4ee5\u68c0\u67e5\u60a8\u7684\u4ee3\u7801\uff0c\u786e\u4fdd\u60a8\u6ca1\u6709\u5728\u4f7f\u7528<code>odeint</code>\u51fd\u6570\u65f6\u5c06\u51fd\u6570\u5bf9\u8c61\u4e0e\u6d6e\u70b9\u6570\u76f8\u4e58\u3002\u53e6\u5916\uff0c\u60a8\u53ef\u4ee5\u5c1d\u8bd5\u5c06\u6240\u6709\u7684\u7cfb\u6570\u90fd\u663e\u5f0f\u5730\u8f6c\u6362\u4e3a\u6d6e\u70b9\u6570\uff0c\u4ee5\u786e\u4fdd<code>odeint</code>\u51fd\u6570\u63a5\u6536\u5230\u7684\u53c2\u6570\u7c7b\u578b\u90fd\u662f\u4e00\u81f4\u7684\u3002</p> <p>\u4ee5\u4e0b\u662f\u4e00\u4e2a\u4fee\u590d\u8fd9\u4e2a\u95ee\u9898\u7684\u793a\u4f8b\u4ee3\u7801\uff1a</p> <pre><code>import numpy as np\nfrom scipy.integrate import odeint\n\n# \u5b9a\u4e49\u4e8c\u5143\u5fae\u5206\u65b9\u7a0b\u51fd\u6570\ndef f(y, x, a, b, c, d):\n    return [-a*y[0] + b*y[1], c*y[0] - d*y[1]]\n\n# \u521d\u59cb\u6761\u4ef6\ny0 = [1, 0]\n\n# \u81ea\u53d8\u91cf\u8303\u56f4\nx = np.linspace(0, 10, 100)\n\n# \u5b9a\u4e49\u53c2\u6570\na = 1.0\nb = 2.0\nc = 3.0\nd = 4.0\n\n# \u6c42\u89e3\u5fae\u5206\u65b9\u7a0b\u7ec4\nsol = odeint(f, y0, x, args=(a, b, c, d))\n\n# \u5206\u522b\u63d0\u53d6y1\u548cy2\u7684\u503c\ny1 = sol[:, 0]\ny2 = sol[:, 1]\n</code></pre> <p>\u5728\u8fd9\u4e2a\u793a\u4f8b\u4e2d\uff0c\u6211\u4eec\u9996\u5148\u5c06\u6240\u6709\u7684\u7cfb\u6570\u90fd\u663e\u5f0f\u5730\u8f6c\u6362\u4e3a\u6d6e\u70b9\u6570\u3002\u7136\u540e\uff0c\u6211\u4eec\u5c06\u8fd9\u4e9b\u7cfb\u6570\u4f5c\u4e3a\u53c2\u6570\u4f20\u9012\u7ed9\u4e8c\u5143\u5fae\u5206\u65b9\u7a0b\u51fd\u6570f\uff0c\u5e76\u5728\u8c03\u7528<code>odeint</code>\u51fd\u6570\u65f6\u5c06\u8fd9\u4e9b\u53c2\u6570\u4f5c\u4e3a\u9644\u52a0\u53c2\u6570\u4f20\u9012\u3002\u6700\u540e\uff0c\u6211\u4eec\u6c42\u89e3\u5fae\u5206\u65b9\u7a0b\u7ec4\uff0c\u5e76\u63d0\u53d6\u4e86y1\u548cy2\u7684\u503c\u3002</p> <p>\u8bf7\u6ce8\u610f\uff0c\u6211\u4eec\u5c06\u53c2\u6570\u5217\u8868<code>(a, b, c, d)</code>\u4f5c\u4e3a<code>odeint</code>\u51fd\u6570\u7684<code>args</code>\u53c2\u6570\u4f20\u9012\u3002\u8fd9\u662f\u56e0\u4e3a\uff0c<code>odeint</code>\u51fd\u6570\u9700\u8981\u63a5\u6536\u4e00\u4e2a\u51fd\u6570\u548c\u4e00\u4e2a\u521d\u59cb\u6761\u4ef6\uff0c\u5e76\u53ef\u9009\u5730\u63a5\u6536\u4e00\u4e9b\u9644\u52a0\u7684\u53c2\u6570\u3002\u8fd9\u4e9b\u9644\u52a0\u53c2\u6570\u5fc5\u987b\u4f5c\u4e3a\u4e00\u4e2a\u5143\u7ec4\u4f20\u9012\u7ed9<code>args</code>\u53c2\u6570\uff0c\u4ee5\u4fbf\u5728\u6c42\u89e3\u5fae\u5206\u65b9\u7a0b\u7ec4\u65f6\u4f7f\u7528\u3002</p> <p>user: </p> <p>\u90a3\u4e48scipy\u5982\u4f55\u6c42\u89e3\u4e09\u5143\u4e8c\u9636\u5fae\u5206\u65b9\u7a0b\uff1f</p> <p>chatgpt: </p> <p>Scipy\u5e93\u4e2d\u6ca1\u6709\u76f4\u63a5\u6c42\u89e3\u4e09\u5143\u4e8c\u9636\u5fae\u5206\u65b9\u7a0b\u7684\u51fd\u6570\uff0c\u4f46\u53ef\u4ee5\u4f7f\u7528<code>odeint</code>\u51fd\u6570\u6765\u6c42\u89e3\u3002\u4e3a\u4e86\u4f7f\u7528<code>odeint</code>\u51fd\u6570\u6c42\u89e3\u4e09\u5143\u4e8c\u9636\u5fae\u5206\u65b9\u7a0b\uff0c\u9700\u8981\u5c06\u5176\u8f6c\u5316\u4e3a\u4e00\u4e2a\u516d\u5143\u4e00\u9636\u5fae\u5206\u65b9\u7a0b\u7ec4\u3002</p> <p>\u4f8b\u5982\uff0c\u5047\u8bbe\u6211\u4eec\u8981\u6c42\u89e3\u4ee5\u4e0b\u4e09\u5143\u4e8c\u9636\u5fae\u5206\u65b9\u7a0b\u7ec4\uff1a</p> <p>x''(t) + 2y'(t) + 3z(t) = 0 y''(t) + 3x(t) + 4z'(t) = 0 z''(t) + x(t) + 2*y(t) = 0</p> <p>\u6211\u4eec\u53ef\u4ee5\u5c06\u5b83\u8f6c\u5316\u4e3a\u4ee5\u4e0b\u516d\u5143\u4e00\u9636\u5fae\u5206\u65b9\u7a0b\u7ec4\uff1a</p> <p>x'(t) = v_x(t) v_x'(t) = -2v_y(t) - 3z(t) y'(t) = v_y(t) v_y'(t) = -3x(t) - 4v_z(t) z'(t) = v_z(t) v_z'(t) = -x(t) - 2*y(t)</p> <p>\u5176\u4e2d\uff0cx(t)\u3001y(t)\u548cz(t)\u662f\u5f85\u6c42\u89e3\u7684\u51fd\u6570\uff0cv_x(t)\u3001v_y(t)\u548cv_z(t)\u662f\u5b83\u4eec\u7684\u5bfc\u6570\u3002</p> <p>\u6211\u4eec\u53ef\u4ee5\u5c06\u8fd9\u4e2a\u516d\u5143\u4e00\u9636\u5fae\u5206\u65b9\u7a0b\u7ec4\u4f5c\u4e3a<code>odeint</code>\u51fd\u6570\u7684\u8f93\u5165\uff0c\u5e76\u4f7f\u7528\u521d\u59cb\u6761\u4ef6\u6c42\u89e3\u5b83\u3002\u4ee5\u4e0b\u662f\u4e00\u4e2a\u4f7f\u7528<code>odeint</code>\u51fd\u6570\u6c42\u89e3\u4e0a\u8ff0\u4e09\u5143\u4e8c\u9636\u5fae\u5206\u65b9\u7a0b\u7684\u793a\u4f8b\u4ee3\u7801\uff1a</p> <pre><code>import numpy as np\nfrom scipy.integrate import odeint\n\n# \u5b9a\u4e49\u516d\u5143\u4e00\u9636\u5fae\u5206\u65b9\u7a0b\u51fd\u6570\ndef f(y, t):\n    x, vx, y, vy, z, vz = y\n    return [vx, -2*vy - 3*z, vy, -3*x - 4*vz, vz, -x - 2*y]\n\n# \u521d\u59cb\u6761\u4ef6\ny0 = [1, 0, 1, 0, 1, 0]\n\n# \u81ea\u53d8\u91cf\u8303\u56f4\nt = np.linspace(0, 10, 100)\n\n# \u6c42\u89e3\u5fae\u5206\u65b9\u7a0b\u7ec4\nsol = odeint(f, y0, t)\n\n# \u5206\u522b\u63d0\u53d6x, y, z \u7684\u503c\nx = sol[:, 0]\ny = sol[:, 2]\nz = sol[:, 4]\n</code></pre> <p>\u5728\u8fd9\u4e2a\u793a\u4f8b\u4e2d\uff0c\u6211\u4eec\u5b9a\u4e49\u4e86\u4e00\u4e2a\u51fd\u6570f\u6765\u8868\u793a\u516d\u5143\u4e00\u9636\u5fae\u5206\u65b9\u7a0b\u7ec4\uff0c\u5e76\u6307\u5b9a\u4e86\u521d\u59cb\u6761\u4ef6y0\u548c\u81ea\u53d8\u91cf\u8303\u56f4t\u3002\u7136\u540e\uff0c\u6211\u4eec\u4f7f\u7528<code>odeint</code>\u51fd\u6570\u6c42\u89e3\u5fae\u5206\u65b9\u7a0b\u7ec4\uff0c\u5e76\u63d0\u53d6\u4e86x\u3001y\u548cz\u7684\u503c\u3002</p> <p>\u8bf7\u6ce8\u610f\uff0c\u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c\u6211\u4eec\u5c06\u521d\u59cb\u6761\u4ef6y0\u4f5c\u4e3a\u4e00\u4e2a\u516d\u5143\u5217\u8868\u4f20\u9012\u7ed9<code>odeint</code>\u51fd\u6570\u3002\u5728\u51fd\u6570f\u4e2d\uff0c\u6211\u4eec\u4f7f\u7528y\u5217\u8868\u6765\u8868\u793a\u516d\u4e2a\u51fd\u6570\u548c\u5b83\u4eec\u7684\u5bfc\u6570\u3002</p> <p>user: </p> <p>\u5982\u4f55\u6253\u5370\u6210\u56fe\u50cf\uff1f</p> <p>chatgpt: </p> <p>\u8981\u5c06\u6c42\u89e3\u7684\u4e09\u5143\u4e8c\u9636\u5fae\u5206\u65b9\u7a0b\u7684\u7ed3\u679c\u6253\u5370\u6210\u56fe\u50cf\uff0c\u53ef\u4ee5\u4f7f\u7528Matplotlib\u5e93\u3002Matplotlib\u662f\u4e00\u4e2aPython\u5e93\uff0c\u53ef\u7528\u4e8e\u7ed8\u5236\u5404\u79cd\u7c7b\u578b\u7684\u56fe\u5f62\uff0c\u5305\u62ec\u7ebf\u56fe\u3001\u6563\u70b9\u56fe\u3001\u6761\u5f62\u56fe\u3001\u997c\u56fe\u7b49\u7b49\u3002</p> <p>\u4ee5\u4e0b\u662f\u4e00\u4e2a\u793a\u4f8b\u4ee3\u7801\uff0c\u5c55\u793a\u4e86\u5982\u4f55\u4f7f\u7528Matplotlib\u5e93\u7ed8\u5236x\u3001y\u548cz\u7684\u51fd\u6570\u56fe\u50cf\uff1a</p> <pre><code>import numpy as np\nfrom scipy.integrate import odeint\nimport matplotlib.pyplot as plt\n\n# \u5b9a\u4e49\u516d\u5143\u4e00\u9636\u5fae\u5206\u65b9\u7a0b\u51fd\u6570\ndef f(y, t):\n    x, vx, y, vy, z, vz = y\n    return [vx, -2*vy - 3*z, vy, -3*x - 4*vz, vz, -x - 2*y]\n\n# \u521d\u59cb\u6761\u4ef6\ny0 = [1, 0, 1, 0, 1, 0]\n\n# \u81ea\u53d8\u91cf\u8303\u56f4\nt = np.linspace(0, 10, 100)\n\n# \u6c42\u89e3\u5fae\u5206\u65b9\u7a0b\u7ec4\nsol = odeint(f, y0, t)\n\n# \u5206\u522b\u63d0\u53d6x, y, z\u7684\u503c\nx = sol[:, 0]\ny = sol[:, 2]\nz = sol[:, 4]\n\n# \u7ed8\u5236\u51fd\u6570\u56fe\u50cf\nplt.plot(t, x, label='x')\nplt.plot(t, y, label='y')\nplt.plot(t, z, label='z')\n\n# \u6dfb\u52a0\u56fe\u4f8b\u3001\u5750\u6807\u8f74\u6807\u7b7e\u548c\u6807\u9898\nplt.legend()\nplt.xlabel('t')\nplt.ylabel('f(t)')\nplt.title('Solution of a System of Differential Equations')\n\n# \u663e\u793a\u56fe\u50cf\nplt.show()\n</code></pre> <p>\u5728\u8fd9\u4e2a\u793a\u4f8b\u4e2d\uff0c\u6211\u4eec\u9996\u5148\u6c42\u89e3\u4e86\u5fae\u5206\u65b9\u7a0b\u7ec4\uff0c\u5e76\u63d0\u53d6\u4e86x\u3001y\u548cz\u7684\u503c\u3002\u7136\u540e\uff0c\u6211\u4eec\u4f7f\u7528Matplotlib\u7684<code>plot</code>\u51fd\u6570\u7ed8\u5236\u4e86x\u3001y\u548cz\u7684\u51fd\u6570\u56fe\u50cf\uff0c\u5e76\u4f7f\u7528<code>legend</code>\u51fd\u6570\u6dfb\u52a0\u4e86\u56fe\u4f8b\u3002\u6700\u540e\uff0c\u6211\u4eec\u4f7f\u7528<code>xlabel</code>\u3001<code>ylabel</code>\u548c<code>title</code>\u51fd\u6570\u6dfb\u52a0\u4e86\u5750\u6807\u8f74\u6807\u7b7e\u548c\u6807\u9898\uff0c\u5e76\u4f7f\u7528<code>show</code>\u51fd\u6570\u663e\u793a\u4e86\u56fe\u50cf\u3002</p> <p>\u8fd9\u4e2a\u4ee3\u7801\u4f1a\u751f\u6210\u4e00\u4e2a\u5305\u542bx\u3001y\u548cz\u51fd\u6570\u56fe\u50cf\u7684\u7a97\u53e3\u3002\u60a8\u53ef\u4ee5\u901a\u8fc7\u8c03\u6574\u81ea\u53d8\u91cf\u8303\u56f4\u3001\u521d\u59cb\u6761\u4ef6\u548c\u5fae\u5206\u65b9\u7a0b\u51fd\u6570\u6765\u751f\u6210\u4e0d\u540c\u7684\u56fe\u50cf\u3002</p> <p>user: </p> <p>\u80fd\u4e0d\u80fd\u6253\u5370\u62103d\u7684\u56fe\u50cf\uff1f</p> <p>chatgpt: </p> <p>\u662f\u7684\uff0c\u53ef\u4ee5\u4f7f\u7528Matplotlib\u5e93\u4e2d\u7684mplot3d\u6a21\u5757\u5c06\u4e09\u5143\u4e8c\u9636\u5fae\u5206\u65b9\u7a0b\u7684\u6c42\u89e3\u7ed3\u679c\u6253\u5370\u62103D\u56fe\u50cf\u3002</p> <p>\u4ee5\u4e0b\u662f\u4e00\u4e2a\u793a\u4f8b\u4ee3\u7801\uff0c\u5c55\u793a\u4e86\u5982\u4f55\u4f7f\u7528Matplotlib\u7684mplot3d\u6a21\u5757\u7ed8\u5236x\u3001y\u548cz\u76843D\u56fe\u50cf\uff1a</p> <pre><code>import numpy as np\nfrom scipy.integrate import odeint\nimport matplotlib.pyplot as plt\nfrom mpl_toolkits.mplot3d import Axes3D\n\n# \u5b9a\u4e49\u516d\u5143\u4e00\u9636\u5fae\u5206\u65b9\u7a0b\u51fd\u6570\ndef f(y, t):\n    x, vx, y, vy, z, vz = y\n    return [vx, -2*vy - 3*z, vy, -3*x - 4*vz, vz, -x - 2*y]\n\n# \u521d\u59cb\u6761\u4ef6\ny0 = [1, 0, 1, 0, 1, 0]\n\n# \u81ea\u53d8\u91cf\u8303\u56f4\nt = np.linspace(0, 10, 100)\n\n# \u6c42\u89e3\u5fae\u5206\u65b9\u7a0b\u7ec4\nsol = odeint(f, y0, t)\n\n# \u5206\u522b\u63d0\u53d6x, y, z\u7684\u503c\nx = sol[:, 0]\ny = sol[:, 2]\nz = sol[:, 4]\n\n# \u7ed8\u52363D\u56fe\u50cf\nfig = plt.figure()\nax = fig.add_subplot(111, projection='3d')\nax.plot(x, y, z)\n\n# \u6dfb\u52a0\u5750\u6807\u8f74\u6807\u7b7e\u548c\u6807\u9898\nax.set_xlabel('x')\nax.set_ylabel('y')\nax.set_zlabel('z')\nplt.title('Solution of a System of Differential Equations')\n\n# \u663e\u793a\u56fe\u50cf\nplt.show()\n</code></pre> <p>\u5728\u8fd9\u4e2a\u793a\u4f8b\u4e2d\uff0c\u6211\u4eec\u9996\u5148\u6c42\u89e3\u4e86\u5fae\u5206\u65b9\u7a0b\u7ec4\uff0c\u5e76\u63d0\u53d6\u4e86x\u3001y\u548cz\u7684\u503c\u3002\u7136\u540e\uff0c\u6211\u4eec\u4f7f\u7528Matplotlib\u7684mplot3d\u6a21\u5757\u4e2d\u7684<code>Axes3D</code>\u7c7b\u521b\u5efa\u4e00\u4e2a3D\u5750\u6807\u7cfb\uff0c\u5e76\u4f7f\u7528<code>plot</code>\u51fd\u6570\u7ed8\u5236\u4e86x\u3001y\u548cz\u76843D\u56fe\u50cf\u3002\u6700\u540e\uff0c\u6211\u4eec\u4f7f\u7528<code>set_xlabel</code>\u3001<code>set_ylabel</code>\u548c<code>set_zlabel</code>\u51fd\u6570\u6dfb\u52a0\u4e86\u5750\u6807\u8f74\u6807\u7b7e\uff0c\u5e76\u4f7f\u7528<code>title</code>\u51fd\u6570\u6dfb\u52a0\u4e86\u6807\u9898\u3002</p> <p>\u8fd9\u4e2a\u4ee3\u7801\u4f1a\u751f\u6210\u4e00\u4e2a\u5305\u542bx\u3001y\u548cz\u51fd\u6570\u76843D\u56fe\u50cf\u7684\u7a97\u53e3\u3002\u60a8\u53ef\u4ee5\u901a\u8fc7\u8c03\u6574\u81ea\u53d8\u91cf\u8303\u56f4\u3001\u521d\u59cb\u6761\u4ef6\u548c\u5fae\u5206\u65b9\u7a0b\u51fd\u6570\u6765\u751f\u6210\u4e0d\u540c\u7684\u56fe\u50cf\u3002</p> <p>user: </p> <p>\u90a3scipy\u80fd\u4e0d\u80fd\u89e3\u4e09\u5143\u975e\u7ebf\u6027\u5fae\u5206\u65b9\u7a0b\uff1f</p> <p>chatgpt: </p> <p>Scipy\u5e93\u4e2d\u7684<code>odeint</code>\u51fd\u6570\u53ef\u4ee5\u7528\u4e8e\u6c42\u89e3\u4e09\u5143\u975e\u7ebf\u6027\u5fae\u5206\u65b9\u7a0b\u3002</p> <p>\u5bf9\u4e8e\u4e09\u5143\u975e\u7ebf\u6027\u5fae\u5206\u65b9\u7a0b\uff0c\u53ef\u4ee5\u5c06\u5176\u8f6c\u5316\u4e3a\u4e00\u4e2a\u516d\u5143\u4e00\u9636\u5fae\u5206\u65b9\u7a0b\u7ec4\uff0c\u5e76\u5c06\u5176\u4f5c\u4e3a<code>odeint</code>\u51fd\u6570\u7684\u8f93\u5165\u3002\u5177\u4f53\u6765\u8bf4\uff0c\u5982\u679c\u6211\u4eec\u6709\u4ee5\u4e0b\u4e09\u5143\u975e\u7ebf\u6027\u5fae\u5206\u65b9\u7a0b\uff1a</p> <p>x''(t) = -x(t) * y(t) * z(t) y''(t) = -y(t) * z(t) * x(t) z''(t) = -z(t) * x(t) * y(t)</p> <p>\u6211\u4eec\u53ef\u4ee5\u5c06\u5176\u8f6c\u5316\u4e3a\u4ee5\u4e0b\u516d\u5143\u4e00\u9636\u5fae\u5206\u65b9\u7a0b\u7ec4\uff1a</p> <p>x'(t) = v_x(t) v_x'(t) = -x(t) * y(t) * z(t) y'(t) = v_y(t) v_y'(t) = -y(t) * z(t) * x(t) z'(t) = v_z(t) v_z'(t) = -z(t) * x(t) * y(t)</p> <p>\u5176\u4e2d\uff0cx(t)\u3001y(t)\u548cz(t)\u662f\u5f85\u6c42\u89e3\u7684\u51fd\u6570\uff0cv_x(t)\u3001v_y(t)\u548cv_z(t)\u662f\u5b83\u4eec\u7684\u5bfc\u6570\u3002</p> <p>\u4ee5\u4e0b\u662f\u4e00\u4e2a\u4f7f\u7528<code>odeint</code>\u51fd\u6570\u6c42\u89e3\u4e0a\u8ff0\u4e09\u5143\u975e\u7ebf\u6027\u5fae\u5206\u65b9\u7a0b\u7684\u793a\u4f8b\u4ee3\u7801\uff1a</p> <pre><code>import numpy as np\nfrom scipy.integrate import odeint\n\n# \u5b9a\u4e49\u516d\u5143\u4e00\u9636\u5fae\u5206\u65b9\u7a0b\u51fd\u6570\ndef f(y, t):\n    x, vx, y, vy, z, vz = y\n    return [vx, -x*y*z, vy, -y*z*x, vz, -z*x*y]\n\n# \u521d\u59cb\u6761\u4ef6\ny0 = [1, 0, 1, 0, 1, 0]\n\n# \u81ea\u53d8\u91cf\u8303\u56f4\nt = np.linspace(0, 10, 100)\n\n# \u6c42\u89e3\u5fae\u5206\u65b9\u7a0b\u7ec4\nsol = odeint(f, y0, t)\n\n# \u5206\u522b\u63d0\u53d6x, y, z \u7684\u503c\nx = sol[:, 0]\ny = sol[:, 2]\nz = sol[:, 4]\n</code></pre> <p>\u5728\u8fd9\u4e2a\u793a\u4f8b\u4e2d\uff0c\u6211\u4eec\u5b9a\u4e49\u4e86\u4e00\u4e2a\u51fd\u6570f\u6765\u8868\u793a\u516d\u5143\u4e00\u9636\u5fae\u5206\u65b9\u7a0b\u7ec4\uff0c\u5e76\u6307\u5b9a\u4e86\u521d\u59cb\u6761\u4ef6y0\u548c\u81ea\u53d8\u91cf\u8303\u56f4t\u3002\u7136\u540e\uff0c\u6211\u4eec\u4f7f\u7528<code>odeint</code>\u51fd\u6570\u6c42\u89e3\u5fae\u5206\u65b9\u7a0b\u7ec4\uff0c\u5e76\u63d0\u53d6\u4e86x\u3001y\u548cz\u7684\u503c\u3002</p> <p>\u8bf7\u6ce8\u610f\uff0c\u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c\u6211\u4eec\u5c06\u521d\u59cb\u6761\u4ef6y0\u4f5c\u4e3a\u4e00\u4e2a\u516d\u5143\u5217\u8868\u4f20\u9012\u7ed9<code>odeint</code>\u51fd\u6570\u3002\u5728\u51fd\u6570f\u4e2d\uff0c\u6211\u4eec\u4f7f\u7528y\u5217\u8868\u6765\u8868\u793a\u516d\u4e2a\u51fd\u6570\u548c\u5b83\u4eec\u7684\u5bfc\u6570\u3002</p> <p>\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u5bf9\u4e8e\u975e\u7ebf\u6027\u5fae\u5206\u65b9\u7a0b\uff0c\u6c42\u89e3\u53ef\u80fd\u4f1a\u6bd4\u8f83\u56f0\u96be\uff0c\u9700\u8981\u9009\u62e9\u5408\u9002\u7684\u65b9\u6cd5\u548c\u53c2\u6570\u6765\u6c42\u89e3\u3002\u5982\u679c\u9047\u5230\u6c42\u89e3\u56f0\u96be\u7684\u60c5\u51b5\uff0c\u53ef\u4ee5\u5c1d\u8bd5\u4f7f\u7528\u5176\u4ed6\u6570\u503c\u6c42\u89e3\u65b9\u6cd5\uff0c\u6216\u8005\u624b\u52a8\u8c03\u6574<code>odeint</code>\u51fd\u6570\u7684\u53c2\u6570\u6765\u63d0\u9ad8\u6c42\u89e3\u6548\u679c\u3002</p> <p>user: </p> <p><pre><code>RuntimeWarning: invalid value encountered in scalar power\n(k2 * (y[0] - y[1]) + k3 * (y[2] - y[3]) ** 1.5) / m2]\n</code></pre> \u8fd9\u4e2a\u62a5\u9519\u5e94\u8be5\u5982\u4f55\u89e3\u51b3\uff1f \u5b8c\u6574\u4ee3\u7801\u5982\u4e0b\uff1a <pre><code>import numpy as np\nfrom scipy import *\nfrom scipy.integrate import odeint\nimport matplotlib.pyplot as plt\nfrom math import *\n\nm1 = 4.866\nm2 = 2433\nk1 = 31557.298\nk2 = 80000\nk3 = 10000\nk4 = 656.3516\nF = 6250\nw = 1.4005\nm_c = 1335.535\n\n\n# \u5b9a\u4e49\u4e8c\u5143\u5fae\u5206\u65b9\u7a0b\u51fd\u6570\ndef f(y, x, m1, m2, k1, k2, k3, k4, F, w, m_c):\n    return [y[2], y[3], (-k1 * y[0] - k2 * (y[0] - y[1]) - k3 * (y[2] - y[3]) ** 1.5 - k4 * y[2] + F * np.cos(w * x)) / (m1 + m_c),\n            (k2 * (y[0] - y[1]) + k3 * (y[2] - y[3]) ** 1.5) / m2]\n\n\n# \u521d\u59cb\u6761\u4ef6\ny0 = [0, 0, 0, 0]\n\n# \u81ea\u53d8\u91cf\u8303\u56f4\nx = np.linspace(0, 5, 1000)\n\n# \u6c42\u89e3\u5fae\u5206\u65b9\u7a0b\u7ec4\nsol = odeint(f, y0, x, args=(m1, m2, k1, k2, k3, k4, F, w, m_c))\n\n# \u5206\u522b\u63d0\u53d6y1\u548cy2\u7684\u503c\ny1 = sol[:, 0]\ny2 = sol[:, 1]\ny3 = sol[:, 2]\ny4 = sol[:, 3]\n\n# \u7ed8\u5236\u51fd\u6570\u56fe\u50cf\nplt.plot(x, y1, label='y1')\nplt.plot(x, y2, label='y2')\nplt.plot(x, y3, label='y3')\nplt.plot(x, y4, label='y4')\n\n# \u6dfb\u52a0\u56fe\u4f8b\u3001\u5750\u6807\u8f74\u6807\u7b7e\u548c\u6807\u9898\nplt.legend()\nplt.xlabel('x')\nplt.ylabel('y')\nplt.title('Solution of a System of Differential Equations')\n\n# \u663e\u793a\u56fe\u50cf\nplt.show()\n</code></pre></p> <p>chatgpt: </p> <p>\u8fd9\u4e2a\u62a5\u9519\u662f\u56e0\u4e3a\u5728\u6c42\u89e3\u5fae\u5206\u65b9\u7a0b\u7ec4\u65f6\uff0c\u51fa\u73b0\u4e86\u975e\u6cd5\u503c\u3002\u5177\u4f53\u6765\u8bf4\uff0c\u5728\u51fd\u6570f\u4e2d\u7684\u7b2c\u56db\u4e2a\u65b9\u7a0b\u4e2d\uff0c\u5f53\u5206\u6bcdm2\u4e3a0\u65f6\uff0c\u4f1a\u53d1\u751f\u9664\u96f6\u9519\u8bef\uff0c\u8fdb\u800c\u5bfc\u81f4\u9519\u8bef\u7684\u8ba1\u7b97\u7ed3\u679c\u3002</p> <p>\u4e3a\u4e86\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u53ef\u4ee5\u5728\u51fd\u6570f\u4e2d\u5bf9\u5206\u6bcdm2\u8fdb\u884c\u5224\u65ad\uff0c\u5982\u679cm2\u4e3a0\uff0c\u5219\u5c06y[3]\u7684\u5bfc\u6570\u8bbe\u4e3a0\u3002\u8fd9\u6837\u53ef\u4ee5\u907f\u514d\u9664\u96f6\u9519\u8bef\uff0c\u5e76\u4fdd\u8bc1\u6c42\u89e3\u7ed3\u679c\u7684\u6b63\u786e\u6027\u3002\u4fee\u6539\u540e\u7684\u4ee3\u7801\u5982\u4e0b\uff1a</p> <pre><code># \u5b9a\u4e49\u4e8c\u5143\u5fae\u5206\u65b9\u7a0b\u51fd\u6570\ndef f(y, x, m1, m2, k1, k2, k3, k4, F, w, m_c):\n    if m2 == 0:\n        dydt = [y[2], y[3], (-k1 * y[0] - k2 * (y[0] - y[1]) - k3 * (y[2] - y[3]) ** 1.5 - k4 * y[2] + F * np.cos(w * x)) / (m1 + m_c), 0]\n    else:\n        dydt = [y[2], y[3], (-k1 * y[0] - k2 * (y[0] - y[1]) - k3 * (y[2] - y[3]) ** 1.5 - k4 * y[2] + F * np.cos(w * x)) / (m1 + m_c),\n                (k2 * (y[0] - y[1]) + k3 * (y[2] - y[3]) ** 1.5) / m2]\n    return dydt\n</code></pre> <p>\u5728\u4fee\u6539\u540e\u7684\u4ee3\u7801\u4e2d\uff0c\u6211\u4eec\u9996\u5148\u5bf9m2\u8fdb\u884c\u5224\u65ad\uff0c\u5982\u679cm2\u4e3a0\uff0c\u5219\u5c06y[3]\u7684\u5bfc\u6570\u8bbe\u4e3a0\uff0c\u5426\u5219\u6309\u539f\u6765\u7684\u65b9\u5f0f\u8ba1\u7b97y[3]\u7684\u5bfc\u6570\u3002\u8fd9\u6837\u53ef\u4ee5\u907f\u514d\u9664\u96f6\u9519\u8bef\uff0c\u5e76\u4fdd\u8bc1\u6c42\u89e3\u7ed3\u679c\u7684\u6b63\u786e\u6027\u3002</p> <p>\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u5728\u5b9e\u9645\u5e94\u7528\u4e2d\uff0c\u51fa\u73b0\u975e\u6cd5\u503c\u7684\u539f\u56e0\u53ef\u80fd\u4e0d\u4ec5\u4ec5\u662f\u9664\u96f6\u9519\u8bef\uff0c\u8fd8\u53ef\u80fd\u5305\u62ec\u5176\u4ed6\u60c5\u51b5\u3002\u56e0\u6b64\uff0c\u5728\u7f16\u5199\u7a0b\u5e8f\u65f6\uff0c\u9700\u8981\u5bf9\u53ef\u80fd\u51fa\u73b0\u7684\u975e\u6cd5\u503c\u8fdb\u884c\u5145\u5206\u7684\u5224\u65ad\u548c\u5904\u7406\uff0c\u4ee5\u4fdd\u8bc1\u7a0b\u5e8f\u7684\u6b63\u786e\u6027\u548c\u7a33\u5b9a\u6027\u3002</p> <p>user: </p> <p><pre><code>RuntimeWarning: invalid value encountered in scalar power\n(k2 * (y[0] - y[1]) + k3 * (y[2] - y[3]) ** 1.5) / m2]\n</code></pre> How should this error be resolved? The complete code is as follows: <pre><code>import numpy as np\nfrom scipy import *\nfrom scipy.integrate import odeint\nimport matplotlib.pyplot as plt\nfrom math import *\n\nm1 = 4.866\nm2 = 2433\nk1 = 31557.298\nk2 = 80000\nk3 = 10000\nk4 = 656.3516\nF = 6250\nw = 1.4005\nm_c = 1335.535\n\n\n# \u5b9a\u4e49\u4e8c\u5143\u5fae\u5206\u65b9\u7a0b\u51fd\u6570\ndef f(y, x, m1, m2, k1, k2, k3, k4, F, w, m_c):\n    return [y[2], y[3], (-k1 * y[0] - k2 * (y[0] - y[1]) - k3 * (y[2] - y[3]) ** 1.5 - k4 * y[2] + F * np.cos(w * x)) / (m1 + m_c),\n            (k2 * (y[0] - y[1]) + k3 * (y[2] - y[3]) ** 1.5) / m2]\n\n\n# \u521d\u59cb\u6761\u4ef6\ny0 = [0, 0, 0, 0]\n\n# \u81ea\u53d8\u91cf\u8303\u56f4\nx = np.linspace(0, 5, 1000)\n\n# \u6c42\u89e3\u5fae\u5206\u65b9\u7a0b\u7ec4\nsol = odeint(f, y0, x, args=(m1, m2, k1, k2, k3, k4, F, w, m_c))\n\n# \u5206\u522b\u63d0\u53d6y1\u548cy2\u7684\u503c\ny1 = sol[:, 0]\ny2 = sol[:, 1]\ny3 = sol[:, 2]\ny4 = sol[:, 3]\n\n# \u7ed8\u5236\u51fd\u6570\u56fe\u50cf\nplt.plot(x, y1, label='y1')\nplt.plot(x, y2, label='y2')\nplt.plot(x, y3, label='y3')\nplt.plot(x, y4, label='y4')\n\n# \u6dfb\u52a0\u56fe\u4f8b\u3001\u5750\u6807\u8f74\u6807\u7b7e\u548c\u6807\u9898\nplt.legend()\nplt.xlabel('x')\nplt.ylabel('y')\nplt.title('Solution of a System of Differential Equations')\n\n# \u663e\u793a\u56fe\u50cf\nplt.show()\n</code></pre></p> <p>chatgpt: </p> <p>This error occurs because an invalid value was encountered during the calculation of a scalar power operation. Specifically, in the fourth equation of the function <code>f</code>, when <code>(y[2] - y[3])</code> is negative, the power of <code>1.5</code> results in an imaginary number, which is not a valid value for a real scalar. This leads to the <code>RuntimeWarning</code> error.</p> <p>To fix this error, you can use the <code>numpy.sign</code> function to get the sign of the quantity <code>(y[2] - y[3])</code>, and then multiply it with the absolute value of this quantity raised to the power of <code>1.5</code>. The resulting expression will always be real and prevent this error from occurring. Here's the modified code:</p> <pre><code># Define the system of differential equations\ndef f(y, x, m1, m2, k1, k2, k3, k4, F, w, m_c):\n    sign = np.sign(y[2] - y[3])\n    return [y[2], y[3], (-k1 * y[0] - k2 * (y[0] - y[1]) - k3 * sign * abs(y[2] - y[3]) ** 1.5 - k4 * y[2] + F * np.cos(w * x)) / (m1 + m_c),\n            (k2 * (y[0] - y[1]) + k3 * sign * abs(y[2] - y[3]) ** 1.5) / m2]\n</code></pre> <p>In this modified code, we first compute the sign of <code>(y[2] - y[3])</code> using <code>numpy.sign</code>. We then use this sign to multiply the absolute value of <code>(y[2] - y[3])</code> raised to the power of <code>1.5</code>. This ensures that the expression is always real, regardless of the sign of <code>(y[2] - y[3])</code>, and resolves the <code>RuntimeWarning</code> error.</p> <p>Note that this error can occur in other situations where a scalar power operation results in an invalid value, so it's always a good idea to check for such cases and handle them appropriately to avoid errors.</p> <p>user: </p> <p>\u4f60\u80fd\u7528\u4e2d\u6587\u518d\u8f93\u51fa\u4e00\u904d\u5417\uff1f</p> <p>chatgpt: </p> <p>\u8fd9\u4e2a\u9519\u8bef\u662f\u56e0\u4e3a\u5728\u8ba1\u7b97\u6807\u91cf\u4e58\u65b9\u65f6\u51fa\u73b0\u4e86\u975e\u6cd5\u503c\u3002\u5177\u4f53\u6765\u8bf4\uff0c\u5728\u51fd\u6570f\u7684\u7b2c\u56db\u4e2a\u65b9\u7a0b\u4e2d\uff0c\u5f53<code>(y[2] - y[3])</code>\u4e3a\u8d1f\u6570\u65f6\uff0c\u5c061.5\u6b21\u5e42\u5e94\u7528\u4e8e\u8be5\u8d1f\u6570\u4f1a\u5bfc\u81f4\u865a\u6570\uff0c\u8fd9\u4e0d\u662f\u6807\u91cf\u7684\u6709\u6548\u503c\uff0c\u56e0\u6b64\u4f1a\u51fa\u73b0<code>RuntimeWarning</code>\u9519\u8bef\u3002</p> <p>\u4e3a\u4e86\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u53ef\u4ee5\u4f7f\u7528<code>numpy.sign</code>\u51fd\u6570\u83b7\u53d6<code>(y[2] - y[3])</code>\u7684\u7b26\u53f7\uff0c\u5e76\u5c06\u5176\u4e0e\u7edd\u5bf9\u503c\u76841.5\u6b21\u5e42\u76f8\u4e58\uff0c\u53ef\u4ee5\u786e\u4fdd\u8ba1\u7b97\u7ed3\u679c\u603b\u662f\u5b9e\u6570\uff0c\u4ece\u800c\u907f\u514d\u51fa\u73b0\u9519\u8bef\u3002\u4ee5\u4e0b\u662f\u4fee\u6539\u540e\u7684\u4ee3\u7801\uff1a</p> <pre><code># \u5b9a\u4e49\u4e8c\u5143\u5fae\u5206\u65b9\u7a0b\u51fd\u6570\ndef f(y, x, m1, m2, k1, k2, k3, k4, F, w, m_c):\n    sign = np.sign(y[2] - y[3])\n    return [y[2], y[3], (-k1 * y[0] - k2 * (y[0] - y[1]) - k3 * sign * abs(y[2] - y[3]) ** 1.5 - k4 * y[2] + F * np.cos(w * x)) / (m1 + m_c),\n            (k2 * (y[0] - y[1]) + k3 * sign * abs(y[2] - y[3]) ** 1.5) / m2]\n</code></pre> <p>\u5728\u4fee\u6539\u540e\u7684\u4ee3\u7801\u4e2d\uff0c\u6211\u4eec\u9996\u5148\u4f7f\u7528<code>numpy.sign</code>\u83b7\u53d6<code>(y[2] - y[3])</code>\u7684\u7b26\u53f7\uff0c\u7136\u540e\u5c06\u5176\u4e0e\u7edd\u5bf9\u503c\u76841.5\u6b21\u5e42\u76f8\u4e58\u3002\u8fd9\u5c06\u786e\u4fdd\u8ba1\u7b97\u7ed3\u679c\u603b\u662f\u5b9e\u6570\uff0c\u5e76\u907f\u514d\u51fa\u73b0<code>RuntimeWarning</code>\u9519\u8bef\u3002</p> <p>\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u8fd9\u79cd\u9519\u8bef\u53ef\u80fd\u4f1a\u5728\u5176\u4ed6\u60c5\u51b5\u4e0b\u51fa\u73b0\uff0c\u56e0\u6b64\uff0c\u5728\u7f16\u5199\u7a0b\u5e8f\u65f6\uff0c\u9700\u8981\u68c0\u67e5\u8fd9\u4e9b\u60c5\u51b5\u5e76\u8fdb\u884c\u9002\u5f53\u7684\u5904\u7406\uff0c\u4ee5\u907f\u514d\u51fa\u73b0\u9519\u8bef\u3002</p>"},{"location":"python%E7%9B%B8%E5%85%B3/sympy/","title":"SymPy","text":"<p> \u7ea6 2559 \u4e2a\u5b57  88 \u884c\u4ee3\u7801  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 10 \u5206\u949f</p>"},{"location":"python%E7%9B%B8%E5%85%B3/sympy/#1","title":"1","text":"<p>Quick examples \u00b7 sympy/sympy Wiki (github.com)</p>"},{"location":"python%E7%9B%B8%E5%85%B3/sympy/#2","title":"2","text":"<p><code>diff()</code>\u51fd\u6570\u7528\u6765\u6c42\u5bfc\uff0c\u7528\u6cd5 <code>diff(func, x, n)</code> \uff0cfunc\u662f\u8981\u6c42\u5bfc\u7684\u51fd\u6570\uff0cx\u662f\u8981\u5bf9\u5176\u6c42\u5bfc\u7684\u53d8\u91cf\uff0cn\u662f\u53ef\u9009\u7684\uff0c\u8868\u793a\u6c42n\u9636\u5bfc\u6570\uff0c\u9ed8\u8ba4\u4e3a1\u9636\u5bfc\u6570\u3002(\u6216 <code>diff(func, x, x, x, ...)</code>)</p> <pre><code>from sympy import symbols, diff\n\n# \u5b9a\u4e49\u4e8c\u5143\u51fd\u6570\nx, y = symbols('x y')\nf = x**2 + 2*x*y + y**2\n\n# \u5bf9x\u6c42\u504f\u5bfc\u6570\ndf_dx = diff(f, x)\nprint(\"\u5bf9x\u6c42\u504f\u5bfc\u6570\uff1a\", df_dx)\n\n# \u5bf9y\u6c42\u504f\u5bfc\u6570\ndf_dy = diff(f, y)\nprint(\"\u5bf9y\u6c42\u504f\u5bfc\u6570\uff1a\", df_dy)\n</code></pre> <p><code>.diff()</code>\u65b9\u6cd5\u4e5f\u53ef\u4ee5\u7528\u6765\u6c42\u5bfc\uff0c\u7528\u6cd5<code>func.diff(x, n)</code> (x\u4e3a\u6c42\u5bfc\u7684\u53d8\u91cf\uff0cn\u4e3a\u9636\u6570)\u6216<code>func.diff(x, x, x, ...)</code> (\u4f9d\u6b21\u6c42\u5bfc\u7684\u53d8\u91cf)\uff0c\u5219\u5bf9 \\(f(x)\\) \u6c42\u4e09\u9636\u5bfc\u4e3a</p> <pre><code>f(x).diff(x, 3)\n</code></pre> <p>\u6216</p> <pre><code>f(x).diff(x, x, x)\n</code></pre>"},{"location":"python%E7%9B%B8%E5%85%B3/sympy/#3","title":"3","text":"<p><code>Derivative</code>\u7c7b\u6784\u9020\u65b9\u6cd5\u4e0e <code>diff()</code>\u51fd\u6570\u8f83\u4e3a\u7c7b\u4f3c\uff0c\u4f7f\u7528\u65b9\u6cd5\u4e5f\u4e3a <code>Derivative(func, x, n)</code> \u6216 <code>Derivative(func, x, x, x, ...)</code>\uff0c\u4f46\u5982\u679c\u51fd\u6570 <code>func</code> \u4e3a\u4e00\u4e2a\u5177\u4f53\u7684\u51fd\u6570\u65f6\uff0c\u524d\u8005\u4e0d\u8f93\u51fa\u6c42\u5bfc\u7684\u7ed3\u679c\uff0c\u800c\u8f93\u51fa\u6c42\u5bfc\u7684\u8868\u8fbe\u5f0f\uff0c\u540e\u8005\u8f93\u51fa\u5bfc\u51fd\u6570\uff0c\u5982</p> <pre><code>g = x ** 2 + 2 * x + 1\nwrite_latex_md(latex(Derivative(g, x, x)))\nwrite_latex_md(latex(diff(g, x, x)))\n</code></pre> <p>\u7ed3\u679c\u5206\u522b\u4e3a $$ \\frac{d^{2}}{d x^{2}} \\left(x^{2} + 2 x + 1\\right) $$</p> <p>\u548c</p> <p>$$ 2 $$ \u800c\u4f7f\u7528 <code>.doit()</code> \u65b9\u6cd5\u50cf\u540e\u8005\u4e00\u6837\u53ef\u4ee5\u8f93\u51fa\u5bfc\u51fd\u6570</p>"},{"location":"python%E7%9B%B8%E5%85%B3/sympy/#4","title":"4","text":"<p>\u4f7f\u7528 <code>Rational</code> \u7c7b\u53ef\u4ee5\u8868\u793a\u5206\u6570\uff0c\u5982</p> <pre><code>Rational(3,2)*pi\n</code></pre> <p>\u8f93\u51fa\u4e3a $$ \\frac{3 \\pi}{2} $$ \u82e5\u5199\u6210</p> <pre><code>3 / 2 * pi\n</code></pre> <p>\u5219\u8f93\u51fa\u4e3a $$ 1.5\\pi $$</p>"},{"location":"python%E7%9B%B8%E5%85%B3/sympy/#5","title":"5","text":"<p><code>symbols.()</code> </p> <pre><code>x, y, z = symbols('x,y,z')\na, b, c = symbols('a b c')\n\n&gt;&gt;&gt; symbols('x:10')\n(x0, x1, x2, x3, x4, x5, x6, x7, x8, x9)\n\n&gt;&gt;&gt; symbols('x5:10')\n(x5, x6, x7, x8, x9)\n&gt;&gt;&gt; symbols('x5(:2)')\n(x50, x51)\n\n&gt;&gt;&gt; symbols('x5:10,y:5')\n(x5, x6, x7, x8, x9, y0, y1, y2, y3, y4)\n\n&gt;&gt;&gt; symbols(('x5:10', 'y:5'))\n((x5, x6, x7, x8, x9), (y0, y1, y2, y3, y4))\n</code></pre>"},{"location":"python%E7%9B%B8%E5%85%B3/sympy/#6","title":"6","text":"<p>\u8981\u8ba9sympy\u663e\u793a\u56fe\u50cf\uff0c\u9700\u8981\u5b89\u88c5matplotlib\u5305</p> <pre><code>pip install matplotlib\n</code></pre>"},{"location":"python%E7%9B%B8%E5%85%B3/sympy/#7","title":"7","text":"<p>2023\u6570\u6a21\u56fd\u8d5b</p> <p>\u5982\u679c\u9700\u8981\u5728\u51fd\u6570\u6216\u65b9\u7a0b\u4e2d\u6dfb\u52a0\u5bf9\u6570\u51fd\u6570\uff0c\u9700\u8981\u4f7f\u7528sympy\u5305\u91cc\u7684 <code>log(x, y)</code> \u51fd\u6570(x\u4e3a\u771f\u6570\uff0cy\u4e3a\u5e95\u6570)</p> <p>(\u5982\u679c\u5728\u5bfc\u5165sympy\u5305\u65f6\uff0c\u4f7f\u7528 <code>from sympy import *</code> \u5219\u53ef\u80fd\u4f1a\u4f7f\u5f97 python \u7684 math \u91cc\u7684\u6c42\u5bf9\u6570\u7684\u51fd\u6570\u88ab\u8986\u76d6)</p> chat log <p>user: </p> <p>sympy\u600e\u4e48\u4f7f\u7528?</p> <p>bing: </p> <p>SymPy \u662f\u4e00\u6b3e\u7528\u4e8e\u7b26\u53f7\u8ba1\u7b97\u7684 Python \u5e93\uff0c\u53ef\u4ee5\u8fdb\u884c\u7b26\u53f7\u8ba1\u7b97\u3001\u7b26\u53f7\u4ee3\u6570\u3001\u5fae\u79ef\u5206\u3001\u65b9\u7a0b\u5f0f\u6c42\u89e3\u3001\u6570\u503c\u8ba1\u7b97\u7b49\u64cd\u4f5c\u3002\u4ee5\u4e0b\u662f SymPy \u5e93\u7684\u57fa\u672c\u4f7f\u7528\u65b9\u6cd5\uff1a </p> <ol> <li>\u5b89\u88c5 SymPy \u5e93; \u5728\u547d\u4ee4\u884c\u4e2d\u8f93\u5165 pip install sympy\uff0c\u5373\u53ef\u5b89\u88c5 SymPy \u5e93\u3002\u5982\u679c\u5df2\u7ecf\u5b89\u88c5\u4e86 Anaconda\uff0c\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528 conda install sympy \u547d\u4ee4\u5b89\u88c5\u3002 </li> <li>\u5bfc\u5165 SymPy \u5e93; \u5728 Python \u4ee3\u7801\u4e2d\u5bfc\u5165 SymPy \u5e93\uff0c\u5982\u4e0b\u6240\u793a\uff1a <pre><code>from sympy import *\n</code></pre></li> <li>\u4f7f\u7528 SymPy \u5e93; \u4f8b\u5982\uff0c\u8981\u6c42\u89e3\u65b9\u7a0b\u5f0f x^2 + 2x + 1 = 0\uff0c\u53ef\u4ee5\u4f7f\u7528\u4ee5\u4e0b\u4ee3\u7801\uff1a <pre><code>from sympy import *\nx = symbols('x')\nsolve(x**2 + 2*x + 1, x)\n</code></pre> \u8fd9\u5c06\u8fd4\u56de [-1]\uff0c\u5373\u65b9\u7a0b\u5f0f\u7684\u89e3\u4e3a -1\u3002</li> </ol> <p>\u5e0c\u671b\u8fd9\u80fd\u5e2e\u5230\u4f60\uff01</p> <p>user: </p> <p>Rational\u51fd\u6570\u6709\u4ec0\u4e48\u4f5c\u7528\uff1f</p> <p>bing: </p> <p>\u6709\u7406\u51fd\u6570\u662f\u4efb\u4f55\u53ef\u4ee5\u7531\u6709\u7406\u5206\u5f0f\u5b9a\u4e49\u7684\u51fd\u6570\uff0c\u5176\u4e2d\u6709\u7406\u5206\u5f0f\u662f\u4e00\u79cd\u4ee3\u6570\u5206\u5f0f\uff0c\u5176\u5206\u5b50\u548c\u5206\u6bcd\u90fd\u662f\u591a\u9879\u5f0f\u3002\u591a\u9879\u5f0f\u7684\u7cfb\u6570\u4e0d\u5fc5\u662f\u6709\u7406\u6570\uff1b\u5b83\u4eec\u53ef\u4ee5\u5728\u4efb\u4f55\u57dfK\u4e2d\u53d6\u503c<sup>1</sup>\u3002</p> <p>\u6709\u7406\u51fd\u6570\u5728\u6570\u5b66\u4e2d\u6709\u5e7f\u6cdb\u7684\u5e94\u7528\uff0c\u4f8b\u5982\u5728\u5fae\u79ef\u5206\u4e2d\uff0c\u6709\u7406\u51fd\u6570\u662f\u4e00\u7c7b\u53ef\u4ee5\u88ab\u79ef\u5206\u7684\u51fd\u6570\u3002\u5728\u4ee3\u6570\u51e0\u4f55\u4e2d\uff0c\u6709\u7406\u51fd\u6570\u662f\u4e00\u7c7b\u53ef\u4ee5\u88ab\u5b9a\u4e49\u5728\u4ee3\u6570\u7c07\u4e0a\u7684\u51fd\u6570\u3002<sup>1</sup></p> <p>\u5e0c\u671b\u8fd9\u80fd\u56de\u7b54\u4f60\u7684\u95ee\u9898\uff01</p> <p>user: </p> <p>sympy\u4e2d\u7684 rational\u6709\u4ec0\u4e48\u4f5c\u7528\uff1f</p> <p>bing: </p> <p>\u5728SymPy\u4e2d\uff0cRational\u51fd\u6570\u662f\u7528\u4e8e\u5904\u7406\u6709\u7406\u6570\u7684\u51fd\u6570\u3002\u6709\u7406\u6570\u662f\u53ef\u4ee5\u8868\u793a\u4e3a\u4e24\u4e2a\u6574\u6570\uff08\u5206\u5b50p\u548c\u975e\u96f6\u5206\u6bcdq\uff09\u7684\u5546\u6216\u5206\u6570p/q\u7684\u4efb\u4f55\u6570\u5b57\u3002Rational\u51fd\u6570\u53ef\u4ee5\u5c06\u6d6e\u70b9\u6570\u8f6c\u6362\u4e3a\u6709\u7406\u6570\u5f62\u5f0f\uff0c\u4e5f\u53ef\u4ee5\u68c0\u67e5\u5143\u7d20\u662f\u5426\u4e3a\u6709\u7406\u6570\uff0c\u8fd4\u56de\u5e03\u5c14\u503cTrue\u6216False<sup>1</sup> <sup>2</sup> <sup>3</sup>.</p> <p>\u5e0c\u671b\u8fd9\u80fd\u56de\u7b54\u4f60\u7684\u95ee\u9898\uff01</p> <p>user: </p> <p>\u5982\u4f55\u5728py\u6587\u4ef6\u4e2d\u8c03\u7528\u67d0\u4e2a\u8f6f\u4ef6\u6253\u5f00\u67d0\u4e2a\u6587\u4ef6\uff1f</p> <p>bing: </p> <p>\u4f60\u53ef\u4ee5\u4f7f\u7528Python\u7684subprocess\u6a21\u5757\u6765\u8c03\u7528\u5176\u4ed6\u8f6f\u4ef6\u3002\u4f8b\u5982\uff0c\u5982\u679c\u4f60\u60f3\u5728Windows\u4e0a\u4f7f\u7528\u8bb0\u4e8b\u672c\u6253\u5f00\u4e00\u4e2a\u6587\u4ef6\uff0c\u4f60\u53ef\u4ee5\u4f7f\u7528\u4ee5\u4e0b\u4ee3\u7801\uff1a</p> <pre><code>import subprocess\nsubprocess.Popen(['notepad.exe', 'file.txt'])\n</code></pre> <p>\u8fd9\u5c06\u6253\u5f00\u8bb0\u4e8b\u672c\u5e76\u6253\u5f00\u540d\u4e3afile.txt\u7684\u6587\u4ef6\u3002<sup>1</sup> <sup>2</sup> <sup>3</sup></p> <p>\u5e0c\u671b\u8fd9\u80fd\u56de\u7b54\u4f60\u7684\u95ee\u9898\uff01</p> <p>user: </p> <p>\u5982\u679c\u6211\u60f3\u4f7f\u7528\u5176\u4ed6\u8f6f\u4ef6\u5462\uff0c\u6bd4\u5982vs code</p> <p>bing: </p> <p>\u4f60\u53ef\u4ee5\u4f7f\u7528Python\u7684subprocess\u6a21\u5757\u6765\u8c03\u7528\u5176\u4ed6\u8f6f\u4ef6\u3002\u4f8b\u5982\uff0c\u5982\u679c\u4f60\u60f3\u5728Windows\u4e0a\u4f7f\u7528VS Code\u6253\u5f00\u4e00\u4e2a\u6587\u4ef6\uff0c\u4f60\u53ef\u4ee5\u4f7f\u7528\u4ee5\u4e0b\u4ee3\u7801\uff1a</p> <pre><code>import subprocess\nsubprocess.Popen(['code', 'file.txt'])\n</code></pre> <p>\u8fd9\u5c06\u6253\u5f00VS Code\u5e76\u6253\u5f00\u540d\u4e3afile.txt\u7684\u6587\u4ef6\u3002<sup>1</sup> <sup>2</sup> <sup>3</sup></p> <p>\u5e0c\u671b\u8fd9\u80fd\u56de\u7b54\u4f60\u7684\u95ee\u9898\uff01</p> <p>user: </p> <p>diff\u51fd\u6570\u600e\u4e48\u7528\uff1f</p> <p>bing: </p> <p>\u5728Python\u4e2d\uff0cdiff\u51fd\u6570\u53ef\u4ee5\u6709\u4e0d\u540c\u7684\u542b\u4e49\uff0c\u5177\u4f53\u53d6\u51b3\u4e8e\u4f60\u4f7f\u7528\u7684\u5e93\u3002\u4f8b\u5982\uff0c\u5982\u679c\u4f60\u4f7f\u7528\u7684\u662fPython\u7684set\u5e93\uff0c\u90a3\u4e48difference()\u65b9\u6cd5\u53ef\u4ee5\u7528\u4e8e\u8fd4\u56de\u96c6\u5408\u7684\u5dee\u96c6\uff0c\u5373\u8fd4\u56de\u7684\u96c6\u5408\u5143\u7d20\u5305\u542b\u5728\u7b2c\u4e00\u4e2a\u96c6\u5408\u4e2d\uff0c\u4f46\u4e0d\u5305\u542b\u5728\u7b2c\u4e8c\u4e2a\u96c6\u5408\u4e2d\u3002</p> <p>user: </p> <p>sympy\u7684diff\u51fd\u6570\u600e\u4e48\u7528\uff1f</p> <p>bing: </p> <p>\u5728Python\u4e2d\uff0c\u4f60\u53ef\u4ee5\u4f7f\u7528sympy\u5e93\u4e2d\u7684diff()\u51fd\u6570\u6765\u6c42\u5bfc\u6570\u3002diff()\u51fd\u6570\u7684\u57fa\u672c\u7528\u6cd5\u662f\uff1adiff(func,x,n)\uff0c\u5176\u4e2d\uff0cfunc\u662f\u8981\u6c42\u5bfc\u7684\u51fd\u6570\uff0cx\u662f\u8981\u5bf9\u5176\u6c42\u5bfc\u7684\u53d8\u91cf\uff0cn\u662f\u53ef\u9009\u7684\uff0c\u8868\u793a\u6c42n\u9636\u5bfc\u6570\uff0c\u9ed8\u8ba4\u4e3a1\u9636\u5bfc\u6570\u3002<sup>1</sup> <sup>2</sup> <sup>3</sup></p> <p>\u4f8b\u5982\uff0c\u5982\u679c\u4f60\u60f3\u5bf9\u4e00\u4e2a\u4e8c\u5143\u51fd\u6570\u6c42\u504f\u5bfc\u6570\uff0c\u4f60\u53ef\u4ee5\u4f7f\u7528\u4ee5\u4e0b\u4ee3\u7801\uff1a<sup>4</sup></p> <pre><code>from sympy import symbols, diff\n\n# \u5b9a\u4e49\u4e8c\u5143\u51fd\u6570\nx, y = symbols('x y')\nf = x**2 + 2*x*y + y**2\n\n# \u5bf9x\u6c42\u504f\u5bfc\u6570\ndf_dx = diff(f, x)\nprint(\"\u5bf9x\u6c42\u504f\u5bfc\u6570\uff1a\", df_dx)\n\n# \u5bf9y\u6c42\u504f\u5bfc\u6570\ndf_dy = diff(f, y)\nprint(\"\u5bf9y\u6c42\u504f\u5bfc\u6570\uff1a\", df_dy)\n</code></pre> <p>\u5e0c\u671b\u8fd9\u80fd\u56de\u7b54\u4f60\u7684\u95ee\u9898\uff01</p> <p>user: </p> <p><pre><code>from sympy import *\nf(x).diff(x, x)\n</code></pre> \u662f\u4ec0\u4e48\u610f\u601d</p> <p>bing: </p> <p>\u8fd9\u6bb5\u4ee3\u7801\u7684\u610f\u601d\u662f\uff1a\u5b9a\u4e49\u4e00\u4e2a\u51fd\u6570f(x)\uff0c\u7136\u540e\u5bf9\u8fd9\u4e2a\u51fd\u6570\u8fde\u7eed\u6c42\u4e24\u6b21\u5bfc\u6570\u3002</p> <p>\u5176\u4e2d\uff0cf(x).diff(x, x)\u8868\u793a\u5bf9f(x)\u8fd9\u4e2a\u51fd\u6570\u8fdb\u884c\u4e24\u6b21\u6c42\u5bfc\uff0c\u5373\u6c42\u4e8c\u9636\u5bfc\u6570\u3002</p> <p>\u5e0c\u671b\u8fd9\u80fd\u56de\u7b54\u4f60\u7684\u95ee\u9898\uff01</p> <p>user: </p> <p>\u90a3\u4e48\u5982\u679c\u6c42f(x)\u4e09\u9636\u5bfc\uff0c\u5e94\u8be5\u5982\u4f55\u5199\uff1f</p> <p>bing: </p> <p>\u5982\u679c\u8981\u6c42f(x)\u7684\u4e09\u9636\u5bfc\u6570\uff0c\u4f60\u53ef\u4ee5\u4f7f\u7528\u4ee5\u4e0b\u4ee3\u7801\uff1a</p> <pre><code>from sympy import *\nf(x).diff(x, 3)\n</code></pre> <p>\u5176\u4e2d\uff0cdiff()\u51fd\u6570\u7684\u7b2c\u4e8c\u4e2a\u53c2\u6570\u8868\u793a\u8981\u6c42\u7684\u5bfc\u6570\u9636\u6570\uff0c\u8fd9\u91cc\u662f3\uff0c\u5373\u6c42\u4e09\u9636\u5bfc\u6570\u3002</p> <p>\u5e0c\u671b\u8fd9\u80fd\u56de\u7b54\u4f60\u7684\u95ee\u9898\uff01</p> <p>user: </p> <p>\u90a3\u4e48\u4e8c\u9636\u5bfc\u6570\u4e3a\u4ec0\u4e48\u662ff(x).diff(x,x)</p> <p>bing: </p> <p>\u5728Python\u4e2d\uff0c\u4f60\u53ef\u4ee5\u4f7f\u7528sympy\u5e93\u4e2d\u7684diff()\u51fd\u6570\u6765\u6c42\u5bfc\u6570\u3002diff()\u51fd\u6570\u7684\u57fa\u672c\u7528\u6cd5\u662f\uff1adiff(func,x,n)\uff0c\u5176\u4e2d\uff0cfunc\u662f\u8981\u6c42\u5bfc\u7684\u51fd\u6570\uff0cx\u662f\u8981\u5bf9\u5176\u6c42\u5bfc\u7684\u53d8\u91cf\uff0cn\u662f\u53ef\u9009\u7684\uff0c\u8868\u793a\u6c42n\u9636\u5bfc\u6570\uff0c\u9ed8\u8ba4\u4e3a1\u9636\u5bfc\u6570\u3002</p> <p>\u56e0\u6b64\uff0cf(x).diff(x,x)\u8868\u793a\u5bf9f(x)\u8fd9\u4e2a\u51fd\u6570\u8fdb\u884c\u4e24\u6b21\u6c42\u5bfc\uff0c\u5373\u6c42\u4e8c\u9636\u5bfc\u6570\u3002</p> <p>\u5e0c\u671b\u8fd9\u80fd\u56de\u7b54\u4f60\u7684\u95ee\u9898\uff01</p> <p>user: </p> <p>\u90a3\u4e48 sympy Derivative\u51fd\u6570\u662f\u4ec0\u4e48\u610f\u601d\uff1f</p> <p>bing: </p> <p>\u5728Python\u4e2d\uff0c\u4f60\u53ef\u4ee5\u4f7f\u7528sympy\u5e93\u4e2d\u7684Derivative()\u51fd\u6570\u6765\u6c42\u5bfc\u6570\u3002Derivative()\u51fd\u6570\u7684\u57fa\u672c\u7528\u6cd5\u662f\uff1aDerivative(func,x)\uff0c\u5176\u4e2d\uff0cfunc\u662f\u8981\u6c42\u5bfc\u7684\u51fd\u6570\uff0cx\u662f\u8981\u5bf9\u5176\u6c42\u5bfc\u7684\u53d8\u91cf\u3002</p> <p>\u4e0ediff()\u51fd\u6570\u4e0d\u540c\u7684\u662f\uff0cDerivative()\u51fd\u6570\u8fd4\u56de\u4e00\u4e2a\u672a\u8bc4\u4f30\u7684\u5bfc\u6570\uff0c\u800c\u4e0d\u662f\u5df2\u7ecf\u8ba1\u7b97\u51fa\u6765\u7684\u5bfc\u6570\u3002\u5982\u679c\u8981\u8ba1\u7b97\u8fd9\u4e2a\u5bfc\u6570\uff0c\u4f60\u53ef\u4ee5\u4f7f\u7528doit()\u65b9\u6cd5\u3002</p> <p>\u4f8b\u5982\uff0c\u5982\u679c\u4f60\u60f3\u5bf9\u4e00\u4e2a\u51fd\u6570f(x)\u6c42\u4e00\u9636\u5bfc\u6570\uff0c\u4f60\u53ef\u4ee5\u4f7f\u7528\u4ee5\u4e0b\u4ee3\u7801\uff1a<sup>1</sup></p> <pre><code>from sympy import symbols, Derivative\n\n# \u5b9a\u4e49\u51fd\u6570\nx = symbols('x')\nf = x**2 + 2*x + 1\n\n# \u5bf9x\u6c42\u4e00\u9636\u5bfc\u6570\ndf_dx = Derivative(f, x).doit()\nprint(\"\u5bf9x\u6c42\u4e00\u9636\u5bfc\u6570\uff1a\", df_dx)\n</code></pre> <p>\u5e0c\u671b\u8fd9\u80fd\u56de\u7b54\u4f60\u7684\u95ee\u9898\uff01</p> <p>user: </p> <p>\u5982\u4f55\u4f7f\u7528sympy\u6c42\u89e3\u5fae\u5206\u65b9\u7a0b\u7ec4\uff1f</p> <p>bing: </p> <p>\u5728Python\u4e2d\uff0c\u4f60\u53ef\u4ee5\u4f7f\u7528sympy\u5e93\u4e2d\u7684dsolve()\u51fd\u6570\u6765\u6c42\u89e3\u5fae\u5206\u65b9\u7a0b\u7ec4\u3002dsolve()\u51fd\u6570\u7684\u57fa\u672c\u7528\u6cd5\u662f\uff1adsolve(equations)\uff0c\u5176\u4e2d\uff0cequations\u662f\u5fae\u5206\u65b9\u7a0b\u7ec4\u3002</p> <p>\u4f8b\u5982\uff0c\u5982\u679c\u4f60\u60f3\u6c42\u89e3\u4e00\u4e2a\u4e8c\u9636\u5fae\u5206\u65b9\u7a0b\u7ec4y'' + y = 0\uff0c\u4f60\u53ef\u4ee5\u4f7f\u7528\u4ee5\u4e0b\u4ee3\u7801\uff1a<sup>1</sup></p> <pre><code>from sympy import symbols, Function, dsolve\n\n# \u5b9a\u4e49\u51fd\u6570\nx = symbols('x')\ny = Function('y')(x)\n\n# \u6c42\u89e3\u5fae\u5206\u65b9\u7a0b\u7ec4\ndsolve(y.diff(x, x) + y, y)\n</code></pre> <p>\u5e0c\u671b\u8fd9\u80fd\u56de\u7b54\u4f60\u7684\u95ee\u9898\uff01</p> <p>user: </p> <p>\u5982\u4f55\u4f7f\u7528 sympy \u6c42\u89e3 \u4e8c\u5143\u4e8c\u9636\u7ebf\u6027\u5fae\u5206\u65b9\u7a0b\u7ec4</p> <p>bing: </p> <p>\u5728Python\u4e2d\uff0c\u4f60\u53ef\u4ee5\u4f7f\u7528sympy\u5e93\u4e2d\u7684dsolve()\u51fd\u6570\u6765\u6c42\u89e3\u5fae\u5206\u65b9\u7a0b\u7ec4\u3002dsolve()\u51fd\u6570\u7684\u57fa\u672c\u7528\u6cd5\u662f\uff1adsolve(equations)\uff0c\u5176\u4e2d\uff0cequations\u662f\u5fae\u5206\u65b9\u7a0b\u7ec4\u3002</p> <p>\u4f8b\u5982\uff0c\u5982\u679c\u4f60\u60f3\u6c42\u89e3\u4e00\u4e2a\u4e8c\u5143\u4e8c\u9636\u7ebf\u6027\u5fae\u5206\u65b9\u7a0b\u7ec4\uff0c\u4f60\u53ef\u4ee5\u4f7f\u7528\u4ee5\u4e0b\u4ee3\u7801\uff1a</p> <pre><code>from sympy import symbols, Function, dsolve\n\n# \u5b9a\u4e49\u51fd\u6570\nx = symbols('x')\ny1 = Function('y1')(x)\ny2 = Function('y2')(x)\n\n# \u6c42\u89e3\u5fae\u5206\u65b9\u7a0b\u7ec4\ndsolve((y1.diff(x, x) + y1 + y2.diff(x), y2.diff(x, x) + y2 - y1), (y1, y2))\n</code></pre> <p>\u5e0c\u671b\u8fd9\u80fd\u56de\u7b54\u4f60\u7684\u95ee\u9898\uff01</p>"},{"location":"yolo/yolov5/","title":"YOLOv5","text":"<p> \u7ea6 176 \u4e2a\u5b57  50 \u884c\u4ee3\u7801  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 1 \u5206\u949f</p>"},{"location":"yolo/yolov5/#1","title":"1","text":"<p>\u5b89\u88c5gpu\u7248\u672c\u7684torch\u548ctorchvision</p> <p>Previous PyTorch Versions | PyTorch</p> <p>\u627e <code>Wheel</code></p> <p>\u4f8b</p> <p>v1.12.1</p> <p>Conda</p> <p>...</p> <p>Wheel</p> <p>OSX</p> <pre><code>pip install torch==1.12.1 torchvision==0.13.1 torchaudio==0.12.1\n</code></pre> <p>Linux and Windows</p> <pre><code># ROCM 5.1.1 (Linux only)\npip install torch==1.12.1+rocm5.1.1 torchvision==0.13.1+rocm5.1.1 torchaudio==0.12.1 --extra-index-url  https://download.pytorch.org/whl/rocm5.1.1\n# CUDA 11.6\npip install torch==1.12.1+cu116 torchvision==0.13.1+cu116 torchaudio==0.12.1 --extra-index-url https://download.pytorch.org/whl/cu116\n# CUDA 11.3\npip install torch==1.12.1+cu113 torchvision==0.13.1+cu113 torchaudio==0.12.1 --extra-index-url https://download.pytorch.org/whl/cu113\n# CUDA 10.2\npip install torch==1.12.1+cu102 torchvision==0.13.1+cu102 torchaudio==0.12.1 --extra-index-url https://download.pytorch.org/whl/cu102\n# CPU only\npip install torch==1.12.1+cpu torchvision==0.13.1+cpu torchaudio==0.12.1 --extra-index-url https://download.pytorch.org/whl/cpu\n</code></pre>"},{"location":"yolo/yolov5/#2","title":"2","text":"<pre><code>ImportError: urllib3 v2.0 only supports OpenSSL 1.1.1+, currently the 'ssl' module is compiled with 'OpenSSL 1.0.2u  20 Dec 2019'. See: https://github.com/urllib3/urllib3/issues/2168\n</code></pre> <p>yolov5\u4e0d\u8981\u6c42<code>urllib3</code> \u7248\u672c\uff0c\u5219\u964d\u4f4e <code>urllib3</code> \u7684\u7248\u672c</p> <p>urllib3 v2.0 only supports OpenSSL 1.1.1+, currently the 'ssl' module is compile - \u6398\u91d1</p> <p>\u67e5\u8be2\u53ef\u5b89\u88c5\u7684 <code>urlib3</code> \u7248\u672c\uff1a</p> <pre><code>pip install urllib3==\n</code></pre> <p>\u5b89\u88c5</p> <pre><code>pip install urllib3==1.x\n</code></pre> <p>(8\u6761\u6d88\u606f) openssl \u9ed8\u8ba4\u7248\u672c\u95ee\u9898\uff08Anaconda\u76f8\u5173\uff09_anaconda openssl_wjh_test\u7684\u535a\u5ba2-CSDN\u535a\u5ba2</p> <p>\u5c1d\u8bd5\u66f4\u6539 <code>openssl</code> \u4f46\u6ca1\u7528</p>"},{"location":"yolo/yolov5/#3","title":"3","text":"<p>Quickstart - Ultralytics YOLOv8 Docs</p> <p>\u4e3b\u76ee\u5f55\u4e0b\u521b\u5efa <code>test.py</code> \u6587\u4ef6\uff1a</p> <pre><code>import torch\n\n# Model\nmodel = torch.hub.load(\"ultralytics/yolov5\", \"yolov5s\")  # or yolov5n - yolov5x6, custom\n\n# Images\nimg = \"zidane.jpg\"  # or file, Path, PIL, OpenCV, numpy, list\n\n# Inference\nresults = model(img)\n\n# Results\nresults.show()  # or .show(), .save(), .crop(), .pandas(), etc.\n</code></pre> <pre><code>import torch\n\n# Model\nmodel = torch.hub.load(\"ultralytics/yolov5\", \"yolov5s\")  # or yolov5n - yolov5x6, custom\n\n# Images\nimg = \"https://ultralytics.com/images/zidane.jpg\"  # or file, Path, PIL, OpenCV, numpy, list\n\n# Inference\nresults = model(img)\n\n# Results\nresults.print()  # or .show(), .save(), .crop(), .pandas(), etc.\n</code></pre> <p>\u6307\u5357\u4e2d\u7684\u539f\u59cb\u7684\u4ee3\u7801 <code>https://ultralytics.com/images/zidane.jpg</code> \u9700\u8981\u68af\u5b50\u52a0\u8f7d\uff0c\u63d0\u524d\u4e0b\u8f7d\uff0c</p> <p></p> <p></p> <p>\u6216\u81ea\u5b9a\u4e49\u4e00\u4e2a\u56fe\u7247</p> <p>\u5c06 <code>results.print()</code> \u6539\u6210 <code>results.show()</code></p> <p>\u53ef\u5148\u4e0b\u8f7d\u9884\u8bad\u7ec3\u6a21\u578b\uff1a</p> <pre><code>https://github.com/ultralytics/yolov5/releases/download/vx.x/yolov5n.pt\n</code></pre> <pre><code>https://github.com/ultralytics/yolov5/releases/download/vx.x/yolov5s.pt\n</code></pre> <pre><code>https://github.com/ultralytics/yolov5/releases/download/vx.x/yolov5m.pt\n</code></pre> <pre><code>https://github.com/ultralytics/yolov5/releases/download/vx.x/yolov5l.pt\n</code></pre> <pre><code>https://github.com/ultralytics/yolov5/releases/download/vx.x/yolov5x.pt\n</code></pre>"},{"location":"yolo/yolov5/#4","title":"4","text":"<p>coco \u6570\u636e\u96c6\u7684\u56fe\u7247\u53ef\u4ee5\u5728COCO - Ultralytics YOLOv8 Docs\u91cc\u627e\u5230</p> <pre><code># Download data\n  urls = ['http://images.cocodataset.org/zips/train2017.zip',  # 19G, 118k images\n          'http://images.cocodataset.org/zips/val2017.zip',  # 1G, 5k images\n          'http://images.cocodataset.org/zips/test2017.zip']  # 7G, 41k images (optional)\n  download(urls, dir=dir / 'images', threads=3)\n</code></pre>"},{"location":"yolo/yolov7/","title":"YOLOv7","text":"<p> \u7ea6 146 \u4e2a\u5b57  4 \u884c\u4ee3\u7801  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 1 \u5206\u949f</p>"},{"location":"yolo/yolov7/#1","title":"1","text":"<p>(7\u6761\u6d88\u606f) YOLOv7\u4fdd\u59c6\u7ea7\u6559\u7a0b\uff08\u4e2a\u4eba\u8e29\u5751\u65e0\u6570\uff09----\u8bad\u7ec3\u81ea\u5df1\u7684\u6570\u636e\u96c6_yolov7\u4ee3\u7801\u4e0b\u8f7d_AmbitionToFree\u7684\u535a\u5ba2-CSDN\u535a\u5ba2</p>"},{"location":"yolo/yolov7/#2","title":"2","text":"<p>detect.py\u6743\u91cd\u5728github\u5b98\u7f51<code>Testing</code>\u4e0b\u4e0b\u8f7d</p> <p>(8\u6761\u6d88\u606f) YOLOv7\uff08\u76ee\u6807\u68c0\u6d4b\uff09\u5165\u95e8\u6559\u7a0b\u8be6\u89e3---\u68c0\u6d4b\uff0c\u63a8\u7406\uff0c\u8bad\u7ec3_yolov\u76ee\u6807\u68c0\u6d4b_\u87ba\u4e1d\u5de5\u4eba\u7684\u535a\u5ba2-CSDN\u535a\u5ba2</p> <p>\u53ef\u4ee5\u5728<code>detect.py</code>\u4e2d\u4fee\u6539</p> <pre><code>    parser.add_argument('--weights', nargs='+', type=str, default='weights/yolov7.pt', help='model.pt path(s)')\n    # parser.add_argument('--weights', nargs='+', type=str, default='yolov7.pt', help='model.pt path(s)')\n</code></pre> <p>\u6216\u76f4\u63a5\u547d\u4ee4\u884c\u8fd0\u884c\u6307\u4ee4</p> <pre><code>python detect.py --weights weights/yolov7.pt --source inference/images \n</code></pre>"},{"location":"yolo/yolov7/#3","title":"3","text":"<p><code>split.py</code>\u6587\u4ef6\u653e\u5728yolov7\u6839\u76ee\u5f55\u4e0b</p>"},{"location":"yolo/yolov7/#4","title":"4","text":"<p>gpu\u53ea\u6709\u4e00\u4e2a\u5c31\u53ea\u7528<code>0</code></p>"},{"location":"yolo/yolov7/#5","title":"5","text":"<p>[WinError 1455] \u9875\u9762\u6587\u4ef6\u592a\u5c0f\uff0c\u65e0\u6cd5\u5b8c\u6210\u64cd\u4f5c\u3002</p> <p>(8\u6761\u6d88\u606f) \u591a\u79cd\u65b9\u6cd5\u5f7b\u5e95\u89e3\u51b3pycharm\u4e2d: OSError: [WinError 1455] \u9875\u9762\u6587\u4ef6\u592a\u5c0f\uff0c\u65e0\u6cd5\u5b8c\u6210\u64cd\u4f5c \u7684\u95ee\u9898_pycharm\u8fd0\u884c\u51fa\u73b0oserror_\u5b64\u67d2\u300c\u4e00\u8d77\u5b66\u8ba1\u7b97\u673a\u300d\u7684\u535a\u5ba2-CSDN\u535a\u5ba2]</p> <p>[(8\u6761\u6d88\u606f) YOLOV7:OSError: WinError 1455] \u9875\u9762\u6587\u4ef6\u592a\u5c0f\uff0c\u65e0\u6cd5\u5b8c\u6210\u64cd\u4f5c\u7684 \u6700\u7ec8\u89e3\u51b3\u65b9\u6848_oserror: [winerror 1455] \u9875\u9762\u6587\u4ef6\u592a\u5c0f,\u65e0\u6cd5\u5b8c\u6210\u64cd\u4f5c_\u6211\u8ffd\u9010\u843d\u65e5\u4e0d\u4f11\uff0c\u5374\u4e0d\u77e5\u4f60\u5728\u7b49\u6211\u56de\u5934\u7684\u535a\u5ba2-CSDN\u535a\u5ba2</p> <p>\u4ee5\u53ca\uff0c\u8c03\u6574<code>--batch-size</code>\u5927\u5c0f\uff0c</p> <pre><code>python train.py --weights weights/yolov7_training.pt --cfg cfg/training/yolov7-Helmet.yaml --data data/Helmet.yaml --device 0 --batch-size 2\n</code></pre>"},{"location":"yolo/yolov8/","title":"YOLOv8","text":"<p> \u7ea6 849 \u4e2a\u5b57  175 \u884c\u4ee3\u7801  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 5 \u5206\u949f</p> <p>yolov8\u5b98\u65b9github\u4ed3\u5e93</p> <p>ultralytics/README.zh-CN.md at main \u00b7 ultralytics/ultralytics \u00b7 GitHub</p> <p>yolov8\u5b98\u65b9\u4f7f\u7528\u6587\u6863</p> <p>Home - Ultralytics YOLOv8 Docs</p>"},{"location":"yolo/yolov8/#1","title":"1","text":"<p>(Windows)RuntimeError\u89e3\u51b3\u65b9\u6848</p> <p>Windows\u4f7f\u7528PyTorch\u9047\u5230RuntimeError: Unable to find a valid cuDNN algorithm to run convolution\u7684\u89e3\u51b3\u65b9\u6848 - \u77e5\u4e4e (zhihu.com)</p>"},{"location":"yolo/yolov8/#2","title":"2","text":"<pre><code>RuntimeError: Dataset 'data\\Helmet.yaml' error  \nDataset 'data\\Helmet.yaml' images not found , missing paths ['C:\\\\Users\\\\Administrator\\\\datasets\\\\data\\\\datasets\\\\Helmet\\\\val_list.txt']\nNote dataset download directory is 'C:\\Users\\Administrator\\datasets'. You can update this in 'C:\\Users\\Administrator\\AppData\\Roaming\\Ultralytics\\settings.yaml'\n</code></pre> <p>\u4fee\u6539\uff0c</p> <p>\u53ef\u4ee5\u6539\u6210\u76f8\u5bf9\u8def\u5f84</p> <pre><code>datasets_dir: ..\\\n</code></pre>"},{"location":"yolo/yolov8/#3","title":"3","text":"<pre><code>RuntimeError: \n            Attempt to start a new process before the current process\n            has finished its bootstrapping phase.\n            This probably means that you are on Windows and you have\n            forgotten to use the proper idiom in the main module:\n                if __name__ == '__main__':\n                    freeze_support()\n                    ...\n            The \"freeze_support()\" line can be omitted if the program\n            is not going to be frozen to produce a Windows executable.\n</code></pre> <p>\u64cd\u4f5c\uff1a</p> <pre><code>model = YOLO(\"yolov8n.pt\")  # \u52a0\u8f7d\u9884\u8bad\u7ec3\u6a21\u578b\uff08\u5efa\u8bae\u7528\u4e8e\u8bad\u7ec3\uff09\n\nif __name__ == '__main__': # \u6dfb\u52a0__main__\n    # \u4f7f\u7528\u6a21\u578b\n    model.train(data=\"data/Helmet.yaml\", epochs=3, batch=2[, name=\"Name\"])  # \u8bad\u7ec3\u6a21\u578b\n</code></pre> <p>python - YOLOv8 : RuntimeError: An attempt has been made to start a new process before the current process has finished its bootstrapping phase - Stack Overflow</p>"},{"location":"yolo/yolov8/#4","title":"4","text":"<p>MemoryError \u8c03\u6574 <code>batch=</code></p> <p>About Memory Error while Training yolov8x-seg \u00b7 Issue #2916 \u00b7 ultralytics/ultralytics (github.com)</p>"},{"location":"yolo/yolov8/#5","title":"5","text":"<p>\u9875\u9762\u5927\u5c0f\u4e0d\u591f\uff1a</p> <p>python - How to efficiently run multiple Pytorch Processes / Models at once ? Traceback: The paging file is too small for this operation to complete - Stack Overflow</p> <pre><code>OSError: [WinError 1455] The paging file is too small for this operation to complete. Error loading \"...\\cusolver64_xx.dll    ...\\cudnn_adv_infer64_8.dll\" or one of its dependencies.\n</code></pre> <p>\u65b0\u5efa\u6587\u4ef6 <code>fixNvPe.py</code></p> <p>Python Script to disable ASLR and make nv fatbins read-only to reduce memory commit (github.com)</p> fixNvPe.py <pre><code># Simple script to disable ASLR and make .nv_fatb sections read-only\n# Requires: pefile  ( python -m pip install pefile )\n# Usage:  fixNvPe.py --input path/to/*.dll\n\nimport argparse\nimport pefile\nimport glob\nimport os\nimport shutil\n\ndef main(args):\n    failures = []\n    for file in glob.glob( args.input, recursive=args.recursive ):\n        print(f\"\\n---\\nChecking {file}...\")\n        pe = pefile.PE(file, fast_load=True)\n        nvbSect = [ section for section in pe.sections if section.Name.decode().startswith(\".nv_fatb\")]\n        if len(nvbSect) == 1:\n            sect = nvbSect[0]\n            size = sect.Misc_VirtualSize\n            aslr = pe.OPTIONAL_HEADER.IMAGE_DLLCHARACTERISTICS_DYNAMIC_BASE\n            writable = 0 != ( sect.Characteristics &amp; pefile.SECTION_CHARACTERISTICS['IMAGE_SCN_MEM_WRITE'] )\n            print(f\"Found NV FatBin! Size: {size/1024/1024:0.2f}MB  ASLR: {aslr}  Writable: {writable}\")\n            if (writable or aslr) and size &gt; 0:\n                print(\"- Modifying DLL\")\n                if args.backup:\n                    bakFile = f\"{file}_bak\"\n                    print(f\"- Backing up [{file}] -&gt; [{bakFile}]\")\n                    if os.path.exists( bakFile ):\n                        print( f\"- Warning: Backup file already exists ({bakFile}), not modifying file! Delete the 'bak' to allow modification\")\n                        failures.append( file )\n                        continue\n                    try:\n                        shutil.copy2( file, bakFile)\n                    except Exception as e:\n                        print( f\"- Failed to create backup! [{str(e)}], not modifying file!\")\n                        failures.append( file )\n                        continue\n                # Disable ASLR for DLL, and disable writing for section\n                pe.OPTIONAL_HEADER.DllCharacteristics &amp;= ~pefile.DLL_CHARACTERISTICS['IMAGE_DLLCHARACTERISTICS_DYNAMIC_BASE']\n                sect.Characteristics = sect.Characteristics &amp; ~pefile.SECTION_CHARACTERISTICS['IMAGE_SCN_MEM_WRITE']\n                try:\n                    newFile = f\"{file}_mod\"\n                    print( f\"- Writing modified DLL to [{newFile}]\")\n                    pe.write( newFile )\n                    pe.close()\n                    print( f\"- Moving modified DLL to [{file}]\")\n                    os.remove( file )\n                    shutil.move( newFile, file )\n                except Exception as e:\n                    print( f\"- Failed to write modified DLL! [{str(e)}]\")\n                    failures.append( file )\n                    continue\n\n    print(\"\\n\\nDone!\")\n    if len(failures) &gt; 0:\n        print(\"***WARNING**** These files needed modification but failed: \")\n        for failure in failures:\n            print( f\" - {failure}\")\n\n\n\n\n\n\n\ndef parseArgs():\n    parser = argparse.ArgumentParser( description=\"Disable ASLR and make .nv_fatb sections read-only\", formatter_class=argparse.ArgumentDefaultsHelpFormatter )\n    parser.add_argument('--input', help=\"Glob to parse\", default=\"*.dll\")\n    parser.add_argument('--backup', help=\"Backup modified files\", default=True, required=False)\n    parser.add_argument('--recursive', '-r', default=False, action='store_true', help=\"Recurse into subdirectories\")\n\n    return parser.parse_args()\n\n\n###############################\n# program entry point\n#\nif __name__ == \"__main__\":\n    args = parseArgs()\n    main( args )\n</code></pre> <p>\u65e0\u4f9d\u8d56\u5b89\u88c5\u4f9d\u8d56</p> <pre><code>python -m pip install pefile\n</code></pre> <p>\u8fd0\u884c\u547d\u4ee4\u884c</p> <pre><code>python fixNvPe.py --input=E:\\Programs\\Anaconda3\\envs\\yolov7\\lib\\site-packages\\torch\\lib\\*.dll\n</code></pre>"},{"location":"yolo/yolov8/#6","title":"6","text":"<p>\u7528\u547d\u4ee4\u884c\u68c0\u6d4b</p> <pre><code>yolo predict model=yolov8n.pt source='bus.jpg'\n</code></pre> <p>\u4ee3\u7801\u5728\uff1a</p> <p>Python - Ultralytics YOLOv8 Docs</p> <ul> <li>\u8c03\u7528\u76f8\u673a <code>source=\"0\"</code></li> <li>\u68c0\u6d4b\u6574\u4e2a\u6587\u4ef6\u5939\u7684\u56fe\u7247/\u89c6\u9891\uff0c<code>source=\".../folder\"</code></li> <li>\u68c0\u6d4b\u5355\u4e2a\u56fe\u7247/\u89c6\u9891\uff08\u53ef\u4ee5\u76f4\u63a5\u5199\u8def\u5f84\uff0c\u6216\u8005\u7528\u7c7b\u52a0\u8f7d\uff0c\u4e09\u79cd\u65b9\u6cd5\uff09</li> </ul> <ul> <li><code>show=</code>\u5c55\u793a\u56fe\u7247</li> <li><code>save=</code>\u4fdd\u5b58\u56fe\u7247(\u5230runs/detect/[predictxx]\u6587\u4ef6\u5939\u4e2d)</li> <li><code>name=</code>\u4fdd\u5b58\u7684\u6587\u4ef6\u5939\u7684\u540d\u79f0</li> </ul> <pre><code>from ultralytics import YOLO\nfrom PIL import Image\nimport cv2\n\nmodel = YOLO(\"model.pt\")\n# accepts all formats - image/dir/Path/URL/video/PIL/ndarray. 0 for webcam\nresults = model.predict(source=\"0\")\nresults = model.predict(source=\"folder\", show=True) # Display preds. Accepts all YOLO predict arguments\n\n# from PIL\nim1 = Image.open(\"bus.jpg\")\nresults = model.predict(source=im1, save=True)  # save plotted images\n\n# from ndarray\nim2 = cv2.imread(\"bus.jpg\")\nresults = model.predict(source=im2, save=True, save_txt=True)  # save predictions as labels\n\n# from list of PIL/ndarray\nresults = model.predict(source=[im1, im2])\n</code></pre> <p>\u652f\u6301\u7684\u6587\u4ef6\u7c7b\u578b</p> <p>Predict - Ultralytics YOLOv8 Docs</p> <p>\u53c2\u6570\u7684\u4f5c\u7528</p> <p>Predict - Ultralytics YOLOv8 Docs</p>"},{"location":"yolo/yolov8/#7","title":"7","text":"<p><code>.yaml</code>\u6587\u4ef6\u91cc\u9762\u7684\u6807\u7b7e\u8981\u4e0e<code>labels.txt</code>\u91cc\u9762\u7684\u987a\u5e8f\u4e00\u81f4</p>"},{"location":"yolo/yolov8/#8","title":"8","text":"<p>v8 <code>.yaml</code> \u6587\u4ef6\u793a\u4f8b\uff1a</p> <pre><code># Train/val/test sets as 1) dir: path/to/imgs, 2) file: path/to/imgs.txt, or 3) list: [path/to/imgs1, path/to/imgs2, ..]\npath: ../datasets/coco8  # dataset root dir\ntrain: images/train  # train images (relative to 'path') 4 images\nval: images/val  # val images (relative to 'path') 4 images\ntest:  # test images (optional)\n\n# Classes (80 COCO classes)\nnames:\n  0: person\n  1: bicycle\n  2: car\n  ...\n  77: teddy bear\n  78: hair drier\n  79: toothbrush\n</code></pre> <p>Object Detection Datasets Overview - Ultralytics YOLOv8 Docs</p> <p>\u5176\u4e2d <code>train:</code> <code>val:</code> \u4e4b\u540e\u7684\u5185\u5bb9\u6709\u4e09\u79cd\u5199\u6cd5\uff0c</p> <ol> <li>\u6587\u4ef6\u5939\u8def\u5f84</li> <li>txt\u6587\u4ef6\u8def\u5f84\uff0ctxt\u6587\u4ef6\u5185\u4e3a\u5404\u4e2a\u56fe\u7247\u7684\u8def\u5f84</li> <li>\u5217\u8868\u5f62\u5f0f\u7684\u56fe\u7247\u8def\u5f84</li> </ol>"},{"location":"yolo/yolov8/#9","title":"9","text":"<p>\u5982\u679cdetect\u65f6\u4f7f\u7528\u67d0\u4e2apt\u6a21\u578b\u62a5\u9519\uff0c\u6709\u53ef\u80fd\u662f\u56e0\u4e3a \u8bad\u7ec3\u8be5\u6a21\u578b\u65f6\u4f7f\u7528\u7684ultralytics\u7248\u672c \u6bd4 \u672c\u673a\u5b89\u88c5\u7684\u7248\u672c \u65b0\uff0c\u4f7f\u7528\u4e86\u65e7\u7248\u672c <code>requirements.txt</code> \u4e2d\u672a\u5b89\u88c5\u7684\u5305\uff0c\u56e0\u6b64\u66f4\u65b0ultralytics\u5305\u5373\u53ef</p>"},{"location":"yolo/yolov8/#10","title":"10","text":"<p>train\u65f6\u8981\u4fee\u6539batch\uff0c\u4fee\u6539 <code>batch</code> \u53c2\u6570\uff1a <code>batch=x</code></p> <p>\u9ed8\u8ba4\u4e3a16\uff0c-1\u4e3a\u81ea\u52a8\u8c03\u6574</p> <p>Configuration - Ultralytics YOLOv8 Docs</p>"},{"location":"yolo/yolov8/#11","title":"11","text":"<pre><code>...\n  File \"E:\\Anaconda3\\envs\\Pytorch\\Lib\\site-packages\\ultralytics\\engine\\trainer.py\", line 537, in save_metrics\n    with open(self.csv, 'a') as f:\n         ^^^^^^^^^^^^^^^^^^^\nPermissionError: [Errno 13] Permission denied: 'run\\\\detect\\\\data1st2\\\\results.csv'\n\n\u8fdb\u7a0b\u5df2\u7ed3\u675f\uff0c\u9000\u51fa\u4ee3\u7801\u4e3a 1\n</code></pre> <p>\u4e0d\u77e5\u4ec0\u4e48\u539f\u56e0\uff0c\u62a5\u9519\u539f\u56e0\u5e94\u8be5\u662f <code>result.csv</code> \u6587\u4ef6\u88ab\u6253\u5f00\u88ab\u5360\u7528\uff0c\u4f46\u6211\u5e76\u6ca1\u6709\u6253\u5f00\u8fd9\u4e2a\u6587\u4ef6\u3002</p> <p>\u91cd\u65b0\u518d\u8fd0\u884c\u7a0b\u5e8f\u5373\u53ef</p> <p>Training fails when results.csv file is open \u00b7 Issue #862 \u00b7 ultralytics/ultralytics (github.com)</p>"},{"location":"yolo/yolov8/#12","title":"12","text":"<pre><code>...\n  File \"E:\\Anaconda3\\envs\\Pytorch\\Lib\\site-packages\\ultralytics\\utils\\tal.py\", line 152, in get_box_metrics\n    bbox_scores[mask_gt] = pd_scores[ind[0], :, ind[1]][mask_gt]  # b, max_num_obj, h*w\n                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^\nRuntimeError: CUDA error: device-side assert triggered\nCUDA kernel errors might be asynchronously reported ar some other API call, so the stacktrace below might be incorrect.\nFor debugging consider passing CUDA_LAUNCH_BLOCKING=1.\nCompile with `TORCH_USE_CUDA_DSA` to enable device-side assertions.\n\n\n\u8fdb\u7a0b\u5df2\u7ed3\u675f\uff0c\u9000\u51fa\u4ee3\u7801\u4e3a 1\n</code></pre> <p>...</p> <p>\u5927\u591a\u6570\u60c5\u51b5\u4e0b\uff0cCUDA\u8fd0\u884c\u65f6\u9519\u8bef\u53ef\u80fd\u662f\u67d0\u4e9b\u7d22\u5f15\u4e0d\u5339\u914d\u7684\u539f\u56e0\uff0c\u4f8b\u5982\u60a8\u5c1d\u8bd5\u5728\u5177\u6709 10 \u4e2a\u6807\u7b7e\u7684\u6570\u636e\u96c6\u4e0a\u8bad\u7ec3\u5177\u670915\u4e2a\u8f93\u51fa\u8282\u70b9\u7684\u7f51\u7edc\u3002\u8fd9\u4e2a CUDA \u9519\u8bef\u7684\u4e8b\u60c5\u662f\uff0c\u4e00\u65e6\u4f60\u6536\u5230\u8fd9\u4e2a\u9519\u8bef\u4e00\u6b21\uff0c\u4f60\u5c31\u4f1a\u5728\u4f7f\u7528 torch.tensors \u6267\u884c\u7684\u6bcf\u4e2a\u64cd\u4f5c\u4e2d\u6536\u5230\u5b83\u3002\u8fd9\u4f1a\u5f3a\u5236\u60a8\u91cd\u65b0\u542f\u52a8\u7b14\u8bb0\u672c\u3002</p> <p>...</p> <p>\u800c\u540e\u7ecf\u8fc7\u68c0\u67e5\u53d1\u73b0\uff0c\u662f\u7531\u4e8e <code>labels.txt</code> \u6587\u4ef6\u4e2d\u53ea\u670911\u4e2a\u6807\u7b7e\uff0c\u800c\u6807\u7b7e\u6587\u4ef6\u4e2d\u6709 <code>11</code> (\u7b2c12\u4e2a\u6807\u7b7e)</p> <p>python - Pytorch fails with CUDA error: device-side assert triggered on Colab - Stack Overflow</p>"},{"location":"yolo/yolov8/#13","title":"13","text":"<p>\u6062\u590d/\u7ee7\u7eed\u4e4b\u524d\u7684\u8bad\u7ec3</p> <p>Train - Ultralytics YOLOv8 Docs</p> <p>(\u53ef\u4ee5\u65b0\u5efa\u4e00\u4e2a <code>resume_train.py</code> \u6587\u4ef6)</p> <pre><code>from ultralytics import YOLO\n\n# Load a model\nmodel = YOLO('path/to/last.pt')  # load a partially trained model\n\n# Resume training\nresults = model.train(resume=True)\n</code></pre> <pre><code>from ultralytics import YOLO\n\nif __name__ == '__main__':\n    # Load a model\n    model = YOLO('runs/detect/data1st9/weights/last.pt')  # load a partially trained model\n\n    # Resume training\n    results = model.train(resume=True)\n</code></pre>"},{"location":"yolo/yolov8/#14","title":"14","text":"<pre><code>NotImplementedError: Could not run 'torchvision::nms' with arguments from the 'CPU' backend. This could be because the operator doesn't exist for this backend, or was omitted during the selective/custom build process (if using custom build). If you are a Facebook employee using PyTorch on mobile, please visit https://fburl.com/ptmfixes for possible resolutions. 'torchvision::nms' is only available for these backends: [CUDA, Meta, QuantizedCUDA, BackendSelect, Python, FuncTorchDynamicLayerBackMode, Functionalize, Named, Conjugate, Negative, ZeroTensor, ADInplaceOrView, AutogradOther, AutogradCPU, AutogradCUDA, AutogradXLA, AutogradMPS, AutogradXPU, AutogradHPU, AutogradLazy, AutogradMeta, Tracer, AutocastCPU, AutocastXPU, AutocastCUDA, AutocastPrivateUse1, FuncTorchBatched, BatchedNestedTensor, FuncTorchVmapMode, Batched, VmapMode, FuncTorchGradWrapper, PythonTLSSnapshot, FuncTorchDynamicLayerFrontMode, PreDispatch, PythonDispatcher].\n</code></pre> <p>python - Getting \"NotImplementedError: Could not run 'torchvision::nms' with arguments from CUDA backend\" despite having all necessary libraries and imports - Stack Overflow</p> <p>\u6839\u636e\u6700\u9ad8\u8d5e\u56de\u7b54\uff0c\u5378\u8f7d\u91cd\u88c5torch torchvision torchaudio\uff0c\u518d\u6b21\u8fd0\u884c\u65e0\u62a5\u9519</p>"},{"location":"yolo/yolov8/#15","title":"15","text":"<pre><code>results = model(source=...)\n</code></pre> <p>\u9884\u6d4b\u540e\u8fd4\u56de\u7684\u7ed3\u679c\uff0c\u662f\u4e00\u4e2a\u5217\u8868\uff0c\u91cc\u9762\u7684\u5143\u7d20\u7684\u7c7b\u578b\u662f <code>ultralytics.engine.results.Results</code> (\u5217\u8868\u5e94\u8be5\u662f\u5bf9\u5e94\u591a\u5f20/\u5e27\u56fe\u50cf\u7684\u8bc6\u522b\u7ed3\u679c)\uff0c</p> <p>\u6bcf\u4e2a <code>Results</code> \u7c7b\u4e2d\uff0c</p> <ul> <li> <p><code>names</code> \u5c5e\u6027\u662f\u4ee5\u7c7b\u522b\u5e8f\u53f7\u548c\u7c7b\u522b\u540d\u5b57\u4e3a\u952e\u503c\u5bf9\u7684\u5b57\u5178\uff0c\u5982</p> <pre><code>{0: 'sunglass', 1: 'hat', 2: 'jacket', 3: 'shirt', 4: 'pants', 5: 'shorts', 6: 'skirt', 7: 'dress', 8: 'bag', 9: 'shoe'}\n</code></pre> </li> <li> <p><code>boxes</code> \u5c5e\u6027\u4e3a <code>ultralytics.engine.results.Boxes</code> \u7c7b\uff0c\u8bb0\u5f55\u7740\u8bc6\u522b\u7684\u7ed3\u679c\uff0c</p> <p><code>Boxes</code> \u7c7b\u4e2d\u7684 <code>cls</code> \u5c5e\u6027\uff0c\u8bb0\u5f55\u7740\u4ece\u56fe\u50cf\u4e0a\u8bc6\u522b\u51fa\u7684\u6bcf\u4e2a\u7269\u54c1\u5bf9\u5e94\u7684\u7c7b\u522b\uff0c\u7c7b\u578b\u662f <code>torch.Tensor</code> \uff0c\u53ef\u4ee5\u901a\u8fc7 <code>.tolist()</code> \u65b9\u6cd5\u628a\u5b83\u8f6c\u6362\u6210\u5217\u8868\uff0c\u5982</p> <pre><code>[4.0, 4.0, 9.0, 2.0, 3.0, 9.0, 9.0, 9.0, 4.0, 9.0, 8.0, 9.0]\n</code></pre> </li> </ul>"},{"location":"%E7%B3%BB%E7%BB%9F%26%E7%8E%AF%E5%A2%83/anaconda/","title":"Anaconda","text":"<p> \u7ea6 337 \u4e2a\u5b57  47 \u884c\u4ee3\u7801  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 2 \u5206\u949f</p>"},{"location":"%E7%B3%BB%E7%BB%9F%26%E7%8E%AF%E5%A2%83/anaconda/#1","title":"1","text":"<p>Anaconda \u6362\u6e90</p> <p>\u6362\u6e90\u5317\u5916</p> <ul> <li> <p>Windows \u5728\u7528\u6237\u4e3b\u76ee\u5f55\u6267\u884c <code>conda config --set show_channel_urls yes</code> \u751f\u6210 <code>.condarc</code> \u6587\u4ef6</p> </li> <li> <p>linux \u4e3b\u76ee\u5f55\u4e0b\u5df2\u6709 <code>.condarc</code> \u6587\u4ef6</p> </li> </ul> <p>\u4fee\u6539 <code>.condarc</code> \u6587\u4ef6\uff1a</p> <pre><code>channels:\n  - defaults\nshow_channel_urls: true\ndefault_channels:\n  - https://mirrors.bfsu.edu.cn/anaconda/pkgs/main\n  - https://mirrors.bfsu.edu.cn/anaconda/pkgs/r\n  - https://mirrors.bfsu.edu.cn/anaconda/pkgs/msys2\ncustom_channels:\n  conda-forge: https://mirrors.bfsu.edu.cn/anaconda/cloud\n  msys2: https://mirrors.bfsu.edu.cn/anaconda/cloud\n  bioconda: https://mirrors.bfsu.edu.cn/anaconda/cloud\n  menpo: https://mirrors.bfsu.edu.cn/anaconda/cloud\n  pytorch: https://mirrors.bfsu.edu.cn/anaconda/cloud\n  pytorch-lts: https://mirrors.bfsu.edu.cn/anaconda/cloud\n  simpleitk: https://mirrors.bfsu.edu.cn/anaconda/cloud\n  deepmodeling: https://mirrors.bfsu.edu.cn/anaconda/cloud/\n</code></pre> <p>anaconda | \u955c\u50cf\u7ad9\u4f7f\u7528\u5e2e\u52a9 | \u5317\u4eac\u5916\u56fd\u8bed\u5927\u5b66\u5f00\u6e90\u8f6f\u4ef6\u955c\u50cf\u7ad9 | BFSU Open Source Mirror</p>"},{"location":"%E7%B3%BB%E7%BB%9F%26%E7%8E%AF%E5%A2%83/anaconda/#2","title":"2","text":"<p>\u67e5\u770b\u5df2\u6709\u73af\u5883</p> <pre><code>conda info -e\n</code></pre> <p>\u6216</p> <pre><code>conda env list\n</code></pre>"},{"location":"%E7%B3%BB%E7%BB%9F%26%E7%8E%AF%E5%A2%83/anaconda/#3","title":"3","text":"<p>Conda\u4f7f\u7528\u6307\u5357 - \u77e5\u4e4e (zhihu.com)</p> <p>\u521b\u5efaconda\u73af\u5883\uff0c<code>python=3.x</code>\u6307\u5b9apython\u7248\u672c</p> <pre><code>conda create [ -n | --name ] xxx python=3.x\n</code></pre> <p>\u4ece\u5df2\u6709\u73af\u5883\u514b\u9686\u4e00\u4e2a\u65b0\u7684\u73af\u5883</p> <pre><code>conda create -n xxx --clone env\n</code></pre> <pre><code>activate env # \u6fc0\u6d3benv\u73af\u5883\n\nconda deactivate # \u9000\u51faenv\u73af\u5883\n</code></pre> <p>\u5220\u9664\u5df2\u6709\u73af\u5883</p> <pre><code>conda remove -n env --all\n</code></pre>"},{"location":"%E7%B3%BB%E7%BB%9F%26%E7%8E%AF%E5%A2%83/anaconda/#4","title":"4","text":"<p>pycharm \u627e\u4e0d\u5230 conda \u53ef\u6267\u884c\u6587\u4ef6\uff1a</p> <ol> <li>Conda \u53ef\u6267\u884c\u6587\u4ef6\uff1a<code>...\\Anaconda3\\Scripts\\conda.exe</code></li> <li>\u52a0\u8f7d\u73af\u5883</li> </ol>"},{"location":"%E7%B3%BB%E7%BB%9F%26%E7%8E%AF%E5%A2%83/anaconda/#5","title":"5","text":"<p>\u5728 git bash \u4e2d\u4f7f\u7528 conda \u73af\u5883</p> <p>\u76f4\u63a5\u6267\u884c <code>conda activate</code> \u7684\u547d\u4ee4\u4f1a\u663e\u793a</p> <pre><code>$ conda activate\n\nCommandNotFoundError: Your shell has not been properly configured to use 'conda activate'.\nIf using 'conda activate' from a batch script, change your\ninvocation to 'CALL conda.bat activate'.\n\nTo initialize your shell, run\n\n    $ conda init &lt;SHELL_NAME&gt;\n\nCurrently supported shells are:\n  - bash\n  - cmd.exe\n  - fish\n  - tcsh\n  - xonsh\n  - zsh\n  - powershell\n\nSee 'conda init --help' for more information and options.\n\nIMPORTANT: You may need to close and restart your shell after running 'conda init'.\n</code></pre> <p>\u89e3\u51b3\u7684\u529e\u6cd5\u662f</p> <p>Conda environment fails to activate with Git Bash \u00b7 Issue #19534 \u00b7 microsoft/vscode-python (github.com)</p> <p><code>source</code> anaconda3 \u5b89\u88c5\u8def\u5f84\u4e0b\u7684 <code>/Scripts/activate</code></p> <pre><code>source /e/Programs/Anaconda3/Scripts/activate\n</code></pre> <p>\u7136\u540e\u5c31\u4f1a\u542f\u52a8 anaconda \u7684 base \u73af\u5883\uff0c\u8fd9\u65f6 <code>conda activate xxx</code> \u5c31\u6709\u7528\u4e86</p>"},{"location":"%E7%B3%BB%E7%BB%9F%26%E7%8E%AF%E5%A2%83/anaconda/#6","title":"6","text":"<p>\u5982\u679c anaconda \u6216 miniconda \u5b89\u88c5\u597d\u4e4b\u540e\uff0c(windows)\u5728\u7ec8\u7aef\u4e0a\u8fd0\u884c <code>conda</code> \u547d\u4ee4\u65f6\uff0c\u663e\u793a\u627e\u4e0d\u5230\u547d\u4ee4\u6216\u8005 <code>conda</code> \u4e0d\u662f\u547d\u4ee4\u4e4b\u7c7b\u7684\u9519\u8bef\u4fe1\u606f\uff0c</p> <p>\u53c2\u8003\u8fd9\u7bc7\u6587\u7ae0</p> <p>\u89e3\u51b3Windows\u5b89\u88c5Anaconda\u6216Miniconda\u547d\u4ee4\u884c\u7a97\u53e3\u63d0\u793a\u201c'conda' \u4e0d\u662f\u5185\u90e8\u6216\u5916\u90e8\u547d\u4ee4\uff0c\u4e5f\u4e0d\u662f\u53ef\u8fd0\u884c\u7684\u7a0b\u5e8f \u6216\u6279\u5904\u7406\u6587\u4ef6\u3002\u201d - \u77e5\u4e4e (zhihu.com)</p> <p>\u5c06 anaconda \u6216 miniconda \u5b89\u88c5\u76ee\u5f55\u4e0b\u7684 <code>Scripts</code> \u6587\u4ef6\u5939\u6dfb\u52a0\u5230\u73af\u5883\u53d8\u91cf\u4e2d\uff0c\u5e76\u91cd\u542f\u5373\u53ef(\u6216\u8005\u6ce8\u9500\u518d\u767b\u9646)</p>"},{"location":"%E7%B3%BB%E7%BB%9F%26%E7%8E%AF%E5%A2%83/cuda%20cudnn%E5%AE%89%E8%A3%85/","title":"CUDA cuDNN \u5b89\u88c5","text":"<p> \u7ea6 516 \u4e2a\u5b57  29 \u884c\u4ee3\u7801  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 2 \u5206\u949f</p>"},{"location":"%E7%B3%BB%E7%BB%9F%26%E7%8E%AF%E5%A2%83/cuda%20cudnn%E5%AE%89%E8%A3%85/#1","title":"1","text":"<p>(7\u6761\u6d88\u606f) YOLOv7\u4fdd\u59c6\u7ea7\u6559\u7a0b\uff01\uff08\u4e2a\u4eba\u8e29\u5751\u65e0\u6570\uff09----\u73af\u5883\u914d\u7f6e_yolov7\u73af\u5883\u642d\u5efa_AmbitionToFree\u7684\u535a\u5ba2-CSDN\u535a\u5ba2</p> <p>\u7b2c\u4e00\u6b21\u5b89\u88c5\u65f6\uff0c\u672a\u77e5\u539f\u56e0\u9ed1\u5c4f\uff0c\u5f3a\u5236\u5173\u673a\u91cd\u542f\u4e4b\u540e\uff0c\u518d\u6b21\u5b89\u88c5\u6210\u529f</p> <p>(7\u6761\u6d88\u606f) CUDA\u5b89\u88c5\u548c\u68c0\u6d4b\u3010\u5168\u3011\uff08nvcc\u547d\u4ee4\u627e\u4e0d\u5230\u7684\u89e3\u51b3\u529e\u6cd5\uff09_windows nvcc -v \u63d0\u793a\u672a\u627e\u5230\u547d\u4ee4_\u53ef\u9760\u7684\u8c46\u5305\u87f9\u540c\u5fd7\u7684\u535a\u5ba2-CSDN\u535a\u5ba2</p> <p>\u5b89\u88c5\u540e\u91cd\u65b0\u5f00\u542f\u65b0\u7684cmd\uff0c\u624d\u6709nvcc\u547d\u4ee4</p>"},{"location":"%E7%B3%BB%E7%BB%9F%26%E7%8E%AF%E5%A2%83/cuda%20cudnn%E5%AE%89%E8%A3%85/#2","title":"2","text":"<p>ubuntu \u5b89\u88c5 cuda</p> <p>(8\u6761\u6d88\u606f) \u3010CUDA\u3011Ubuntu\u7cfb\u7edf\u5982\u4f55\u5b89\u88c5CUDA\u4fdd\u59c6\u7ea7\u6559\u7a0b(2022\u5e74\u6700\u65b0)_ubuntu cuda\u5b89\u88c5\u6559\u7a0b_\u81ea\u7267\u541b\u7684\u535a\u5ba2-CSDN\u535a\u5ba2</p> <p>(8\u6761\u6d88\u606f) Ubuntu\u5b89\u88c5cuda\u4e0ecudnn\uff0c\u4eb2\u6d4b\u53ef\u7528_ubuntu\u5b89\u88c5cuda\u548ccudnn_JulyLi2019\u7684\u535a\u5ba2-CSDN\u535a\u5ba2</p>"},{"location":"%E7%B3%BB%E7%BB%9F%26%E7%8E%AF%E5%A2%83/cuda%20cudnn%E5%AE%89%E8%A3%85/#3","title":"3","text":"<p>Existing package manager installation of the driver found. It is strongly recommended that you remove this before continuing.</p> <p></p> <p>Upon starting, we may be greeted with a warning stating that an existing package manager installation of the graphics driver was found. Unless you have a version of the graphics driver lower than required from this page, you can choose to continue.</p> <p>Get CUDA the right way.. (One that won\u2019t break anything when you\u2026 | by Thameem Abbas | Medium</p>"},{"location":"%E7%B3%BB%E7%BB%9F%26%E7%8E%AF%E5%A2%83/cuda%20cudnn%E5%AE%89%E8%A3%85/#4","title":"4","text":"<p>\u89e3\u51b3\u5b89\u88c5cuda\u540e\uff0cnvcc\u627e\u4e0d\u5230\u547d\u4ee4</p> <p>(8\u6761\u6d88\u606f) \u89e3\u51b3nvcc\u627e\u4e0d\u5230\u7684\u95ee\u9898\uff08Ubuntu16.04 CUDA 8.0\uff09_rtygbwwwerr\u7684\u535a\u5ba2-CSDN\u535a\u5ba2</p> <p>\u4fee\u6539<code>~/.bashrc</code>\u6587\u4ef6\u540e\uff0c\u66f4\u65b0\u7cfb\u7edf\u73af\u5883\uff1a</p> <pre><code>source ~/.bashrc\nsudo ldconfig\n</code></pre>"},{"location":"%E7%B3%BB%E7%BB%9F%26%E7%8E%AF%E5%A2%83/cuda%20cudnn%E5%AE%89%E8%A3%85/#5","title":"5","text":"<p>\u5b89\u88c5 cudnn</p> <p>(8\u6761\u6d88\u606f) \u57fa\u4e8eubuntu\u5b89\u88c5cuda,cuDNN_ubuntu\u5b89\u88c5cuda\u548ccudnn_xyzxyz576\u7684\u535a\u5ba2-CSDN\u535a\u5ba2</p> <p>Installation Guide - NVIDIA Docs</p>"},{"location":"%E7%B3%BB%E7%BB%9F%26%E7%8E%AF%E5%A2%83/cuda%20cudnn%E5%AE%89%E8%A3%85/#6","title":"6","text":"<pre><code>dpkg-deb: \u9519\u8bef: 'cudnn-local-repo-ubuntu1804-8.9.2.26_1.0-1_amd64.deb' is not a Debian format archive\n</code></pre> <p>(8\u6761\u6d88\u606f) \u9519\u8bef: \u2018containerd.io_1.4.9-1_amd64.deb\u2018 is not a Debian format archive_sun007700\u7684\u535a\u5ba2-CSDN\u535a\u5ba2</p> <p>\u5b89\u88c5\u5305\u6ca1\u4e0b\u8f7d\u597d</p>"},{"location":"%E7%B3%BB%E7%BB%9F%26%E7%8E%AF%E5%A2%83/cuda%20cudnn%E5%AE%89%E8%A3%85/#7","title":"7","text":"<pre><code>E: \u672a\u627e\u5230\u201clibcudnn8\u201d\u7684\u201c8.9.2.26-1+cuda11.3\u201d\u7248\u672c\n</code></pre> <p>E: Version '8.3.1.22-1+cuda10.2' for 'libcudnn8' was not found - Deep Learning (Training &amp; Inference) / cuDNN - NVIDIA Developer Forums</p> <pre><code>chrysophyt\n22 \u5e74 4 \u6708\n\n*I already did\n$ sudo apt-get update\n, it just wont work.\n\nIn the end I went to the cudnn archive and download older version\nhttps://developer.nvidia.com/rdp/cudnn-archive 280\n</code></pre> <pre><code>dishant.daredevil\n22 \u5e74 4 \u6708\n\nThis might do the job.\nAfter step -\nsudo apt-key add /var/cudnn-local-repo-*/7fa2af80.pub\nYou will have the directory /var/cudnn-local-repo-ubuntu2004-8.4.0.27 (with your ubuntu version and cudnn downloaded)\nInside this directory, you will be having three .deb files.\njust do for all the deb files-\nsudo gdebi xxx.deb\nwhich will install cudnn. ;)\n</code></pre> <p>\u91c7\u53d6\u65e7\u7248\u672c\u5b89\u88c5</p> <p>\u65e7\u7248\u672c\u662fruntime\uff0cdev\uff0csample\uff0c\u4e09\u4e2a\u5206\u5f00</p> <p>\u5982\u8fd9\u4e2a\uff1a(8\u6761\u6d88\u606f) Ubuntu\u5b89\u88c5cuda\u4e0ecudnn\uff0c\u4eb2\u6d4b\u53ef\u7528_ubuntu\u5b89\u88c5cuda\u548ccudnn_JulyLi2019\u7684\u535a\u5ba2-CSDN\u535a\u5ba2</p>"},{"location":"%E7%B3%BB%E7%BB%9F%26%E7%8E%AF%E5%A2%83/cuda%20cudnn%E5%AE%89%E8%A3%85/#8","title":"8","text":"<p>To verify that cuDNN is installed and is running properly, compile the <code>mnistCUDNN</code> sample located in the <code>/usr/src/cudnn_samples_v8</code> directory in the Debian file.</p> <ul> <li>1  Copy the cuDNN samples to a writable path.</li> </ul> <pre><code>cp -r /usr/src/cudnn_samples_v8/ $HOME\n</code></pre> <ul> <li>2  Go to the writable path.</li> </ul> <pre><code>cd  $HOME/cudnn_samples_v8/mnistCUDNN\n</code></pre> <ul> <li>3  Compile the <code>mnistCUDNN</code>sample.</li> </ul> <pre><code>make clean &amp;&amp; make\n</code></pre> <ul> <li>4  Run the <code>mnistCUDNN</code> sample.</li> </ul> <pre><code>./mnistCUDNN  \n</code></pre> <p>If cuDNN is properly installed and running on your Linux system, you will see a message similar to the following:</p> <pre><code>Test passed!\n</code></pre>"},{"location":"%E7%B3%BB%E7%BB%9F%26%E7%8E%AF%E5%A2%83/jupyter%20notebook/","title":"Jupyter Notebook","text":"<p> \u7ea6 33 \u4e2a\u5b57 </p>"},{"location":"%E7%B3%BB%E7%BB%9F%26%E7%8E%AF%E5%A2%83/jupyter%20notebook/#1","title":"1","text":"<p>vscode notebook\u5feb\u6377\u952e</p> <p>VSCode - Jupyter\u5feb\u6377\u952e - \u7ecd\u8363 - \u535a\u5ba2\u56ed (cnblogs.com)</p> <p>\u6587\u7ae0\u4e2d\u672a\u63d0\u5230\u7684</p> <p>Esc \u9000\u51fa\u7f16\u8f91\u6a21\u5f0f</p>"},{"location":"%E7%B3%BB%E7%BB%9F%26%E7%8E%AF%E5%A2%83/nodejs/","title":"Node.js","text":"<p> \u7ea6 18 \u4e2a\u5b57  1 \u884c\u4ee3\u7801 </p>"},{"location":"%E7%B3%BB%E7%BB%9F%26%E7%8E%AF%E5%A2%83/nodejs/#1","title":"1","text":"<p>npm \u6362\u6e90</p> <p>NPM \u5982\u4f55\u6362\u6e90\uff1f - \u77e5\u4e4e (zhihu.com)</p> <p>\u6362\u6210\u6dd8\u5b9d\u6e90</p> <pre><code>npm config set registry https://registry.npmmirror.com/\n</code></pre>"},{"location":"%E7%B3%BB%E7%BB%9F%26%E7%8E%AF%E5%A2%83/pip/","title":"pip","text":"<p> \u7ea6 291 \u4e2a\u5b57  12 \u884c\u4ee3\u7801  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 1 \u5206\u949f</p>"},{"location":"%E7%B3%BB%E7%BB%9F%26%E7%8E%AF%E5%A2%83/pip/#1","title":"1","text":"<p>pip\u6362\u6e90\u5317\u5916</p> <p>pypi | \u955c\u50cf\u7ad9\u4f7f\u7528\u5e2e\u52a9 | \u5317\u4eac\u5916\u56fd\u8bed\u5927\u5b66\u5f00\u6e90\u8f6f\u4ef6\u955c\u50cf\u7ad9 | BFSU Open Source Mirror</p> <p>\u4e34\u65f6\u4f7f\u7528</p> <pre><code>pip install -i https://mirrors.bfsu.edu.cn/pypi/web/simple some-package\n</code></pre> <p>\u6ce8\u610f\uff0c<code>simple</code> \u4e0d\u80fd\u5c11, \u662f <code>https</code> \u800c\u4e0d\u662f <code>http</code></p> <p>\u8bbe\u4e3a\u9ed8\u8ba4</p> <p>\u5347\u7ea7 pip \u5230\u6700\u65b0\u7684\u7248\u672c (&gt;=10.0.0) \u540e\u8fdb\u884c\u914d\u7f6e\uff1a</p> <pre><code>python -m pip install --upgrade pip\npip config set global.index-url https://mirrors.bfsu.edu.cn/pypi/web/simple\n</code></pre>"},{"location":"%E7%B3%BB%E7%BB%9F%26%E7%8E%AF%E5%A2%83/pip/#2","title":"2","text":"<p>pip \u5347\u7ea7\u67d0\u4e2a\u5305</p> <pre><code>pip install [-U | --updrade] xxx\n</code></pre>"},{"location":"%E7%B3%BB%E7%BB%9F%26%E7%8E%AF%E5%A2%83/pip/#3","title":"3","text":"<p>\u5b89\u88c5\u67d0\u4e2a\u7248\u672c\u7684\u5305</p> <pre><code>pip install xxx==x.x.x\n</code></pre>"},{"location":"%E7%B3%BB%E7%BB%9F%26%E7%8E%AF%E5%A2%83/pip/#4","title":"4","text":"<p>pip \u5b89\u88c5\u67d0\u4e2a\u672c\u5730\u7684 \u5305 / <code>.whl</code> \u6587\u4ef6\uff0c\u76f4\u63a5 <code>pip install xxx.whl</code> \u5373\u53ef</p> <pre><code>pip install xxx.whl\n</code></pre>"},{"location":"%E7%B3%BB%E7%BB%9F%26%E7%8E%AF%E5%A2%83/pip/#5","title":"5","text":"<p>Python\u67e5\u770b\u7b2c\u4e09\u65b9\u5e93\u3001\u5305\u7684\u6240\u6709\u53ef\u7528\u7248\u672c\uff0c\u5386\u53f2\u7248\u672c_python 2.7 pip\u67e5\u8be2\u53ef\u7528\u5e93\u7248\u672c-CSDN\u535a\u5ba2</p> <p>\u5982\u679c\u60f3\u67e5\u8be2\u8981\u5b89\u88c5\u7684\u5305\u6240\u6709\u53ef\u4ee5\u5b89\u88c5\u7684\u7248\u672c</p> <p>\u53ef\u4ee5\u8fd9\u6837</p> <pre><code>pip install xxx==\n</code></pre> <p>\u6216\u8005\u7b49\u53f7\u540e\u53ef\u4ee5\u5199\u4efb\u4f55\u4e0d\u662f\u5bf9\u5e94\u7248\u672c\u53f7\u7684\u4e1c\u897f\uff0c\u7136\u540e\u5c31\u4f1a\u8fd4\u56de\u7c7b\u4f3c\u4e8e\u8fd9\u6837\u7684\u4fe1\u606f</p> <pre><code>&gt;pip install numpy==tst\nLooking in indexes: https://mirrors.bfsu.edu.cn/pypi/web/simple/\nERROR: Could not find a version that satisfies the requirement numpy==tst (from versions: 1.3.0, 1.4.1, 1.5.0, 1.5.1, 1.6.0, 1.6.1, 1.6.2, 1.7.0, 1.7.1, 1.7.2, 1.8.0, 1.8.1, 1.8.2, 1.9.0, 1.9.1, 1.9.2, 1.9.3, 1.10.0.post2, 1.10.1, 1.10.2, 1.10.4, 1.11.0, 1.11.1, 1.11.2, 1.11.3, 1.12.0, 1.12.1, 1.13.0, 1.13.1, 1.13.3, 1.14.0, 1.14.1, 1.14.2, 1.14.3, 1.14.4, 1.14.5, 1.14.6, 1.15.0, 1.15.1, 1.15.2, 1.15.3, 1.15.4, 1.16.0, 1.16.1, 1.16.2, 1.16.3, 1.16.4, 1.16.5, 1.16.6, 1.17.0, 1.17.1, 1.17.2, 1.17.3, 1.17.4, 1.17.5, 1.18.0, 1.18.1, 1.18.2, 1.18.3, 1.18.4, 1.18.5, 1.19.0, 1.19.1, 1.19.2, 1.19.3, 1.19.4, 1.19.5, 1.20.0, 1.20.1, 1.20.2, 1.20.3, 1.21.0, 1.21.1, 1.21.2, 1.21.3, 1.21.4, 1.21.5, 1.21.6, 1.22.0, 1.22.1, 1.22.2, 1.22.3, 1.22.4, 1.23.0rc1, 1.23.0rc2, 1.23.0rc3, 1.23.0, 1.23.1, 1.23.2, 1.23.3, 1.23.4, 1.23.5, 1.24.0rc1, 1.24.0rc2, 1.24.0, 1.24.1, 1.24.2, 1.24.3, 1.24.4, 1.25.0rc1, 1.25.0, 1.25.1, 1.25.2, 1.26.0b1, 1.26.0rc1, 1.26.0)\nERROR: No matching distribution found for numpy==tst\n</code></pre>"},{"location":"%E7%B3%BB%E7%BB%9F%26%E7%8E%AF%E5%A2%83/pip/#6","title":"6","text":"<p>\u5148\u8fdb\u89c6\u89c9</p> <p>\u53ef\u4ee5\u901a\u8fc7\u6dfb\u52a0 <code>--no-deps</code> \u9009\u9879\u6765\u5ffd\u7565\u5305\u7684\u4f9d\u8d56\u7684\u5b89\u88c5\u6765\u76f4\u63a5\u5b89\u88c5</p> <pre><code>pip install xxx --nodeps\n</code></pre>"},{"location":"%E7%B3%BB%E7%BB%9F%26%E7%8E%AF%E5%A2%83/pip/#7","title":"7","text":"<p>\u5982\u679c\u5728\u9879\u76ee\u4e2d\u521b\u5efa\u4e86python\u865a\u62df\u73af\u5883 <code>.venv</code> \uff0c\u90a3\u4e48(\u5728\u7ec8\u7aef\u4e2d)\u6fc0\u6d3b\u8fd9\u4e2a\u73af\u5883\u7684\u65b9\u6cd5\u662f\uff0c\u5728\u7ec8\u7aef\u8fd0\u884c <code>.venv/Scripts/activate</code> \u6587\u4ef6</p> <pre><code>.venv/Scripts/activate\n</code></pre> <p>\u53c2\u8003\uff1aPython\u865a\u62df\u73af\u5883\uff08Python venv\uff09\u7684\u521b\u5efa\u3001\u6fc0\u6d3b\u3001\u9000\u51fa\u53ca\u5220\u9664_python .ven-CSDN\u535a\u5ba2</p>"},{"location":"%E7%B3%BB%E7%BB%9F%26%E7%8E%AF%E5%A2%83/powershell/","title":"PowerShell","text":"<p> \u7ea6 18 \u4e2a\u5b57  1 \u884c\u4ee3\u7801 </p>"},{"location":"%E7%B3%BB%E7%BB%9F%26%E7%8E%AF%E5%A2%83/powershell/#1","title":"1","text":"<p>\u5728powershell\u4e2d\u5b89\u88c5/\u5347\u7ea7powershell</p> <pre><code>winget install Microsoft.PowerShell\n</code></pre> <p>Update powershell to the latest revision - Stack Overflow</p>"},{"location":"%E7%B3%BB%E7%BB%9F%26%E7%8E%AF%E5%A2%83/ros/","title":"ROS","text":"<p> \u7ea6 244 \u4e2a\u5b57  27 \u884c\u4ee3\u7801  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 1 \u5206\u949f</p>"},{"location":"%E7%B3%BB%E7%BB%9F%26%E7%8E%AF%E5%A2%83/ros/#1","title":"1","text":"<p>\u7531\u4e8eros\u9700\u8981\u4f7f\u7528\u7684\u662fubuntu\u7cfb\u7edf\u81ea\u5e26\u7684python\uff0c\u800c\u6211\u7684ubuntu\u7cfb\u7edf\u4e4b\u524d\u88c5\u4e86anaconda\uff0c\u6240\u4ee5\u5728 <code>rosrun</code> \u81ea\u5df1\u7f16\u5199\u7684\u5305\u65f6\uff0c\u4f1a\u663e\u793a <code>No module named 'rospkg'</code> \uff1a</p> <pre><code>Traceback (most recent call last):\n  File \"/home/ronald/catkin_ws/src/beginner_tutorials/scripts/talker.py\", line 3, in &lt;module&gt;\n    import rospy\n  File \"/opt/ros/melodic/lib/python2.7/dist-packages/rospy/__init__.py\", line 49, in &lt;module&gt;\n    from .client import spin, myargv, init_node, \\\n  File \"/opt/ros/melodic/lib/python2.7/dist-packages/rospy/client.py\", line 52, in &lt;module&gt;\n    import roslib\n  File \"/opt/ros/melodic/lib/python2.7/dist-packages/roslib/__init__.py\", line 50, in &lt;module&gt;\n    from roslib.launcher import load_manifest  # noqa: F401\n  File \"/opt/ros/melodic/lib/python2.7/dist-packages/roslib/launcher.py\", line 42, in &lt;module&gt;\n    import rospkg\nModuleNotFoundError: No module named 'rospkg'\n</code></pre> <p>\u8be2\u95ee\u8001\u5e08\uff0c\u8001\u5e08\u8bf4\u8fd9\u662f\u7531\u4e8e\u4f7f\u7528\u4e86 anaconda \u7684 python \uff0c\u5e94\u8be5\u8981\u4f7f\u7528\u7cfb\u7edf\u81ea\u5e26\u7684python2(\u8001\u5e08\u8bf4\u8fd9\u662f\u4e00\u4e2a\u7ecf\u5178\u7684anaconda\u548cros\u51b2\u7a81\u7684\u95ee\u9898)\uff0c\u6240\u4ee5\u8001\u5e08\u7684\u505a\u6cd5\u662f</p> <p>\u6253\u5f00 <code>~/.bashrc</code> \u6587\u4ef6\uff0c\u5c06</p> <pre><code># &gt;&gt;&gt; conda initialize &gt;&gt;&gt;\n# !! Contents within this block are managed by 'conda init' !!\n__conda_setup=\"$('/home/ronald/anaconda3/bin/conda' 'shell.bash' 'hook' 2&gt; /dev/null)\"\nif [ $? -eq 0 ]; then\n    eval \"$__conda_setup\"\nelse\n    if [ -f \"/home/ronald/anaconda3/etc/profile.d/conda.sh\" ]; then\n        . \"/home/ronald/anaconda3/etc/profile.d/conda.sh\"\n    else\n        export PATH=\"/home/ronald/anaconda3/bin:$PATH\"\n    fi\nfi\nunset __conda_setup\n# &lt;&lt;&lt; conda initialize &lt;&lt;&lt;\n</code></pre> <p>\u6ce8\u91ca\u6389</p> <p>\u4ece\u800c\u7ec8\u7aef\u4e2d\u4f7f\u7528\u7684python\u5c31\u53d8\u6210\u4e86ubuntu18\u81ea\u5e26\u7684python2.7</p> <p></p> <p>\u4f46\u662f\u6211\u53d1\u73b0\u76f4\u63a5\u6267\u884c <code>conda deactivate</code> \u7684\u547d\u4ee4\u4e5f\u53ef\u4ee5\u9000\u51fa anaconda \u7684 base \u73af\u5883</p> <p></p> <p>\u4f46\u662f\u53d1\u73b0\u8fd8\u662f\u663e\u793a <code>No module named 'rospkg'</code> \uff0c</p> <p>\u7136\u540e\u6211\u7a81\u7136\u60f3\u5230\u53ef\u80fd\u662f\u7531\u4e8e\u81ea\u5df1\u5199\u7684python\u6587\u4ef6\u4e2d\u7b2c\u4e00\u884c</p> <pre><code>#! /usr/bin/env python3\n</code></pre> <p>\u4e2d\u7684 <code>python3</code> \u7684\u95ee\u9898\uff0c\u6240\u4ee5\u6211\u5c1d\u8bd5\u5c06\u5176\u6539\u6210 <code>python2</code> \u6700\u540e\u53d1\u73b0\u80fd\u591f\u6210\u529f <code>rosrun</code> \u4e86</p> <p>\u5728\u4e4b\u540e\u4e00\u6b21\u6d4b\u8bd5\u4e2d\uff0c\u8fd8\u53d1\u73b0\u4e86\uff0c\u5c06 <code>python3</code> \u6539\u6210 <code>python2</code> \u4e4b\u540e\uff0c\u5373\u4f7f\u4f7f\u7528anaconda\u7684python3\uff0c\u4e5f\u80fd <code>rosrun</code> </p>"},{"location":"%E7%B3%BB%E7%BB%9F%26%E7%8E%AF%E5%A2%83/ubuntu/","title":"Ubuntu","text":"<p> \u7ea6 975 \u4e2a\u5b57  52 \u884c\u4ee3\u7801  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 4 \u5206\u949f</p>"},{"location":"%E7%B3%BB%E7%BB%9F%26%E7%8E%AF%E5%A2%83/ubuntu/#1","title":"1","text":"<p>\u5728\u5ba2\u6237\u673a\u4e2d\u88c5\u8f7d\u865a\u62dfCD\u9a71\u52a8\u5668\uff0c\u542f\u52a8\u7ec8\u7aef\uff0c\u4f7f\u7528tar\u89e3\u538b\u7f29\u5b89\u88c5\u7a0b\u5e8f\uff0c\u7136\u540e\u6267\u884c <code>vmware-install.pl</code> \u5b89\u88c5 VMware Tools\u3002</p>"},{"location":"%E7%B3%BB%E7%BB%9F%26%E7%8E%AF%E5%A2%83/ubuntu/#2","title":"2","text":"<p>\u5b89\u88c5ubuntu</p> <ul> <li> <p>(8\u6761\u6d88\u606f) \u53cc\u7cfb\u7edf\u4e0bUbuntu18.04(Linux)\u5b89\u88c5\u8d85\u8be6\u7ec6\u56fe\u6587\u6559\u7a0b_\u6ca1\u6709\u7075\u9b42\u7684\u5de5\u5177\u4eba\u7684\u535a\u5ba2-CSDN\u535a\u5ba2</p> <p>\u6839\u636e 3.\u5236\u4f5c\u88c5\u673a\u7cfb\u7edfU\u76d8 \u5236\u4f5c\u542f\u52a8\u76d8</p> </li> <li> <p></p> </li> <li> <p></p> <p>\u6b63\u5e38\u5b89\u88c5</p> </li> <li> <p></p> <p>\u9009\u62e9 <code>\u5176\u4ed6\u9009\u9879</code> \u624d\u80fd\u81ea\u5df1\u5206\u533a</p> </li> <li> <p></p> <p></p> <p></p> <p></p> <p></p> <p></p> <ul> <li> <p>\u5206\u4e09\u4e2a\u533a\u5c31\u591f\u4e86\uff1a</p> EFI\u7cfb\u7edf\u5206\u533a 300MB --- \u4ea4\u6362\u7a7a\u95f4 \u5185\u5b58\u591a\u5927\u5c31\u591a\u5927 --- \u6839\u76ee\u5f55\u5206\u533a (\u6302\u8f7d\u70b9\uff1a<code>/</code>) \u5269\u4f59\u7a7a\u95f4 Ext4\u65e5\u5fd7\u6587\u4ef6\u7cfb\u7edf <p>\uff08\u82e5\u6709\u9009\u9879\uff09\u5747\u9009\u4e3b\u5206\u533a\u3001\u7a7a\u95f4\u8d77\u59cb\u4f4d\u7f6e</p> </li> <li> <p><code>\u5b89\u88c5\u5f15\u5bfc\u5668\u7684\u8bbe\u5907</code> / <code>Device for boot loader installation</code> \u9009\u8ddfEFI\u76f8\u540c\u7684\u786c\u76d8\uff0c</p> <p>\u5373\u5982\u679c\u5206\u533a\u90fd\u5728\u540c\u4e00\u4e2a\u786c\u76d8\u4e0a\u5c31\u9009\u90a3\u4e00\u4e2a</p> </li> </ul> </li> <li> <p>\u540e\u7eed\u6309\u7167\u5f15\u5bfc\u64cd\u4f5c\u5c31\u884c</p> </li> </ul>"},{"location":"%E7%B3%BB%E7%BB%9F%26%E7%8E%AF%E5%A2%83/ubuntu/#3","title":"3","text":"<p>ubuntu | \u955c\u50cf\u7ad9\u4f7f\u7528\u5e2e\u52a9 | \u5317\u4eac\u5916\u56fd\u8bed\u5927\u5b66\u5f00\u6e90\u8f6f\u4ef6\u955c\u50cf\u7ad9 | BFSU Open Source Mirror</p> <p>\u6362\u5317\u5916\u6e90</p> <p>18.04\u53ef\u4ee5\u76f4\u63a5\u5728\u8f6f\u4ef6\u4e0e\u66f4\u65b0\u4e2d\u9009\u62e9\u5317\u5916\u6e90</p> <p>\u4fee\u6539<code>/etc/apt/sources.list</code>\u6587\u4ef6 ( \u5148\u5c06\u7cfb\u7edf\u81ea\u5e26\u7684\u8be5\u6587\u4ef6\u505a\u4e2a\u5907\u4efd<code>source.list.save</code>\uff0c\u5c06\u8be5\u6587\u4ef6\u66ff\u6362\u4e3a\u4e0b\u9762\u5185\u5bb9\uff0c\u5373\u53ef\u4f7f\u7528\u9009\u62e9\u7684\u8f6f\u4ef6\u6e90\u955c\u50cf\u3002)\uff1a</p> <ul> <li> <p>18.04</p> <pre><code># \u9ed8\u8ba4\u6ce8\u91ca\u4e86\u6e90\u7801\u955c\u50cf\u4ee5\u63d0\u9ad8 apt update \u901f\u5ea6\uff0c\u5982\u6709\u9700\u8981\u53ef\u81ea\u884c\u53d6\u6d88\u6ce8\u91ca\ndeb https://mirrors.bfsu.edu.cn/ubuntu/ bionic main restricted universe multiverse\n# deb-src https://mirrors.bfsu.edu.cn/ubuntu/ bionic main restricted universe multiverse\ndeb https://mirrors.bfsu.edu.cn/ubuntu/ bionic-updates main restricted universe multiverse\n# deb-src https://mirrors.bfsu.edu.cn/ubuntu/ bionic-updates main restricted universe multiverse\ndeb https://mirrors.bfsu.edu.cn/ubuntu/ bionic-backports main restricted universe multiverse\n# deb-src https://mirrors.bfsu.edu.cn/ubuntu/ bionic-backports main restricted universe multiverse\n\n# deb https://mirrors.bfsu.edu.cn/ubuntu/ bionic-security main restricted universe multiverse\n# # deb-src https://mirrors.bfsu.edu.cn/ubuntu/ bionic-security main restricted universe multiverse\n\ndeb http://security.ubuntu.com/ubuntu/ bionic-security main restricted universe multiverse\n# deb-src http://security.ubuntu.com/ubuntu/ bionic-security main restricted universe multiverse\n\n# \u9884\u53d1\u5e03\u8f6f\u4ef6\u6e90\uff0c\u4e0d\u5efa\u8bae\u542f\u7528\n# deb https://mirrors.bfsu.edu.cn/ubuntu/ bionic-proposed main restricted universe multiverse\n# # deb-src https://mirrors.bfsu.edu.cn/ubuntu/ bionic-proposed main restricted universe multiverse\n</code></pre> </li> <li> <p>20.04</p> <pre><code># \u9ed8\u8ba4\u6ce8\u91ca\u4e86\u6e90\u7801\u955c\u50cf\u4ee5\u63d0\u9ad8 apt update \u901f\u5ea6\uff0c\u5982\u6709\u9700\u8981\u53ef\u81ea\u884c\u53d6\u6d88\u6ce8\u91ca\ndeb https://mirrors.bfsu.edu.cn/ubuntu/ focal main restricted universe multiverse\n# deb-src https://mirrors.bfsu.edu.cn/ubuntu/ focal main restricted universe multiverse\ndeb https://mirrors.bfsu.edu.cn/ubuntu/ focal-updates main restricted universe multiverse\n# deb-src https://mirrors.bfsu.edu.cn/ubuntu/ focal-updates main restricted universe multiverse\ndeb https://mirrors.bfsu.edu.cn/ubuntu/ focal-backports main restricted universe multiverse\n# deb-src https://mirrors.bfsu.edu.cn/ubuntu/ focal-backports main restricted universe multiverse\n\n# deb https://mirrors.bfsu.edu.cn/ubuntu/ focal-security main restricted universe multiverse\n# # deb-src https://mirrors.bfsu.edu.cn/ubuntu/ focal-security main restricted universe multiverse\n\ndeb http://security.ubuntu.com/ubuntu/ focal-security main restricted universe multiverse\n# deb-src http://security.ubuntu.com/ubuntu/ focal-security main restricted universe multiverse\n\n# \u9884\u53d1\u5e03\u8f6f\u4ef6\u6e90\uff0c\u4e0d\u5efa\u8bae\u542f\u7528\n# deb https://mirrors.bfsu.edu.cn/ubuntu/ focal-proposed main restricted universe multiverse\n# # deb-src https://mirrors.bfsu.edu.cn/ubuntu/ focal-proposed main restricted universe multiverse\n</code></pre> </li> </ul>"},{"location":"%E7%B3%BB%E7%BB%9F%26%E7%8E%AF%E5%A2%83/ubuntu/#4","title":"4","text":"<p>\u8bed\u8a00\u6539\u4e3a\u4e2d\u6587\uff1a</p> <p></p> <ol> <li>\u8bbe\u7f6e\uff0c\u533a\u57df\u548c\u8bed\u8a00\uff0c<code>\u7ba1\u7406\u5df2\u5b89\u88c5\u7684\u8bed\u8a00</code>\uff0c</li> <li><code>\u6dfb\u52a0\u6216\u5220\u9664\u8bed\u8a00...</code>\uff0c</li> <li><code>\u4e2d\u6587\u7b80\u4f53</code>\uff08\u52fe\u9009\uff09\uff0c<code>\u5e94\u7528</code></li> </ol> <p>\u5c06\u8f93\u5165\u6cd5\u6362\u6210\u62fc\u97f3\uff08\u6216\u4e94\u7b14\uff09\u8f93\u5165\uff1a</p> <p></p> <p></p> <ol> <li>\u8bbe\u7f6e\uff0c\u533a\u57df\u548c\u8bed\u8a00\uff0c<code>+</code>(\u8f93\u5165\u6e90\u5904)\uff0c</li> <li><code>\u6c49\u8bed</code></li> <li>\u9009\u4e2d<code>\u6c49\u8bed (Intelligent Pinyin)</code>(\u6216\u5176\u4ed6)\uff0c<code>\u6dfb\u52a0</code></li> </ol> <p>\uff08\u5c06\u5176\u4f59\u8f93\u5165\u6e90\u53ef\u5220\u9664\uff09</p>"},{"location":"%E7%B3%BB%E7%BB%9F%26%E7%8E%AF%E5%A2%83/ubuntu/#5","title":"5","text":"<p>\u5b89\u88c5cmake</p> <p>(8\u6761\u6d88\u606f) ubuntu\u5b89\u88c5cmake\u7684\u4e09\u79cd\u65b9\u6cd5\uff08\u8d85\u65b9\u4fbf\uff01\uff09_Man_1man\u7684\u535a\u5ba2-CSDN\u535a\u5ba2</p> <p>\u4f7f\u7528\u7b2c\u4e8c\u79cd\u65b9\u6cd5\uff0c\u5e76\u4e14\u5728Download | CMake\u91cc\u9009\u62e9<code>Source distributions:</code>\u4e0b\u7684\u538b\u7f29\u5305\u4e0b\u8f7d</p>"},{"location":"%E7%B3%BB%E7%BB%9F%26%E7%8E%AF%E5%A2%83/ubuntu/#6","title":"6","text":"<p>\u5b89\u88c5clion\u3001pycharm\u7b49\uff1a</p> <p>\u5b89\u88c5\u5230\u4e3b\u76ee\u5f55\u4e2d\uff08\u5efa\u8bae\uff09</p> <ol> <li> <p>\u79fb\u52a8\u538b\u7f29\u5305\u5230\u4e3b\u76ee\u5f55\uff0c\u5e76\u76f4\u63a5\u89e3\u538b</p> <pre><code>tar -zxvf xxx.tar.gz\n</code></pre> </li> <li> <p>\u8fdb\u5165 <code>xxx/bin</code> \u6587\u4ef6\u5939\uff0c\u8fd0\u884c <code>xxx.sh</code>\u6587\u4ef6</p> <pre><code>sh xxx.sh \n</code></pre> </li> <li> <p></p> <p>\u5de6\u4e0b\u89d2\u8bbe\u7f6e\u56fe\u6807\uff0c<code>Create Desktop Entry...</code>\uff0c</p> <p>\u5728\u5168\u90e8\u5e94\u7528\u7a0b\u5e8f\u4e2d\u4f1a\u51fa\u73b0ide\u7684\u56fe\u6807/\u5feb\u6377\u65b9\u5f0f</p> </li> <li> <p>\uff08\u53ef\u9009\uff09\u5173\u95ed\u539f\u672c\u6253\u5361\u7684ide\uff0c\u4ece\u5168\u90e8\u5e94\u7528\u7a0b\u5e8f\u4e2d\u91cd\u65b0\u6253\u5361\uff0c\u5728\u4efb\u52a1\u680f\u4e2d\u53f3\u952e\uff0c\u6dfb\u52a0\u5230\u6536\u85cf\u5939</p> </li> </ol>"},{"location":"%E7%B3%BB%E7%BB%9F%26%E7%8E%AF%E5%A2%83/ubuntu/#7","title":"7","text":"<p>\u78c1\u76d8\u6269\u5bb9\uff1a</p> <p>Ubuntu\u7a7a\u95f4\u4e0d\u8db3\uff0c\u5982\u4f55\u6269\u5bb9 - \u77e5\u4e4e (zhihu.com)</p>"},{"location":"%E7%B3%BB%E7%BB%9F%26%E7%8E%AF%E5%A2%83/ubuntu/#8","title":"8","text":"<p>\u5b89\u88c5\u5e76\u4f7f\u7528 <code>clash for windows</code> linux \u7aef</p> <p>Linux/ubuntu\u4e0b\u5b9e\u73b0\u79d1\u5b66\u4e0a\u7f51\u4f7f\u7528 clash for windows \u8be6\u7ec6\u6b65\u9aa4|\u7ffb\u5899|vpn|v2ray (cfmem.com)</p> <p>(Linux\u7aef\u6ca1\u6709 <code>System proxy</code>\u9009\u9879)</p> <p>\u8bbe\u7f6e\uff0c<code>\u7f51\u7edc</code>\uff0c<code>\u7f51\u7edc\u4ee3\u7406</code>\uff0c<code>\u624b\u52a8</code>\uff0c\u586b\u5199<code>HTTP\u4ee3\u7406</code>\u548c<code>HTTPS\u4ee3\u7406</code>(\u5de6<code>127.0.0.1</code>\uff0c\u53f3<code>7890</code>)</p> <p></p> <p>\u53ef\u8bbe\u7f6e\u5f00\u673a\u542f\u52a8 <code>start with linux</code> \u548c\u9759\u9ed8\u5f00\u542f(\u4e0d\u5e94\u7528\u754c\u9762\uff0c\u53ea\u540e\u53f0\u8fd0\u884c) <code>silent start</code></p>"},{"location":"%E7%B3%BB%E7%BB%9F%26%E7%8E%AF%E5%A2%83/ubuntu/#9","title":"9","text":"<p>\u5148\u8fdb\u89c6\u89c9</p> <p>Ubuntu \u4e0b\uff0c\u5982\u679c\u8981\u5728 <code>.sh</code> \u811a\u672c\u4e2d\u4f7f\u7528 <code>sudo</code> \u547d\u4ee4\uff0c\u53ef\u4ee5\u4f7f\u7528 <code>echo</code> \u6765\u81ea\u52a8\u8f93\u5165\u5bc6\u7801\uff0c\u5982</p> <pre><code>echo \"1111\" | sudo -S bash ./scripts/install_udev_rules.sh\necho \"1111\" | sudo -S udevadm control --reload-rules &amp;&amp; echo \"1111\" | sudo -S udevadm trigger\n</code></pre>"},{"location":"%E7%B3%BB%E7%BB%9F%26%E7%8E%AF%E5%A2%83/ubuntu/#10","title":"10","text":"<p>ubuntu \u5b89\u88c5\u65b0\u7248\u672c\u7684 python</p> <p>\u7531\u4e8e yolov8 \u597d\u50cf\u8981\u6c42 3.8 \u4ee5\u4e0a\u7684 python \uff0c\u800c ubuntu18.04 \u81ea\u5e26\u7684 python3 \u662f 3.6.9 \u7684\uff0c\u8fd0\u884c\u547d\u4ee4</p> <pre><code>sudo apt install python3\n</code></pre> <p>\u8fd8\u663e\u793a</p> <pre><code>python3 \u5df2\u7ecf\u662f\u6700\u65b0\u7248 (3.6.7-1~18.04)\u3002\n</code></pre> <p>Ubuntu 18.04 Python 3.9 \u6e90\u7801\u7f16\u8bd1\u5b89\u88c5_ubuntu18.04\u6e90\u7801\u5b89\u88c5python-CSDN\u535a\u5ba2</p> <p>\u6309\u7167\u8fd9\u7bc7\u6587\u7ae0\uff0c\u5148\u4e0b\u8f7d <code>.tgz</code> \u6587\u4ef6</p> <p>\u53ef\u4ee5\u5728 \u534e\u4e3a\u6e90 \u4e2d\u4e0b\u8f7d</p> <p>Index of python-local (huaweicloud.com)</p> <p>\u7136\u540e</p> <pre><code>tar -tvf Python-3.10.13.tgz\ntar -zxvf Python-3.10.13.tgz\ncd Python-3.10.13\n./configure\nsudo make install\n</code></pre> <p><code>make</code> \u597d\u4e4b\u540e\uff0c\u867d\u7136\u4f1a\u663e\u793a</p> <pre><code>WARNING: Running pip as the 'root' user can result in broken permissions and conflicting behaviour with the system package manager. It is recommended to use a virtual environment instead: https://pip.pypa.io/warnings/venv\n</code></pre> <p>\u4f46\u5176\u5b9e\u5df2\u7ecf\u5b89\u88c5\u597d\u4e86\uff0c</p> <p>\u6b64\u65f6\u8fd0\u884c <code>python3</code> \u4ecd\u4f1a\u8fd0\u884c\u81ea\u5e26\u7684 python3.6.9\uff0c</p> <p>\u8fd0\u884c\u65b0\u5b89\u88c5\u7684 python3.10.13 \u9700\u8981\u8fd0\u884c</p> <pre><code>python3.10\n</code></pre> <p>\u7684\u547d\u4ee4\uff0c</p> <p>pip \u4e5f\u662f\u7c7b\u4f3c</p> <pre><code>pip3.10\n</code></pre> <p>\u5b89\u88c5\u5b8c\u4e4b\u540e\u8fd8\u8bb0\u5f97\u9700\u8981\u6362\u6e90</p>"},{"location":"%E7%B3%BB%E7%BB%9F%26%E7%8E%AF%E5%A2%83/ubuntu/#11","title":"11","text":"<pre><code>ImportError: No module named '_ctypes'\n</code></pre> <p>\u65b0\u88c5\u7684 python3.10 \u5728\u88c5\u597d\u73af\u5883\u4e4b\u540e\u5c1d\u8bd5\u8fd0\u884c yolov8 \uff0c\u7136\u540e\u663e\u793a\u4e86\u4e0a\u9762\u7684\u62a5\u9519\u4fe1\u606f\uff0c\u5728\u7f51\u4e0a\u67e5\u4e86\u4e00\u4e0b\uff0c\u8fd9\u597d\u50cf\u662f python \u5185\u7f6e\u7684\u6a21\u5757\uff0c\u6240\u4ee5\u6211\u8ba4\u4e3a\u662f python \u5728\u5b89\u88c5\u65f6\u6ca1\u5b89\u88c5\u597d\uff0c</p> <p>\u7136\u540e\u53c2\u8003\u8fd9\u7bc7\u8ba8\u8bba</p> <p>python - Python3: ImportError: No module named '_ctypes' when using Value from module multiprocessing - Stack Overflow</p> <p>\u7684\u8fd9\u4e2a\u56de\u7b54\uff0c\u5b89\u88c5\u4e00\u4e0b <code>libffi-dev</code> \u5c31\u53ef\u4ee5</p> <pre><code>sudo apt install libffi-dev\n</code></pre> <p>\u4f46\u662f\u6211\u5b89\u88c5\u597d\u4e4b\u540e\u8fd0\u884c\u8fd8\u662f\u6709\u8fd9\u4e2a\u62a5\u9519\uff0c\u7136\u540e\u6211\u91cd\u65b0\u8fd0\u884c\u547d\u4ee4</p> <pre><code>./configure\nsudo make install\n</code></pre> <p>\u91cd\u65b0\u5b89\u88c5\u4e86\u4e00\u4e0b python3.10 \uff0c\u518d\u6b21\u53bb\u8fd0\u884c yolov8 \uff0c\u8fd9\u4e2a\u62a5\u9519\u4fe1\u606f\u6d88\u5931\u4e86</p>"},{"location":"%E7%B3%BB%E7%BB%9F%26%E7%8E%AF%E5%A2%83/vim/","title":"Vim","text":"<p> \u7ea6 955 \u4e2a\u5b57  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 3 \u5206\u949f</p>"},{"location":"%E7%B3%BB%E7%BB%9F%26%E7%8E%AF%E5%A2%83/vim/#1","title":"1","text":"<p>\u6700\u5f3aVim\u65b0\u624b\u6307\u5357\uff0c\u624b\u628a\u624b\u6559\u4f60\u6253\u9020\u53ea\u5c5e\u4e8e\u81ea\u5df1\u7684\u4ee3\u7801\u7f16\u8f91\u5668\uff01_\u54d4\u54e9\u54d4\u54e9_bilibili</p> <p>\u4e09\u4e2a\u4e3b\u8981(\u5e38\u7528)\u6a21\u5f0f\uff1a</p> <ul> <li>\u666e\u901a\u6a21\u5f0f(\u9ed8\u8ba4\u6a21\u5f0f)</li> <li>\u8f93\u5165\u6a21\u5f0f</li> <li>\u547d\u4ee4\u884c\u6a21\u5f0f</li> </ul> <p>\u666e\u901a\u6a21\u5f0f\u8fdb\u5165\u8f93\u5165\u6a21\u5f0f\uff0c\u6309 <code>i</code> \u952e\uff0c\u4ece\u8f93\u5165\u6a21\u5f0f\u9000\u51fa\uff0c\u6309 <code>Esc</code> \u952e</p> <p>\u5176\u4ed6\u8fdb\u5165\u8f93\u5165\u6a21\u5f0f\u7684\u65b9\u5f0f</p> <p>(9\u6761\u6d88\u606f) vim \u6587\u672c\u7f16\u8f91\u5668\u7684\u8f93\u5165\u6a21\u5f0f i\u3001a\u3001o\u3001 s\u3001 I\u3001 A\u3001 O\u3001 S \u533a\u522b_vim s\u662f\u4ec0\u4e48_\u4e91\u5c71\u5c0f\u5c0f\u5b50\u7684\u535a\u5ba2-CSDN\u535a\u5ba2</p> <p>\u666e\u901a\u6a21\u5f0f\u8fdb\u5165\u547d\u4ee4\u884c\u6a21\u5f0f\uff0c\u6309 <code>:</code> \u952e\uff0c\u9000\u51fa\u547d\u4ee4\u884c\u6a21\u5f0f\uff0c\u6309 <code>Esc</code> \u952e</p> <p>\u547d\u4ee4\u884c\u6a21\u5f0f\u5e38\u7528\u547d\u4ee4\uff1a</p> <ul> <li>\u6b63\u5e38\u9000\u51fa\uff1a</li> </ul> <ul> <li><code>:q</code></li> </ul> <p>\u6216</p> <ul> <li><code>:quit</code></li> </ul> <p>( <code>q</code> \u4e3a <code>quit</code> \u7684\u7f29\u5199)</p> <ul> <li>\u4fdd\u5b58\uff1a</li> </ul> <ul> <li><code>:w</code></li> </ul> <p>\u4fdd\u5b58\u5e76\u9000\u51fa\uff1a</p> <ul> <li><code>:wq</code></li> </ul> <ul> <li>\u67e5\u770b\u5e2e\u52a9\uff1a</li> </ul> <ul> <li><code>:h</code></li> </ul> <p>\u6216</p> <ul> <li><code>:help</code></li> </ul> <p>\u4f8b\u5982\uff0c\u67e5\u770b\u9000\u51fa\u7684\u9009\u9879\uff1a</p> <p><code>:h :q</code></p> <p>\u666e\u901a\u6a21\u5f0f\u5e38\u7528\u64cd\u4f5c\uff1a</p> <ul> <li>\u79fb\u52a8</li> </ul> <ul> <li>\u8f93\u5165 \u6570\u5b57\u952e + H J K L\uff0c\u5411\u5bf9\u5e94\u65b9\u5411\u79fb\u52a8x\u683c/\u884c\uff0c\u5982 4+J \u5411\u4e0b\u79fb\u52a84\u884c</li> <li>W (\u5bf9\u5e94word) \u79fb\u52a8\u5230\u4e0b\u4e00\u4e2a\u5355\u8bcd\u7684\u9996\u5b57\u6bcd\uff0cB (beginning) \u79fb\u52a8\u5230\u672c\u5355\u8bcd(\u6216\u4e0a\u4e00\u4e2a\u5355\u8bcd)\u7684\u9996\u5b57\u6bcd</li> <li>F (find)  + \u4e00\u4e2a\u5b57\u6bcd\uff0c\u8df3\u8f6c\u5230\u4e0b\u4e00\u4e2a\u6700\u8fd1\u7684\u5bf9\u5e94\u5b57\u6bcd\uff0c\u5982 F+T \u8df3\u8f6c\u5230\u4e0b\u4e00\u4e2a\u6700\u8fd1\u7684 <code>t</code> </li> <li>Ctrl+U (PgUp) Ctrl+D (PgDn)\uff0c\u5411\u4e0a\u5411\u4e0b\u7ffb\u9875</li> <li>G+G \u79fb\u52a8\u5230\u6587\u672c\u5f00\u5934\uff0cShift+G \u79fb\u52a8\u5230\u6587\u672c\u672b\u5c3e</li> </ul> <ul> <li>\u7f16\u8f91</li> </ul> <ul> <li>\u6309 Y \u952e\u590d\u5236(yank\uff0c\u62c9)\uff0c\u53ef\u548c\u5176\u4ed6\u7ec4\u5408\uff0c\u5982\uff1a<ul> <li>Y+A+W (yank + all + word)\u590d\u5236\u5149\u6807\u6240\u5728\u7684\u6574\u4e2a\u5355\u8bcd</li> <li>Y+W \u6216 Y+B (\u542b\u5f53\u524d\u5149\u6807\u5b57\u6bcd)\u590d\u5236\u5230\u5f53\u524d\u5355\u8bcd\u7684\u5c3e/\u9996\u5b57\u6bcd</li> <li>Y+5+H \u6216 Y+5+L (\u542b\u5f53\u524d\u5149\u6807\u5b57\u6bcd)\u5411\u5de6/\u53f3\u590d\u52365\u683c\u7684\u6587\u672c\uff0c\u5982\u679c\u4e0d\u8f93\u6570\u5b57\u952e\u5219\u53ea\u590d\u5236\u5f53\u524d\u683c\u7684\u5b57\u6bcd</li> <li>Y+3+J \u6216 Y+3+K (\u542b\u5f53\u524d\u884c)\u5411\u4e0b/\u4e0a\u590d\u52363\u884c\u7684\u6587\u672c\uff0c\u5982\u679c\u4e0d\u8f93\u6570\u5b57\u952e\u5219\u53ea\u590d\u5236\u5f53\u524d\u884c</li> <li>Y+F+H \u590d\u5236\u5230\u4e0b\u4e00\u4e2a\u6700\u8fd1\u7684 <code>h</code> \u4e4b\u95f4\u7684\u6587\u672c</li> </ul> </li> <li>\u6309 P \u952e(paste)\u5728\u5149\u6807\u53f3\u4fa7\u7c98\u8d34</li> <li>U \u952e(undo)\u64a4\u9500</li> <li>C \u952e(change)\u4fee\u6539\uff0c\u9009\u4e2d\u90e8\u5206\u5185\u5bb9\u5220\u9664(\u526a\u5207)\u5e76\u8fdb\u5165\u8f93\u5165\u6a21\u5f0f\uff0c\u9009\u4e2d\u65b9\u6cd5\u4e0e \u590d\u5236 \u64cd\u4f5c\u7c7b\u4f3c\uff1a<ul> <li>C+A+W (change all word) \u5220\u9664\u5f53\u524d\u5355\u8bcd\u5e76\u8fdb\u5165\u8f93\u5165\u6a21\u5f0f\uff0c......</li> </ul> </li> </ul>"},{"location":"%E7%B3%BB%E7%BB%9F%26%E7%8E%AF%E5%A2%83/vim/#2","title":"2","text":"<p>\u53ef\u53c2\u8003\u7684\u4f7f\u7528\u624b\u518c</p> <p>oeasy-vim-tutorial/markdown/01-49420-\u5b58\u6d3b\u4e0b\u6765.sy.md at main \u00b7 overmind1980/oeasy-vim-tutorial (github.com)</p>"},{"location":"%E7%B3%BB%E7%BB%9F%26%E7%8E%AF%E5%A2%83/vim/#3","title":"3","text":"<p>Ctrl+C \u4e5f\u53ef\u4ee5\u4ece\u63d2\u5165\u6a21\u5f0f\u9000\u51fa\u5230\u666e\u901a\u6a21\u5f0f</p> <p>\u53e6\u5b58\u4e3a\u547d\u4ee4\u4e3a <code>:sav[eas] {\u6587\u4ef6\u540d}</code> </p> <p><code>:w</code> \u547d\u4ee4\u7684\u4f7f\u7528\u6280\u5de7\uff1a</p> <ul> <li>\u6253\u5f00\u5df2\u6709\u6587\u4ef6\u8fdb\u884c\u7f16\u8f91\uff0c\u76f4\u63a5\u8f93\u5165 <code>:w</code> \u547d\u4ee4\u7b49\u4e8e\u4fdd\u5b58</li> <li>\u5982\u679c\u5728\u547d\u4ee4\u884c\u4e2d\u76f4\u63a5\u8f93\u5165 <code>vim</code> \u8fdb\u884c\u7f16\u8f91(\u6253\u5f00\u4e00\u4e2a\u4e34\u65f6\u6587\u4ef6\u8fdb\u884c\u7f16\u8f91)\uff0c <code>:w</code> \u53ef\u4ee5\u6709\u4e24\u4e2a\u7528\u5904\uff1a<ol> <li><code>:w {\u6587\u4ef6\u540d}</code> \u5c06\u8f93\u5165\u5185\u5bb9\u5b58\u50a8\u4e3a\u67d0\u4e2a\u65b0\u6587\u4ef6(\u5982\u679c\u4e3a\u5df2\u6709\u6587\u4ef6\u4f1a\u63d0\u793a\u5df2\u5b58\u5728\uff0c\u5982\u679c\u8981\u5f3a\u884c\u8986\u76d6\u53ef\u4ee5\u52a0\u4e0a <code>!</code> )</li> <li><code>:w &gt;&gt; {\u6587\u4ef6\u540d}</code> \u5c06\u8f93\u5165\u5185\u5bb9\u8ffd\u52a0\u5230\u5df2\u5b58\u5728\u6587\u4ef6\u7684\u672b\u5c3e( <code>&gt;&gt;</code> \u8868\u793a\u8ffd\u52a0)</li> </ol> </li> </ul> <p>Shift+I \u548c Shift+A \u5206\u522b\u4e3a\u5728\u884c\u9996/\u672b\u63d2\u5165\uff0cO \u548c Shift+O \u5206\u522b\u4e3a\u5728\u5f53\u524d\u884c\u4e4b\u4e0b/\u4e0a\u63d2\u5165\u65b0\u884c\u5e76\u8f93\u5165</p> <p>. \u4e3a\u91cd\u590d\u6700\u65b0\u7684\u64cd\u4f5c\uff0cU \u548c Ctrl+R \u5206\u522b\u548c\u64a4\u9500/\u6062\u590d\u64a4\u9500</p> <p>\u63d2\u5165\u6a21\u5f0f\u4e0b\u6309 Ctrl+O \u952e\u53ef\u4ee5\u8fdb\u5165 \u63d2\u5165\u666e\u901a\u6a21\u5f0f \uff0c\u8fdb\u884c\u4e00\u6b21\u666e\u901a\u7684\u547d\u4ee4\u7136\u540e\u56de\u5230\u63d2\u5165\u6a21\u5f0f</p> <p>Shift+4 \u548c Shift+6 \u5206\u522b\u4e3a\u8df3\u5230\u884c\u672b/\u9996</p> <p>E \u952e\u662f\u5230\u5355\u8bcd\u5c3e\u5b57\u6bcd\uff0cShift \u952e \u52a0 W E B \u53ef\u4ee5\u8df3\u5927\u8bcd(\u53ea\u6309\u7a7a\u683c\u6362\u884c\u7b97\u8bcd)</p> <p>F \u548c Shift+F \u5206\u522b\u4e3a\u5411\u540e/\u524d\u67e5\u627e\u5b57\u6bcd\uff0c\u67e5\u627e\u540e\u6309 , \u53ef\u4ee5\u53cd\u65b9\u5411\u67e5\u627e/\u79fb\u52a8</p> <p>\u9ed8\u8ba4\u914d\u7f6e\u4e0b vim \u4e2d ; \u952e\u662f\u76f4\u63a5\u6620\u5c04 : \u952e\u7684(\u5373\u5982\u679c\u8981\u8fdb\u5165\u547d\u4ee4\u884c\u53ef\u4ee5\u76f4\u63a5\u6309 ; \u800c\u4e0d\u9700\u8981\u6309 Shift )</p> <p>Shift+= \u548c - \u5206\u522b\u4e3a\u8df3\u5230\u4e0b/\u4e0a\u4e00\u884c\u9996</p> <p>\u4e24\u4e2a\u4f7f\u7528\u6280\u5de7\uff1a</p> <ol> <li>G+G+=+Shift+G \u53ef\u4ee5\u5168\u6587\u81ea\u52a8(\u8c03\u6574)\u7f29\u8fdb</li> <li>\u6570\u5b57 \u52a0 Shift+G \u53ef\u4ee5\u8df3\u8f6c\u5230\u6307\u5b9a\u884c\u53f7(\u5bf9\u4e8e\u62a5\u9519\u975e\u5e38\u6709\u7528)</li> </ol>"},{"location":"zh/","title":"\u6b22\u8fce\u7ffb\u9605\u6211\u7684\u624b\u518c","text":"<p> \u7ea6 8 \u4e2a\u5b57 </p> <p></p>"},{"location":"zh/blog/","title":"Blog","text":"<p> \u7ea6 5 \u4e2a\u5b57 </p> <p>Enter the Blog</p>"},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part1/","title":"CS61A Part 1","text":"<p> \u7ea6 19148 \u4e2a\u5b57  1099 \u884c\u4ee3\u7801  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 78 \u5206\u949f</p> <p>Info</p> <p>CS 61A Fall 2020 (berkeley.edu)</p> <p>Tip</p> <p>\u505a\u5b8c\u7684\u4f5c\u4e1a\u7684\u4ee3\u7801:</p> <ul> <li>https://github.com/RonaldLN/CS-61A-Fall-2020</li> <li>https://gitee.com/ronald-luo/CS-61A-Fall-2020</li> </ul> \u76ee\u5f55 Part 1 Part 2 Part 3 Lab 00 Lecture 18 Objects Lecture 31 Declarative Programming Lecture 2 Functions Lecture 18 Q&amp;A Lecture 32 Tables Lecture 2 Q&amp;A HW 04 Lecture 32 Q&amp;A HW 01 Lecture 19 Inheritance Lab 12 Homework 1 Hints Lecture 19 Q&amp;A Lecture 33 Aggregation Lecture 3 Control Lab 07 Lecture 33 Q&amp;A Lecture 3 Q&amp;A Project Ants Lecture 34 Database Lecture 4 Higher-Order Functions Lecture 20 Representation Lecture 34 Q&amp;A Project Hog Lecture 20 Q&amp;A HW 09 Lecture 5 Environments Lecture 21 Composition Lecture 35 Tail Calls Lecture 6 Design HW 05 Lab 13 Lecture 6 Q&amp;A Lecture 22 Efficiency Lecture 36 Macros Lecture 7 Function Examples Lab 08 Lab 14 Lecture 7 Q&amp;A Lecture 23 Decomposition Lecture 36 Q&amp;A HW 02 Lecture 23 Q&amp;A Lecture 37 Final Examples Lecture 10 Containers Lecture 24 Data Example Lecture 37 Q&amp;A Lecture 10 Q&amp;A Lecture 24 Q&amp;A Lecture 38 Conclusion Lab 04 Lab 09 Lecture 11 Data Abstraction Lecture 25 Users Lecture 11 Q&amp;A Lecture 25 Q&amp;A Project Cats Lecture 26 Ethical AI &amp; Data Lecture 12 Trees Lecture 27 Scheme Lecture 12 Q&amp;A Lecture 27  Q&amp;A Lab 05 Lab 10 Lecture 13 Q&amp;A HW 06 Lecture 14 Circuits Lecture 28 Exception Lecture 14 Q&amp;A Lecture 28 Q&amp;A Lecture 15 Mutable Values Lecture 29 Calculater Lecture 15 Q&amp;A Lecture 29 Q&amp;A HW 03 HW 07 Homework 3 Hints Lab 11 Lecture 16 Mutable Functions Project Scheme Lecture 16 Q&amp;A Lab 06 Lecture 17 Iterations Lecture 17 Q&amp;A"},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part1/#lab-00","title":"Lab 00","text":""},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part1/#1","title":"1","text":"<p>\u8fd0\u884chw\u6216\u8005lab\u4efb\u52a1\u7684\u5bf9\u5e94\u547d\u4ee4\u65f6\uff0c\u90fd\u52a0\u4e0a <code>--local</code> \uff0c\u5c31\u53ea\u5728\u672c\u5730\u8fd0\u884c\uff0c\u4e0d\u4f1a\u4e0a\u4f20\u7136\u540e\u8981\u6c42\u8f93\u5165\u90ae\u7bb1\uff0c\u5982</p> <pre><code>python ok [-q xxx] [-u] --local\n</code></pre>"},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part1/#lecture-2-functions","title":"Lecture 2 Functions","text":""},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part1/#1_1","title":"1","text":"<p>\u53d8\u91cf\u53ef\u4ee5 \u201c\u6307\u5411\u201d \u4e00\u4e2a\u51fd\u6570</p> <p></p>"},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part1/#2","title":"2","text":"<p>cs61a\u4e2d\u4f7f\u7528\u7684\u53ef\u4ee5\u663e\u793apython\u7a0b\u5e8f\u4e2d environment \u3001 frame \u7b49\u4fe1\u606f\u7684\u5728\u7ebf\u7f51\u7ad9\uff1a</p> <p>Online Python Tutor - Composing Programs - Python 3</p> <p>John DeNero \u7f16\u5199\u7684cs61a\u7684\u914d\u5957\u82f1\u6587\u539f\u7248\u6559\u6750\uff1a</p> <p>Composing Programs</p> <p>\u5728github\u4e0a\u53d1\u73b0\u7684\u5176\u5bf9\u5e94\u4ed3\u5e93\uff1a</p> <p>DestructHub/composing-programs: Annotation and code about SICP Python (github.com)</p> <p>github\u4e0a\u53d1\u73b0\u7684\u975e\u5b98\u65b9\u7684\u8fd8\u5728\u7ffb\u8bd1(23/7/21\u53d1\u73b0)\u7684\u4e2d\u6587\u7248\u7684\u4ed3\u5e93\uff1a</p> <p>csfive/composing-programs-zh: \ud83d\udea7 CS61A \u6559\u6750\u300aComposing Programs\u300b\u5373\u300a\u8ba1\u7b97\u673a\u7a0b\u5e8f\u7684\u6784\u9020\u4e0e\u89e3\u91ca\u300bPython \u7248\u672c\u7684\u4e2d\u6587\u7ffb\u8bd1 (github.com)</p> <p>\u5176\u5bf9\u5e94\u7f51\u9875\uff1a</p> <p>CSfive | CSfive</p>"},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part1/#3","title":"3","text":"<p>\u8c03\u7528\u51fd\u6570\u65f6\uff0c\u4f1a\u521b\u5efa\u4e00\u4e2a\u65b0\u7684frame\uff0c\u4e14frame\u7684\u540d\u5b57\u4e3a\u51fd\u6570\u672c\u8eab\u7684\u540d\u5b57(\u5373\u521b\u5efa\u65f6\u7684\u540d\u5b57 (\u5982\u679c\u662flambda\u533f\u540d\u51fd\u6570\u5219 \u6ca1\u6709\u540d\u5b57/\u540d\u5b57\u4e3alambda))\uff0c</p> <p></p> <p>\u5373\u5982\u679c\u7528\u67d0\u4e2a\u53d8\u91cf\u6307\u5411\u4e86\u51fd\u6570\uff0c\u5728\u7528\u53d8\u91cf\u8c03\u7528\u51fd\u6570\u7684\u65f6\uff0c\u521b\u5efa\u7684frame\u540d\u5b57\u4ecd\u4e3a\u539f\u51fd\u6570\u540d</p> <p></p>"},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part1/#4","title":"4","text":"<p>python\u4e2d\uff0c\u8d4b\u503c\u53ef\u4ee5\u540c\u65f6\u5bf9\u4e24\u4e2a\u53d8\u91cf\u8fdb\u884c\uff0c\u4f1a\u4f7f\u4ea4\u6362\u53d8\u91cf\u7684\u503c\u7b49\u64cd\u4f5c\u66f4\u65b9\u4fbf\uff0c\u5982</p> <pre><code>a, b = b, a\n</code></pre>"},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part1/#lecture-2-qa","title":"Lecture 2 Q&amp;A","text":""},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part1/#1_2","title":"1","text":"<p>\u5728\u54ea\u4e2aframe\u4e2d\u5b9a\u4e49(define)\u7684\u51fd\u6570\uff0c\u5176parent\u5c31\u662f\u54ea\u4e2aframe\uff0c\u9664\u4e86Global frame\u5176\u4ed6\u90fd\u6709parent</p>"},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part1/#hw-01","title":"HW 01","text":""},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part1/#1_3","title":"1","text":"<p>Q3\uff0c\u53ef\u4ee5\u7528\u603b\u7684\u51cf\u53bb\u6700\u5927\u7684\uff0c\u5f97\u5230\u6700\u5c0f\u7684\u4e24\u4e2a</p> code <pre><code>def two_of_three(x, y, z):\n    return x * x + y * y + z * z - max(x, y, z) ** 2\n</code></pre>"},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part1/#2_1","title":"2","text":"<p>Q5</p> <pre><code>def with_if_function():\n    \"\"\"\n    &gt;&gt;&gt; result = with_if_function()\n    42\n    47\n    &gt;&gt;&gt; print(result)\n    None\n    \"\"\"\n    return if_function(cond(), true_func(), false_func())\n</code></pre> <p>\u7531\u4e8e\u5728 <code>return</code> \u8bed\u53e5\u4e2d\uff0c\u586b\u5165\u7684\u65f6\u8c03\u7528\u7684\u51fd\u6570( <code>true_func()</code> \u548c <code>false_func()</code> )\uff0c\u8fd0\u884c\u7684\u987a\u5e8f\u662f \u5148\u8fdb\u884c <code>true_func()</code> \u548c <code>false_func()</code> \u4e24\u4e2a\u51fd\u6570\u7684\u8c03\u7528\uff0c\u518d\u5c06\u4ed6\u4eec\u7684\u8fd4\u56de\u503c\u4f20\u9012\u7ed9 <code>if_function()</code> \u4e2d\uff0c\u6240\u4ee5(\u7531\u4e8e\u4e24\u4e2a\u51fd\u6570\u88ab\u8c03\u7528\u4e86) 42\u548c47\u90fd\u4f1a\u8f93\u51fa</p> <pre><code>def with_if_statement():\n    \"\"\"\n    &gt;&gt;&gt; result = with_if_statement()\n    47\n    &gt;&gt;&gt; print(result)\n    None\n    \"\"\"\n    if cond():\n        return true_func()\n    else:\n        return false_func()\n</code></pre> <p>\u800c\u5728\u8fd9\u4e2a\u51fd\u6570\u4e2d\uff0c\u5219\u53ea\u4f1a\u8c03\u7528 <code>true_func()</code> \u548c <code>false_func()</code> \u5176\u4e2d\u4e00\u4e2a\u51fd\u6570\uff0c\u56e0\u6b64\u53ea\u4f1a\u8f93\u51fa\u4e00\u4e2a\u6570\u5b57</p> code <pre><code>def if_function(condition, true_result, false_result):\n    \"\"\"Return true_result if condition is a true value, and\n    false_result otherwise.\n\n    &gt;&gt;&gt; if_function(True, 2, 3)\n    2\n    &gt;&gt;&gt; if_function(False, 2, 3)\n    3\n    &gt;&gt;&gt; if_function(3==2, 3+2, 3-2)\n    1\n    &gt;&gt;&gt; if_function(3&gt;2, 3+2, 3-2)\n    5\n    \"\"\"\n    if condition:\n        return true_result\n    else:\n        return false_result\n\n\ndef with_if_statement():\n    \"\"\"\n    &gt;&gt;&gt; result = with_if_statement()\n    47\n    &gt;&gt;&gt; print(result)\n    None\n    \"\"\"\n    if cond():\n        return true_func()\n    else:\n        return false_func()\n\n\ndef with_if_function():\n    \"\"\"\n    &gt;&gt;&gt; result = with_if_function()\n    42\n    47\n    &gt;&gt;&gt; print(result)\n    None\n    \"\"\"\n    return if_function(cond(), true_func(), false_func())\n\n\ndef cond():\n    \"*** YOUR CODE HERE ***\"\n    return False\n\ndef true_func():\n    \"*** YOUR CODE HERE ***\"\n    print(42)\n\n\ndef false_func():\n    \"*** YOUR CODE HERE ***\"\n    print(47)\n</code></pre>"},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part1/#homework-1-hints","title":"Homework 1 Hints","text":""},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part1/#1_4","title":"1","text":"<p>Q3 \u7684\u4e24\u79cd\u601d\u8def\uff1a</p> <ol> <li>\u5168\u90e8\u7684\u7ed3\u679c\u53d6\u6700\u5c0f</li> <li>\u5168\u90e8\u5e73\u65b9\u548c\u51cf\u53bb\u6700\u5927\u5e73\u65b9</li> </ol> <p></p>"},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part1/#lecture-3-control","title":"Lecture 3 Control","text":""},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part1/#1_5","title":"1","text":"<p><code>print()</code> \u53ef\u4ee5\u4f20\u5165\u591a\u4e2a\u53c2\u6570\uff0c\u6253\u5370\u65f6\u6bcf\u4e2a\u53c2\u6570\u4e4b\u95f4\u4f1a\u7a7a\u4e00\u4e2a\u7a7a\u683c</p>"},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part1/#2_2","title":"2","text":"<ul> <li> <p>\u5728 a\u51fd\u6570 \u53c2\u6570\u8c03\u7528\u7684\u4f4d\u7f6e\u586b\u5165 \u88ab\u8c03\u7528\u7684b\u51fd\u6570 \uff0c\u5b9e\u9645\u4e0a\u4f7f\u5148\u8fd0\u884c b\u51fd\u6570 \uff0c\u518d\u5c06b\u7684\u8fd4\u56de\u503c\u4f20\u5165 a\u51fd\u6570</p> </li> <li> <p><code>print()</code> \u7684\u8fd4\u56de\u503c\u662f <code>None</code> </p> </li> </ul> <p>\u8865\u5145\uff1a</p> <p></p>"},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part1/#3_1","title":"3","text":"<p>Quote</p> <p>An environment is a sequence of frames.</p> <ul> <li>The global frame alone</li> <li>A local, then the global frame</li> </ul> <p></p> <p></p> <p>\u53d8\u91cf\u540d\u5728\u67e5\u627e\u5bf9\u5e94\u7684\u503c\u7684\u65f6\u5019\uff0c\u4f1a\u4ece\u5f53\u524d\u7684 frame \u4f9d\u6b21\u5411\u4e0a(parent frame) \u67e5\u627e\u503c\uff0c\u5e76\u7ed1\u5b9a\u6700\u65e9\u627e\u5230\u7684\u503c\uff0c\u5982\u56fe\u4e2d\u7684 <code>square</code> \u5148\u5728f1\u4e2d\u67e5\u627e(\u5982\u679cf1\u6ca1\u6709\u518d\u5728Global frame\u4e2d\u67e5\u627e)\uff0c\u5e76\u7ed1\u5b9a\u4e864 (\u5982\u679cf1\u4e2d\u6ca1\u6709 <code>square</code> \u5bf9\u5e94\u7684\u503c\uff0c\u5219\u4f1a\u7ed1\u5b9a\u5230global frame\u4e2d\u7684func square)</p> <p>\u6b64\u5916\uff0c</p> <p>\u56fe\u4e2d\u4e5f\u53ef\u4ee5\u53d1\u73b0\uff0cframe\u7684parent\u662f\u6839\u636e\u4ee3\u7801\u7684\u7ed3\u6784\u6765\u786e\u5b9a\u7684\uff0c\u800c\u4e0d\u662f\u6839\u636e\u8c03\u7528\u7684\u5173\u7cfb\u6765\u786e\u5b9a\u7684\uff0c\u5982 \u7b2c\u4e00\u5f20\u56fe\u4e2d <code>square(square(3))</code> \u91cc\u9762\u548c\u5916\u9762\u7684 <code>square</code> \u7684 parent \u90fd\u662f global frame</p> <p>\u8ddf Lecture 2 Q&amp;A \u4e2d\u4e00\u6837</p>"},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part1/#4_1","title":"4","text":"<ul> <li> <p><code>bash     python -i xxx.py</code></p> <p>\u53ef\u4ee5\u5c06 <code>xxx.py</code> \u6587\u4ef6\u4e2d\u7684\u4ee3\u7801\u5f15\u5165\u547d\u4ee4\u884c\u6216\u8005\u7ec8\u7aef</p> </li> <li> <p>\u547d\u4ee4\u884c/\u7ec8\u7aef\u4e2d\u4f7f\u7528python\u65f6\uff0cCtrl+D <code>^D</code> \u53ef\u4ee5\u6e05\u7a7a\u754c\u9762</p> </li> </ul> <p></p> <ul> <li> <p><code>bash     python -m doctest [-v] xxx.py</code></p> <p>\u53ef\u4ee5\u8fd0\u884c <code>xxx.py</code> \u4e2d\u51fd\u6570\u8bf4\u660e\u8bed\u53e5\u90e8\u5206\u7684\u4ee3\u7801(\u7528\u4e8e\u6d4b\u8bd5\u51fd\u6570\u80fd\u5426\u8f93\u5165\u6b63\u786e\u9884\u671f\u7ed3\u679c)\uff0c\u5982\u679c\u62a5\u9519\u4f1a\u663e\u793a\u51fa\u62a5\u9519\u4fe1\u606f\uff0c\u5982\u679c\u4e0d\u62a5\u9519\u5219\u4e0d\u663e\u793a\u4fe1\u606f \u800c\u6b63\u5e38\u663e\u793a\u4e0b\u4e00\u884c(\u5982\u679c\u6b7b\u5faa\u73af\u5c31\u4e00\u76f4\u4e0d\u663e\u793a\u4e0b\u4e00\u884c)\uff0c</p> <p><code>-v</code> \u9009\u9879\u662f\u4e0d\u62a5\u9519\u4e5f\u80fd\u663e\u793a\u6bcf\u4e2a\u8f93\u5165\u7684\u6d4b\u8bd5\u7ed3\u679c\uff0c\u5982\u4e0a\u56fe</p> </li> </ul>"},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part1/#5","title":"5","text":"<p>\u771f\u503c\u4e3a\u5047\u7684\u503c\uff1a <code>False</code> , <code>0</code> , <code>''</code> , <code>None</code> \u7b49\u7b49</p> <p>\u5176\u4f59\u5176\u4ed6\u503c\u57fa\u672c\u4e0a\u90fd\u4e3a\u771f</p>"},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part1/#6","title":"6","text":"<p>\u8001\u5e08\u5199\u5206\u89e3\u8d28\u56e0\u6570\u7684\u601d\u8def\u503c\u5f97\u5b66\u4e60\uff1a</p> <p>\u5c06\u95ee\u9898\u5206\u89e3\u6210\u4e24\u6b65\uff1a</p> <ol> <li>\u4e00\u4e2a\u6570\u7684\u6700\u5c0f\u56e0\u6570(\u56e0\u4e3a\u8981\u6c42\u8981\u5347\u5e8f)</li> <li>\u518d\u5faa\u73af\u627e\u6700\u5c0f\u56e0\u6570\uff0c\u4ece\u800c\u83b7\u5f97\u5347\u5e8f\u7684\u5206\u89e3\u8d28\u56e0\u6570</li> </ol> <p>\u5e76\u4e14\u5c06\u627e\u6700\u5c0f\u7684\u56e0\u6570\u8fd9\u4e2a\u529f\u80fd\u5355\u72ec\u5199\u6210\u4e00\u4e2a\u51fd\u6570\uff0c\u8fd9\u6837\u770b\u8d77\u6765\u5c31\u5f88\u6e05\u6670</p> <pre><code>def prime_factors(n):\n    \"\"\"Print the prime factors of n in non-decreasing order.\n\n    &gt;&gt;&gt; prime_factors(8)\n    2\n    2\n    2\n    &gt;&gt;&gt; prime_factors(9)\n    3\n    3\n    &gt;&gt;&gt; prime_factors(10)\n    2\n    5\n    &gt;&gt;&gt; prime_factors(11)\n    11\n    &gt;&gt;&gt; prime_factors(12)\n    2\n    2\n    3\n    &gt;&gt;&gt; prime_factors(858)\n    2\n    3\n    11\n    13\n    \"\"\"\n    while n &gt; 1:\n        k = smallest_prime_factor(n)\n        n = n // k\n        print(k)\n\ndef smallest_prime_factor(n):\n    \"\"\"Return the smallest k &gt; 1 that evenly divides n.\"\"\"\n    k = 2\n    while n % k != 0:\n        k = k + 1\n    return k\n</code></pre>"},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part1/#lecture-3-qa","title":"Lecture 3 Q&amp;A","text":""},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part1/#1_6","title":"1","text":"<p>\u7531\u4e8e\u540c\u4e00\u4e2a\u51fd\u6570\u5185\u7684\u540c\u4e00\u4e2a\u53d8\u91cf\u540d\u5fc5\u987b\u6307\u5411\u540c\u4e00\u4e2a\u6846\u67b6\u4e0b\u7684\u4e1c\u897f\uff0c\u6240\u4ee5</p> <pre><code>x = 2\n\ndef f():\n    print(x)\n    x = 3\n    print(x)\n\nf()\n</code></pre> <p><code>x = 3</code> \u8fd9\u884c\u5df2\u7ecf\u5bf9local\u6846\u67b6\u4e0b\u7684x\u8d4b\u503c\uff0c\u6240\u4ee5 f \u51fd\u6570\u5185\u7684x\u5c31\u90fd\u53ea\u80fd\u7ed1\u5b9alocal\u6846\u67b6\u4e0b\u7684\u503c\uff0c\u4e0d\u80fd\u7ed1\u5b9a\u6bcd\u6846\u67b6\u4e0b\u7684\u503c</p> <p>\u800c\u7b2c\u4e00\u4e2a <code>print(x)</code> \u5728\u6267\u884c\u65f6\uff0c(local\u6846\u67b6\u4e0b\u7684)\u53d8\u91cfx\u8fd8\u5e76\u672a\u8d4b\u503c\uff0c\u6240\u4ee5\u4f1a\u62a5\u9519\uff0c</p> <p>\u5982\u679c\u53bb\u6389 <code>x = 3</code> \u90a3\u4e48\u7a0b\u5e8f\u5c31\u4e0d\u4f1a\u62a5\u9519</p> <p>Lecture 16\u4e2d\u4e5f\u8bf4\u5230\u4e86\u8fd9\u4e00\u70b9</p>"},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part1/#lecture-4-higher-order-functions","title":"Lecture 4 Higher-Order Functions","text":""},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part1/#1_7","title":"1","text":"<p>John\u63d0\u5230\u8bbe\u8ba1\u51fd\u6570\u65f6\u9700\u8981\u6ce8\u610f\u7684\u51e0\u70b9</p> <ul> <li>Give each function exactly one job</li> <li>Don't repeat yourself (DRY). Implement a process just once, but execute it many times.</li> <li>Define functions generally.</li> </ul> <ul> <li>\u786e\u4fdd\u6bcf\u4e2a\u51fd\u6570\u53ea\u505a\u4e00\u4e2a\u4e8b\u60c5\u3002</li> <li>\u907f\u514d\u91cd\u590d\u4ee3\u7801\uff08\u9075\u5faaDRY\u539f\u5219\uff09\u3002\u5c06\u4e00\u4e2a\u8fc7\u7a0b\u5b9e\u73b0\u4e00\u6b21\uff0c\u7136\u540e\u591a\u6b21\u6267\u884c\u5b83\u3002</li> <li>\u5b9a\u4e49\u901a\u7528\u7684\u51fd\u6570\u3002</li> </ul>"},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part1/#2_3","title":"2","text":"<p><code>assert</code> \u8bed\u53e5\uff0c\u5982\u679c <code>assert</code> \u4e4b\u540e\u8868\u8fbe\u5f0f\u7684\u503c\u4e3a\u5047\uff0c\u90a3\u4e48\u5c31\u4f1a\u62a5\u9519\uff0c\u5e76\u663e\u793a\u5bf9\u5e94\u7684\u4fe1\u606f\uff0c\u5982\u4e0a\u56fe</p>"},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part1/#3_2","title":"3","text":"<p>John\u6f14\u793a <code>def</code> \u521b\u5efa\u51fa\u6765\u7684\u51fd\u6570\u6709\u56fa\u6709\u7684\u540d\u5b57\uff0c\u800c <code>lambda</code> \u521b\u5efa\u51fa\u6765\u7684\u51fd\u6570\u6ca1\u6709</p> <p></p> <p></p>"},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part1/#4_2","title":"4","text":"<p><code>if</code> \u8bed\u53e5\u53ea\u4f1a\u6267\u884c <code>if</code> \u6216\u8005 <code>else</code> \u8bed\u53e5\u4e2d\u7684\u4e00\u4e2a\uff0c\u800c\u53e6\u4e00\u4e2a\u4e0d\u4f1a\u88ab\u6267\u884c\uff0c</p> <p>\u800c\u5982\u679c\u50cf\u4e0a\u56fe\u4e00\u6837\u5b9a\u4e49\u4e00\u4e2a\u7c7b\u4f3c\u4e8e <code>if</code> \u8bed\u53e5\u7684\u51fd\u6570\uff0c\u5e76\u628a\u8868\u8fbe\u5f0f\u653e\u5728\u53c2\u6570\u4e2d\uff0c\u90a3\u4e48\u4e24\u4e2a\u8868\u8fbe\u5f0f\u90fd\u4f1a\u88ab==\u6267\u884c==\uff0c\u800c\u4f20\u5165\u7684\u662f\u8868\u8fbe\u5f0f\u7684\u7ed3\u679c/\u5bf9\u5e94\u7684\u503c</p>"},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part1/#5_1","title":"5","text":"<p><code>and</code> \u548c <code>or</code> \u8bed\u53e5\uff0c</p> <p><code>and</code> / <code>or</code> \u8bed\u53e5\u4e2d\uff0c\u5982\u679c\u9760\u524d\u7684\u8868\u8fbe\u5f0f\u7ed3\u679c\u8ba1\u7b97\u4e3a\u5047/\u771f\uff0c\u90a3\u4e48\u5c31\u4f1a\u8fd4\u56de\u8fd9\u4e2a\u7ed3\u679c\uff0c\u800c\u9760\u540e\u7684\u8868\u8fbe\u5f0f\u5c31\u4e0d\u518d\u4f1a\u6267\u884c\uff0c\u800c\u5982\u679c\u6240\u6709\u8868\u8fbe\u5f0f\u5168\u5bf9\u5e94\u4e3a\u771f/\u5047\uff0c\u90a3\u4e48\u5c31\u4f1a\u8fd4\u56de\u6700\u540e\u8868\u8fbe\u5f0f\u7684\u7ed3\u679c</p>"},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part1/#6_1","title":"6","text":"<p><code>... if ... else ...</code> \u8bed\u53e5(\u611f\u89c9\u5f88\u50cfc\u8bed\u8a00\u4e2d\u7684\u4e09\u76ee\u8fd0\u7b97\u7b26)\uff0c</p> <p>\u5224\u65ad\u6761\u4ef6\u5728\u4e2d\u95f4\uff0c\u4e3a\u771f\u5c31\u6267\u884c\u5de6\u8fb9\u7684\u8868\u8fbe\u5f0f\u5e76\u8fd4\u56de\uff0c\u4e3a\u5047\u5c31\u662f\u53f3\u8fb9</p>"},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part1/#project-hog","title":"Project Hog","text":""},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part1/#1_8","title":"1","text":"<p>Problem 7\uff0c\u8fd9\u9898\u9700\u8981\u5b9e\u73b0 <code>announce_highest</code> \u51fd\u6570\uff0c\u8fd4\u56de\u4e00\u4e2a\u51fd\u6570\uff0c</p> <p>\u8fd9\u9898\u53ef\u4ee5\u53c2\u8003\u5df2\u7ecf\u5b9e\u73b0\u597d\u7684 <code>annouce_lead_changes</code> \u51fd\u6570\uff0c\u4ee3\u7801\u7684\u7ed3\u6784\u548c\u8fd9\u4e2a\u51fd\u6570\u5927\u81f4\u76f8\u540c</p> code <pre><code>def announce_highest(who, last_score=0, running_high=0):\n    assert who == 0 or who == 1, 'The who argument should indicate a player.'\n    # BEGIN PROBLEM 7\n    \"*** YOUR CODE HERE ***\"\n    def say(score0, score1):\n        gain = (score0 if not who else score1) - last_score\n        if gain &gt; running_high:\n            print(gain, \"point(s)! The most yet for Player\", who)\n        return announce_highest(who, last_score + gain, gain if gain &gt; running_high else running_high)\n    return say\n    # END PROBLEM 7\n</code></pre>"},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part1/#2_4","title":"2","text":"<p>Problem 8\u4e2d\u63d0\u5230\uff0c\u53ef\u4ee5\u4f7f\u7528 <code>*args</code> \u6765\u4f20\u5165\u548c\u4f7f\u7528\u4e0d\u5b9a\u4e2a\u6570\u7684\u53c2\u6570</p> <p>Instead of listing formal parameters for a function, you can write <code>*args</code> . To call another function using exactly those arguments, you call it again with <code>*args</code> . For example,</p> <pre><code>&gt;&gt;&gt; def printed(f):\n...     def print_and_return(*args):\n...         result = f(*args)\n...         print('Result:', result)\n...         return result\n...     return print_and_return\n&gt;&gt;&gt; printed_pow = printed(pow)\n&gt;&gt;&gt; printed_pow(2, 8)\nResult: 256\n256\n&gt;&gt;&gt; printed_abs = printed(abs)\n&gt;&gt;&gt; printed_abs(-10)\nResult: 10\n10\n</code></pre> code <pre><code>def make_averaged(original_function, trials_count=1000):\n    # BEGIN PROBLEM 8\n    \"*** YOUR CODE HERE ***\"\n    def averaged(*args):\n        i = 0\n        sum = 0\n        while i &lt; trials_count:\n            sum += original_function(*args)\n            i += 1\n        return sum / trials_count\n    return averaged\n    # END PROBLEM 8\n</code></pre>"},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part1/#3_3","title":"3","text":"<p>Problem 9\u4e2d\u9700\u8981\u4f7f\u7528Problem 8\u4e2d\u5b9e\u73b0\u7684 <code>make_averaged</code> \u6765 \u907f\u514d\u4ee3\u7801\u7684\u91cd\u590d</p> code <pre><code>def max_scoring_num_rolls(dice=six_sided, trials_count=1000):\n    # BEGIN PROBLEM 9\n    \"*** YOUR CODE HERE ***\"\n    best_nums_rolls = 0\n    max_average_score = 0\n    averaged_roll_dice = make_averaged(roll_dice, trials_count)\n    i = 1\n    while i &lt;= 10:\n        average_score = averaged_roll_dice(i, dice)\n        if average_score &gt; max_average_score:\n            max_average_score = average_score\n            best_nums_rolls = i\n        i += 1\n    return best_nums_rolls\n    # END PROBLEM 9\n</code></pre>"},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part1/#lecture-5-environments","title":"Lecture 5 Environments","text":""},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part1/#1_9","title":"1","text":"<p>John\u63d0\u5230\u6846\u67b6 frame</p> <ul> <li>Every user-defined function has a parent frame (often global)</li> <li>The parent of a function is the frame in which it was defined</li> <li>Every local frame has a parent frame (often global)</li> <li>The parent of a frame is the parent of the function called</li> </ul> <ul> <li>\u6bcf\u4e2a\u81ea\u5b9a\u4e49\u51fd\u6570\u90fd\u6709\u4e00\u4e2a\u6bcd\u6846\u67b6(\u901a\u5e38\u662f\u5168\u5c40\u6846\u67b6)</li> <li>\u51fd\u6570\u7684\u7236\u7ea7\u5c31\u662f\u5b83\u88ab\u5b9a\u4e49\u65f6\u6240\u5904\u7684\u6846\u67b6</li> <li>\u6bcf\u4e2a\u672c\u5730\u6846\u67b6\u90fd\u6709\u4e00\u4e2a\u6bcd\u6846\u67b6(\u901a\u5e38\u662f\u5168\u5c40\u6846\u67b6)</li> <li>\u6846\u67b6\u7684\u7236\u7ea7\u662f\u88ab\u8c03\u7528\u51fd\u6570\u7684\u7236\u7ea7</li> </ul>"},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part1/#lecture-6-design","title":"Lecture 6 Design","text":""},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part1/#1_10","title":"1","text":"<p>John\u63d0\u5230\u5982\u4f55\u5bf9\u51fd\u6570\u4ee5\u53ca\u53d8\u91cf\u547d\u540d\uff0c\u5206\u522b\u4e3e\u51fa\u4e86\u6b63\u53cd\u4f8b</p> <p></p> <p>John\u6307\u51fa\u4e86\u4ec0\u4e48\u6837\u7684\u4e1c\u897f\u503c\u5f97\u53bb\u547d\u540d\uff0c\u4ee5\u53ca\u547d\u540d\u65f6(\u66f4\u591a\u7684)\u4e00\u4e9b\u6ce8\u610f\u70b9</p>"},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part1/#lecture-6-qa","title":"Lecture 6 Q&amp;A","text":""},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part1/#1_11","title":"1","text":"<p>John\u5728\u6f14\u793a\u65f6\u4f7f\u7528\u4e86 <code>round</code> \u8fd9\u4e2a\u51fd\u6570\uff0c\u4f5c\u7528\u662f\u80fd\u56db\u820d\u4e94\u5165\u53d6\u6574/\u53bb\u6389\u5269\u4f59\u7684\u4f4d\u6570\uff0c</p> <p>\u7b2c\u4e00\u4e2a\u53c2\u6570\u4f20\u5165\u9700\u8981\u53d6\u6574\u7684\u6570\uff0c\u7b2c\u4e8c\u4e2a\u53c2\u6570\u8868\u793a\u53d6\u5230\u7b2c\u51e0\u4f4d\u5c0f\u6570\uff0c\u4f8b\u5982</p> <pre><code>&gt;&gt;&gt; 1/3\n0.3333333333333333\n&gt;&gt;&gt; round(1/3, 4)\n0.3333\n&gt;&gt;&gt; 2/3\n0.6666666666666666\n&gt;&gt;&gt; round(2/3, 5)\n0.66667\n</code></pre>"},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part1/#lecture-7-function-examples","title":"Lecture 7 Function Examples","text":""},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part1/#1_12","title":"1","text":"<p>\u51fd\u6570\u4fee\u9970\u7b26 Function Decorator</p> <p></p> <p>\u5982\u679c\u5728\u67d0\u4e2a\u51fd\u6570\u5b9a\u4e49\u65f6\uff0c <code>@</code> \u53e6\u4e00\u4e2a\u5df2\u6709\u7684\u51fd\u6570\uff0c\u5c31\u4f1a\u628a\u8fd9\u4e2a\u51fd\u6570\u540d\u5bf9\u5e94\u7684\u53d8\u91cf\u7ed1\u5b9a\u6210\u88ab <code>@</code> \u7684\u51fd\u6570\u4f20\u5165\u8fd9\u4e2a\u51fd\u6570\u540e\u7684\u8fd4\u56de\u503c\uff0c</p> <p>\u4f8b\u5982\u4e0b\u56fe\u4e2dJohn\u7684demo\u6f14\u793a</p> <p></p>"},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part1/#lecture-7-qa","title":"Lecture 7 Q&amp;A","text":""},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part1/#1_13","title":"1","text":"<p>\u6709\u4eba\u63d0\u95ee18\u79cb\u5b63\u7b2c\u4e00\u6b21\u671f\u4e2d\u8003\u8bd5\u7684\u7b2c6\u9898\u7684a\u9898</p> <p>Quote</p> <p>This Again?</p> <p>Definitions. A repeatable integer function takes an integer argument and returns a repeatable integer function.</p> <p>(a) (6 pt) Implement <code>repeat</code> , which is a repeatable integer function that detects repeated arguments. As a side effect of repeated calls, it prints each argument that has been used before in a sequence of repeated calls. Therefore, if an argument appears n times, it is printed n \u2212 1 times in total, each time other than the first. The <code>detector</code> function is part of the implementation of <code>repeat</code> ; you must determine how it is used.</p> <p>Important: You may not use a list, set, or any other data type not covered yet in the course. </p> <pre><code>def repeat(k):\n    \"\"\"When called repeatedly, print each repeated argument.\n\n    &gt;&gt;&gt; f = repeat(1)(7)(7)(3)(4)(2)(5)(1)(6)(5)(1) \n    7\n    1\n    5\n    1\n    \"\"\" \n    return _____________________________________________________________________________(k) \n\ndef detector(f): \n    def g(i): \n        if ________________________________________________________________________________: \n            _______________________________________________________________________________ \n        return ____________________________________________________________________________ \n    return g\n</code></pre> <p>\u5c1d\u8bd5\u81ea\u5df1\u505a\u4e86\u4e00\u4e0b\uff0c</p> <p>\u7531\u4e8e <code>detector</code> \u7684\u53c2\u6570\u662f <code>f</code> \uff0c\u6240\u4ee5\u60f3\u5230\u5e94\u8be5\u662f\u901a\u8fc7\u8fd9\u4e2a\u51fd\u6570 <code>f</code> \u6765\u8bb0\u5f55 <code>repeat</code> \u4f20\u5165\u8fc7\u7684\u53c2\u6570\uff0c</p> <p>\u800c\u6bcf\u6b21\u8c03\u7528 <code>g</code> \u65f6\uff0c\u5e94\u8be5\u662f\u8fd4\u56de\u4e00\u4e2a\u65b0\u7684 <code>g</code> (\u8fd9\u6837\u624d\u80fd\u91cd\u590d\u8c03\u7528)\uff0c\u6240\u4ee5 <code>g</code> \u6700\u540e <code>return</code> \u65f6\u5e94\u8be5\u8981\u8c03\u7528 <code>detector</code> \u6765\u66f4\u65b0\u8bb0\u5f55\u7684\u4fe1\u606f\uff0c\u90a3\u4e48 <code>g</code> \u4e2d\u5927\u6982\u5c31\u53ef\u4ee5\u5f97\u5230</p> <pre><code>def g(i):\n    if f(i):\n        print(i)\n    return detector(...)\n</code></pre> <p>\u800c <code>repeat</code> \u4e2d\uff0c\u5e94\u8be5\u662f\u6700\u521d\u59cb\u7684\u72b6\u6001\uff0c\u6240\u4ee5\u5e94\u8be5\u7ed9 <code>detector</code> \u4f20\u5165\u6ca1\u6709\u4fe1\u606f\u7684\u51fd\u6570 <code>lambda x: False</code> \uff0c\u56e0\u6b64 <code>g</code> \u4e2d\u8981\u7ed9 <code>detector</code> \u4f20\u5165\u7684\u51fd\u6570\u5c31\u662f\u9700\u8981\u6dfb\u52a0\u5f53\u524d\u7684 <code>i</code> \u5c31\u884c\u4e86</p> code <pre><code>def repeat(k):\n    return detector(lambda x: False)(k) \n\ndef detector(f): \n    def g(i): \n        if f(i): \n            print(i) \n        return detector(lambda x: x == i or f(x)) \n    return g\n</code></pre>"},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part1/#hw-02","title":"HW 02","text":""},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part1/#1_14","title":"1","text":"<p>Q2\u8fd9\u9898\uff0c\u4e00\u5f00\u59cb\u81ea\u5df1\u505a\u7684\u65f6\u5019\u6ca1\u6709\u505a\u51fa\u6765\uff0c\u5c1d\u8bd5\u4e86\u5f88\u591a\u6b21\u90fd\u6ca1\u80fd\u6210\u529f\uff0c</p> <p>\u4e8e\u662f\u5c31\u53bb\u770b\u4e86\u63d0\u793a\u89c6\u9891\uff0c\u7136\u540e\u52a9\u6559\u8001\u5e08\u8bf4\u9053\uff0c\u53ef\u4ee5\u5199\u4e00\u4e2a <code>helper</code> \u51fd\u6570\u6765\u8ffd\u8e2a\u9700\u8981\u7684\u4fe1\u606f</p> <p></p> <p>\u4e8e\u662f\u770b\u5230\u8fd9\u91cc\u6211\u5927\u6982\u5c31\u6709\u601d\u8def\u4e86\uff0c\u6700\u540e\u5c31\u5b8c\u6210\u4e86</p> code <pre><code>def pingpong(n):\n    \"*** YOUR CODE HERE ***\"\n    def helper(index, pingpong_num, direction):\n        if index == n:\n            return pingpong_num + direction\n        else:\n            return helper(index + 1, pingpong_num + direction, direction * (-1 if index % 8 == 0 or num_eights(index) else 1))\n    return helper(1, 0, 1)\n</code></pre>"},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part1/#2_5","title":"2","text":"<p>Q4\u8fd9\u9898\uff0c\u611f\u89c9\u548c\u7b2c9\u8282Tree Recursion\u8bfe\u4e0a\u6700\u540e\u5c55\u793a\u7684\u4f8b\u5b50\u5f88\u50cf\uff0c</p> <p></p> <p>\u4f46\u662f\u4e00\u5f00\u59cb\u4e5f\u662f\u6ca1\u505a\u51fa\u8fd9\u9898\uff0c\u4e4b\u540e\u53d1\u73b0\u9700\u8981\u5199\u4e00\u4e2a <code>helper</code> \u51fd\u6570\u6765\u8f85\u52a9\u8bb0\u5f55\u4fe1\u606f\uff0c\u6700\u540e\u4eff\u7167\u4e0a\u56fe\u4f8b\u5b50\u7684\u5927\u81f4\u7ed3\u6784\u5c31\u5199\u51fa\u6765\u4e86</p> code <pre><code>def count_coins(total):\n    \"*** YOUR CODE HERE ***\"\n    def helper(index, largest_coin):\n        if index == total:\n            return 1\n        elif index &gt; total:\n            return 0\n        elif largest_coin == None:\n            return 0\n        else:\n            return helper(index + largest_coin, largest_coin) + helper(index, next_largest_coin(largest_coin))\n    return helper(0, 1)\n</code></pre>"},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part1/#3_4","title":"3","text":"<p>Q5\u8fd9\u9898\u6ca1\u6709\u60f3\u51fa\u6765\uff0c\u6700\u540e\u662f\u5728\u7f51\u4e0a\u627e\u5230\u4e86\u5dee\u4e0d\u591a\u7684( <code>lambda</code> \u51fd\u6570\u9012\u5f52\u7684)\u4ee3\u7801\uff0c</p> <pre><code>def make_anonymous_factorial():\n    return (lambda f: lambda n: f(f, n))(lambda f, i: 1 if i == 0 else i * f(f, i - 1))\n</code></pre> <p>\u540e\u6765\u518d\u56de\u6765\u770b\u8fd9\u4e2a\u4ee3\u7801\uff0c\u5927\u6982\u80fd\u7406\u89e3\u4e3a\u4ec0\u4e48\u8981\u8fd9\u4e48\u505a\u4e86\uff0c\u7531\u4e8e\u9012\u5f52\u9700\u8981\u8c03\u7528\u81ea\u5df1\uff0c\u6240\u4ee5\u5728 <code>lambda</code> \u51fd\u6570\u4e2d\u53ea\u80fd\u501f\u52a9\u5916\u90e8\uff0c\u901a\u8fc7\u53c2\u6570\u628a\u81ea\u5df1\u4f20\u8fdb\u6765(\u901a\u8fc7\u53c2\u6570\u6765\u4f20\u9012\u4fe1\u606f\u6bd4\u8f83\u5e38\u89c1)\uff0c\u6240\u4ee5\u6838\u5fc3\u90e8\u5206\u5c31\u5199\u6210\u4e86</p> <pre><code>(lambda f, i: 1 if i == 0 else i * f(f, i - 1))\n</code></pre> <p>\u5269\u4e0b\u7684\u90e8\u5206\u5c31\u662f\u53bb\u5f00\u59cb\u9012\u5f52\u7684\u8fc7\u7a0b\u3002</p> <p>\u5728\u7b2c12\u8282\u7684Q&amp;A\u4e2d\u4e5f\u6709\u4eba\u95ee\u5230\u4e86\u8fd9\u4e00\u9898\uff0cJohn\u4e5f\u8fdb\u884c\u4e86\u89e3\u7b54</p>"},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part1/#lecture-10-containers","title":"Lecture 10 Containers","text":""},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part1/#1_15","title":"1","text":"<p><code>exec()</code> \u51fd\u6570\u53ef\u4ee5\u6267\u884c\u5b57\u7b26\u4e32\u4e2d\u7684\u8bed\u53e5\uff0c\u5982</p> <pre><code>exec(\"curry = lambda f: lambda x: lambda y: f(x, y)\")\n</code></pre> <p>\u53ef\u4ee5\u8ba9 <code>curry</code> \u53d8\u91cf\u6307\u5411\u4e00\u4e2a\u533f\u540d\u51fd\u6570</p> <p></p>"},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part1/#2_6","title":"2","text":"<p>\u4f8b</p> <pre><code>for _ in range(3):\n    ...\n</code></pre> <p>\u53ef\u4ee5\u7528 <code>_</code> \u53d8\u91cf\u8868\u793a <code>for</code> \u5faa\u73af\u4e2d\u6267\u884c\u7684\u8bed\u53e5\u4e0e\u8fed\u4ee3\u7684\u53d8\u91cf\u65e0\u5173</p>"},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part1/#3_5","title":"3","text":"<p>string\u5b57\u7b26\u4e32\u7684\u5143\u7d20\u4e5f\u662f\u5b57\u7b26\u4e32\uff0clist\u7684\u5143\u7d20\u5c31\u662f\u5143\u7d20\uff0c\u5373\u6709</p> <pre><code>&gt;&gt;&gt; str = \"hello\"\n&gt;&gt;&gt; str[3][0][0]\n'l'\n</code></pre>"},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part1/#4_3","title":"4","text":"<p>\u8bb0\u5fc6\u6280\u5de7 \u201c\u4e0b\u6807\u201d \u5bf9\u5e94\u5143\u7d20\u4e4b\u524d\uff0c</p> <p>\u5bf9\u6709\u5e8f\u7ed3\u6784\u5207\u7247\u4e5f\u9002\u7528\uff0c\u5176\u4e2d\u7684\u8d1f\u6570\u4e5f\u9002\u7528\uff0c\u5982</p> <pre><code>&gt;&gt;&gt; l = list(range(5))\n&gt;&gt;&gt; l\n[0, 1, 2, 3, 4]\n&gt;&gt;&gt; l[1:-1]\n[1, 2, 3]\n</code></pre>"},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part1/#5_2","title":"5","text":"<p>\u5217\u8868\u63a8\u5bfc\u5f0f(list comprehension)\u53ef\u4ee5\u7528 <code>if</code> \uff1a</p> <pre><code>&gt;&gt;&gt; l2 = [x for x in [0, 1, 2, 5, 6] if x % 3 == 0]\n&gt;&gt;&gt; l2\n[0, 6]\n</code></pre>"},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part1/#6_2","title":"6","text":"<p>\u5982\u679c\u5217\u8868\u6709\u5b50\u5217\u8868\uff0c\u4e14\u5143\u7d20\u4e2a\u6570\u90fd\u56fa\u5b9a\uff0c\u90a3\u4e48 <code>for</code> \u53ef\u4ee5\u76f4\u63a5\u83b7\u53d6\u5b50\u5217\u8868\u7684\u5143\u7d20/unpack\u5b50\u5217\u8868\uff0c\u5982\u5b50\u5217\u8868\u90fd\u542b\u4e24\u4e2a\u5143\u7d20\uff1a</p> <p></p>"},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part1/#lecture-10-qa","title":"Lecture 10 Q&amp;A","text":""},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part1/#1_16","title":"1","text":"<p>\u9012\u589e\u7684\u9012\u5f52\u5199\u9636\u4e58\uff1a</p> <pre><code>def fact(n):\n    return fact_helper(n, 1, 1)\n\ndef fact_helper(n, k, result):\n    \"\"\"Computes k * (k + 1) * (k + 2) * ... * n\n    by accumulating the result\n    \"\"\"\n    if n == k:\n        return k * result\n    else:\n        return fact_helper(n, k + 1, k * result)\n</code></pre> <p></p> <p>or</p> <pre><code>def fact(n, k=1, result=1):\n    \"\"\"Computes k * (k + 1) * (k + 2) * ... * n\n    by accumulating the result\n    \"\"\"\n    if n == k:\n        return k * result\n    else:\n        return fact(n, k + 1, k * result)\n</code></pre> <p>\u8fd9\u79cd(\u9012\u589e\u7684\u9012\u5f52)\u66f4\u50cf\u5faa\u73af\u8bed\u53e5</p> <p>(\u4e5f\u53ef\u4ee5\u5c06helper\u5199\u5165\u51fd\u6570\u5185\u90e8)</p> <pre><code>def fact(n):\n    def helper(k, result):\n        if k == n:\n            return k * result\n        else:\n            return helper(k + 1, k * result)\n    return helper(1, 1)\n</code></pre> <p>or</p> <pre><code>def fact(n):\n    def helper(k):\n        if k == n:\n            return k\n        else:\n            return k * helper(k + 1)\n    return helper(1)\n</code></pre>"},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part1/#lab-04","title":"Lab 04","text":"<p>lab04\u4e2d\u7684Q4-Q6 \u5728\u638c\u63e1\u4e86 \u5047\u60f3\u51fd\u6570\u80fd\u8fd4\u56de\u6240\u9700\u8981\u8fd4\u56de\u7684\u4e1c\u897f(\u5373\u5047\u60f3\u8fd4\u56de\u7684\u4e1c\u897f\u662f\u5df2\u77e5\u7684) \u7684\u8bc0\u7a8d(\u5728lecture12\u4e2d)\u4e4b\u540e\uff0c\u505a\u7684\u5f88\u987a\u7545\u3002</p> <ol> <li>\u5148\u5047\u60f3\u51fd\u6570\u80fd\u8fd4\u56de\u6240\u9700\u7684\u4e1c\u897f/\u503c</li> <li>\u518d\u60f3\u5982\u4f55\u628a\u60c5\u51b5\u5206\u89e3\u6210\u53e6\u4e00\u4e2a\u6216\u51e0\u4e2a\u5dee\u4e0d\u591a(\u5f62\u5f0f\u4e00\u6837)\u4f46\u7b80\u5355\u4e86\u4e00\u70b9\u7684\u60c5\u51b5(\u6709\u70b9\u7c7b\u4f3c\u4e8e\u52a8\u6001\u89c4\u5212\u7684\u627e\u9012\u63a8\u5f0f)\uff0c\u5982Q4\u4e2d\u4e00\u822c\u60c5\u51b5\u53ef\u4ee5\u5206\u6210\u4e24\u4e2a\u884c/\u5217\u51cf\u4e00\u7684\u60c5\u51b5(\u5373\u5411\u4e0a\u6216\u5411\u53f3\u8d70\u4e00\u6b65)</li> <li>\u518d\u60f3 \u201c\u57fa\u672c\u60c5\u51b5\u201d (\u6700\u7b80\u5355/\u7279\u6b8a\u7684\u60c5\u51b5(\u4f5c\u4e3a\u9012\u5f52\u7684\u7ec8\u6b62\u60c5\u51b5))</li> <li>\u6700\u540e\u8c03\u6574\u4e00\u822c\u60c5\u51b5\u7684\u8fd4\u56de\u7684\u503c</li> </ol> code <p>Q4</p> <pre><code>def paths(m, n):\n    \"\"\"Return the number of paths from one corner of an\n    M by N grid to the opposite corner.\n\n    &gt;&gt;&gt; paths(2, 2)\n    2\n    &gt;&gt;&gt; paths(5, 7)\n    210\n    &gt;&gt;&gt; paths(117, 1)\n    1\n    &gt;&gt;&gt; paths(1, 157)\n    1\n    \"\"\"\n    \"*** YOUR CODE HERE ***\"\n    if m == 1 or n == 1:\n        return 1\n    else:\n        return paths(m - 1, n) + paths(m, n - 1)\n</code></pre> <p>Q5</p> <pre><code>def max_subseq(n, t):\n    \"\"\"\n    Return the maximum subsequence of length at most t that can be found in the given number n.\n    For example, for n = 20125 and t = 3, we have that the subsequences are\n        2\n        0\n        1\n        2\n        5\n        20\n        21\n        22\n        25\n        01\n        02\n        05\n        12\n        15\n        25\n        201\n        202\n        205\n        212\n        215\n        225\n        012\n        015\n        025\n        125\n    and of these, the maxumum number is 225, so our answer is 225.\n\n    &gt;&gt;&gt; max_subseq(20125, 3)\n    225\n    &gt;&gt;&gt; max_subseq(20125, 5)\n    20125\n    &gt;&gt;&gt; max_subseq(20125, 6) # note that 20125 == 020125\n    20125\n    &gt;&gt;&gt; max_subseq(12345, 3)\n    345\n    &gt;&gt;&gt; max_subseq(12345, 0) # 0 is of length 0\n    0\n    &gt;&gt;&gt; max_subseq(12345, 1)\n    5\n    \"\"\"\n    \"*** YOUR CODE HERE ***\"\n    if t == 0:\n        return 0\n    elif n &lt; 10:\n        return n\n    else:\n        return max(max_subseq(n // 10, t - 1) * 10 + n % 10, max_subseq(n // 10, t))\n</code></pre> <p>Q6</p> <pre><code>def add_chars(w1, w2):\n    \"\"\"\n    Return a string containing the characters you need to add to w1 to get w2.\n\n    You may assume that w1 is a subsequence of w2.\n\n    &gt;&gt;&gt; add_chars(\"owl\", \"howl\")\n    'h'\n    &gt;&gt;&gt; add_chars(\"want\", \"wanton\")\n    'on'\n    &gt;&gt;&gt; add_chars(\"rat\", \"radiate\")\n    'diae'\n    &gt;&gt;&gt; add_chars(\"a\", \"prepare\")\n    'prepre'\n    &gt;&gt;&gt; add_chars(\"resin\", \"recursion\")\n    'curo'\n    &gt;&gt;&gt; add_chars(\"fin\", \"effusion\")\n    'efuso'\n    &gt;&gt;&gt; add_chars(\"coy\", \"cacophony\")\n    'acphon'\n    &gt;&gt;&gt; from construct_check import check\n    &gt;&gt;&gt; # ban iteration and sets\n    &gt;&gt;&gt; check(LAB_SOURCE_FILE, 'add_chars',\n    ...       ['For', 'While', 'Set', 'SetComp']) # Must use recursion\n    True\n    \"\"\"\n    \"*** YOUR CODE HERE ***\"\n    if not w1:\n        return w2\n    elif w1[0] == w2[0]:\n        return add_chars(w1[1:], w2[1:])\n    else:\n        return w2[0] + add_chars(w1, w2[1:])\n</code></pre>"},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part1/#lecture-11-data-abstraction","title":"Lecture 11 Data Abstraction","text":""},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part1/#1_17","title":"1","text":"<p>\"Unpacking\" a list</p> <p></p>"},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part1/#2_7","title":"2","text":"<p>\u62bd\u8c61\u601d\u60f3</p> <p></p> <p></p> <p>... you should know that when you're writing one part of a large program, that it should use the level abstraction appropriate to what you're trying to do,</p> <p>and the higher you stay up, without crossing of these boundaries, the easier it will be to change your program</p> <p>\u8981 \u5411\u4e0b\u89e3\u6784\uff0c\u548c \u5411\u4e0a\u62bd\u8c61</p>"},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part1/#3_6","title":"3","text":"<p>\u5b57\u5178\u53ef\u4ee5\u901a\u8fc7\u7279\u5b9a\u7684\u5217\u8868\u6784\u9020( \u4e8c\u5143\u5143\u7ec4 \u7ec4\u6210\u7684\u5217\u8868)</p>"},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part1/#4_4","title":"4","text":"<p>\u5b57\u5178\u4e5f\u6709\u63a8\u5bfc\u5f0f</p> <p></p>"},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part1/#lecture-11-qa","title":"Lecture 11 Q&amp;A","text":""},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part1/#1_18","title":"1","text":"<p>\u62bd\u8c61\u53ef\u4ee5\u4f7f\u5f97\u4fee\u6539\u67d0\u4e00\u5c42(layer)\u4ee3\u7801\u65f6\u5e26\u6765\u7684\u51b2\u51fb/\u5f71\u54cd\u88ab\u9694\u79bb(isolate the impact)\uff0c\u6709\u65f6\u53ef\u4ee5\u4f7f\u5f97\u4fee\u6539\u6240\u4ea7\u751f\u7684\u5f71\u54cd\u53ea\u5728\u8fd9\u4e00\u5c42\u4e0a\u3002</p> <p>\u51b2\u51fb\u88ab\u9694\u79bb\u7684\u4f8b\u5b50\uff1apython dictionary\u7684\u5e95\u5c42\u4ee3\u7801\u7ecf\u5e38\u6539\u53d8\uff0c\u4f46\u5e76\u4e0d\u5f71\u54cdpython\u4e2d\u7684\u4f7f\u7528</p>"},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part1/#2_8","title":"2","text":"<p>\u6dfb\u52a0\u5224\u65ad\u529f\u80fd\u53ef\u4ee5\u8fd9\u6837\u8bbe\u8ba1</p> <p></p>"},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part1/#project-cats","title":"Project Cats","text":"<p>Info</p> <p>\u9700\u8981\u4e86\u89e3 Lec 12 Trees \u4e2d\u7684\u6570\u636e\u62bd\u8c61(data abstraction)\u90e8\u5206\u7684\u5185\u5bb9</p>"},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part1/#1_19","title":"1","text":"<p>Problem 5 \u4e2d\u4f7f\u7528 <code>min()</code> (\u5e8f\u5217\u805a\u5408\u51fd\u6570)\u4f1a\u5f88\u65b9\u4fbf\uff0c</p> <p>\u4f46\u8981\u6ce8\u610f \u4f7f\u7528 <code>key</code> \u53c2\u6570\u4f20\u5165\u5224\u65ad\u51fd\u6570\u65f6\uff0c\u9700\u8981\u5199\u4e0a <code>key=</code> </p>"},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part1/#2_9","title":"2","text":"<p>Problem 9 \u4e2d\u5c1d\u8bd5\u4e86\u5217\u8868\u63a8\u5bfc\u5f0f\u7684\u5d4c\u5957\u4f7f\u7528</p> <pre><code>def time_per_word(times_per_player, words):\n    \"\"\"Given timing data, return a game data abstraction, which contains a list\n    of words and the amount of time each player took to type each word.\n\n    Arguments:\n        times_per_player: A list of lists of timestamps including the time\n                          the player started typing, followed by the time\n                          the player finished typing each word.\n        words: a list of words, in the order they are typed.\n    \"\"\"\n    # BEGIN PROBLEM 9\n    \"*** YOUR CODE HERE ***\"\n    times = [[timestamp[i + 1] - timestamp[i] for i in range(len(timestamp) - 1)] for timestamp in times_per_player]\n    return game(words, times)\n    # END PROBLEM 9\n</code></pre>"},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part1/#3_7","title":"3","text":"<p>Problem 10 \u4e2d\u5982\u679c\u8981\u628a\u4e00\u4e2astring\u52a0\u5165(\u4f7f\u7528 <code>+</code> \u8fd0\u7b97\u7b26)\u5230list\u4e2d\uff0c\u4e0d\u80fd\u76f4\u63a5\u52a0string (\u5426\u5219\u4f1a\u628a\u53ea\u542b\u6709\u5355\u4e2a\u5b57\u6bcd\u7684string\u4f5c\u4e3a\u5143\u7d20\u52a0\u5165\u5230\u5217\u8868\u4e2d)\uff0c\u5e94\u8be5 <code>+ [str]</code> \u6216 <code>+= [str]</code> (\u521b\u5efa\u4e00\u4e2a\u542b\u8be5\u5b57\u7b26\u4e32\u7684\u5217\u8868)</p>"},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part1/#4_5","title":"4","text":"<p>Problem 6</p> <p>\u770b\u4e86hint\u89c6\u9891\u540e\uff0c\u5c06\u539f\u672c\u9700\u8981\u501f\u52a9\u5185\u90e8helper\u51fd\u6570\u7684\u5199\u6cd5\u6539\u6210\u4e86\u4e0d\u9700\u8981helper\u7684\uff0c\u5173\u952e\u4e4b\u5904\u5728\u4e8e \u60f3\u5230\u4e86limit\u53ef\u4ee5\u7528\u4e8e\u8ba1\u6570(\u62ff\u6765\u51cf)</p> <pre><code>def shifty_shifts(start, goal, limit):\n    \"\"\"A diff function for autocorrect that determines how many letters\n    in START need to be substituted to create GOAL, then adds the difference in\n    their lengths.\n    \"\"\"\n    # BEGIN PROBLEM 6\n    # assert False, 'Remove this line'\n    # def helper(start, goal, count):\n    #     if count &gt; limit:\n    #         return count\n    #     # elif not start:\n    #     #     return count + len(goal)\n    #     # elif not goal:\n    #     #     return count + len(start)\n    #     elif not start or not goal:\n    #         return count + len(start + goal)\n    #     else:\n    #         return helper(start[1:], goal[1:], count if start[0] == goal[0] else count + 1)\n    # return helper(start, goal, 0)\n\n    # if limit == 0:\n    #     return 1\n    if limit &lt; 0:\n        return 0\n    elif not start or not goal:\n        return len(start + goal)\n    elif start[0] == goal[0]:\n        return shifty_shifts(start[1:], goal[1:], limit)\n    else:\n        return 1 + shifty_shifts(start[1:], goal[1:], limit - 1)\n    # END PROBLEM 6\n</code></pre> <p>\u4e0b\u56fe\u6709\u4e00\u70b9\u542f\u53d1\u4f5c\u7528(\u5bf9problem 7\u5982\u4f55\u627e\u5230\u964d\u89e3\u7684\u65b9\u6cd5\u4e5f\u6709\u4e00\u5b9a\u5e2e\u52a9)</p> <p></p>"},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part1/#5_3","title":"5","text":"<p>Problem 7</p> <p>\u7531\u63d0\u793a\u89c6\u9891\u4e2dproblem 6\u4e2d\u7684\uff0c\u52a9\u6559\u964d\u89e3 \u66ff\u6362 \u64cd\u4f5c\u7684\u65b9\u6cd5\u5982\u4e0b\uff1a</p> <pre><code>#   \"range\", \"rungs\"  2\n#    \"ange\",  \"ungs\"  2\n#     \"nge\",   \"ngs\"  1\n#      \"ge\",    \"gs\"  1\n#       \"e\",     \"s\"  1\n#        \"\",      \"\"  0\n</code></pre> <p></p> <p>\u5373\u964d\u89e3\u7684\u5173\u952e\u4e00\u6b65\u4e3a\uff1a</p> <pre><code>#   \"range\", \"rungs\"  1 + x\n#    \"ange\",  \"ungs\"  1 + x\n#     \"nge\",   \"ngs\"  x\n#       ...,     ...  ...\n</code></pre> <p>\u90a3\u4e48\uff0c\u7c7b\u4f3c\u7684\uff0c \u6dfb\u52a0 \u64cd\u4f5c\u7684\u964d\u89e3\uff0c\u62ff <code>cats</code> \u4f5c\u4e3astart \u4ee5\u53ca <code>scat</code> \u4f5c\u4e3agoal \u4e3e\u4f8b\uff0c\u53ef\u7406\u89e3\u4e3a\uff1a</p> <p>cats\u5728\u5f00\u5934\u6dfb\u52a0\u4e00\u4e2as\uff0c\u53d8\u6210scats (\u6dfb\u52a0\u7684\u5b57\u6bcd\u4e00\u5b9a\u662fgoal\u7684\u7b2c\u4e00\u4e2a\u5b57\u6bcd)\uff0c</p> <p>\u90a3\u4e48\u9700\u8981\u5224\u65ad\u7684\u90e8\u5206\uff0c\u5c31\u4ece cats \u3001 scat\uff0c\u53d8\u6210\u4e86 s cats \u3001 s cat</p> <p>\u5219\u964d\u89e3\u7684\u5173\u952e\u4e00\u6b65\u5c31\u5e94\u8be5\u662f\uff1a</p> <pre><code>#       ...,     ...  ...\n#    \"cats\",  \"scat\"  1 + x\n#    \"cats\",   \"cat\"  x\n#       ...,     ...  ...\n</code></pre> <p>\u5219\u540c\u7406\uff0c\u5220\u9664 \u64cd\u4f5c\u7684\u964d\u89e3\uff0c\u62ff ckiteus \u3001 kittens \u4e3e\u4f8b\uff0c</p> <p>\u64cd\u4f5c\u524d\u540e\uff0c\u9700\u8981\u5224\u65ad\u7684\u90e8\u5206\uff0c\u4ece ckiteus \u3001 kittens\uff0c\u53d8\u6210\u4e86 kiteus \u3001 kittens</p> <p>\u5219\u964d\u89e3\u7684\u5173\u952e\u4e00\u6b65\u5c31\u5e94\u8be5\u662f\uff1a</p> <pre><code>#          ...,        ...  ...\n#    \"ckiteus\",  \"kittens\"  1 + x\n#     \"kiteus\",  \"kittens\"  x\n#          ...,        ...  ...\n</code></pre> <p>\u5219\u6700\u540e\u6839\u636e\u6a21\u677f\u4fee\u6539\u7684\u4ee3\u7801\u4e3a\uff1a</p> <pre><code>def pawssible_patches(start, goal, limit):\n    \"\"\"A diff function that computes the edit distance from START to GOAL.\"\"\"\n    # assert False, 'Remove this line'\n\n    if limit &lt; 0: # Fill in the condition\n        # BEGIN\n        \"*** YOUR CODE HERE ***\"\n        return 0\n        # END\n\n    elif not start or not goal: # Feel free to remove or add additional cases\n        # BEGIN\n        \"*** YOUR CODE HERE ***\"\n        return len(start + goal)\n        # END\n\n    elif start[0] == goal[0]:\n        return pawssible_patches(start[1:], goal[1:], limit)\n    else:\n        add_diff = 1 + pawssible_patches(start, goal[1:], limit - 1) # ... # Fill in these lines\n        remove_diff = 1 + pawssible_patches(start[1:], goal, limit - 1) # ...\n        substitute_diff = 1 + pawssible_patches(start[1:], goal[1:], limit - 1) # ...\n        # BEGIN\n        \"*** YOUR CODE HERE ***\"\n        return min(add_diff, remove_diff, substitute_diff)\n        # END\n</code></pre> <p>\u6700\u540e\u53d1\u73b0\u601d\u8def\u4e0e\u52a9\u6559\u63d0\u793a\u7684\u4e00\u6837</p> <p></p> <p>Quote</p> <p>...(\"ats\" and \"cats\") we see thats adding one letter to the front, is actually the exact same as just chopping off letter from the front of the second word. so what do I mean by that, this is what I mean, I mean if I add one letter to the front, I might as well just be taking off one letter from the back, so instead of adding C to this word I can just say, well I'm just going to take off the first letter of whatever this word is, because I know that, if I add that letter to this word, then I know that it's going to be the correct letter, so I don't even need to add it, I can just go ahead and chop off the letter from the second word, and I know that it'll be okay. right, so doing comparing cats and cats, is the exact same thing as comparing ats and ats, there will be no more difference. so that's the add example right there...</p> <p>...the last is the substitute example(\"hello\" and \"mello\"). so this should be pretty familiar from our previous problem. remember for the previous problem we just took out the first letter of both, so it said that if they were different, then we're just gonna take them all out, and say that we had one edit distance, we had one substitution needed. and so you see that, substituting the first letter to an M to make it match the second, is the exact same thing as just taking out both letters. we don't care what they are, we see that they're different, we're just gonna take out both and call it a day. and so we see that we end with ello and ello, and then we're done...</p>"},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part1/#6_3","title":"6","text":"<p>\u5b57\u5178\u53ef\u4ee5\u8fd9\u6837\u5199\uff0c\u66f4\u6e05\u6670</p> <pre><code>report = {\n    \"id\": user_id,\n    \"progress\": progress,\n}\n</code></pre> <p>(\u6700\u540e\u4e00\u4e2a\u9017\u53f7\u6709\u6ca1\u6709\u4e0d\u5f71\u54cd)</p> <p></p>"},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part1/#7","title":"7","text":"<p>\u4e00\u4e2a\u5c0f\u53d1\u73b0</p> <p><code>...</code> \u53ef\u4ee5\u8d4b\u503c\u7ed9\u53d8\u91cf\uff0c\u5982</p> <pre><code>a = \n</code></pre> <p>\u4f1a\u62a5\u9519\uff0c</p> <p>\u800c</p> <pre><code>a = ...\n</code></pre> <p>\u5219\u4e0d\u4f1a\u62a5\u9519</p>"},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part1/#lecture-12-trees","title":"Lecture 12 Trees","text":""},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part1/#1_20","title":"1","text":"<p><code>[...]</code> \u4e2d\u62ec\u53f7/\u65b9\u62ec\u53f7(square brackets)\u4e2d\u7684\u5185\u5bb9\u8868\u793a\u4e3a\u53ef\u9009\u7684(optional)</p>"},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part1/#2_10","title":"2","text":"<p>\u5e8f\u5217\u805a\u5408\u51fd\u6570(Sequence Aggregation)</p> <p></p> <p><code>sum()</code> \u51fd\u6570\uff0c\u53ef\u4ee5\u7528\u4e8e\u9664\u5b57\u7b26\u4e32\u4ee5\u5916\u7684\u5e8f\u8868\uff0c\u5c06\u5e8f\u8868\u4e2d\u7684\u5143\u7d20\u4ee5\u5176\u5bf9\u5e94\u7684 <code>+</code> \u6cd5\u6c42\u548c\u5e76\u8fd4\u56de(\u9ed8\u8ba4\u521d\u59cb\u503c\u4e3a0\uff0c\u5982\u679c\u662f\u5176\u4ed6\u7c7b\u578b\uff0c\u9700\u8981\u8bbe\u7f6e\u521d\u59cb\u503c\uff0c\u5982\u5217\u8868\u9700\u8981\u4f20\u5165\u7a7a\u5217\u8868 <code>[]</code> \u5ea7\u4f4d <code>start</code> \u53c2\u6570)</p> <p></p> <p><code>max()</code> \u51fd\u6570\uff0c\u53ef\u4ee5\u8fd4\u56de\u6700\u5927\u503c\uff0c\u6216\u8005\u662f\u4f7fkey\u51fd\u6570\u8fd4\u56de\u503c\u6700\u5927\u7684\u503c(\u81ea\u53d8\u91cf)</p> <p></p> <p>\u5bf9\u5e94\u7684\u8fd8\u6709 <code>min()</code> \u548c <code>any()</code></p>"},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part1/#3_8","title":"3","text":"<p>\u6811\u62bd\u8c61(Tree Abstaction)\u7684\u5b9e\u73b0</p> <p></p>"},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part1/#4_6","title":"4","text":"<p>\u9012\u5f52\u5728\u6811\u4e2d\u7684\u8fd0\u7528\uff0c</p> <p>\u8981\u76f4\u63a5\u5047\u60f3\u51fd\u6570\u80fd\u8fd4\u56de\u6240\u9700\u8981\u8fd4\u56de\u7684\u4e1c\u897f(\u5373\u5047\u60f3\u8fd4\u56de\u7684\u4e1c\u897f\u662f\u5df2\u77e5\u7684)\uff0c\u7136\u540e\u76f4\u63a5\u5728\u51fd\u6570\u5185\u90e8\u53bb\u76f4\u63a5\u4f7f\u7528\u8fd9\u4e2a\u8fd4\u56de\u7684\u4e1c\u897f\uff0c</p> <p>\u5e76\u4e14\u9700\u8981\u8bb0\u4f4f\u6811\u7684\u5b69\u5b50\u4e5f\u662f\u6811\u3002</p> <p>\u4f8b\u5982</p> <pre><code>def count_leaves(t):\n    \"\"\"Count the leaves of a tree.\"\"\"\n    if is_leaf(t):\n        return 1\n    else:\n        branch_counts = [count_leaves(b) for b in branches(t)]\n        return sum(branch_counts)\n</code></pre> <p>Hint: \u5047\u60f3\u8be5\u51fd\u6570\u4e00\u5b9a\u80fd\u8fd4\u56de\u6811\u7684\u53f6\u5b50\u6570(\u5373\u5047\u60f3\u5df2\u77e5\u5b50\u6811\u53f6\u5b50\u6570)\uff0c\u7136\u540e\u5bf9\u5b50\u6811\u7684\u53f6\u5b50\u6570\u548c\u5373\u5f97\u5230\u672c\u6811\u7684\u53f6\u5b50\u6570</p> <pre><code>def leaves(tree):\n    \"\"\"Return a list containing the leaves labels of tree.\n\n    &gt;&gt;&gt; leaves(fib_tree(5))\n    [1, 0, 1, 0, 1, 1, 0, 1]\n    \"\"\"\n    if is_leaf(tree):\n        return [label(tree)]\n    else:\n        return sum([leaves(b) for b in branches(tree)], [])\n</code></pre> <p>Hint: \u5047\u60f3\u8be5\u51fd\u6570\u80fd\u8fd4\u56de \u4e00\u4e2a\u542b \u6811\u7684\u6240\u6709\u53f6\u5b50\u7684\u503c/\u6807\u7b7e \u7684list </p> <pre><code>def increment_leaves(t):\n    \"\"\"Return a tree like t but with leaf labels incremented.\"\"\"\n    if is_leaf(t):\n        return tree(label(t) + 1)\n    else:\n        bs = [increment_leaves(b) for b in branches(t)]\n        return tree(label(t), bs)\n</code></pre> <pre><code>def increment(t):\n    \"\"\"Return a tree like t but with all labels incremented\"\"\"\n    return tree(label(t) + 1, [increment(b) for b in branches(t)])\n</code></pre> <p>Hint: \u5047\u60f3\u80fd\u8fd4\u56de\u4e00\u4e2a ... \u7684\u6811</p> <pre><code>def fib_tree(n):\n    if n &lt;= 1:\n        return tree(n)\n    else:\n        left, right = fib_tree(n - 2), fib_tree(n - 1)\n        return tree(label(left) + label(right), [left, right])\n</code></pre> <p>Hint\u540c\u4e0a</p>"},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part1/#5_4","title":"5","text":"<p>\u8fd8\u6709\u53e6\u4e00\u79cd\u4e0d\u4f7f\u7528\u51fd\u6570\u672c\u8eab\u8fd4\u56de\u7684\u503c\u7684\u9012\u5f52\u51fd\u6570</p> <p></p> <pre><code>def fact(n):\n    return fact_times(n, 1)\n\ndef fact_times(n, k):\n    \"\"\"Return k * n * (n - 1) * ... * 1\"\"\"\n    if n == 0:\n        return k\n    else:\n        return fact_times(n - 1, k * n)\n</code></pre> <p></p> <p>(\u6253\u5370\u6bcf\u4e2a\u53f6\u5b50(\u4ece\u6839\u5f00\u59cb)\u7684\u8def\u5f84)</p> <pre><code>def print_sums(t, so_far):\n    so_far = so_far + label(t)\n    if is_leaf(t):\n        print(so_far)\n    else:\n        for b in branches(t):\n            print_sums(b, so_far)\n</code></pre> <p>\u5e94\u8be5\u662f\u5c06\u8981\u8fed\u4ee3\u7684\u53d8\u91cf\u4f5c\u4e3a\u53c2\u6570\u4f20\u5165\u51fd\u6570\u4e2d</p>"},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part1/#lecture-12-qa","title":"Lecture 12 Q&amp;A","text":""},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part1/#1_21","title":"1","text":"<p>11:06</p> <p>\u5173\u4e8elab04 Q6</p> <p>Quote</p> <p>...by the way this is this is sort of a classic recursion problem, where you can see, you know, you think about the problem as what if i have a, you know, just there's one letter in each, and those match, what do i do, right, and then what do you do otherwise. it's, it's that classic recursion where you, you sort of simplify the problem to the simplest possible cases. the base case, one of them is empty, and then here there's there's sort of like two base cases almost, not quite because that second one is a recursion but it's that really really simple case, and then you build in the complexity after that. um, so that i, that's what's sort of really cool about these recursive solutions...</p> <p>...\u987a\u4fbf\u8bf4\u4e00\u53e5\uff0c\u8fd9\u662f\u4e00\u4e2a\u7ecf\u5178\u7684\u9012\u5f52\u95ee\u9898\uff0c\u4f60\u53ef\u4ee5\u770b\u5230\uff0c\u4f60\u77e5\u9053\uff0c\u4f60\u8ba4\u4e3a\u8fd9\u4e2a\u95ee\u9898\u662f\uff0c\u5982\u679c\u6211\u6709\u4e00\u4e2a\uff0c\u4f60\u77e5\u9053\u7684\uff0c\u6bcf\u4e2a\u53ea\u6709\u4e00\u4e2a\u5b57\u6bcd\uff0c\u8fd9\u4e9b\u5339\u914d\uff0c\u6211\u8be5\u600e\u4e48\u505a\uff0c\u5bf9\u5427\uff0c\u7136\u540e\u4f60\u8be5\u600e\u4e48\u505a\u3002\u8fd9\u662f\u4e00\u4e2a\u7ecf\u5178\u7684\u9012\u5f52\uff0c\u4f60\u53ef\u4ee5\u5c06\u95ee\u9898\u7b80\u5316\u4e3a\u6700\u7b80\u5355\u7684\u60c5\u51b5\u3002\u57fa\u672c\u60c5\u51b5\uff0c\u5176\u4e2d\u4e00\u4e2a\u662f\u7a7a\u7684\uff0c\u7136\u540e\u8fd9\u91cc\u51e0\u4e4e\u6709\u4e24\u4e2a\u57fa\u672c\u60c5\u51b5\uff0c\u4e0d\u5b8c\u5168\u662f\u56e0\u4e3a\u7b2c\u4e8c\u4e2a\u662f\u9012\u5f52\uff0c\u4f46\u8fd9\u662f\u4e00\u4e2a\u975e\u5e38\u7b80\u5355\u7684\u60c5\u51b5\uff0c\u7136\u540e\u4f60\u6784\u5efa\u590d\u6742\u5ea6\u3002\u55ef\uff0c\u6240\u4ee5\u6211\uff0c\u8fd9\u5c31\u662f\u8fd9\u4e9b\u9012\u5f52\u89e3\u51b3\u65b9\u6848\u771f\u6b63\u9177\u7684\u5730\u65b9...</p>"},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part1/#2_11","title":"2","text":"<p>18:16</p> <p>\u5173\u4e8ehw02 Q5\uff0c\u533f\u540d\u51fd\u6570\u7684\u9012\u5f52</p> <p>Quote</p> <p>John:</p> <pre><code>lambda n: 1 if n == 1 else n * fact(n - 1)\n</code></pre> <p>...uh how would we give this thing a different name, well, instead of assigning we could have it be fact, </p> <pre><code>lambda fact: lambda n: 1 if n == 1 else n * fact(n - 1)\n</code></pre> <p>but then, how would we like, pass that in, i guess instead of putting it here, maybe, maybe the best place to put it is here,</p> <pre><code>lambda n, fact: 1 if n == 1 else n * fact(n - 1)\n</code></pre> <p>so, basically in order to run this, we need an n and we need factorial. i'll just let that sink in, if factorial is not already defined, then somebody needs to pass it in, in order for us to call it. i'm gonna need a little bit more space than this i'm afraid. now, that we have a function that takes n and factorial. we need to be a little bit careful, we want this to be our factorial function, but it takes two arguments, and here we're calling it with only one argument, so that seems like a mismatch. what should be the second argument every time we call fact, well it should be the same function again, that's kind of how we get that recursive structure,</p> <pre><code>lambda n, fact: 1 if n == 1 else n * fact(n - 1, fact)\n</code></pre> <p>is that every time we call this thing that takes in a number and the function that we're going to call recursively, it needs to be called on a new number and the function that we're going to call recursively. so we've actually made some progress even though all we've done is kind of like move a name in here, and uh, pass it around. the last part is that we need to figure out, how to write a function, that takes only n, and somehow uh, calls this one instead,</p> <pre><code>lambda n: (lambda n, fact: 1 if n == 1 else n * fact(n - 1, fact))\n</code></pre> <p>and that's actually not so bad, this says, uh, give me a function, and call that function, on both n and itself.</p> <pre><code>lambda n: (lambda f: f(n, f))(lambda n, fact: 1 if n == 1 else n * fact(n - 1, fact))\n</code></pre> <p>so if i have a function, and i call it on n and itself, where n comes from here, now i just need to know which function i'm supposed to be calling on n in itself. and the answer is, this guy (<code>(lambda n, fact: 1 if n == 1 else n * fact(n - 1, fact))</code>).</p> <pre><code>g = lambda n: (lambda f: f(n, f))(lambda n, fact: 1 if n == 1 else n * fact(n - 1, fact))\n</code></pre> <p>so let's see what g does now. g computes n factorial, if we really wanted to get rid of that assignment statement, </p> <pre><code>print((lambda n: (lambda f: f(n, f))(lambda n, fact: 1 if n == 1 else n * fact(n - 1, fact)))(4))\n</code></pre> <p>then we could compute four factorial this way, by taking this function and calling it on four, and then, hopefully, if everything went right, we will have printed four factorial, or five factorial, or whatever. so, what was the key moments in figuring this out, one was, if we can't have fact defined already, then we have to pass it in as an argument, and the second was, if we have a function that takes two arguments, and we really want a function that takes one argument, then we should write a function that takes one argument, and calls the function that takes two arguments. and, then, the last part really is kind of a trick, which is to say like if you had a function and an argument, you would then call the function on the argument in itself, this is basically how you create recursion, without using assignment statements is this little part right here...</p> <p> </p> <p>Hany:</p> <p>...i i think john's right here. by the way, look there's a couple of things that you've seen before, essentially there's the helper function in here. you have a function that, uh, only takes one parameter and, you really need to pass two, so you put a helper function in, that's basically what you have here with the lambda. um, you've got sort of the notion of recursion and then there's just that little trick there, um, which you see with, uh, this, uh, lambda f of f of nf. so don't, don't get too worried if you didn't see that obvi, it obvious, i don't think it's at all obvious actually.</p> <p> </p> <p>John:</p> <p>one thing that's exciting about this while it's not obvious at all, is that it allows you to create iteration out of just functions, like of course there's no assignment here, there's also no while statement or for statement here. but we are doing something repetitively, and, so, um, this is kind of, uh, this idea right here, is a building block for the claim, that once you can define functions you can kind of write any program that you want, you can perform any computation, and you might wonder was that really true, like don't i need a while statement or a for statement. it turns out technically you don't, that does not mean we should get rid of while statements and for statements, they're a lot more readable than this i think, but, um, they're not strictly necessary in order to perform interesting computations.</p> <p> </p> <p>Hany:</p> <p>yes, and some in the chat just pointed out scheme and lisp is this is sort of the premise of these functional programming languages, that don't have looping, explicit looping constructs as you do everything, with these types of constructs, and it's a little bit mind-bending, but, it turns out it's expressive enough...</p> <p>John:</p> <pre><code>lambda n: 1 if n == 1 else n * fact(n - 1)\n</code></pre> <p>...\u5443\uff0c\u6211\u4eec\u600e\u4e48\u7ed9\u8fd9\u4e2a\u4e1c\u897f\u53d6\u4e00\u4e2a\u4e0d\u540c\u7684\u540d\u5b57\u5462\uff0c\u597d\u5427\uff0c\u4e0e\u5176\u6307\u5b9a\uff0c\u6211\u4eec\u53ef\u4ee5\u8ba9\u5b83\u6210\u4e3afact\uff0c</p> <pre><code>lambda fact: lambda n: 1 if n == 1 else n * fact(n - 1)\n</code></pre> <p>\u4f46\u662f\uff0c\u6211\u4eec\u4f1a\u600e\u4e48\u60f3\uff0c\u628a\u5b83\u4f20\u8fdb\u6765\uff0c\u6211\u60f3\u4e0e\u5176\u628a\u5b83\u653e\u5728\u8fd9\u91cc\uff0c\u4e5f\u8bb8\uff0c\u4e5f\u8bb8\u6700\u597d\u7684\u5730\u65b9\u653e\u5728\u8fd9\u91cc\uff0c</p> <pre><code>lambda n, fact: 1 if n == 1 else n * fact(n - 1)\n</code></pre> <p>\u6240\u4ee5\uff0c\u57fa\u672c\u4e0a\uff0c\u4e3a\u4e86\u8fd0\u884c\u8fd9\u4e2a\uff0c\u6211\u4eec\u9700\u8981\u4e00\u4e2an\uff0c\u6211\u4eec\u9700\u8981fact\u3002\u6211\u4f1a\u8ba9\u5b83\u6c89\u4e0b\u53bb\uff0c\u5982\u679cfact\u8fd8\u6ca1\u6709\u5b9a\u4e49\uff0c\u90a3\u4e48\u9700\u8981\u6709\u4eba\u628a\u5b83\u4f20\u8fdb\u6765\uff0c\u8fd9\u6837\u6211\u4eec\u624d\u80fd\u8c03\u7528\u5b83\u3002\u6050\u6015\u6211\u9700\u8981\u66f4\u591a\u7684\u7a7a\u95f4\u3002\u73b0\u5728\uff0c\u6211\u4eec\u6709\u4e00\u4e2a\u51fd\u6570\uff0c\u5b83\u53d6n\u548cfact\u3002\u6211\u4eec\u9700\u8981\u5c0f\u5fc3\u4e00\u70b9\uff0c\u6211\u4eec\u5e0c\u671b\u8fd9\u662f\u6211\u4eec\u7684\u9636\u4e58\u51fd\u6570\uff0c\u4f46\u5b83\u9700\u8981\u4e24\u4e2a\u53c2\u6570\uff0c\u800c\u8fd9\u91cc\u6211\u4eec\u53ea\u7528\u4e00\u4e2a\u53c2\u6570\u6765\u8c03\u7528\u5b83\uff0c\u6240\u4ee5\u8fd9\u770b\u8d77\u6765\u4e0d\u5339\u914d\u3002\u6bcf\u6b21\u6211\u4eec\u8c03\u7528fact\u65f6\uff0c\u7b2c\u4e8c\u4e2a\u53c2\u6570\u5e94\u8be5\u662f\u4ec0\u4e48\uff0c\u5b83\u5e94\u8be5\u662f\u540c\u4e00\u4e2a\u51fd\u6570\uff0c\u8fd9\u5c31\u662f\u6211\u4eec\u5f97\u5230\u9012\u5f52\u7ed3\u6784\u7684\u65b9\u5f0f\uff0c</p> <pre><code>lambda n, fact: 1 if n == 1 else n * fact(n - 1, fact)\n</code></pre> <p>\u6bcf\u6b21\u6211\u4eec\u8c03\u7528\u8fd9\u4e2a\u5305\u542b\u4e00\u4e2a\u6570\u5b57\u548c\u6211\u4eec\u8981\u9012\u5f52\u8c03\u7528\u7684\u51fd\u6570\u7684\u4e1c\u897f\u65f6\uff0c\u90fd\u9700\u8981\u5bf9\u4e00\u4e2a\u65b0\u7684\u6570\u5b57\u548c\u6211\u4eec\u5c06\u9012\u5f52\u8c03\u7528\u7684\u529f\u80fd\u8fdb\u884c\u8c03\u7528\u3002\u6240\u4ee5\u6211\u4eec\u5b9e\u9645\u4e0a\u5df2\u7ecf\u53d6\u5f97\u4e86\u4e00\u4e9b\u8fdb\u5c55\uff0c\u5c3d\u7ba1\u6211\u4eec\u6240\u505a\u7684\u53ea\u662f\u628a\u4e00\u4e2a\u540d\u5b57\u79fb\u5230\u8fd9\u91cc\uff0c\u7136\u540e\u628a\u5b83\u4f20\u6765\u4f20\u53bb\u3002\u6700\u540e\u4e00\u90e8\u5206\u662f\uff0c\u6211\u4eec\u9700\u8981\u5f04\u6e05\u695a\uff0c\u5982\u4f55\u7f16\u5199\u4e00\u4e2a\u53ea\u9700\u8981n\u7684\u51fd\u6570\uff0c\u5e76\u4ee5\u67d0\u79cd\u65b9\u5f0f\u8c03\u7528\u8fd9\u4e2a\u51fd\u6570\uff0c</p> <pre><code>lambda n: (lambda n, fact: 1 if n == 1 else n * fact(n - 1, fact))\n</code></pre> <p>\u8fd9\u5176\u5b9e\u8fd8\u4e0d\u9519\uff0c\u8fd9\u8bf4\uff0c\u7ed9\u6211\u4e00\u4e2a\u51fd\u6570\uff0c\u5e76\u8c03\u7528\u8fd9\u4e2a\u51fd\u6570\uff0c\u5bf9n\u548c\u5b83\u672c\u8eab\u3002</p> <pre><code>lambda n: (lambda f: f(n, f))(lambda n, fact: 1 if n == 1 else n * fact(n - 1, fact))\n</code></pre> <p>\u5982\u679c\u6211\u6709\u4e00\u4e2a\u51fd\u6570\uff0c\u6211\u5728n\u548c\u5b83\u672c\u8eab\u4e0a\u8c03\u7528\u5b83\uff0cn\u6765\u81ea\u8fd9\u91cc\uff0c\u73b0\u5728\u6211\u53ea\u9700\u8981\u77e5\u9053\u6211\u5e94\u8be5\u5728n\u672c\u8eab\u4e0a\u8c03\u7528\u54ea\u4e2a\u51fd\u6570\u3002\u7b54\u6848\u662f\uff0c\u8fd9\u5bb6\u4f19 (<code>(lambda n, fact: 1 if n == 1 else n * fact(n - 1, fact))</code>)\u3002</p> <pre><code>g = lambda n: (lambda f: f(n, f))(lambda n, fact: 1 if n == 1 else n * fact(n - 1, fact))\n</code></pre> <p>\u8ba9\u6211\u4eec\u770b\u770bg\u73b0\u5728\u505a\u4ec0\u4e48\u3002g\u8ba1\u7b97n\u9636\u4e58\uff0c\u5982\u679c\u6211\u4eec\u771f\u7684\u60f3\u53bb\u6389\u8d4b\u503c\u8bed\u53e5\uff0c</p> <pre><code>print((lambda n: (lambda f: f(n, f))(lambda n, fact: 1 if n == 1 else n * fact(n - 1, fact)))(4))\n</code></pre> <p>\u7136\u540e\u6211\u4eec\u53ef\u4ee5\u7528\u8fd9\u79cd\u65b9\u5f0f\u8ba1\u7b974\u7684\u9636\u4e58\uff0c\u901a\u8fc7\u53d6\u8fd9\u4e2a\u51fd\u6570\u5e76\u57284\u4e0a\u8c03\u7528\u5b83\uff0c\u7136\u540e\uff0c\u5982\u679c\u4e00\u5207\u987a\u5229\uff0c\u6211\u4eec\u5c06\u6253\u5370\u51fa4\u7684\u9636\u4e58\uff0c\u62165\u7684\u9636\u4e58\uff0c\u6216\u5176\u4ed6\u4ec0\u4e48\u3002\u90a3\u4e48\uff0c\u5f04\u6e05\u695a\u8fd9\u4e00\u70b9\u7684\u5173\u952e\u65f6\u523b\u662f\u4ec0\u4e48\uff0c\u4e00\u4e2a\u662f\uff0c\u5982\u679c\u6211\u4eec\u8fd8\u4e0d\u80fd\u5b9a\u4e49fact\uff0c\u90a3\u4e48\u6211\u4eec\u5fc5\u987b\u5c06\u5176\u4f5c\u4e3a\u4e00\u4e2a\u53c2\u6570\u4f20\u9012\uff0c\u7b2c\u4e8c\u4e2a\u662f\uff0c\u6211\u4eec\u6709\u4e00\u4e2a\u63a5\u53d7\u4e24\u4e2a\u53c2\u6570\u7684\u51fd\u6570\uff0c\u6211\u4eec\u771f\u7684\u60f3\u8981\u4e00\u4e2a\u63a5\u53d7\u4e00\u4e2a\u53c2\u6570\u7684\u51fd\u5f0f\uff0c\u90a3\u4e48\u6211\u4eec\u5e94\u8be5\u5199\u4e00\u4e2a\u63a5\u53d7\u4e86\u4e00\u4e2a\u53c2\u6570\uff0c\u5e76\u8c03\u7528\u63a5\u53d7\u4e24\u4e2a\u53d8\u91cf\u7684\u51fd\u6570\u3002\u7136\u540e\uff0c\u6700\u540e\u4e00\u90e8\u5206\u5b9e\u9645\u4e0a\u662f\u4e00\u79cd\u6280\u5de7\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u5982\u679c\u4f60\u6709\u4e00\u4e2a\u51fd\u6570\u548c\u4e00\u4e2a\u53c2\u6570\uff0c\u4f60\u4f1a\u5728\u53c2\u6570\u672c\u8eab\u4e0a\u8c03\u7528\u51fd\u6570\uff0c\u8fd9\u57fa\u672c\u4e0a\u5c31\u662f\u4f60\u521b\u5efa\u9012\u5f52\u7684\u65b9\u6cd5\uff0c\u800c\u4e0d\u4f7f\u7528\u8d4b\u503c\u8bed\u53e5\uff0c\u8fd9\u5c31\u662f\u8fd9\u4e2a\u5c0f\u90e8\u5206...</p> <p> </p> <p>Hany:</p> <p>...\u6211\u89c9\u5f97\u7ea6\u7ff0\u662f\u5bf9\u7684\u3002\u987a\u4fbf\u8bf4\u4e00\u4e0b\uff0c\u8fd9\u91cc\u6709\u4f60\u4ee5\u524d\u89c1\u5230\u8fc7\u4e00\u4e9b\u4e1c\u897f\uff0c\u6700\u57fa\u672c\u5730 \u8fd9\u91cc\u6709helper\u51fd\u6570\u3002\u4f60\u6709\u4e00\u4e2a\u51fd\u6570\uff0c\u5443\uff0c\u53ea\u63a5\u53d7\u4e00\u4e2a\u53c2\u6570\uff0c\u4f60\u9700\u8981\u4f20\u9012\u4e24\u4e2a\uff0c\u6240\u4ee5\u4f60\u5728\u91cc\u9762\u653e\u4e86\u4e00\u4e2a\u8f85\u52a9\u51fd\u6570\uff0c\u8fd9\u57fa\u672c\u4e0a\u5c31\u662flambda\u3002\u55ef\uff0c\u4f60\u5df2\u7ecf\u6709\u4e86\u9012\u5f52\u7684\u6982\u5ff5\uff0c\u7136\u540e\u6709\u4e00\u4e2a\u5c0f\u6280\u5de7\uff0c\u4f60\u53ef\u4ee5\u770b\u5230\uff0c\u8fd9\u4e2a\uff0c\u8fd9\u4e2a\uff0clambda f of f of nf\u3002\u6240\u4ee5\u4e0d\u8981\uff0c\u4e0d\u8981\u592a\u62c5\u5fc3\uff0c\u5982\u679c\u4f60\u6ca1\u6709\u6e05\u695a\u5730\u770b\u5230\uff0c\u6211\u8ba4\u4e3a\u5b83\u5b9e\u9645\u4e0a\u4e00\u70b9\u4e5f\u4e0d\u660e\u663e\u3002</p> <p> </p> <p>John:</p> <p>\u867d\u7136\u8fd9\u4e00\u70b9\u5e76\u4e0d\u660e\u663e\uff0c\u4f46\u6709\u4e00\u70b9\u4ee4\u4eba\u5174\u594b\uff0c\u90a3\u5c31\u662f\u5b83\u5141\u8bb8\u4f60\u4ec5\u4ece\u51fd\u6570\u4e2d\u521b\u5efa\u8fed\u4ee3\uff0c\u5f53\u7136\u8fd9\u91cc\u6ca1\u6709\u8d4b\u503c\uff0c\u8fd9\u91cc\u4e5f\u6ca1\u6709while\u8bed\u53e5\u6216for\u8bed\u53e5\u3002\u4f46\u6211\u4eec\u5728\u91cd\u590d\u5730\u505a\u4e00\u4e9b\u4e8b\u60c5\uff0c\u8fd9\u662f\u4e00\u79cd\uff0c\u55ef\uff0c\u8fd9\u4e2a\u60f3\u6cd5\uff0c\u662f\u8fd9\u4e2a\u4e3b\u5f20\u7684\u4e00\u4e2a\u6784\u5efa\u5757\uff0c\u4e00\u65e6\u4f60\u5b9a\u4e49\u4e86\u51fd\u6570\uff0c\u4f60\u5c31\u53ef\u4ee5\u7f16\u5199\u4efb\u4f55\u4f60\u60f3\u8981\u7684\u7a0b\u5e8f\uff0c\u4f60\u53ef\u4ee5\u6267\u884c\u4efb\u4f55\u8ba1\u7b97\uff0c\u4f60\u53ef\u80fd\u4f1a\u60f3\uff0c\u8fd9\u771f\u7684\u662f\u771f\u7684\u5417\uff0c\u6bd4\u5982\u6211\u4e0d\u9700\u8981while\u8bed\u53e5\u6216for\u8bed\u53e5\u3002\u4e8b\u5b9e\u8bc1\u660e\uff0c\u4ece\u6280\u672f\u4e0a\u8bb2\uff0c\u4f60\u6ca1\u6709\uff0c\u8fd9\u5e76\u4e0d\u610f\u5473\u7740\u6211\u4eec\u5e94\u8be5\u53bb\u6389while\u8bed\u53e5\uff0c\u5bf9\u4e8e\u8bed\u53e5\uff0c\u5b83\u4eec\u6bd4\u8fd9\u66f4\u53ef\u8bfb\uff0c\u4f46\u662f\uff0c\u55ef\uff0c\u4e3a\u4e86\u6267\u884c\u6709\u8da3\u7684\u8ba1\u7b97\uff0c\u5b83\u4eec\u5e76\u4e0d\u662f\u4e25\u683c\u5fc5\u8981\u7684\u3002</p> <p> </p> <p>Hany:</p> <p>\u662f\u7684\uff0c\u804a\u5929\u4e2d\u7684\u4e00\u4e9b\u4eba\u521a\u521a\u6307\u51fascheme\u548clisp\uff0c\u8fd9\u662f\u8fd9\u4e9b\u51fd\u6570\u5f0f\u7f16\u7a0b\u8bed\u8a00\u7684\u524d\u63d0\uff0c\u5b83\u4eec\u5728\u505a\u4efb\u4f55\u4e8b\u60c5\u65f6\u90fd\u6ca1\u6709\u5faa\u73af\u3001\u663e\u5f0f\u7684\u5faa\u73af\u7ed3\u6784\uff0c\u6709\u8fd9\u4e9b\u7c7b\u578b\u7684\u7ed3\u6784\uff0c\u8fd9\u6709\u70b9\u8ba9\u4eba\u8d39\u89e3\uff0c\u4f46\u4e8b\u5b9e\u8bc1\u660e\u5b83\u8db3\u591f\u6709\u8868\u8fbe\u529b...</p> <p>\u6211\u7684\u7406\u89e3\u662f\uff0c\u533f\u540d\u51fd\u6570\u7684\u9012\u5f52\uff0c\u7531\u4e8e\u65e0\u6cd5\u58f0\u660e\u53d8\u91cf\u548c\u7ed9\u53d8\u91cf\u8d4b\u503c\uff0c\u6240\u4ee5\u9700\u8981\u5c06\u51fd\u6570\u4f5c\u4e3a\u53c2\u6570\u4f20\u5165\u533f\u540d\u51fd\u6570\uff0c\u7136\u540e\u518d\u5728\u5185\u90e8\u8c03\u7528\uff0c\u800c\u7531\u4e8e\u6b64\u65f6\u533f\u540d\u51fd\u6570\u6d4b\u53c2\u6570\u4e2d\u6709\u4e00\u4e2a\u51fd\u6570\u53c2\u6570\uff0c\u6240\u4ee5\u5728\u8c03\u7528\u4ee5\u53c2\u6570\u4f20\u5165\u7684\u51fd\u6570\u65f6\uff0c\u53c2\u6570\u4e5f\u8981\u4e0e\u81ea\u8eab\u76f8\u5339\u914d(\u5373\u52a0\u4e0a\u8be5\u51fd\u6570\u81ea\u8eab)\uff0c\u5982</p> <pre><code>lambda n, f: 1 if n == 1 else f(n, f)\n</code></pre> <p>\u4e0b\u4e00\u6b65\u6211\u7684\u7406\u89e3\u662f\uff0c\u7531\u4e8e\u9700\u8981\u53bb\u8c03\u7528\u533f\u540d\u51fd\u6570\u81ea\u8eab\uff0c\u800c\u53c8\u4e0d\u80fd\u8d4b\u503c\uff0c\u90a3\u4e48\u5c31\u667a\u80fd\u5c06\u51fd\u6570\u4f5c\u4e3a\u53c2\u6570\u4f20\u5165\u53e6\u4e00\u4e2a\u51fd\u6570\uff0c\u518d\u5728\u540e\u8005\u5185\u90e8\u8c03\u7528\u524d\u8005\uff0c\u5373</p> <pre><code>(lambda f: f(n, f))(lambda n, f: 1 if n == 1 else f(n, f))\n</code></pre> <p>\u6700\u540e\uff0c\u7531\u4e8en\u662f\u6700\u7ec8\u60f3\u8981\u8bbe\u7f6e\u7684\u53c2\u6570\uff0c\u6240\u4ee5\u5728\u6700\u5916\u9762\u6700\u540e\u5305\u4e0a\u4e00\u5c42</p> <pre><code>lambda n: (lambda f: f(n, f))(lambda n, f: 1 if n == 1 else f(n, f))\n</code></pre>"},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part1/#3_9","title":"3","text":"<p>23:52</p> <p>\u5173\u4e8electure 12\u6700\u540e\u63d0\u53ca\u7684\u9012\u5f52\u51fd\u6570\u7684\u6784\u5efa\u65b9\u5f0f</p> <p>Quote</p> <p></p> <pre><code>def fact(n):\n    if n == 0:\n        return 1\n    else:\n        return n * fact(n - 1)\n\ndef fact_times(n, k):\n    \"\"\"Return k times n factorial\n              k *     n * (n-1) * ... * 1\n    \"\"\"\n    if n == 0:\n        return k\n    else:\n        return fact_times(n - 1, k * n)\n</code></pre> <p>John:</p> <p>...yeah, so the reason we did something a little bit different here, was so that we could show an example, of a recursive function, that just called itself, without doing anything with it, so there kind of wasn't anything outside of the call, everything happened inside the call, where we subtracted one from n and we multiplied k by n. but we didn't like add anything or multiply anything afterwards, which was different than the original version of factorial, which did multiply the result of the recursive call by n. the original one looked like this, right, it was like if n equals zero return one, else return n times fact n minus one. so here we make the recursive call and then we like do some work afterwards, and that means the recursive call doesn't really know where it came from. it doesn't know anything about which factorial result you're constructing, whereas this one does. at the end, when you hit the base case, you have computed k times n factorial for whatever n in k you started with, and that is now named k, which is a little confusing, but that's how it goes sometimes with recursion. but the point is that the whole answer is, uh, built up by the time you hit the base case, at which point you just have to return return return return, all the work is done.</p> <p> </p> <p>Hany:</p> <p>and notice, by the way, in that first one that's not true, as you're doing recursion, there is a delayed gratification of the evaluation of that product, so when you hit the base case in the first fact, you then have to go back and now multiply all those numbers between n and one. yeah because you built an expression, whereas in the fact times, you basically have an assignment operator, it's that you're, you're just using the parameters as the assignment operator, and so when you hit that base case, done, i've got the answer. so, so you're right, of course, we could have done it differently, we didn't have to do it this way, but you see that the structurally the recursion is subtly different here, and it turns out this has a real implication too by the way, downstream, and i think, i think we'll eventually do that, right john.</p> <p> </p> <p>John:</p> <p>yeah so this is called, uh, tail recursion, and this is not, and we'll talk about this later when we talk about interpreters. um, so the goal here wasn't to implement fact times, it was actually to re-implement fact. but in order to re-implement fact you'd have to have a helper function, that's what fact times is. that keeps track of two arguments instead of one. the thing you're trying to compute the factorial of, and the result the answer of computing n.</p> <p>John\uff1a</p> <p>...\u662f\u7684\uff0c\u6211\u4eec\u5728\u8fd9\u91cc\u505a\u4e86\u4e00\u4e9b\u4e0d\u540c\u7684\u4e8b\u60c5\uff0c\u662f\u4e3a\u4e86\u5c55\u793a\u4e00\u4e2a\u9012\u5f52\u51fd\u6570\u7684\u793a\u4f8b\uff0c\u5b83\u53ea\u662f\u8c03\u7528\u4e86\u81ea\u5df1\uff0c\u800c\u6ca1\u6709\u5bf9\u5b83\u505a\u4efb\u4f55\u4e8b\u60c5\uff0c\u6240\u4ee5\u5728\u8c03\u7528\u4e4b\u5916\u51e0\u4e4e\u6ca1\u6709\u4ec0\u4e48\u4e1c\u897f\uff0c\u6240\u6709\u4e8b\u60c5\u90fd\u53d1\u751f\u5728\u8c03\u7528\u5185\u90e8\uff0c\u6211\u4eec\u4ecen\u4e2d\u51cf\u53bb\u4e861\u5e76\u5c06k\u4e58\u4ee5n\u3002\u4f46\u662f\u6211\u4eec\u6ca1\u6709\u6dfb\u52a0\u6216\u4e58\u4ee5\u4efb\u4f55\u5176\u4ed6\u4e1c\u897f\uff0c\u8fd9\u4e0e\u9636\u4e58\u7684\u539f\u59cb\u7248\u672c\u4e0d\u540c\uff0c\u539f\u59cb\u7248\u672c\u901a\u8fc7\u4e58\u4ee5\u9012\u5f52\u8c03\u7528\u7684\u7ed3\u679c\u6765\u8ba1\u7b97\u3002\u539f\u59cb\u7248\u672c\u770b\u8d77\u6765\u50cf\u8fd9\u6837\uff0c\u5982\u679cn\u7b49\u4e8e\u96f6\uff0c\u5219\u8fd4\u56de1\uff0c\u5426\u5219\u8fd4\u56den\u4e58\u4ee5fact\uff08n-1\uff09\u3002\u6240\u4ee5\u5728\u8fd9\u91cc\uff0c\u6211\u4eec\u8fdb\u884c\u9012\u5f52\u8c03\u7528\uff0c\u7136\u540e\u5728\u4e4b\u540e\u8fdb\u884c\u4e00\u4e9b\u5de5\u4f5c\uff0c\u8fd9\u610f\u5473\u7740\u9012\u5f52\u8c03\u7528\u4e0d\u77e5\u9053\u5b83\u6765\u81ea\u54ea\u91cc\u3002\u5b83\u4e0d\u77e5\u9053\u4f60\u6b63\u5728\u6784\u5efa\u54ea\u4e2a\u9636\u4e58\u7ed3\u679c\uff0c\u800c\u8fd9\u4e2a\u7248\u672c\u77e5\u9053\u3002\u6700\u540e\uff0c\u5f53\u4f60\u5230\u8fbe\u57fa\u672c\u60c5\u51b5\u65f6\uff0c\u4f60\u5df2\u7ecf\u8ba1\u7b97\u51fa\u4e86\u5bf9\u4e8e\u4efb\u4f55\u4ee5k\u4e3an\u5f00\u59cb\u7684n\uff0ck\u4e58\u4ee5n\u7684\u9636\u4e58\uff0c\u73b0\u5728\u5b83\u88ab\u547d\u540d\u4e3ak\uff0c\u8fd9\u6709\u70b9\u4ee4\u4eba\u56f0\u60d1\uff0c\u4f46\u6709\u65f6\u5c31\u662f\u8fd9\u6837\u9012\u5f52\u3002\u4f46\u662f\u91cd\u70b9\u662f\u6574\u4e2a\u7b54\u6848\u5728\u8fbe\u5230\u57fa\u672c\u60c5\u51b5\u65f6\u5c31\u5df2\u7ecf\u6784\u5efa\u5b8c\u6210\uff0c\u6b64\u65f6\u4f60\u53ea\u9700\u8981\u8fd4\u56de\uff0c\u8fd4\u56de\uff0c\u8fd4\u56de\uff0c\u6240\u6709\u7684\u5de5\u4f5c\u90fd\u5df2\u5b8c\u6210\u3002</p> <p> </p> <p>Hany\uff1a</p> <p>\u987a\u4fbf\u63d0\u4e00\u4e0b\uff0c\u5728\u7b2c\u4e00\u4e2a\u51fd\u6570\u4e2d\uff0c\u5f53\u4f60\u8fdb\u884c\u9012\u5f52\u65f6\uff0c\u6709\u4e00\u4e2a\u4e58\u79ef\u7684\u8bc4\u4f30\u5ef6\u8fdf\uff0c\u6240\u4ee5\u5f53\u4f60\u5728\u7b2c\u4e00\u4e2afact\u4e2d\u8fbe\u5230\u57fa\u672c\u60c5\u51b5\u65f6\uff0c\u4f60\u9700\u8981\u56de\u53bb\u73b0\u5728\u4e58\u4ee5n\u548c1\u4e4b\u95f4\u7684\u6240\u6709\u6570\u5b57\u3002\u662f\u7684\uff0c\u56e0\u4e3a\u4f60\u6784\u5efa\u4e86\u4e00\u4e2a\u8868\u8fbe\u5f0f\uff0c\u800c \u5728fact times\u4e2d\uff0c\u4f60\u57fa\u672c\u4e0a\u6709\u4e00\u4e2a\u8d4b\u503c\u8fd0\u7b97\u7b26\uff0c\u4f60\u53ea\u662f \u5c06\u53c2\u6570\u7528\u4f5c\u8d4b\u503c\u8fd0\u7b97\u7b26\uff0c\u6240\u4ee5\u5f53\u4f60 \u5230\u8fbe\u57fa\u672c\u60c5\u51b5\u65f6\uff0c\u5b8c\u6210\u4e86\uff0c\u6211\u5f97\u5230\u4e86\u7b54\u6848\u3002\u6240\u4ee5\uff0c\u5f53\u7136\uff0c\u4f60\u662f\u5bf9\u7684\uff0c\u6211\u4eec\u672c\u6765\u53ef\u4ee5\u7528\u4e0d\u540c\u7684\u65b9\u5f0f\u505a\u8fd9\u4e2a\uff0c\u4f46\u4f60\u53ef\u4ee5\u770b\u5230\uff0c\u9012\u5f52\u7684\u7ed3\u6784\u5728\u8fd9\u91cc\u662f\u5fae\u5999\u4e0d\u540c\u7684\uff0c\u8fd9\u5728\u4e0b\u6e38\u4e5f\u6709\u5b9e\u9645\u5f71\u54cd\uff0c\u6211\u8ba4\u4e3a\u6211\u4eec\u6700\u7ec8\u4f1a\u505a\uff0c\u5bf9\u5427\uff0cJohn\u3002</p> <p> </p> <p>John\uff1a</p> <p>\u662f\u7684\uff0c\u6240\u4ee5 \u8fd9\u88ab\u79f0\u4e3a\u5c3e\u9012\u5f52\uff0c\u800c\u8fd9\u4e0d\u662f\u5c3e\u9012\u5f52\uff0c\u6211\u4eec\u5c06\u5728\u8ba8\u8bba\u89e3\u91ca\u5668\u65f6\u518d\u8c08\u8bba\u8fd9\u4e2a\u95ee\u9898\u3002\u6240\u4ee5\u8fd9\u91cc\u7684\u76ee\u6807\u4e0d\u662f\u5b9e\u73b0fact times\uff0c\u800c\u662f\u91cd\u65b0\u5b9e\u73b0fact\u3002\u4f46\u662f \u4e3a\u4e86\u91cd\u65b0\u5b9e\u73b0fact\uff0c\u60a8\u5fc5\u987b\u6709\u4e00\u4e2a\u8f85\u52a9\u51fd\u6570\uff0c\u5373fact times\u3002\u4e0e\u4e00\u4e2a\u53c2\u6570\u4e0d\u540c\uff0c\u5b83\u4fdd\u7559\u4e86\u8981\u8ba1\u7b97\u9636\u4e58\u7684\u5143\u7d20\u548c\u8ba1\u7b97n\u7ed3\u679c\u7684\u7b54\u6848\u8fd9\u4e24\u4e2a\u53c2\u6570\u3002</p>"},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part1/#lab-05","title":"Lab 05","text":""},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part1/#1_22","title":"1","text":"<p>Q6 \u4e2d\uff0c\u501f\u9274\u4e86 <code>lab05.py</code> \u6587\u4ef6\u5e95\u90e8 <code>Tree ADT</code> \u4e2d\u6700\u540e\u4e00\u4e2a\u51fd\u6570 <code>copy_tree()</code> \u7684\u51fd\u6570\u6784\u9020\u601d\u8def</p> <pre><code>def copy_tree(t):\n    \"\"\"Returns a copy of t. Only for testing purposes.\n\n    &gt;&gt;&gt; t = tree(5)\n    &gt;&gt;&gt; copy = copy_tree(t)\n    &gt;&gt;&gt; t = tree(6)\n    &gt;&gt;&gt; print_tree(copy)\n    5\n    \"\"\"\n    return tree(label(t), [copy_tree(b) for b in branches(t)])\n</code></pre> <p>\u7531\u4e8eQ6\u4e2d\u662f\u9700\u8981\u8fd4\u56de\u4e00\u4e2a\u65b0\u7684\u6811\uff0c\u6240\u4ee5\u76f4\u63a5\u7528\u6811\u7684\u6784\u9020\u51fd\u6570\u6839\u636e\u539f\u6811\u53bb\u9012\u5f52\u5730(\u53c2\u8003 <code>copy_tree()</code> )\u6784\u9020\u4e00\u4e2a\u65b0\u6811</p> <p>(\u5148\u6784\u5efa\u597d\u57fa\u672c\u7684\u9012\u5f52\uff0c\u518d\u8003\u8651\u57fa\u672c\u60c5\u51b5(basic situation)\u4e0b\u5982\u4f55\u5904\u7406)</p> <p>1</p> <pre><code>def sprout_leaves(t, leaves):\n    return tree(label(t), [... sprout_leaves(branch, leaves) for branch in branches(t)])\n</code></pre> <p>2</p> <pre><code>def sprout_leaves(t, leaves):\n    return tree(label(t), [... if is_leaf(branch) else sprout_leaves(branch, leaves) for branch in branches(t)])\n</code></pre> <p>3</p> <pre><code>def sprout_leaves(t, leaves):\n    return tree(label(t), [tree(label(branch), [...]) if is_leaf(branch) else sprout_leaves(branch, leaves) for branch in branches(t)])\n</code></pre> <p>4</p> <pre><code>def sprout_leaves(t, leaves):\n    return tree(label(t), [tree(label(branch), [tree(leaf) for leaf in leaves]) if is_leaf(branch) else sprout_leaves(branch, leaves) for branch in branches(t)])\n</code></pre>"},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part1/#2_12","title":"2","text":"<p>Q9</p> <p>(\u53ef\u4ee5\u5229\u7528\u4e0b\u6807\u6765\u6784\u5efa\u63a8\u5bfc\u5f0f)</p> <p>Quote</p> <p>Hint: To write this as a single comprehension, you may find the expression <code>k%2</code>, which evaluates to 0 on even numbers and 1 on odd numbers, to be useful. Consider how you can use the 0 or 1 returned by <code>k%2</code> to alternatively access the beginning and the middle of the list.</p> code <pre><code>def riffle(deck):\n    \"\"\"Produces a single, perfect riffle shuffle of DECK, consisting of\n    DECK[0], DECK[M], DECK[1], DECK[M+1], ... where M is position of the\n    second half of the deck.  Assume that len(DECK) is even.\n    &gt;&gt;&gt; riffle([3, 4, 5, 6])\n    [3, 5, 4, 6]\n    &gt;&gt;&gt; riffle(range(20))\n    [0, 10, 1, 11, 2, 12, 3, 13, 4, 14, 5, 15, 6, 16, 7, 17, 8, 18, 9, 19]\n    \"\"\"\n    \"*** YOUR CODE HERE ***\"\n    return [deck[i // 2] if i % 2 == 0 else deck[(len(deck) + i) // 2] for i in range(len(deck))]\n</code></pre>"},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part1/#3_10","title":"3","text":"<p>\u5728 Lecture 14 Q&amp;A \u4e2d John \u6709\u63d0\u5230\u6b64\u9898\u7684\u89e3\u6cd5\uff0c\u5728\u770b\u4e86\u4e00\u90e8\u5206(\u4f7f\u7528\u4e0b\u6807\u7684\u65b9\u6cd5)\u4e4b\u540e\uff0c\u7528\u5217\u8868\u63a8\u5bfc\u5f0f\u5199\u51fa\u4e86\u4e00\u4e2a\u53ef\u7528\u7684\u65b9\u6cd5(\u7ed3\u6784\u6709\u70b9\u7c7b\u4f3c\u4e8eQ6)\uff1a</p> <pre><code>def add_trees(t1, t2):\n    return tree(label(t1) + label(t2), [add_trees(branches(t1)[i] if i &lt; len(branches(t1)) else tree(0), branches(t2)[i] if i &lt; len(branches(t2)) else tree(0)) for i in range(max(len(branches(t1)), len(branches(t2))))])\n</code></pre>"},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part1/#4_7","title":"4","text":"<p>Q11\u4e2d</p> <pre><code>def build_successors_table(tokens):\n    \"\"\"Return a dictionary: keys are words; values are lists of successors.\n\n    &gt;&gt;&gt; text = ['We', 'came', 'to', 'investigate', ',', 'catch', 'bad', 'guys', 'and', 'to', 'eat', 'pie', '.']\n    &gt;&gt;&gt; table = build_successors_table(text)\n    &gt;&gt;&gt; sorted(table)\n    [',', '.', 'We', 'and', 'bad', 'came', 'catch', 'eat', 'guys', 'investigate', 'pie', 'to']\n    &gt;&gt;&gt; table['to']\n    ['investigate', 'eat']\n    &gt;&gt;&gt; table['pie']\n    ['.']\n    &gt;&gt;&gt; table['.']\n    ['We']\n    \"\"\"\n    table = {}\n    prev = '.'\n    for word in tokens:\n        if prev not in table:\n            \"*** YOUR CODE HERE ***\"\n        \"*** YOUR CODE HERE ***\"\n        prev = word\n    return table\n</code></pre> <p>\u4e2d\u7684 <code>sorted()</code> \u51fd\u6570\u5982\u679c\u4ee5\u5b57\u5178\u4e3a\u4f20\u5165\u53c2\u6570\uff0c\u8f93\u51fa\u7684 \u5e94\u8be5 \u662f\u4e00\u4e2a\u542b\u6709\u6240\u6709key\u5e76\u4e14\u6392\u5e8f\u597d\u7684\u5217\u8868</p>"},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part1/#lecture-13-qa","title":"Lecture 13 Q&amp;A","text":""},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part1/#1_23","title":"1","text":"<p>John\u5173\u4e8e <code>min()</code> \u548c <code>max()</code> \u7684 <code>key</code> \u53c2\u6570\u7684\u4e00\u4e9b\u89e3\u91ca\u548c\u8bf4\u660e</p> <p>Quote</p> <p>...what's going on with the min function and its optional argument called key. sometimes what you want is to find the smallest number among a list, and min will do that for you. but sometimes what you want is to find a particular number that's extreme in another way, like it's not the smallest, it's not the largest, but it's the closest to five or it's the, it's the thing that when you square it is closest to 24, or you know you could imagine any kind of description, where there's like a some value, that would do this the best, and min allows you to find that element for any possible condition, and that's the point of that key function. so the way you do it is that, you start out with your same set of values, of which one is the one that you're looking for, and then you provide a function, and this function is going to be called on every single one of these values, and yeah, let's use that example of, uh, the square is as close as possible to 24. i don't know why you would want this, but maybe you would for some reason.</p> <pre><code>&gt;&gt;&gt; min([3, 2, 5, 6], key=lambda x: abs(x * x - 24))\n</code></pre> <p>so what's going to happen here, is that it's going to square, and then subtract 24 from each of these, and then take the absolute value in order to get some measurement of how close is the square of this x to 24. and it tells us 5 is among these numbers the one that when you square it gets you pretty close to 24. in fact there's like an important property about this computation that's not shown, which is that 5 squared minus 24 is 1, and there's no 1 in this output, that's all hidden. what is happening is that, that 1 is computed along with the result of, squaring 3 and subtracting 24, and squaring 6 and subtracting 24. so it's done it for all of them, and then it has found the one, for which the result of calling this function is the smallest. why the smallest, because it's min. so in this way you can use min in order to find the, kind of extreme value for any notion of extreme that you want, but you always get one of these values. and if there's a tie, then you'll get an arbitrary one i think. you get the first one but i'm not actually sure...</p> <p>...min\u51fd\u6570\u53ca\u5176\u540d\u4e3akey\u7684\u53ef\u9009\u53c2\u6570\u53d1\u751f\u4e86\u4ec0\u4e48\u3002\u6709\u65f6\uff0c\u4f60\u60f3\u8981\u7684\u662f\u5728\u4e00\u4e2a\u5217\u8868\u4e2d\u627e\u5230\u6700\u5c0f\u7684\u6570\u5b57\uff0cmin\u4f1a\u4e3a\u4f60\u505a\u5230\u8fd9\u4e00\u70b9\u3002\u6709\u65f6\uff0c\u4f60\u60f3\u8981\u7684\u662f\u627e\u5230\u4e00\u4e2a\u4ee5\u53e6\u4e00\u79cd\u65b9\u5f0f\u6781\u7aef\u7684\u7279\u5b9a\u6570\u5b57\uff0c\u6bd4\u5982\u5b83\u4e0d\u662f\u6700\u5c0f\u7684\uff0c\u4e5f\u4e0d\u662f\u6700\u5927\u7684\uff0c\u4f46\u5b83\u6700\u63a5\u8fd15\uff0c\u6216\u8005\u5b83\u662f\uff0c\u5f53\u4f60\u628a\u5b83\u5e73\u65b9\u65f6\uff0c\u5b83\u6700\u63a5\u8fd124\uff0c\u6216\u8005\u4f60\u77e5\u9053\u4f60\u53ef\u4ee5\u60f3\u8c61\u4efb\u4f55\u4e00\u79cd\u63cf\u8ff0\uff0c\u5176\u4e2d\u6709\u4e00\u4e2a\u503c\uff0c\u8fd9\u5c06\u662f\u6700\u597d\u7684\uff0cmin\u5141\u8bb8\u4f60\u627e\u5230\u4efb\u4f55\u53ef\u80fd\u6761\u4ef6\u4e0b\u7684\u5143\u7d20\uff0c\u8fd9\u5c31\u662f\u5173\u952e\u51fd\u6570\u7684\u610f\u4e49\u6240\u5728\u3002\u8fd9\u6837\u505a\u7684\u65b9\u6cd5\u662f\uff0c\u4f60\u4ece\u4e00\u7ec4\u76f8\u540c\u7684\u503c\u5f00\u59cb\uff0c\u5176\u4e2d\u4e00\u4e2a\u662f\u4f60\u6b63\u5728\u5bfb\u627e\u7684\u503c\uff0c\u7136\u540e\u4f60\u63d0\u4f9b\u4e00\u4e2a\u51fd\u6570\uff0c\u8fd9\u4e2a\u51fd\u6570\u5c06\u5bf9\u8fd9\u4e9b\u503c\u4e2d\u7684\u6bcf\u4e00\u4e2a\u8c03\u7528\uff0c\u662f\u7684\uff0c\u8ba9\u6211\u4eec\u7528\u8fd9\u4e2a\u4f8b\u5b50\uff0c\u5443\uff0c\u5e73\u65b9\u5c3d\u53ef\u80fd\u63a5\u8fd124\u3002\u6211\u4e0d\u77e5\u9053\u4f60\u4e3a\u4ec0\u4e48\u60f3\u8981\u8fd9\u4e2a\uff0c\u4f46\u4e5f\u8bb8\u51fa\u4e8e\u67d0\u79cd\u539f\u56e0\u4f60\u4f1a\u60f3\u8981\u3002</p> <pre><code>&gt;&gt;&gt; min([3, 2, 5, 6], key=lambda x: abs(x * x - 24))\n</code></pre> <p>\u8fd9\u91cc\u8981\u505a\u7684\u662f\uff0c\u5b83\u8981\u5e73\u65b9\uff0c\u7136\u540e\u4ece\u6bcf\u4e00\u4e2a\u4e2d\u51cf\u53bb24\uff0c\u7136\u540e\u53d6\u7edd\u5bf9\u503c\uff0c\u5f97\u5230x\u548c24\u7684\u5e73\u65b9\u6709\u591a\u63a5\u8fd1\u3002\u5b83\u544a\u8bc9\u6211\u4eec\uff0c5\u662f\u8fd9\u4e9b\u6570\u5b57\u4e2d\u7684\u4e00\u4e2a\uff0c\u5f53\u4f60\u5e73\u65b9\u65f6\uff0c\u5b83\u4f1a\u975e\u5e38\u63a5\u8fd124\u4e8b\u5b9e\u4e0a\uff0c\u8fd9\u4e2a\u8ba1\u7b97\u6709\u4e00\u4e2a\u91cd\u8981\u7684\u6027\u8d28\u6ca1\u6709\u663e\u793a\uff0c\u90a3\u5c31\u662f5\u7684\u5e73\u65b9\u51cf\u53bb24\u662f1\uff0c\u800c\u8fd9\u4e2a\u8f93\u51fa\u4e2d\u6ca1\u67091\uff0c\u8fd9\u90fd\u662f\u9690\u85cf\u7684\u3002\u73b0\u5728\u7684\u60c5\u51b5\u662f\uff0c1\u4e0e\u5e73\u65b93\u548c\u51cf\u6cd524\u3001\u5e73\u65b96\u548c\u51cf\u6cd524\u7684\u7ed3\u679c\u4e00\u8d77\u8ba1\u7b97\u3002\u56e0\u6b64\uff0c\u5b83\u5bf9\u6240\u6709\u8fd9\u4e9b\u51fd\u6570\u90fd\u8fdb\u884c\u4e86\u5904\u7406\uff0c\u7136\u540e\u627e\u5230\u4e86\u4e00\u4e2a\u51fd\u6570\uff0c\u8c03\u7528\u8be5\u51fd\u6570\u7684\u7ed3\u679c\u662f\u6700\u5c0f\u7684\u3002\u4e3a\u4ec0\u4e48\u662f\u6700\u5c0f\u7684\uff0c\u56e0\u4e3a\u5b83\u662f\u6700\u5c0f\u7684\u3002\u901a\u8fc7\u8fd9\u79cd\u65b9\u5f0f\uff0c\u4f60\u53ef\u4ee5\u4f7f\u7528min\u6765\u627e\u5230\uff0c\u4efb\u4f55\u4f60\u60f3\u8981\u7684\u6781\u503c\u6982\u5ff5\u7684\u6781\u503c\uff0c\u4f46\u4f60\u603b\u662f\u5f97\u5230\u5176\u4e2d\u4e00\u4e2a\u503c\u3002\u5982\u679c\u6253\u6210\u5e73\u624b\uff0c\u6211\u60f3\u4f60\u4f1a\u5f97\u5230\u4e00\u4e2a\u4efb\u610f\u7684\u5e73\u624b\u3002\u4f60\u5f97\u5230\u4e86\u7b2c\u4e00\u4e2a\uff0c\u4f46\u6211\u5b9e\u9645\u4e0a\u4e0d\u786e\u5b9a...</p>"},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part1/#2_13","title":"2","text":"<p>\u4e24\u4e2a\u5217\u8868\u5728\u6bd4\u8f83\u5927\u5c0f\u65f6\uff0c\u4f1a\u6bd4\u8f83\u7b2c\u4e00\u4e2a\u5143\u7d20\u7684\u5927\u5c0f( <code>min()</code> \u51fd\u6570\u4e5f\u7c7b\u4f3c)\uff0c</p> <p>\u6d4b\u8bd5\u4e86\u4e00\u4e0b\uff0c\u5e94\u8be5\u662f\u50cf\u5b57\u7b26\u4e32\u4e00\u6837\u7684\u89c4\u5219\uff0c\u5373\u524d\u4e00\u4e2a\u5143\u7d20\u80fd\u6bd4\u8f83\u51fa\u5c31\u6309\u7167\u8be5\u7ed3\u679c\uff0c\u82e5\u76f8\u7b49\u5219\u6bd4\u8f83\u4e0b\u4e00\u4e2a\u5143\u7d20...</p> <pre><code>&gt;&gt;&gt; [3, 4, 5] &gt; [3, 3]\nTrue\n&gt;&gt;&gt; [3, 4, 5] &gt; [4, 3]\nFalse\n&gt;&gt;&gt; [3, 4, 5] &gt; [3, 4]\nTrue\n&gt;&gt;&gt; [3, 4, 5] &gt; [3, 5]\nFalse\n</code></pre>"},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part1/#lecture-14-circuits","title":"Lecture 14 Circuits","text":""},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part1/#1_24","title":"1","text":"<p>Hany\u8bb2\u8bbe\u8ba1\u7535\u8def(Design Circuits)\u7684\u5185\u5bb9\u4e2d\uff0c\u6784\u5efa\u547d\u9898\u903b\u8f91\u516c\u5f0f\u7684\u601d\u8def(step 1-3)\u503c\u5f97\u5b66\u4e60</p> <ol> <li>step 1. build truth-table for all possible input/output values</li> <li>step 2. build sub-expressions with and/not for each output column</li> <li>step 3. combine, two at a time, sub-expressions with an or</li> <li>step 4. draw circuit diagram</li> </ol> <p></p> <ol> <li>\u5148\u6839\u636e\u771f\u503c\u8868\u5199\u51fa\u5b50\u8868\u8fbe\u5f0f</li> <li>\u518d\u5c06\u5b50\u8868\u8fbe\u5f0f\u6790\u53d6(or)\u5230\u4e00\u8d77</li> </ol> a b c d 0 0 0 0 0 1 1 0 1 0 1 0 1 1 0 1 <p>\u4e0a\u9762\u771f\u503c\u8868\u4e2d\u9ad8\u4eae\u7684c\u76841\u7684\u8f93\u51fa\u503c\uff0c\u9700\u8981\u7684\u5b50\u8868\u8fbe\u5f0f\u5e94\u4e3a <code>c = a' \u00b7 b</code> (\u975ea\u4e14b)</p> a b c d 0 0 0 0 0 1 1 0 1 0 1 0 1 1 0 1 <p>\u540c\u7406\uff0c\u8fd9\u4e2a\u9ad8\u4eae\u7684\u8f93\u51fa\u503c\uff0c\u5bf9\u5e94\u7684\u5b50\u8868\u8fbe\u5f0f\u5e94\u4e3a <code>c = a \u00b7 b'</code> </p> <p>\u6700\u540e\uff0c\u518d\u6790\u53d6\u4e24\u4e2a\u5b50\u8868\u8fbe\u5f0f\uff0c\u5373\u5f97\u5230</p> <p><code>c = (a' \u00b7 b) + (a \u00b7 b')</code> </p>"},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part1/#2_14","title":"2","text":"<p>\u4e8c\u8fdb\u5236\u6570\u7684\u52a0\u6cd5\u9700\u8981\u6784\u5efa\u51fa\u67093\u4e2a\u8f93\u5165\u503c\u548c2\u4e2a\u8f93\u51fa\u503c\u7684\u7535\u8def</p> <p></p> <p></p>"},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part1/#3_11","title":"3","text":"<p>...okay, remember how the sub expressions work, you treat each output column separately, the d and the e. output column are completely independent of each other. we're going to identify wherever there's a one, and then here here here and here. we're going to build a sub expression using only and and not, and then we're going to combine those sub expressions using the or operator. and then once we have the final expression, of course we're going to draw some circuitry... </p> <p>\u611f\u89c9\u6709\u70b9\u7c7b\u4f3c\u4e0e\u5199\u51fa\u4e3b\u6790\u53d6\u8303\u5f0f</p>"},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part1/#4_8","title":"4","text":"<p>\u5199\u547d\u9898\u903b\u8f91\u516c\u5f0f\u7684\u6280\u5de7\uff1a</p> <ol> <li>\u53d8\u5143\u591a\u7684\u65f6\u5019\u53ef\u4ee5\u591a\u4e2a\u53d8\u5143\u5408\u6210\u4e00\u7ec4\uff0c\u7136\u540e\u7ed3\u5408\u8868\u683c\u5c55\u793a\u771f\u503c</li> <li>\u5199\u5b50\u8868\u8fbe\u5f0f\u65f6\u7684\u6280\u5de7\uff0c\u5982\u7531\u4e0a\u56fe\u7070\u8272\u533a\u57df\uff0c\u53ef\u4ee5\u53d1\u73b0\u4e0ea\u7684\u53d6\u503c\u65e0\u5173\uff0c\u6545\u53ef\u4ee5\u5199\u51fa\u5b50\u8868\u8fbe\u5f0f <code>b\u00b7c\u00b7d'</code></li> </ol>"},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part1/#lecture-14-qa","title":"Lecture 14 Q&amp;A","text":""},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part1/#1_25","title":"1","text":"<p>Lab 05 \u7684 Q10</p> <p>\u4e0d\u4f7f\u7528 built-in zip function:</p> <p></p> <p>John\u7684\u65b9\u6cd5\u6211\u8ba4\u4e3a\u5173\u952e\u4e4b\u5904\u5728\u4e8e\uff0c\u7528\u4e0b\u6807\u53bb\u8054\u7cfb\u4e24\u9897\u6811\u5bf9\u5e94\u7684\u6811\u679d/\u5206\u652f</p> <pre><code>def add_trees(t1, t2):\n    result_label = label(t1) + label(t2)\n    result_branches = []\n    i = 0\n    while i &lt; min(len(branches(t1)), len(branches(t1))):\n        b1, b2 = branches(t1)[i], branches(t2)[i]\n        new_branch = add_trees(b1, b2)\n        result_branches = result_branches + [new_branch]\n        i = i + 1\n    result_branches = result_branches + branches(t1)[i:]\n    result_branches = result_branches + branches(t2)[i:]\n    return tree(result_label, result_branches)\n</code></pre> <p>\u4f7f\u7528 built-in zip function:</p> <p></p> <p><code>zip()</code> \u53ef\u4ee5\u5c06\u591a\u4e2a\u5e8f\u5217\u4e2d\u7684\u5143\u7d20\u540c\u65f6\u63d0\u53d6\u51fa\u6765\uff0c\u6bd4\u5982\uff0ca\u5217\u8868\u67095\u4e2a\u5143\u7d20\uff0cb\u5217\u8868\u67098\u4e2a\u5143\u7d20\uff0c\u5219 \u5c06\u4e24\u8005\u8f93\u5165\u5230 <code>zip()</code> \u4e2d\uff0c\u4f1a\u5f97\u5230\u4e00\u4e2a\u542b\u6709a\u5217\u8868\u5168\u90e8\u5143\u7d20\u548cb\u5217\u8868\u524d5\u4e2a\u5143\u7d20\u7684\u5e8f\u5217\uff0c\u5e8f\u5217\u4e2d\u6bcf\u4e2a\u5143\u7d20\u4e3aa b\u5217\u8868\u4e2d\u4e0b\u6807\u5bf9\u5e94\u7684\u5143\u7d20(\u50cf\u4e0a\u56fe\u4e2d\u7684\u4e00\u6837)</p> <p>\u91cd\u8981\u7684\u662f\u53ef\u4ee5\u4f7f\u7528 \u5e8f\u5217\u63a8\u5bfc\u5f0f\uff0c\u6216\u8005 <code>for</code> \u8bed\u53e5(\u5229\u7528 <code>zip()</code> )\u5c06\u591a\u4e2a\u5e8f\u5217\u4e2d\u7684\u5143\u7d20\u4e00\u8d77\u63d0\u53d6\u51fa\u6765\uff0c\u5982</p> <pre><code>&gt;&gt;&gt; l1 = [1, 2, 3]\n&gt;&gt;&gt; l2 = [\"a\", \"b\", \"c\"]\n&gt;&gt;&gt; [[x, y] for x, y in zip(l1, l2)]\n[[1, 'a'], [2, 'b'], [3, 'c']]\n</code></pre> <p>\u90a3\u4e48\u4f7f\u7528 <code>zip</code> \u7684\u4ee3\u7801\u53ef\u4ee5\u5199\u6210\uff1a</p> <pre><code>def add_trees(t1, t2):\n    result_label = label(t1) + label(t2)\n    result_branches = [add_trees(b1, b2) for b1, b2 in zip(branches(t1), branches(t2))]\n    result_branches += branches(t1)[len(result_branches):] + branches(t2)[len(result_branches):]\n    return tree(result_label, result_branches)\n</code></pre>"},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part1/#lecture-15-mutable-values","title":"Lecture 15 Mutable Values","text":""},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part1/#1_26","title":"1","text":"<p>Quote</p> <p>...so objects represent information, they consist of data and behavior bundled together to create abstractions. objects can represent things, but also properties of things, or interactions, or processes, they're an extremely general concept, anything that has attributes can be represented as an object. a type of object is called a class, classes are first class values in python, they can be passed in as arguments to functions. and objects are the heart of object oriented programming, which is an approached programming, that allows us to organize large programs using a central metaphor, that a large program is just one big thing, it's a bunch of individual objects, communicating with each other by sending messages back and forth.</p> <p>...\u6240\u4ee5\u5bf9\u8c61\u8868\u793a\u4fe1\u606f\uff0c\u5b83\u4eec\u7531\u6346\u7ed1\u5728\u4e00\u8d77\u7684\u6570\u636e\u548c\u884c\u4e3a\u7ec4\u6210\uff0c\u4ee5\u521b\u5efa\u62bd\u8c61\u3002\u5bf9\u8c61\u53ef\u4ee5\u8868\u793a\u4e8b\u7269\uff0c\u4e5f\u53ef\u4ee5\u8868\u793a\u4e8b\u7269\u7684\u5c5e\u6027\u3001\u4ea4\u4e92\u6216\u8fc7\u7a0b\uff0c\u5b83\u4eec\u662f\u4e00\u4e2a\u975e\u5e38\u901a\u7528\u7684\u6982\u5ff5\uff0c\u4efb\u4f55\u5177\u6709\u5c5e\u6027\u7684\u4e1c\u897f\u90fd\u53ef\u4ee5\u8868\u793a\u4e3a\u5bf9\u8c61\u3002\u4e00\u79cd\u7c7b\u578b\u7684\u5bf9\u8c61\u88ab\u79f0\u4e3a\u7c7b\uff0c\u7c7b\u662fpython\u4e2d\u7684\u7b2c\u4e00\u4e2a\u7c7b\u503c\uff0c\u5b83\u4eec\u53ef\u4ee5\u4f5c\u4e3a\u53c2\u6570\u4f20\u9012\u7ed9\u51fd\u6570\u3002\u5bf9\u8c61\u662f\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b\u7684\u6838\u5fc3\uff0c\u8fd9\u662f\u4e00\u79cd\u63a5\u8fd1\u7f16\u7a0b\uff0c\u5b83\u5141\u8bb8\u6211\u4eec\u4f7f\u7528\u4e00\u4e2a\u4e2d\u5fc3\u9690\u55bb\u6765\u7ec4\u7ec7\u5927\u578b\u7a0b\u5e8f\uff0c\u5927\u578b\u7a0b\u5e8f\u53ea\u662f\u4e00\u4ef6\u5927\u4e8b\uff0c\u5b83\u662f\u4e00\u5806\u5355\u72ec\u7684\u5bf9\u8c61\uff0c\u901a\u8fc7\u6765\u56de\u53d1\u9001\u6d88\u606f\u6765\u76f8\u4e92\u901a\u4fe1\u3002</p>"},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part1/#2_15","title":"2","text":"<p><code>str</code> \u7684\u51e0\u4e2a\u65b9\u6cd5(\u6bcf\u79cd\u6570\u636e\u7c7b\u578b\u4e0b\u7684\u6570\u636e\u90fd\u662f\u4e00\u4e2a\u5bf9\u8c61\uff0c\u5982 <code>int</code> \u3001 <code>str</code> )</p> <p></p>"},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part1/#3_12","title":"3","text":"<p>\u6211\u8ba4\u4e3a\u8fd9\u662f\u4e00\u4e2a\u9002\u5408\u8bb0\u5fc6\u7684ascii\u7801\u8868</p> <p></p> <p>\u8fd9\u662f16\u8fdb\u5236\u7684ascii\u7801\u8868\uff1a</p> <pre><code>&gt;&gt;&gt; a = 'A'\n&gt;&gt;&gt; ord(a)\n65\n&gt;&gt;&gt; hex(ord(a))\n'0x41'\n</code></pre>"},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part1/#4_9","title":"4","text":"<ul> <li>\u4e00\u4e9b <code>list</code> \u7684\u65b9\u6cd5 </li> <li> <p>\u5217\u8868\u53ef\u4ee5\u540c\u65f6\u4fee\u6539\u591a\u4e2a\u503c\uff0c\u5982\u56fe\u4e2d <code>suit[0:2] = ['heart', 'diamond']</code></p> </li> <li> <p>\u5982\u679c\u5c06\u503c\u4e3a\u4e00\u4e2a\u5217\u8868\u7684\u53d8\u91cf\u8d4b\u503c\u7ed9\u53e6\u4e00\u4e2a\u53d8\u91cf\uff0c\u90a3\u4e48\u4e24\u4e2a\u53d8\u91cf\u5176\u5b9e\u4e0a\u90fd\u6307\u5411\u540c\u4e00\u4e2a\u5217\u8868\u5bf9\u8c61\uff0c\u901a\u8fc7\u4e8c\u8005\u4e4b\u4e00\u8fdb\u884c\u6539\u52a8\uff0c\u90fd\u662f\u5bf9\u5bf9\u8c61\u672c\u8eab\u6539\u52a8(\u663e\u793a\u53e6\u5916\u4e00\u4e2a\u53d8\u91cf\u7684\u503c\u65f6\u4f1a\u53d1\u73b0\u4e5f\u6539\u53d8\u4e86)</p> </li> </ul> <p></p> <p>\u4ece\u73af\u5883\u56fe\u4e2d\u4e5f\u53ef\u4ee5\u770b\u5230\uff0c\u4e24\u4e2a\u53d8\u91cf\u6307\u5411\u7684\u65f6\u901a\u8fc7\u4e00\u4e2a\u5217\u8868\uff0c\u4fee\u6539\u90fd\u662f\u5bf9\u4e8e\u5217\u8868\u5bf9\u8c61\u672c\u8eab\u8fdb\u884c\u4fee\u6539</p>"},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part1/#5_5","title":"5","text":"<p>\u6240\u6709\u6307\u5411\u540c\u4e00\u4e2a\u5bf9\u8c61\u7684\u53d8\u91cf(\u7684\u503c\uff0c\u5373\u6307\u5411\u7684\u5bf9\u8c61)\u90fd\u4f1a\u88ab\u4e00\u4e2a\u6539\u53d8(mutation)\u5f71\u54cd</p> <p>\u5e76\u4e14\uff0c\u53ea\u6709\u53ef\u53d8\u7684\u7c7b\u578b\u624d\u80fd\u8fd9\u6837\uff1alist \u548c dictionary</p> <p>All name thar refer to the same object are affected by a mutation</p> <p>Only objects of mutable types can change: lists &amp; dictionaries</p>"},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part1/#6_4","title":"6","text":"<p>\u53ef\u4ee5\u4f7f\u7528\u5217\u8868\u5207\u7247\u53bb\u6765 \u589e\u6dfb \u6216 \u5220\u51cf \u6216 \u66ff\u6362 \u5217\u8868\u4e2d\u7684\u5143\u7d20</p> <pre><code>&gt;&gt;&gt; list = [1, 2]\n&gt;&gt;&gt; list[4:6] = [4, 5]\n&gt;&gt;&gt; list\n[1, 2, 4, 5]\n&gt;&gt;&gt; list[3:] = [6, 7, 8]\n&gt;&gt;&gt; list\n[1, 2, 4, 6, 7, 8]\n&gt;&gt;&gt; list[2:] = []\n&gt;&gt;&gt; list\n[1, 2]\n</code></pre>"},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part1/#7_1","title":"7","text":"<ul> <li>\u88ab\u9017\u53f7\u5206\u9694\u7684\u51e0\u4e2a\u6570\u636e\u4e5f\u4f1a\u88ab\u8ba4\u4e3a\u5143\u7ec4(tuple) (\u53ef\u8ba4\u4e3a\u662f\u7701\u7565\u4e86\u62ec\u53f7\u7684\u5143\u7ec4)</li> <li>\u7528\u4e00\u4e2a\u5217\u8868\u6765\u8c03\u7528 tuple \u7684\u6784\u9020\u51fd\u6570\uff0c\u4f1a\u5f97\u5230\u542b\u6709\u76f8\u540c\u987a\u5e8f\u7684\u76f8\u540c\u5143\u7d20\u7684\u5143\u7ec4</li> <li>\u9017\u53f7 <code>,</code> \u53ef\u4ee5\u4f4d\u4e8e\u5143\u7ec4\u7684\u6700\u540e(\u5e94\u8be5\u4e5f\u53ef\u4ee5\u4f4d\u4e8e\u5217\u8868\u548c\u5b57\u5178\u7684\u6700\u540e\uff0c\u4e4b\u524d\u6709\u8bd5\u8fc7)</li> <li>\u7b2c\u4e09\u70b9\u548c\u7b2c\u4e00\u70b9\u7ed3\u5408\u8d77\u6765\u53ef\u4ee5\u5f97\u5230\uff1a<code>2,</code> \u548c <code>2</code> \u662f\u4e0d\u4e00\u6837\u7684(\u524d\u8005\u662f\u4e00\u4e2a\u5143\u7d20\uff0c\u540e\u8005\u662f\u4e00\u4e2a\u6574\u6570)</li> </ul>"},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part1/#8","title":"8","text":"<p>\u5143\u7ec4\u80fd\u4f5c\u4e3a\u5b57\u5178\u7684 key:</p> <pre><code>&gt;&gt;&gt; {(1, 2): 3}\n{(1, 2): 3}\n</code></pre> <p>\u4f46\u5143\u7ec4\u4e2d\u4e5f\u4e0d\u80fd\u542b\u6709\u5217\u8868:</p> <pre><code>&gt;&gt;&gt; {(1, [2]): 3}\nTraceback (most recent call last):\n  File \"&lt;stdin&gt;\", line 1, in &lt;module&gt;\nTypeError: unhashable type: 'list'\n</code></pre>"},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part1/#9","title":"9","text":"<ul> <li>\u53ef\u53d8\u5bf9\u8c61\u53ef\u4ee5\u901a\u8fc7 \u5bf9\u8c61\u7a81\u53d8(Object mutation) \u6765\u6539\u53d8\u503c\uff0c\u4e5f\u53ef\u4ee5\u901a\u8fc7 Name change \u6765\u6539\u53d8(\u5e94\u8be5\u662f\u76f4\u63a5\u6539\u53d8\u6307\u5411\u7684\u5bf9\u8c61)\uff0c\u800c\u4e0d\u53ef\u53d8\u5bf9\u8c61(\u5982\u5143\u7ec4\u7b49)\u53ea\u80fd\u901a\u8fc7 Name change \u6765\u6539\u53d8</li> <li>\u5982\u679c\u4e0d\u53ef\u53d8\u5bf9\u8c61\u542b\u6709\u53ef\u53d8\u5bf9\u8c61\u7684\u5143\u7d20\uff0c\u8fd9\u4e2a\u53ef\u53d8\u5bf9\u8c61\u53ef\u4ee5\u6539\u53d8(\u4e2a\u4eba\u8ba4\u4e3a\uff0c\u53ef\u4ee5\u7c7b\u6bd4\u6210c\u4e2d\u7684\u6307\u9488\u5e38\u91cf\uff0c\u6307\u9488\u672c\u8eab\u4e0d\u6539\u53d8\uff0c\u4f46\u6307\u5411\u7684\u503c\u80fd\u6539\u53d8)</li> </ul>"},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part1/#10","title":"10","text":"<p>\u6052\u7b49\u8fd0\u7b97\u7b26(Identity Operators) <code>is</code></p> <p>\u7528\u4e8e\u5224\u65ad\u4e24\u4e2a\u53d8\u91cf\u662f\u5426\u6307\u5411\u540c\u4e00\u4e2a\u5bf9\u8c61</p> <p></p> <p></p>"},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part1/#11","title":"11","text":"<p>\u540c\u4e00\u4e2a\u51fd\u6570\u7684\u9ed8\u8ba4\u53c2\u6570\u662f\u540c\u4e00\u4e2a\u5bf9\u8c61\uff0c\u5373\u4f7f\u591a\u6b21\u8c03\u7528\u51fd\u6570\uff0c\u4f7f\u7528\u9ed8\u8ba4\u53c2\u6570\u65f6\u4f7f\u7528\u7684\u90fd\u662f\u540c\u4e00\u4e2a\u5bf9\u8c61</p> <p>\u56e0\u6b64\u5982\u679c\u662f\u53ef\u53d8\u5bf9\u8c61\u7c7b\u578b\uff0c\u8981\u6ce8\u610f==\u4fee\u6539\u8fd9\u4e2a\u5bf9\u8c61\u4f1a\u5bfc\u81f4\u4e4b\u540e\u8c03\u7528\u51fd\u6570\u65f6(\u5982\u679c\u4f7f\u7528\u7684\u8bdd)\u9ed8\u8ba4\u53c2\u6570\u4f1a\u4e0e\u4e4b\u524d\u4e0d\u4e00\u6837</p>"},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part1/#12","title":"12","text":"<p>list\u7684\u5404\u79cd\u8fd0\u7b97</p> <ul> <li> <p><code>.append()</code> \u65b9\u6cd5\uff0c\u5c06\u4f20\u5165\u7684\u53c2\u6570\u6dfb\u52a0\u9053\u5217\u8868\u5c3e\u90e8(\u5982\u679c\u4f20\u5165\u7684\u662f\u4e00\u4e2a\u5217\u8868\uff0c\u5c31\u5c06\u8be5\u5217\u8868(\u540c\u4e00\u5bf9\u8c61)\u5b58\u5165\u5c3e\u90e8)</p> <p></p> </li> <li> <p><code>.extend()</code> \u65b9\u6cd5\uff0c\u5e94\u8be5\u662f\u4f20\u5165\u4e00\u4e2a\u5217\u8868(\u5143\u7ec4\u6216\u8bb8\u4e5f\u53ef\u4ee5\uff1f(\u8bd5\u4e86\uff0c\u53ef\u4ee5))\uff0c\u5c06\u5217\u8868\u4e2d\u7684\u5143\u7d20\u4f9d\u6b21\u6dfb\u52a0\u5230\u539f\u5217\u8868\u5c3e\u90e8</p> <p></p> </li> <li> <p>\u52a0\u6cd5 \u548c \u5207\u7247 \uff0c\u4e24\u8005\u90fd\u4f1a\u521b\u5efa\u51fa\u4e00\u4e2a\u65b0\u7684\u5217\u8868\uff0c\u56e0\u6b64\u4e0b\u56fe\u4e2d <code>a[1] = 9</code> \u5e76\u6ca1\u6709\u4f7f \u5217\u8868s \u7684\u5143\u7d20\u6539\u53d8\uff0c\u4f46\u7531\u4e8e \u5217\u8868a \u7684\u7b2c\u4e09\u4e2a\u5143\u7d20\u662f\u5217\u8868\uff0c\u540c\u65f6\u4e5f\u662f \u5217\u8868b \u7684\u7b2c\u4e8c\u4e2a\u5143\u7d20\uff0c\u56e0\u6b64\u901a\u8fc7 \u5217\u8868b \u4fee\u6539\u65f6\uff0c\u4e5f\u4f1a\u8ba9\u539f\u672c\u7684 \u5217\u8868t \u6539\u53d8</p> <p></p> </li> <li> <p><code>list()</code> \u5217\u8868\u7684\u6784\u9020\u65b9\u6cd5\uff0c\u53ef\u4ee5\u4f20\u5165\u4e00\u4e2a\u5217\u8868(\u5143\u7ec4\u548c <code>range()</code> \u4e5f\u53ef\u4ee5)\uff0c(\u5982\u679c\u4f20\u5165\u7684\u662f\u4e00\u4e2a\u5217\u8868)\u4f1a\u6784\u5efa\u51fa\u4e00\u4e2a\u4e0e\u539f\u5217\u8868\u4e00\u6837\u7684\u65b0\u5217\u8868</p> <p></p> </li> <li> <p>\u5217\u8868\u5207\u7247\u7684\u8d4b\u503c\uff0c\u53ef\u4ee5\u5bf9\u5217\u8868\u8fdb\u884c \u6dfb\u52a0(\u6dfb\u7684\u6bd4\u5220\u7684\u591a) / \u66ff\u6362(\u6dfb\u7684\u5220\u7684\u4e00\u6837\u591a) / \u5220\u51cf(\u6dfb\u7684\u6bd4\u5220\u7684\u5c11) \u64cd\u4f5c\uff0c\u5982\u4e0b\u56fe\u4e2d</p> <ul> <li><code>s[0:0] = t</code> \u5c06t\u4e2d\u5143\u7d20\u52a0\u5230(\u585e\u5165)s\u7684\u5934\u90e8(0\u53f7\u4f4d\u7f6e)</li> <li><code>s[3:] = t</code> \u5c064\u53f7\u5143\u7d20\u5220\u53bb\uff0c\u5e76\u5728\u8be5\u4f4d\u7f6e \u585e\u5165 t\u4e2d\u7684\u5143\u7d20</li> </ul> <p></p> </li> <li> <ul> <li><code>.pop()</code> \u65b9\u6cd5\uff0c\u4ece\u5217\u8868\u4e2d\u62ff\u51fa\u5e76\u8fd4\u56de\u6700\u540e\u4e00\u4e2a\u5143\u7d20</li> <li><code>.remove()</code> \u65b9\u6cd5\uff0c\u4f20\u5165\u4e00\u4e2a\u53c2\u6570\uff0c\u5728\u5217\u8868\u4e2d\u5220\u53bb\u7b2c\u4e00\u4e2a\u8ddf\u4f20\u5165\u53c2\u6570\u76f8\u540c\u7684\u5143\u7d20</li> <li>\u7528\u5207\u7247\u8d4b\u503c\u7684\u65b9\u6cd5\u53bb\u5220\u9664\u5217\u8868\u4e2d\u7684\u5143\u7d20</li> </ul> <p></p> </li> </ul>"},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part1/#13","title":"13","text":"<pre><code>t = [1, 2, 3]\nt[1:3] = [t]\nt.extend(t)\n</code></pre> <p>\u6700\u7ec8\u5f97\u5230 <code>t = [1, [...], 1, [...]]</code> \u7684\u7ed3\u679c\u7684\u539f\u56e0\uff0c\u4e2a\u4eba\u7684\u7406\u89e3\uff1a\u7531\u4e0a\u56fe\u4e2d\u7684\u73af\u5883\u56fe\u53ef\u4ee5\u770b\u5230\uff0c\u5217\u8868\u4e2d\u4f1a\u6709 \u65e0\u7a77\u5faa\u73af\u7684\u6307\u5411 \u4f1a\u4e00\u76f4\u540e\u6307\u5411\u524d\u518d\u4ece\u524d\u8d70\u5230\u540e\uff0c\u56e0\u6b64\u4f1a\u5f97\u5230 <code>...</code> \u7684\u4e1c\u897f</p>"},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part1/#lecture-15-qa","title":"Lecture 15 Q&amp;A","text":""},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part1/#1_27","title":"1","text":"<p>\u5207\u7247\u8d4b\u503c\u9700\u8981\u662f\u4e00\u4e2a\u5217\u8868(\u53ef\u80fd\u5143\u7ec4\u6216\u8005\u5b57\u7b26\u4e32 \u6216\u5176\u4ed6\u5bb9\u5668(container)\u4e5f\u884c\uff1f)\uff0c\u5982\u4e0a\u56fe\u4e2d <code>s[0:0] = 5</code> \u4f1a\u62a5\u9519\uff0c\u5e94\u8be5\u5199\u6210 <code>s[0:0] = [5]</code></p>"},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part1/#2_16","title":"2","text":"<p>(\u53ef\u4ee5\u4f5c\u4e3a\u4e0a\u4e00\u70b9\u7684\u8865\u5145)</p> <p>Quote</p> <p>good question. so why isn't it that t becomes an element of s, and the reason is that's just how slice assignment works. it's that it takes a container full of elements and it doesn't put that whole container in s, instead of puts the elements of that container in s.</p> <p>\u597d\u95ee\u9898\u3002\u4e3a\u4ec0\u4e48t\u4e0d\u6210\u4e3as\u7684\u4e00\u4e2a\u5143\u7d20\uff0c\u539f\u56e0\u662f\u5207\u7247\u8d4b\u503c\u5c31\u662f\u8fd9\u6837\u5de5\u4f5c\u7684\u3002\u5b83\u53d6\u4e00\u4e2a\u88c5\u6ee1\u5143\u7d20\u7684\u5bb9\u5668\uff0c\u4e0d\u662f\u5c06\u6574\u4e2a\u5bb9\u5668\u653e\u5728s\u4e2d\uff0c\u800c\u662f\u5c06\u8be5\u5bb9\u5668\u7684\u5143\u7d20\u653e\u5728s\u3002</p>"},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part1/#3_13","title":"3","text":"<p>\u4e0b\u6807\u9009\u62e9(selector)\u4e0d\u4f1a\u6539\u53d8\u5217\u8868\u7684\u957f\u5ea6</p> <p>\u800c\u5207\u7247\u8d4b\u503c\u4f1a\u6539\u53d8\u5217\u8868\u7684\u957f\u5ea6</p> <p>Quote</p> <p>...there's only t and this used to be three elements long, it's still three elements long, element assignment never changes the length of the list, it just changes what's in it. slice assignment is different, it changes the length of the list, it replaces an existing slice with some new elements.</p> <p>...\u53ea\u6709t\uff0c\u5b83\u8fc7\u53bb\u6709\u4e09\u4e2a\u5143\u7d20\u957f\uff0c\u73b0\u5728\u4ecd\u7136\u6709\u4e09\u4e2a\u5143\u4ef6\u957f\uff0c\u5143\u7d20\u8d4b\u503c\u6c38\u8fdc\u4e0d\u4f1a\u6539\u53d8\u5217\u8868\u7684\u957f\u5ea6\uff0c\u5b83\u53ea\u662f\u6539\u53d8\u5176\u4e2d\u7684\u5185\u5bb9\u3002\u5207\u7247\u8d4b\u503c\u4e0d\u540c\uff0c\u5b83\u6539\u53d8\u4e86\u5217\u8868\u7684\u957f\u5ea6\u3002\u5b83\u7528\u4e00\u4e9b\u65b0\u5143\u7d20\u66ff\u6362\u4e86\u73b0\u6709\u7684\u5207\u7247\u3002</p>"},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part1/#4_10","title":"4","text":"<p>Hany\u5173\u4e8e\u5207\u7247\u7684\u6bd4\u55bb</p> <p>Quote</p> <p>...what you're going to do, is think about it this way, so on the left hand side with the slicing you say, grab those elements, throw them out, and then take whatever's on the right hand side, and shove them into the position, so they can be longer, shorter, it doesn't matter.</p> <p>...\u4f60\u8981\u505a\u7684\u662f\u8fd9\u6837\u60f3\uff0c\u6240\u4ee5\u5728\u5207\u7247\u7684\u5de6\u624b\u8fb9\uff0c\u6293\u4f4f\u8fd9\u4e9b\u5143\u7d20\uff0c\u628a\u5b83\u4eec\u6254\u51fa\u53bb\uff0c\u7136\u540e\u62ff\u8d70\u53f3\u624b\u8fb9\u7684\u4efb\u4f55\u4e1c\u897f\uff0c\u628a\u5b83\u4eec\u63a8\u5230\u8fd9\u4e2a\u4f4d\u7f6e\uff0c\u8fd9\u6837\u5b83\u4eec\u5c31\u53ef\u4ee5\u66f4\u957f\u3001\u66f4\u77ed\uff0c\u8fd9\u65e0\u5173\u7d27\u8981\u3002</p>"},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part1/#5_6","title":"5","text":"<p>\u5173\u4e8e\u5143\u7ec4tuple\u5b58\u5728\u548c\u88ab\u4f7f\u7528\u7684\u539f\u56e0</p> <p>Quote</p> <p>John:</p> <p>...but the more common reason is that, people are designing their programs so that they don't have to think about mutation back, when you could just describe every function by its domain range and behavior, life was easier. i'm not saying it was easy, there were plenty of like tricky recursion problems and stuff like that, but at least you knew that, if you called a function, the only thing you really have to worry about is what does it return, not what does it change. and if you use tuples everywhere, since they can't be changed, you kind of don't have to think about what does it change, you just have to think about what it returns, whereas if you're using lists everywhere, if you're not careful, the consequence of calling a function will be not only that it changes something, or that it returns something but also that it changes something, and that's like twice as many things to keep track of when you're writing a big program, and trying to understand how all the parts work, so that's like the main reason to have some immutable version of a sequence, is just to like make sure you write programs in such a way, that nothing can change anything else, except by passing in arguments and returning them.</p> <p> </p> <p>Hany:</p> <p>it's it's called side effects, the thing that's scary when you call a function is there some side effect, that it that goes beyond just what was passed and what was returned it modified a list, and i, how did i, how do i know that, that how do i control that, and so the tuples are nice...so the tools are nice, because it's essentially like you're locking your data, right, it's giving you data security yeah.</p> <p>John:</p> <p>...\u4f46\u66f4\u5e38\u89c1\u7684\u539f\u56e0\u662f\uff0c\u4eba\u4eec\u6b63\u5728\u8bbe\u8ba1\u4ed6\u4eec\u7684\u7a0b\u5e8f\uff0c\u8fd9\u6837\u4ed6\u4eec\u5c31\u4e0d\u5fc5\u518d\u8003\u8651\u7a81\u53d8\u4e86\uff0c\u5f53\u4f60\u53ef\u4ee5\u901a\u8fc7\u6bcf\u4e2a\u51fd\u6570\u7684\u57df\u8303\u56f4\u548c\u884c\u4e3a\u6765\u63cf\u8ff0\u5b83\u65f6\uff0c\u751f\u6d3b\u5c31\u66f4\u5bb9\u6613\u4e86\u3002\u6211\u5e76\u4e0d\u662f\u8bf4\u8fd9\u5f88\u5bb9\u6613\uff0c\u6709\u5f88\u591a\u7c7b\u4f3c\u68d8\u624b\u7684\u9012\u5f52\u95ee\u9898\u548c\u7c7b\u4f3c\u7684\u4e1c\u897f\uff0c\u4f46\u81f3\u5c11\u4f60\u77e5\u9053\uff0c\u5982\u679c\u4f60\u8c03\u7528\u4e00\u4e2a\u51fd\u6570\uff0c\u4f60\u771f\u6b63\u9700\u8981\u62c5\u5fc3\u7684\u662f\u5b83\u4f1a\u8fd4\u56de\u4ec0\u4e48\uff0c\u800c\u4e0d\u662f\u6539\u53d8\u4ec0\u4e48\u3002\u5982\u679c\u4f60\u5728\u4efb\u4f55\u5730\u65b9\u90fd\u4f7f\u7528\u5143\u7ec4\uff0c\u56e0\u4e3a\u5b83\u4eec\u662f\u4e0d\u53ef\u66f4\u6539\u7684\uff0c\u4f60\u4e0d\u5fc5\u8003\u8651\u5b83\u4f1a\u6539\u53d8\u4ec0\u4e48\uff0c\u4f60\u53ea\u9700\u8981\u8003\u8651\u5b83\u4f1a\u8fd4\u56de\u4ec0\u4e48\uff0c\u800c\u5982\u679c\u4f60\u5728\u6240\u6709\u5730\u65b9\u90fd\u4f7f\u7528\u5217\u8868\uff0c\u5982\u679c\u4f60\u4e0d\u5c0f\u5fc3\uff0c\u8c03\u7528\u4e00\u4e2a\u51fd\u6570\u7684\u540e\u679c\u4e0d\u4ec5\u662f\u5b83\u4f1a\u6539\u53d8\u4e00\u4e9b\u4e1c\u897f\uff0c\u6216\u8005\u5b83\u4f1a\u8fd4\u56de\u4e00\u4e9b\u4e1c\u897f\uff0c\u5f53\u4f60\u5728\u5199\u4e00\u4e2a\u5927\u7a0b\u5e8f\uff0c\u5e76\u8bd5\u56fe\u4e86\u89e3\u6240\u6709\u90e8\u5206\u662f\u5982\u4f55\u5de5\u4f5c\u7684\u65f6\u5019\uff0c\u8fd9\u5c31\u50cf\u662f\u9700\u8981\u8ddf\u8e2a\u7684\u4e8b\u60c5\u7684\u4e24\u500d\uff0c\u6240\u4ee5\u8fd9\u5c31\u50cf\u662f\u62e5\u6709\u4e00\u4e2a\u4e0d\u53ef\u53d8\u7248\u672c\u7684\u5e8f\u5217\u7684\u4e3b\u8981\u539f\u56e0\uff0c\u5c31\u662f\u8981\u786e\u4fdd\u4f60\u4ee5\u8fd9\u6837\u7684\u65b9\u5f0f\u5199\u7a0b\u5e8f\uff0c\u9664\u4e86\u4f20\u9012\u53c2\u6570\u5e76\u8fd4\u56de\u5b83\u4eec\u4e4b\u5916\uff0c\u6ca1\u6709\u4ec0\u4e48\u80fd\u6539\u53d8\u5176\u4ed6\u4efb\u4f55\u4e8b\u60c5\u3002</p> <p> </p> <p>Hany:</p> <p>\u5b83\u88ab\u79f0\u4e3a\u526f\u4f5c\u7528\uff0c\u5f53\u4f60\u8c03\u7528\u4e00\u4e2a\u51fd\u6570\u65f6\uff0c\u53ef\u6015\u7684\u662f\u6709\u4e00\u4e9b\u526f\u4f5c\u7528\uff0c\u5b83\u8d85\u51fa\u4e86\u4f20\u9012\u548c\u8fd4\u56de\u7684\u5185\u5bb9\uff0c\u5b83\u4fee\u6539\u4e86\u4e00\u4e2a\u5217\u8868\uff0c\u6211\uff0c\u6211\u662f\u600e\u4e48\u77e5\u9053\u7684\uff0c\u6211\u662f\u5982\u4f55\u63a7\u5236\u7684\uff0c\u6240\u4ee5\u5143\u7ec4\u5f88\u597d...\u6240\u4ee5\u8fd9\u4e9b\u5de5\u5177\u5f88\u597d\uff0c\u56e0\u4e3a\u5b83\u672c\u8d28\u4e0a\u5c31\u50cf\u4f60\u5728\u9501\u5b9a\u4f60\u7684\u6570\u636e\uff0c\u5bf9\u5427\uff0c\u5b83\u7ed9\u4e86\u4f60\u6570\u636e\u5b89\u5168\u6027\u3002</p>"},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part1/#6_5","title":"6","text":"<p>Hany\u548cJohn\u5173\u4e8e \u7c7b(Class) \u548c \u5bf9\u8c61(Object) \u7684\u533a\u522b\u7684\u89e3\u91ca</p> <p>(\u5c06 \u7c7b \u6bd4\u4f5c \u84dd\u56fe \uff0c\u5c06 \u5bf9\u8c61 \u6bd4\u4f5c \u4f9d\u636e\u84dd\u56fe\u4fee\u5efa\u597d\u7684\u5177\u4f53\u7684\u623f\u5b50)</p> <p>Quote</p> <p>Hany:</p> <p>so the question is what is the difference between a class and an object. the class is, so here's how i think about it, think about a blueprint for a house, is the class, and the house is the thing you build from the blueprint. okay so i can have a class date, um that is the sort of the definition of the data i'm storing, and the functionality of it, and then i can instantiate, i can create as many of those objects as i want, so they're essentially realizations of the thing that you've created, so the class is, just it's sort of like a definition, nothing exists, and then when you create an object, well now i can sort of do things with it. so there's a class of type list, and then i can define lists, i can define one list, two lists, 50 lists whatever i want, yeah.</p> <p> </p> <p>John:</p> <p>yeah, and that analogy is nice because you can live in a house, but you can't live in a blueprint, like if you just have the class, you can't really do anything with it, until you construct one of the things that it describes, build the house and then you can go live.</p> <p> </p> <p>Hany:</p> <p>and you can go live in it, right. and it's sort of like a function definition, right, you define a function, but doesn't do anything, it's just a definition, it just hangs out in the global frame somewhere, but then when you call it, ah now we're actually doing something.</p> <p>Hany:</p> <p>\u6240\u4ee5\u95ee\u9898\u662f\u7c7b\u548c\u5bf9\u8c61\u4e4b\u95f4\u7684\u533a\u522b\u662f\u4ec0\u4e48\u3002\u8bfe\u5802\u662f\u8fd9\u6837\u7684\uff0c\u6240\u4ee5\u6211\u662f\u8fd9\u6837\u60f3\u7684 \u60f3\u60f3\u623f\u5b50\u7684\u84dd\u56fe\uff0c\u5b83\u5c31\u662f\u9636\u7ea7\uff0c\u623f\u5b50\u5c31\u662f\u4f60\u6839\u636e\u84dd\u56fe\u5efa\u9020\u7684\u4e1c\u897f\u3002\u597d\u7684\uff0c\u6211\u53ef\u4ee5\u6709\u4e00\u4e2a\u7c7b\u7684\u65e5\u671f\uff0c\u55ef\uff0c\u8fd9\u662f\u6211\u5b58\u50a8\u7684\u6570\u636e\u7684\u5b9a\u4e49\uff0c\u4ee5\u53ca\u5b83\u7684\u529f\u80fd\uff0c\u7136\u540e\u6211\u53ef\u4ee5\u5b9e\u4f8b\u5316\uff0c\u6211\u53ef\u4ee5\u521b\u5efa\u6211\u60f3\u8981\u7684\u4efb\u610f\u591a\u7684\u5bf9\u8c61\uff0c\u6240\u4ee5\u5b83\u4eec\u672c\u8d28\u4e0a\u662f\u4f60\u521b\u5efa\u7684\u4e1c\u897f\u7684\u5b9e\u73b0\uff0c\u6240\u4ee5\u7c7b\u662f\uff0c\u5b83\u6709\u70b9\u50cf\u4e00\u4e2a\u5b9a\u4e49\uff0c\u4ec0\u4e48\u90fd\u4e0d\u5b58\u5728\uff0c\u7136\u540e\u5f53\u4f60\u521b\u5efa\u4e00\u4e2a\u5bf9\u8c61\u65f6\uff0c\u73b0\u5728\u6211\u53ef\u4ee5\u7528\u5b83\u505a\u4e00\u4e9b\u4e8b\u60c5\u4e86\uff0c\u6240\u4ee5\u6709\u4e00\u7c7b\u7c7b\u578b\u5217\u8868\uff0c\u7136\u540e\u6211\u53ef\u4ee5\u5b9a\u4e49\u5217\u8868\uff0c\u6211\u53ef\u4ee5\u5b9a\u4e49\u4e00\u4e2a\u5217\u8868\uff0c\u4e24\u4e2a\u5217\u8868\uff0c50\u4e2a\u5217\u8868\uff0c\u6211\u60f3\u8981\u7684\uff0c\u662f\u7684\u3002</p> <p> </p> <p>John:</p> <p>\u662f\u7684\uff0c\u8fd9\u4e2a\u6bd4\u55bb\u5f88\u597d\uff0c\u56e0\u4e3a\u4f60\u53ef\u4ee5\u4f4f\u5728\u623f\u5b50\u91cc\uff0c\u4f46\u4f60\u4e0d\u80fd\u4f4f\u5728\u84dd\u56fe\u91cc\uff0c\u5c31\u50cf\u4f60\u53ea\u6709\u8bfe\uff0c\u4f60\u771f\u7684\u4e0d\u80fd\u7528\u5b83\u505a\u4efb\u4f55\u4e8b\u60c5\uff0c\u76f4\u5230\u4f60\u5efa\u9020\u4e86\u5b83\u63cf\u8ff0\u7684\u4e1c\u897f\u4e4b\u4e00\uff0c\u5efa\u9020\u4e86\u623f\u5b50\uff0c\u7136\u540e\u4f60\u5c31\u53ef\u4ee5\u751f\u6d3b\u4e86\u3002</p> <p> </p> <p>Hany:</p> <p>\u4f60\u53ef\u4ee5\u4f4f\u5728\u91cc\u9762\uff0c\u5bf9\u5427\u3002\u8fd9\u6709\u70b9\u50cf\u51fd\u6570\u5b9a\u4e49\uff0c\u5bf9\u5427\uff0c\u4f60\u5b9a\u4e49\u4e86\u4e00\u4e2a\u51fd\u6570\uff0c\u4f46\u4ec0\u4e48\u90fd\u4e0d\u505a\uff0c\u5b83\u53ea\u662f\u4e00\u4e2a\u5b9a\u4e49\uff0c\u5b83\u53ea\u662f\u6302\u5728\u5168\u5c40\u6846\u67b6\u7684\u67d0\u4e2a\u5730\u65b9\uff0c\u4f46\u5f53\u4f60\u8c03\u7528\u5b83\u65f6\uff0c\u554a\uff0c\u73b0\u5728\u6211\u4eec\u5b9e\u9645\u4e0a\u5728\u505a\u4e00\u4e9b\u4e8b\u60c5\u3002</p>"},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part1/#hw-03","title":"HW 03","text":""},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part1/#1_28","title":"1","text":"<p>\u51cf\u5c11\u9012\u5f52\u4e2d\u7684\u5197\u4f59\u90e8\u5206</p> <p>Quote</p> <p>Arms-length recursion (sidenote)</p> <p>Before we get started, a quick comment on recursion with tree data structures. Consider the following function.</p> <pre><code>def min_depth(t):\n    \"\"\"A simple function to return the distance between t's root and its closest leaf\"\"\"\n    if is_leaf(t):\n        return 0 # Base case---the distance between a node and itself is zero\n    h = float('inf') # Python's version of infinity\n    for b in branches(t):\n        if is_leaf(b): return 1 # !!!\n        h = min(h, 1 + min_depth(b))\n    return h\n</code></pre> <p>The line flagged with <code>!!!</code> is an \"arms-length\" recursion violation. Although our code works correctly when it is present, by performing this check we are doing work that should be done by the next level of recursion\u2014we already have an if-statement that handles any inputs to <code>min_depth</code> that are leaves, so we should not include this line to eliminate redundancy in our code.</p> <pre><code>def min_depth(t):\n    \"\"\"A simple function to return the distance between t's root and its closest leaf\"\"\"\n    if is_leaf(t):\n        return 0\n    h = float('inf')\n    for b in branches(t):\n        # Still works fine!\n        h = min(h, 1 + min_depth(b))\n    return h\n</code></pre> <p>Arms-length recursion is not only redundant but often complicates our code and obscures the functionality of recursive functions, making writing recursive functions much more difficult. We always want our recursive case to be handling one and only one recursive level.</p> <p>\u81c2\u957f\u9012\u5f52 (\u65c1\u6ce8)</p> <p>\u5728\u6211\u4eec\u5f00\u59cb\u4e4b\u524d\uff0c\u5148\u7b80\u8981\u4ecb\u7ecd\u4e00\u4e0b\u6811\u6570\u636e\u7ed3\u6784\u7684\u9012\u5f52\u3002\u8003\u8651\u4ee5\u4e0b\u51fd\u6570\u3002</p> <pre><code>def min_depth(t):\n    \"\"\"A simple function to return the distance between t's root and its closest leaf\"\"\"\n    if is_leaf(t):\n        return 0 # Base case---the distance between a node and itself is zero\n    h = float('inf') # Python's version of infinity\n    for b in branches(t):\n        if is_leaf(b): return 1 # !!!\n        h = min(h, 1 + min_depth(b))\n    return h\n</code></pre> <p>\u8be5\u884c\u6807\u8bb0\u4e3a <code>!!!</code> \u662f\u4e00\u79cd\u201c\u81c2\u957f\u201d\u9012\u5f52\u51b2\u7a81\u3002\u5c3d\u7ba1\u6211\u4eec\u7684\u4ee3\u7801\u5728\u5b58\u5728\u65f6\u53ef\u4ee5\u6b63\u5e38\u5de5\u4f5c\uff0c\u4f46\u901a\u8fc7\u6267\u884c\u6b64\u68c0\u67e5\uff0c\u6211\u4eec\u6b63\u5728\u505a\u4e0b\u4e00\u7ea7\u9012\u5f52\u5e94\u8be5\u505a\u7684\u5de5\u4f5c\u2014\u2014\u6211\u4eec\u5df2\u7ecf\u6709\u4e86\u4e00\u4e2aif\u8bed\u53e5\uff0c\u5b83\u5904\u7406 <code>min_depth</code> \u7684\u4efb\u4f55\u53f6\u5b50\u8f93\u5165\uff0c\u6240\u4ee5\u6211\u4eec\u4e0d\u5e94\u8be5\u5305\u62ec\u8fd9\u4e00\u884c\u6765\u6d88\u9664\u4ee3\u7801\u4e2d\u7684\u5197\u4f59\u3002</p> <pre><code>def min_depth(t):\n    \"\"\"A simple function to return the distance between t's root and its closest leaf\"\"\"\n    if is_leaf(t):\n        return 0\n    h = float('inf')\n    for b in branches(t):\n        # Still works fine!\n        h = min(h, 1 + min_depth(b))\n    return h\n</code></pre> <p>\u81c2\u957f\u9012\u5f52\u4e0d\u4ec5\u662f\u591a\u4f59\u7684\uff0c\u800c\u4e14\u7ecf\u5e38\u4f7f\u6211\u4eec\u7684\u4ee3\u7801\u590d\u6742\u5316\uff0c\u5e76\u6a21\u7cca\u9012\u5f52\u51fd\u6570\u7684\u529f\u80fd\uff0c\u4f7f\u7f16\u5199\u9012\u5f52\u51fd\u6570\u53d8\u5f97\u66f4\u52a0\u56f0\u96be\u3002\u6211\u4eec\u603b\u662f\u5e0c\u671b\u6211\u4eec\u7684\u9012\u5f52\u60c5\u51b5\u662f\u5904\u7406\u4e00\u4e2a\u5e76\u4e14\u53ea\u6709\u4e00\u4e2a\u9012\u5f52\u7ea7\u522b\u3002</p>"},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part1/#2_17","title":"2","text":"<p>Q2 \u4e2d\u6211\u5c06\u8ba1\u7b97\u529b\u77e9\u7684\u4ee3\u7801\u72ec\u7acb\u6210\u4e86\u4e00\u4e2a\u51fd\u6570</p> <pre><code>def balanced(m):\n    ...\n    def torque(s):\n        assert is_arm(s), \"must call torque on a arm\"\n        return length(s) * total_weight(end(s))\n    ...\n</code></pre> code <pre><code>def balanced(m):\n    \"\"\"Return whether m is balanced.\n\n    &gt;&gt;&gt; t, u, v = examples()\n    &gt;&gt;&gt; balanced(t)\n    True\n    &gt;&gt;&gt; balanced(v)\n    True\n    &gt;&gt;&gt; w = mobile(arm(3, t), arm(2, u))\n    &gt;&gt;&gt; balanced(w)\n    False\n    &gt;&gt;&gt; balanced(mobile(arm(1, v), arm(1, w)))\n    False\n    &gt;&gt;&gt; balanced(mobile(arm(1, w), arm(1, v)))\n    False\n    &gt;&gt;&gt; from construct_check import check\n    &gt;&gt;&gt; # checking for abstraction barrier violations by banning indexing\n    &gt;&gt;&gt; check(HW_SOURCE_FILE, 'balanced', ['Index'])\n    True\n    \"\"\"\n    \"*** YOUR CODE HERE ***\"\n    def torque(s):\n        assert is_arm(s), \"must call torque on a arm\"\n        return length(s) * total_weight(end(s))\n\n    if is_planet(m):\n        return True\n    else:\n        if torque(left(m)) != torque(right(m)):\n            return False\n        else:\n            return balanced(end(left(m))) and balanced(end(right(m)))\n</code></pre>"},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part1/#3_14","title":"3","text":"<p>Q5\u4e2d\uff0c\u4f7f\u7528\u6784\u9020\u4e00\u4e2ahelper\u51fd\u6570\u6765\u4f20\u9012\u7ed3\u679c\u5217\u8868</p> <pre><code>def preorder(t):\n    ...\n    def preorder_helper(t, res):\n        res += [label(t)]\n        for branch in branches(t):\n            res += preorder_helper(branch, [])\n        return res\n    ...\n</code></pre> code <pre><code>def preorder(t):\n    \"\"\"Return a list of the entries in this tree in the order that they\n    would be visited by a preorder traversal (see problem description).\n\n    &gt;&gt;&gt; numbers = tree(1, [tree(2), tree(3, [tree(4), tree(5)]), tree(6, [tree(7)])])\n    &gt;&gt;&gt; preorder(numbers)\n    [1, 2, 3, 4, 5, 6, 7]\n    &gt;&gt;&gt; preorder(tree(2, [tree(4, [tree(6)])]))\n    [2, 4, 6]\n    \"\"\"\n    \"*** YOUR CODE HERE ***\"\n    def preorder_helper(t, res):\n        res += [label(t)]\n        # if is_leaf(t):\n        #     return res\n        # else:\n        #     for branch in branches(t):\n        #         res += preorder_helper(branch, res)\n        #     return res\n\n        for branch in branches(t):\n            res += preorder_helper(branch, [])\n        return res\n    return preorder_helper(t, [])\n</code></pre>"},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part1/#4_11","title":"4","text":"<p>Q6</p> <p>(\u5c45\u7136\u80fd\u53ea\u7528\u4e00\u884c)</p> <pre><code>def has_path(t, word):\n    assert len(word) &gt; 0, 'no path for empty word.'\n    \"*** YOUR CODE HERE ***\"\n    return word[0] == label(t) and True if len(word) == 1 else True in [has_path(b, word[1:]) for b in branches(t)]\n</code></pre>"},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part1/#5_7","title":"5","text":"<p>Q8</p> <p>\u9898\u76ee\u662f\u9700\u8981\u6c42x\u548cy\u7684\u5dee\u503c\u7684\u8303\u56f4</p> <p>\u65b9\u6cd5\u5c31\u662f\u5c06y\u53d6\u8d1f\u6570\uff0c\u4e0a/\u4e0b\u754c\u7684\u8d1f\u503c\u4f5c\u4e3a\u65b0\u4e0b/\u4e0a\u754c\uff0c\u7136\u540e\u4f7f\u7528\u4e4b\u524d\u7684\u52a0\u6cd5\u51fd\u6570</p> <p>(\u7531\u4e8e\u6ca1\u7406\u89e3\u9898\u76ee\u610f\u601d\u88ab\u5361\u4e86\u5f88\u4e45...)</p> <pre><code>def sub_interval(x, y):\n    \"\"\"Return the interval that contains the difference between any value in x\n    and any value in y.\"\"\"\n    \"*** YOUR CODE HERE ***\"\n    return add_interval(x, interval(-upper_bound(y), -lower_bound(y)))\n</code></pre>"},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part1/#homework-3-hints","title":"Homework 3 Hints","text":""},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part1/#1_29","title":"1","text":"<p>\u52a9\u6559\u5728\u63d0\u793aQ5\u65f6\uff0c\u4e5f\u8bf4\u5230\u4e86\uff0c\u8981\u5047\u8bbe/\u5047\u60f3\u9012\u5f52\u80fd\u8fd4\u56de\u6b63\u786e\u7684\u7ed3\u679c</p> <p>Quote</p> <p>so when we look at this problem. we see that the preordering of any tree always starts at the root, so it makes sense to make this our starting point, we want to add the current label to our pre ordering. so we want to maintain a list of the pre order, and we want to add our current label to the first element in our pre ordering. after we do that, we want to go through all of our children, so remember that we always go down the left most child, all the way to the right most child, in order. so we do pre order of this child, and then we do pre order of this left child, and then we do pre order the right child. so it makes sense to recurs down each child from left most to right most. and think about what you want to do with the recursive result, remember that by the cursive leap of faith, we, remember that the pre ordering of any child, is assumed to return the correct value. so think about what you expect the pre ordering of any child to be, and think about what you want to do with our result, and just a hint, that the call of pre order on any child is going to return a list, because pre ordering returns a list, based on the numbers there. so think about what you want to do the recursive result, and then maybe appending them or extending them, you want to return the pre ordering. so first you add the current label, then you add the results from each pre order on each child, and then we return the pre ordering of all of them. after you do all of this think about your base case, is there a base case you need to handle, maybe when the tree is a leaf, or maybe something similar to that. and I think that's enough for this problem good luck.</p> <p>\u5728\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u65f6\uff0c\u6211\u4eec\u53ef\u4ee5\u770b\u5230\uff0c\u4efb\u4f55\u6811\u7684\u524d\u5e8f\u904d\u5386\u59cb\u7ec8\u4ece\u6839\u8282\u70b9\u5f00\u59cb\uff0c\u56e0\u6b64\u5c06\u6839\u8282\u70b9\u4f5c\u4e3a\u6211\u4eec\u7684\u8d77\u59cb\u70b9\u662f\u6709\u610f\u4e49\u7684\u3002\u6211\u4eec\u5e0c\u671b\u5c06\u5f53\u524d\u8282\u70b9\u7684\u6807\u7b7e\u6dfb\u52a0\u5230\u6211\u4eec\u7684\u524d\u5e8f\u904d\u5386\u5217\u8868\u4e2d\uff0c\u6240\u4ee5\u6211\u4eec\u9700\u8981\u7ef4\u62a4\u4e00\u4e2a\u524d\u5e8f\u904d\u5386\u7684\u5217\u8868\uff0c\u5e76\u5c06\u5f53\u524d\u8282\u70b9\u7684\u6807\u7b7e\u6dfb\u52a0\u5230\u524d\u5e8f\u904d\u5386\u5217\u8868\u7684\u7b2c\u4e00\u4e2a\u4f4d\u7f6e\u3002\u5728\u8fd9\u4e4b\u540e\uff0c\u6211\u4eec\u9700\u8981\u904d\u5386\u6240\u6709\u7684\u5b50\u8282\u70b9\u3002\u8bf7\u8bb0\u4f4f\uff0c\u6211\u4eec\u603b\u662f\u4ece\u6700\u5de6\u8fb9\u7684\u5b50\u8282\u70b9\u5f00\u59cb\uff0c\u4e00\u76f4\u904d\u5386\u5230\u6700\u53f3\u8fb9\u7684\u5b50\u8282\u70b9\uff0c\u6309\u987a\u5e8f\u8fdb\u884c\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u9996\u5148\u5bf9\u6700\u5de6\u8fb9\u7684\u5b50\u8282\u70b9\u8fdb\u884c\u524d\u5e8f\u904d\u5386\uff0c\u7136\u540e\u5bf9\u5de6\u5b50\u8282\u70b9\u8fdb\u884c\u524d\u5e8f\u904d\u5386\uff0c\u63a5\u7740\u5bf9\u53f3\u5b50\u8282\u70b9\u8fdb\u884c\u524d\u5e8f\u904d\u5386\u3002\u8fd9\u6837\uff0c\u4ece\u6700\u5de6\u8fb9\u5230\u6700\u53f3\u8fb9\u7684\u5b50\u8282\u70b9\u9012\u5f52\u8c03\u7528\u662f\u6709\u610f\u4e49\u7684\u3002\u63a5\u4e0b\u6765\uff0c\u8003\u8651\u5982\u4f55\u5904\u7406\u9012\u5f52\u7ed3\u679c\u3002\u8bf7\u8bb0\u4f4f\uff0c\u6309\u7167\u9012\u5f52\u7684\u201c\u8df3\u8dc3\u4fe1\u4ef0\u201d\uff0c\u6211\u4eec\u5047\u5b9a\u4efb\u4f55\u5b50\u8282\u70b9\u7684\u524d\u5e8f\u904d\u5386\u90fd\u8fd4\u56de\u4e86\u6b63\u786e\u7684\u503c\u3002\u56e0\u6b64\uff0c\u9700\u8981\u601d\u8003\u5bf9\u9012\u5f52\u7ed3\u679c\u8981\u505a\u4ec0\u4e48\uff0c\u8bb0\u4f4f\u8c03\u7528\u5b50\u8282\u70b9\u7684\u524d\u5e8f\u904d\u5386\u4f1a\u8fd4\u56de\u4e00\u4e2a\u5217\u8868\uff0c\u6839\u636e\u8fd9\u4e00\u70b9\u601d\u8003\u5982\u4f55\u5904\u7406\u9012\u5f52\u7ed3\u679c\u3002\u4e00\u79cd\u53ef\u80fd\u7684\u65b9\u5f0f\u662f\u5c06\u5b83\u4eec\u6dfb\u52a0\u6216\u6269\u5c55\u5230\u5f53\u524d\u524d\u5e8f\u904d\u5386\u5217\u8868\u4e2d\u3002\u6700\u7ec8\uff0c\u6211\u4eec\u9700\u8981\u8fd4\u56de\u524d\u5e8f\u904d\u5386\u7684\u7ed3\u679c\u3002\u5177\u4f53\u6765\u8bf4\uff0c\u64cd\u4f5c\u987a\u5e8f\u662f\uff1a\u9996\u5148\u6dfb\u52a0\u5f53\u524d\u6807\u7b7e\uff0c\u7136\u540e\u6dfb\u52a0\u6bcf\u4e2a\u5b50\u8282\u70b9\u7684\u524d\u5e8f\u904d\u5386\u7ed3\u679c\uff0c\u6700\u540e\u8fd4\u56de\u6240\u6709\u5b50\u8282\u70b9\u7684\u524d\u5e8f\u904d\u5386\u7ed3\u679c\u3002\u5728\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u65f6\uff0c\u8fd8\u9700\u8981\u8003\u8651\u57fa\u672c\u60c5\u51b5\u3002\u662f\u5426\u6709\u9700\u8981\u5904\u7406\u7684\u57fa\u672c\u60c5\u51b5\uff0c\u4f8b\u5982\u5f53\u6811\u662f\u53f6\u5b50\u8282\u70b9\u65f6\uff0c\u6216\u8005\u7c7b\u4f3c\u60c5\u51b5\u3002\u5728\u8003\u8651\u5b8c\u6240\u6709\u8fd9\u4e9b\u65b9\u9762\u540e\uff0c\u5c31\u53ef\u4ee5\u7740\u624b\u89e3\u51b3\u95ee\u9898\u4e86\u3002\u795d\u4f60\u597d\u8fd0\uff01</p>"},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part1/#lecture-16-mutable-functions","title":"Lecture 16 Mutable Functions","text":""},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part1/#1_30","title":"1","text":"<p>\u51fd\u6570\u4e2d\u7684\u8d4b\u503c\u8bed\u53e5\uff0c\u53ea\u80fd\u5f71\u54cd\u5230\u51fd\u6570\u6240\u5728\u7684frame\uff0c\u4e0d\u80fd\u5f71\u54cd\u5230\u6bcd\u6846\u67b6\u91cc\u7684\u53d8\u91cf</p>"},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part1/#2_18","title":"2","text":"<p><code>nonlocal</code> \u8bed\u53e5</p> <p>\u611f\u89c9\u662f\u80fd\u5728\u4e00\u4e2a\u51fd\u6570\u4e2d\u58f0\u660e\u8981\u4f7f\u7528 \u975e\u5f53\u524d\u6846\u67b6\u5185\u7684\u53d8\u91cf(\u540d)\uff0c\u4ece\u800c\u4e4b\u540e\u5728\u4f7f\u7528\u7684\u65f6\u5019\uff0c\u5c31\u4e0d\u4f1a\u5728\u5f53\u524d\u7684\u6846\u67b6\u5185\u521b\u5efa\u8fd9\u4e2a\u53d8\u91cf\uff0c\u800c\u662f\u5728\u4e0a\u7ea7\u6846\u67b6\u4e2d\u5bfb\u627e</p>"},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part1/#3_15","title":"3","text":"<p>\u5728\u51fd\u6570\u4f53\u4e2d\uff0c\u540d\u79f0\u7684\u6240\u6709\u5b9e\u4f8b\u90fd\u5fc5\u987b\u5f15\u7528\u540c\u4e00\u6846\u67b6</p> <p>\u6240\u4ee5\u4e0d\u80fd\u50cf\u56fe\u91cc\u9762\u4e00\u6837\uff0c\u4e00\u5f00\u59cb\u4f7f\u7528\u4e86\u6bcd\u6846\u67b6\u4e2d\u7684\u503c--\u7ed1\u5b9a\u4e86\u6bcd\u6846\u67b6\u4e2d\u7684\u53d8\u91cf\uff0c\u800c\u540e\u53c8\u5728\u672a\u4f7f\u7528 <code>nonlocal</code> \u8bed\u53e5\u7684\u60c5\u51b5\u4e0b\uff0c\u8fdb\u884c\u8d4b\u503c</p>"},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part1/#4_12","title":"4","text":"<p>\u53e6\u4e00\u79cd\u5b9e\u73b0\u4f7f\u7528\u5e76\u66f4\u6539\u6bcd\u6846\u67b6\u4e2d\u7684\u6570\u636e\u5e76\u4e14\u4e0d\u4f7f\u7528 <code>nonlocal</code> \u8bed\u53e5\u7684\u65b9\u6cd5</p> <p></p> <p>\u5728\u6bcd\u6846\u67b6\u4e2d\u4f7f\u7528\u53ef\u6539\u53d8\u7684\u6570\u636e\u7c7b\u578b\uff0c\u5982\u5217\u8868\u6216\u5b57\u5178\uff0c\u7136\u540e\u5728\u5b50\u51fd\u6570\u4e2d\u5bf9\u5176\u7684\u5143\u7d20\u8fdb\u884c\u66f4\u6539\uff0c\u4ee5\u8fbe\u5230\u9700\u6c42</p>"},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part1/#5_8","title":"5","text":"<p>\u53c2\u8003\u900f\u660e\u5ea6 (Referential Transparency)</p> <p></p> <p>\u8fd9\u4e2a\u6982\u5ff5\u597d\u50cf\u662f\u6307\uff0c\u5982\u679c\u8868\u8fbe\u5f0f\u662f\u53c2\u8003\u900f\u660e(referentially transparent)\u7684\uff0c\u90a3\u4e48\u5728\u76f4\u63a5\u7528\u4e0e\u8fd4\u56de\u503c\u76f8\u540c\u7684\u503c\u66ff\u6362\u8868\u8fbe\u5f0f\u4e2d\u7684\u51fd\u6570\u540e\uff0c\u80fd\u5f97\u5230\u548c\u539f\u6765\u4e00\u6837\u7684\u7ed3\u679c\uff0c\u5373\u4e0d\u6539\u53d8\u7a0b\u5e8f\u7684\u610f\u4e49(not change the meaning of a program)</p> <p>\u800c\u7a81\u53d8(mutation)\u53ef\u80fd\u4f1a\u7834\u574f\u8868\u8fbe\u5f0f\u7684\u53c2\u8003\u900f\u660e\uff0c\u56e0\u4e3a\u7a81\u53d8\u53ef\u4ee5\u6539\u53d8\u73af\u5883(\u4e2d\u7684\u5c5e\u6027/\u503c)\uff0c</p> <p>\u6bd4\u5982</p> <pre><code>def f(x):\n    x = 4\n    def g(y):\n        def h(z):\n            nonlocal x\n            x = x + 1\n            return x + y + z\n        return h\n    return g\na = f(1)\nb = a(2)\ntotal = b(3) + b(4)\n</code></pre> <p>\u8fd0\u884c\u51fa\u6765\uff0c<code>total</code> \u7ed3\u679c\u662f22(10+12)</p> <p>\u4f46\u5982\u679c\u5c06 <code>b(3)</code> \u66ff\u6362\u6210 <code>10</code></p> <pre><code>def f(x):\n    x = 4\n    def g(y):\n        def h(z):\n            nonlocal x\n            x = x + 1\n            return x + y + z\n        return h\n    return g\na = f(1)\nb = a(2)\ntotal = 10 + b(4)\n</code></pre> <p><code>total</code> \u7ed3\u679c\u5c31\u53d8\u6210\u4e8621(10+11)</p> <p>\u8fd9\u662f\u7531\u4e8e\uff0c\u524d\u8005 <code>b(3)</code> \u5728\u8c03\u7528 <code>h</code> \u51fd\u6570\u7684\u65f6\u5019\uff0c\u6539\u52a8\u4e86\u6bcd\u6846\u67b6\u4e2d\u7684 <code>x</code> \u7684\u503c\uff0c\u4f7f\u5f97\u4e24\u5904\u4ee3\u7801\u4e2d <code>b(4)</code> \u5728\u8c03\u7528 <code>h</code> \u51fd\u6570\u65f6\uff0c\u4f7f\u7528\u7684\u503c\u4e0d\u4e00\u6837\uff0c\u56e0\u6b64<code>total</code> \u7ed3\u679c\u5c31\u4e0d\u4e00\u6837</p>"},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part1/#6_6","title":"6","text":"<p>\u8fd9\u8282\u8bfe\u6700\u540e\uff0c\u6559\u6388\u63d0\u5230\u7684\u4e00\u9898</p> <p></p> <p>\u6559\u6388\u63d0\u5230\uff0c\u5728\u5f00\u59cb\u505a\u8fd9\u9898\u65f6\uff0c\u53ef\u4ee5\u5bfb\u627ebase cases\u662f\u4ec0\u4e48\uff0c</p> <p>\u7136\u540e\u4ece\u8f93\u5165\u793a\u4f8b\u4e2d\u53ef\u4ee5\u5f97\u5230\uff0cbase case\u662f\u5f53\u5176\u4e2d\u4e00\u4e2a\u4e3a\u96f6\u7684\u65f6\u5019</p> <p>\u5f00\u59cb\u5199\u4ee3\u7801\u65f6\uff0c\u6211\u662f\u5148\u6ce8\u610f\u5230\u6700\u540e\u7684 <code>return</code> \u7684\u8bed\u53e5\u7684\u5f62\u5f0f\uff0c\u518d\u8054\u60f3\u5230\u6559\u6388\u8bf4\u5230\u7684 tree recursion \uff0c\u6240\u4ee5\u6211\u611f\u89c9\u62ec\u53f7\u5916\u5e94\u8be5\u662f\u4e00\u4e2a <code>min</code> \uff0c\u7136\u540e\u62ec\u53f7\u91cc\u9762\u662f\u6bd4\u8f83\u4e24\u79cd\u9012\u5f52\u8fd4\u56de\u7684\u503c\u54ea\u4e2a\u66f4\u5c0f\uff0c\u6240\u4ee5\u6211\u5c31\u6682\u4e14\u586b\u4e0a\uff1a</p> <pre><code>def combo(a, b):\n    if a == 0 or b == 0:\n        return a + b\n    elif ...:\n        return combo(...)\n    return min(combo(a // 10, b) * 10 + a % 10, combo(a, b // 10) * 10 + b % 10)\n</code></pre> <p>\u4f46\u662f <code>elif</code> \u4e4b\u540e\u586b\u4ec0\u4e48\u4e00\u76f4\u6ca1\u60f3\u5230\uff0c(\u56e0\u4e3a\u4e0d\u77e5\u9053\u6709\u76f8\u540c\u6570\u5b57\u8fd8\u6709\u4e0d\u540c\u7684\u6570\u5b57\u8981\u600e\u4e48\u5206\u5272\u600e\u4e48\u5904\u7406\uff0c\u4ee5\u53caa\u53ea\u5269\u4e00\u79cd\u6570\u5b57\u7684\u60c5\u51b5\u4e0b\uff0c\u600e\u4e48\u5224\u65ad\u653e\u5728b\u524d\u9762\u8fd8\u662f\u540e\u9762\uff0c\u611f\u89c9\u8981\u5206\u975e\u5e38\u591a\u79cd\u60c5\u51b5\u7279\u522b\u590d\u6742\uff0c\u4e4b\u540e\u53d1\u73b0\u5176\u5b9e\u60c5\u51b5\u5f88\u7b80\u5355...)</p> <p>\u76f4\u5230\u4e09\u5929\u4e4b\u540e</p> <p>\u5f00\u59cb\u7ee7\u7eed\u601d\u8003\u8fd9\u9898\u65f6\uff0c\u6211\u5f00\u59cb\u601d\u8003\u5230\u8fbe base case \u7684\u6700\u540e\u4e00\u79cd\u60c5\u51b5\uff0c\u5373 a \u662f\u4e2a\u4e00\u4f4d\u6570\uff0c\u800c b \u662f 321\uff0c\u60f3\u5230\u5982\u679ca\u548cb\u67d0\u4e2a\u6570\u4f4d\u76f8\u540c\uff0c\u90a3\u4e48\u53ef\u4ee5\u60f3\u5feb\u901f\u6392\u5e8f\u4e00\u6837\u5c06b\u5206\u6210\u4e24\u8fb9\u53bb\u9012\u5f52(\u4f46\u662f\u597d\u50cf\u5bf9\u6570\u5b57\u5206\u5272\u5f88\u96be\u64cd\u4f5c\u8d77\u6765)\uff0c\u7136\u540e\u7531\u5206\u5272\u5c31\u8fdb\u4e00\u6b65\u5f00\u59cb\u60f3a\u548cb\u7684\u6700\u540e\u4e00\u4f4d\u53bb\u6bd4\u8f83(\u5c06b\u5206\u5272\u6210\u524d\u9762\u548c\u6700\u540e\u4e00\u4f4d)\uff0c\u90a3\u4e48(\u8981\u4f7f\u5f97\u7ed3\u679c\u6700\u5c0f)\u5e94\u8be5\u662f\u5c06\u5927\u7684\u90a3\u4e2a\u653e\u5728\u6700\u540e\uff0c\u6240\u4ee5\u5f00\u59cb\u5c1d\u8bd5\u7f16\u5199\u4ee3\u7801</p> <p>\u4f46\u662f\u53d1\u73b0 <code>elif</code> \u540e\u586b\u4e0d\u4e0a\u4e1c\u897f\uff0c\u6240\u4ee5\u6253\u7b97\u5148\u4e0d\u6309\u5b83\u63d0\u4f9b\u7684\u7ed3\u6784\u81ea\u5df1\u5199\uff1a</p> <pre><code>def combo(a, b):\n    if a == 0 or b == 0:\n        return a + b\n    else:\n        if a % 10 &lt; b % 10:\n            ...\n        else:\n            ...\n    # elif ...:\n    #     return combo(...)\n    # return min(combo(a // 10, b) * 10 + a % 10, combo(a, b // 10) * 10 + b % 10)\n</code></pre> <p>\u7136\u540e\u53d1\u73b0 <code>...</code> \u5904\u7684\u4ee3\u7801\u5c31\u662f\u6700\u540e <code>return</code> \u4e2d\u4e4b\u524d\u5199\u7684\u4ee3\u7801\uff0c\u5e76\u4e14\u80fd\u5b9e\u73b0\u5bf9\u5e94\u7684\u5904\u7406\u529f\u80fd\uff0c\u6240\u4ee5 <code>elif</code> \u540e\u5e94\u8be5\u8003\u8651\u7684\u662fa b\u6700\u540e\u4e00\u4f4d\u76f8\u540c\u7684\u60c5\u51b5\uff0c\u6545</p> <pre><code>def combo(a, b):\n    \"\"\"Return the smallest integer with all of the digits of a and b (in order).\n\n    &gt;&gt;&gt; combo(531, 432)    # 45312 contains both _531_ and 4_3_2.\n    45312\n    &gt;&gt;&gt; combo(531, 4321)   # 45321 contains both _531_ and 4_321.\n    45321\n    &gt;&gt;&gt; combo(1234, 9123)  # 91234 contains both _1234 and 9123_.\n    91234\n    &gt;&gt;&gt; combo(0, 321)      # The number 0 has no digits, so 0 is not in the result.\n    321\n    \"\"\"\n    if a == 0 or b == 0:\n        return a + b\n    elif a % 10 == b % 10:\n        return combo(a // 10, b // 10) * 10 + a % 10\n    return min(combo(a // 10, b) * 10 + a % 10, combo(a, b // 10) * 10 + b % 10)\n</code></pre> <p>\u7136\u540e\u534a\u4fe1\u534a\u7591\u5730\u8fdb\u884c\u4e86\u6d4b\u8bd5\uff0c\u53d1\u73b0\u8fd9\u7adf\u7136\u5c31\u662f\u7b54\u6848</p> <p>\u6700\u540e\u603b\u7ed3\u53cd\u601d\u4e86\u4e00\u4e0b\uff0c\u9012\u5f52\u8fd8\u662f\u5f97\u7262\u8bb0\u8981\u5047\u8bbe\u51fd\u6570\u80fd\u8fd4\u56de\u6240\u9700\u8981\u7684\u4e1c\u897f(\u6211\u611f\u89c9\u8fd9\u6837\u53ef\u80fd\u5c31\u66f4\u597d\u80fd\u60f3\u5230\u5206\u5272\u51fa\u6700\u540e\u4e00\u4f4d)</p>"},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part1/#lecture-16-qa","title":"Lecture 16 Q&amp;A","text":""},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part1/#1_31","title":"1","text":"<p>\u5217\u8868\u7684 <code>+=</code> \u548c <code>=</code> \u7684\u4e00\u4e9b\u533a\u522b\uff0c</p> <p>\u56fe\u4e2d\u5de6\u4fa7\uff0c<code>a = a + b</code> \u53ef\u4ee5\u7406\u89e3\u6210\uff0c\u5148\u662f <code>a + b</code> \u5f97\u5230\u4e00\u4e2a\u65b0\u7684\u5217\u8868\uff0c\u7136\u540e\u5c06\u53d8\u91cf\u540d <code>a</code> \u7ed1\u5b9a\u5230\u8fd9\u4e2a\u65b0\u7684\u5217\u8868\u4e0a\uff0c\u6240\u4ee5 <code>c</code> \u7ed1\u5b9a\u7684\u539f\u5217\u8868\u6ca1\u6709\u88ab\u6539\u53d8</p> <p>\u800c\u53f3\u4fa7\uff0c<code>a += b</code> \u53ef\u4ee5\u7c7b\u6bd4\u6210 <code>a.extend(b)</code> \uff0c\u662f\u5bf9 <code>a</code> \u6307\u5411\u7684\u5217\u8868\u672c\u8eab\u8fdb\u884c\u4e86\u4fee\u6539\uff0c\u6240\u4ee5\u901a\u8fc7 <code>c</code> \u4e5f\u80fd\u770b\u5230\u5217\u8868\u6539\u53d8\u4e86</p>"},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part1/#lab-06","title":"Lab 06","text":""},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part1/#1_32","title":"1","text":"<p>Q4\uff0c\u6211\u91c7\u7528\u5148\u53d6\u51fa\u548c <code>entry</code> \u76f8\u540c\u7684\u5143\u7d20\u7684\u4e0b\u6807\u5b58\u5728\u4e00\u4e2a\u5217\u8868\u4e2d\uff0c\u518d\u5c06\u8fd9\u4e9b\u4e0b\u6807\u5e94\u7528\u5230 <code>insert</code> \u65b9\u6cd5\u4e0a</p> <pre><code>def insert_items(lst, entry, elem):\n    entries_indices = [i for i in range(len(lst)) if lst[i] == entry]\n    for index in entries_indices:\n        lst.insert(index, elem)\n    return lst\n</code></pre> <p>\u4f46\u662f\u53d1\u73b0\u6709\u4e24\u4e2a\u5730\u65b9\u9700\u8981\u4fee\u6b63\uff1a</p> <ul> <li> <p>\u63d2\u5165\u65f6\uff0c\u7531\u4e8e\u662f\u5728\u76f8\u5e94\u7684\u5143\u7d20\u4e4b\u540e\u63d2\u5165\uff0c\u6240\u4ee5 <code>index</code> \u9700\u8981\u6539\u6210 <code>index + 1</code> </p> </li> <li> <p>\u7531\u4e8e\u5982\u679c\u6309\u7167\u4ece\u524d\u5230\u540e\u63d2\u5165\u65b0\u7684\u5143\u7d20\uff0c\u90a3\u4e48\u5728\u524d\u9762\u63d2\u5165\u65f6\uff0c\u4f1a\u5f15\u8d77\u540e\u9762\u7684\u5143\u7d20\u7684\u4e0b\u6807\u7684\u6539\u53d8\uff0c\u6240\u4ee5\u6211\u6539\u6210\u4ece\u540e\u5f80\u524d\u63d2\u5165\uff0c\u5373\u628a\u5b58\u50a8\u4e0b\u6807\u7684\u5217\u8868\u987a\u5e8f\u53cd\u8fc7\u6765</p> <pre><code>    entries_indices = entries_indices[::-1]\n</code></pre> </li> </ul> code <pre><code>def insert_items(lst, entry, elem):\n    \"\"\"\n    &gt;&gt;&gt; test_lst = [1, 5, 8, 5, 2, 3]\n    &gt;&gt;&gt; new_lst = insert_items(test_lst, 5, 7)\n    &gt;&gt;&gt; new_lst\n    [1, 5, 7, 8, 5, 7, 2, 3]\n    &gt;&gt;&gt; large_lst = [1, 4, 8]\n    &gt;&gt;&gt; large_lst2 = insert_items(large_lst, 4, 4)\n    &gt;&gt;&gt; large_lst2\n    [1, 4, 4, 8]\n    &gt;&gt;&gt; large_lst3 = insert_items(large_lst2, 4, 6)\n    &gt;&gt;&gt; large_lst3\n    [1, 4, 6, 4, 6, 8]\n    &gt;&gt;&gt; large_lst3 is large_lst\n    True\n    \"\"\"\n    \"*** YOUR CODE HERE ***\"\n    entries_indices = [i for i in range(len(lst)) if lst[i] == entry]\n    entries_indices = entries_indices[::-1]\n    for index in entries_indices:\n        lst.insert(index + 1, elem)\n    return lst\n</code></pre>"},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part1/#lecture-17-iterations","title":"Lecture 17 Iterations","text":""},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part1/#1_33","title":"1","text":"<ul> <li> <p><code>iter()</code> \u4f20\u5165\u4e00\u4e2a\u53ef\u4ee5\u8fed\u4ee3\u7684\u6570\u636e(\u6bd4\u5982\u5217\u8868)\uff0c\u7136\u540e\u8fd4\u56de\u4e00\u4e2a\u5bf9\u5e94\u7684\u8fed\u4ee3\u5668(\u6211\u611f\u89c9\u5e94\u8be5\u662f\u4e00\u4e2a <code>iter</code> \u7c7b\u578b\u7684\u6784\u9020\u51fd\u6570)\uff0c\u5e76\u4e14\u8fed\u4ee3\u5668\u7684\u521d\u59cb\u7684\u4f4d\u7f6e\u4f4d\u4e8e\u6570\u636e(\u5982\u5217\u8868)\u7684\u8d77\u59cb\u7aef(\u7b2c\u4e00\u4e2a\u5143\u7d20\u4e4b\u524d)\uff0c\u5e76\u4e14\u5982\u679c\u4e24\u6b21\u5bf9\u540c\u4e00\u4e2a\u5217\u8868\u8c03\u7528 <code>iter()</code> \u51fd\u6570\uff0c\u8fd4\u56de\u7684\u662f\u4e24\u4e2a\u4e0d\u540c\u7684\u8fed\u4ee3\u5668\uff0c\u5373</p> <pre><code>&gt;&gt;&gt; s = [3, 4, 5]\n&gt;&gt;&gt; t = iter(s)\n&gt;&gt;&gt; next(t)\n3\n&gt;&gt;&gt; next(t)\n4\n&gt;&gt;&gt; u = iter(s)\n&gt;&gt;&gt; next(u)\n3\n&gt;&gt;&gt; next(t)\n5\n&gt;&gt;&gt; next(u)\n4\n</code></pre> </li> <li> <p><code>next()</code> \u4f20\u5165\u4e00\u4e2a\u8fed\u4ee3\u5668(\u4f20\u5165\u53ef\u8fed\u4ee3\u6570\u636e\u4f1a\u62a5\u9519)\uff0c\u8fd4\u56de\u8fed\u4ee3\u5668\u7684\u540e\u4e00\u4e2a\u5143\u7d20\uff0c\u5e76\u5411\u524d\u79fb\u52a8\u4e00\u4e2a\u4f4d\u7f6e\uff0c\u5373\u4e0b\u6b21\u518d\u8c03\u7528 <code>next()</code> \u5e76\u4f20\u5165\u540c\u4e00\u4e2a\u8fed\u4ee3\u5668\uff0c\u8fd4\u56de\u7684\u4f1a\u662f\u53e6\u4e00\u4e2a\u5143\u7d20</p> </li> </ul>"},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part1/#2_19","title":"2","text":"<p>\u5982\u679c\u7528 <code>list()</code> \u53bb\u4f20\u5165\u4e00\u4e2a\u8fed\u4ee3\u5668\uff0c\u90a3\u4e48\u4f1a\u8fd4\u56de\u4e00\u4e2a\u5217\u8868\u5305\u542b\u8fed\u4ee3\u5668\u4e4b\u540e\u7684\u6240\u6709\u5143\u7d20\uff0c\u4e0d\u5305\u542b\u4e4b\u524d\u7684\uff0c\u5e76\u4e14\u4f1a\u5c06\u8fed\u4ee3\u5668\u7684\u4f4d\u7f6e\u79fb\u52a8\u5230\u5217\u8868\u7684\u672b\u7aef</p> <pre><code>&gt;&gt;&gt; s = [[1, 2], 3, 4, 5]\n&gt;&gt;&gt; s\n[[1, 2], 3, 4, 5]\n&gt;&gt;&gt; t = iter(s)\n&gt;&gt;&gt; next(t)\n[1, 2]\n&gt;&gt;&gt; next(t)\n3\n&gt;&gt;&gt; list(t)\n[4, 5]\n&gt;&gt;&gt; next(t)\nTraceback (most recent call last):\n  File \"&lt;stdin&gt;\", line 1, in &lt;module&gt;\nStopIteration\n</code></pre>"},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part1/#3_16","title":"3","text":"<p>A dictionary, its keys, its values, and its items are all iterable values</p> <p><code>dict.keys</code> <code>dict.values</code> <code>dict.items</code> \u90fd\u662f\u53ef\u4ee5\u8fed\u4ee3\u7684\u5bf9\u8c61</p> <ul> <li>\u5982\u679c\u5bf9 <code>iter()</code> \u76f4\u63a5\u4f20\u5165\u4e00\u4e2a\u5b57\u5178\uff0c\u8fd4\u56de\u7684\u8fed\u4ee3\u5668\u5bf9\u5e94\u7684\u662fkeys\u7684\u8fed\u4ee3\u5668</li> <li>\u5bf9 <code>next()</code> \u4f20\u5165 <code>dict.items</code> \u5bf9\u5e94\u7684\u8fed\u4ee3\u5668\uff0c\u8fd4\u56de\u7684\u662f\u7531\u5b57\u5178\u7684key\u548c\u5bf9\u5e94\u7684value\u7ec4\u6210\u7684\u4e8c\u5143\u5143\u7ec4</li> </ul> <pre><code>&gt;&gt;&gt; d = {'one': 1, 'two': 2, 'three': 3}\n&gt;&gt;&gt; d['zero'] = 0\n&gt;&gt;&gt; k = iter(d.keys())  # or iter(d)\n&gt;&gt;&gt; next(k)\n'one'\n&gt;&gt;&gt; next(k)\n'two'\n&gt;&gt;&gt; next(k)\n'three'\n&gt;&gt;&gt; next(k)\n'zero'\n&gt;&gt;&gt; v = iter(d.values())\n&gt;&gt;&gt; next(v)\n1\n&gt;&gt;&gt; next(v)\n2\n&gt;&gt;&gt; next(v)\n3\n&gt;&gt;&gt; next(v)\n0\n&gt;&gt;&gt; i = iter(d.items())\n&gt;&gt;&gt; next(i)\n('one', 1)\n&gt;&gt;&gt; next(i)\n('two', 2)\n&gt;&gt;&gt; next(i)\n('three', 3)\n&gt;&gt;&gt; next(i)\n('zero', 0)\n</code></pre>"},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part1/#4_13","title":"4","text":"<p>\u5982\u679c\u6539\u53d8\u4e00\u4e2a\u5b57\u5178\u7684\u5927\u5c0f(\u7ecf\u8fc7\u6d4b\u8bd5\uff0c\u7ed9\u5b57\u5178\u6dfb\u52a0\u5143\u7d20\uff0c\u4e0d\u4f1a\u4f7f\u5f97\u4e4b\u524d\u6784\u5efa\u7684\u8fed\u4ee3\u5668\u5931\u6548)\uff0c\u6bd4\u5982\u6dfb\u52a0\u4e00\u7ec4\u65b0\u7684\u952e\u503c\u5bf9\uff0c\u6216\u8005\u5220\u53bb\uff0c\u4f1a\u4f7f\u5f97\u4e4b\u524d\u6784\u5efa\u7684\u8fed\u4ee3\u5668\u4e0d\u80fd\u4f7f\u7528(keys, values, items\u90fd\u4e0d\u80fd)</p> <pre><code>&gt;&gt;&gt; d = {'one': 1, 'two': 2}\n&gt;&gt;&gt; k = iter(d)\n&gt;&gt;&gt; next(k)\n'one'\n&gt;&gt;&gt; d['zero'] = 0\n&gt;&gt;&gt; next(k)\nTraceback (most recent call last):\n  File \"&lt;stdin&gt;\", line 1, in &lt;module&gt;\nRuntimeError: dictionary changed size during iteration\n&gt;&gt;&gt; d\n{'one': 1, 'two': 2, 'zero': 0}\n&gt;&gt;&gt; k = iter(d)\n&gt;&gt;&gt; next(k)\n'one'\n&gt;&gt;&gt; next(k)\n'two'\n&gt;&gt;&gt; d['zero'] = 5\n&gt;&gt;&gt; next(k)\n'zero'\n</code></pre> <p>\u800c\u5982\u679c\u53ea\u662f\u4fee\u6539\u5df2\u5b58\u5728\u7684\u952e\u503c\u5bf9\u7684\u503c\uff0c\u4e0d\u4f1a\u4f7f\u5f97\u4e4b\u524d\u6784\u5efa\u7684\u8fed\u4ee3\u5668\u5931\u6548(values, items\u5bf9\u5e94\u7684\u8fed\u4ee3\u5668\u5728\u4fee\u6539\u4e86\u5b57\u5178\u4e4b\u540e\u8fde\u63a5\u7684\u4f1a\u662f\u4fee\u6539\u4e4b\u540e\u7684\u503c)</p>"},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part1/#5_9","title":"5","text":"<p><code>for</code> \u8bed\u53e5\u4e5f\u53ef\u4ee5\u4f7f\u7528\u8fed\u4ee3\u5668\uff0c\u4f46\u53ea\u662f\u4ece\u8fed\u4ee3\u5668\u5f53\u524d\u7684\u4f4d\u7f6e\u5f00\u59cb\uff0c\u5e76\u4e14\u4f1a\u5c06\u8fed\u4ee3\u5668\u7684\u4f4d\u7f6e\u79fb\u52a8\u5230\u6700\u540e\uff0c(\u611f\u89c9\u8ddf\u7b2c\u4e8c\u70b9\u5f88\u76f8\u50cf)</p> <pre><code>&gt;&gt;&gt; r = range(3, 6)\n&gt;&gt;&gt; ri = iter(r)\n&gt;&gt;&gt; next(ri)\n3\n&gt;&gt;&gt; for i in ri:\n...     print(i)\n...\n4\n5\n&gt;&gt;&gt; for i in ri:\n...     print(i)\n...\n&gt;&gt;&gt; next(ri)\nTraceback (most recent call last):\n  File \"&lt;stdin&gt;\", line 1, in &lt;module&gt;\nStopIteration\n</code></pre>"},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part1/#6_7","title":"6","text":"<p>\u4e00\u4e9b\u4f1a\u8fd4\u56de\u8fed\u4ee3\u5668\u7684 built-in functions</p> <p>\u4e0a\u56fe\u4e2d\u7684 <code>iterable</code> \u4e5f\u5305\u62ec\u8fed\u4ee3\u5668\uff0c\u6240\u4ee5\u8fed\u4ee3\u5668\u4e5f\u7b97\u4f5c\u53ef\u8fed\u4ee3\u5bf9\u8c61</p> <p>John\u7684\u51e0\u4e2aDemo</p> <ol> <li> <p>\u8fd9\u662f\u4e00\u4e2a\u7b80\u5355\u5c55\u793a\u7684\u5229\u7528 <code>map</code> \u6765\u83b7\u53d6 \u4e00\u4e2a\u5c06\u4f20\u5165\u51fd\u6570\u5957\u7528\u5728\u8fed\u4ee3\u51fa\u6765\u7684\u6570\u636e\u7684\u8fed\u4ee3\u5668 \u7684\u4f8b\u5b50</p> <pre><code>&gt;&gt;&gt; bcd = ['b', 'c', 'd']\n&gt;&gt;&gt; [x.upper() for x in bcd]\n['B', 'C', 'D']\n&gt;&gt;&gt; map(lambda x: x.upper(), bcd)\n&lt;map object at 0x000002597B19F730&gt;\n&gt;&gt;&gt; m = map(lambda x: x.upper(), bcd)\n&gt;&gt;&gt; next(m)\n'B'\n&gt;&gt;&gt; next(m)\n'C'\n&gt;&gt;&gt; next(m)\n'D'\n&gt;&gt;&gt; next(m)\nTraceback (most recent call last):\n  File \"&lt;stdin&gt;\", line 1, in &lt;module&gt;\nStopIteration\n&gt;&gt;&gt;\n</code></pre> </li> <li> <p>\u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c\u53ef\u4ee5\u6ce8\u610f\u5230\uff0cmap\u8fd4\u56de\u7684\u8fed\u4ee3\u5668\uff0c\u5e76\u4e0d\u662f\u76f4\u63a5\u628a \u4f20\u5165\u7684\u51fd\u6570\u5bf9\u53ef\u8fed\u4ee3\u5bf9\u8c61\u7684\u6bcf\u4e2a\u6570\u636e\u7684\u8fd4\u56de\u503c\u5b58\u5728\u8fed\u4ee3\u5668\u4e2d\uff0c\u800c\u662f\u5c06\u53ef\u8fed\u4ee3\u5bf9\u8c61\u548c\u4f20\u5165\u7684\u51fd\u6570\u7ed1\u5b9a\u5728\u540c\u4e00\u4e2a\u8fed\u4ee3\u5668\u91cc\uff0c\u5728\u8fed\u4ee3\u65f6\u5c31\u7528==\u8fed\u4ee3\u5668\u8fed\u4ee3\u8fd4\u56de\u7684\u6570\u636e==\u53bb\u8c03\u7528\u51fd\u6570(\u6240\u4ee5\u624d\u4f1a\u8fd0\u884c <code>print</code> \u51fd\u6570\uff0c\u5373\u6253\u5370\u51fa\u4e1c\u897f)</p> <pre><code>def double(x):\n    print('**', x, '=&gt;', 2 * x, '**')\n    return 2 * x\n</code></pre> <pre><code>&gt;&gt;&gt; m = map(double, [3, 5, 7])\n&gt;&gt;&gt; next(m)\n** 3 =&gt; 6 **\n6\n&gt;&gt;&gt; next(m)\n** 5 =&gt; 10 **\n10\n&gt;&gt;&gt; next(m)\n** 7 =&gt; 14 **\n14\n&gt;&gt;&gt;\n</code></pre> </li> <li> <p>\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c\u5c55\u793a\u4e86 <code>filter</code> \uff0c\u548c <code>map</code> \u5f88\u7c7b\u4f3c\uff0c\u4e5f\u662f\u5c06\u8fed\u4ee3\u5bf9\u8c61\u548c\u51fd\u6570\u7ed1\u5b9a\u5230\u4e00\u8d77(\u800c\u4e0d\u662f\u76f4\u63a5\u53d6\u76ee\u6807\u7684\u8fd4\u56de\u503c\uff0c\u4e5f\u6ca1\u6709\u4fdd\u5b58\u8fed\u4ee3\u5bf9\u8c61\u7684\u503c)\uff0c\u6240\u4ee5\u5728\u8fed\u4ee3 <code>filter</code> \u8fd4\u56de\u7684\u8fed\u4ee3\u5668==\u65f6\uff0c\u662f==\u5148\u8fed\u4ee3\u5b83\u7684\u8fed\u4ee3\u5bf9\u8c61\uff0c\u518d\u5c06\u8fed\u4ee3\u8fd4\u56de\u503c\u653e\u5165\u51fd\u6570\u5224\u65ad(\u4e0d\u7b26\u5408\u5c31\u7ee7\u7eed\u8fed\u4ee3)(\u6240\u4ee5 <code>double</code> \u5185\u90e8\u7684print\u8bed\u53e5\u624d\u4f1a\u6267\u884c)\uff0c\u7136\u540e\u8fd4\u56de\u7b26\u5408(\u5224\u65ad)\u51fd\u6570\u7684\u503c\u3002\u4ece\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\u53ef\u4ee5\u5f88\u6e05\u6670\u5730\u770b\u5230\u8fd9\u4e00\u70b9</p> <pre><code>&gt;&gt;&gt; m = map(double, range(3, 7))\n&gt;&gt;&gt; f = lambda y: y &gt;= 10\n&gt;&gt;&gt; t = filter(f, m)\n&gt;&gt;&gt; next(t)\n** 3 =&gt; 6 **\n** 4 =&gt; 8 **\n** 5 =&gt; 10 **\n10\n&gt;&gt;&gt; next(t)\n** 6 =&gt; 12 **\n12\n&gt;&gt;&gt; list(t)\n[]\n&gt;&gt;&gt; list(filter(f, map(double, range(3, 7))))\n** 3 =&gt; 6 **\n** 4 =&gt; 8 **\n** 5 =&gt; 10 **\n** 6 =&gt; 12 **\n[10, 12]\n&gt;&gt;&gt;\n</code></pre> </li> <li> <p>\u8fd9\u4e2a\u4f8b\u5b50\u5c55\u73b0\u4e86 <code>reversed</code> \u8fd4\u56de\u7684\u662f\u4e00\u4e2a\u8fed\u4ee3\u5668(\u6240\u4ee5\u4e0d\u4f1a\u7b49\u4e8e\u539f\u6765\u7684\u5217\u8868)</p> <pre><code>&gt;&gt;&gt; t = [1, 2, 3, 2, 1]\n&gt;&gt;&gt; t\n[1, 2, 3, 2, 1]\n&gt;&gt;&gt; reversed(t)\n&lt;list_reverseiterator object at 0x000002597B1D12D0&gt;\n&gt;&gt;&gt; reversed(t) == t\nFalse\n&gt;&gt;&gt; list(reversed(t))\n[1, 2, 3, 2, 1]\n&gt;&gt;&gt; list(reversed(t)) == t\nTrue\n&gt;&gt;&gt;\n</code></pre> </li> <li> <p>\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c\u5b57\u5178\u952e\u503c\u5bf9\u7684\u987a\u5e8f\u548cJohn\u7684demo\u6709\u70b9\u4e0d\u4e00\u6837\uff0c\u5e94\u8be5\u662f\u7531\u4e8epython\u7248\u672c\u4e0d\u540c\u7684\u539f\u56e0</p> <pre><code>&gt;&gt;&gt; d = {'a': 1, 'b': 2}\n&gt;&gt;&gt; d\n{'a': 1, 'b': 2}\n&gt;&gt;&gt; items = iter(d.items())\n&gt;&gt;&gt; next(items)\n('a', 1)\n&gt;&gt;&gt; next(items)\n('b', 2)\n&gt;&gt;&gt; items = zip(d.keys(), d.values())\n&gt;&gt;&gt; next(items)\n('a', 1)\n&gt;&gt;&gt; next(items)\n('b', 2)\n&gt;&gt;&gt;\n</code></pre> <p></p> </li> </ol>"},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part1/#7_2","title":"7","text":"<p>\u751f\u6210\u5668\u548c\u751f\u6210\u5668\u51fd\u6570 Generators and Generator Functions</p> <p>\u4f7f\u7528 <code>yield</code> \u800c\u4e0d\u662f <code>return</code> \u5173\u952e\u5b57\u6765\u8fd4\u56de\u503c\u7684\u51fd\u6570\uff0c\u5c31\u662f\u751f\u6210\u5668\u51fd\u6570\uff0c\u800c\u751f\u6210\u5668\u51fd\u6570\u4f1a\u8fd4\u56de\u4e00\u4e2a\u751f\u6210\u5668\uff0c\u751f\u6210\u5668\u662f\u4e00\u4e2a\u8fed\u4ee3\u5668\uff0c\u8fed\u4ee3\u65f6\u4f1a\u6309\u7167\u51fd\u6570\u4e2d <code>yield</code> \u8bed\u53e5\u7684\u987a\u5e8f\u6765\u8fd4\u56de\u503c\uff0c\u53c2\u8003\u4e0a\u56fe</p> <p>John\u7684\u4e00\u4e2ademo</p> <pre><code>def evens(start, end):\n    even = start + (start % 2)\n    while even &lt; end:\n        yield even\n        even += 2\n</code></pre> <pre><code>&gt;&gt;&gt; t = evens(2, 10)\n&gt;&gt;&gt; t\n&lt;generator object evens at 0x000002597B170580&gt;\n&gt;&gt;&gt; next(t)\n2\n&gt;&gt;&gt; next(t)\n4\n&gt;&gt;&gt; next(t)\n6\n&gt;&gt;&gt; next(t)\n8\n&gt;&gt;&gt; next(t)\nTraceback (most recent call last):\n  File \"&lt;stdin&gt;\", line 1, in &lt;module&gt;\nStopIteration\n&gt;&gt;&gt; list(evens(1, 10))\n[2, 4, 6, 8]\n&gt;&gt;&gt;\n</code></pre> <p>John\u7684\u89e3\u91ca\u662f\uff0c\u5f53\u4e00\u4e2a Generator Function \u88ab\u8c03\u7528\u65f6\uff0c\u51fd\u6570\u91cc\u9762\u7684\u8bed\u53e5\u4e0d\u4f1a\u88ab\u7acb\u5373\u6267\u884c\uff0c\u800c\u662f\u76f4\u63a5\u8fd4\u56de\u4e00\u4e2a Generator \uff0c\u800c\u5728 generator \u6bcf\u6b21\u8fed\u4ee3\u65f6\uff0c\u51fd\u6570\u5185\u7684\u8bed\u53e5\u624d\u4f1a\u88ab\u6267\u884c\uff0c\u4e14\u53ea\u6267\u884c\u5230\u4e0b\u4e00\u4e2a <code>yield</code> \u5904\u5c31\u6682\u505c\u6267\u884c\uff0c\u5e76\u8fd4\u56de\u503c</p>"},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part1/#8_1","title":"8","text":"<p><code>yield from</code> \u8bed\u53e5\uff0c\u540e\u9762\u53ef\u4ee5\u662f \u8fed\u4ee3\u5668 \u6216\u8005 \u53ef\u8fed\u4ee3\u5bf9\u8c61 (\u5982\u679c\u662f\u8fed\u4ee3\u5668\u4f30\u8ba1\u4f1a\u4fee\u6539\u8fed\u4ee3\u5668\u7684\u4f4d\u7f6e)</p> <p>\u4e0a\u56fe\u4e2d\u8fd8\u5c55\u793a\u4e86\u751f\u6210\u5668\u51fd\u6570\u7684\u4e00\u79cd\u7c7b\u4f3c\u4e8e\u9012\u5f52\u7684\u5199\u6cd5</p> <pre><code>def countdown(k):\n    if k &gt; 0:\n        yield k\n        for x in countdown(k - 1):\n            yield x\n</code></pre> <p>\u66f4\u7b80\u6d01\u7684\u5199\u6cd5\u5c31\u662f</p> <pre><code>def countdown(k):\n    if k &gt; 0:\n        yield k\n        yield from countdown(k - 1)\n</code></pre>"},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part1/#9_1","title":"9","text":"<p>John\u7684\u4e00\u4e2a\u795e\u5947\u7684\u751f\u6210\u5668\u51fd\u6570\u7684demo\uff0c\u611f\u89c9\u5f88\u50cf\u9012\u5f52\u7684\u611f\u89c9\uff0c\u5e76\u4e14\u591a\u4e2a\u751f\u6210\u5668\u51fd\u6570\u7ec4\u5408\u4f7f\u7528\u53ef\u4ee5\u4ea7\u751f\u795e\u5947\u7684\u6548\u679c</p>"},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part1/#lecture-17-qa","title":"Lecture 17 Q&amp;A","text":""},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part1/#1_34","title":"1","text":"<p>John \u5173\u4e8e\u8fed\u4ee3\u5668\u7684\u89e3\u91ca</p> <p>Quote</p> <p>yeah good question, so if an iterator is not a list, what is it. um, there are lots of different kinds of, uh, iterators, so you know it more by its behavior than its, like what it's constituted of. an iterator is something that you can call next on, and get more elements. in the case of a list, the iterator for a list, is more than just a list, it's kind of a reference to the list along with a position in that list that tells you where you are, so that if you call the next thing the iterator advances, meaning that if you called next again you'd get something else than you did the first time. so in that sense, it's, it has different behavior than a list, because it's both a list and like a marker for where you are. but list iterators are not the only kind of iterators, you could have an iterator through the labels in a tree, you could have an iterator through the prefixes in a string, you could have an iterator kind of through anything, and it's just a description of something that lets you go through multiple elements in some order by calling next on the iterator and getting the next value, and you can do that over and over again. so it's quite an abstract thing as opposed to, feeling quite as concrete as for example a list.</p> <p>\u597d\u95ee\u9898\uff0c\u5982\u679c\u8fed\u4ee3\u5668\u4e0d\u662f\u4e00\u4e2a\u5217\u8868\uff0c\u5b83\u662f\u4ec0\u4e48\u3002\u55ef\uff0c\u6709\u5f88\u591a\u4e0d\u540c\u7c7b\u578b\u7684\u8fed\u4ee3\u5668\uff0c\u6240\u4ee5\u4f60\u66f4\u591a\u5730\u901a\u8fc7\u5b83\u7684\u884c\u4e3a\u800c\u4e0d\u662f\u5b83\u7684\u884c\u4e3a\u6765\u4e86\u89e3\u5b83\uff0c\u6bd4\u5982\u5b83\u662f\u7531\u4ec0\u4e48\u7ec4\u6210\u7684\u3002\u8fed\u4ee3\u5668\u662f\u60a8\u63a5\u4e0b\u6765\u53ef\u4ee5\u8c03\u7528\u5e76\u83b7\u53d6\u66f4\u591a\u5143\u7d20\u7684\u4e1c\u897f\u3002\u5728\u5217\u8868\u7684\u60c5\u51b5\u4e0b\uff0c\u5217\u8868\u7684\u8fed\u4ee3\u5668\u4e0d\u4ec5\u4ec5\u662f\u4e00\u4e2a\u5217\u8868\uff0c\u5b83\u662f\u5bf9\u5217\u8868\u7684\u5f15\u7528\uff0c\u4ee5\u53ca\u5217\u8868\u4e2d\u7684\u4e00\u4e2a\u4f4d\u7f6e\uff0c\u544a\u8bc9\u4f60\u5728\u54ea\u91cc\uff0c\u6240\u4ee5\u5982\u679c\u4f60\u8c03\u7528\u4e0b\u4e00\u4e2a\u4e1c\u897f\uff0c\u8fed\u4ee3\u5668\u4f1a\u524d\u8fdb\uff0c\u8fd9\u610f\u5473\u7740\u5982\u679c\u4f60\u518d\u6b21\u8c03\u7528next\uff0c\u4f60\u4f1a\u5f97\u5230\u6bd4\u7b2c\u4e00\u6b21\u4e0d\u540c\u7684\u4e1c\u897f\u3002\u4ece\u8fd9\u4e2a\u610f\u4e49\u4e0a\u8bf4\uff0c\u5b83\u7684\u884c\u4e3a\u4e0e\u5217\u8868\u4e0d\u540c\uff0c\u56e0\u4e3a\u5b83\u65e2\u662f\u4e00\u4e2a\u5217\u8868\uff0c\u53c8\u50cf\u662f\u4e00\u4e2a\u4f60\u6240\u5728\u4f4d\u7f6e\u7684\u6807\u8bb0\u3002\u4f46\u5217\u8868\u8fed\u4ee3\u5668\u5e76\u4e0d\u662f\u552f\u4e00\u4e00\u79cd\u8fed\u4ee3\u5668\uff0c\u4f60\u53ef\u4ee5\u901a\u8fc7\u6811\u4e2d\u7684\u6807\u7b7e\u6709\u4e00\u4e2a\u8fed\u4ee3\u5668\u3002\u4f60\u53ef\u4ee5\u901a\u8fc7\u5b57\u7b26\u4e32\u4e2d\u7684\u524d\u7f00\u6709\u4e00\u4e2a\u8fed\u4ee3\u5668\u3002\u4f60\u4e5f\u53ef\u4ee5\u901a\u8fc7\u4efb\u4f55\u4e1c\u897f\u6709\u4e00\u4e2aiterator\u3002\u5b83\u53ea\u662f\u4e00\u4e2a\u4e1c\u897f\u7684\u63cf\u8ff0\uff0c\u8ba9\u4f60\u901a\u8fc7\u5728\u8fed\u4ee3\u5668\u4e0a\u8c03\u7528next\u5e76\u83b7\u5f97\u4e0b\u4e00\u4e2a\u503c\u6765\u6309\u67d0\u79cd\u987a\u5e8f\u904d\u5386\u591a\u4e2a\u5143\u7d20\uff0c\u4f60\u53ef\u4ee5\u4e00\u6b21\u53c8\u4e00\u6b21\u5730\u8fd9\u6837\u505a\u3002\u6240\u4ee5\u8fd9\u662f\u4e00\u4ef6\u975e\u5e38\u62bd\u8c61\u7684\u4e8b\u60c5\uff0c\u800c\u4e0d\u662f\u50cf\u5217\u8868\u4e00\u6837\u5177\u4f53\u3002</p>"},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part1/#2_20","title":"2","text":"<p>John\u5c55\u793a\u4e86\u4e00\u79cd\u4e0d\u4f7f\u7528 <code>yield</code> \u5173\u952e\u5b57\u4e5f\u53ef\u4ee5\u5b9e\u73b0\u76f8\u540c\u529f\u80fd\u7684\u5199\u6cd5\uff1a</p> <pre><code>def prefixes(s):\n    result = []\n    if s:\n        for x in prefixes(s[:-1]):\n            result.append(x)\n    return result\n\nprint(list(prefixes('doges')))\n</code></pre> <p>\u539f\u672c\u7684\u4f7f\u7528 <code>yield</code> \u7684\u5199\u6cd5</p> <pre><code>def prefixes(s):\n    if s:\n        for x in prefixes(s[:-1]):\n            yield x\n        yield s\n\nprint(list(prefixes('doges')))\n</code></pre>"},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part1/#3_17","title":"3","text":"<p>John \u548c Hany \u89e3\u91ca\u5173\u4e8e\u8fed\u4ee3\u5668\u6bcf\u6b21\u8fed\u4ee3\u65f6\u5c31\u4f1a\u88ab\u66f4\u6539\u7684\u7279\u70b9(\u4e00\u6b21\u6027\u4f7f\u7528\u7684\u7279\u70b9)</p> <p>Quote</p> <pre><code>s = [1, 2, 3]\nt = iter(s)\n\nlen(list(t)) #-&gt; returns 3\nlen(list(t)) #-&gt; returns 0?\n</code></pre> <p>John:</p> <p>yeah good question, so the questions about this example and why is it the case that when you get the length of, uh, the result of listing out the contents of an iterator twice you get a different thing each time, first time you got three things, next time you got zero things. this isn't something having to do with len, this is having to do with how list interacts with an iterator. when you call list on an iterator, you end up building a list of all the contents of that iterator, but the iterator is used up as a side effect of calling list on it. so, if i have an iterator over these values, um, i can get one thing out of it, but then if i get another thing i get a different thing. list is kind of like calling next over and over again, and putting all the results in a list. so as soon as you call list on t, you're going to get everything that's left over in the iterator, that hasn't been used up or returned already. so we've already seen the one, we've seen the two, therefore calling list on t will just show us the three. and now t is used up, i can't get the next thing in t, because we're already at the end, and so if i try to list everything that's left and t, i'll get an empty list. so your version was start with this, get all the contents of that, which is a list containing one two and three. if i do this, i'm changing t. this is, uh, every time you get elements from an iterator, you're changing that iterator, which means you can't really use it again. so if you get the length of this you get three, you get the length of this you get zero.</p> <p> </p> <p>Hany:</p> <p>so think of these iterators as one use disposable operators, once you've gone through the list, either next next next next, or the list of it is you're essentially enumerating the list, it's gone. right, so by the way you could have implemented this yourself, you could have written a function that every time you access an element, the next element, you delete that element from the list, that's essentially what's going on here. yeah. and so once you, it's a funny thing about iterators by the way, is that once you look at the list, it's, it's sort of like, uh, what is it, it's like snapchat, right, the image comes in, you look at it, and then it vanishes, it's gone.</p> <p> </p> <p>John:</p> <p>that is beautiful.</p> <p> </p> <p>Hany:</p> <p>yeah, you got to be impressed by somebody my age, making a snapchat reference, that's, that's i think you know, you have a little credit for that.</p> <p> </p> <p>John:</p> <p>perfect snapchat analogy.</p> <pre><code>s = [1, 2, 3]\nt = iter(s)\n\nlen(list(t)) #-&gt; returns 3\nlen(list(t)) #-&gt; returns 0?\n</code></pre> <p>John:</p> <p>\u662f\u7684\uff0c\u8fd9\u662f\u4e00\u4e2a\u5f88\u597d\u7684\u95ee\u9898\u3002\u5173\u4e8e\u8fd9\u4e2a\u793a\u4f8b\u7684\u95ee\u9898\u662f\uff0c\u4e3a\u4ec0\u4e48\u5728\u4e24\u6b21\u83b7\u53d6\u8fed\u4ee3\u5668\u7684\u5185\u5bb9\u7684\u957f\u5ea6\u65f6\uff0c\u6bcf\u6b21\u90fd\u4f1a\u5f97\u5230\u4e0d\u540c\u7684\u7ed3\u679c\uff1f\u7b2c\u4e00\u6b21\u5f97\u5230\u4e09\u4e2a\u5143\u7d20\uff0c\u4e0b\u4e00\u6b21\u5374\u5f97\u5230\u96f6\u4e2a\u5143\u7d20\uff1f\u8fd9\u4e0e <code>len</code> \u51fd\u6570\u65e0\u5173\uff0c\u800c\u4e0e <code>list</code> \u5982\u4f55\u4e0e\u8fed\u4ee3\u5668\u4ea4\u4e92\u6709\u5173\u3002\u5f53\u4f60\u5728\u8fed\u4ee3\u5668\u4e0a\u8c03\u7528 <code>list</code> \u65f6\uff0c\u4f60\u5b9e\u9645\u4e0a\u6b63\u5728\u6784\u5efa\u4e00\u4e2a\u5305\u542b\u8be5\u8fed\u4ee3\u5668\u7684\u6240\u6709\u5185\u5bb9\u7684\u5217\u8868\uff0c\u4f46\u8c03\u7528 <code>list</code> \u4f1a\u6d88\u8017\u8fed\u4ee3\u5668\uff0c\u8fd9\u662f\u4e00\u4e2a\u526f\u4f5c\u7528\u3002\u56e0\u6b64\uff0c\u5982\u679c\u6211\u6709\u4e00\u4e2a\u8fed\u4ee3\u5668\u904d\u5386\u8fd9\u4e9b\u503c\uff0c\u6211\u53ef\u4ee5\u4ece\u4e2d\u83b7\u53d6\u4e00\u4e2a\u5143\u7d20\uff0c\u4f46\u5982\u679c\u6211\u518d\u6b21\u83b7\u53d6\u4e00\u4e2a\u5143\u7d20\uff0c\u6211\u5c06\u5f97\u5230\u4e0d\u540c\u7684\u7ed3\u679c\u3002 <code>list</code> \u5c31\u50cf\u4e00\u6b21\u53c8\u4e00\u6b21\u5730\u8c03\u7528 <code>next</code> \uff0c\u7136\u540e\u5c06\u6240\u6709\u7ed3\u679c\u653e\u5165\u5217\u8868\u4e2d\u3002\u56e0\u6b64\uff0c\u4e00\u65e6\u5728 <code>t</code> \u4e0a\u8c03\u7528 <code>list</code> \uff0c\u4f60\u5c06\u83b7\u5f97\u8fed\u4ee3\u5668\u4e2d\u5269\u4f59\u7684\u6240\u6709\u5185\u5bb9\uff0c\u8fd9\u4e9b\u5185\u5bb9\u5c1a\u672a\u88ab\u4f7f\u7528\u6216\u8fd4\u56de\u3002\u6240\u4ee5\u6211\u4eec\u5df2\u7ecf\u770b\u5230\u4e861\u548c2\uff0c\u56e0\u6b64\u5728 <code>t</code> \u4e0a\u8c03\u7528 <code>list</code> \u5c06\u53ea\u663e\u793a3\u3002\u73b0\u5728 <code>t</code> \u5df2\u7ecf\u88ab\u7528\u5b8c\u4e86\uff0c\u6211\u65e0\u6cd5\u518d\u83b7\u53d6 <code>t</code> \u4e2d\u7684\u4e0b\u4e00\u4e2a\u5143\u7d20\uff0c\u56e0\u4e3a\u6211\u4eec\u5df2\u7ecf\u5230\u8fbe\u672b\u5c3e\uff0c\u6240\u4ee5\u5982\u679c\u6211\u5c1d\u8bd5\u5217\u51fa <code>t</code> \u4e2d\u5269\u4e0b\u7684\u6240\u6709\u5185\u5bb9\uff0c\u6211\u5c06\u5f97\u5230\u4e00\u4e2a\u7a7a\u5217\u8868\u3002\u6240\u4ee5\u4f60\u7684\u7248\u672c\u662f\u4ece\u8fd9\u4e2a\u5f00\u59cb\uff0c\u83b7\u53d6\u4e86\u5305\u542b1\u30012\u548c3\u7684\u5217\u8868\u3002\u5982\u679c\u6211\u505a\u8fd9\u4e2a\uff0c\u6211\u5c31\u6539\u53d8\u4e86 <code>t</code> \u3002\u6bcf\u5f53\u4ece\u8fed\u4ee3\u5668\u4e2d\u83b7\u53d6\u5143\u7d20\u65f6\uff0c\u4f60\u90fd\u4f1a\u6539\u53d8\u8be5\u8fed\u4ee3\u5668\uff0c\u8fd9\u610f\u5473\u7740\u4f60\u4e0d\u80fd\u518d\u6b21\u4f7f\u7528\u5b83\u3002\u56e0\u6b64\uff0c\u5982\u679c\u4f60\u83b7\u53d6\u8fd9\u4e2a\u7684\u957f\u5ea6\uff0c\u4f60\u4f1a\u5f97\u52303\uff0c\u5982\u679c\u4f60\u83b7\u53d6\u8fd9\u4e2a\u7684\u957f\u5ea6\uff0c\u4f60\u4f1a\u5f97\u52300\u3002</p> <p> </p> <p>Hany:</p> <p>\u6240\u4ee5\u628a\u8fd9\u4e9b\u8fed\u4ee3\u5668\u770b\u4f5c\u662f\u4e00\u6b21\u6027\u7684\u64cd\u4f5c\u7b26\uff0c\u4e00\u65e6\u4f60\u904d\u5386\u4e86\u5217\u8868\uff0c\u65e0\u8bba\u662f\u901a\u8fc7\u8fde\u7eed\u8c03\u7528 <code>next</code> \u8fd8\u662f\u901a\u8fc7\u8c03\u7528 <code>list</code> \uff0c\u5b83\u4eec\u90fd\u6d88\u5931\u4e86\u3002\u5bf9\uff0c\u987a\u4fbf\u8bf4\u4e00\u53e5\uff0c\u4f60\u5176\u5b9e\u53ef\u4ee5\u81ea\u5df1\u5b9e\u73b0\u8fd9\u4e2a\uff0c\u4f60\u53ef\u4ee5\u7f16\u5199\u4e00\u4e2a\u51fd\u6570\uff0c\u6bcf\u6b21\u8bbf\u95ee\u4e00\u4e2a\u5143\u7d20\uff0c\u90fd\u4ece\u5217\u8868\u4e2d\u5220\u9664\u90a3\u4e2a\u5143\u7d20\uff0c\u8fd9\u672c\u8d28\u4e0a\u5c31\u662f\u8fd9\u91cc\u53d1\u751f\u7684\u4e8b\u60c5\u3002\u662f\u7684\uff0c\u6240\u4ee5\u4e00\u65e6\u4f60\u770b\u8fc7\u5217\u8868\uff0c\u8fd9\u6709\u70b9\u50cf Snapchat\uff0c\u5bf9\u5427\uff1f\u56fe\u50cf\u8fdb\u6765\uff0c\u4f60\u770b\u4e86\u4e00\u773c\uff0c\u7136\u540e\u5b83\u5c31\u6d88\u5931\u4e86\uff0c\u6ca1\u6709\u4e86\u3002</p> <p> </p> <p>John:</p> <p>\u8fd9\u592a\u7cbe\u5f69\u4e86\u3002</p> <p> </p> <p>Hany:</p> <p>\u662f\u7684\uff0c\u4f60\u5f97\u5bf9\u6211\u8fd9\u4e2a\u5e74\u9f84\u7684\u4eba\u80fd\u591f\u63d0\u5230 Snapchat \u611f\u5230\u5370\u8c61\u6df1\u523b\uff0c\u6211\u60f3\u4f60\u5e94\u8be5\u7ed9\u6211\u70b9\u4fe1\u7528\u3002</p> <p> </p> <p>John:</p> <p>\u5b8c\u7f8e\u7684 Snapchat \u6bd4\u55bb\u3002</p>"},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part2/","title":"CS61A Part 2","text":"<p> \u7ea6 22492 \u4e2a\u5b57  3213 \u884c\u4ee3\u7801  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 115 \u5206\u949f</p> \u76ee\u5f55 <ul> <li>Lecture 18 Objects</li> <li>Lecture 18 Q&amp;A</li> <li>HW 04</li> <li>Lecture 19 Inheritance</li> <li>Lecture 19 Q&amp;A</li> <li>Lab 07</li> <li>Project Ants</li> <li>Lecture 20 Representation</li> <li>Lecture 20 Q&amp;A</li> <li>Lecture 21 Composition</li> <li>HW 05</li> <li>Lecture 22 Efficiency</li> <li>Lab 08</li> <li>Lecture 23 Decomposition</li> <li>Lecture 23 Q&amp;A</li> <li>Lecture 24 Data Example</li> <li>Lecture 24 Q&amp;A</li> <li>Lab 09</li> <li>Lecture 25 Users</li> <li>Lecture 25 Q&amp;A</li> <li>Lecture 26 Ethical AI &amp; Data</li> <li>Lecture 27 Scheme</li> <li>Lecture 27  Q&amp;A</li> <li>Lab 10</li> <li>HW 06</li> <li>Lecture 28 Exception</li> <li>Lecture 28 Q&amp;A</li> <li>Lecture 29 Calculater</li> <li>Lecture 29 Q&amp;A</li> <li>HW 07</li> <li>Lab 11</li> <li>Project Scheme</li> </ul>"},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part2/#lecture-18-objects","title":"Lecture 18 Objects","text":""},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part2/#1","title":"1","text":"<p>\u5173\u4e8e class \u548c object \u4e4b\u95f4\u7684\u5173\u7cfb\u7684\u5f62\u5bb9</p> <p>Quote</p> <p>\u5173\u4e8e class \u548c object \u7684\u89e3\u91ca\uff1a</p> <ul> <li>class: A class combines (and abstracts) data and functions</li> <li>object: An object is an instantiation of a class</li> </ul>"},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part2/#2","title":"2","text":"<p>\u7c7b\u5185\u7684\u65b9\u6cd5\u5728\u7f16\u5199\u662f\uff0c\u7b2c\u4e00\u4e2a\u53c2\u6570\u987b\u662f <code>self</code> \uff0c</p> <p>\u4f46\u7c7b\u5185\u65b9\u6cd5\u5728\u88ab\u8c03\u7528\u7684\u65f6\u5019\uff0c\u4e0d\u9700\u8981\u4f20\u5165 <code>self</code> \u7684\u503c\uff0c\u6216\u8005\u8bf4 <code>self</code> \u5c31\u662f\u8c03\u7528\u65b9\u6cd5\u7684\u5b9e\u4f8b\uff0c\u6240\u4ee5\u53ea\u9700\u8981\u4f20\u5165\u4e4b\u540e\u7684\u53c2\u6570</p>"},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part2/#3","title":"3","text":"<p>python\u6709\u5185\u7f6e\u51fd\u6570\u53ef\u4ee5\u67e5\u8be2/\u8bbf\u95ee\u7c7b\u7684\u5b9e\u4f8b\u7684\u5c5e\u6027(attribute)\uff0c\u6216\u8005\u662f\u7c7b\u7684\u5c5e\u6027 (\u7c7b\u5185\u7684\u65b9\u6cd5\u7b97\u4f5c\u662f\u7c7b\u672c\u8eab\u7684\u5c5e\u6027\uff0c\u800c\u4e0d\u662f\u5177\u4f53\u5b9e\u4f8b\u7684\u5c5e\u6027)</p> <p><code>getattr()</code> \u53ef\u4ee5\u8bbf\u95ee\u5c5e\u6027\uff0c\u83b7\u53d6\u5bf9\u5e94\u7684\u503c</p> <p><code>hasatrr()</code> \u53ef\u4ee5\u770b\u662f\u5426\u6709\u67d0\u4e2a\u5c5e\u6027</p> <p>\u51fd\u6570\u7684\u7b2c\u4e00\u4e2a\u53c2\u6570\u9700\u8981\u4f20\u5165\u5b9e\u4f8b\uff0c\u7b2c\u4e8c\u4e2a\u53c2\u6570\u9700\u8981\u4f20\u5165\u8981\u67e5\u8be2\u7684\u5c5e\u6027\u7684\u5c5e\u6027\u540d(\u4ee5\u5b57\u7b26\u4e32\u4f20\u5165)</p>"},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part2/#4","title":"4","text":"<p>\u5982\u4e0a\u56fe\uff0c<code>\u7c7b\u540d.\u65b9\u6cd5\u540d</code> \u662f\u4e00\u4e2a\u51fd\u6570\uff0c\u5e76\u4e14 <code>self</code> \u53c2\u6570\u9700\u8981\u4f20\u5165\u4e1c\u897f\uff0c\u800c <code>\u5bf9\u8c61.\u65b9\u6cd5\u540d</code> \u662f\u4e00\u4e2a\u65b9\u6cd5\uff0c<code>self</code> \u4e0d\u7528\u4f20</p>"},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part2/#5","title":"5","text":"<p>\u7c7b\u5c5e\u6027</p> <p>\u5982\u4e0a\u56fe\uff0c\u5728\u7c7b\u4e2d\u8d4b\u503c\u7684\u53d8\u91cf\uff0c(\u5e94\u8be5)\u5c31\u662f\u7c7b\u7684\u5c5e\u6027(\u7c7b\u5185\u7684\u65b9\u6cd5\u4e5f\u7b97\u662f\u7c7b\u7684\u5c5e\u6027\uff0c\u7b2c3\u70b9\u6709\u63d0\u5230\u8fc7)\uff0c</p> <p>\u7c7b\u5c5e\u6027\u4e0d\u662f\u5bf9\u8c61/\u5b9e\u4f8b\u7684\u4e00\u90e8\u5206\uff0c\u800c\u662f\u7c7b\u7684\u4e00\u90e8\u5206\u3002\u6bcf\u6b21\u901a\u8fc7\u5bf9\u8c61\u6765\u8bbf\u95ee\u7c7b\u5c5e\u6027\uff0c\u8bbf\u95ee\u7684\u662f\u7c7b\u4e2d\u7684\u5c5e\u6027\uff0c\u800c\u901a\u8fc7 <code>\u5bf9\u8c61.\u5c5e\u6027\u540d</code> \u8d4b\u503c/\u66f4\u6539\u5c5e\u6027\uff0c\u5176\u5b9e\u662f\u5728\u5bf9\u8c61\u4e2d\u521b\u5efa/\u66f4\u6539\u5bf9\u5e94\u7684\u5c5e\u6027(\u6240\u4ee5\u901a\u8fc7\u5bf9\u8c61\u4fee\u6539\u201c\u7c7b\u5c5e\u6027\u201d\u4e0d\u4f1a\u66f4\u6539\u5b9e\u9645\u7684\u7c7b\u5c5e\u6027)</p>"},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part2/#lecture-18-qa","title":"Lecture 18 Q&amp;A","text":""},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part2/#1_1","title":"1","text":"<p>\u7c7b\u5c5e\u6027\u9664\u4e86\u53ef\u4ee5\u5728\u7c7b\u5185\u5b9a\u4e49\uff0c\u4e5f\u53ef\u4ee5\u5728\u7c7b\u4ee5\u5916\uff0c\u901a\u8fc7 <code>\u7c7b\u540d.\u5c5e\u6027\u540d</code> \u7684\u5f62\u5f0f\u8d4b\u503c\u53bb\u5b9a\u4e49\uff0c\u5982</p> <pre><code>class Account:\n    ...\n\nAccount.interest = 0.03\n</code></pre> <pre><code>&gt;&gt;&gt; Account.interest  0.03\n&gt;&gt;&gt; a = Account('John')\n&gt;&gt;&gt; a.interest\n0.03\n&gt;&gt;&gt; a.interest = 0.05\n&gt;&gt;&gt; a.interest\n0.05\n&gt;&gt;&gt; b = Account('Hany')\n&gt;&gt;&gt; b.interest\n0.03\n&gt;&gt;&gt; a.interest\n0.05\n&gt;&gt;&gt; a.interest = Account.interest\n&gt;&gt;&gt; a.interest\n0.03\n&gt;&gt;&gt; Account.interest = 0.04\n&gt;&gt;&gt; a.interest\n0.03\n&gt;&gt;&gt;\n</code></pre> <p>John\u7684\u8fd9\u6bb5\u4ee3\u7801\u6f14\u793a\uff0c\u663e\u793a\u4e86\u901a\u8fc7\u5bf9\u8c61\u6765\u4fee\u6539\u201c\u7c7b\u5c5e\u6027\u201d(\u6307\u76f8\u540c\u7684\u540d\u5b57)\u65f6\uff0c\u5176\u5b9e\u662f\u4fee\u6539\u7684\u662f\u5177\u4f53\u5bf9\u8c61\u4e2d\u7684\u5c5e\u6027</p> <p>\u7c7b\u548c\u5bf9\u8c61\u4e24\u8005\u5404\u81ea\u7684\u4fee\u6539\u90fd\u4e0d\u4f1a\u5f71\u54cd\u5230\u5bf9\u65b9\u7684\u5c5e\u6027</p> <p><code>del</code> \u8bed\u53e5\uff0c\u7ecf\u8fc7\u6d4b\u8bd5\uff0c\u662f\u53ef\u4ee5\u5c06\u5bf9\u8c61\u4e2d\u5df2\u6709\u7684\u5c5e\u6027\u6e05\u9664\u6389\uff0c\u4ece\u800c\u518d\u6b21\u8bbf\u95ee\u76f8\u540c\u7684\u5c5e\u6027\u540d\u65f6\uff0c\u83b7\u53d6\u5230\u7684\u662f\u7c7b\u5c5e\u6027\u7684\u503c</p> <pre><code>&gt;&gt;&gt; class Account:\n...     def __init__(self):\n...         return\n...\n&gt;&gt;&gt; Account.interest = 5\n&gt;&gt;&gt; p1 = Account()\n&gt;&gt;&gt; p1.interest\n5\n&gt;&gt;&gt; del p1.interest\nTraceback (most recent call last):\n  File \"&lt;stdin&gt;\", line 1, in &lt;module&gt;\nAttributeError: interest\n&gt;&gt;&gt; p1.interest += 2\n&gt;&gt;&gt; p1.interest\n7\n&gt;&gt;&gt; Account.interest\n5\n&gt;&gt;&gt; del p1.interest\n&gt;&gt;&gt; p1.interest\n5\n&gt;&gt;&gt; del p1.interest\nTraceback (most recent call last):\n  File \"&lt;stdin&gt;\", line 1, in &lt;module&gt;\nAttributeError: interest\n&gt;&gt;&gt;\n</code></pre>"},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part2/#2_1","title":"2","text":"<p><code>del</code> \u4e5f\u53ef\u4ee5\u5220\u9664\u5217\u8868\u4e2d\u7684\u5143\u7d20\uff0c</p> <p>\u4f46\u662fJohn\u8bf4 <code>del</code> \u4e0d\u5e38\u7528</p>"},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part2/#hw-04","title":"HW 04","text":""},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part2/#1_2","title":"1","text":"<p>Q4</p> <p>Info</p> <p>Hint: If you had the permutations of all the elements in <code>seq</code> not including the first element, how could you use that to generate the permutations of the full <code>seq</code>?</p> <p>\u8fd9\u4e2a\u63d0\u793a\u5f88\u6709\u7528\uff1a\u8003\u8651\u6bcf\u6b21\u62bd\u53bb\u5176\u4e2d\u4e00\u4e2a\u5143\u7d20\u7684\u60c5\u51b5\uff0c\u7136\u540e\u4f9d\u6b21\u9012\u5f52...</p> <p>\u4e00\u5f00\u59cb\u611f\u89c9\u80fd\u7528\u63a8\u5bfc\u5f0f\u5199\u6210\u4e00\u884c</p> <pre><code>def permutations(seq):\n    yield from [[seq[i]] + p for p in permutations(seq[:i] + seq[i + 1:]) for i in range(len(seq))]\n</code></pre> <p>\u7136\u540e\u53d1\u73b0\uff0c<code>i</code> \u53ea\u5bf9 <code>permutations(seq[:i] + seq[i + 1:])</code> \u751f\u6548\uff0c<code>[seq[i]]</code> \u4e2d <code>i</code> \u663e\u793a\u672a\u5b9a\u4e49</p> <p>\u7136\u540e\u6539\u6210</p> <pre><code>def permutations(seq):\n    for i in range(len(seq))\n        yield from [[seq[i]] + p for p in permutations(seq[:i] + seq[i + 1:])]\n</code></pre> <p>\u7136\u540e\u5728\u6d4b\u8bd5\u6587\u6863\u7684\u4e00\u4e2a\u6d4b\u8bd5\u7528\u4f8b\u4e2d\uff0c\u7528 <code>next()</code> \u4f7f\u7528\u51fd\u6570\u8fd4\u56de\u7684\u751f\u6210\u5668\uff0c\u663e\u793a <code>StopIteration</code> \uff0c</p> <p>\u601d\u8003\u4e86\u5f88\u4e45\uff0c\u53d1\u73b0\u662f\u56e0\u4e3a\uff0c\u9012\u5f52\u5230\u4e86\u6700\u540e\uff0c <code>permutations(seq[:i] + seq[i + 1:])</code> \u4f20\u5165\u7684\u662f\u7a7a\u5217\u8868\uff0c\u90a3\u4e48\u5c31\u4e0d\u80fd\u89e3\u538b\u51fa <code>p</code> \uff0c\u90a3\u4e48\u63a8\u5bfc\u5f0f\u7684\u7ed3\u679c\u5c31\u4f1a\u662f\u7a7a\u7684\u5217\u8868\uff0c\u518d\u4e00\u5c42\u5c42\u8fd4\u56de\uff0c\u6240\u4ee5\u6700\u540e\u6574\u4f53\u7684\u51fd\u6570\u8fd4\u56de\u7684\u751f\u6210\u5668\u4e2d\u6ca1\u6709\u53ef\u4ee5\u8fed\u4ee3\u7684\u5143\u7d20</p> <p>\u6240\u4ee5\u9700\u8981\u8bbe\u7f6e base case \uff0c(\u4e00\u5f00\u59cb\u4ee5\u4e3a\u4e0d\u9700\u8981\u8bbe\u7f6e\uff0c\u6216\u8005\u8bf4\u4ee5\u4e3a\u7a7a\u5217\u8868\u5c31\u53ef\u4ee5\u4f5c\u4e3a base case)</p> <pre><code>def permutations(seq):\n    if len(seq) == 1:\n        yield seq\n    else:\n        yield from [[seq[i]] + p for p in permutations(seq[:i] + seq[i + 1:])]\n</code></pre> <p>\u7136\u540e\u53d1\u73b0\uff0c\u6d4b\u8bd5\u6587\u6863\u4e2d\uff0c\u6709\u4e00\u4e2a\u4f20\u5165\u4e86\u5143\u7ec4\uff0c\u6240\u4ee5\u6211\u7a0d\u52a0\u4e86\u4fee\u6539</p> <pre><code>def permutations(seq):\n    seq = list(seq)\n    if len(seq) == 1:\n        yield seq\n    else:\n        yield from [[seq[i]] + p for p in permutations(seq[:i] + seq[i + 1:])]\n</code></pre> <p>\u540e\u9762\u53d1\u73b0\uff0c\u5176\u5b9e\u8fd9\u6837\u6539\u4e5f\u53ef\u4ee5\uff1a</p> <pre><code>def permutations(seq):\n    if len(seq) == 1:\n        yield [seq[0]]\n    else:\n        yield from [[seq[i]] + p for p in permutations(seq[:i] + seq[i + 1:])]\n</code></pre> <p>\u5728\u601d\u7d22\u5230\u5e95\u4e00\u884c\u8bed\u53e5\u5b9e\u73b0\u529f\u80fd\u662f\u5426\u53ef\u884c\u65f6\uff0c\u60f3\u5230\u4e86 <code>sum()</code> \u51fd\u6570\uff0c\u60f3\u5230\u53ef\u4ee5\u7528\u5b83\u6765\u628a\u7ed3\u679c\u5408\u5e76\u5728\u4e00\u4e2a\u5217\u8868\u4e2d</p> <pre><code>def permutations(seq):\n    yield from sum([[... for p in permutations(seq[:i] + seq[i + 1:])] for i in range(len(seq))], start=[])\n</code></pre> <p>\u7136\u540e\u60f3\u5230\u53ef\u4ee5\u628a base case \u653e\u5728 <code>sum</code> \u51fd\u6570\u5916\u9762</p> <pre><code>def permutations(seq):\n    yield from [[seq[0]]] if len(seq) == 1 else sum([[[seq[i]] + p for p in permutations(seq[:i] + seq[i + 1:])] for i in range(len(seq))], start=[])    \n</code></pre> code <pre><code>def permutations(seq):\n    \"\"\"Generates all permutations of the given sequence. Each permutation is a\n    list of the elements in SEQ in a different order. The permutations may be\n    yielded in any order.\n\n    &gt;&gt;&gt; perms = permutations([100])\n    &gt;&gt;&gt; type(perms)\n    &lt;class 'generator'&gt;\n    &gt;&gt;&gt; next(perms)\n    [100]\n    &gt;&gt;&gt; try: #this piece of code prints \"No more permutations!\" if calling next would cause an error\n    ...     next(perms)\n    ... except StopIteration:\n    ...     print('No more permutations!')\n    No more permutations!\n    &gt;&gt;&gt; sorted(permutations([1, 2, 3])) # Returns a sorted list containing elements of the generator\n    [[1, 2, 3], [1, 3, 2], [2, 1, 3], [2, 3, 1], [3, 1, 2], [3, 2, 1]]\n    &gt;&gt;&gt; sorted(permutations((10, 20, 30)))\n    [[10, 20, 30], [10, 30, 20], [20, 10, 30], [20, 30, 10], [30, 10, 20], [30, 20, 10]]\n    &gt;&gt;&gt; sorted(permutations(\"ab\"))\n    [['a', 'b'], ['b', 'a']]\n    \"\"\"\n    \"*** YOUR CODE HERE ***\"\n    # seq = list(seq)\n    # if len(seq) == 1:\n    #     yield seq\n    # else:\n    #     for i in range(len(seq)):\n    #         yield from [[seq[i]] + p for p in permutations(seq[:i] + seq[i + 1:])]\n    yield from [[seq[0]]] if len(seq) == 1 else sum([[[seq[i]] + p for p in permutations(seq[:i] + seq[i + 1:])] for i in range(len(seq))], start=[])\n</code></pre>"},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part2/#2_2","title":"2","text":"<p>Q5</p> <p>Use <code>type(value) == str</code> to test if some <code>value</code> is a string</p> <p>\u53ef\u4ee5\u4f7f\u7528 <code>type(value) == str</code> \u6765\u5224\u65ad\u4e00\u4e2a\u4e1c\u897f\u662f\u5426\u662f\u5b57\u7b26\u4e32</p> <p>\u611f\u89c9\u6211\u6700\u540e\u7b54\u6848\u4e2d\u7684\u8fd9\u4e00\u884c\u662f\u5173\u952e\u7684\u5730\u65b9\uff1a</p> <pre><code>def make_joint(with_draw, old_pass, new_pass):\n    def joint(amount, pw_input):\n        ...\n        return withdraw(amount, pw_input)  # key point\n    ...\n    return joint\n</code></pre> code <pre><code>def make_joint(withdraw, old_pass, new_pass):\n    \"\"\"Return a password-protected withdraw function that has joint access to\n    the balance of withdraw.\n\n    &gt;&gt;&gt; w = make_withdraw(100, 'hax0r')\n    &gt;&gt;&gt; w(25, 'hax0r')\n    75\n    &gt;&gt;&gt; make_joint(w, 'my', 'secret')\n    'Incorrect password'\n    &gt;&gt;&gt; j = make_joint(w, 'hax0r', 'secret')\n    &gt;&gt;&gt; w(25, 'secret')\n    'Incorrect password'\n    &gt;&gt;&gt; j(25, 'secret')\n    50\n    &gt;&gt;&gt; j(25, 'hax0r')\n    25\n    &gt;&gt;&gt; j(100, 'secret')\n    'Insufficient funds'\n\n    &gt;&gt;&gt; j2 = make_joint(j, 'secret', 'code')\n    &gt;&gt;&gt; j2(5, 'code')\n    20\n    &gt;&gt;&gt; j2(5, 'secret')\n    15\n    &gt;&gt;&gt; j2(5, 'hax0r')\n    10\n\n    &gt;&gt;&gt; j2(25, 'password')\n    'Incorrect password'\n    &gt;&gt;&gt; j2(5, 'secret')\n    \"Frozen account. Attempts: ['my', 'secret', 'password']\"\n    &gt;&gt;&gt; j(5, 'secret')\n    \"Frozen account. Attempts: ['my', 'secret', 'password']\"\n    &gt;&gt;&gt; w(5, 'hax0r')\n    \"Frozen account. Attempts: ['my', 'secret', 'password']\"\n    &gt;&gt;&gt; make_joint(w, 'hax0r', 'hello')\n    \"Frozen account. Attempts: ['my', 'secret', 'password']\"\n    \"\"\"\n    \"*** YOUR CODE HERE ***\"\n    def joint(amount, pw_input):\n        if pw_input == new_pass:\n            return withdraw(amount, old_pass)\n        else:\n            return withdraw(amount, pw_input)\n    old_result = withdraw(0, old_pass)\n    if type(old_result) == str:\n        return old_result\n    return joint\n</code></pre>"},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part2/#3_1","title":"3","text":"<p>Q6</p> code <pre><code>def remainders_generator(m):\n    \"\"\"\n    Yields m generators. The ith yielded generator yields natural numbers whose\n    remainder is i when divided by m.\n\n    &gt;&gt;&gt; import types\n    &gt;&gt;&gt; [isinstance(gen, types.GeneratorType) for gen in remainders_generator(5)]\n    [True, True, True, True, True]\n    &gt;&gt;&gt; remainders_four = remainders_generator(4)\n    &gt;&gt;&gt; for i in range(4):\n    ...     print(\"First 3 natural numbers with remainder {0} when divided by 4:\".format(i))\n    ...     gen = next(remainders_four)\n    ...     for _ in range(3):\n    ...         print(next(gen))\n    First 3 natural numbers with remainder 0 when divided by 4:\n    4\n    8\n    12\n    First 3 natural numbers with remainder 1 when divided by 4:\n    1\n    5\n    9\n    First 3 natural numbers with remainder 2 when divided by 4:\n    2\n    6\n    10\n    First 3 natural numbers with remainder 3 when divided by 4:\n    3\n    7\n    11\n    \"\"\"\n    \"*** YOUR CODE HERE ***\"\n    def helper(i):\n        # yield from [n * m + i for n in naturals()]\n        if i != 0:\n            yield i\n        for n in naturals():\n            yield n * m + i\n    yield from [helper(i) for i in range(m)]\n</code></pre>"},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part2/#lecture-19-inheritance","title":"Lecture 19 Inheritance","text":""},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part2/#1_3","title":"1","text":"<p>\u7528 \u70b9\u8868\u8fbe\u5f0f dot expression \u7ed9\u5c5e\u6027\u8d4b\u503c</p> <p>\u5982\u679c\u70b9 <code>.</code> \u5de6\u8fb9\u7684\u5bf9\u8c61\u662f\u5b9e\u4f8b\uff0c\u90a3\u4e48\u8d4b\u503c\u7684\u5c31\u662f\u5b9e\u4f8b\u7684\u5c5e\u6027\uff0c</p> <p>\u800c\u5982\u679c\u70b9 <code>.</code> \u5de6\u8fb9\u7684\u5bf9\u8c61\u662f\u7c7b\uff0c\u90a3\u4e48\u8d4b\u503c\u7684\u5c31\u662f\u7c7b\u7684\u5c5e\u6027</p> <p>\u8fd9\u5c31\u89e3\u91ca\u4e86\u4e0a\u8282\u8bfe Q&amp;A \u4e2d\u7684\u7b2c\u4e00\u70b9</p> <p>\u5e76\u4e14\uff0c\u7531\u4e8e</p> <p>Attribute assignment statement adds or modifies the attribute named ...</p> <p>\u6240\u4ee5\uff0c\u5c5e\u6027\u8d4b\u503c\u5c31\u662f\uff0c\u5982\u679c\u5b9e\u4f8b/\u7c7b\u8fd8\u6ca1\u6709\u5bf9\u5e94\u540d\u5b57\u7684\u5c5e\u6027\uff0c\u90a3\u4e48\u8d4b\u503c\u5c31\u4f1a\u6dfb\u52a0\u4e00\u4e2a\u76f8\u5bf9\u5e94\u7684\u5c5e\u6027\uff0c\u800c\u5982\u679c\u5df2\u7ecf\u5b58\u5728\u5bf9\u5e94\u540d\u5b57\u7684\u5c5e\u6027\uff0c\u90a3\u4e48\u5c31\u4f1a\u4fee\u6539\u8fd9\u4e2a\u5c5e\u6027\u7684\u503c</p>"},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part2/#2_3","title":"2","text":"<p>\u901a\u8fc7 <code>\u5b9e\u4f8b.\u5c5e\u6027</code> \uff0c\u5b9e\u9645\u4e0a\u662f\u5148\u5728\u5b9e\u4f8b\u4e2d\u5148\u67e5\u770b\u662f\u5426\u6709\u5bf9\u5e94\u7684\u5c5e\u6027\uff0c\u5982\u679c\u6709\u5c31\u8fd4\u56de\uff0c\u5982\u679c\u6ca1\u6709\u5c31\u5230\u7c7b\u4e2d\u53bb\u67e5\u770b\u662f\u5426\u6709\u5bf9\u5e94\u7684\u5c5e\u6027</p> <p></p>"},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part2/#3_2","title":"3","text":"<p>\u7ee7\u627f\u7684\u8bed\u6cd5\uff1a</p> <pre><code>class &lt;name&gt;(&lt;base class&gt;):\n    &lt;suite&gt;\n</code></pre>"},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part2/#4_1","title":"4","text":"<p>\u4e00\u4e2a\u4f7f\u7528\u7ee7\u627f\u7684\u4f8b\u5b50\uff0c\u6ca1\u60f3\u5230\u5c45\u7136\u53ef\u4ee5\u8fd9\u6837\u4f7f\u7528\u7236\u7c7b\u7684\u65b9\u6cd5 \u6765\u4fee\u6539\u6210\u4e3a\u81ea\u5df1\u7684\u65b9\u6cd5(\u60ca\u5947\u5730\u53d1\u73b0 <code>self</code> \u53c2\u6570\u539f\u6765\u662f\u8fd9\u4e48\u7528\u7684)</p>"},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part2/#5_1","title":"5","text":"<p>\u5b50\u7c7b\u4e0e\u7236\u7c7b\u7684\u5c5e\u6027\u7684\u4f7f\u7528\u5173\u7cfb\u611f\u89c9\u4e5f\u662f\u548c\u5b9e\u4f8b\u4e0e\u7c7b\u7684\u5c5e\u6027\u4f7f\u7528\u5173\u7cfb\u5f88\u50cf\uff0c\u5373\u7236\u7c7b\u7684\u5c5e\u6027\u5e76\u6ca1\u6709\u590d\u5236\u5e76\u7ed1\u5b9a\u5230\u5b50\u7c7b\u4e2d\uff0c\u800c\u662f\u5728\u4f7f\u7528\u5c5e\u6027\u65f6\uff0c\u73b0\u5728\u5b50\u7c7b\u4e2d\u67e5\u770b\uff0c\u5982\u679c\u6ca1\u6709\u5c31\u5230\u7236\u7c7b\u4e2d\u67e5\u770b(\u5982\u679c\u7236\u7c7b\u4e2d\u6ca1\u6709\u5c31\u7ee7\u7eed\u5230\u7236\u7c7b\u7684\u7236\u7c7b...)</p>"},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part2/#6","title":"6","text":"<p>John\u5728demo\u4e2d\u5c55\u793a\u4e86 <code>CheckingAccount</code> \u7684 <code>withdraw</code> \u65b9\u6cd5\u7684\u4e24\u79cd\u5199\u6cd5\uff1a</p> <ul> <li> <p>1</p> <pre><code>class CheckingAccount(Account):\n    ...\n    def withdraw(self, amount):\n        amount = amount + 1\n        if amount &gt; self.balance:\n            return 'Insufficient funds'\n        self.balance = self.balance - amount\n        return self.balance\n</code></pre> </li> <li> <p>2</p> <pre><code>class CheckingAccount(Account):\n    ...\n    withdraw_fee = 1\n    def withdraw(self, amount):\n        return Account.withdraw(self, amount + self.withdraw_fee)\n</code></pre> </li> </ul> <p>\u524d\u8005\u76f8\u6bd4\u4e8e\u540e\u8005\u6709\u4e2a\u7c7b\u4f3c\u4e8e(\u4e4b\u524d\u6570\u636e\u62bd\u8c61\u76f8\u5173\u7684\u8bfe\u7a0b\u4e2d\u63d0\u5230\u7684)\u6253\u7834\u62bd\u8c61\u7684\u754c\u9650\u7684\u95ee\u9898\uff0c\u4f1a\u5b58\u5728\u4e00\u4e2a\u9690\u60a3\uff0c\u5373\u5982\u679c\u5bf9\u7236\u7c7b\u7684\u65b9\u6cd5\u8fdb\u884c\u4fee\u6539\uff0c\u90a3\u4e48\u5b50\u7c7b\u7684\u65b9\u6cd5\u8fd8\u4f1a\u662f\u539f\u6765\u7684\u6837\u5b50\uff0c\u800c\u540e\u8005\u5982\u679c\u7236\u7c7b\u88ab\u4fee\u6539\u4e86\uff0c\u5b50\u7c7b\u4e5f\u4f1a\u8ddf\u7740\u4e00\u8d77\u4fee\u6539</p>"},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part2/#7","title":"7","text":"<p>\u5173\u4e8e\u8bbe\u8ba1\u7ee7\u627f\u7684\u65f6\u5019John\u7684\u51e0\u4e2a\u5efa\u8bae\uff1a</p> <ul> <li> <p>Don't repeat yourself; use existing implementations.</p> <p>try to avoid copying and pasting code</p> <p>\u8981\u907f\u514d\u76f4\u63a5\u590d\u5236\u4ee3\u7801\uff0c\u800c\u662f\u4f7f\u7528\u5df2\u7ecf\u5b9e\u73b0\u4e86\u7684(\u7236\u7c7b\u7684)\u65b9\u6cd5\u6216\u51fd\u6570</p> </li> <li> <p>Attributes that have been overridden are still accessible via class objects.</p> <p>\u610f\u601d\u5c31\u662f\uff0c\u7236\u7c7b\u4e2d\u88ab\u5b50\u7c7b\u8986\u5199\u4e86\u7684\u5c5e\u6027\uff0c\u53ef\u4ee5\u901a\u8fc7\u7c7b\u540d\u53bb\u8bbf\u95ee</p> </li> <li> <p>Look up attributes on instances whenever possible.</p> <p>\u610f\u601d\u662f\uff0c\u5c3d\u53ef\u80fd\u4f7f\u7528\u5b9e\u4f8b\u7684\u5c5e\u6027(\u503c\u6216\u8005\u65b9\u6cd5)\uff0c(\u800c\u4e0d\u662f\u7c7b\u7684)</p> </li> </ul>"},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part2/#8","title":"8","text":"<p>Quote</p> <p>Inheritance and Composition</p> <p>Object-oriented programming shines when we adopt the metaphor</p> <ul> <li> <p>Inheritance is best for representing is-a relationships.</p> <p>E.g., a checking account is a specific type of account.</p> <p>So, CheckingAccount inherits from Account.</p> </li> <li> <p>Composition is best for representing has-a relationships.</p> <p>E.g., a bank has a collection of bank accounts it manages.</p> <p>So, A bank has a list of accounts as an attribute.</p> </li> </ul> <p>\u7ee7\u627f\u548c\u6784\u6210 (Inheritance and Composition)</p> <p>\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b(\u7684\u601d\u60f3/\u6982\u5ff5)\u5f88\u9002\u5408\u7c7b\u6bd4\u73b0\u5b9e\u4e2d\u7684\u4e8b\u7269</p> <ul> <li> <p>\u7ee7\u627f\u9002\u5408\u8868\u793a \u662f/\u5c5e\u4e8e \u7684\u5173\u7cfb\uff0c\u6bd4\u5982\uff1a\u652f\u7968\u8d26\u6237\u662f\u94f6\u884c\u8d26\u6237\u7684\u4e00\u79cd</p> <p>\u6240\u4ee5 \u652f\u7968\u8d26\u6237 \u4ece \u94f6\u884c\u8d26\u6237 \u7ee7\u627f</p> </li> <li> <p>\u6784\u6210\u9002\u5408\u8868\u793a \u6709 \u7684\u5173\u7cfb\uff0c\u6bd4\u5982\uff1a\u94f6\u884c\u6709\u5f88\u591a\u94f6\u884c\u8d26\u6237</p> <p>\u6240\u4ee5\uff0c\u94f6\u884c \u6709 \u4e00\u7cfb\u5217 \u94f6\u884c\u8d26\u6237 \u4f5c\u4e3a\u5b83\u7684\u5c5e\u6027</p> </li> </ul>"},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part2/#9","title":"9","text":"<p>\u5173\u4e8e\u7b2c\u4e00\u4e2a\u8bed\u53e5 <code>&gt;&gt;&gt; C(2).n</code> \u521b\u5efa\u51fa\u7684\u53f3\u4e0b\u89d2\u7684 <code>C</code> \u7c7b\u7684\u5b9e\u4f8b\u4e2d\u4f1a\u5b58\u5728 <code>z</code> \u7684\u7591\u60d1\u548c\u7406\u89e3</p> <p>\u7531\u4e8e\u5728\u521b\u5efa <code>C</code> \u7c7b\u7684\u65f6\u5019\uff0c\u4f1a\u8c03\u7528\u521d\u59cb\u5316\u51fd\u6570 <code>__init__()</code> \uff0c\u800c <code>C</code> \u7c7b\u672c\u8eab\u7c7b\u4e2d\u53c8\u6ca1\u6709\u521d\u59cb\u5316\u51fd\u6570\uff0c\u6240\u4ee5==\u4f1a\u8c03\u7528\u7236\u7c7b\u4e2d\u7684\u521d\u59cb\u5316\u51fd\u6570\uff0c\u6545\u4f1a\u8c03\u7528 <code>B</code> \u4e2d\u7684 <code>__init__()</code> \uff0c\u800c\u503c\u5f97\u6ce8\u610f\u7684\u4e00\u70b9\uff0c\u7531\u4e8e\u662f <code>C</code> \u7684\u5b9e\u4f8b\u8c03\u7528\u521d\u59cb\u5316\u51fd\u6570\uff0c\u6240\u4ee5 ==<code>self</code> \u88ab\u4f20\u5165\u7684\u662f <code>C</code> \u7684\u5b9e\u4f8b\u672c\u8eab\uff0c\u56e0\u6b64 <code>self.z = self.f(y)</code> \u8fd9\u4e00\u884c\u8bed\u53e5\u4e2d\uff0c\u6267\u884c\u7684 <code>f()</code> \u51fd\u6570\u662f <code>C</code> \u7c7b\u4e2d\u7684 <code>f()</code> \u65b9\u6cd5\uff0c\u6240\u4ee5\u6700\u540e\u7684\u7ed3\u679c\u662f\uff0c\u90a3\u4e2a\u5b9e\u4f8b\u4e2d\u4f1a\u5b58\u5728\u4e00\u4e2a \u503c\u4e3a2\u7684 <code>z</code> </p> <p>\u6240\u4ee5\u5bf9\u4e8epython\u4e2d\u7684 <code>self</code> \u53c2\u6570\u6709\u4e86\u65b0\u7684\u8ba4\u77e5\uff0c\u5373\u53ef\u4ee5\u4f7f\u7528\u7236\u7c7b\u7684\u65b9\u6cd5\uff0c\u800c <code>self</code> \u53c2\u6570\u4f20\u5165\u7684\u5374\u662f\u5b50\u7c7b\u7684\u5b9e\u4f8b(\u6240\u4ee5\u8981\u6ce8\u610f\u7531\u4e8e\u662f\u5b50\u7c7b\u7684\u5b9e\u4f8b\uff0c\u6709\u53ef\u80fd <code>self.xxx</code> \u4e4b\u7c7b\u7684self\u7684\u70b9\u8868\u8fbe\u5f0f\u4ee3\u7801\uff0c\u5f97\u5230\u7684\u6548\u679c\u4f1a\u548c\u4e00\u822c\u7684\u7236\u7c7b\u5b9e\u4f8b\u4e0d\u4e00\u6837\uff0c\u6bd4\u5982\u4e0a\u56fe\u4e2d <code>B</code> \u7684\u521d\u59cb\u5316\u51fd\u6570\u5982\u679c\u4f20\u5165\u7684\u662f <code>B</code> \u7c7b\u7684\u5b9e\u4f8b\uff0c\u90a3\u4e48\u5f88\u53ef\u80fd <code>self.f(y)</code> \u8c03\u7528\u7684\u662f <code>A</code> \u7c7b\u4e2d\u7684\u65b9\u6cd5)</p> <p>\u5728\u7b2c\u4e09\u4e2a\u8bed\u53e5\u4e2d\u4e5f\u51fa\u73b0\u4e86\u7c7b\u4f3c\u7684\u60c5\u51b5(\u4f46\u662f\u8fd9\u7b2c\u4e09\u4e2a\u8bed\u53e5\u6781\u5176\u5730\u7ed5)</p> <p><code>b = B(1)</code> \u4e2d\uff0c\u5b9e\u4f8b\u4e2d\u7684 <code>z</code> \u7531\u4e8e\u8c03\u7528\u4e86 <code>A</code> \u4e2d\u7684 <code>f</code> \u65b9\u6cd5\uff0c\u6240\u4ee5\u6307\u5411\u4e86\u53e6\u4e00\u4e2a <code>B</code> \u7c7b\u5b9e\u4f8b\uff0c\u800c\u65b0\u7684\u5b9e\u4f8b\u521d\u59cb\u5316\u51fd\u6570\u4e2d <code>z</code> \u53c8\u6307\u5411\u7684\u662f\u4e00\u4e2a <code>C</code> \u7c7b\u7684\u5b9e\u4f8b\uff0c\u800c <code>C</code> \u7c7b\u5b9e\u4f8b\u5728\u521d\u59cb\u5316\u65f6\uff0c\u53c8\u9700\u8981\u8c03\u7528 <code>B</code> \u7684 <code>__init__()</code> \uff0c\u7136\u540e\u5c31\u8c03\u7528\u4e86 <code>C</code> \u7c7b\u7684 <code>f</code> \u65b9\u6cd5(\u6211\u672c\u6765\u4ee5\u4e3a\u4f1a\u4e00\u76f4 <code>B</code> \u7c7b <code>C</code> \u7c7b\u6765\u56de\u4e00\u76f4\u6307\u4e0b\u53bb)</p>"},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part2/#10","title":"10","text":"<p>\u4e00\u4e2a\u7c7b\u53ef\u4ee5\u7ee7\u627f\u591a\u4e2a\u7236\u7c7b\uff0c\u5982</p> <pre><code>class AsSeenOnTVAccount(CheckingAccount, SavingsAccount):\n    def __init__(self, account_holder):\n        self.holder = account_holder\n        self.balance = 1\n</code></pre>"},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part2/#11","title":"11","text":"<p>now it's hard for me to show you why this (multiple inheritance tends to make programs complicated) is the case, so instead I'll just show you an analogy about human inheritance.</p> <p></p> <p>\u5728\u4f7f\u7528\u591a\u91cd\u7ee7\u627f\u7684\u65f6\u5019\uff0c\u9664\u975e\u662f\u771f\u7684\u5f88\u91cd\u8981\u7684\u5173\u7cfb\uff0c\u6216\u8005\u5341\u5206\u5fc5\u987b\uff0c\u5728\u4f7f\u7528\u65f6\u8981\u5f88\u6ce8\u610f\uff0c\u56e0\u4e3a\u591a\u91cd\u7ee7\u627f\u4f1a\u4f7f\u7a0b\u5e8f\u53d8\u5f97\u590d\u6742\uff0c\u867d\u7136\u5f88\u96be\u4e3e\u51fa\u4f8b\u5b50\uff0c\u4f46\u662f\u53ef\u4ee5\u53c2\u8003\u73b0\u5b9e\u4e2d(\u751f\u7269\u4e0a)\u7684\u7ee7\u627f</p>"},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part2/#lecture-19-qa","title":"Lecture 19 Q&amp;A","text":""},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part2/#1_4","title":"1","text":"<p><code>type()</code> \u51fd\u6570\u5982\u679c\u8fd4\u56de\u7c7b\uff0c\u53ef\u4ee5\u901a\u8fc7\u5b83\u7684\u8fd4\u56de\u503c\u6765\u8bbf\u95ee\u7c7b\u5185\u7684\u5c5e\u6027\uff0c\u5982</p> <pre><code>class Account:\n    def __init__(self, account_holder):\n        self.holderr = account_holder\n        self.balance = 0\n        \n    def deposit(self, amount):\n        self.balance = self.balance = amount\n        return self.balance\n</code></pre> <pre><code>&gt;&gt;&gt; a = Account('John')\n&gt;&gt;&gt; type(a).deposit(a, 100)\n100\n</code></pre> <p>\u4f46\u662f Hany \u8bf4\u5e94\u8be5\u907f\u514d\u4f7f\u7528\u8fd9\u79cd\u5199\u6cd5\uff0c\u56e0\u4e3a\u5927\u591a\u6570\u4eba\u4e0d\u4f1a\u600e\u4e48\u5199</p>"},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part2/#2_4","title":"2","text":"<p>\u6839\u636e John \u7684\u89e3\u91ca\uff0c<code>super()</code> \u7684\u4f5c\u7528\u662f\uff0c\u4e0d\u5728\u672c\u7c7b\u4e2d\u5bfb\u627e <code>.</code> \u4e4b\u540e\u7684\u4e1c\u897f\uff0c\u800c\u662f\u5728\u4e0a\u4e00\u7ea7\u7236\u7c7b\u4e2d\u5bfb\u627e</p> <p>\u5e76\u4e14\u5728\u4f7f\u7528\u7236\u7c7b\u7684\u65b9\u6cd5\u65f6\uff0c\u4f1a\u5c06\u5b9e\u4f8b\u81ea\u52a8\u4f20\u5165 <code>self</code> \u53c2\u6570\uff0c\u548c\u76f4\u63a5 <code>\u7236\u7c7b\u540d.\u65b9\u6cd5</code> \u7684\u4f7f\u7528\u5f62\u5f0f\u7565\u6709\u4e0d\u540c</p>"},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part2/#3_3","title":"3","text":"<p>\u6709\u591a\u7ee7\u627f\u7684\u7c7b\u5728\u4f7f\u7528\u672c\u7c7b\u4e2d\u6ca1\u6709\u7684\u65b9\u6cd5\u65f6\uff0c\u662f\u5148\u5728\u4e0a\u4e00\u7ea7\u7236\u7c7b\u4e2d\u6309\u987a\u5e8f\u5bfb\u627e\uff0c\u6bd4\u5982\u4e0a\u56fe\uff0c\u5982\u679c\u5728 <code>CheckingAccount</code> \u4e2d\u6ca1\u627e\u5230\u5bf9\u5e94\u7684\u65b9\u6cd5\uff0c\u90a3\u4e48\u4e0d\u4f1a\u5728 <code>CheckingAccount</code> \u7684\u7236\u7c7b( <code>Acount</code> \u7c7b)\u4e2d\u5bfb\u627e\uff0c\u800c\u662f\u5728 <code>SavingAccount</code> \u7c7b\u4e2d\u5bfb\u627e\uff0c\u5982\u679c\u6240\u6709\u7684\u4e0a\u4e00\u7ea7\u7236\u7c7b\u4e2d\u90fd\u6ca1\u627e\u5230\u5bf9\u5e94\u7684\u65b9\u6cd5\uff0c\u90a3\u4e48\u624d\u4f1a\u5728\u4e0a\u4e24\u7ea7\u7236\u7c7b\u4e2d\u5bfb\u627e(\u5373\u7236\u7c7b\u7684\u7236\u7c7b)</p>"},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part2/#4_2","title":"4","text":"<p>Quote</p> <p>John:</p> <p>well i'd say at the outset that it's often the case that tracing through, uh, tree recursion is not something that humans can tolerate, like it's, it's just really messy sometimes, um, so the right answer is to shift the way in which you approach understanding, uh, implementation to get away from tracing, and instead just treat the recursive calls as abstractions, they do the thing that they're supposed to do, but how they do them is not your problem, and then like you can put it together. but this is not, not like obvious or easy so, um, so maybe we can talk about that with a particular example. so maybe while i read this maybe hany can, uh, say whether that makes sense to him.</p> <p> </p> <p>Hany:</p> <p>i i'll add one more thing to it, so john's absolutely right that tracing tree recursion is very hard, you have to hold a lot in your memory. um, so one way to fix it is as he just said, is to just think differently about it. it's not about tracing, it's about thinking about the fundamental nature of, um, the, the functions and they just do what you want them to do, and the other is to just use toy examples.</p> <p>John\uff1a</p> <p>\u55ef\uff0c\u6211\u9996\u5148\u8981\u8bf4\u7684\u662f\uff0c\u5f80\u5f80\u60c5\u51b5\u662f\uff0c\u8ffd\u8e2a\u6811\u5f62\u9012\u5f52\u5bf9\u4eba\u7c7b\u6765\u8bf4\u662f\u65e0\u6cd5\u5fcd\u53d7\u7684\uff0c\u5c31\u50cf\u6709\u65f6\u5019\u975e\u5e38\u6df7\u4e71\u4e00\u6837\u3002\u6240\u4ee5\u6b63\u786e\u7684\u7b54\u6848\u662f\u6539\u53d8\u4f60\u7406\u89e3\u5b9e\u73b0\u7684\u65b9\u5f0f\uff0c\u6446\u8131\u8ffd\u8e2a\uff0c\u800c\u662f\u5c06\u9012\u5f52\u8c03\u7528\u89c6\u4e3a\u62bd\u8c61\uff0c\u5b83\u4eec\u6267\u884c\u5b83\u4eec\u5e94\u8be5\u6267\u884c\u7684\u4efb\u52a1\uff0c\u4f46\u5b83\u4eec\u5982\u4f55\u6267\u884c\u4e0d\u662f\u4f60\u7684\u95ee\u9898\uff0c\u7136\u540e\u4f60\u53ef\u4ee5\u5c06\u5b83\u4eec\u7ec4\u5408\u8d77\u6765\u3002\u4f46\u8fd9\u5e76\u4e0d\u660e\u663e\u6216\u5bb9\u6613\uff0c\u6240\u4ee5\u4e5f\u8bb8\u6211\u4eec\u53ef\u4ee5\u7528\u4e00\u4e2a\u5177\u4f53\u7684\u4f8b\u5b50\u6765\u8ba8\u8bba\u4e00\u4e0b\u3002\u6240\u4ee5\u4e5f\u8bb8\u5728\u6211\u9605\u8bfb\u8fd9\u4e2a\u7684\u65f6\u5019\uff0cHany\u53ef\u4ee5\u8bf4\u4e00\u4e0b\u8fd9\u662f\u5426\u6709\u610f\u4e49\u3002</p> <p> </p> <p>Hany\uff1a</p> <p>\u6211\u8981\u8865\u5145\u4e00\u70b9\uff0cJohn\u8bf4\u5f97\u5bf9\uff0c\u8ffd\u8e2a\u6811\u5f62\u9012\u5f52\u975e\u5e38\u56f0\u96be\uff0c\u4f60\u5fc5\u987b\u8bb0\u4f4f\u5f88\u591a\u4e1c\u897f\u3002\u6240\u4ee5\u89e3\u51b3\u7684\u4e00\u79cd\u65b9\u6cd5\u5c31\u50cf\u4ed6\u521a\u624d\u8bf4\u7684\u90a3\u6837\uff0c\u53ea\u662f\u4ee5\u4e0d\u540c\u7684\u65b9\u5f0f\u601d\u8003\u3002\u8fd9\u4e0d\u662f\u5173\u4e8e\u8ffd\u8e2a\uff0c\u800c\u662f\u601d\u8003\u51fd\u6570\u7684\u57fa\u672c\u6027\u8d28\uff0c\u5b83\u4eec\u53ea\u662f\u6267\u884c\u4f60\u60f3\u8981\u5b83\u4eec\u6267\u884c\u7684\u4efb\u52a1\uff0c\u53e6\u4e00\u79cd\u65b9\u6cd5\u662f\u4f7f\u7528\u7b80\u5355\u7684\u793a\u4f8b\u3002</p> <p>John \u548c Hany \u8bf4\u5230\u5bf9\u6811\u5f62\u9012\u5f52\u8ffd\u8e2a\u5f88\u96be\uff0c\u6240\u4ee5\u4e0d\u5e94\u8be5\u53bb\u8ffd\u8e2a\u9012\u5f52(\u6211\u8ba4\u4e3a\u8fd9\u91cc\u53ef\u4ee5\u7406\u89e3\u4e3a\uff0c\u5f04\u6e05\u695a\u9012\u5f52\u7684\u6bcf\u4e00\u6b65\u7684\u5177\u4f53\u6548\u679c)\uff0c\u800c\u662f\u6362\u4e00\u79cd\u60f3\u6cd5\u53bb\u601d\u8003(\u5373\u4e4b\u524d\u603b\u7ed3\u7684\u5047\u5b9a\u51fd\u6570\u80fd\u8fd4\u56de\u6b63\u786e/\u6240\u9700\u7684\u503c)</p>"},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part2/#5_2","title":"5","text":"<p>John \u89e3\u7b54 Lab04 \u4e2d\u7684 Q5 \uff0c</p> <p>\u63d0\u5230\uff0c\u5728\u89e3\u7b54/\u6784\u5efa\u9012\u5f52\u65f6\uff0c\u53ef\u4ee5\u5148\u62ff\u7b80\u5355\u7684\u4f8b\u5b50\u6765\u8fdb\u884c\u601d\u8003\uff0c\u6bd4\u5982 <code>n = 123 ; t = 2</code> (\u800c\u4e0d\u8981\u4e0a\u6765\u5c31\u5c1d\u8bd5\u5f04\u6e05\u695a 5 \u4f4d\u6570)\uff0c\u7136\u540e\u901a\u8fc7\u5206\u6790\u7b80\u5355\u7684\u4f8b\u5b50\uff0c\u601d\u8def\u5c31\u4f1a\u5f88\u6e05\u6670</p>"},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part2/#lab-07","title":"Lab 07","text":""},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part2/#1_5","title":"1","text":"<p>\u5728\u505aQ1\u65f6\uff0c\u672c\u6765\u4f7f\u7528</p> <pre><code>yield from [x * multiplier for x in it]\n</code></pre> <p>\u4f46\u662f\u5f53 <code>it</code> \u662f\u80fd\u65e0\u7a77\u8fed\u4ee3\u7684\u751f\u6210\u5668\u65f6(\u5982\u8981\u6d4b\u8bd5\u7684 <code>naturals()</code> )\uff0c\u5c31\u4f1a\u8d85\u65f6\uff0c</p> <p>\u4f46\u6211\u8be2\u95ee chatgpt \uff0c\u5b83\u63d0\u4f9b\u7684\u4ee3\u7801\u4e0e\u6211\u4e0a\u9762\u7684\u4ee3\u7801\u5f88\u50cf\uff0c\u53ea\u662f\u628a\u5217\u8868\u6362\u6210\u4e86\u5143\u7ec4\uff0c\u7136\u540e\u6d4b\u8bd5\u7adf\u7136\u4e0d\u4f1a\u8d85\u65f6\uff0c</p> <p>\u6240\u4ee5\u4f7f\u7528 <code>yield from</code> \u65f6\u53ef\u4ee5\u4f7f\u7528\u5143\u7ec4\u6765\u907f\u514d\u53ef\u4ee5\u65e0\u7a77\u8fed\u4ee3\u7684\u8fed\u4ee3\u5668\u9020\u6210\u7684\u8d85\u65f6</p> <p>\u4e0b\u9762\u662f\u8be2\u95ee chatgpt \u4e3a\u4ec0\u4e48\u4f1a\u8fd9\u6837\u7684\u539f\u56e0\u7684\u8bb0\u5f55</p> chat log <p>You:</p> <p>Generators also allow us to represent infinite sequences, such as the sequence of natural numbers (1, 2, ...) shown in the function below!</p> <pre><code>def naturals():\n    \"\"\"A generator function that yields the infinite sequence of natural\n    numbers, starting at 1.\n\n    &gt;&gt;&gt; m = naturals()\n    &gt;&gt;&gt; type(m)\n    &lt;class 'generator'&gt;\n    &gt;&gt;&gt; [next(m) for _ in range(10)]\n    [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\n    \"\"\"\n    i = 1\n    while True:\n        yield i\n        i += 1\n</code></pre> <p>Q1: Scale</p> <p>Implement the generator function <code>scale(it, multiplier)</code>, which yields elements of the given iterable <code>it</code>, scaled by <code>multiplier</code>. As an extra challenge, try writing this function using a <code>yield from</code> statement!</p> <pre><code>def scale(it, multiplier):\n    \"\"\"Yield elements of the iterable it scaled by a number multiplier.\n\n    &gt;&gt;&gt; m = scale([1, 5, 2], 5)\n    &gt;&gt;&gt; type(m)\n    &lt;class 'generator'&gt;\n    &gt;&gt;&gt; list(m)\n    [5, 25, 10]\n\n    &gt;&gt;&gt; m = scale(naturals(), 2)\n    &gt;&gt;&gt; [next(m) for _ in range(5)]\n    [2, 4, 6, 8, 10]\n    \"\"\"\n    \"*** YOUR CODE HERE ***\"\n</code></pre> <p> </p> <p>ChatGPT:</p> <p>Certainly! You can implement the <code>scale</code> generator function using a <code>yield from</code> statement. Here's one way to do it:</p> <pre><code>def scale(it, multiplier):\n    \"\"\"Yield elements of the iterable it scaled by a number multiplier.\"\"\"\n    yield from (element * multiplier for element in it)\n\n# Test cases\nm = scale([1, 5, 2], 5)\nprint(type(m))  # &lt;class 'generator'&gt;\nprint(list(m))  # [5, 25, 10]\n\nm = scale(naturals(), 2)\nprint([next(m) for _ in range(5)])  # [2, 4, 6, 8, 10]\n</code></pre> <p>In this implementation, the <code>scale</code> function uses a generator expression with <code>yield from</code> to yield elements of the iterable <code>it</code> scaled by the given <code>multiplier</code>. The generator expression <code>(element * multiplier for element in it)</code> generates scaled elements one by one, and <code>yield from</code> is used to yield each element from this expression.</p> <p> </p> <p>You:</p> <p>why timeout by using list type while not by using tuple type?</p> <p> </p> <p>ChatGPT:</p> <p>If you are experiencing a timeout when using a list type but not when using a tuple type, it might be due to the differences in how lists and tuples are handled in Python. Lists are mutable, meaning their elements can be changed after the list is created, while tuples are immutable, and their elements cannot be changed.</p> <p>When you use a list comprehension with a generator expression and <code>yield from</code>, the entire list needs to be generated in memory before any elements can be yielded. This might be problematic for an infinite generator, as attempting to generate an infinite list in memory can lead to a timeout.</p> <p>On the other hand, when using a tuple, it is immutable. Python can optimize and generate each element of the tuple on-the-fly without needing to create an entire list in memory. This can be more efficient, especially when dealing with infinite sequences.</p> <p>Here's an example to illustrate the difference:</p> <pre><code># Using a list\ndef scale_list(it, multiplier):\n    yield from [x * multiplier for x in it]\n\n# Using a tuple\ndef scale_tuple(it, multiplier):\n    yield from (x * multiplier for x in it)\n\n# Test cases\nm_list = scale_list(naturals(), 2)\n# This may lead to a timeout because it attempts to generate an infinite list in memory.\n# print(list(m_list))\n\nm_tuple = scale_tuple(naturals(), 2)\n# This is more efficient because it generates each element on-the-fly without creating an entire list.\nprint([next(m_tuple) for _ in range(5)])\n</code></pre> <p>In the commented-out line for <code>scale_list</code>, attempting to convert an infinite list to a list object might cause the program to run out of memory or take a very long time, leading to a timeout. Using a tuple can avoid this issue because it doesn't try to create an entire list in memory.</p> <p> </p> <p>You:</p> <p>translate to chinese</p> <p> </p> <p>ChatGPT:</p> <p>\u5982\u679c\u4f60\u5728\u4f7f\u7528\u5217\u8868\u7c7b\u578b\u65f6\u9047\u5230\u8d85\u65f6\u95ee\u9898\uff0c\u4f46\u5728\u4f7f\u7528\u5143\u7ec4\u7c7b\u578b\u65f6\u5374\u6ca1\u6709\uff0c\u8fd9\u53ef\u80fd\u662f\u7531\u4e8e Python \u5904\u7406\u5217\u8868\u548c\u5143\u7ec4\u7684\u65b9\u5f0f\u4e0d\u540c\u3002\u5217\u8868\u662f\u53ef\u53d8\u7684\uff0c\u610f\u5473\u7740\u5b83\u4eec\u7684\u5143\u7d20\u5728\u5217\u8868\u521b\u5efa\u540e\u53ef\u4ee5\u88ab\u4fee\u6539\uff0c\u800c\u5143\u7ec4\u662f\u4e0d\u53ef\u53d8\u7684\uff0c\u5b83\u4eec\u7684\u5143\u7d20\u4e0d\u80fd\u88ab\u4fee\u6539\u3002</p> <p>\u5f53\u4f60\u4f7f\u7528\u5217\u8868\u89e3\u6790\u4e0e\u751f\u6210\u5668\u8868\u8fbe\u5f0f\u4ee5\u53ca <code>yield from</code> \u65f6\uff0c\u5728\u4ea7\u751f\u4efb\u4f55\u5143\u7d20\u4e4b\u524d\u9700\u8981\u5728\u5185\u5b58\u4e2d\u751f\u6210\u6574\u4e2a\u5217\u8868\u3002\u5bf9\u4e8e\u65e0\u9650\u751f\u6210\u5668\uff0c\u5c1d\u8bd5\u5728\u5185\u5b58\u4e2d\u751f\u6210\u65e0\u9650\u5217\u8868\u53ef\u80fd\u5bfc\u81f4\u8d85\u65f6\u3002</p> <p>\u53e6\u4e00\u65b9\u9762\uff0c\u4f7f\u7528\u5143\u7ec4\u662f\u4e0d\u53ef\u53d8\u7684\u3002Python \u53ef\u4ee5\u4f18\u5316\u5e76\u5728\u9700\u8981\u65f6\u5373\u65f6\u751f\u6210\u5143\u7ec4\u7684\u6bcf\u4e2a\u5143\u7d20\uff0c\u800c\u65e0\u9700\u521b\u5efa\u6574\u4e2a\u5217\u8868\u5728\u5185\u5b58\u4e2d\u3002\u8fd9\u53ef\u80fd\u66f4\u6709\u6548\u7387\uff0c\u5c24\u5176\u662f\u5728\u5904\u7406\u65e0\u9650\u5e8f\u5217\u65f6\u3002</p> <p>\u4ee5\u4e0b\u662f\u4e00\u4e2a\u793a\u4f8b\uff0c\u7528\u4ee5\u8bf4\u660e\u8fd9\u79cd\u5dee\u5f02\uff1a</p> <pre><code># \u4f7f\u7528\u5217\u8868\ndef scale_list(it, multiplier):\n    yield from [x * multiplier for x in it]\n\n# \u4f7f\u7528\u5143\u7ec4\ndef scale_tuple(it, multiplier):\n    yield from (x * multiplier for x in it)\n\n# \u6d4b\u8bd5\u6848\u4f8b\nm_list = scale_list(naturals(), 2)\n# \u8fd9\u53ef\u80fd\u5bfc\u81f4\u8d85\u65f6\uff0c\u56e0\u4e3a\u5b83\u8bd5\u56fe\u5728\u5185\u5b58\u4e2d\u751f\u6210\u4e00\u4e2a\u65e0\u9650\u5217\u8868\u3002\n# print(list(m_list))\n\nm_tuple = scale_tuple(naturals(), 2)\n# \u8fd9\u66f4\u52a0\u6709\u6548\uff0c\u56e0\u4e3a\u5b83\u5728\u4e0d\u521b\u5efa\u6574\u4e2a\u5217\u8868\u7684\u60c5\u51b5\u4e0b\u5373\u65f6\u751f\u6210\u6bcf\u4e2a\u5143\u7d20\u3002\nprint([next(m_tuple) for _ in range(5)])\n</code></pre> <p>\u5728\u6ce8\u91ca\u6389\u7684 <code>scale_list</code> \u7684\u884c\u4e2d\uff0c\u8bd5\u56fe\u5c06\u65e0\u9650\u5217\u8868\u8f6c\u6362\u4e3a\u5217\u8868\u5bf9\u8c61\u53ef\u80fd\u5bfc\u81f4\u7a0b\u5e8f\u8017\u5c3d\u5185\u5b58\u6216\u82b1\u8d39\u5f88\u957f\u65f6\u95f4\uff0c\u4ece\u800c\u5bfc\u81f4\u8d85\u65f6\u3002\u4f7f\u7528\u5143\u7ec4\u53ef\u4ee5\u907f\u514d\u8fd9\u4e2a\u95ee\u9898\uff0c\u56e0\u4e3a\u5b83\u4e0d\u4f1a\u5c1d\u8bd5\u5728\u5185\u5b58\u4e2d\u521b\u5efa\u6574\u4e2a\u5217\u8868\u3002</p>"},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part2/#2_5","title":"2","text":"<p>Q5\u4e2d\uff0c\u6211\u5229\u7528\u5217\u8868\u7684 <code>.pop()</code> \u65b9\u6cd5\u6765\u5b9e\u73b0 <code>Player.play()</code> \u65b9\u6cd5\uff0c</p> <p>\u5728\u4e4b\u524d\u8bfe\u7a0b\u89c6\u9891\u91cc\u4ecb\u7ecd\u5217\u8868\u7684 <code>.pop()</code> \u65b9\u6cd5\u662f\u53ea\u80fd\u79fb\u9664\u5e76\u8fd4\u56de\u5217\u8868\u7684\u6700\u540e\u4e00\u4e2a\u5143\u7d20\uff0c\u4f46\u4e0a\u7f51\u67e5\u8be2\u53d1\u73b0 <code>.pop()</code> \u65b9\u6cd5\u53ea\u662f\u9ed8\u8ba4\u6700\u540e\u4e00\u4e2a\uff0c\u8fd8\u53ef\u4ee5\u4f20\u5165\u4e0b\u6807\u6307\u5b9a\u8981\u79fb\u9664\u5e76\u8fd4\u56de\u7684\u5143\u7d20\uff0c\u4f8b\u5982</p> <pre><code>&gt;&gt;&gt; list = [1, 2, 3, 4, 5]\n&gt;&gt;&gt; list.pop()\n5\n&gt;&gt;&gt; list\n[1, 2, 3, 4]\n&gt;&gt;&gt; list.pop(1)\n2\n&gt;&gt;&gt; list\n[1, 3, 4]\n</code></pre>"},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part2/#project-ants","title":"Project Ants","text":""},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part2/#1_6","title":"1","text":"<p>Problem 4 \u4e2d\uff0c\u6709\u4e00\u70b9\u503c\u5f97\u6ce8\u610f</p> <p>Quote</p> <p>A good way to approach the implementation to <code>ShortThrower</code> and <code>LongThrower</code> is to have it inherit the <code>nearest_bee</code> method from the base <code>ThrowerAnt</code> class. The logic of choosing which bee a thrower ant will attack is essentially the same, except the <code>ShortThrower</code> and <code>LongThrower</code> ants have maximum and minimum ranges, respectively.</p> <p>To implement these behaviors, you will need to modify the <code>nearest_bee</code> method to reference <code>min_range</code> and <code>max_range</code> attributes, and only return a bee that is in range.</p> <p>\u8fd9\u9898\u4e2d\u8981\u6c42\u5b9e\u73b0\u4e24\u4e2a \u8682\u8681\u5c04\u624b \u7684\u5b50\u7c7b\u7684\u5bfb\u627e\u5c04\u51fb\u76ee\u6807\u7684\u65b9\u6cd5\uff0c\u6211\u672c\u6765\u5dee\u70b9\u5c31\u662f\u60f3\u7684\u5728\u539f\u6709\u7684\u4ee3\u7801\u4e0a\u8fdb\u884c\u4fee\u6539\uff0c\u770b\u5230\u4e0a\u9762\u8fd9\u6bb5\u8bdd\uff0c\u6211\u624d\u60f3\u5230\u6709\u66f4\u597d\u7684\u65b9\u6cd5--\u53bb\u4f7f\u7528\u7236\u7c7b\u7684\u65b9\u6cd5\uff0c</p> <p>\u6559\u7a0b\u4e2d\u5efa\u8bae\u7684\u65b9\u6cd5\u662f\uff0c\u5728\u7236\u7c7b\u4e2d\u6dfb\u52a0\u5c5e\u6027\uff0c\u518d\u5728\u5b50\u7c7b\u4e2d(\u6709\u9700\u8981\u7684\u8bdd)\u8fdb\u884c\u8986\u5199</p> <p>\u6700\u540e\u53d1\u73b0\u91c7\u7528\u6559\u7a0b\u4e2d\u7684\u601d\u8def\uff0c\u5c45\u7136\u53ef\u4ee5\u5728\u5b50\u7c7b\u4e2d\u4e0d\u7528\u91cd\u65b0\u5b9e\u73b0\u65b9\u6cd5\uff0c\u76f4\u63a5\u4f7f\u7528\u7236\u7c7b\u4e2d\u7684\u65b9\u6cd5\u5373\u53ef</p> <p>\u6240\u4ee5\u8bf4\uff0c\u80fd\u7528\u7236\u7c7b\u7684\u5c5e\u6027(\u503c\u6216\u8005\u65b9\u6cd5)\uff0c\u5c31\u7528\u7236\u7c7b\u7684\uff0c\u5c3d\u53ef\u80fd\u7684\u4e0d\u8981\u53bb\u91cd\u65b0\u5b9e\u73b0 </p> code <pre><code>class ThrowerAnt(Ant):\n    ...\n    # ADD/OVERRIDE CLASS ATTRIBUTES HERE\n    food_cost = 3\n    min_range = 0\n    max_range = float('inf')\n\n    def nearest_bee(self, beehive):\n        \"\"\"Return the nearest Bee in a Place that is not the HIVE (beehive), connected to\n        the ThrowerAnt's Place by following entrances.\n\n        This method returns None if there is no such Bee (or none in range).\n        \"\"\"\n        # BEGIN Problem 3 and 4\n        # return rANTdom_else_none(self.place.bees) # REPLACE THIS LINE\n        place = self.place\n        dist = 0\n        while place is not beehive:\n            if place.bees and dist &gt;= self.min_range and dist &lt;= self.max_range:\n                return rANTdom_else_none(place.bees)\n            place = place.entrance\n            dist += 1\n        return None\n        # END Problem 3 and 4\n\n    ...\n\nclass ShortThrower(ThrowerAnt):\n    \"\"\"A ThrowerAnt that only throws leaves at Bees at most 3 places away.\"\"\"\n\n    name = 'Short'\n    food_cost = 2\n    # OVERRIDE CLASS ATTRIBUTES HERE\n    # BEGIN Problem 4\n    max_range = 3\n    # implemented = False   # Change to True to view in the GUI\n    implemented = True\n    # END Problem 4\n\nclass LongThrower(ThrowerAnt):\n    \"\"\"A ThrowerAnt that only throws leaves at Bees at least 5 places away.\"\"\"\n\n    name = 'Long'\n    food_cost = 2\n    # OVERRIDE CLASS ATTRIBUTES HERE\n    # BEGIN Problem 4\n    min_range = 5\n    # implemented = False   # Change to True to view in the GUI\n    implemented = True\n    # END Problem 4\n</code></pre>"},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part2/#2_6","title":"2","text":"<p>Problem 4 \u4e2d\u6709\u4e00\u70b9\u63d0\u793a\uff0c</p> <p>\u53ef\u4ee5\u4f7f\u7528 <code>float('inf')</code> \u6765\u83b7\u5f97\u4e00\u4e2a\u65e0\u7a77\u5927\u7684\u503c</p>"},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part2/#3_4","title":"3","text":"<p>\u5728 Extra Credit \u4e2d\uff0c</p> <p>Some hints:</p> <p>All instances of the same class share the same class attributes. How can you use this information to tell whether a QueenAnt instance is the true QueenAnt?</p> <p>...</p> <p>\u57fa\u4e8e\u8fd9\u4e00\u70b9\u63d0\u793a\uff0c\u6240\u4ee5\u6211\u91c7\u53d6\u7684\u65b9\u6cd5\u662f\uff0c\u5728 <code>Ant</code> \u7c7b\u4e2d\u8bbe\u7f6e\u4e00\u4e2a\u7c7b\u5c5e\u6027 <code>true_queen = None</code> \u9ed8\u8ba4\u503c\u662f <code>None</code> \uff0c\u5f53\u7b2c\u4e00\u4e2a/\u771f\u8681\u540e\u88ab\u521b\u5efa\u65f6(\u901a\u8fc7\u5224\u65ad <code>true_queen</code> \u662f\u5426\u4e3a <code>None</code> \u6765\u786e\u5b9a\u662f\u5426\u662f\u771f\u8681\u540e)\uff0c <code>true_queen</code> \u5c31\u4f1a\u6307\u5411\u5b83\uff0c\u800c\u4e4b\u540e\u7684\u8681\u540e\u5c31\u53ef\u4ee5\u4f9d\u636e\u8fd9\u4e2a\u5c5e\u6027\u6765\u5224\u65ad\u51fa\u662f\u5047\u8681\u540e(impostor)</p> code <pre><code>class Ant(Insect):\n    ...\n    # ADD CLASS ATTRIBUTES HERE\n    true_queen = None\n\n    ...\n    def remove_from(self, place):\n        if self == self.true_queen:\n            return\n                if place.ant is self:\n            place.ant = None\n        elif place.ant is None:\n            assert False, '{0} is not in {1}'.format(self, place)\n        else:\n            # queen or container (optional) or other situation\n            place.ant.remove_ant(self)\n        Insect.remove_from(self, place)\n\n...\n\n# BEGIN Problem EC\n# class QueenAnt(Ant):  # You should change this line\nclass QueenAnt(ScubaThrower):\n# END Problem EC\n    \"\"\"The Queen of the colony. The game is over if a bee enters her place.\"\"\"\n\n    name = 'Queen'\n    food_cost = 7\n    # OVERRIDE CLASS ATTRIBUTES HERE\n    # BEGIN Problem EC\n    # implemented = False   # Change to True to view in the GUI\n    implemented = True\n    # END Problem EC\n\n    def __init__(self, armor=1):\n        # BEGIN Problem EC\n        \"*** YOUR CODE HERE ***\"\n        ScubaThrower.__init__(self, armor)\n        self.buffed_ants = []\n        if not Ant.true_queen:\n            Ant.true_queen = self\n        # END Problem EC\n\n    def action(self, gamestate):\n        \"\"\"A queen ant throws a leaf, but also doubles the damage of ants\n        in her tunnel.\n\n        Impostor queens do only one thing: reduce their own armor to 0.\n        \"\"\"\n        # BEGIN Problem EC\n        \"*** YOUR CODE HERE ***\"\n        if self is not self.true_queen:\n            Ant.reduce_armor(self, self.armor)\n            return\n        ScubaThrower.action(self, gamestate)\n        place = self.place.exit\n        while place:\n            if place.ant and place.ant not in self.buffed_ants:\n                place.ant.damage *= 2\n                self.buffed_ants += [place.ant]\n            place = place.exit\n        # END Problem EC\n\n    def reduce_armor(self, amount):\n        \"\"\"Reduce armor by AMOUNT, and if the True QueenAnt has no armor\n        remaining, signal the end of the game.\n        \"\"\"\n        # BEGIN Problem EC\n        \"*** YOUR CODE HERE ***\"\n        ScubaThrower.reduce_armor(self, amount)\n        if self == self.true_queen and self.armor &lt;= 0:\n            bees_win()\n        # END Problem EC\n</code></pre>"},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part2/#4_3","title":"4","text":"<p>Optional Problem 2 \u4e2d</p> <p>Hint: You may find the <code>isinstance</code> function useful for checking if an object is an instance of a given class. For example:</p> <pre><code>    &gt;&gt;&gt; a = Foo()\n    &gt;&gt;&gt; isinstance(a, Foo)\n    True\n</code></pre> <p>\u53ef\u4ee5\u7528 <code>isinstance()</code> \u7684\u51fd\u6570\u6765\u5224\u65ad\u67d0\u4e2a\u5b9e\u4f8b\u662f\u5426\u662f\u67d0\u4e2a\u7c7b</p>"},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part2/#5_3","title":"5","text":"<p>Optional Problem 2 \u4e2d</p> <p>Note: the constructor of <code>ContainerAnt.__init__</code> is implemented as such</p> <pre><code>    def __init__(self, *args, **kwargs):\n        Ant.__init__(self, *args, **kwargs)\n        self.contained_ant = None\n</code></pre> <p>As we saw in Hog, we have that <code>args</code> is bound to all positional arguments (that is all arguments not passed not with keywords, and <code>kwargs</code> is bound to all the keyword arguments. This ensures that both sets of arguments are passed to the Ant constructor).</p> <p><code>args</code> \u662f\u6240\u6709\u6ca1\u6709 \u5173\u952e\u5b57 (\u6bd4\u5982 <code>key=</code> \u3001 <code>base=</code> \u5c31\u662f\u5173\u952e\u5b57) \u7684\u53c2\u6570\uff0c\u800c <code>kwargs</code> \u662f\u6240\u6709\u6709 \u5173\u952e\u5b57 \u7684\u53c2\u6570</p>"},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part2/#6_1","title":"6","text":"<p>Optional Problem 2 \u6709\u70b9\u96be\uff0cdebug\u90fddebug\u4e8610\u591a\u6b21\uff0c\u6210\u529f\u5b9e\u73b0\u7684\u4ee3\u7801\u5728\u4e0b\u9762</p> code <pre><code>class Ant(Insect):\n    ...\n\n    def add_to(self, place):\n        if place.ant is None:\n            place.ant = self\n        else:\n            # BEGIN Problem Optional 2\n            # if not (isinstance(self, ContainerAnt) and self.can_contain(place.ant)) and not (isinstance(place.ant, ContainerAnt) and place.ant.can_contain(self)):\n            if isinstance(self, ContainerAnt) and self.can_contain(place.ant):\n                self.contain_ant(place.ant)\n                place.ant = self\n            elif isinstance(place.ant, ContainerAnt) and place.ant.can_contain(self):\n                place.ant.contain_ant(self)\n            else:\n                assert place.ant is None, 'Two ants in {0}'.format(place)\n            # END Problem Optional 2\n        Insect.add_to(self, place)\n\n    ...\n\n...\n\nclass ContainerAnt(Ant):\n    def __init__(self, *args, **kwargs):\n        Ant.__init__(self, *args, **kwargs)\n        self.contained_ant = None\n\n    def can_contain(self, other):\n        # BEGIN Problem Optional 2\n        \"*** YOUR CODE HERE ***\"\n        return not self.contained_ant and not isinstance(other, ContainerAnt)\n        # END Problem Optional 2\n\n    def contain_ant(self, ant):\n        # BEGIN Problem Optional 2\n        \"*** YOUR CODE HERE ***\"\n        if self.can_contain(ant):\n            self.contained_ant = ant\n            # self.place.ant = self\n        # END Problem Optional 2\n\n    def remove_ant(self, ant):\n        if self.contained_ant is not ant:\n            assert False, \"{} does not contain {}\".format(self, ant)\n        self.contained_ant = None\n\n    def remove_from(self, place):\n        # Special handling for container ants (this is optional)\n        if place.ant is self:\n            # Container was removed. Contained ant should remain in the game\n            place.ant = place.ant.contained_ant\n            Insect.remove_from(self, place)\n        else:\n            # default to normal behavior\n            Ant.remove_from(self, place)\n\n    def action(self, gamestate):\n        # BEGIN Optional 2\n        \"*** YOUR CODE HERE ***\"\n        if self.contained_ant:\n            self.contained_ant.action(gamestate)\n        # END Optional 2\n\nclass BodyguardAnt(ContainerAnt):\n    \"\"\"BodyguardAnt provides protection to other Ants.\"\"\"\n\n    name = 'Bodyguard'\n    food_cost = 4\n    # OVERRIDE CLASS ATTRIBUTES HERE\n    # BEGIN Optional 2\n    # implemented = False   # Change to True to view in the GUI\n    implemented = True\n\n    def __init__(self, armor=2):\n        ContainerAnt.__init__(self, armor)\n    # END Optional 2\n</code></pre>"},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part2/#7_1","title":"7","text":"<p>Optional Problem 4</p> <p>\u8fd9\u9898\u6211\u8ba4\u4e3a\u5f88\u96be(\u770b\u5b8c\u9898\u76ee\u8981\u6c42\u65f6\u5c31\u5df2\u7ecf\u5934\u5927\u4e86)\uff0c\u5e94\u8be5\u7b97\u662f\u6240\u6709\u9898\u76ee\u91cc\u9762\u6700\u96be\u7684\u4e00\u9898\uff0c\u4fee\u4fee\u6539\u6539\u4e86\u5f88\u4e45\u624d\u521d\u6b65\u5199\u5b8c\uff0c\u7136\u540e\u8fd8debug\u4e86\u5f88\u591a\u6b21</p> <p>\u521a\u5f00\u59cb\u65f6\u6ca1\u4ec0\u4e48\u5934\u7eea\uff0c\u6240\u4ee5\u6253\u7b97 \u5728\u6559\u7a0b\u7684\u8981\u6c42(\u4e3b\u8981\u8981\u5b9e\u73b0\u4e09\u4e2a\u51fd\u6570)\u4e2d \u5148\u4ece\u6700\u7b80\u5355\u7684\u95ee\u9898\u5f00\u59cb\u89e3\u51b3(\u6700\u540e\u53d1\u73b0\u8fd9\u5f88\u6709\u7528\uff0c\u56e0\u4e3a\u628a\u7b80\u5355\u7684\u95ee\u9898\u89e3\u51b3\u4e86\uff0c\u6700\u540e\u96be\u7684\u95ee\u9898\u5c31\u53d8\u5f97\u6e05\u6670\u660e\u4e86\u4e86)\uff0c</p> <p><code>make_slow</code> \u548c <code>make_scare</code> \uff0c\u8fd9\u4e24\u4e2a\u57fa\u672c\u4e0a\u5dee\u4e0d\u591a\uff0c\u4ed6\u4eec\u90fd\u662f\u8981\u8fd4\u56de\u4e00\u4e2a\u65b0\u7684\u65b9\u6cd5</p> <pre><code>def make_slow(action, bee):\n    \"\"\"Return a new action method that calls ACTION every other turn.\n\n    action -- An action method of some Bee\n    \"\"\"\n    # BEGIN Problem Optional 4\n    \"*** YOUR CODE HERE ***\"\n    # END Problem Optional 4\n\ndef make_scare(action, bee):\n    \"\"\"Return a new action method that makes the bee go backwards.\n\n    action -- An action method of some Bee\n    \"\"\"\n    # BEGIN Problem Optional 4\n    \"*** YOUR CODE HERE ***\"\n    # END Problem Optional 4\n</code></pre> <p>\u4f46\u6211\u4e00\u5f00\u59cb\u6ca1\u6709\u7406\u89e3 \u8fd4\u56de\u65b9\u6cd5 \u5e94\u8be5\u610f\u5473\u7740\u4ec0\u4e48\uff0c\u7136\u540e\u6ce8\u610f\u5230\u4e86 \u6559\u7a0b\u4e2d\u7684\u63d0\u793a \uff0c\u5373\u5b9e\u4f8b\u7684\u65b9\u6cd5\u662f\u53ef\u4ee5\u901a\u8fc7\u8d4b\u503c\u53bb\u8986\u76d6\u6389\u7684</p> <p>Hint: You will need to rebind a method in one of the functions. Note that when assigning to an instance, the self parameter isn't bound.</p> <pre><code>  class X: pass\n  def f(x): return x ** 3\n  x = X()\n  x.f = f\n  print(x.f(2)) # prints 8\n</code></pre> <p>\u6240\u4ee5\u6211\u8fd9\u65f6\u7684\u60f3\u6cd5\u662f\uff0c\u5728 <code>make_slow</code> \u51fd\u6570\u91cc\u9762\u521b\u5efa\u4e00\u4e2a \u7528\u6765\u5f53\u4f5c\u65b9\u6cd5 \u7684\u51fd\u6570\uff0c\u7136\u540e\u7ed1\u5b9a\u5230 <code>bee</code> \u4e2d\uff0c\u6240\u4ee5</p> <pre><code>def make_slow(action, bee):\n    def new_action(gamestate):\n        if gamestate.time % 2 == 0:\n            action(bee, gamestate)\n    bee.action = new_action\n\n...\n</code></pre> <p>\u4f46\u662f\u7a81\u7136\u611f\u89c9\uff0c\u65b9\u6cd5\u5e94\u8be5\u662f\u6709 <code>self</code> \u53c2\u6570\u7684\uff0c</p> <p>\u4ee5\u53ca \u597d\u50cf\u8981\u6c42\u8bf4\u7684\u662f\u8981\u8fd4\u56de\uff0c\u6240\u4ee5\u6211\u8fd9\u65f6\u8ba4\u4e3a\uff0c\u5e94\u8be5\u8981\u5728\u51fd\u6570\u4e2d\u5c06\u8fd9\u4e2a \u7528\u4f5c\u65b9\u6cd5\u7684\u51fd\u6570 \u8fd4\u56de\uff0c\u7136\u540e\u5728 <code>apply_status</code> \u4e2d\u518d\u5c06\u5b83\u7ed1\u5b9a\u5230\u5bf9\u8c61\u4e2d\uff0c\u6240\u4ee5</p> <pre><code>def make_slow(action, bee):\n    def new_action(self, gamestate):\n        if gamestate.time % 2 == 0:\n            action(self, gamestate)\n    return new_action\n\ndef make_scare(action, bee):\n    def new_action(self, gamestate):\n        bee.direction = self.place if self.place.entrance is gamestate.beehive else self.place.entrance\n        action(self, gamestate)\n    return new_action\n</code></pre> <p><code>.direction</code> \u5c5e\u6027\u662f\u7531\u4e8e\uff0c\u6559\u7a0b\u4e2d\u63d0\u793a\u5230</p> <p>Hint: to make a bee go backwards, consider adding an instance variable indicating its current direction. Where should you change the bee's direction? Once the direction is known, how can you modify the <code>action</code> method of <code>Bee</code> to move appropriately?</p> <p>\u6240\u4ee5\u6211\u5bf9 <code>Bee.action</code> \u8fdb\u884c\u4e86\u4fee\u6539</p> <pre><code>class Bee(Insect):\n    ...\n\n    def action(self, gamestate):\n        \"\"\"A Bee's action stings the Ant that blocks its exit if it is blocked,\n        or moves to the exit of its current place otherwise.\n\n        gamestate -- The GameState, used to access game state information.\n        \"\"\"\n        destination = self.place.exit\n        # Extra credit: Special handling for bee direction\n        # BEGIN EC\n        \"*** YOUR CODE HERE ***\"\n        destination = self.direction\n        # END EC\n        if self.blocked():\n            self.sting(self.place.ant)\n        elif self.armor &gt; 0 and destination is not None:\n            self.move_to(destination)\n</code></pre> <p>\u7136\u540e\u5c31\u5f00\u59cb\u5199 <code>apply_status</code> \u51fd\u6570</p> <p>\u4e00\u5f00\u59cb\u6211\u6ca1\u60f3\u597d\u600e\u4e48\u8bbe\u7f6e \u6301\u7eed\u65f6\u95f4\uff0c\u6240\u4ee5\u5c31\u53ea\u662f\u8fd9\u6837</p> <pre><code>def apply_status(status, bee, length):\n    \"\"\"Apply a status to a BEE that lasts for LENGTH turns.\"\"\"\n    # BEGIN Problem Optional 4\n    \"*** YOUR CODE HERE ***\"\n    bee.action = status(bee.action, bee)\n    # END Problem Optional 4\n</code></pre> <p>\u7136\u540e\u7531\u4e8e \u5269\u4f59\u65f6\u95f4 \u9700\u8981\u88ab\u8bb0\u5f55\u4e0b\u6765\uff0c\u800c\u4e14\u6211\u60f3\u5230\u8c03\u7528\u4e00\u6b21 action \u51fd\u6570\u5c31\u51cf\u5c11\u4e00\u6b21\u5269\u4f59\u65f6\u95f4\uff0c\u6240\u4ee5\u60f3\u5230\u4e86\u5728\u51fd\u6570\u4e2d\u518d\u6784\u5efa\u4e00\u4e2a\u5d4c\u5957\u51fd\u6570\uff0c\u7136\u540e\u4f7f\u7528 <code>nonlocal</code> \u8bed\u53e5\u6765\u51cf\u5c11 <code>length</code> \u7684\u503c\uff0c\u5e76\u4e14\u5728\u5269\u4f59\u65f6\u95f4\u4e3a0\u7684\u65f6\u5019\u628a\u65b9\u6cd5\u6362\u56de\u539f\u672c\u7684\u65b9\u6cd5\uff0c\u6240\u4ee5</p> <pre><code>def apply_status(status, bee, length):\n    old_action = bee.action\n    def new_action(gamestate):\n        nonlocal length\n        length -= 1\n        status(old_action, bee)(self, gamestate)\n        if length == 0:\n            bee.action = old_action\n            bee.direction = None\n    bee.action = new_action\n</code></pre> <p>\u6700\u540e\u6559\u7a0b\u4e2d\u8fd8\u6709\u4e00\u70b9\uff0c\u5c31\u662f \u591a\u72b6\u6001 \u7684\u95ee\u9898\uff0c</p> <p><code>apply_status</code> takes a <code>status</code> (either <code>make_slow</code> or <code>make_scare</code>), a <code>Bee</code>, and a <code>length</code>. The way it works is as so: imagine that a <code>Bee</code> has a bunch of statuses, each of which modifies <code>action</code> in sequence. When a status's length is up, it removes itself from the list. <code>apply_status</code> adds the given status to the end of the list, so that it is applied latest. Note that you don't necessarily need to make a literal list of statuses - it is just helpful to think of statuses in this way.</p> <p>As an example of what \"previous behavior\" means, take the example of a bee that has been slowed twice (say by two separate <code>SlowThrower</code>s). It will have the following behavior:</p> <ul> <li>on time 1, it will do nothing. The outer slow has 2 turns to go, the inner one still has 3 turns</li> <li>on time 2, it moves forward. The outer slow has 1 turn to go, the inner one has 2 turns</li> <li>on time 3, it will do nothing. The outer slow has no turns left, the inner one has 2 turns</li> <li>on time 4, it moves forward. The inner slow has 1 turn left</li> <li>on time 5, it does nothing. The inner slow has no turns left</li> </ul> <p>\u610f\u601d\u662f\u8981\u6c42\uff0c\u5b58\u5728\u591a\u4e2a\u72b6\u6001\u65f6\uff0c\u5269\u4f59\u65f6\u95f4\u4f1a\u4e00\u8d77\u51cf\u5c11\uff0c\u4f46\u662f\u5e94\u7528\u7684\u6548\u679c\u662f\u6309\u4ece\u65e9(\u6700\u5148\u751f\u6548)\u5230\u665a(\u540e\u4ea7\u751f)\u7684\u987a\u5e8f\u5e94\u7528\u7684\uff0c\u5177\u4f53\u53ef\u4ee5\u770b\u6559\u7a0b\u4e2d\u7684\u89e3\u91ca</p> <p>\u7531\u4e8e\u8fd9\u4e2a\u70b9\u6211\u6ca1\u6709\u5f04\u6e05\u695a\u5e94\u8be5\u5982\u4f55\u5b9e\u73b0\uff0c\u4e8e\u662f\u6ca1\u6709\u529e\u6cd5\uff0c\u6211\u53ea\u80fd\u5c1d\u8bd5\u5148\u8fdb\u884c\u6d4b\u8bd5</p> <p>\u6d4b\u8bd5\u51fa\u73b0\u7684\u7b2c\u4e00\u4e2a\u95ee\u9898</p> <pre><code>&gt;&gt;&gt; from ants import *\n&gt;&gt;&gt; beehive, layout = Hive(AssaultPlan()), dry_layout\n&gt;&gt;&gt; dimensions = (1, 9)\n&gt;&gt;&gt; gamestate = GameState(None, beehive, ant_types(), layout, dimensions)\n&gt;&gt;&gt; # Testing Slow\n&gt;&gt;&gt; slow = SlowThrower()\n&gt;&gt;&gt; bee = Bee(3)\n&gt;&gt;&gt; gamestate.places[\"tunnel_0_0\"].add_insect(slow)\n&gt;&gt;&gt; gamestate.places[\"tunnel_0_4\"].add_insect(bee)\n&gt;&gt;&gt; slow.action(gamestate)\n&gt;&gt;&gt; gamestate.time = 1\n&gt;&gt;&gt; bee.action(gamestate)\nTypeError: apply_status.&lt;locals&gt;.new_action() missing 1 required positional argument: 'gamestate'\n\n# Error: expected\n\n# but got\n#     Traceback (most recent call last):\n#       ...\n#     TypeError: apply_status.&lt;locals&gt;.new_action() missing 1 required positional argument: 'gamestate'\n</code></pre> <p>\u662f\u6307 <code>apply_status</code> \u51fd\u6570\u4e2d\u7684\u5d4c\u5957\u51fd\u6570 <code>new_action</code> \u5728\u88ab\u4f7f\u7528\u65f6\uff0c\u7b2c\u4e8c\u4e2a <code>gamestate</code> \u53c2\u6570\u6ca1\u6709\u88ab\u4f20\u5165\u503c(\u4e00\u5f00\u59cb\u6211\u7684\u7406\u89e3\u8fd8\u6709\u4e9b\u504f\u5dee\uff0c\u7ecf\u8fc7\u4e86\u4e00\u4e9b\u6d4b\u8bd5\u548c\u8bd5\u9519\u624d\u6700\u7ec8\u786e\u5b9a\u662f\u8fd9\u4e2a\u539f\u56e0)</p> <p>\u8fd9\u5c31\u610f\u5473\u7740\uff0c <code>bee.action(gamestate)</code> \u5904\uff0c\u5728\u8c03\u7528\u65b0\u7684\u65b9\u6cd5\u65f6\uff0c\u53ea\u4f20\u5165\u4e86\u4e00\u4e2a\u53c2\u6570(\u6240\u4ee5\u7b2c\u4e8c\u4e2a\u53c2\u6570\u6ca1\u6709\u88ab\u4f20\u5165)\uff0c\u6240\u4ee5\u8fd9\u4f3c\u4e4e\u544a\u8bc9\u6211\uff0c\u5728\u7f16\u5199\u65b0\u7684\u65b9\u6cd5\u65f6\uff0c\u5e76\u4e0d\u9700\u8981\u4f7f\u7528 <code>self</code> \u53c2\u6570</p> <p>\u4e3a\u4e86\u6c42\u8bc1\uff0c\u6211\u91cd\u65b0\u53bb\u67e5\u770b\u548c\u7406\u89e3\u6559\u7a0b\u4e2d\u7ed9\u51fa\u7684\u793a\u4f8b</p> <p>Hint: You will need to rebind a method in one of the functions. Note that when assigning to an instance, the self parameter isn't bound.</p> <pre><code>  class X: pass\n  def f(x): return x ** 3\n  x = X()\n  x.f = f\n  print(x.f(2)) # prints 8\n</code></pre> <p>\u5982\u4f55\u53d1\u73b0\uff0c\u8fd9\u91cc\u9762\u7684 \u65b0\u65b9\u6cd5 \u5c31\u662f\u6ca1\u6709 <code>self</code> \u53c2\u6570\uff0c\u5e76\u4e14\u5728\u8c03\u7528\u65f6\uff0c\u8fd9\u4e2a\u5b9e\u4f8b\u4e5f\u6ca1\u6709\u5c06\u81ea\u8eab\u4f5c\u4e3a\u53c2\u6570\u4f20\u5165\u5176\u4e2d(\u8c03\u7528\u81ea\u8eab\u6216\u7236\u7c7b\u7684\u65b9\u6cd5\u65f6\uff0c\u4f1a\u628a\u81ea\u8eab \u9690\u5f0f\u5730 \u4f20\u5165 <code>self</code> \u53c2\u6570)\uff0c\u6240\u4ee5\u5f97\u5230\u7ed3\u8bba\uff0c\u5982\u679c\u4e00\u4e2a\u5728\u7c7b\u5916\u5b9a\u4e49\u7684\u51fd\u6570\uff0c\u88ab\u7ed1\u5b9a\u6210\u4e3a\u4e86\u67d0\u4e2a\u5b9e\u4f8b\u7684\u5c5e\u6027\uff0c\u6216\u8005\u67d0\u79cd\u7a0b\u5ea6\u4e0a\u53ef\u4ee5\u8bf4\u65f6\u6210\u4e3a\u4e86\u8fd9\u4e2a\u5b9e\u4f8b\u7684\u4e00\u4e2a\u65b9\u6cd5\uff0c\u5728\u901a\u8fc7 <code>\u5b9e\u4f8b.\u5c5e\u6027\u540d</code> \u7684\u65b9\u5f0f\u4f7f\u7528\u8fd9\u4e2a\u51fd\u6570/\u65b9\u6cd5\u65f6\uff0c\u662f\u4e0d\u4f1a\u5c06\u5b9e\u4f8b\u4f20\u5165\u51fd\u6570/\u65b9\u6cd5\u7684</p> <p>\u6240\u4ee5\u5bf9\u539f\u6709\u4ee3\u7801\u8fdb\u884c\u4e86\u4fee\u6539</p> <pre><code>def make_slow(action, bee):\n    def new_action(gamestate):\n        if gamestate.time % 2 == 0:\n            action(bee gamestate)\n    return new_action\n\ndef make_scare(action, bee):\n    def new_action(gamestate):\n        bee.direction = bee.place if bee.place.entrance is gamestate.beehive else bee.place.entrance\n        action(bee, gamestate)\n    return new_action\n\ndef apply_status(status, bee, length):\n    old_action = bee.action\n    def new_action(gamestate):\n        nonlocal length\n        length -= 1\n        status(old_action, bee)(gamestate)\n        if length == 0:\n            bee.action = old_action\n            bee.direction = None\n    bee.action = new_action\n</code></pre> <p>\u7136\u540e\u5728\u6d4b\u8bd5\u4fee\u6539\u597d\u7684\u4ee3\u7801\u65f6\uff0c\u53d1\u73b0</p> <pre><code>&gt;&gt;&gt; from ants import *\n&gt;&gt;&gt; beehive, layout = Hive(AssaultPlan()), dry_layout\n&gt;&gt;&gt; dimensions = (1, 9)\n&gt;&gt;&gt; gamestate = GameState(None, beehive, ant_types(), layout, dimensions)\n&gt;&gt;&gt; # Testing Slow\n&gt;&gt;&gt; slow = SlowThrower()\n&gt;&gt;&gt; bee = Bee(3)\n&gt;&gt;&gt; gamestate.places[\"tunnel_0_0\"].add_insect(slow)\n&gt;&gt;&gt; gamestate.places[\"tunnel_0_4\"].add_insect(bee)\n&gt;&gt;&gt; slow.action(gamestate)\n&gt;&gt;&gt; gamestate.time = 1\n&gt;&gt;&gt; bee.action(gamestate)\nTraceback (most recent call last):\n  File \"E:\\Courses\\cs61a\\projects\\ants\\ants.py\", line 606, in new_action\n    action(gamestate)\n  File \"E:\\Courses\\cs61a\\projects\\ants\\ants.py\", line 470, in action\n    destination = self.direction\nAttributeError: 'Bee' object has no attribute 'direction'\n\n# Error: expected\n\n# but got\n#     Traceback (most recent call last):\n#       ...\n#     AttributeError: 'Bee' object has no attribute 'direction'\n</code></pre> <p>\u7531\u4e8e <code>bee.direction</code> \u6ca1\u6709\u521d\u59cb\u503c/\u9ed8\u8ba4\u503c\uff0c\u6240\u4ee5\u6709\u53ef\u80fd\u51fa\u73b0\u5c5e\u6027\u4e0d\u5b58\u5728\u7684\u60c5\u51b5\uff0c\u6240\u4ee5\u8fdb\u884c\u4fee\u6539</p> <pre><code>class Bee(Insect):\n    ...\n    direction = None\n    ...\n\n    def action(self, gamestate):\n        destination = self.place.exit\n        # Extra credit: Special handling for bee direction\n        # BEGIN EC\n        \"*** YOUR CODE HERE ***\"\n        if self.direction:\n            destination = self.direction\n        # END EC\n        if self.blocked():\n            self.sting(self.place.ant)\n        elif self.armor &gt; 0 and destination is not None:\n            self.move_to(destination)\n</code></pre> <p>\u7136\u540e\u53c8\u51fa\u73b0\u4e86\u4e00\u4e2a\u95ee\u9898\uff0c</p> <pre><code>&gt;&gt;&gt; from ants import *\n&gt;&gt;&gt; beehive, layout = Hive(AssaultPlan()), dry_layout\n&gt;&gt;&gt; dimensions = (1, 9)\n&gt;&gt;&gt; gamestate = GameState(None, beehive, ant_types(), layout, dimensions)\n&gt;&gt;&gt; # Testing Slow\n&gt;&gt;&gt; slow = SlowThrower()\n&gt;&gt;&gt; bee = Bee(3)\n&gt;&gt;&gt; gamestate.places[\"tunnel_0_0\"].add_insect(slow)\n&gt;&gt;&gt; gamestate.places[\"tunnel_0_4\"].add_insect(bee)\n&gt;&gt;&gt; slow.action(gamestate)\n&gt;&gt;&gt; gamestate.time = 1\n&gt;&gt;&gt; bee.action(gamestate)\nTraceback (most recent call last):\n  File \"E:\\Courses\\cs61a\\projects\\ants\\ants.py\", line 606, in new_action\n    action(bee, gamestate)\nTypeError: Bee.action() takes 2 positional arguments but 3 were given\n\n# Error: expected\n\n# but got\n#     Traceback (most recent call last):\n#       ...\n#     TypeError: Bee.action() takes 2 positional arguments but 3 were given\n</code></pre> <p><code>bee</code> \u539f\u672c\u7684\u65b9\u6cd5\u4f20\u5165\u4e86\u4e00\u4e2a\u53c2\u6570\uff0c\u6240\u4ee5\u53ef\u4ee5\u53d1\u73b0\uff0c\u5b9e\u4f8b\u7684\u65b9\u6cd5\u672c\u8eab\u5df2\u7ecf\u5c06\u5b9e\u4f8b\u672c\u8eab\u4f20\u5165\u4e86 <code>self</code> \u53c2\u6570\uff0c\u6bd4\u5982 <code>old_action = bee.action</code> \uff0c<code>bee.action</code> \u5df2\u7ecf\u7ed9 <code>Bee.action</code> \u4e2d\u7684 <code>self</code> \u53c2\u6570\u4f20\u5165\u4e86\u81ea\u8eab(\u5373 <code>bee</code> \u5b9e\u4f8b)\uff0c\u800c\u5982\u679c\u4f7f\u7528 <code>old_action</code> \uff0c\u6bd4\u5982 <code>old_action(gs)</code> \uff0c\u90a3\u4e48 <code>gs</code> \u4f1a\u88ab\u4f20\u5165 <code>Bee.action</code> \u7684 <code>gamestate</code> (\u7b2c\u4e8c\u4e2a\u53c2\u6570)\u800c\u4e0d\u662f <code>self</code> </p> <p>\u6240\u4ee5\u8fdb\u884c\u4fee\u6539</p> <pre><code>def make_slow(action, bee):\n    def new_action(gamestate):\n        if gamestate.time % 2 == 0:\n            action(gamestate)\n    return new_action\n\ndef make_scare(action, bee):\n    def new_action(gamestate):\n        bee.direction = bee.place if bee.place.entrance is gamestate.beehive else bee.place.entrance\n        action(gamestate)\n    return new_action\n\ndef apply_status(status, bee, length):\n    old_action = bee.action\n    def new_action(gamestate):\n        nonlocal length\n        length -= 1\n        status(old_action, bee)(gamestate)\n        if length == 0:\n            bee.action = old_action\n            bee.direction = None\n    bee.action = new_action\n</code></pre> <p>\u6d4b\u8bd5\u51fa\u73b0\u7684\u7b2c\u4e8c\u4e2a\u95ee\u9898</p> <pre><code>&gt;&gt;&gt; from ants import *\n&gt;&gt;&gt; beehive, layout = Hive(AssaultPlan()), dry_layout\n&gt;&gt;&gt; dimensions = (1, 9)\n&gt;&gt;&gt; gamestate = GameState(None, beehive, ant_types(), layout, dimensions)\n&gt;&gt;&gt; scare = ScaryThrower()\n&gt;&gt;&gt; bee = Bee(3)\n&gt;&gt;&gt; gamestate.places[\"tunnel_0_0\"].add_insect(scare)\n&gt;&gt;&gt; gamestate.places[\"tunnel_0_1\"].add_insect(bee)\n&gt;&gt;&gt; scare.action(gamestate)\n&gt;&gt;&gt; bee.action(gamestate)\n&gt;&gt;&gt; bee.place.name\n'tunnel_0_2'\n&gt;&gt;&gt; bee.action(gamestate)\n&gt;&gt;&gt; bee.place.name\n'tunnel_0_3'\n&gt;&gt;&gt; #\n&gt;&gt;&gt; # Same bee should not be scared more than once\n&gt;&gt;&gt; scare.action(gamestate)\n&gt;&gt;&gt; bee.action(gamestate)\n&gt;&gt;&gt; bee.place.name\n'tunnel_0_4'\n\n# Error: expected\n#     'tunnel_0_2'\n# but got\n#     'tunnel_0_4'\n</code></pre> <p>\u540c\u4e00\u4e2a\u871c\u8702\u53ea\u80fd\u88ab\u6050\u5413\u4e00\u6b21\uff0c\u6240\u4ee5\u5bf9\u539f\u6709\u4ee3\u7801\u8fdb\u884c\u4fee\u6539</p> <pre><code>class Bee(Insect):\n    ...\n    direction = None\n    has_been_scared = False\n    ...\n\n...\ndef make_scare(action, bee):\n    def new_action(gamestate):\n        if not bee.has_been_scared:\n            bee.direction = bee.place if bee.place.entrance is gamestate.beehive else bee.place.entrance\n        action(gamestate)\n    return new_action\n\ndef apply_status(status, bee, length):\n    old_action = bee.action\n    def new_action(gamestate):\n        nonlocal length\n        length -= 1\n        status(old_action, bee)(gamestate)\n        if length == 0:\n            bee.action = old_action\n            bee.direction = None\n            if status is make_scare:\n                bee.has_been_scared = True\n    bee.action = new_action\n</code></pre> <p>\u6d4b\u8bd5\u51fa\u73b0\u7684\u7b2c\u4e09\u4e2a\u95ee\u9898</p> <pre><code>&gt;&gt;&gt; from ants import *\n&gt;&gt;&gt; beehive, layout = Hive(AssaultPlan()), dry_layout\n&gt;&gt;&gt; dimensions = (1, 9)\n&gt;&gt;&gt; gamestate = GameState(None, beehive, ant_types(), layout, dimensions)\n&gt;&gt;&gt; # Testing long status stack\n&gt;&gt;&gt; scary = ScaryThrower()\n&gt;&gt;&gt; slow = SlowThrower()\n&gt;&gt;&gt; bee = Bee(3)\n&gt;&gt;&gt; gamestate.places[\"tunnel_0_0\"].add_insect(scary)\n&gt;&gt;&gt; gamestate.places[\"tunnel_0_1\"].add_insect(slow)\n&gt;&gt;&gt; gamestate.places[\"tunnel_0_3\"].add_insect(bee)\n&gt;&gt;&gt; scary.action(gamestate) # scare bee once\n&gt;&gt;&gt; gamestate.time = 0\n&gt;&gt;&gt; bee.action(gamestate) # scared\n&gt;&gt;&gt; bee.place.name\n'tunnel_0_4'\n&gt;&gt;&gt; for _ in range(3): # slow bee three times\n...    slow.action(gamestate)\n&gt;&gt;&gt; gamestate.time = 1\n&gt;&gt;&gt; bee.action(gamestate) # scared, but also slowed thrice\n&gt;&gt;&gt; bee.place.name\n'tunnel_0_4'\n&gt;&gt;&gt; gamestate.time = 2\n&gt;&gt;&gt; bee.action(gamestate) # scared and slowed thrice\n&gt;&gt;&gt; bee.place.name\n'tunnel_0_5'\n&gt;&gt;&gt; gamestate.time = 3\n&gt;&gt;&gt; bee.action(gamestate) # slowed thrice\n&gt;&gt;&gt; bee.place.name\n'tunnel_0_4'\n\n# Error: expected\n#     'tunnel_0_5'\n# but got\n#     'tunnel_0_4'\n</code></pre> <p>\u6211\u5224\u65ad\u8fd9\u4e2a\u5c31\u662f\u7531\u4e8e\u6ca1\u6709\u5904\u7406\u591a\u72b6\u6001\u7684\u60c5\u51b5\u800c\u4ea7\u751f\u7684\u95ee\u9898</p> <p>\u7136\u540e\u5f00\u59cb\u89c2\u5bdf\u6d4b\u8bd5\u7684\u4ee3\u7801(\u56e0\u4e3a\u524d\u51e0\u4e2a\u8f93\u51fa\u90fd\u6ca1\u6709\u62a5\u9519)\uff0c\u7ecf\u8fc7\u601d\u8003\u4ee5\u53ca\u68b3\u7406\u4ee3\u7801\u7684\u5177\u4f53\u6d41\u7a0b\uff0c\u6211\u5927\u6982\u660e\u767d\u4e86\u51fa\u73b0\u8fd9\u79cd\u60c5\u51b5\u7684\u539f\u56e0(\u524d\u9762\u8ba1\u4e2d\u60c5\u51b5\u6ca1\u9519\u800c\u540e\u9762\u9519\u4e86)\uff0c\u95ee\u9898\u53ef\u80fd\u662f\u51fa\u5728\uff0c\u591a\u72b6\u6001\u4e0b\uff0c\u6050\u5413\u72b6\u6001\u7ed3\u675f\u65f6\uff0c(\u6211\u5199\u7684\u539f\u672c\u7684\u4ee3\u7801\u4e2d)\u4f1a\u628a\u5b9e\u4f8b\u7684 <code>.action</code> \u65b9\u6cd5\u8d4b\u503c\u6210\u539f\u6765\u7684 <code>action</code> \u65b9\u6cd5\uff0c\u5c31\u5e94\u8be5\u4f1a\u5bfc\u81f4\u67d0\u79cd\u77db\u76fe</p> <p>\u800c\u524d\u9762\u6ca1\u6709\u51fa\u9519\u7684 \u662f\u56e0\u4e3a \u6050\u5413\u4e4b\u540e\u7684\u51cf\u901f\u72b6\u6001\uff0c\u662f\u5c06\u6050\u5413\u540e\u7684\u65b0 <code>action</code> \u65b9\u6cd5\u8bbe\u7f6e\u6210\u4e86\u65e7 <code>action</code> \u65b9\u6cd5\uff0c\u6240\u4ee5\u4f1a\u6709\u79cd\u7c7b\u4f3c\u4e8e hw04 \u7684 Q5 Joint Account \u4e00\u6837\u7684\u611f\u89c9(\u5373\u8054\u5408\u8d26\u6237\u5728\u53d6\u94b1\u65f6\uff0c\u4f1a\u8c03\u7528\u539f\u8d26\u6237\u7684\u65b9\u6cd5\uff0c\u7136\u540e\u5982\u679c\u539f\u8d26\u6237\u4e5f\u662f\u4e00\u4e2a\u8054\u5408\u8d26\u6237\uff0c\u90a3\u4e48\u5c31\u4f1a\u7ee7\u7eed\u8c03\u7528\u539f\u8d26\u6237\u7684\u539f\u8d26\u6237\u7684\u65b9\u6cd5...)\uff0c\u6240\u4ee5\u6211\u7684\u7406\u89e3\u662f\u8fd9\u6837</p> <pre><code>flowchart TD\nsubgraph g1[\" \"]\na1[\"bee\"] ==&gt; b1[\"original action method\"]\nend\nsubgraph g2[\" \"]\na2[\"bee\"] -.- b2[\"original action method\"]\na2 ==&gt; c2[\"action method \\n created by 1st status\"]\nc2 --&gt; b2\nend\nsubgraph g3[\" \"]\na3[\"bee\"] -.- b3[\"original action method\"]\na3 -.- c3[\"action method \\n created by 1st status\"]\na3 ==&gt; d3[\"action method \\n created by 2nd status\"]\nd3 --&gt; c3\nc3 --&gt; b3\nend\nsubgraph g4[\" \"]\na4[\"bee\"] -.- b4[\"original action method\"]\na4 -.- c4[\"action method \\n created by 1st status\"]\na4 -.- d4[\"action method \\n created by 2nd status\"]\na4 ==&gt; e4[\"action method \\n created by 3rd status\"]\ne4 --&gt; d4\nd4 --&gt; c4\nc4 --&gt; b4\nend\ng1 --&gt; g2 --&gt; g3 --&gt; g4 --&gt; ...</code></pre> <p>\u7531\u4e8e\u5728\u72b6\u6001\u5269\u4f59\u65f6\u95f4\u51cf\u4e3a0\u4e4b\u540e\uff0c\u60f3\u4e0d\u5230\u5982\u4f55\u628a <code>old_action</code> \u7ed9\u540e\u9762\u7684 \u65b0action\u65b9\u6cd5</p> <p>\u6240\u4ee5\u5c06\u601d\u8def\u6539\u53d8\u6210\uff0c\u5728\u5269\u4f59\u65f6\u95f4\u51cf\u4e3a0\u4e4b\u540e\uff0c\u4e0d\u7ed3\u675f\u51fd\u6570\uff0c\u800c\u662f\u7ee7\u7eed\u4fdd\u7559\u51fd\u6570\uff0c\u5e76\u4e14\u5269\u4f59\u65f6\u95f4\u51cf\u4e3a0\u4e4b\u540e\u5c31\u76f4\u63a5\u6267\u884c\u539f\u672c\u7684 <code>old_action</code> \u65b9\u6cd5\u5373\u53ef\uff0c\u6240\u4ee5</p> <pre><code>def apply_status(status, bee, length):\n    old_action = bee.action\n    def new_action(gamestate):\n        nonlocal length\n        if length &gt; 0:\n            length -= 1\n            status(old_action, bee)(gamestate)\n            if length == 0:\n                bee.direction = None\n                if status is make_scare:\n                    bee.has_been_scared = True\n        else:\n            old_action(gamestate)\n    bee.action = new_action\n</code></pre> <p>\u6700\u7ec8\u7ec8\u4e8e\u6210\u529f\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898</p> <pre><code>$ python ok -q optional4 --local\n=====================================================================\nAssignment: Project 3: Ants Vs. SomeBees\nOK, version v1.18.1\n=====================================================================\n\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nRunning tests\n\n---------------------------------------------------------------------\nTest summary\n    10 test cases passed! No cases failed.\n</code></pre> code <pre><code>class Bee(Insect):\n    ...\n    # OVERRIDE CLASS ATTRIBUTES HERE\n    ...\n    direction = None\n    has_been_scared = False\n\n\n    ...\n\n    def action(self, gamestate):\n        \"\"\"A Bee's action stings the Ant that blocks its exit if it is blocked,\n        or moves to the exit of its current place otherwise.\n\n        gamestate -- The GameState, used to access game state information.\n        \"\"\"\n        destination = self.place.exit\n        # Extra credit: Special handling for bee direction\n        # BEGIN EC\n        \"*** YOUR CODE HERE ***\"\n        if self.direction:\n            destination = self.direction\n        # END EC\n        if self.blocked():\n            self.sting(self.place.ant)\n        elif self.armor &gt; 0 and destination is not None:\n            self.move_to(destination)\n\n    ...\n\n...\n\n############\n# Statuses #\n############\n\ndef make_slow(action, bee):\n    \"\"\"Return a new action method that calls ACTION every other turn.\n\n    action -- An action method of some Bee\n    \"\"\"\n    # BEGIN Problem Optional 4\n    \"*** YOUR CODE HERE ***\"\n    # def new_action(gamestate):\n    #     if gamestate.time % 2 == 1:\n    #         action(bee, gamestate)\n    def new_action(gamestate):\n        if gamestate.time % 2 == 0:\n            action(gamestate)\n    # bee.action = new_action\n    return new_action\n    # END Problem Optional 4\n\ndef make_scare(action, bee):\n    \"\"\"Return a new action method that makes the bee go backwards.\n\n    action -- An action method of some Bee\n    \"\"\"\n    # BEGIN Problem Optional 4\n    \"*** YOUR CODE HERE ***\"\n    # bee.direction = bee.place.exit\n    # def new_action(gamestate):\n    #     bee.direction = bee.place if bee.place.entrance is gamestate.beehive else bee.place.entrance\n    #     action(bee, gamestate)\n    def new_action(gamestate):\n        if not bee.has_been_scared:\n            bee.direction = bee.place if bee.place.entrance is gamestate.beehive else bee.place.entrance\n        action(gamestate)\n    # bee.action = new_action\n    return new_action\n    # END Problem Optional 4\n\ndef apply_status(status, bee, length):\n    \"\"\"Apply a status to a BEE that lasts for LENGTH turns.\"\"\"\n    # BEGIN Problem Optional 4\n    \"*** YOUR CODE HERE ***\"\n    old_action = bee.action\n    def new_action(gamestate):\n        nonlocal length\n        if length &gt; 0:\n            length -= 1\n            status(old_action, bee)(gamestate)\n            if length == 0:\n                # bee.action = old_action\n                bee.direction = None\n                if status is make_scare:\n                    bee.has_been_scared = True\n        else:\n            old_action(gamestate)\n    # bee.action = status(bee.action, bee)\n    bee.action = new_action\n    # END Problem Optional 4\n\n\nclass SlowThrower(ThrowerAnt):\n    \"\"\"ThrowerAnt that causes Slow on Bees.\"\"\"\n\n    name = 'Slow'\n    food_cost = 4\n    # BEGIN Problem Optional 4\n    # implemented = False   # Change to True to view in the GUI\n    implemented = True\n    # END Problem Optional 4\n\n    def throw_at(self, target):\n        if target:\n            apply_status(make_slow, target, 3)\n\n\nclass ScaryThrower(ThrowerAnt):\n    \"\"\"ThrowerAnt that intimidates Bees, making them back away instead of advancing.\"\"\"\n\n    name = 'Scary'\n    food_cost = 6\n    # BEGIN Problem Optional 4\n    # implemented = False   # Change to True to view in the GUI\n    implemented = True\n    # END Problem Optional 4\n\n    def throw_at(self, target):\n        # BEGIN Problem Optional 4\n        \"*** YOUR CODE HERE ***\"\n        if target:\n            apply_status(make_scare, target, 2)\n        # END Problem Optional 4\n</code></pre>"},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part2/#lecture-20-representation","title":"Lecture 20 Representation","text":""},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part2/#1_7","title":"1","text":"<p><code>repr()</code> \u51fd\u6570\u80fd\u628apython\u8868\u8fbe\u5f0f\u8f6c\u6362\u6210\u5728\u81ea\u7136\u8bed\u8a00\u4e2d\u89c4\u8303\u7684\u5b57\u7b26\u4e32\uff0c</p> <p>\u8fd4\u56de\u7684\u5b57\u7b26\u4e32\u548c\u5728\u7ec8\u7aef\u4e2d\u4f7f\u7528\u4ea4\u4e92\u5f0f\u7684python\uff0c\u8f93\u5165\u8868\u8fbe\u5f0f\u65f6\u663e\u793a\u7684\u7ed3\u679c\u4e00\u6837(\u5373\u5982\u4e0a\u56fe\uff0c<code>12e12</code> \u548c <code>print(repr(12e12))</code> \u663e\u793a\u7684\u4e00\u6837)</p> <p></p> <p><code>str()</code> (\u7c7b)\u53ef\u4ee5\u5c06\u5bf9\u8c61\u8f6c\u6362\u6210(\u5176\u5bf9\u5e94\u7684)\u5b57\u7b26\u4e32(\u611f\u89c9\u6709\u70b9\u7c7b\u4f3c\u4e8e c++ \u4e2d \u5de6\u79fb\u8fd0\u7b97\u7b26 <code>&lt;&lt;</code> \u7684\u91cd\u8f7d)\uff0c\u8fd9\u4e2a\u5b57\u7b26\u4e32\u548c \u4f7f\u7528 <code>print</code> \u51fd\u6570 \u663e\u793a\u7684\u7ed3\u679c\u662f\u76f8\u5e94\u7684(\u6216\u8005\u8bf4\u4f7f\u7528 <code>print</code> \u51fd\u6570\u4f1a\u9690\u5f0f\u5730\u8c03\u7528 <code>__str__</code> \u65b9\u6cd5)</p> <p>\u4e0a\u56fe\u4e2d\u53ef\u4ee5\u770b\u5230 <code>repr()</code> \u548c <code>str()</code> \u7684\u4e0d\u540c\u4e4b\u5904</p>"},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part2/#2_7","title":"2","text":"<p><code>repr()</code> \u548c <code>str()</code> \u90fd\u662f\u901a\u8fc7\u8c03\u7528\u4f20\u5165\u53c2\u6570\u7684\u65b9\u6cd5\u6765\u5b9e\u73b0\u529f\u80fd</p> <p><code>repr()</code> \u4f1a\u8c03\u7528 <code>__repr__</code> \u65b9\u6cd5\uff0c</p> <pre><code>def repr(x):\n    return type(x).__repr__(x)\n</code></pre> <p>\u4f7f\u7528\u7c7b\u5185\u65b9\u6cd5\u53ef\u4ee5\u907f\u514d\u5728\u5b9e\u4f8b\u4e2d\u4fee\u6539\u4e86\u65b9\u6cd5</p> <p><code>str()</code> \u4f1a\u8c03\u7528 <code>__str__</code> \u65b9\u6cd5</p> <p>\u5982\u679c\u6ca1\u6709 <code>__str__</code> \u65b9\u6cd5\uff0c\u5219\u8c03\u7528 <code>__repr__</code> \u65b9\u6cd5</p> <pre><code>def str(x):\n    t = type(x)\n    if hasattr(t, '__str__'):\n        return t.__str__(x)\n    else:\n        return t.__repr__(x)\n</code></pre>"},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part2/#3_5","title":"3","text":"<p>\u5982\u679c\u4e00\u4e2a\u7c7b\u6ca1\u6709 <code>__str__</code> \u65b9\u6cd5\uff0c\u5728\u76f4\u63a5\u8c03\u7528 <code>__str__</code> \u65b9\u6cd5\u65f6\uff0c\u4f1a\u6539\u4e3a\u8c03\u7528 <code>__repr__</code> \u65b9\u6cd5</p> <pre><code>class Bear:\n    \"\"\"A Bear.\"\"\"\n    \n    def __repr__(self):\n        return 'Bear()'\n    \noski = Bear()\nprint(oski)\nprint(str(oski))\nprint(repr(oski))\nprint(oski.__str__())\nprint(oski.__repr__())\n</code></pre> <p>\u8fd0\u884c\u4ee5\u4e0a\u4ee3\u7801\uff0c\u4f1a\u663e\u793a</p> <pre><code>Bear()\nBear()\nBear()\nBear()\nBear()\n</code></pre>"},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part2/#4_4","title":"4","text":"<p>\u5b57\u7b26\u4e32\u53ef\u4ee5\u4f7f\u7528 <code>.format()</code> \u6765\u586b\u5165\u53c2\u6570(\u9700\u8981\u6ce8\u610f\u5e8f\u53f7/\u4e0b\u6807\u4e0e\u4f20\u5165\u987a\u5e8f\u5bf9\u5e94)</p> <pre><code>&gt;&gt;&gt; x = 5\n&gt;&gt;&gt; y = 6\n&gt;&gt;&gt; \"x + y = {0}\".format(x + y)\n'x + y = 11'\n&gt;&gt;&gt; \"x + y = {1}\".format(x + y, y)\n'x + y = 6'\n</code></pre> <p>\u6216\u8005\u4e5f\u53ef\u4ee5\u4f7f\u7528</p> <pre><code>&gt;&gt;&gt; f\"x + y = {x + y}\"\n'x + y = 11'\n</code></pre>"},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part2/#5_4","title":"5","text":"<p>python\u7684\u4e00\u4e9b\u7279\u6b8a\u65b9\u6cd5\u540d(\u524d\u540e\u90fd\u6709\u4e24\u4e2a\u4e0b\u5212\u7ebf\u7684\u65b9\u6cd5)</p>"},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part2/#6_2","title":"6","text":"<p><code>__add__</code> \u65b9\u6cd5\u662f\u5b9e\u4f8b\u5728\u52a0\u53f7\u5de6\u8fb9\u65f6\u4f7f\u7528\uff0c <code>__radd__</code> \u65b9\u6cd5\u662f\u5b9e\u4f8b\u5728\u52a0\u53f7\u53f3\u8fb9\u65f6\u4f7f\u7528\uff0c</p> <p>John \u76f4\u63a5\u6dfb\u52a0\u4e86\u4e00\u884c\u4ee3\u7801</p> <pre><code>__radd__ = __add__\n</code></pre>"},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part2/#lecture-20-qa","title":"Lecture 20 Q&amp;A","text":""},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part2/#1_8","title":"1","text":"<p><code>type</code> \u548c <code>isinstance</code> \u7684\u533a\u522b</p> <ul> <li><code>isinstance</code> \u4f1a\u5224\u65ad\u4e00\u4e2a\u5b9e\u4f8b\u662f\u5426\u662f\u67d0\u4e2a\u7c7b\u6216\u5b83\u7684\u5b50\u7c7b\u4eec</li> <li><code>type</code> \u53ea\u4f1a\u8fd4\u56de\u5b9e\u4f8b\u5177\u4f53\u7684\u7c7b</li> </ul>"},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part2/#2_8","title":"2","text":"<p>John \u4f7f\u7528\u9012\u5f52\u548c <code>yield</code> \u8bed\u53e5\u6765\u5b9e\u73b0\u8f93\u51fa\u6811\u7684\u6240\u6709\u6839\u5230\u53f6\u5b50\u7684\u8def\u5f84\u7684\u65b9\u6cd5</p> <pre><code>def print_all_paths(t):\n    \"\"\"Print all the paths from the root to a leaf.\n\n    &gt;&gt;&gt; t = tree(1, [tree(2, [tree(3), tree(5)]), tree(4)])\n    &gt;&gt;&gt; print_all_paths(t)\n    [1, 2, 3]\n    [1, 2, 5]\n    [1, 4]\n    \"\"\"\n    for path in all_paths(t):\n        print(path)\n\ndef all_paths(t):\n    if is_leaf(t):\n        yield [label(t)]\n    for b in branches(t):\n        for path in all_paths(b):   # path might be [2, 3]\n            yield [label(t)] + path # yielding [1, 2, 3]\n</code></pre>"},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part2/#lecture-21-composition","title":"Lecture 21 Composition","text":""},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part2/#1_9","title":"1","text":"<p>John \u4e3a\u81ea\u5b9a\u4e49\u7684 \u94fe\u8868 Linked List \u7c7b \u7528\u9012\u5f52\u7684\u65b9\u5f0f\u7f16\u5199\u4e86\u7c7b\u4f3c\u4e8epython\u5185\u7f6e\u7684 <code>range</code> <code>map</code> <code>filter</code> \u51fd\u6570</p> <p></p> <pre><code>class Link:\n    empty = ()\n    \n    def __init__(self, first, rest=empty):\n        assert rest is Link.empty or isinstance(rest, Link)\n        self.first = first\n        self.rest = rest\n        \n    def __repr__(self):\n        if self.rest:\n            rest_repr = ', ' + repr(self.rest)\n        else:\n            rest_repr = ''\n        return 'Link()' + repr(self.first) + rest_repr + ')'\n    \n    def __str__(self):\n        string = '&lt;'\n        while self.rest is not Link.empty:\n            string += str(self.first) + ' '\n            slef = self.rest\n        return string + str(self.first) + '&gt;'\n</code></pre> <pre><code>def range_link(start, end):\n    \"\"\"Return a Link containing consecutive integers from start to end.\n\n    &gt;&gt;&gt; range_link(3, 6)\n    Link(e, Link(4, Link(5)))\n    \"\"\"\n    if start &gt;= end:\n        return Link.empty\n    else:\n        return Link(start, range_link(start + 1, end))\n</code></pre> <pre><code>def map_link(f, s):\n    \"\"\"Return a link that contains f(x) for each x in Link s.\n\n    &gt;&gt;&gt; map_link(square, range_link(3, 6))\n    Link(9, Link(16, Link(25)))\n    \"\"\"\n    if s is Link.empty:\n        return s\n    else:\n        return Link(f(s.first), map_link(f, s.rest))\n</code></pre> <pre><code>def filter_link(f, s):\n    \"\"\"Return a Link that contains only the elements x of Link s for which f(x) is a true value.\n\n    &gt;&gt;&gt; filter_link(odd, range_link(3, 6))\n    Link(3, Link(5))\n    \"\"\"\n    if s is Link.empty:\n        return s\n    filtered_rest = filter_link(f, s.rest)\n    if f(s.first):\n        return Link(s.first, filtered_rest)\n    else:\n        return filtered_rest\n</code></pre>"},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part2/#2_9","title":"2","text":"<p>John \u7528\u9012\u5f52\u7684\u65b9\u5f0f\u5199\u7684 \u81ea\u5b9a\u4e49\u94fe\u8868\u7ed3\u6784 \u7684 <code>add</code> \u51fd\u6570(\u8ba9\u6211\u89c9\u5f97\u770b\u8d77\u6765\u5f88\u7b80\u6d01)</p> <pre><code>def add(s, v):\n    \"\"\"Add v to s, returning modified s.\n\n    &gt;&gt;&gt; s = Link(1, Link(3, Link(5)))\n    &gt;&gt;&gt; add(s, 0)\n    Link(0, Link(1, Link(3, Link(5))))\n    &gt;&gt;&gt; add(s, 3)\n    Link(0, Link(1, Link(3, Link(5))))\n    &gt;&gt;&gt; add(s, 4)\n    Link(0, Link(1, Link(3, Link(4, Link(5)))))\n    &gt;&gt;&gt; add(s, 6)\n    Link(0, Link(1, Link(3, Link(4, Link(5, Link(6))))))\n    \"\"\"\n    assert s is not Link.empty\n    if s.first &gt; v:\n        s.first, s.rest = v, Link(s.first, s.rest)\n    elif s.first &lt; v and empty(s.rest):\n        s.rest = Link(v)\n    elif s.first &lt; v:\n        add(s.rest, v)\n    return s\n</code></pre>"},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part2/#3_6","title":"3","text":"<p>John \u5c55\u793a\u7684 <code>Tree</code> \u7c7b\u7684\u5b9e\u73b0\u4ee3\u7801</p> <pre><code>class Tree:\n    \"\"\"A tree is a label and a list of branches.\"\"\"\n    def __init__(self, label, branches=[]):\n        self.label = label\n        for branch in branches:\n            assert isinstance(branch, Tree)\n        self.branches = list(branches)\n\n    def __repr__(self):\n        if self.branches:\n            branch_str = ', ' + repr(self.branches)\n        else:\n            branch_str = ''\n        return 'Tree({0}{1})'.format(repr(self.label), branch_str)\n\n    def __str__(self):\n        return '\\n'.join(self.indented())\n\n    def indented(self):\n        lines = []\n        for b in self.branches:\n            for line in b.indented():\n                lines.append('  ' + line)\n        return [str(self.label)] + lines\n\n    def is_leaf(self):\n        return not self.branches\n</code></pre>"},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part2/#hw-05","title":"HW 05","text":""},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part2/#1_10","title":"1","text":"<p>Q5 \u4e2d\uff0c\u672c\u6765\u6211\u4ee5\u4e3a</p> <pre><code>return [t.label].extend([preorder(b) for b in t.branches])\n</code></pre> <p>\u80fd\u5b9e\u73b0\uff0c\u4f46\u662f\u663e\u793a\u6ca1\u6709\u8fd4\u56de\u7684\u503c\uff0c\u7136\u540e\u8fdb\u884c\u6d4b\u8bd5\u53d1\u73b0\uff0c\u5217\u8868\u7684 <code>.append()</code> \u548c <code>.extend()</code> \u65b9\u6cd5\u6ca1\u6709\u8fd4\u56de\u503c</p>"},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part2/#2_10","title":"2","text":"<p>Q6\uff0c\u6211\u7684\u4e24\u79cd\u5b9e\u73b0\u65b9\u5f0f</p> <ul> <li> <p>\u6309\u7167\u539f\u672c\u63d0\u4f9b\u7684\u6846\u67b6</p> code <pre><code>def path_yielder(t, value):\n    \"*** YOUR CODE HERE ***\"\n\n    if t.label == value:\n        yield [t.label]\n    for b in t.branches:\n        for path in path_yielder(b, value):\n\n            \"*** YOUR CODE HERE ***\"\n            yield [t.label] + path\n</code></pre> </li> <li> <p>\u6211\u6574\u5408\u6210\u4e00\u884c\u4ee3\u7801</p> code <pre><code>def path_yielder(t, value):\n    yield from (([[t.label]] if t.label == value else []) +\n                sum([[[t.label] + path for path in path_yielder(b, value)] for b in t.branches], start=[]))\n</code></pre> </li> </ul>"},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part2/#3_7","title":"3","text":"<p>Q3\u4e2d\uff0c\u539f\u672c\u6211\u662f\u7528\u9012\u5f52\u7684\u65b9\u5f0f\u6765\u5b9e\u73b0\uff0c\u4f46\u662f\u4f1a\u7a0d\u5fae\u9ebb\u70e6\u4e00\u4e9b\uff0c</p> <pre><code>def store_digits(n):\n    if n // 10 == 0:\n        return Link(n)\n    else:\n        pre_digits = store_digits(n // 10)\n        last_digits = pre_digits\n        while last_digits.rest != Link.empty:\n            last_digits = last_digits.rest\n        last_digits.rest = Link(n % 10)\n        return pre_digits\n</code></pre> <p>\u7136\u540e\u5728\u63d0\u793a\u89c6\u9891\u4e2d\u770b\u5230\u52a9\u6559\u8001\u5e08\u8bf4\u4e00\u822c\u94fe\u8868\u4f1a\u4f7f\u7528\u9012\u5f52\u548c\u8fed\u4ee3\u7684\u65b9\u5f0f\u6765\u5b9e\u73b0\u529f\u80fd\uff0c\u8fd9\u9898\u4f7f\u7528\u8fed\u4ee3\u6bd4\u8f83\u65b9\u4fbf\uff0c\u7136\u540e\u6211\u5c06\u6211\u7684\u4ee3\u7801\u6539\u6210\u4e86\u7528\u8fed\u4ee3\u6765\u5b9e\u73b0</p> code <pre><code>def store_digits(n):\n    link = Link(n % 10)\n    while n // 10:\n        n //= 10\n        link = Link(n % 10, link)\n    return link\n</code></pre>"},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part2/#lecture-22-efficiency","title":"Lecture 22 Efficiency","text":""},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part2/#1_11","title":"1","text":"<p>\u4eceJohn\u7684demo\u6f14\u793a\u4e2d\u53ef\u4ee5\u770b\u5230\uff0c <code>def</code> \u5b9a\u4e49\u51fa\u7684\u51fd\u6570\u4f3c\u4e4e\u4e5f\u53ef\u4ee5\u50cf\u7c7b\u4e00\u6837\u62e5\u6709\u5c5e\u6027 Attribute (\u53ef\u4ee5\u4f7f\u7528 <code>.</code> \u6765\u8bbf\u95ee)</p>"},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part2/#2_11","title":"2","text":"<p>\u51fd\u6570\u5185\u90e8\u7684\u53d8\u91cf\u5177\u4f53\u6307\u5411\u7684\u5bf9\u8c61 \u53d6\u51b3\u4e8e \u8c03\u7528\u65f6 \u7684\u60c5\u51b5\uff0c</p> <p>\u4f8b\u5982</p> <pre><code>&gt;&gt;&gt; def f(n):\n...     return f(n-1) if n else n\n...\n&gt;&gt;&gt; ori_f = f\n&gt;&gt;&gt; f = 6\n&gt;&gt;&gt; ori_f(4)\nTraceback (most recent call last):\n  File \"&lt;stdin&gt;\", line 1, in &lt;module&gt;\n  File \"&lt;stdin&gt;\", line 2, in f\nTypeError: 'int' object is not callable\n&gt;&gt;&gt;\n</code></pre> <p>\u5728\u5b9a\u4e49\u597d <code>f</code> \u51fd\u6570\u4e4b\u540e\uff0c\u5c06 <code>f</code> \u4fee\u6539\u4e3a <code>6</code> \uff0c\u90a3\u4e48\u4e4b\u540e\u8c03\u7528\u539f\u672c\u7684\u51fd\u6570 <code>f</code> \u65f6\uff0c\u5728\u8fdb\u884c\u9012\u5f52\u8c03\u7528(\u8bbf\u95ee <code>f</code> \u53d8\u91cf)\u65f6\uff0c\u83b7\u53d6\u5230\u7684\u662f\u6574\u578b <code>6</code> \uff0c\u6240\u4ee5\u4f1a\u663e\u793a</p> <pre><code>TypeError: 'int' object is not callable\n</code></pre> <p>\u6240\u4ee5\uff0c\u4e0b\u9762\u56fe\u4e2d John \u6f14\u793a\u7684 demo \u6211\u89c9\u5f97\u5e94\u8be5\u8fd9\u6837\u7406\u89e3</p> <p></p> <pre><code>def fib(n):\n    if n == 0 or n == 1:\n        return n\n    else:\n        return fib(n-2) + fib(n-1)\n\ndef count(f):\n    def counted(n):\n        counted.call_count += 1\n        return f(n)\n    counted.call_count = 0\n    return counted\n\ndef memo(f):\n    cache = {}\n    def memoized(n):\n        if n not in cache:\n            cache[n] = f(n)\n        return cache[n]\n    return memoized\n</code></pre> <ul> <li> <p>\u7b2c\u4e00\u6b65</p> <pre><code>&gt;&gt;&gt; fib = count(fib)\n&gt;&gt;&gt; counted_fib = fib\n</code></pre> <p>\u5c06 <code>fib</code> \u51fd\u6570\u4f20\u5165 <code>count</code> \u51fd\u6570\u4e2d\uff0c\u83b7\u5f97 \u7b2c\u4e00\u4e2a <code>counted</code> (\u4e0e\u4e4b\u540e\u7b2c\u4e8c\u4e2a <code>counted</code> \u4f5c\u533a\u5206)</p> <pre><code>flowchart LR\n\u53d8\u91cf\u540dfib --&gt; \u7b2c\u4e00\u4e2acounted\u51fd\u6570 --\"f\"--&gt; fib\u51fd\u6570\ncounted_fib --&gt; \u7b2c\u4e00\u4e2acounted\u51fd\u6570</code></pre> </li> <li> <p>\u7b2c\u4e8c\u6b65</p> <pre><code>&gt;&gt;&gt; fib = memo(fib)\n</code></pre> <p>\u8fd9\u91cc <code>fib</code> \u6307\u5411\u7684\u662f \u7b2c\u4e00\u4e2a <code>counted</code> \uff0c\u6240\u4ee5\u4f20\u5165 <code>memo</code> \u7684\u662f \u7b2c\u4e00\u4e2a <code>counted</code> \uff0c</p> <p>\u7136\u540e\u83b7\u5f97 <code>memoized</code> \u51fd\u6570</p> <pre><code>flowchart LR\ncounted_fib --&gt; \u7b2c\u4e00\u4e2acounted\u51fd\u6570 --\"f\"--&gt; fib\u51fd\u6570\n\u53d8\u91cf\u540dfib --&gt; memoized\u51fd\u6570 --\"f\"--&gt; \u7b2c\u4e00\u4e2acounted\u51fd\u6570</code></pre> </li> <li> <p>\u7b2c\u4e09\u6b65</p> <pre><code>&gt;&gt;&gt; fib = count(fib)\n</code></pre> <p>\u548c\u521a\u624d\u7c7b\u4f3c\uff0c\u8fd9\u91cc\u662f\u5c06 <code>memoized</code> \u51fd\u6570\u4f20\u5165 <code>count</code> \uff0c\u7136\u540e\u83b7\u5f97 \u7b2c\u4e8c\u4e2a <code>counted</code> \u51fd\u6570</p> <pre><code>flowchart LR\ncounted_fib --&gt; \u7b2c\u4e00\u4e2acounted\u51fd\u6570 --\"f\"--&gt; fib\u51fd\u6570\nmemoized\u51fd\u6570 --\"f\"--&gt; \u7b2c\u4e00\u4e2acounted\u51fd\u6570\n\u53d8\u91cf\u540dfib --&gt; \u7b2c\u4e8c\u4e2acounted\u51fd\u6570 --\"f\"--&gt; memoized\u51fd\u6570</code></pre> </li> <li> <p>\u800c <code>fib</code> \u51fd\u6570\u5185\u90e8\u5728\u9012\u5f52\u65f6\uff0c\u4f1a\u8bbf\u95ee \u53d8\u91cf\u540d <code>fib</code> \uff0c\u6240\u4ee5\u5173\u7cfb\u53ef\u4ee5\u8fdb\u4e00\u6b65\u7406\u89e3\u4e3a</p> <pre><code>flowchart LR\n\u53d8\u91cf\u540dfib --&gt; \u7b2c\u4e8c\u4e2acounted\u51fd\u6570 --\"f\"--&gt; memoized\u51fd\u6570\ncounted_fib --&gt; \u7b2c\u4e00\u4e2acounted\u51fd\u6570 --\"f\"--&gt; fib\u51fd\u6570\nmemoized\u51fd\u6570 --\"f\"--&gt; \u7b2c\u4e00\u4e2acounted\u51fd\u6570\nfib\u51fd\u6570 -.-&gt; \u53d8\u91cf\u540dfib</code></pre> <p>\u6240\u4ee5\uff0c\u6bcf\u6b21\u8c03\u7528(\u539f\u672c\u7684) <code>fib</code> \u51fd\u6570\u65f6\uff0c\u9012\u5f52\u8c03\u7528\u7684\u662f \u7b2c\u4e8c\u4e2a <code>counted</code> \u51fd\u6570\uff0c\u5e76\u4e14\u7531\u4e8e\u662f \u6811\u5f62\u9012\u5f52\uff0c\u6240\u4ee5 \u7b2c\u4e8c\u4e2a <code>counted</code> \u51fd\u6570\u7684 <code>call_count</code> \u5927\u7ea6\u4e3a <code>n</code> (30)\u7684\u4e24\u500d\uff0c</p> <p>\u800c \u7b2c\u4e00\u4e2a <code>counted</code> \u51fd\u6570\uff0c\u53ea\u6709 <code>memoized</code> \u51fd\u6570\u4e2d\u4f20\u5165\u672a\u88ab\u8bb0\u5f55\u7ed3\u679c\u7684 <code>n</code> \u65f6\uff0c\u624d\u4f1a\u88ab\u8c03\u7528\uff0c\u56e0\u6b64 \u7b2c\u4e00\u4e2a <code>counted</code> \u51fd\u6570 \u7684 <code>call_count</code> \u4e3a <code>31</code> \uff0c\u521a\u597d\u5bf9\u5e94 0 \u5230 30</p> </li> </ul>"},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part2/#3_8","title":"3","text":"<p>John \u7ed9\u51fa\u4e86\u4e00\u79cd\u5229\u7528\u5e73\u65b9\u6765\u52a0\u901f \u5e42\u8fd0\u7b97 \u7684\u65b9\u6cd5\uff1a</p> \\[ b^n = \\begin{cases} 1 &amp; \\mathrm{if} \\ n = 0 \\\\ (b^{\\frac{1}{2}n})^2 &amp; \\mathrm{if} \\ n \\ \\mathrm{is \\ even} \\\\ b \\cdot b^{n-1} &amp; \\mathrm{if} \\ n \\ \\mathrm{is \\ odd} \\\\ \\end{cases} \\] <pre><code>def exp(b, n):\n    if n == 0:\n        return 1\n    elif n % 2 == 0:\n        return square(exp(b, n // 2))\n    else:\n        return b * exp(b, n - 1)\n\ndef square(x):\n    return x * x\n</code></pre>"},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part2/#4_5","title":"4","text":"<p>John \u5c55\u793a\u4e86\u4e00\u4e0b Jupyter Notebook \u7684\u4f7f\u7528</p> <p>Quote</p> <p>John:</p> <p>...this environment is called a jupiter notebook, you can read about them online. it's a common way that people use in order to execute python code when the output is a graph or a chart.</p> <p>John:</p> <p>...\u8fd9\u4e2a\u73af\u5883\u88ab\u79f0\u4e3aJupyter\u7b14\u8bb0\u672c\uff0c\u4f60\u53ef\u4ee5\u5728\u7f51\u4e0a\u4e86\u89e3\u66f4\u591a\u76f8\u5173\u4fe1\u606f\u3002\u8fd9\u662f\u4eba\u4eec\u5728\u6267\u884c\u8f93\u51fa\u4e3a\u56fe\u8868\u6216\u56fe\u8868\u7684Python\u4ee3\u7801\u65f6\u5e38\u7528\u7684\u4e00\u79cd\u65b9\u5f0f\u3002</p> <p></p> <p></p> <p>\u611f\u89c9\u7528\u6765\u753b\u56fe\u4f1a\u5f88\u65b9\u4fbf</p>"},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part2/#lab-08","title":"Lab 08","text":""},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part2/#1_12","title":"1","text":"<p>Q5 \u7684\u989d\u5916\u6311\u6218 extra challenge\uff0c\u5b9e\u73b0\u68c0\u6d4b\u94fe\u8868\u662f\u5426\u5e26\u6709\u5faa\u73af\uff0c\u4f46\u662f\u53ea\u80fd\u4f7f\u7528\u56fa\u5b9a\u5927\u5c0f\u7684/\u6052\u5b9a\u7684\u7a7a\u95f4</p> <p>\u6211\u4e00\u5f00\u59cb\u6ca1\u60f3\u51fa\u6765\uff0c\u7b2c\u4e8c\u5929\u91cd\u65b0\u601d\u8003\u7684\u65f6\u5019\uff0c\u60f3\u5230\u6709\u5faa\u73af\u5c31\u610f\u5473\u7740\u4f1a\u6765\u5230\u66fe\u7ecf\u6765\u8fc7\u7684\u8282\u70b9\uff0c\u90a3\u4e48\u5c31\u610f\u5473\u7740 \u8fd9\u4e2a\u8282\u70b9\u53ef\u4ee5\u7528\u6bd4\u5f53\u524d\u66f4\u5c11\u7684\u6b65\u6570\u4ece\u94fe\u8868\u5934\u5230\u8fbe\uff0c\u6240\u4ee5\uff0c\u6211\u6253\u7b97\u4f7f\u7528\u6052\u5b9a\u7a7a\u95f4\u6765\u8bb0\u5f55\u5f53\u524d\u8d70\u8fc7\u7684\u6b65\u6570\uff0c</p> <p>\u6700\u540e\u6210\u529f\u5b9e\u73b0\u4e86\u529f\u80fd</p> code <pre><code>def has_cycle_constant(link):\n    head = link\n    count = 0\n    while link.rest:\n        link = link.rest\n        count += 1\n        sublist = head\n        for _ in range(count):\n            if sublist is link:\n                return True\n            sublist = sublist.rest\n    return False\n</code></pre>"},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part2/#lecture-23-decomposition","title":"Lecture 23 Decomposition","text":""},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part2/#1_13","title":"1","text":"<p>\u4e00\u4e2a\u4e4b\u524d\u6ca1\u600e\u4e48\u4f7f\u7528\u8fc7\u7684python\u7684\u6570\u636e\u7c7b\u578b set \uff0c\u5b83\u7684\u7279\u6027</p> <ul> <li>\u53ea\u80fd\u5305\u542b\u4e0d\u540c\u7684\u5143\u7d20\uff0c\u5982\u679c\u521b\u5efa\u65f6\u6709\u591a\u4e2a\u76f8\u540c\u7684\u5143\u7d20\uff0c\u5219\u53ea\u4f1a\u4fdd\u7559\u4e00\u4e2a</li> <li>\u5143\u7d20\u7684\u987a\u5e8f\u662f\u65e0\u5e8f\u7684</li> <li>John\u4ecb\u7ecd\u8bf4\uff0c\u4f7f\u7528 <code>in</code> \u8bed\u53e5\u67e5\u8be2\u67d0\u4e2a\u5143\u7d20\u662f\u5426\u5728\u4e00\u4e2a set \u4e2d\uff0c\u6240\u9700\u7684\u65f6\u95f4\u662f\u5e38\u6570\u7ea7\u7684\uff0c\u4e0d\u4f1a\u968f\u7740 set \u7684\u957f\u5ea6\u589e\u957f(\u50cf\u5217\u8868\u5c31\u4f1a\u968f\u7740\u957f\u5ea6\u589e\u957f\uff0c\u662f\u7ebf\u6027\u7ea7\u7684)</li> <li><code>.union()</code> \u548c <code>.intersection()</code> \u5206\u522b\u662f set \u53d6\u5e76\u96c6\u548c\u4ea4\u96c6\u7684\u65b9\u6cd5\uff0c\u5e76\u4e14 John \u8bf4\u9053\uff0c\u8fd9\u4e24\u4e2a\u65b9\u6cd5\u5e76\u4e0d\u4f1a\u5bf9\u539f\u672c\u7684 set \u8fdb\u884c\u4fee\u6539\uff0c\u800c\u662f\u4f1a\u521b\u5efa\u51fa\u4e00\u4e2a\u65b0\u7684 set</li> </ul>"},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part2/#lecture-23-qa","title":"Lecture 23 Q&amp;A","text":""},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part2/#1_14","title":"1","text":"<p>\u6709\u4eba\u63d0\u95ee\u7684\u4e00\u9053\u8003\u8bd5\u9898\u76ee</p> <p></p> <p>\u6211\u611f\u89c9\u8fd8\u86ee\u6709\u610f\u601d\uff0c\u4e8e\u662f\u6211\u5c31\u6682\u505c\u5c1d\u8bd5\u4e86\u4e00\u4e0b</p> <pre><code>def stable(s, k, n):\n    \"\"\"Return whether all pairs of elements of S within distance K differ by at most N.\n\n    &gt;&gt;&gt; stable([1, 2, 3, 5, 6], 1, 2)  # All adjacent values differ by at most 2.\n    True\n    &gt;&gt;&gt; stable([1, 2, 3, 5, 6], 2, 2)  # abs(5-2) is a difference of 3.\n    False\n    &gt;&gt;&gt; stable([1, 5, 1, 5, 1], 2, 2)  # abs(5-1) is a difference of 4.\n    False\n    \"\"\"\n    for i in range(len(s)):\n        near = range(max(i - k, 0), i)\n        if any([abs(s[j] - s[i]) &gt; n for j in near]):\n            return False\n    return True\n</code></pre> <p>\u8fd0\u884c\u8fdb\u884c\u6d4b\u8bd5\uff0c\u6210\u529f\u901a\u8fc7</p> <pre><code>&gt; python -m doctest -v .\\test.py\nTrying:\n    stable([1, 2, 3, 5, 6], 1, 2)  # All adjacent values differ by at most 2.\nExpecting:\n    True\nok\nTrying:\n    stable([1, 2, 3, 5, 6], 2, 2)  # abs(5-2) is a difference of 3.\nExpecting:\n    False\nok\nTrying:\n    stable([1, 5, 1, 5, 1], 2, 2)  # abs(5-1) is a difference of 4.\nExpecting:\n    False\nok\n1 items had no tests:\n    test\n1 items passed all tests:\n   3 tests in test.stable\n3 tests in 2 items.\n3 passed and 0 failed.\nTest passed.\n</code></pre>"},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part2/#2_12","title":"2","text":"<p>Quote</p> <pre><code>\"\"\"A: (3 pts) Implement is_power, which takes a positive integer base and a\nnon-negative integer s. It returns whether s is power of base, meaning that there\nis some non-negative integer n such that pow(base, n) equals s.\n\nIMPORTANT: You may not call pow, use the ** operator, or import any function\n(such as math.log). Your solution must be recursive.\n\nCheck the doctests with: python3 -q a\n\"\"\"\ndef is_power(base, s):\n    \"\"\"Return whether s is a power of base.\n\n    &gt;&gt;&gt; is_power(5, 625)  # pow(5, 4) = 5 * 5 * 5 * 5 = 625\n    True\n    &gt;&gt;&gt; is_power(5, 1)    # pow(5, 0) = 1\n    True\n    &gt;&gt;&gt; is_power(5, 5)    # pow(5, 1) = 5\n    True\n    &gt;&gt;&gt; is_power(5, 15)   # 15 is not a power of 5 (it's multiple)\n    False\n    &gt;&gt;&gt; is_power(3, 9)\n    True\n    &gt;&gt;&gt; is_power(3, 8)\n    False\n    &gt;&gt;&gt; is_power(3, 10)\n    False\n    &gt;&gt;&gt; is_power(1, 8)\n    False\n    &gt;&gt;&gt; is_power(2, 0)    # 0 is not a power of any positive base.\n    False\n\n    &gt;&gt;&gt; is_power(4, 16)\n    True\n    &gt;&gt;&gt; is_power(4, 64)\n    True\n    &gt;&gt;&gt; is_power(4, 63)\n    False\n    &gt;&gt;&gt; is_power(4, 65)\n    False\n    &gt;&gt;&gt; is_power(4, 32)\n    False\n    \"\"\"\n    assert base &gt; 0 and s &gt;= 0\n    assert type(base) is int and type(s) is int\n    if ______:\n        return True\n    elif ______:\n        return False\n    else:\n        return ______\n\n\ncurry2 = lambda f: lambda x: lambda y: f(x, y)\n\n\"\"\"B: (5 pts) Implement powers, a generator function which takes positive\nintegers n and k. It yields all integers m that are both powers of k and whose\ndigits appear in order in n.\n\nAssume thar is_power is implemented correctly.\n\nNote: powers may yield its results in any order. The doctests below check what\nis yielded, but not the order. The built-in sorted funcion used in the doctests\ntakes in an iterable object and returns a list containing the elements of the\niterable in non-decreasing order.\n\nCheck the doctests with: python3 ok -q b\"\"\"\ndef powers(n, k):\n    \"\"\"Yield all powers of k whose digits appear in order in n.\n\n    &gt;&gt;&gt; sorted(powers(12345, 5))\n    [1, 5, 25, 125]\n    &gt;&gt;&gt; sorted(powers(54321, 5))  # 25 and 125 are not in order\n    [1, 5]\n    &gt;&gt;&gt; sorted(powers(2493, 3))\n    [3, 9, 243]\n\n    &gt;&gt;&gt; sorted(powers(2493, 2))\n    [2, 4]\n    &gt;&gt;&gt; sorted(powers(164352, 2))\n    [1, 2, 4, 16, 32, 64]\n    \"\"\"\n    def build(seed):\n        \"\"\"Yield all non-negetive integers whose digits appear in order in seed.\n        0 is yielded because 0 has no digits, so all its digits are in seed.\n        \"\"\"\n        if seed == 0:\n            yield 0\n        else:\n            for x in ______:\n                ______\n                ______\n    yield from filter(curry2(______)(______), build(n))\n</code></pre> <p>\u6709\u4eba\u63d0\u95ee\u7684\u4e00\u9053\u9898\u76ee\uff0c\u6211\u6709\u70b9\u60f3\u5c1d\u8bd5\u4e00\u4e0b\uff0c</p> <p>\u672c\u6765\u53ea\u662f\u60f3\u505a\u4e00\u4e0b\u7b2c\u4e8c\u9898/\u7b2c\u4e8c\u90e8\u5206\uff0c\u4f46\u662f\u770b\u9898\u76ee\u8981\u6c42\u597d\u50cf\u7b2c\u4e8c\u9898\u9700\u8981\u7528\u5230\u7b2c\u4e00\u9898\u7684\u51fd\u6570\uff0c\u4e8e\u662f\u5c31\u8fde\u7b2c\u4e00\u9898\u4e00\u8d77\u505a\u5b8c\u4e86\ud83d\ude02</p> <pre><code>def is_power(base, s):\n    \"\"\"Return whether s is a power of base.\n\n    &gt;&gt;&gt; is_power(5, 625)  # pow(5, 4) = 5 * 5 * 5 * 5 = 625\n    True\n    &gt;&gt;&gt; is_power(5, 1)    # pow(5, 0) = 1\n    True\n    &gt;&gt;&gt; is_power(5, 5)    # pow(5, 1) = 5\n    True\n    &gt;&gt;&gt; is_power(5, 15)   # 15 is not a power of 5 (it's multiple)\n    False\n    &gt;&gt;&gt; is_power(3, 9)\n    True\n    &gt;&gt;&gt; is_power(3, 8)\n    False\n    &gt;&gt;&gt; is_power(3, 10)\n    False\n    &gt;&gt;&gt; is_power(1, 8)\n    False\n    &gt;&gt;&gt; is_power(2, 0)    # 0 is not a power of any positive base.\n    False\n\n    &gt;&gt;&gt; is_power(4, 16)\n    True\n    &gt;&gt;&gt; is_power(4, 64)\n    True\n    &gt;&gt;&gt; is_power(4, 63)\n    False\n    &gt;&gt;&gt; is_power(4, 65)\n    False\n    &gt;&gt;&gt; is_power(4, 32)\n    False\n    \"\"\"\n    assert base &gt; 0 and s &gt;= 0\n    assert type(base) is int and type(s) is int\n    if s == 1:\n        return True\n    elif base == 0 or base == 1 or s == 0 or s % base != 0:\n        return False\n    else:\n        return is_power(base, s // base)\n\n\ncurry2 = lambda f: lambda x: lambda y: f(x, y)\n\ndef powers(n, k):\n    \"\"\"Yield all powers of k whose digits appear in order in n.\n\n    &gt;&gt;&gt; sorted(powers(12345, 5))\n    [1, 5, 25, 125]\n    &gt;&gt;&gt; sorted(powers(54321, 5))  # 25 and 125 are not in order\n    [1, 5]\n    &gt;&gt;&gt; sorted(powers(2493, 3))\n    [3, 9, 243]\n\n    &gt;&gt;&gt; sorted(powers(2493, 2))\n    [2, 4]\n    &gt;&gt;&gt; sorted(powers(164352, 2))\n    [1, 2, 4, 16, 32, 64]\n    \"\"\"\n    def build(seed):\n        \"\"\"Yield all non-negetive integers whose digits appear in order in seed.\n        0 is yielded because 0 has no digits, so all its digits are in seed.\n        \"\"\"\n        if seed == 0:\n            yield 0\n        else:\n            for x in build(seed // 10):\n                yield x\n                yield x * 10 + seed % 10\n    yield from filter(curry2(is_power)(k), build(n))\n</code></pre>"},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part2/#3_9","title":"3","text":"<p>John \u63d0\u5230\u4e86 lab 08 \u7684 Q6 <code>reverse_other</code> \u8fd9\u9898\uff0c\u57fa\u672c\u7684\u601d\u8def\u548c\u4e4b\u524d\u6211\u505a\u7684\u65f6\u5019\u7684\u601d\u8def\u611f\u89c9\u5dee\u4e0d\u591a\uff0c\u4f46\u662f\u5728\u5177\u4f53\u5904\u7406\u4e0a\uff0c\u6211\u89c9\u5f97\u8001\u5e08\u7684\u4e00\u4e9b\u5904\u7406\u503c\u5f97\u5b66\u4e60\uff0c</p> <p>\u9996\u5148\u5c31\u662f\uff0c\u7528\u5230\u4e86\u4e4b\u524d\u7684\u7ec3\u4e60\u4e2d\u4e5f\u6709\u63d0\u5230\u7684 <code>zip</code> \u51fd\u6570\uff0c\u5229\u7528\u4e86 <code>zip</code> \u611f\u89c9\u5c31\u6bd4\u6211\u4e4b\u524d\u7684\u5199\u6cd5\u66f4\u52a0\u7b80\u6d01\uff0c</p> <p>\u7136\u540e\u662f\u5904\u7406 \u9694\u4e00\u5c42\u53cd\u8f6c \u7684\u64cd\u4f5c\u4e0a\uff0c\u662f\u76f4\u63a5\u5728\u5b50\u8282\u70b9\u7684\u5faa\u73af\u4e2d\u518d\u6b21\u5faa\u73af\uff0c\u5c31\u521a\u597d\u80fd\u62ff\u5230 \u5b59\u5b50\u8282\u70b9\uff0c\u6211\u4e4b\u524d\u7684\u505a\u6cd5\u5c31\u7a0d\u5fae\u9ebb\u70e6\uff0c\u8fd8\u9700\u8981\u4e00\u4e2a <code>helper</code> \u51fd\u6570\u6765\u8f85\u52a9\u8ba1\u6570</p> <p></p> <p>John\u53c8\u5c55\u793a\u4e86\u4e0d\u4f7f\u7528 <code>zip</code> \u7684\u5b9e\u73b0\u65b9\u6cd5\uff0c\u800c\u4ed6\u8fd9\u6b21\u5229\u7528\u4e86\u8d1f\u7684\u4e0b\u6807\u6765\u5b9e\u73b0\u7ffb\u8f6c</p> <pre><code>for i in range(len(t.branches)):\n    t.branches[i].label = labels_of_branches[-i - 1]\n    ...\n</code></pre>"},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part2/#4_6","title":"4","text":"<p>\u6709\u4eba\u63d0\u95ee\uff0c\u5982\u679c\u4e00\u4e2a\u7c7b\u7ee7\u627f\u81ea\u4e24\u4e2a\u4e0d\u540c\u7684\u7c7b\uff0c\u90a3\u4e48\u5b83\u4f7f\u7528 <code>super</code> \u65f6\u4f1a\u600e\u6837</p> <p>Quote</p> <p>John:</p> <p>so if you use super on a class that inherits from two different classes, what have you built, you built something very strange, but basically whay you've built is the same object except for, it's gonna not look up things is its class, it's gonna look at them up in one of the base classes, and which one, well, it looks at them in the order that you inherit, so if have a class that inherits from both b and c, it's gonna look in b first and then it's gonna look at c, to find the corresponding attribute that you're looking at.</p> <p>John:</p> <p>\u5f53\u4f60\u5728\u4e00\u4e2a\u4ece\u4e24\u4e2a\u4e0d\u540c\u7c7b\u7ee7\u627f\u7684\u7c7b\u4e0a\u4f7f\u7528 super \u65f6\uff0c\u4f60\u6784\u5efa\u4e86\u4e00\u4e9b\u975e\u5e38\u5947\u602a\u7684\u4e1c\u897f\uff0c\u4f46\u57fa\u672c\u4e0a\u4f60\u6784\u5efa\u7684\u662f\u76f8\u540c\u7684\u5bf9\u8c61\uff0c\u53ea\u662f\u5b83\u4e0d\u4f1a\u5728\u5176\u7c7b\u4e2d\u67e5\u627e\u5c5e\u6027\uff0c\u800c\u662f\u4f1a\u5728\u5176\u4e2d\u4e00\u4e2a\u57fa\u7c7b\u4e2d\u67e5\u627e\u3002\u800c\u5177\u4f53\u662f\u54ea\u4e00\u4e2a\u57fa\u7c7b\u5462\uff1f\u5b83\u4f1a\u6309\u7167\u4f60\u7ee7\u627f\u7684\u987a\u5e8f\u67e5\u627e\uff0c\u6240\u4ee5\u5982\u679c\u6709\u4e00\u4e2a\u7c7b\u540c\u65f6\u7ee7\u627f\u81ea\u7c7bB\u548c\u7c7bC\uff0c\u5b83\u4f1a\u9996\u5148\u5728B\u4e2d\u67e5\u627e\uff0c\u7136\u540e\u518d\u5728C\u4e2d\u67e5\u627e\u76f8\u5e94\u7684\u5c5e\u6027\u3002</p>"},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part2/#lecture-24-data-example","title":"Lecture 24 Data Example","text":""},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part2/#1_15","title":"1","text":"<p>\u5c1d\u8bd5\u81ea\u5df1\u505a\u4e86\u4e00\u4e0b\u8fd9\u56db\u9898\uff0c\u4e0b\u9762\u662f\u6211\u5199\u7684</p> <pre><code>def indices_of_min_abs(s):\n    \"\"\"\n    &gt;&gt;&gt; indices_of_min_abs([-4, -3, -2, 3, 2, 4])\n    [2, 4]\n    &gt;&gt;&gt; indices_of_min_abs([1, 2, 3, 4, 5])\n    [0]\n    \"\"\"\n    min_abs = min([abs(x) for x in s])\n    return [i for i in range(len(s)) if abs(s[i]) == min_abs]\n\ndef largest_sum_of_adjacency(s):\n    \"\"\"\n    &gt;&gt;&gt; largest_sum_of_adjacency([-4, -3, -2, 3, 2, 4])\n    6\n    &gt;&gt;&gt; largest_sum_of_adjacency([-4, 3, -2, -3, 2, -4])\n    1\n    \"\"\"\n    return max([s[i] + s[i + 1] for i in range(len(s) - 1)])\n\ndef map_digit_to_element(s):\n    \"\"\"\n    &gt;&gt;&gt; map_digit_to_element([5, 8, 13, 21, 34, 55, 89])\n    {1: [21], 3: [13], 4: [34], 5: [5, 55], 8: [8], 9: [89]}\n    \"\"\"\n    result = {}\n    for x in s:\n        d = x % 10\n        if d not in result:\n            result[d] = [x]\n        else:\n            result[d] += [x]\n    return {d: result[d] for d in sorted(result)}\n\ndef every_element_has_equal_value(s):\n    \"\"\"\n    &gt;&gt;&gt; every_element_has_equal_value([-4, -3, -2, 3, 2, 4])\n    False\n    &gt;&gt;&gt; every_element_has_equal_value([4, 3, 2, 3, 2, 4])\n    True\n    \"\"\"\n    for i in range(len(s)):\n        if all([i == j or s[i] != s[j] for j in range(len(s))]):\n            return False\n    return True\n</code></pre> <p>\u5728\u505a\u7b2c\u4e09\u4e2a\u95ee\u9898\u65f6\uff0c\u53d1\u73b0\u4e86\u5982\u679c <code>sorted</code> \u51fd\u6570\u4f20\u5165\u7684\u662f\u4e00\u4e2a\u5b57\u5178\uff0c\u90a3\u4e48\u4f1a\u8fd4\u56de\u4ee5\u952e\u4e3a\u5143\u7d20\u6392\u597d\u5e8f\u7684\u5217\u8868</p>"},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part2/#2_13","title":"2","text":"<p>John \u7b2c\u4e00\u4e2a\u95ee\u9898\u4e2d\u8fd0\u7528\u4e86 <code>map</code> \u51fd\u6570\u6765\u83b7\u53d6 <code>min_abs</code> \uff0c\u611f\u89c9\u6bd4\u6211\u7684\u4ee3\u7801\u770b\u8d77\u6765\u66f4\u7b80\u6d01\u4e9b</p> <pre><code>min_abs = min(map(abs, s))\n</code></pre> <p>John <code>return</code> \u7684\u90a3\u4e00\u884c\u4ee3\u7801\uff0c\u63d0\u4f9b\u4e86\u4f7f\u7528 <code>filter</code> \u51fd\u6570\u7684\u53e6\u4e00\u79cd\u5199\u6cd5(\u7531\u4e8e <code>filter</code> \u8fd4\u56de\u7684\u662f\u4e00\u4e2a\u8fed\u4ee3\u5668\uff0c\u6240\u4ee5\u9700\u8981\u8f6c\u6362\u6210\u5217\u8868)\uff0c</p> <pre><code>return list(filter(lambda i: abs(s[i]) == min_abs, range(len(s))))\n</code></pre> <p></p> <p>John \u5728\u7b2c\u4e8c\u4e2a\u95ee\u9898\u4e2d\u53c8\u63d0\u4f9b\u4e86\u7b2c\u4e8c\u79cd\u65b9\u6cd5\uff0c\u5229\u7528 <code>zip</code> \u51fd\u6570\uff0c\u5e76\u4e14\u5229\u7528\u5207\u7247\u6765\u83b7\u53d6\u76f8\u90bb\u5143\u7d20(\u611f\u89c9\u592a\u5f3a\u4e86\ud83d\ude32\uff0c\u5b8c\u5168\u6ca1\u60f3\u5230\u80fd\u8fd9\u6837\u7528 <code>zip</code> )</p> <pre><code>return max([a + b for a, b in zip(s[:-1], s[1:])])\n</code></pre> <p></p> <p>\u7b2c\u4e09\u4e2a\u95ee\u9898 John \u7528\u4e86\u8ddf\u6211\u7684\u601d\u8def\u4e0d\u540c\u7684\u53e6\u4e00\u79cd\u601d\u8def\u6765\u5b9e\u73b0</p> <pre><code>return {d: [x for x in s if x % 10 == d] for d in range(10) if any([x % 10 == d for x in s])}\n</code></pre> <p></p> <p>\u7b2c\u56db\u4e2a\u95ee\u9898\uff0cJohn \u4e00\u5f00\u59cb\u7684\u601d\u8def\u611f\u89c9\u611f\u89c9\u548c\u6211\u7684\u5dee\u4e0d\u591a\uff0c\u4f46\u662f\u4e5f\u6bd4\u6211\u7684\u4ee3\u7801\u8981\u7b80\u6d01\uff0c</p> <pre><code>return all([s[i] in s[:i] + s[i + 1:] for i in range(len(s))])\n</code></pre> <p>\u4f46\u662f John \u63d0\u4f9b\u4e86\u7b2c\u4e8c\u79cd\u601d\u8def\uff0c\u5982\u679c\u5217\u8868\u4e2d\u6709\u4e24\u4e2a\u76f8\u540c\u7684\u6570\uff0c\u90a3\u4e48\u610f\u5473\u7740\u8fd9\u4e2a\u6570\u7684\u4e2a\u6570\u5927\u4e8e\u7b49\u4e8e2\uff0c</p> <p></p> <p>\u56e0\u6b64\u53ef\u4ee5\u8fd9\u6837\u5199</p> <pre><code>return all([sum([1 for y in s if y == x]) &gt; 1 for x in s])\n</code></pre> <p>\u800c\u8fdb\u4e00\u6b65\uff0c\u53ef\u4ee5\u501f\u52a9 <code>min</code> \u6765\u5224\u65ad\u6700\u5c0f\u7684\u7ed3\u679c\u5927\u4e8e 1 \u5c31\u53ef\u4ee5\u4e86\uff0c</p> <p>\u800c\u7136\u540e\uff0c\u5217\u8868\u6709\u4e00\u4e2a <code>.count()</code> \u65b9\u6cd5\uff0c\u8ba1\u7b97\u67d0\u4e2a\u5143\u7d20\u7684\u4e2a\u6570\uff0c\u56e0\u6b64\u5f97\u5230(\u5e94\u8be5\u662f)\u6700\u7b80\u6d01\u7684\u5199\u6cd5(\u771f\u7ed9\u6211\u770b\u5f97\u5168\u7a0b\u60ca\u5446\u4e86\ud83d\ude32)</p> <pre><code>return min([s.count(x) for x in s]) &gt; 1\n</code></pre> <p></p>"},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part2/#3_10","title":"3","text":"<p>\u8fd9\u91cc\u7684\u7b2c\u4e09\u548c\u7b2c\u56db\u4e2a\u95ee\u9898\u611f\u89c9\u6709\u70b9\u610f\u601d\uff0c\u7b2c\u56db\u4e2a\u95ee\u9898\u6211\u4e00\u5f00\u59cb\u60f3\u6ca1\u6709\u60f3\u51fa\u6765\uff0c\u6700\u540e\u770b\u4e86 John \u7684\u7f16\u5199\u624d\u60f3\u660e\u767d</p> <p></p> <pre><code>def merge(s, t):\n    \"\"\"Return a sorted Link with the elements of sorted s &amp; t.\n\n    &gt;&gt;&gt; a = Link(1, Link(5))\n    &gt;&gt;&gt; b = Link(1, Link(4))\n    &gt;&gt;&gt; merge(a, b)\n    Link(1, Link(1, Link(4, Link(5))))\n    &gt;&gt;&gt; a\n    Link(1, Link(5))\n    &gt;&gt;&gt; b\n    Link(1, Link(4))\n    \"\"\"\n    if s is Link.empty:\n        return t\n    elif t is Link.empty:\n        return s\n    elif s.first &lt;= t.first:\n        return Link(s.first, merge(s.rest, t))\n    else:\n        return Link(t.first, merge(s, t.rest))\n\ndef merge_in_place(s, t):\n    \"\"\"Return a sorted Link with the elements of sorted s &amp; t.\n\n    &gt;&gt;&gt; a = Link(1, Link(5))\n    &gt;&gt;&gt; b = Link(1, Link(4))\n    &gt;&gt;&gt; merge(a, b)\n    Link(1, Link(1, Link(4, Link(5))))\n    &gt;&gt;&gt; a\n    Link(1, Link(1, Link(4, Link(5))))\n    &gt;&gt;&gt; b\n    Link(1, Link(4, Link(5)))\n    \"\"\"\n    if s is Link.empty:\n        return t\n    elif t is Link.empty:\n        return s\n    elif s.first &lt;= t.first:\n        # return Link(s.first, merge(s.rest, t))\n        s.rest = merge_in_place(s.rest, t)\n        return s\n    else:\n        # return Link(t.first, merge(s, t.rest))\n        t.rest = merge_in_place(s, t.rest)\n        return t\n</code></pre>"},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part2/#lecture-24-qa","title":"Lecture 24 Q&amp;A","text":""},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part2/#1_16","title":"1","text":"<p>\u63d0\u5230\u768417\u6625(\u7b2c\u4e8c\u6b21\u671f\u4e2d\u6a21\u62df\u8003)\u7684\u4e00\u4e2a\u9898\u76ee</p> <p>Quote</p> <p>Perfect Engine!</p> <p>You are in an apocalyptic society and have been charged with making an n-gen, or a generator that computes all of the n-perfect numbers. However, in this apocalyptic society, built-in AND user-defined Python multiplication is forbidden in any form!</p> <p>You have a blueprint for building a few n-gins from a natural number generator:</p> <pre><code>A 2-gen:\n1 2 3 4 5 6 7 8 9 ...\n1 4 9 16 25 ...\n</code></pre> <pre><code>A 3-gen:\n1 2 3 4 5 6 7 8 9 ...\n1 3 7 12 19 27 ...\n1 8 27 ...\n</code></pre> <p>Hint: Here is how <code>yield from</code> works. When used inside an iterable <code>yield from</code> will issue each element from another iterable as though it was issued from the first iterable. The following code is equivalent:</p> <pre><code>def generator1 ():\n    for item in generator2 ():\n        yield item\n    # do more things in this generator\n</code></pre> <pre><code>def generator1 ():\n    yield from generator2 ()\n    # more things on this generator\n</code></pre> <p>Now its your job to build the perfect n-gen and power society out of the apocalypse! Good luck!</p> <pre><code>def nats():\n    \"\"\"\n    A generator that yields\n    all natural numbers.\n    Might be helpful!\n    \"\"\"\n    curr = 0\n    while True:\n        curr += 1\n        yield curr\n\ndef create_skip(n, gen):\n    if n == 1:\n        yield from ____________\n    curr , skip = ________, ________\n    for elem in ____________:\n        if skip == n:\n            ___________________\n        else:\n            curr = __________________\n            skip = _________________\n            yield _________________\n\ndef perfect_ngen(n):\n    \"\"\"\n    &gt;&gt;&gt; two_gen = perfect_ngen(2)\n    &gt;&gt;&gt; next(two_gen)\n    1\n    &gt;&gt;&gt; next(two_gen)\n    4\n    &gt;&gt;&gt; next(two_gen)\n    9\n    &gt;&gt;&gt; three_gen = perfect_ngen(3)\n    &gt;&gt;&gt; next(three_gen)\n    1\n    &gt;&gt;&gt; next(three_gen)\n    8\n    &gt;&gt;&gt; next(three_gen)\n    27\n    \"\"\"\n    gen = create_skip(____, _______)\n    while _________________:\n        n = _________________\n        gen = create_skip(____, _______)\n    return gen\n</code></pre> <p>\u611f\u89c9\u8fd9\u9898\u6709\u70b9\u597d\u73a9\uff0c\u7528\u5230\u4e86\u4e00\u4e9b\u6570\u5b66\u4e0a\u7684\u7ed3\u8bba\uff0c\u770b\u4e86\u597d\u4e00\u4f1a\u624d\u770b\u61c2\u9898\u76ee\uff0c</p> <p>\u5927\u6982\u662f\uff0c\u8981\u5b9e\u73b0\u4e00\u4e2a\u80fd\u8fd4\u56de \u81ea\u7136\u6570\u7684 n \u6b21\u65b9\u751f\u6210\u5668 \u7684\u51fd\u6570\uff0c\u800c\u4e14\u4e0d\u80fd\u4f7f\u7528\u4e58\u6cd5\uff0c</p> <p>\u4ece\u7ed9\u51fa\u7684\u4e24\u4e2a\u4f8b\u5b50\u770b\uff0c\u8f93\u51fa\u5e73\u65b9\u6570\u5217\u7684\u65b9\u6cd5\u662f\uff0c\u5c06\u81ea\u7136\u6570\u5217\u4e2d\u7684\u5076\u6570(2\u7684\u500d\u6570)\u8df3\u8fc7\uff0c\u518d\u5c06\u6570\u5217\u4e2d\u4e4b\u524d\u7684\u5176\u4ed6\u6570\u52a0\u8d77\u6765\uff0c\u548c\u5c31\u521a\u597d\u662f\u5e73\u65b9\uff0c</p> <p>\u800c\u5bf9\u4e8e\u7acb\u65b9\u6570\u5217\uff0c\u4e0e\u5e73\u65b9\u7c7b\u4f3c\uff0c\u5148\u662f\u5c06\u81ea\u7136\u6570\u5217\u4e2d 3\u7684\u500d\u6570\u8df3\u8fc7\uff0c\u7136\u540e\u5c06\u4e4b\u524d\u7684\u5176\u4ed6\u6570\u52a0\u8d77\u6765\uff0c\u5f97\u5230\u4e00\u4e2a\u6570\u5217\uff0c\u518d\u5c06\u8fd9\u4e2a\u6570\u5217\u518d\u8fdb\u884c\u4e00\u6b21\u540c\u6837\u7684\u64cd\u4f5c(\u5373\u8df3\u8fc7 3\u7684\u500d\u6570\uff0c\u53d6\u4e4b\u524d\u6570\u7684\u548c\uff0c\u770b\u5230\u8fd9\u91cc\u4f1a\u53d1\u73b0 \u81ea\u7136\u6570\u5217\u4e2d\uff0c3\u7684\u500d\u6570\u521a\u597d\u95f4\u9694\u4e3a3\uff0c\u800c\u65b0\u6570\u5217\u4e2d\u521a\u597d\u95f4\u9694\u4e3a2\uff0c\u8fd9\u4e00\u70b9\u4f1a\u5728\u7ed9\u51fa\u7684\u4ee3\u7801\u6846\u67b6\u4e2d\u88ab\u7528\u4e0a)\uff0c\u6700\u540e\u5f97\u5230\u7684\u6570\u5217\u5c31\u662f\u7acb\u65b9\u6570\u5217(\u611f\u89c9\u597d\u795e\u5947\ud83d\ude32)\uff0c</p> <p>\u6240\u4ee5\u6211\u5c31\u5c1d\u8bd5\u4e86\u4e00\u4e0b\u8fd9\u4e2a\u9898\u76ee</p> <pre><code>def nats():\n    \"\"\"\n    A generator that yields\n    all natural numbers.\n    Might be helpful!\n    \"\"\"\n    curr = 0\n    while True:\n        curr += 1\n        yield curr\n\ndef create_skip(n, gen):\n    if n == 1:\n        yield from gen\n    curr , skip = 0, 1\n    for elem in gen:\n        if skip == n:\n            skip = 1\n        else:\n            curr = curr + elem\n            skip = skip + 1\n            yield curr\n\ndef perfect_ngen(n):\n    \"\"\"\n    &gt;&gt;&gt; two_gen = perfect_ngen(2)\n    &gt;&gt;&gt; next(two_gen)\n    1\n    &gt;&gt;&gt; next(two_gen)\n    4\n    &gt;&gt;&gt; next(two_gen)\n    9\n    &gt;&gt;&gt; three_gen = perfect_ngen(3)\n    &gt;&gt;&gt; next(three_gen)\n    1\n    &gt;&gt;&gt; next(three_gen)\n    8\n    &gt;&gt;&gt; next(three_gen)\n    27\n    \"\"\"\n    gen = create_skip(n, nats())\n    while n != 1:\n        n = n - 1\n        gen = create_skip(n, gen)\n    return gen\n</code></pre> <p></p>"},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part2/#2_14","title":"2","text":"<p>Quote</p> <pre><code>def close(n, smallest=10, d=10):\n    \"\"\" A sequence is near increasing if each element but the last two is smaller than all elements\n    following its subsequent element. That is, element i must be smaller than elements i + 2, i + 3, i + 4 etc.\n    Implement close, which takes a non-negative integer n and returns the largest near increasing sequence\n    of digits within n as an integer. The arguments smallest and d are part of the implementation; you must\n    determine their purpose. The only values you may use are integers and booleans (True and False) (no lists, strings, etc.).\n    Return the longest sequence of near-increasing digits in n.\n    &gt;&gt;&gt; close(123)\n    123\n    &gt;&gt;&gt; close(153)\n    153\n    &gt;&gt;&gt; close(1523)\n    153\n    &gt;&gt;&gt; close(15123)\n    1123\n    &gt;&gt;&gt; close(11111111)\n    11\n    &gt;&gt;&gt; close(985357)\n    557\n    &gt;&gt;&gt; close(14735476)\n    143576\n    &gt;&gt;&gt; close(812348567)\n    1234567\n    &gt;&gt;&gt; close(45671) # with a 1 is 71; without a 1 is 4567\n    4567\n    \"\"\"\n    if n == 0:\n        return 0\n    no = close(n // 10, smallest, d)\n    if smallest &gt; ______:\n        yes = ______\n        return ______(yes, no)\n    return ______\n</code></pre> <p>\u8fd9\u9053\u9898\u6709\u70b9\u96be\u60f3\uff0c\u4e00\u5f00\u59cb\u770b\u5b8c\u4e86 John \u5199\u51fa\u7b54\u6848\u7684\u6574\u4e2a\u8fc7\u7a0b\u4f46\u8fd8\u662f\u6ca1\u60f3\u660e\u767d\uff0c</p> <p>\u7136\u540e John \u6362\u4e86\u4e00\u4e2a\u7b80\u5355\u7684\u4f8b\u5b50\u6765\u8bb2\u89e3\uff0c\u5b9e\u73b0\u83b7\u5f97\u6700\u5927\u7684\u9012\u589e\u5b50\u5e8f\u5217\u51fd\u6570</p> <p></p> <p>Quote</p> <p>John:</p> <p>...let's let's solve a simpler one, more complicated than this, but less complicated than this, let's get rid of this notion of near increasing, and just, uh, look for the longest increasing sequence within n. we would need to keep track of some notion of what's the smallest thing i've done so far, um, so what does this do, return the sequence of digits within n, sorry, the largest sequence of digits within n that is increasing. so how might it work, if i call increasing on here's some digits, let's see what we got we could have two, then four, then seven and eight, that's pretty long try one more, uh we could have three four five six seven, that's pretty long. i didn't check too carefully but it's about right.</p> <pre><code>def increasing(n, smallest=10):\n    \"\"\"Return the largest sequence of digits within n that is increasing.\n\n    &gt;&gt;&gt; increasing(87247861)\n    2478\n    &gt;&gt;&gt; increasing(367456751)\n    34567\n    \"\"\"\n</code></pre> <p>how will we do this one, if n equals zero, return zero. otherwise, if um the last digit of n is less than whatever is the smallest thing i've seen so far, then i might want to include it. so i'm going to just write this as, maybe i'll use n percent 10 in the result, or maybe not.</p> <pre><code>def increasing(n, smallest=10):\n    \"\"\"Return the largest sequence of digits within n that is increasing.\n\n    &gt;&gt;&gt; increasing(87247861)\n    2478\n    &gt;&gt;&gt; increasing(367456751)\n    34567\n    \"\"\"\n    if n == 0:\n        return 0\n    elif n % 10 &lt; smallest:\n        # Maybe I'll use n % 10 in the result or maybe not\n    else:\n</code></pre> <p>if n if the last digit is not allowed because it's bigger, than something that i've already decided i'm going to use, then i just can't use it. so that means the best i can do, is find the biggest increasing number within n divided by 10. okay so now we're going to have this notion of no and yes. no says i ignore n percent ten.</p> <pre><code>def increasing(n, smallest=10):\n    \"\"\"Return the largest sequence of digits within n that is increasing.\n\n    &gt;&gt;&gt; increasing(87247861)\n    2478\n    &gt;&gt;&gt; increasing(367456751)\n    34567\n    \"\"\"\n    if n == 0:\n        return 0\n    elif n % 10 &lt; smallest:\n        # Maybe I'll use n % 10 in the result or maybe not\n        no = increasing(n // 10)\n        yes\n    else:\n        return increasing(n // 10)\n</code></pre> <p>this is the same as that, which is why this had kind of a funny structure, we'll talk about that later. it is important that when you're looking for the smallest thing within, and ignoring the last digit you still respect, how whatever digits you've decided to keep already along the way, so you have to pass in this notion of what's the smallest thing i've already decided to use. and then if you decide to use n percent 10, which is smaller than the smallest, now you can still find more digits, but they're not allowed to just be smaller than the smallest thing you had previously seen, now they have to be smaller than n percent 10. it turns out that this could be simplified, because we know that this is smaller than that, so i could trim this down, and i'd get the same result. but i'm going to leave it like this just so we can compare it with the other thing in a minute. and then here i would say, well, maybe i found the best thing without using this digit.</p> <pre><code>def increasing(n, smallest=10):\n    \"\"\"Return the largest sequence of digits within n that is increasing.\n\n    &gt;&gt;&gt; increasing(87247861)\n    2478\n    &gt;&gt;&gt; increasing(367456751)\n    34567\n    \"\"\"\n    if n == 0:\n        return 0\n    elif n % 10 &lt; smallest:\n        # Maybe I'll use n % 10 in the result or maybe not\n        no = increasing(n // 10, smallest)\n        yes = increasing(n // 10, min(n % 10, smallest)) * 10 + n % 10\n        return max(no, yes)\n    else:\n        return increasing(n // 10, smallest)\n</code></pre> <p>...so uh so what now, if you can understand this, then you can eventually understand this, but i agree that like close is just a much, like a considerably more complicated version of increasing. so i would focus on understanding this first what's going on here. let's just look at the mechanics, we either use one or we don't, in the in the choice where we don't, we just kind of pretend it's not there, and then we either use six or we don't, and in the choice where we don't we just pretend it's not there, and then we either use eight or we don't, in the choice that we do now, we have to make sure that everything else that we choose from here is smaller than eight. so we're going to have eight in the end, but we make a recursive call, that is i want the longest increasing sequence within eight seven two four seven, you know everything that's left over, except for all of the digits there have to be smaller than eight, and that's how i got this number. so if that makes sense then look at the difference between this, and that the difference between this and that is that, like we're just tucking away the most recent digit, and we're gonna include it in this notion of smallest, one step later than we otherwise would. so you're allowed to ignore the five, when you're checking to make sure that one is small enough, because that's just the rules of how this works.</p> <p>John:</p> <p>...\u8ba9\u6211\u4eec\u89e3\u51b3\u4e00\u4e2a\u66f4\u7b80\u5355\u7684\u95ee\u9898\uff0c\u6bd4\u8fd9\u4e2a\u590d\u6742\uff0c\u4f46\u6bd4\u8fd9\u4e2a\u7b80\u5355\uff0c\u8ba9\u6211\u4eec\u6446\u8131\u8fd1\u4f3c\u9012\u589e\u7684\u6982\u5ff5\uff0c\u53ea\u662f\u5bfb\u627en\u4e2d\u6700\u957f\u7684\u9012\u589e\u5e8f\u5217\u3002\u6211\u4eec\u9700\u8981\u4fdd\u6301\u67d0\u79cd\u5173\u4e8e\u5230\u76ee\u524d\u4e3a\u6b62\u6211\u505a\u8fc7\u7684\u6700\u5c0f\u7684\u6982\u5ff5\uff0c\u90a3\u4e48\u8fd9\u4e2a\u51fd\u6570\u662f\u5e72\u4ec0\u4e48\u7684\uff0c\u8fd4\u56den\u4e2d\u9012\u589e\u7684\u6700\u5927\u6570\u5b57\u5e8f\u5217\u3002\u6240\u4ee5\u5b83\u53ef\u80fd\u662f\u600e\u4e48\u5de5\u4f5c\u7684\uff0c\u5982\u679c\u6211\u5728\u8fd9\u91cc\u7684\u4e00\u4e9b\u6570\u5b57\u4e0a\u8c03\u7528increasing\uff0c\u8ba9\u6211\u4eec\u770b\u770b\u6211\u4eec\u5f97\u5230\u4e86\u4ec0\u4e48\uff0c\u6211\u4eec\u53ef\u80fd\u67092\uff0c\u7136\u540e4\uff0c\u7136\u540e7\u548c8\uff0c\u8fd9\u5f88\u957f\uff0c\u518d\u8bd5\u4e00\u6b21\uff0c\u6211\u4eec\u53ef\u80fd\u67093\uff0c4\uff0c5\uff0c6\uff0c7\uff0c\u8fd9\u4e5f\u5f88\u957f\u3002\u6211\u6ca1\u6709\u4ed4\u7ec6\u68c0\u67e5\uff0c\u4f46\u5927\u81f4\u662f\u5bf9\u7684\u3002</p> <pre><code>def increasing(n, smallest=10):\n    \"\"\"Return the largest sequence of digits within n that is increasing.\n\n    &gt;&gt;&gt; increasing(87247861)\n    2478\n    &gt;&gt;&gt; increasing(367456751)\n    34567\n    \"\"\"\n</code></pre> <p>\u6211\u4eec\u8981\u5982\u4f55\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u5982\u679cn\u7b49\u4e8e\u96f6\uff0c\u8fd4\u56de\u96f6\u3002\u5426\u5219\uff0c\u5982\u679cn\u7684\u6700\u540e\u4e00\u4f4d\u6570\u5b57\u5c0f\u4e8e\u5230\u76ee\u524d\u4e3a\u6b62\u6211\u770b\u5230\u7684\u6700\u5c0f\u503c\uff0c\u90a3\u4e48\u6211\u53ef\u80fd\u60f3\u8981\u5305\u542b\u5b83\u3002\u6240\u4ee5\u6211\u5c06\u5199\u6210\u8fd9\u6837\uff0c\u4e5f\u8bb8\u6211\u4f1a\u5728\u7ed3\u679c\u4e2d\u4f7f\u7528n % 10\uff0c\u6216\u8005\u4e5f\u8bb8\u4e0d\u4f1a\u3002</p> <pre><code>def increasing(n, smallest=10):\n    \"\"\"Return the largest sequence of digits within n that is increasing.\n\n    &gt;&gt;&gt; increasing(87247861)\n    2478\n    &gt;&gt;&gt; increasing(367456751)\n    34567\n    \"\"\"\n    if n == 0:\n        return 0\n    elif n % 10 &lt; smallest:\n        # Maybe I'll use n % 10 in the result or maybe not\n    else:\n</code></pre> <p>\u5982\u679cn\u7684\u6700\u540e\u4e00\u4f4d\u4e0d\u5141\u8bb8\uff0c\u56e0\u4e3a\u5b83\u6bd4\u6211\u5df2\u7ecf\u51b3\u5b9a\u8981\u4f7f\u7528\u7684\u67d0\u4e2a\u4e1c\u897f\u8981\u5927\uff0c\u90a3\u4e48\u6211\u5c31\u4e0d\u80fd\u4f7f\u7528\u5b83\u3002\u6240\u4ee5\u8fd9\u610f\u5473\u7740\u6211\u80fd\u505a\u7684\u6700\u597d\u7684\u4e8b\u60c5\u662f\uff0c\u5728n\u9664\u4ee510\u7684\u8303\u56f4\u5185\u627e\u5230\u6700\u5927\u7684\u9012\u589e\u6570\u3002\u597d\u7684\uff0c\u73b0\u5728\u6211\u4eec\u5c06\u6709no\u548cyes\u7684\u6982\u5ff5\u3002no\u8868\u793a\u6211\u5ffd\u7565n\u9664\u4ee510\u7684\u4f59\u6570\u3002</p> <pre><code>def increasing(n, smallest=10):\n    \"\"\"Return the largest sequence of digits within n that is increasing.\n\n    &gt;&gt;&gt; increasing(87247861)\n    2478\n    &gt;&gt;&gt; increasing(367456751)\n    34567\n    \"\"\"\n    if n == 0:\n        return 0\n    elif n % 10 &lt; smallest:\n        # Maybe I'll use n % 10 in the result or maybe not\n        no = increasing(n // 10)\n        yes\n    else:\n        return increasing(n // 10)\n</code></pre> <p>\u8fd9\u4e0e\u90a3\u4e2a\u76f8\u540c\uff0c\u8fd9\u5c31\u662f\u4e3a\u4ec0\u4e48\u8fd9\u4e2a\u6709\u70b9\u5947\u602a\u7684\u7ed3\u6784\uff0c\u6211\u4eec\u7a0d\u540e\u4f1a\u8ba8\u8bba\u7684\u539f\u56e0\u3002\u5728\u67e5\u627e\u6700\u5c0f\u503c\u65f6\uff0c\u5ffd\u7565\u6700\u540e\u4e00\u4f4d\u6570\u5b57\u65f6\uff0c\u4ecd\u7136\u8981\u5c0a\u91cd\u6cbf\u9014\u5df2\u7ecf\u51b3\u5b9a\u8981\u4fdd\u7559\u7684\u4efb\u4f55\u6570\u5b57\u7684\u89c4\u5219\uff0c\u56e0\u6b64\u60a8\u5fc5\u987b\u4f20\u9012\u8fd9\u4e2a\u5df2\u7ecf\u51b3\u5b9a\u4f7f\u7528\u7684\u6700\u5c0f\u503c\u7684\u6982\u5ff5\u3002\u7136\u540e\uff0c\u5982\u679c\u51b3\u5b9a\u4f7f\u7528n % 10\uff0c\u8fd9\u5c0f\u4e8e\u6700\u5c0f\u503c\uff0c\u73b0\u5728\u4ecd\u7136\u53ef\u4ee5\u627e\u5230\u66f4\u591a\u7684\u6570\u5b57\uff0c\u4f46\u5b83\u4eec\u4e0d\u80fd\u4ec5\u4ec5\u5c0f\u4e8e\u4e4b\u524d\u5df2\u7ecf\u770b\u5230\u7684\u6700\u5c0f\u503c\uff0c\u73b0\u5728\u5b83\u4eec\u5fc5\u987b\u5c0f\u4e8en % 10\u3002\u4e8b\u5b9e\u8bc1\u660e\uff0c\u8fd9\u53ef\u4ee5\u7b80\u5316\uff0c\u56e0\u4e3a\u6211\u4eec\u77e5\u9053\u8fd9\u5c0f\u4e8e\u90a3\uff0c\u6240\u4ee5\u6211\u53ef\u4ee5\u7f29\u77ed\u8fd9\u4e2a\uff0c\u7136\u540e\u5f97\u5230\u76f8\u540c\u7684\u7ed3\u679c\u3002\u4f46\u6211\u4f1a\u4fdd\u7559\u5b83\uff0c\u53ea\u662f\u4e3a\u4e86\u5728\u4e00\u5206\u949f\u5185\u4e0e\u53e6\u4e00\u79cd\u60c5\u51b5\u8fdb\u884c\u6bd4\u8f83\u3002\u7136\u540e\u5728\u8fd9\u91cc\u6211\u4f1a\u8bf4\uff0c\u55ef\uff0c\u4e5f\u8bb8\u6211\u5df2\u7ecf\u627e\u5230\u4e86\u4e0d\u4f7f\u7528\u8fd9\u4e2a\u6570\u5b57\u7684\u6700\u597d\u7684\u7ed3\u679c\u3002</p> <pre><code>def increasing(n, smallest=10):\n    \"\"\"Return the largest sequence of digits within n that is increasing.\n\n    &gt;&gt;&gt; increasing(87247861)\n    2478\n    &gt;&gt;&gt; increasing(367456751)\n    34567\n    \"\"\"\n    if n == 0:\n        return 0\n    elif n % 10 &lt; smallest:\n        # Maybe I'll use n % 10 in the result or maybe not\n        no = increasing(n // 10, smallest)\n        yes = increasing(n // 10, min(n % 10, smallest)) * 10 + n % 10\n        return max(no, yes)\n    else:\n        return increasing(n // 10, smallest)\n</code></pre> <p>...\u6240\u4ee5\uff0c\u5982\u679c\u60a8\u80fd\u7406\u89e3\u8fd9\u4e00\u70b9\uff0c\u90a3\u4e48\u6700\u7ec8\u60a8\u5c31\u80fd\u7406\u89e3\u8fd9\u4e00\u70b9\uff0c\u4f46\u6211\u540c\u610fclose\u53ea\u662fincreasing\u7684\u4e00\u4e2a\u66f4\u590d\u6742\u7684\u7248\u672c\u3002\u6240\u4ee5\u6211\u5efa\u8bae\u5148\u7406\u89e3\u8fd9\u4e2a\uff0c\u8fd9\u91cc\u53d1\u751f\u4e86\u4ec0\u4e48\u3002\u8ba9\u6211\u4eec\u53ea\u770b\u770b\u673a\u5236\uff0c\u6211\u4eec\u8981\u4e48\u4f7f\u7528\u6570\u5b571\uff0c\u8981\u4e48\u4e0d\u4f7f\u7528\uff0c\u5728\u6211\u4eec\u4e0d\u4f7f\u7528\u7684\u9009\u62e9\u4e2d\uff0c\u6211\u4eec\u53ea\u662f\u5047\u88c5\u5b83\u4e0d\u5b58\u5728\uff0c\u7136\u540e\u6211\u4eec\u8981\u4e48\u4f7f\u75286\uff0c\u8981\u4e48\u4e0d\u4f7f\u7528\uff0c\u5728\u6211\u4eec\u4e0d\u4f7f\u7528\u7684\u9009\u62e9\u4e2d\uff0c\u6211\u4eec\u53ea\u662f\u5047\u88c5\u5b83\u4e0d\u5b58\u5728\uff0c\u7136\u540e\u6211\u4eec\u8981\u4e48\u4f7f\u75288\uff0c\u8981\u4e48\u4e0d\u4f7f\u7528\uff0c\u5728\u6211\u4eec\u4f7f\u7528\u7684\u9009\u62e9\u4e2d\uff0c\u6211\u4eec\u5fc5\u987b\u786e\u4fdd\u4ece\u8fd9\u91cc\u9009\u62e9\u7684\u5176\u4ed6\u6240\u6709\u4e1c\u897f\u90fd\u5c0f\u4e8e8\u3002\u6240\u4ee5\u6700\u540e\u6211\u4eec\u4f1a\u5f97\u52308\uff0c\u4f46\u662f\u6211\u4eec\u8fdb\u884c\u9012\u5f52\u8c03\u7528\uff0c\u4e5f\u5c31\u662f\u6211\u8981\u627e\u523087247\u4e2d\u6700\u957f\u7684\u9012\u589e\u5e8f\u5217\uff0c\u4f60\u77e5\u9053\u9664\u4e86\u6240\u6709\u7684\u6570\u5b57\u4e4b\u5916\uff0c\u90fd\u5fc5\u987b\u5c0f\u4e8e8\uff0c\u8fd9\u5c31\u662f\u6211\u5f97\u5230\u8fd9\u4e2a\u6570\u5b57\u7684\u65b9\u5f0f\u3002\u6240\u4ee5\u5982\u679c\u8fd9\u6709\u610f\u4e49\uff0c\u7136\u540e\u770b\u770b\u8fd9\u4e2a\u548c\u90a3\u4e2a\u4e4b\u95f4\u7684\u533a\u522b\uff0c\u8fd9\u548c\u90a3\u4e2a\u4e4b\u95f4\u7684\u533a\u522b\u662f\uff0c\u6211\u4eec\u53ea\u662f\u85cf\u8d77\u4e86\u6700\u8fd1\u7684\u6570\u5b57\uff0c\u7136\u540e\u6211\u4eec\u4f1a\u5728\u8fd9\u4e2a\u6700\u5c0f\u503c\u7684\u6982\u5ff5\u4e2d\u5305\u542b\u5b83\uff0c\u6bd4\u6211\u4eec\u672c\u6765\u60f3\u7684\u8981\u665a\u4e00\u6b65\u3002\u6240\u4ee5\u5728\u68c0\u67e51\u662f\u5426\u8db3\u591f\u5c0f\u65f6\uff0c\u60a8\u53ef\u4ee5\u5ffd\u75655\uff0c\u56e0\u4e3a\u8fd9\u53ea\u662f\u8fd9\u4e2a\u5de5\u4f5c\u89c4\u5219\u3002</p> <p>\u6240\u4ee5\uff0c\u5982\u679c\u62ff <code>increasing</code> \u7684\u4f8b\u5b50\u6765\u7406\u89e3\uff0c\u5c31\u662f\u5148\u5224\u65ad <code>n</code> \u7684\u4e2a\u4f4d\u662f\u5426\u6bd4 \u4e4b\u524d(\u4e4b\u524d\u5373\u5f53\u524d\u6570\u4f4d\u53f3\u8fb9\u7684\u6570\u4f4d\uff0c\u53ef\u4ee5\u901a\u8fc7\u9012\u5f52\u7684\u65b9\u5f0f\u6765\u7406\u89e3)\u6d4f\u89c8/\u5224\u65ad\u8fc7\u7684\u4f4d\u6570\u7684\u6700\u5c0f\u503c \u5c0f\uff0c\u5c0f\u5c31\u610f\u5473\u7740\u662f\u53ef\u4ee5\u6784\u6210\u9012\u589e\u5e8f\u5217/\u6ee1\u8db3\u9012\u589e\u6761\u4ef6\u7684\uff0c\u90a3\u4e48\u518d\u5206\u51fa\u662f\u5426\u4f7f\u7528\u8fd9\u4e2a\u4f4d\u6570\u7684\u4e24\u79cd\u60c5\u51b5\uff0c\u5982\u679c\u6253\u7b97\u4f7f\u7528\uff0c\u5c31\u5c06\u6700\u5c0f\u503c\u66f4\u65b0( <code>min(n % 10, smallest)</code> \uff0c\u4f46\u7531\u4e8e <code>elif</code> \u5df2\u7ecf\u5224\u65ad\u8fc7\u4e86\uff0c\u786e\u5b9e\u4e5f\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528 <code>n % 10</code> )\uff0c\u5982\u679c\u4e0d\u6253\u7b97\u4f7f\u7528\u5c31\u4e0d\u6539\u53d8\u6700\u5c0f\u503c\u3002\u800c\u5982\u679c\u4e0d\u6ee1\u8db3\u9012\u589e\u6761\u4ef6\uff0c\u5c31\u521a\u597d\u8ddf\u4e0d\u6253\u7b97\u4f7f\u7528\u7684\u60c5\u51b5\u4e00\u6837\u3002</p> <p>\u7406\u89e3\u4e86 <code>increasing</code> \u518d\u53bb\u7406\u89e3 <code>close</code> \u5c31\u4f1a\u597d\u7406\u89e3\u5f88\u591a\uff0c\u9664\u4e86 <code>d</code> \u51e0\u4e4e\u90fd\u4e00\u6837\uff0c\u800c <code>d</code> \u7684\u4f5c\u7528\u5c31\u662f\u4e3a\u4e86\u8ba9\u4f4d\u6570\u665a\u4f20\u4e00\u4f4d(\u6ee1\u8db3 near increasing \u7684\u8981\u6c42)</p>"},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part2/#3_11","title":"3","text":"<p>John \u63d0\u5230\u4e86\u4e00\u79cd\u4f7f\u7528 \u540c\u65f6\u8d4b\u503c Simultaneous Assignment \u7684\u7279\u6b8a\u60c5\u51b5\uff0c</p> <p>John \u8bf4\u5230\u5728\u4f7f\u7528\u540c\u65f6\u8d4b\u503c\u65f6\uff0c\u4f1a\u5148\u8ba1\u7b97\u7b49\u53f7\u53f3\u8fb9\u7684\u7ed3\u679c\uff0c\u518d\u6309\u987a\u5e8f\u8d4b\u503c\u7ed9\u5de6\u8fb9\u7684\uff0c\u6240\u4ee5\u5728\u8fd9\u4e00\u884c\u4ee3\u7801\u4e2d</p> <pre><code>L.rest, L = L.rest.rest, L.rest.rest\n</code></pre> <p>\u4f1a\u5148\u5c06 <code>L.rest</code> \u6307\u5411 <code>L.rest.rest</code> \uff0c\u7136\u540e\u518d\u5c06\u53d8\u91cf\u540d <code>L</code> \u6307\u5411 <code>L.rest.rest</code> \uff0c\u6240\u4ee5\u4f1a\u6709\u5982\u4e0b\u56fe\u7684\u6539\u53d8</p> \u524d\u540e <p></p> <p></p> <p>\u5148\u662f\u542b\u6709 <code>1</code> \u7684\u8282\u70b9\u7684 <code>rest</code> \u6307\u5411\u542b\u6709 <code>3</code> \u7684\u8282\u70b9(\u5373 <code>L.rest.rest</code> )\uff0c\u518d\u662f <code>L</code> \u6307\u5411\u542b\u6709 <code>3</code> \u7684\u8282\u70b9</p>"},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part2/#lab-09","title":"Lab 09","text":""},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part2/#1_17","title":"1","text":"<p>Q3\uff0c\u505a\u7684\u65f6\u5019\u60f3\u4e86\u597d\u4e00\u4f1a\uff0c\u505a\u5b8c\u4e4b\u540e\u6211\u611f\u89c9\u86ee\u6709\u610f\u601d\u7684\uff0c</p> <p>\u8fd9\u4e00\u9898\u548c\u4e0a\u4e00\u9898Q2\u5f88\u50cf\uff0c\u4f46\u662f\u9700\u8981\u5224\u65ad\u662f\u5426\u662f(\u975e\u4e25\u683c)\u5347\u5e8f\uff0c\u6240\u4ee5\u63d0\u4f9b\u7684\u6846\u67b6\u662f\u6784\u5efa\u4e00\u4e2a <code>subseq_helper</code> \u51fd\u6570\uff0c\u6765\u8bb0\u5f55\u524d\u4e00\u4e2a\u6570\u7684\u5927\u5c0f\uff0c</p> <ul> <li>\u5982\u679c\u5f53\u524d\u7684\u6570\u6bd4\u524d\u4e00\u4e2a\u6570\u5c0f\uff0c\u5c31\u53ef\u4ee5\u76f4\u63a5\u5ffd\u7565\u8fd9\u4e2a\u6570</li> <li>\u5982\u679c\u5927\u4e8e\u7b49\u4e8e\uff0c\u5c31\u9700\u8981\u5206\u60c5\u51b5\uff0c\u5f53\u524d\u8fd9\u4e2a\u6570\u662f\u5426\u88ab\u4f7f\u7528(\u611f\u89c9\u7b97\u662fQ2\u7684\u5347\u7ea7\u7248)</li> </ul> code <pre><code>def inc_subseqs(s):\n    def subseq_helper(s, prev):\n        if not s:\n            return [[]]\n        elif s[0] &lt; prev:\n            return subseq_helper(s[1:], prev)\n        else:\n            a = subseq_helper(s[1:], s[0])\n            b = subseq_helper(s[1:], prev)\n            return insert_into_all(s[0], a) + b\n    return subseq_helper(s, 0)\n</code></pre>"},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part2/#2_15","title":"2","text":"<p>Q4 \u8fd9\u9898\u4e5f\u6709\u70b9\u610f\u601d\uff0c\u6211\u60f3\u5230\u7684\u9012\u5f52\u7684\u601d\u8def\u5c31\u662f\uff0c\u628a\u5927\u7684\u6811\u5206\u6210\u4e24\u4e2a\u5c0f\u7684\uff0c</p> <p>\u7136\u540e\u4e00\u5f00\u59cb\u662f\u628a\u4e24\u4e2a\u5c0f\u7684\u52a0\u8d77\u6765\uff0c\u7136\u540e\u9519\u4e86\uff0c\u634b\u4e86\u4e00\u4e0b\uff0c\u53d1\u73b0\u5e94\u8be5\u662f\u628a\u4e24\u4e2a\u5c0f\u7684 \u7ed3\u679c/\u53ef\u80fd \u76f8\u4e58\uff0c\u6700\u540e\u5c31\u5bf9\u4e86</p> code <pre><code>def num_trees(n):\n    if n == 1:\n        return 1\n    return sum([num_trees(i) * num_trees(n - i) for i in range(1, n)])\n</code></pre>"},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part2/#3_12","title":"3","text":"<p>Q5\uff0c\u6709\u70b9\u96be\u60f3\u611f\u89c9(\u4f46\u662f\u505a\u5b8c\u4ee5\u540e\u611f\u89c9\u8fd9\u9898\u53c8\u4e0d\u662f\u5f88\u590d\u6742\ud83d\ude02)</p> <p>\u4e00\u5f00\u59cb <code>for</code> \u8bed\u53e5\u91cc <code>g</code> \u4e4b\u540e\u6ca1\u5199 <code>()</code> \uff0c\u7136\u540e\u5c31\u53d1\u751f\u4e86\u62a5\u9519\ud83d\ude05</p> <pre><code>Traceback (most recent call last):\n  File \"E:\\Courses\\cs61a\\lab\\lab09\\lab09.py\", line 121, in make_generators_generator\n    for _ in g:\nTypeError: 'function' object is not iterable\n</code></pre> <p>\u4e4b\u540e\u8fd9\u6837\u7c7b\u4f3c\u7684\u8981\u6ce8\u610f</p> code <pre><code>def make_generators_generator(g):\n    def gen(i):\n        for e in g():\n            if i == 0:\n                break\n            yield e\n            i -= 1\n    count = 0\n    for _ in g():\n        count += 1\n        yield gen(count)\n</code></pre>"},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part2/#4_7","title":"4","text":"<p>Q12\uff0c\u611f\u89c9\u8fd9\u9898\u86ee\u6709\u610f\u601d\uff0c\u5b9a\u4e49\u4e86\u67d0\u79cd\u6a21\u677f(\u53ef\u4ee5\u4ece doctest \u4e2d\u770b\u51fa\u6765)\uff0c\u611f\u89c9\u4e4b\u540e\u8bf4\u4e0d\u5b9a\u80fd\u53c2\u8003</p> <pre><code>def make_to_string(front, mid, back, empty_repr):\n    \"\"\" Returns a function that turns linked lists to strings.\n\n    &gt;&gt;&gt; kevins_to_string = make_to_string(\"[\", \"|-]--&gt;\", \"\", \"[]\")\n    &gt;&gt;&gt; jerrys_to_string = make_to_string(\"(\", \" . \", \")\", \"()\")\n    &gt;&gt;&gt; lst = Link(1, Link(2, Link(3, Link(4))))\n    &gt;&gt;&gt; kevins_to_string(lst)\n    '[1|-]--&gt;[2|-]--&gt;[3|-]--&gt;[4|-]--&gt;[]'\n    &gt;&gt;&gt; kevins_to_string(Link.empty)\n    '[]'\n    &gt;&gt;&gt; jerrys_to_string(lst)\n    '(1 . (2 . (3 . (4 . ()))))'\n    &gt;&gt;&gt; jerrys_to_string(Link.empty)\n    '()'\n    \"\"\"\n    def printer(lnk):\n        if ______________:\n            return _________________________\n        else:\n            return _________________________\n    return printer\n</code></pre> code <pre><code>def make_to_string(front, mid, back, empty_repr):\n    def printer(lnk):\n        if lnk is Link.empty:\n            return empty_repr\n        else:\n            return front + str(lnk.first) + mid + printer(lnk.rest) + back\n    return printer\n</code></pre>"},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part2/#5_5","title":"5","text":"<p>Q13\uff0c\u7ed9\u7684\u4ee3\u7801\u6846\u67b6\u611f\u89c9\u503c\u5f97\u5b66\u4e60\uff0c\u800c\u4e14\u4e00\u5f00\u59cb\u8fd8\u6ca1\u60f3\u660e\u767d\u8981\u600e\u4e48\u7f16\u5199\ud83d\ude02</p> <pre><code>def prune_small(t, n):\n    while ___________________________:\n        largest = max(_______________, key=____________________)\n        _________________________\n    for __ in _____________:\n        ___________________\n</code></pre> code <pre><code>def prune_small(t, n):\n    while len(t.branches) &gt; n:\n        largest = max([b for b in t.branches], key=lambda t: t.label)\n        t.branches.remove(largest)\n    for b in t.branches:\n        prune_small(b, n)\n</code></pre>"},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part2/#lecture-25-users","title":"Lecture 25 Users","text":""},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part2/#1_18","title":"1","text":"<p>Quote</p> <p>Alan Kay:</p> <p>...We realized that was an incredibly important principle for user interface design. Why spend two weeks trying to read an MS-DOS manual to see how to copy a file or open up an application? What do you get from it? Much better to find a way of designing the user interface so that the person who uses it acts like an intermediate from the first time they sit down, and then they get into a process that is rewarding in itself.</p> <p>Alan Kay:</p> <p>...\u6211\u4eec\u610f\u8bc6\u5230\u8fd9\u662f\u754c\u9762\u8bbe\u8ba1\u4e2d\u975e\u5e38\u91cd\u8981\u7684\u539f\u5219\u3002\u4e3a\u4ec0\u4e48\u8981\u82b1\u4e24\u5468\u7684\u65f6\u95f4\u9605\u8bfbMS-DOS\u624b\u518c\uff0c\u770b\u5982\u4f55\u590d\u5236\u6587\u4ef6\u6216\u6253\u5f00\u5e94\u7528\u7a0b\u5e8f\u5462\uff1f\u4ece\u4e2d\u5f97\u5230\u4e86\u4ec0\u4e48\uff1f\u66f4\u597d\u7684\u65b9\u6cd5\u662f\u8bbe\u8ba1\u7528\u6237\u754c\u9762\uff0c\u4f7f\u4f7f\u7528\u8005\u4ece\u7b2c\u4e00\u6b21\u5750\u4e0b\u6765\u5c31\u50cf\u4e00\u4e2a\u4e2d\u95f4\u4eba\uff0c\u7136\u540e\u4ed6\u4eec\u8fdb\u5165\u4e00\u4e2a\u672c\u8eab\u5c31\u662f\u6709\u76ca\u7684\u8fc7\u7a0b\u3002</p> <p>Alan Kay \u501f\u52a9\u4e00\u4e2a\u5b9e\u9a8c\uff0c</p> <p>\u8ba9\u4e00\u4e2a40\u591a\u5c81\u7684\u5927\u5988\uff0c\u901a\u8fc7\u7b80\u5355\u7684\u8bad\u7ec3\uff0c\u77ed\u65f6\u95f4\u5185\u4e0a\u624b\u7f51\u7403\u7684\u5b9e\u9a8c\uff0c</p> <p>\u5b9e\u9a8c\u8005\u901a\u8fc7\u6559\u4f1a\u8fd9\u4e2a\u5927\u5988\u7f51\u7403\u5bf9\u6253\u548c\u53d1\u7403\u7684\u4e00\u4e9b\u8bc0\u7a8d\uff0c\u800c\u4e0d\u662f\u7cfb\u7edf\u5b66\u4e60\uff0c\u6765\u8ba9\u5979\u5feb\u901f\u4e0a\u624b\u7f51\u7403</p> <p>\u63d0\u5230\u4e86\u7528\u6237\u754c\u9762\u8bbe\u8ba1\u7684\u4e00\u4e2a\u91cd\u8981\u7684\u7406\u5ff5\uff0c\u7528\u6237\u754c\u9762\u5e94\u8be5\u8981\u8bbe\u8ba1\u5f97\u80fd\u8ba9\u7528\u6237\u5feb\u901f\u5b66\u4f1a\u5e76\u4e0a\u624b(\u800c\u4e0d\u662f\u9700\u8981\u82b1\u5927\u91cf\u7684\u65f6\u95f4\u53bb\u67e5\u9605\u8bf4\u660e\u4e66\u6765\u5b66\u4e60)\uff0c\u4f7f\u7528\u6237\u611f\u89c9\u81ea\u5df1\u50cf\u4e00\u4e2a \u4e2d\u7b49\u6c34\u5e73\u7684\u5b66\u751f intermediate \uff0c\u4e8e\u662f\u4e4b\u540e\u7684\u5b66\u4e60\u5c31\u80fd\u5f97\u5230\u79ef\u6781\u7684\u53cd\u9988(\u6240\u4ee5\u5c31\u4f1a\u6709\u5174\u8da3\u53bb\u5b66\u4e60)</p>"},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part2/#lecture-25-qa","title":"Lecture 25 Q&amp;A","text":""},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part2/#1_19","title":"1","text":"<p>\u63d0\u5230\u768420\u6625(\u7b2c\u4e8c\u6b21\u671f\u4e2d\u8003\u8bd5)\u7684\u4e00\u9898</p> <p></p> <p>Quote</p> <pre><code>\"\"\"This question involves plucking the leaves off a tree one by one.\n\nDefinitions:\n\n1) A \"number tree\" is a Tree whose labels are _unique_ positive integers.\n   No repeated labels appear in a number tree.\n\n2) A \"plucking order\" for a number tree t is a sequence of unique positive\n   integers that are all labels of t.\n\n3) A plucking order is \"valid\" if both of these conditions are true:\n   (a) the plucking order contains all labels of t, and\n   (b) in the plucking order contains all labels of t, and\n       the labels of all its descendant nodes. Thus, leaves appear first.\n\nNote: redwood, pine, and cyprus are all kinds of trees.\n\"\"\"\n\n\"\"\"A: (3 pts) Implement order, which takes a number tree called rewood. It returns\na valid plucking order as a list of numbers. If there is more than one valid\nplucking order for redwood, your order function can return any one of them.\n\nIMPORTANT: You do not need to return EVERY valid plucking order; just one.\n\nCheck the doctests with: python3 ok -q a\n\"\"\"\ndef order(redwood):\n    \"\"\"Return a list containing a valid plucking order for the labels of t.\n\n    &gt;&gt;&gt; order(Tree(1, [Tree(2, [Tree(3, [Tree(4)])])]))               # The only valid plucking order.\n    [4, 3, 2, 1]\n    &gt;&gt;&gt; order(Tree(1, [Tree(2), Tree(3)])) in [[2, 3, 1], [3, 2, 1]]  # Therre are 2 valid orders.\n    True\n    &gt;&gt;&gt; o = order(Tree(1, [Tree(2, [Tree(3)]), Tree(4, [Tree(5)])]))  # There are many valid orders,\n    &gt;&gt;&gt; o.index(5) &lt; o.index(4)                                       # but all have 5 before 4,\n    True\n    &gt;&gt;&gt; o.index(3) &lt; o.index(2)                                       # and 3 before 2,\n    True\n    &gt;&gt;&gt; o[4:]                                                         # and 1 at the end.\n    [1]\n\n    &gt;&gt;&gt; order(Tree(7, [Tree(4, [Tree(6)]), Tree(5)])) in [[6, 5, 4, 7], [5, 6, 4, 7], [6, 4, 5, 7]]\n    True\n    \"\"\"\n    plucking_order = []\n    for b in ______:\n        ______\n    return plucking_order + [redwood.label]\n\n\n\"\"\"B: (5 pts) Implement pluck, which takes a number tree called pine and returns\na function that is called repeatedly on the elements of a plucking order. If that\nplucking order is valid, the final call returns 'success!'. Otherwise, if one of\nthe repeated calls is on a number that is not part of a valid plucking order, the\nerror string 'Hey, not valid!' is returned.\n\nSince pine is a number tree and the values passed to plucker form a plucking\norder, you can assume that:\n- The labels of pine are unique,\n- All values k passed to the plucker function are unique for a given pine, and\n- All values k are labels of pine.\n\nCheck the doctests with: python3 ok -q b\n\"\"\"\ndef pluck(pine):\n    \"\"\"Return a function that returns whether a plucking order is valid\n    for a number tree t when called repeatedly on elements of a plucking order.\n\n    Calling the function returned by pluck should not mutate pine.\n\n           +---+\n           | 1 |\n           +---+\n           /   \\----          /                 +---+         +---+\n       | 2 |         | 6 |\n       +---+         +---+\n         |            /          |           /          +---+      +---+ +---+\n       | 3 |      | 7 | | 8 |\n       +---+      +---+ +---+\n        / \\               |\n       /   \\              |\n    +---+ +---+         +---+\n    | 4 | | 5 |         | 9 |\n    +---+ +---+         +---+\n\n    &gt;&gt;&gt; b0 = Tree(2, [Tree(3, [Tree(4), Tree(5)])])\n    &gt;&gt;&gt; b1 = Tree(6, [Tree(7), Tree(8, [Tree(9)])])\n    &gt;&gt;&gt; t = Tree(1, [b0, b1])\n    &gt;&gt;&gt; pluck(t)(9)(8)(7)(6)(5)(4)(3)(2)(1)\n    'success!'\n    &gt;&gt;&gt; pluck(t)(5)(9)(4)(7)(3)(8)(6)(2)(1)\n    'success!'\n    &gt;&gt;&gt; pluck(t)(2)\n    'Hey, not valid!'\n    &gt;&gt;&gt; pluck(t)(5)(9)(7)(6)\n    'Hey, not valid!'\n\n    &gt;&gt;&gt; pluck(b0)(5)(2)\n    'Hey, not valid!'\n    &gt;&gt;&gt; pluck(b0)(4)(5)(3)(2)\n    'success!'\n    \"\"\"\n    def plucker(k):\n        def pluck_one_leaf(cyprus):\n            \"\"\"Return a copy of cyprus without leaf k and check that k is a\n            leaf label, not an interior node label.\n            \"\"\"\n            if ______:\n                ______\n            plucked_branches = []\n            for b in cyprus.branches:\n                skip_this_leaf = ______ and ______\n                if not skip_this_leaf:\n                    plucked_branch_or_error = pluck_one_leaf(b)\n                    if isinstance(plucked_branch_or_error, str):\n                        return plucked_branch_or_error\n                    else:\n                        ______\n            return Tree(______, plucked_branches)\n        nonlocal pine\n        if pine.is_leaf():\n            assert k == pine.label, 'all k must appear in pine'\n            return 'success!'\n        ______\n        if isinstance(pine, str):\n            return pine\n        return plucker\n    return plucker\n</code></pre> <p>\u9700\u8981\u7528\u5230\u7684 \u6811 Tree \u7c7b</p> <pre><code>class Tree:\n    def __init__(self, label, branches=[]):\n        self.label = label\n        for branch in branches:\n            assert isinstance(branch, Tree)\n        self.branches = list(branches)\n        \n    def is_leaf(self):\n        return not self.branches\n</code></pre> <p>\u4e8e\u662f\u5c1d\u8bd5\u5199\u4e86\u4e00\u4e0b\uff0c</p> <p>a\u9898\u5341\u5206\u5730\u7b80\u5355</p> <pre><code>def order(redwood):\n        plucking_order = []\n    for b in redwood.branches:\n        plucking_order += order(b)\n    return plucking_order + [redwood.label]\n</code></pre> <p>b\u9898\u6709\u70b9\u96be\u5ea6\uff0c\u4f46\u662f\u7167\u7740\u6846\u67b6\u53bb\u5206\u6790\u601d\u8003\uff0c\u6700\u7ec8\u4e5f\u4e0d\u96be\u505a\u51fa\u6765</p> <pre><code>def pluck(pine):\n    def plucker(k):\n        def pluck_one_leaf(cyprus):\n            \"\"\"Return a copy of cyprus without leaf k and check that k is a\n            leaf label, not an interior node label.\n            \"\"\"\n            if k == cyprus.label and not cyprus.is_leaf():\n                return \"Hey, not valid!\"\n            plucked_branches = []\n            for b in cyprus.branches:\n                skip_this_leaf = b.is_leaf() and b.label == k\n                if not skip_this_leaf:\n                    plucked_branch_or_error = pluck_one_leaf(b)\n                    if isinstance(plucked_branch_or_error, str):\n                        return plucked_branch_or_error\n                    else:\n                        plucked_branches += [plucked_branch_or_error]\n            return Tree(cyprus.label, plucked_branches)\n        nonlocal pine\n        if pine.is_leaf():\n            assert k == pine.label, 'all k must appear in pine'\n            return 'success!'\n        pine = pluck_one_leaf(pine)\n        if isinstance(pine, str):\n            return pine\n        return plucker\n    return plucker\n</code></pre>"},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part2/#2_16","title":"2","text":"<p>\u63d0\u5230\u4e8618\u79cb\u7b2c\u4e8c\u6b21\u671f\u4e2d\u8003\u8bd5\u7684\u4e00\u9898</p> <p></p> <p>Quote</p> <p>Trictionary or Treat</p> <p>Definition. A trictionary is a pair of <code>Tree</code> instances <code>k</code> and <code>v</code> that have identical structure: each node in <code>k</code> has a corresponding node in <code>v</code> . The labels in <code>k</code> are called keys. Each key may be the label for multiple nodes in <code>k</code> , and the values for that key are the labels of all the corresponding nodes in <code>v</code> .</p> <p>A lookup function returns one of the values for a key. Specifically, a lookup function for a node in <code>k</code> is a function that takes <code>v</code> as an argument and returns the label for the corresponding node in <code>v</code> .</p> <p>Implement the generator function <code>lookups</code> , which takes a <code>Tree</code> instance <code>k</code> and some <code>key</code> . It yields all lookup functions for nodes in <code>k</code> that have <code>key</code> as their label. The <code>new_lookup</code> function is part of the implementation.</p> <ul> <li> <p><code>k</code> :</p> <pre><code>        5\n      / | \\\n    7   8   5\n  /   / |  / \\\n2    3  4  4  2 \n</code></pre> </li> <li> <p><code>v</code> :</p> <pre><code>        'Go'\n       / | \\\n    'C' 'A' 'L'\n   /   / |  / \\\n'C'  'S' 6  1 'A' \n</code></pre> </li> </ul> key values 2 'C', 'A' 3 'S' 4 6, 1 5 'Go', 'L' 7 'C' 8 'A' <pre><code>k = Tree(5, [Tree(7, [Tree(2)]), Tree(8, [Tree(3), Tree(4)]), Tree(5, [Tree(4), Tree(2)])])\nv = Tree('Go', [Tree('C', [Tree('C')]), Tree('A', [Tree('S'), Tree(6)]), Tree('L', [Tree(1), Tree('A')])])\n\ndef lookups(k, key):\n    \"\"\"Yield one lookup function for each node of k that has the label key.\n\n    &gt;&gt;&gt; [f(v) for f in lookups(k, 2)]\n    ['c', 'A']\n    &gt;&gt;&gt; [f(v) for f in lookups(k, 3)]\n    ['S']\n    &gt;&gt;&gt; [f(v) for f in lookups(k, 6)]\n    []\n    \"\"\"\n    if ______:\n        yield lambda v: ______\n    for i in range(len(k.branches)):\n        ______:\n            yield new_lookup(i, lookup)\n\ndef new_lookup(i, f):\n    def g(v):\n        return ______\n    return g\n</code></pre> <p>\u8fd9\u9898\u6709\u70b9\u96be\u5ea6\uff0c\u9996\u5148\u4f7f\u7406\u89e3\u9898\u76ee\u7684\u610f\u601d\uff0c<code>lookups</code> \u662f\u9700\u8981\u751f\u6210\u80fd\u8fd4\u56de\u5728(\u8f93\u5165\u7684) \u6811 <code>v</code> \u4e2d\u5bf9\u5e94\u4f4d\u7f6e\u7684\u503c\u7684\u51fd\u6570\u3002</p> <p>\u9898\u76ee\u7ed9\u7684\u6846\u67b6\u4e5f\u4e0d\u662f\u5f88\u5bb9\u6613\u770b\u61c2\uff0c\u6211\u5148\u662f\u770b\u5230 <code>yield new_lookup(i, lookup)</code> \u8fd9\u884c(\u770b\u5230 <code>lookup</code> )\uff0c\u6240\u4ee5\u731c\u4e0a\u9762\u4e00\u884c\u662f</p> <pre><code>for lookup in lookups(k.branches[i], key):\n</code></pre> <p>\u8fd9\u4e00\u884c\u5e94\u8be5\u662f\u7528\u6765\u9012\u5f52\uff0c\u6240\u4ee5\u8fdb\u800c\u5c31\u5f88\u5bb9\u6613\u60f3\u5230\u4e0a\u9762\u7684 <code>if</code> \u8bed\u53e5\u662f base case \u5373\u8d70\u5230\u4e86\u53f6\u5b50\u8282\u70b9\uff0c\u4e8e\u662f\uff0c\u5728\u6700\u7b80\u5355\u7684\u60c5\u51b5\u4e0b\uff0c\u5c31\u76f4\u63a5\u5224\u65ad \u6811 <code>k</code> \u7684\u503c\u548c <code>key</code> \u662f\u5426\u76f8\u7b49\u5c31\u884c\u4e86\uff0c\u6240\u4ee5</p> <pre><code>if k.is_leaf() and k.label == key:\n    return lambda v: v.label\n</code></pre> <p>\u6700\u540e\u662f <code>new_lookup</code> \u7684\u90e8\u5206(\u60f3\u4e86\u4e00\u4f1a\u624d\u60f3\u51fa\u6765)\uff0c\u770b\u5230 <code>i</code> \u6240\u4ee5\u60f3\u5230 <code>i</code> \u662f\u7528\u6765\u4f20\u9012\u8def\u5f84\u76f8\u5173\u7684\u4fe1\u606f\u7684(\u91cd\u70b9\u662f\u9700\u8981\u7406\u89e3\u4f20\u5165\u7684 <code>lookup</code> \uff0c\u662f\u5b50\u6811\u7684\u67e5\u627e\u51fd\u6570\uff0c\u6240\u4ee5 <code>new_lookup</code> \u4e2d\u9700\u8981\u7684\u4e5f\u662f\u4f20\u5165\u5bf9\u5e94 <code>v</code> \u7684\u5b50\u6811)\uff0c\u56e0\u6b64</p> <pre><code>return f(v.branches[i])\n</code></pre> <p>\u5b8c\u6574\u4ee3\u7801</p> <pre><code>def lookups(k, key):\n    if k.is_leaf() and k.label == key:\n        yield lambda v: v.label\n    for i in range(len(k.branches)):\n        for lookup in lookups(k.branches[i], key):\n            yield new_lookup(i, lookup)\n        \ndef new_lookup(i, f):\n    def g(v):\n        return f(v.branches[i])\n    return g\n</code></pre> <p>\u770b\u4e86John\u7684\u8bb2\u89e3\uff0c\u53d1\u73b0 <code>if</code> \u90a3\u4e00\u884c\u6b63\u786e\u7b54\u6848\u5e94\u8be5\u6ca1\u6709 <code>k.is_leaf()</code> \uff0c\u4e0a\u9762\u7684\u4ee3\u7801\u80fd\u901a\u8fc7\u53ea\u662f\u56e0\u4e3a\u521a\u597d\u6d4b\u8bd5\u7684\u503c\u90fd\u5728\u53f6\u5b50\u8282\u70b9\uff0c\u6240\u4ee5\u6b63\u786e\u7684\u4ee3\u7801\u5e94\u8be5\u662f</p> <pre><code>def lookups(k, key):\n    if k.label == key:\n        yield lambda v: v.label\n    for i in range(len(k.branches)):\n        for lookup in lookups(k.branches[i], key):\n            yield new_lookup(i, lookup)\n\ndef new_lookup(i, f):\n    def g(v):\n        return f(v.branches[i])\n    return g\n</code></pre> <p></p>"},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part2/#lecture-26-ethical-ai-data","title":"Lecture 26 Ethical AI &amp; Data","text":""},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part2/#1_20","title":"1","text":"<p>Hany \u5728\u4ecb\u7ecd \u76d1\u7763\u5b66\u4e60 supervised learning \u65f6\uff0c\u63d0\u5230\u4e86\u7ebf\u6027\u5904\u7406\u4e8c\u7ef4\u6570\u636e\u4e00\u79cd\u65b9\u6cd5\uff0c\u901a\u8fc7\u627e\u5230\u4e00\u4e2a\u6295\u5f71\u9762(\u7ebf)\uff0c\u4f7f\u5f97\u5728\u6295\u5f71\u9762\u4e0a\uff0c\u540c\u7c7b\u4e4b\u95f4\u8ddd\u79bb\u5c3d\u53ef\u80fd\u5c0f\uff0c\u800c\u5f02\u7c7b\u4e4b\u95f4\u7684\u8ddd\u79bb\u5c3d\u53ef\u80fd\u5927\uff0c\u4e8e\u662f\u901a\u8fc7\u5176\u6cd5\u7ebf\u5c31\u53ef\u4ee5\u83b7\u5f97\u5206\u5272\u7ebf</p>"},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part2/#2_17","title":"2","text":"<p>Hany\u5728\u8fd9\u8282\u8bfe\u7684\u6700\u540e\u5173\u4e8eAI\u7684\u4f7f\u7528\u7684\u770b\u6cd5\uff0c\u6211\u8ba4\u4e3a\u8bf4\u7684\u5f88\u597d</p> <p>Quote</p> <p>Hany:</p> <p>...We just seem to be stuck at around 65% (accuracy).</p> <p>Okay, I posit I cannot prove, but I posit: I think that this is a fundamentally hard problem, and I am unconvinced that you can actually do better than this. Because think about what you're asking the algorithm to do. You're asking it to predict the future from a relatively small amount of data, and the future, two years in advance, of a fairly complex set of social, economic, personal, and just what is random dumb luck going to happen in somebody's life. And I don't think that's a stretch of imagination to say that this is really hard.</p> <p>So here's a question for you: should we even be doing this? Should we actually be trying to predict whether somebody's going to commit a crime in the future and then incarcerate them if we think that they are, if the accuracy is 65%? What if the accuracy is 75%? What if it's 85%? What if it's you? What if it's somebody you love? Do you want this algorithm being applied to somebody with this kind of error rate? What's an acceptable error rate? Are these things really better than humans? How do you deal with the bias? Nobody has good answers to these things.</p> <p>So here's a question. Now I come back to the title. right? Just because you can do something doesn't mean you should. And as you enter into what is undoubtedly an incredibly exciting time for us in terms of computation and AI and data, and the impact that we can have on the world, we have to start thinking about what are the negative aspects of what we are doing. Should we be trying to make these decisions? And if we do, the answer may be yes, but then are they accurate? Are they fair? Do they disproportionately affect women, people of color, LGBTQ community, people who are not born in this country, people who aren't native speakers, whatever it is? We have to think about the consequences of that.</p> <p>We have spent the last 20 years with the mantra of \"move fast and break things,\" and while lots of good things have come from that, some really bad things have come from this. Bias in algorithms for hiring, bias in algorithms in healthcare, bias in algorithms in the financial sectors, bias in algorithms in the criminal justice system, bias in facial recognition. We've got to tread lightly here. And what that means is you can't come at this after the fact. You can't develop, deploy, and then debug on the fly. This isn't a word processing software. If you have a bug, somebody loses a document. This is the real world where you make a mistake and somebody sits in jail, or somebody doesn't get a home loan, or somebody doesn't get a small business loan, or somebody doesn't get a job or go to the university. We are impacting real people's lives with our algorithms and our data, and if we don't understand these things, we have the potential to do way more harm than we do good.</p> <p>And so the free-for-all of the last two decades, in my opinion, should be over. And I want to emphasize that I am not anti-technology. I'm not saying don't do things. I'm not saying don't innovate. But I'm saying think, think carefully about the consequences of what you are doing and make sure that there is transparency, there is fairness, and there is accuracy in how these technologies are being used. And more generally, making sure that you understand how your technologies can be misused as well because almost all technologies have benefits and drawbacks, and we have to start thinking about those things up front and simply try to mitigate the harm while harnessing the phenomenal power of technology and AI and data.</p> <p>All right, I'm done. I hope you enjoyed this and I hope you learned something from it. We'll see you soon.</p> <p>Hany:</p> <p>...\u6211\u4eec\u4f3c\u4e4e\u5361\u5728\u4e8665%\u5de6\u53f3\uff08\u51c6\u786e\u7387\uff09\u3002</p> <p>\u597d\u7684\uff0c\u6211\u5047\u8bbe\u6211\u4e0d\u80fd\u8bc1\u660e\uff0c\u4f46\u6211\u5047\u8bbe\uff1a\u6211\u8ba4\u4e3a\u8fd9\u662f\u4e00\u4e2a\u57fa\u672c\u4e0a\u7684\u96be\u9898\uff0c\u6211\u4e0d\u76f8\u4fe1\u4f60\u80fd\u505a\u5f97\u6bd4\u8fd9\u66f4\u597d\u3002\u56e0\u4e3a\u60f3\u60f3\u4f60\u8981\u7b97\u6cd5\u505a\u4ec0\u4e48\u3002\u4f60\u8ba9\u5b83\u4ece\u76f8\u5bf9\u8f83\u5c11\u7684\u6570\u636e\u4e2d\u9884\u6d4b\u672a\u6765\uff0c\u672a\u6765\u662f\u4e24\u5e74\u540e\uff0c\u6d89\u53ca\u5230\u4e00\u7ec4\u76f8\u5f53\u590d\u6742\u7684\u793e\u4f1a\u3001\u7ecf\u6d4e\u3001\u4e2a\u4eba\u56e0\u7d20\uff0c\u8fd8\u6709\u5728\u67d0\u4eba\u751f\u6d3b\u4e2d\u4f1a\u53d1\u751f\u7684\u968f\u673a\u8fd0\u6c14\u3002\u6211\u8ba4\u4e3a\u8fd9\u5e76\u4e0d\u662f\u4e00\u79cd\u5938\u5f20\uff0c\u8bf4\u8fd9\u771f\u7684\u5f88\u96be\u3002</p> <p>\u90a3\u4e48\u8fd9\u91cc\u6709\u4e00\u4e2a\u95ee\u9898\u7ed9\u4f60\uff1a\u6211\u4eec\u751a\u81f3\u5e94\u8be5\u8fd9\u6837\u505a\u5417\uff1f\u6211\u4eec\u771f\u7684\u5e94\u8be5\u5c1d\u8bd5\u9884\u6d4b\u67d0\u4eba\u5c06\u6765\u662f\u5426\u4f1a\u72af\u7f6a\uff0c\u7136\u540e\u5982\u679c\u6211\u4eec\u8ba4\u4e3a\u4ed6\u4eec\u4f1a\u72af\u7f6a\u5c31\u76d1\u7981\u4ed6\u4eec\uff0c\u5373\u4f7f\u51c6\u786e\u7387\u662f65%\u5417\uff1f\u5982\u679c\u51c6\u786e\u7387\u662f75%\u600e\u4e48\u529e\uff1f\u5982\u679c\u662f85%\u5462\uff1f\u5982\u679c\u662f\u4f60\u5462\uff1f\u5982\u679c\u662f\u4f60\u7231\u7684\u4eba\u5462\uff1f\u4f60\u5e0c\u671b\u8fd9\u79cd\u7b97\u6cd5\u5e94\u7528\u4e8e\u6709\u8fd9\u79cd\u9519\u8bef\u7387\u7684\u4eba\u5417\uff1f\u4ec0\u4e48\u662f\u53ef\u4ee5\u63a5\u53d7\u7684\u9519\u8bef\u7387\uff1f\u8fd9\u4e9b\u4e1c\u897f\u771f\u7684\u6bd4\u4eba\u7c7b\u66f4\u597d\u5417\uff1f\u5982\u4f55\u5904\u7406\u504f\u89c1\uff1f\u6ca1\u6709\u4eba\u5bf9\u8fd9\u4e9b\u95ee\u9898\u6709\u597d\u7684\u7b54\u6848\u3002</p> <p>\u6240\u4ee5\u8fd9\u91cc\u6709\u4e00\u4e2a\u95ee\u9898\u3002\u73b0\u5728\u6211\u56de\u5230\u6807\u9898\uff0c\u5bf9\u5427\uff1f\u4ec5\u4ec5\u56e0\u4e3a\u4f60\u80fd\u505a\u67d0\u4e8b\u5e76\u4e0d\u610f\u5473\u7740\u4f60\u5e94\u8be5\u8fd9\u6837\u505a\u3002\u5f53\u4f60\u8fdb\u5165\u8ba1\u7b97\u3001\u4eba\u5de5\u667a\u80fd\u548c\u6570\u636e\u65b9\u9762\u65e0\u7591\u662f\u4e00\u4e2a\u975e\u5e38\u6fc0\u52a8\u4eba\u5fc3\u7684\u65f6\u523b\uff0c\u4ee5\u53ca\u6211\u4eec\u53ef\u4ee5\u5bf9\u4e16\u754c\u4ea7\u751f\u7684\u5f71\u54cd\u65f6\uff0c\u6211\u4eec\u5fc5\u987b\u5f00\u59cb\u601d\u8003\u6211\u4eec\u6b63\u5728\u505a\u7684\u4e8b\u60c5\u7684\u8d1f\u9762\u65b9\u9762\u3002\u6211\u4eec\u5e94\u8be5\u5c1d\u8bd5\u505a\u8fd9\u4e9b\u51b3\u5b9a\u5417\uff1f\u5982\u679c\u662f\uff0c\u7b54\u6848\u53ef\u80fd\u662f\u80af\u5b9a\u7684\uff0c\u4f46\u5b83\u4eec\u662f\u5426\u51c6\u786e\uff1f\u662f\u5426\u516c\u5e73\uff1f\u5b83\u4eec\u662f\u5426\u5bf9\u5973\u6027\u3001\u6709\u8272\u4eba\u79cd\u3001LGBTQ\u793e\u533a\u3001\u4e0d\u5728\u8fd9\u4e2a\u56fd\u5bb6\u51fa\u751f\u7684\u4eba\u3001\u4e0d\u662f\u672c\u571f\u8bf4\u8bdd\u8005\u7684\u4eba\u7b49\u4ea7\u751f\u4e0d\u6210\u6bd4\u4f8b\u7684\u5f71\u54cd\uff1f\u6211\u4eec\u5fc5\u987b\u8003\u8651\u8fd9\u4e9b\u540e\u679c\u3002</p> <p>\u5728\u8fc7\u53bb\u768420\u5e74\u91cc\uff0c\u6211\u4eec\u4e00\u76f4\u5949\u884c\u201c\u8fc5\u901f\u884c\u52a8\u5e76\u6253\u7834\u4e00\u5207\u201d\u7684\u53e3\u53f7\uff0c\u867d\u7136\u4ece\u4e2d\u83b7\u5f97\u4e86\u5f88\u591a\u597d\u5904\uff0c\u4f46\u4e5f\u4ece\u4e2d\u4ea7\u751f\u4e86\u4e00\u4e9b\u975e\u5e38\u7cdf\u7cd5\u7684\u4e8b\u60c5\u3002\u5728\u62db\u8058\u7b97\u6cd5\u4e2d\u5b58\u5728\u7684\u504f\u89c1\uff0c\u5728\u533b\u7597\u4fdd\u5065\u9886\u57df\u7684\u7b97\u6cd5\u4e2d\u5b58\u5728\u7684\u504f\u89c1\uff0c\u5728\u91d1\u878d\u9886\u57df\u7684\u7b97\u6cd5\u4e2d\u5b58\u5728\u7684\u504f\u89c1\uff0c\u5728\u5211\u4e8b\u53f8\u6cd5\u7cfb\u7edf\u7684\u7b97\u6cd5\u4e2d\u5b58\u5728\u7684\u504f\u89c1\uff0c\u5728\u9762\u90e8\u8bc6\u522b\u4e2d\u5b58\u5728\u7684\u504f\u89c1\u3002\u6211\u4eec\u5fc5\u987b\u5c0f\u5fc3\u884c\u4e8b\u3002\u8fd9\u610f\u5473\u7740\u4f60\u4e0d\u80fd\u5728\u4e8b\u540e\u5c31\u8fd9\u4e48\u505a\u3002\u4f60\u4e0d\u80fd\u5f00\u53d1\u3001\u90e8\u7f72\uff0c\u7136\u540e\u5728\u98de\u884c\u4e2d\u8c03\u8bd5\u3002\u8fd9\u4e0d\u662f\u6587\u5b57\u5904\u7406\u8f6f\u4ef6\u3002\u5982\u679c\u6709\u4e00\u4e2a\u9519\u8bef\uff0c\u67d0\u4eba\u5c31\u4f1a\u4e22\u5931\u4e00\u4efd\u6587\u4ef6\u3002\u8fd9\u662f\u771f\u5b9e\u7684\u4e16\u754c\uff0c\u4f60\u72af\u4e86\u4e00\u4e2a\u9519\u8bef\uff0c\u6709\u4eba\u5750\u5728\u76d1\u72f1\u91cc\uff0c\u6216\u8005\u6709\u4eba\u6ca1\u6709\u83b7\u5f97\u623f\u5c4b\u8d37\u6b3e\uff0c\u6216\u8005\u6709\u4eba\u6ca1\u6709\u83b7\u5f97\u5c0f\u989d\u8d37\u6b3e\uff0c\u6216\u8005\u6709\u4eba\u6ca1\u6709\u5f97\u5230\u5de5\u4f5c\u6216\u4e0a\u5927\u5b66\u3002\u6211\u4eec\u6b63\u5728\u5f71\u54cd\u771f\u5b9e\u4eba\u4eec\u7684\u751f\u6d3b\uff0c\u7528\u6211\u4eec\u7684\u7b97\u6cd5\u548c\u6570\u636e\uff0c\u5982\u679c\u6211\u4eec\u4e0d\u7406\u89e3\u8fd9\u4e9b\u4e8b\u60c5\uff0c\u6211\u4eec\u53ef\u80fd\u4f1a\u9020\u6210\u6bd4\u505a\u597d\u4e8b\u66f4\u591a\u7684\u4f24\u5bb3\u3002</p> <p>\u56e0\u6b64\uff0c\u5728\u6211\u770b\u6765\uff0c\u8fc7\u53bb20\u5e74\u7684\u653e\u4efb\u6001\u5ea6\u5e94\u8be5\u7ed3\u675f\u4e86\u3002\u6211\u60f3\u5f3a\u8c03\u7684\u662f\uff0c\u6211\u5e76\u4e0d\u662f\u53cd\u5bf9\u6280\u672f\u3002\u6211\u5e76\u4e0d\u662f\u8bf4\u4e0d\u8981\u505a\u4e8b\u60c5\u3002\u6211\u5e76\u4e0d\u662f\u8bf4\u4e0d\u8981\u521b\u65b0\u3002\u4f46\u6211\u8bf4\u7684\u662f\u8981\u8003\u8651\uff0c\u8981\u4ed4\u7ec6\u8003\u8651\u4f60\u6b63\u5728\u505a\u7684\u4e8b\u60c5\u7684\u540e\u679c\uff0c\u5e76\u786e\u4fdd\u5728\u4f7f\u7528\u8fd9\u4e9b\u6280\u672f\u7684\u65b9\u5f0f\u4e0a\u6709\u900f\u660e\u5ea6\u3001\u516c\u5e73\u6027\u548c\u51c6\u786e\u6027\u3002\u66f4\u4e00\u822c\u5730\u8bf4\uff0c\u786e\u4fdd\u4f60\u4e86\u89e3\u4f60\u7684\u6280\u672f\u5982\u4f55\u88ab\u6ee5\u7528\uff0c\u56e0\u4e3a\u51e0\u4e4e\u6240\u6709\u6280\u672f\u90fd\u6709\u5229\u5f0a\uff0c\u6211\u4eec\u5fc5\u987b\u5f00\u59cb\u4ece\u4e00\u5f00\u59cb\u5c31\u8003\u8651\u8fd9\u4e9b\u4e8b\u60c5\uff0c\u5c3d\u529b\u51cf\u8f7b\u4f24\u5bb3\uff0c\u540c\u65f6\u5229\u7528\u6280\u672f\u548c\u4eba\u5de5\u667a\u80fd\u548c\u6570\u636e\u7684\u5de8\u5927\u529b\u91cf\u3002</p> <p>\u597d\u4e86\uff0c\u6211\u8bf4\u5b8c\u4e86\u3002\u5e0c\u671b\u4f60\u559c\u6b22\u8fd9\u4e2a\uff0c\u5e0c\u671b\u4f60\u4ece\u4e2d\u5b66\u5230\u4e86\u4e00\u4e9b\u4e1c\u897f\u3002\u6211\u4eec\u5f88\u5feb\u5c31\u4f1a\u89c1\u9762\u3002</p>"},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part2/#lecture-27-scheme","title":"Lecture 27 Scheme","text":""},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part2/#1_21","title":"1","text":"<p>\u611f\u89c9 scheme \u8fd9\u4e2a\u8868\u8fbe\u5f0f\u6709\u70b9\u50cf\u9006\u6ce2\u5170\u5f0f\ud83d\ude02</p> <p></p> <p>scheme \u8bed\u8a00\u91cc\u7684\u4e00\u4e9b\u7528\u6cd5(\u770bJohn\u7684demo\u5e94\u8be5\u5c31\u53ef\u4ee5\u770b\u61c2\u4e86)</p> <p></p> <p>scheme \u4e2d\u7684\u4e00\u4e9b\u8bed\u53e5</p> <p>John \u8bf4\u5230 scheme \u4f7f\u7528\u7684 \u73af\u5883\u6a21\u578b model of environments \u548c python \u7684\u4e00\u6837</p>"},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part2/#2_18","title":"2","text":"<p>John \u6f14\u793ascheme\u4e2d\u7684\u5d4c\u5957\u51fd\u6570\u65f6\uff0c\u6784\u9020\u4e86\u4e00\u4e2a\u6c42\u5e73\u65b9\u6839\u7684\u9012\u5f52\u51fd\u6570\uff0c</p> <pre><code>(define (sqrt x)\n  (define (update guess)\n    (if (= (square guess) x)\n        guess\n        (update (average guess (/ x guess)))))\n  (update 1))\n</code></pre> <p>\u7ffb\u8bd1\u6210 python \u5e94\u8be5\u5927\u81f4\u662f\u8fd9\u6837</p> <pre><code>def sqrt(x):\n def update(guess):\n     if guess ^ 2 == x:\n         return guess\n     else:\n         return update((x // guess + guess) // 2)\n return update(1)\n</code></pre> <p>\u5e76\u4e14\u5176\u4e2d\u4f7f\u7528\u4e86 $$ guess = \\frac{x}{guess} + guess $$ \u7684\u8fed\u4ee3\u65b9\u6cd5\uff0c\u611f\u89c9\u5f88\u5389\u5bb3</p> <p>\u8be2\u95ee\u4e86\u540c\u5b66\u4e4b\u540e\uff0c\u53d1\u73b0\u8fd9\u5c31\u662f(\u4ee5\u524d\u5b66\u8fc7\u7684)\u5bf9\u52fe\u51fd\u6570\uff0c\u6700\u540e\u6536\u655b\u4e8e \\(\\sqrt{x}\\) \ud83d\ude02</p>"},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part2/#3_13","title":"3","text":"<p>scheme\u4e2d\u7684 lambda \u533f\u540d\u51fd\u6570(\u7c7b\u6bd4 python \u4e2d\u7684\u5f88\u597d\u7406\u89e3)</p>"},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part2/#4_8","title":"4","text":"<p>John \u6f14\u793a\u7528 scheme \u753b \u8c22\u5c14\u5bbe\u65af\u57fa\u4e09\u89d2\u5f62 Sierpinski's Triangle \uff0c</p> <p>\u7528\u9012\u5f52\u7684\u65b9\u5f0f\u753b\uff0c\u6bcf\u4e2a\u5927\u7684\u4e09\u89d2\u5f62(\u7684\u4e09\u6761\u8fb9)\u7531(\u4e09\u4e2a)\u5c0f\u7684\u4e09\u89d2\u5f62\u7ec4\u6210\uff0c\u56e0\u6b64</p> <pre><code>(define (repeat k fn)\n  (fn)\n  (if (&gt; k 1) (repeat (- k 1) fn)))\n(define (tri fn)\n  (repeat 3 (lambda () (fn) (lt 120))))\n(define (sier d k)\n  (tri (lambda () (if (= d 1) (fd k) (leg d k)))))\n(define (leg d k)\n  (sier (- d 1) (/ k 2))\n  (penup) (fd k) (pendown))\n</code></pre> <p>\u4ee3\u7801\u5927\u6982\u662f <code>sier</code> \u548c <code>leg</code> \u76f8\u4e92\u8c03\u7528\u7684\u9012\u5f52\uff0c</p> <p>\u7ffb\u8bd1\u6210 python \u5927\u81f4\u662f\u8fd9\u6837</p> <pre><code>def repeat(k, fn):\n    fn()\n    if k &gt; 1:\n        repeat(k - 1, fn)\n\ndef tri(fn):\n    repeat(3, lambda: fn() and turn_left(120))\n\ndef sier(d, k):\n    tri(lambda: (move_forward(k) if d == 1 else leg(d, k)))\n\ndef leg(d, k):\n    sier(d - 1, k // 2)\n    pen_up()\n    move_forward(k)\n    pen_down()\n</code></pre> <p>\u5176\u4e2d <code>turn_left</code> <code>move_forward</code> <code>pen_up</code> <code>pen_down</code> </p> <p>\u5206\u522b\u5bf9\u5e94 scheme \u4e2d\u7684\u5185\u7f6e\u51fd\u6570 <code>lr</code> <code>fd</code> <code>penup</code> <code>pendown</code></p>"},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part2/#5_6","title":"5","text":"<p><code>cond</code> \u8bed\u53e5\uff0c\u53ef\u4ee5\u7c7b\u6bd4 <code>if-elif-else</code> \u8bed\u53e5\uff0c\u800c\u4e14\uff0c\u53ef\u4ee5\u7406\u89e3\u4e3a\u8fd9\u4e2a\u8bed\u53e5\u4e5f\u53ef\u4ee5\u8fd4\u56de\u503c\uff0c\u6240\u4ee5\u53ef\u4ee5\u50cf\u56fe\u4e2d\u53f3\u4e0a\u4e00\u6837\u5199</p> <p><code>begin</code> \u8bed\u53e5\uff0c\u5c06\u591a\u4e2a\u8bed\u53e5\u5408\u6210\u4e00\u4e2a( <code>begin</code> )\u8bed\u53e5</p> <p></p> <p><code>let</code> \u53ef\u4ee5\u5728\u5176\u4e2d\u5b9a\u4e49\u4e34\u65f6\u7684\u53d8\u91cf\uff0c\u683c\u5f0f\u662f <code>(let ((a 1) (b 2) ...) (...))</code> \uff0c<code>let</code> \u540e\u7b2c\u4e00\u4e2a\u62ec\u53f7\u5185\u662f\u82e5\u5e72\u4e2a\u5b9a\u4e49\u4e34\u65f6\u53d8\u91cf\u7684 \u5bf9 part \uff0c\u7b2c\u4e8c\u4e2a\u62ec\u53f7\u662f\u8981\u6267\u884c\u7684\u8bed\u53e5\u6216\u8005\u8981\u8fd4\u56de\u7684\u503c</p>"},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part2/#6_3","title":"6","text":"<p>scheme \u4e2d \u94fe\u8868 list \u76f8\u5173\u5185\u5bb9</p>"},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part2/#7_2","title":"7","text":"<p>\u5f15\u7528 quotation (\u611f\u89c9\u4f3c\u4e4e\u7406\u89e3\u4e86 c++ \u4e2d\u7684\u5f15\u7528)\uff0c\u53ef\u4ee5\u5c06\u7b26\u53f7\u672c\u8eab\u4f20\u5165\u5230\u8868\u8fbe\u5f0f\u4e2d</p> <p>Special form to indicate that the expression itself is the value.</p> <p>\u8868\u793a\u8868\u8fbe\u5f0f\u672c\u8eab\u5c31\u662f\u503c\u7684\u7279\u6b8a\u5f62\u5f0f\u3002</p> <pre><code>scm&gt; '(+ a b)\n(+ a b)\nscm&gt; '(zero? a)\n(zero? a)\n</code></pre> <p>\u4e5f\u53ef\u4ee5\u662f\u5728\u8868\u8fbe\u5f0f\u524d\u52a0 \u5355\u5f15\u53f7 <code>'</code> \uff0c\u90a3\u4e48\u8868\u8fbe\u5f0f\u4e2d\u7684\u7b26\u53f7\u90fd\u4f1a\u4ee5\u5f15\u7528\u7684\u5f62\u5f0f\u4f7f\u7528</p> <p>John \u7684demo\u6f14\u793a</p> <pre><code>scm&gt; '(1 2)\n(1 2)\nscm&gt; '(1 a)\n(1 a)\nscm&gt; (list 1 'a)\n(1 a)\nscm&gt; (list 1 a)\nTraceback (most recent call last):\n  0     (list 1 a)\n  1     a\nError: unknown identifier: a\n</code></pre> <p>Quote</p> <p>John:</p> <p>When quoting a list, you get a list, but all the expressions within it are quoted as well.</p> <p>...I can't evaluate a until I've define it, but I can refer to a before I've defined it, because it's just a symbol. It could mean something in the future, it just hasn't been defined yet.</p> <p>John:</p> <p>\u5f15\u7528\u5217\u8868\u65f6\uff0c\u4f60\u4f1a\u5f97\u5230\u4e00\u4e2a\u5217\u8868\uff0c\u4f46\u5176\u4e2d\u7684\u6240\u6709\u8868\u8fbe\u5f0f\u4e5f\u4f1a\u88ab\u5f15\u7528\u3002</p> <p>...\u5728\u5b9a\u4e49a\u4e4b\u524d\uff0c\u6211\u65e0\u6cd5\u8bc4\u4f30\u5b83\uff0c\u4f46\u5728\u5b9a\u4e49\u4e4b\u524d\uff0c\u6211\u53ef\u4ee5\u53c2\u8003a\uff0c\u56e0\u4e3a\u5b83\u53ea\u662f\u4e00\u4e2a\u7b26\u53f7\u3002\u5b83\u53ef\u80fd\u5728\u672a\u6765\u6709\u610f\u4e49\uff0c\u53ea\u662f\u8fd8\u6ca1\u6709\u5b9a\u4e49\u3002</p>"},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part2/#8_1","title":"8","text":"<p>scheme \u7684\u5185\u7f6e\u51fd\u6570 <code>eval</code> \u53ef\u4ee5\u8ba1\u7b97\u5f15\u7528\u5f62\u5f0f\u7684\u8868\u8fbe\u5f0f(\u53ef\u89c1\u4e8e\u4e0a\u56fe) (\u611f\u89c9\u53ef\u4ee5\u7406\u89e3\u4e3a \u53cd\u5411\u5f15\u7528\uff0c\u6216\u8005\u8bf4 \u89e3\u5f15\u7528)</p>"},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part2/#9_1","title":"9","text":"<p>John \u5173\u4e8e\u7b26\u53f7\u8868\u8fbe\u5f0f\u7684\u6f14\u793a(\u770b\u8d77\u6765\u611f\u89c9\u5f88\u5389\u5bb3\ud83d\ude32)</p> <p></p> <pre><code>(define (fact n)\n  (if (= n 1) 1 (* n (fact (- n 1)))))\n\n(define (fact-exp n)\n  (if (= n 1) 1 (list '* n (fact-exp (- n 1)))))\n</code></pre> <p></p> <pre><code>(define (fib n)\n  (if (&lt;= n 1) n (+ (fib (- n 2)) (fib (- n 1)))))\n\n(define (fib-exp n)\n  (if (&lt;= n 1) n (list '+ (fib-exp (- n 2)) (fib-exp (- n 1)))))\n</code></pre>"},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part2/#10_1","title":"10","text":"<p>\u51c6\u5f15\u7528 quasiquotation \uff0c\u53ef\u4ee5\u88ab\u4e2d\u65ad\u7684\u5f15\u7528</p> <p>\u53cd\u5f15\u53f7 <code>`</code> \u7684\u5f15\u7528\u6548\u679c\u53ef\u4ee5\u88ab \u9017\u53f7 <code>,</code> \u4e2d\u65ad\uff0c\u5373 <code>,</code> \u540e\u7684\u62ec\u53f7\u4ee5\u53ca\u66f4\u91cc\u9762\u7684\u62ec\u53f7\u53d6\u6d88\u5f15\u7528\u6548\u679c\uff0c\u800c\u5176\u4ed6\u5730\u65b9\u8fd8\u662f\u6709\u5f15\u7528\u6548\u679c</p> <pre><code>scm&gt; `(a ,(+) b)\n(a 0 b)\nscm&gt; `(a (+) b)\n(a (+) b)\n</code></pre>"},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part2/#11_1","title":"11","text":"<p>John \u5173\u4e8e \u51c6\u5f15\u7528 quasiquotation \u5f15\u7528\u7684\u6f14\u793a\uff0c</p> <p>\u7528\u51c6\u5f15\u7528\u6784\u9020\u4e86\u7c7b\u4f3c\u4e8e <code>while</code> \u7684(\u67d0\u79cd\u7a0b\u5ea6\u4e0a)\u901a\u7528\u7684\u5faa\u73af\u7ed3\u6784(\u7ed9\u6211\u770b\u50bb\u4e86\ud83d\ude32)</p> <p></p> <p>\u5206\u53f7 <code>;</code> \u8868\u793a\u6ce8\u91ca</p> <p>\u6211\u7684\u7406\u89e3\u662f\uff0c\u5982\u679c <code>begin</code> \u4e2d\u7684 <code>condition</code> <code>add-to-total</code> \u7b49\u4e0d\u52a0\u9017\u53f7 <code>,</code> \u7684\u8bdd\uff0c\u8fd4\u56de\u7684\u8868\u8fbe\u5f0f\u4e2d\u4f1a\u76f4\u63a5\u5c31\u662f <code>condition</code> <code>add-to-total</code> \u7b49\u8fd9\u4e9b\u7b26\u53f7\u672c\u8eab\uff0c\u800c\u52a0\u4e86\u9017\u53f7 <code>,</code> \u4e4b\u540e\uff0c\u6700\u540e\u7684\u8868\u8fbe\u5f0f\u5c31\u4f1a\u662f \u5728\u4f7f\u7528 <code>sum-while</code> \u65f6 \u5177\u4f53\u4f20\u5165\u7684\u503c\uff0c\u56e0\u6b64\u5728\u4f7f\u7528 <code>sum-while</code> \u65f6\u5e94\u8be5\u4f20\u5165\u7684\u662f\u5f15\u7528\u5f62\u5f0f\u7684\u8868\u8fbe\u5f0f(\u5373\u5982 John \u6f14\u793a\u7684\u4e00\u6837\uff0c<code>(sum-while 1 '(&lt; (* x x) 50) 'x '(+ x 1))</code> )</p> <pre><code>(define (sum-while initial-x condition       add-to-total update-x)\n  ;     (sum-while 1         '(&lt; (* x x) 50) 'x           '(+ x 1))\n  `(begin\n     (define (f x total)\n       (if ,condition\n         (f ,update-x (+ total ,add-to-total))\n         total))\n     (f ,initial-x 0)))\n</code></pre>"},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part2/#lecture-27-qa","title":"Lecture 27  Q&amp;A","text":""},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part2/#1_22","title":"1","text":"<p>\u6709\u4eba\u5411\u63d0\u95ee\u5230 scheme \u4e2d\u7684 <code>print</code> \u7684\u8fd4\u56de\u503c\u662f\u4ec0\u4e48\uff0c\u4e8e\u662f John \u5f00\u59cb\u6f14\u793a</p> <pre><code>scm&gt; (define s (print 1))\n1\ns\nscm&gt; s\nscm&gt; print(s)\nundefined\n</code></pre> <p>John\u4e4b\u540e\u89e3\u91ca\u9053\uff0cscheme \u4e2d\u7684 <code>undefined</code> \u548c python \u4e2d\u7684 <code>None</code> \u7c7b\u4f3c\uff0c\u4f46\u4e5f\u6709\u533a\u522b\uff0c <code>None</code> \u8fd8\u4f1a\u7528\u4e8e\u4e00\u4e9b\u6bd4\u8f83\uff0c\u4f46 <code>undefined</code> \u57fa\u672c\u4e0a\u4e0d\u4f1a\u88ab\u4f7f\u7528</p> <p>Quote</p> <p>John:</p> <p>Well, we get this special value called \"undefined.\" That's it. It's kind of close to Python's \"None,\" except for here's the rule. This is more of a conventional rule than enforced by the language, but here's the rule: you're never supposed to do anything with the undefined value.</p> <p>Whereas in Python, people use \"None\" for all kinds of stuff. They compare whether something is \"None,\" etc. That basically never shows up in Scheme code. So when you get this undefined value, which happens to exist, the idea is you should never do anything with it. You should never check to see if it's equal to another undefined. You should never check to see how many undefineds there are in a list or something like that. You should just stop.</p> <p>So basically, like this expression is legal, but it's a no-no. You should never take the value of \"print\" and do something else with it.</p> <p>John:</p> <p>\u55ef\uff0c\u6211\u4eec\u6709\u8fd9\u4e2a\u7279\u6b8a\u7684\u503c\u53eb\u505a \"undefined\"\u3002\u5c31\u662f\u8fd9\u6837\uff0c\u5b83\u6709\u70b9\u7c7b\u4f3c\u4e8e Python \u7684 \"None\"\uff0c\u9664\u4e86\u8fd9\u91cc\u6709\u4e00\u4e2a\u89c4\u5219\u3002\u8fd9\u66f4\u50cf\u662f\u4e00\u79cd\u7ea6\u5b9a\u4fd7\u6210\u7684\u89c4\u5219\uff0c\u800c\u4e0d\u662f\u8bed\u8a00\u5f3a\u5236\u7684\uff0c\u4f46\u8fd9\u5c31\u662f\u89c4\u5219\uff1a\u4f60\u6c38\u8fdc\u4e0d\u5e94\u8be5\u5bf9 \"undefined\" \u503c\u505a\u4efb\u4f55\u4e8b\u60c5\u3002</p> <p>\u800c\u5728 Python \u4e2d\uff0c\u4eba\u4eec\u7528 \"None\" \u6765\u5904\u7406\u5404\u79cd\u4e8b\u60c5\u3002\u4ed6\u4eec\u6bd4\u8f83\u67d0\u4e2a\u4e1c\u897f\u662f\u5426\u4e3a \"None\" \u7b49\u7b49\u3002\u8fd9\u57fa\u672c\u4e0a\u5728 Scheme \u4ee3\u7801\u4e2d\u51e0\u4e4e\u4e0d\u4f1a\u51fa\u73b0\u3002\u6240\u4ee5\u5f53\u4f60\u5f97\u5230\u8fd9\u4e2a\u5b58\u5728\u7684 \"undefined\" \u503c\u65f6\uff0c\u7406\u5ff5\u662f\u4f60\u4e0d\u5e94\u8be5\u5bf9\u5b83\u505a\u4efb\u4f55\u4e8b\u60c5\u3002\u4f60\u4e0d\u5e94\u8be5\u68c0\u67e5\u5b83\u662f\u5426\u7b49\u4e8e\u53e6\u4e00\u4e2a \"undefined\"\uff0c\u4f60\u4e0d\u5e94\u8be5\u68c0\u67e5\u5217\u8868\u4e2d\u6709\u591a\u5c11\u4e2a \"undefined\" \u7b49\u7b49\u3002\u4f60\u5e94\u8be5\u505c\u6b62\u3002</p> <p>\u6240\u4ee5\u57fa\u672c\u4e0a\uff0c\u50cf\u8fd9\u4e2a\u8868\u8fbe\u5f0f\u662f\u5408\u6cd5\u7684\uff0c\u4f46\u662f\u662f\u4e0d\u63a8\u8350\u7684\u3002\u4f60\u6c38\u8fdc\u4e0d\u5e94\u8be5\u83b7\u53d6 \"print\" \u7684\u503c\u7136\u540e\u7528\u5b83\u505a\u5176\u4ed6\u4e8b\u60c5\u3002</p>"},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part2/#2_19","title":"2","text":"<p>\u6709\u4eba\u95ee\u9053 scheme \u4e2d\u6709\u6ca1\u6709\u4e0e python \u4e2d <code>non local</code> \u7c7b\u4f3c\u7684\u64cd\u4f5c\uff0c</p> <p>\u4e8e\u662f John \u6f14\u793a\u4e86\u4f7f\u7528 <code>set!</code> \u7684\u4e00\u79cd\u65b9\u5f0f</p> <pre><code>(define (make-withdraw balance)\n  (define (withdraw amount)\n    (set! balance (- balance amount))\n    balance)\n  withdraw)\n</code></pre>"},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part2/#3_14","title":"3","text":"<p>John \u63d0\u5230 scheme \u4e2d\u7684 <code>=</code> \u548c <code>equal?</code></p> <p>Quote</p> <p>John:</p> <p>So anyway, there's a bunch of different equals, and no, I don't think you need to know the difference between all of them. But if you want to know, like this ( <code>eq?</code> ), it is like <code>is</code> . This ( <code>=</code> ) is like nothing that exists in Python because it only works for numbers.</p> <p>This ( <code>equal?</code> ) is a lot like the equal sign. Yeah, in Python, I think that just like this will check, okay, so yeah, this ( <code>equal?</code> ) will check whether two things are generally equal, just like in Python, 2 equals 2 is true, and also a list containing 2 and a list containing 2 is true. So, um, yeah, this ( <code>equal?</code> ) is usually the one you want.</p> <p>But if you want to check for \"is\", it looks like that ( <code>eq?</code> ), and this ( <code>=</code> ) is some like weird thing that only works with numbers.</p> <p>John:</p> <p>\u603b\u4e4b\uff0c\u6709\u5f88\u591a\u4e0d\u540c\u7684\u7b49\u53f7\uff0c\u6211\u4e0d\u8ba4\u4e3a\u4f60\u9700\u8981\u4e86\u89e3\u5b83\u4eec\u4e4b\u95f4\u7684\u533a\u522b\u3002\u4f46\u662f\u5982\u679c\u4f60\u60f3\u77e5\u9053\uff0c\u6bd4\u5982\u8fd9\u4e2a( <code>eq?</code> )\uff0c\u5c31\u50cf <code>is</code> \u3002\u8fd9\u4e2a( <code>=</code> )\u5728Python\u4e2d\u5e76\u4e0d\u5b58\u5728\uff0c\u56e0\u4e3a\u5b83\u53ea\u9002\u7528\u4e8e\u6570\u5b57\u3002</p> <p>\u8fd9\u4e2a( <code>equal?</code> )\u5f88\u50cf\u7b49\u53f7\u3002\u662f\u7684\uff0c\u5728Python\u4e2d\uff0c\u6211\u8ba4\u4e3a\u5c31\u50cf\u8fd9\u4e2a\u4f1a\u68c0\u67e5\uff0c\u597d\u7684\uff0c\u6240\u4ee5\u662f\u7684\uff0c\u8fd9\u4e2a( <code>equal?</code> )\u5c06\u68c0\u67e5\u4e24\u4e2a\u4e1c\u897f\u662f\u5426\u5927\u81f4\u76f8\u7b49\uff0c\u5c31\u50cf\u5728Python\u4e2d\uff0c2\u7b49\u4e8e2\u662f\u771f\u7684\uff0c\u8fd8\u6709\u4e00\u4e2a\u5305\u542b2\u7684\u5217\u8868\u548c\u4e00\u4e2a\u5305\u542b2\u7684\u5217\u8868\u4e5f\u662f\u771f\u7684\u3002\u6240\u4ee5\uff0c\u55ef\uff0c\u8fd9\u4e2a( <code>equal?</code> )\u901a\u5e38\u662f\u4f60\u60f3\u8981\u7684\u3002</p> <p>\u4f46\u662f\u5982\u679c\u4f60\u60f3\u68c0\u67e5\u201cis\u201d\uff0c\u5b83\u770b\u8d77\u6765\u50cf\u8fd9\u6837( <code>eq?</code> )\uff0c\u800c\u8fd9\u4e2a( <code>=</code> )\u662f\u4e00\u4e9b\u5947\u602a\u7684\u4e1c\u897f\uff0c\u53ea\u5bf9\u6570\u5b57\u8d77\u4f5c\u7528\u3002</p>"},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part2/#lab-10","title":"Lab 10","text":""},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part2/#1_23","title":"1","text":"<p>\u6307\u5bfc\u7f51\u9875\u4e0a\u6709\u5199\u5982\u4f55\u4f7f\u7528\u63d0\u4f9b\u7684 scheme \u89e3\u91ca\u5668\u4ee5\u53ca\u7f16\u8f91\u5668</p> <p>Quote</p> <p>Scheme</p> <p>Scheme is a famous functional programming language from the 1970s. It is a dialect of Lisp (which stands for LISt Processing). The first observation most people make is the unique syntax, which uses a prefix notation and (often many) nested parentheses (see http://xkcd.com/297/). Scheme features first-class functions and optimized tail-recursion, which were relatively new features at the time.</p> <p>Our course uses a custom version of Scheme (which you will build for Project 4) included in the starter ZIP archive. To start the interpreter, type <code>python3 scheme</code>. To run a Scheme program interactively, type <code>python3 scheme -i &lt;file.scm&gt;</code>. To exit the Scheme interpreter, type <code>(exit)</code>.</p> <p>You may find it useful to try code.cs61a.org/scheme when working through problems, as it can draw environment and box-and-pointer diagrams and it lets you walk your code step-by-step (similar to Python Tutor). Don't forget to submit your code through Ok though!</p> <p>Scheme Editor</p> <p>As you're writing your code, you can debug using the Scheme Editor. In your <code>scheme</code> folder you will find a new editor. To run this editor, run <code>python3 editor</code>. This should pop up a window in your browser; if it does not, please navigate to localhost:31415 and you should see it.</p> <p>Make sure to run <code>python3 ok</code> in a separate tab or window so that the editor keeps running.</p> <p>If you find that your code works in the online editor but not in your own interpreter, it's possible you have a bug in code from an earlier part that you'll have to track down. Every once in a while there's a bug that our tests don't catch, and if you find one you should let us know!</p> <p>\u8fd0\u884c</p> <pre><code>python ./scheme [-i &lt;file.scm&gt;]\n</code></pre> <p>\u6253\u5f00 scheme \u89e3\u91ca\u5668\uff0c\u4ee5\u53ca\u52a0\u8f7d\u6587\u4ef6\u5e76\u6253\u5f00\u3002</p> <p>\u8fd0\u884c</p> <pre><code>python editor\n</code></pre> <p>\u6253\u5f00 scheme \u7f16\u8f91\u5668\uff0c\u5728\u7ebf\u7f16\u8f91\u548c\u6d4b\u8bd5(\u7f51\u5740\u5728 http://127.0.0.1:31415)</p> <p></p>"},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part2/#2_20","title":"2","text":"<p>Q5\u4e2d\uff0c\u9700\u8981\u5c06 <code>'YOUR-CODE-HERE</code> \u8fd9\u4e00\u884c\u6ce8\u91ca\u6389\u6216\u8005\u5220\u53bb\uff0c\u5426\u5219\u4f1a\u6709\u5982\u4e0b\u62a5\u9519</p> <pre><code>Traceback (most recent call last):\n  0     (define lst (quote your-code-here) 1)\nError: too many operands in form\n</code></pre>"},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part2/#3_15","title":"3","text":"<p>Q6 \u4e2d\uff0c\u672c\u6765\u4ee5\u4e3a\u5f88\u7b80\u5355\uff0c\u4e00\u5f00\u59cb\u9012\u5f52\u7684 base case \u662f\u7528 <code>(= lst nil)</code> \u6765\u5224\u65ad\uff0c\u4f46\u662f\u62a5\u9519\u4e86</p> <pre><code>Error: operand 0 (()) is not a number\n</code></pre> <p>\u5927\u6982\u5e94\u8be5\u6307\u7684\u662f\uff0c <code>lst</code> \u548c <code>nil</code> \u4e0d\u662f\u6570\uff0c\u6240\u4ee5\u4e0d\u80fd\u7528 <code>=</code> \u6bd4\u8f83\u3002</p> <p>\u6700\u540e\u5728\u5728\u7ebf\u7ec8\u7aef\u89e3\u91ca\u5668\u4e2d\uff0c\u6478\u7d22\u4e86\u597d\u4e00\u4f1a\uff0c\u53d1\u73b0\u4e86\u4e00\u4e2a\u51fd\u6570 <code>length</code> \uff0c\u80fd\u8fd4\u56de\u94fe\u8868\u7684\u957f\u5ea6\uff0c\u4e8e\u662f\u5c06\u5224\u65ad\u6761\u4ef6\u6539\u6210</p> <pre><code>(zero? (length lst))\n</code></pre> <p>\u6700\u7ec8\u89e3\u51b3</p> code <pre><code>(define (remove item lst)\n  'YOUR-CODE-HERE\n  (if (zero? (length lst))\n      nil\n      (if (= item (car lst))\n          (remove item (cdr lst))\n          (cons (car lst) (remove item (cdr lst)))))\n)\n</code></pre> <p>\u4e4b\u540e\u53d1\u73b0\u5176\u5b9e\u8fd8\u53ef\u4ee5\u7528 <code>equal?</code> (\u6216 <code>eq?</code> )\u51fd\u6570\uff0c</p> <pre><code>scm&gt; (equal? () nil)\n#t\nscm&gt; (equal? '() nil)\n#t\n</code></pre> <p>\u5199\u5230 hw07 \u65f6\u53d1\u73b0\uff0c\u5176\u5b9e\u8fd9\u9898\u63d0\u793a\u4e2d\u8bf4\u7684 <code>filter-lst</code> \u51fd\u6570\u5176\u5b9e\u60f3\u8bf4\u7684\u662f <code>filter</code> \uff0c\u4e4b\u524d\u8f93\u5165 <code>filter-lst</code> \u663e\u793a\u6ca1\u6709\u8fd9\u4e2a\u51fd\u6570\uff0c</p> <p>\u7528\u4e0a <code>filter</code> \u51fd\u6570\u7b54\u6848\u5c31\u4f1a\u53d8\u5f97\u975e\u5e38\u7b80\u5355</p> <pre><code>(define (remove item lst)\n  'YOUR-CODE-HERE\n  (filter (lambda (x) (not (= x item))) lst)\n)\n</code></pre>"},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part2/#hw-06","title":"HW 06","text":""},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part2/#1_24","title":"1","text":"<p>Q3\u4e2d\uff0c\u5728\u5904\u7406\u5947\u6570\u60c5\u51b5\u65f6\uff0c\u4e00\u5f00\u59cb\u6211\u5199\u7684\u662f</p> <pre><code>(* x (square (pow x (/ y 2))))\n</code></pre> <p>\u4f46\u662f\u5728\u8dd1\u7b2c\u4e00\u4e2a\u6d4b\u8bd5\u7528\u4f8b\u65f6\uff0c</p> <pre><code>(pow 2 5)\n</code></pre> <p>\u663e\u793a\u9012\u5f52\u6ea2\u51fa\u4e86</p> <pre><code># Error: expected\n#     32\n# but got\n#     Traceback (most recent call last):\n#       ...\n#     RecursionError: maximum recursion depth exceeded in __instancecheck__\n</code></pre> <p>\u731c\u6d4b\u662f\u56e0\u4e3a\u9664\u6cd5\u7684\u95ee\u9898\uff0c\u4e8e\u662f\u53bb\u6d4b\u8bd5\u4e86\u4e00\u4e0b\uff0c\u53d1\u73b0 <code>/</code> \u4e0d\u662f\u6574\u9664</p> <pre><code>scm&gt; (/ 5 2)\n2.5\nscm&gt; (/ 4 2)\n2\n</code></pre> <p>\u4e8e\u662f\u5c06\u57fa\u6570\u60c5\u51b5\u7684\u4ee3\u7801\u4fee\u6539\u6210\u4e86</p> <pre><code>(* x (square (pow x (/ (- y 1) 2))))\n</code></pre> code <pre><code>(define (pow x y)\n  'YOUR-CODE-HERE\n  (if (= y 1)\n      x\n      (if (even? y)\n          (square (pow x (/ y 2)))\n          (* x (square (pow x (/ (- y 1) 2))))))\n)\n</code></pre>"},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part2/#lecture-28-exception","title":"Lecture 28 Exception","text":""},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part2/#1_25","title":"1","text":"<p>\u5728\u8fd0\u884c <code>py</code> \u6587\u4ef6\u65f6\uff0c\u53ef\u4ee5\u4f7f\u7528 <code>-O</code> \u9009\u9879\u6765\u5ffd\u7565 <code>assert</code> \u8bed\u53e5\u6765\u63d0\u9ad8\u7a0b\u5e8f\u6267\u884c\u6548\u7387</p> <pre><code>python -O\n</code></pre> <p></p> <p><code>__debug__</code> \u53ef\u4ee5\u67e5\u770b <code>assert</code> \u8bed\u53e5\u662f\u5426\u4f1a\u88ab\u6267\u884c</p> <pre><code>C:\\Users\\Ronald&gt;python\nPython 3.10.9 (tags/v3.10.9:1dd9be6, Dec  6 2022, 19:43:38) [MSC v.1934 32 bit (Intel)] on win32\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n&gt;&gt;&gt; __debug__\nTrue\n&gt;&gt;&gt; ^Z\n\n\nC:\\Users\\Ronald&gt;python -O\nPython 3.10.9 (tags/v3.10.9:1dd9be6, Dec  6 2022, 19:43:38) [MSC v.1934 32 bit (Intel)] on win32\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n&gt;&gt;&gt; __debug__\nFalse\n&gt;&gt;&gt;\n</code></pre>"},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part2/#2_21","title":"2","text":"<p>\u5f15\u53d1\u9519\u8bef raise error</p> <p><code>raise</code> \u540e\u7684\u8868\u8fbe\u5f0f\u5fc5\u987b\u662f <code>BaseException</code> \u7684\u5b9e\u4f8b\u6216\u8005\u5b83\u7684\u5b50\u7c7b\uff0c</p> <p>\u5982\u4e0a\u56fe\uff0cJohn \u8fd8\u4ecb\u7ecd\u4e86\u4e2d\u9519\u8bef\u7c7b\u578b</p> <p>John \u7684 demo \u6f14\u793a</p> <p></p>"},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part2/#3_16","title":"3","text":"<p><code>try</code> \u8bed\u53e5\u7684\u7528\u6cd5\uff0c\u5982\u679c\u5728\u6267\u884c <code>try</code> \u4e4b\u540e\u7684\u4ee3\u7801\u4e2d\u5f15\u8d77\u4e86\u9519\u8bef\uff0c\u5e76\u4e14\u9519\u8bef\u662f <code>except</code> \u540e <code>&lt;exception class&gt;</code> \u7684\u5b50\u7c7b\u65f6\uff0c\u5c31\u4f1a\u6267\u884c <code>except</code> \u4e2d\u7684\u8bed\u53e5(\u5982\u679c\u6ca1\u6709\u5f15\u8d77\u9519\u8bef\u5c31\u4e0d\u4f1a\u6267\u884c)</p> <p>John\u7684demo\u6f14\u793a</p> <p></p>"},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part2/#4_9","title":"4","text":"<p>John\u63d0\u5230\u4e86\u4e00\u4e2a <code>reduce</code> \u51fd\u6570(python\u6ca1\u5185\u7f6e\uff0cscheme\u5185\u7f6e\u4e86)\uff0c\u5728\u4e4b\u540e\u7684demo\u6f14\u793a\u4e2d\uff0c\u5206\u522b\u7528\u8fed\u4ee3\u548c\u9012\u5f52\u5b9e\u73b0\u4e86 <code>reduce</code></p> <ul> <li> <p>\u8fed\u4ee3</p> <pre><code>def reduce(f, s, initial):\n    \"\"\"Combine elements of s using f starting with initial.\n\n    &gt;&gt;&gt; reduce(mul, [2, 4, 8], 1)\n    64\n    &gt;&gt;&gt; reduce(add, [1, 2, 3, 4], 0)\n    10\n    \"\"\"\n    for x in s:\n        initial = f(initial, x)\n    return initial\n</code></pre> </li> <li> <p>\u9012\u5f52</p> <pre><code>def reduce(f, s, initial):\n    \"\"\"Combine elements of s using f starting with initial.\n\n    &gt;&gt;&gt; reduce(mul, [2, 4, 8], 1)\n    64\n    &gt;&gt;&gt; reduce(add, [1, 2, 3, 4], 0)\n    10\n    \"\"\"\n    if not s:\n        return initial\n    else:\n        first, rest = s[0], s[1:]\n        return reduce(f, rest, f(initial, first))\n</code></pre> </li> </ul>"},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part2/#lecture-28-qa","title":"Lecture 28 Q&amp;A","text":""},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part2/#1_26","title":"1","text":"<p><code>try</code> \u8bed\u53e5\u7ed3\u6784\u4e2d\u7684 <code>finally</code> \u8bed\u53e5\uff0c</p> <p><code>finally</code> \u4e2d\u7684\u4ee3\u7801\u65e0\u8bba <code>try</code> \u4e2d\u662f\u5426\u5f15\u53d1\u9519\u8bef\u6700\u7ec8\u90fd\u4f1a\u88ab\u6267\u884c(\u4ece\u56fe\u4e0a John \u7684\u6f14\u793a\u4e2d\u53ef\u4ee5\u770b\u5230)\uff0c\u6240\u4ee5 <code>finally</code> \u4e2d\u4e00\u822c\u7528\u6765\u91ca\u653e\u8d44\u6e90\u91ca\u653e\u5185\u5b58(\u5982\u5173\u95ed\u5728 <code>try</code> \u4e2d\u52a0\u8f7d\u7684\u6587\u4ef6\uff0c\u6216\u8005\u65ad\u5f00\u7f51\u7edc\u8fde\u63a5)</p>"},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part2/#2_22","title":"2","text":"<p>\u6709\u4eba\u63d0\u95ee <code>try</code> \u4e2d\u5f15\u53d1\u7684\u9519\u8bef\u662f\u5426\u5b58\u5728\u4e8e <code>global</code> \u6846\u67b6\u4e2d\uff0cJohn \u8fdb\u884c\u6f14\u793a</p> <pre><code>&gt;&gt;&gt; try:\n...     1/0\n... except ZeroDivisionError as n:\n...     print(\"n is\", n)\n...\nn is division by zero\n&gt;&gt;&gt; n\nTraceback (most recent call last):\n  File \"&lt;stdin&gt;\", line 1, in &lt;module&gt;\nNameerror: name 'n' is not defined\n</code></pre> <p>\u968f\u540e John \u53c8\u5c55\u793a\u4e86\u4e00\u4e0b\u9519\u8bef\u5b9e\u4f8b</p> <pre><code>def return_an_error():\n    try:\n        1/0\n    except ZeroDivisionError as n:\n        print(\"n is\", n)\n        return n\n</code></pre> <pre><code>&gt;&gt;&gt; e = return_an_error()\nn is division by zero\n&gt;&gt;&gt; e\nZeroDivisionError('division by zero')\n&gt;&gt;&gt; str(e)\n'division by zero'\n&gt;&gt;&gt; repr(e)\n\"ZeroDivisionError('division by zero')\"\n&gt;&gt;&gt; isinstance(e, Exception)\nTrue\n&gt;&gt;&gt; isinstance(e, ZeroDivisionError)\nTrue\n</code></pre>"},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part2/#3_17","title":"3","text":"<p>\u6709\u4eba\u63d0\u95ee19\u5e74\u79cb\u5b63\u671f\u672b\u8003\u8bd5\u7684\u8fd9\u4e00\u9898</p> <p>Quote</p> <p>Mull It Over</p> <p>Uh oh! Someone evaluated <code>(define * +)</code> . Now <code>(* 3 2)</code> evaluates to 5 instead of 6! Let's fix it.</p> <p>Important: Answer all questions on this page without calling the built-in multiplication procedure.</p> <p>(a) Implement <code>mulxy</code> , which multiplies integers <code>x</code> and <code>y</code> . Hint: <code>(- 2)</code> evaluates to -2.</p> <pre><code>;; multiply x by y (without using the * operator).\n;; (mulxy 3 4) -&gt; 12           ; 12 = 3 + 3 + 3 + 3\n;; (mulxy (- 3) (- 4)) -&gt; 12   ; 12 = - ( -3 + -3 + -3 + -3 )\n(define (mulxy x y)\n  (cond ((&lt; y 0) (- ______ ))\n        ((= y 0) 0)\n        (else ( ______ x (mulxy x ______)))))\n</code></pre> <p>(b) Implement <code>mul-expr</code> , which takes an expression <code>e</code> that contains only calls to <code>*</code> and numbers. It returns the normal value of <code>e</code> under a Scheme interpreter with an unmodified <code>*</code> operator that multiplies.</p> <p>You may call the <code>mul</code> procedure defined below.</p> <p>Important: Fill each blank with only a single symbol.</p> <pre><code>;; Multiply together a list of numbers.\n;; (mul '(2 3 4 2)) -&gt; 48\n(define (mul s) (reduce mulxy s))\n\n;; Evaluate an expression with only calls to * and numbers.\n;; (mul-expr '(* (* 1 2) (* 3 (* 4 1 1) 2))) -&gt; 48\n(define (mul-expr e)\n  (if (number? e) e\n      (______ (______ ______ (______ e)))))\n</code></pre> <p>(c) Implement <code>*-to-mul</code> , which takes any expression <code>e</code> . It returns an expression like <code>e</code> , but with all calls to <code>*</code> replaced with calls to <code>mul</code> . Note that <code>*</code> takes an arbitrary number of arguments, while <code>mul</code> always takes exactly one argument: a list of numbers. You should account for this difference.</p> <pre><code>;; Convert all calls to * to calls to mul in expression e.\n;; (eval (*-to-mul '(* 1 (+ 2 3) (+ 4 5 (* 6 1))))) -&gt; 75\n(define (*-to-mul e)\n  (if (not (list? e)) e\n      (let ((op ______ ) (rest ______))\n        (if (equal? op '*)\n            (list ______)\n            (cons op rest)))))\n</code></pre> <p>\u6211\u5148\u5c1d\u8bd5\u81ea\u5df1\u505a\u4e86\u4e00\u4e0b\uff0c</p> <p>\u7b2c\u4e00\u9898\u5f88\u7b80\u5355</p> <pre><code>(define (mulxy x y)\n  (cond ((&lt; y 0) (- (mulxy x (- y))))\n        ((= y 0) 0)\n        (else (+ x (mulxy x (- y 1))))))\n</code></pre> <p>\u7b2c\u4e8c\u9898\u7531\u4e8e\u6bcf\u4e00\u4e2a\u7a7a\u53ea\u80fd\u586b\u4e00\u4e2a symbol\uff0c\u60f3\u4e86\u5f88\u4e45\u6ca1\u60f3\u5230\u53ef\u884c\u7684\u586b\u6cd5\uff0c\u611f\u89c9\u5e94\u8be5\u662f\u9700\u8981\u4f7f\u7528\u4e00\u4e9b\u7279\u6b8a\u7684\u51fd\u6570\u3002</p> <p>John \u4f7f\u7528\u4e86scheme\u5185\u7f6e\u7684 <code>map</code> \u51fd\u6570</p> <p></p> <p>scheme \u4e2d\u7684 <code>map</code> \u548c python \u4e2d\u7684 <code>map</code> \u6548\u679c\u5dee\u4e0d\u591a\uff0c\u90fd\u662f\u4f20\u5165\u4e00\u4e2a\u51fd\u6570\u548c\u4e00\u4e2a\u94fe\u8868/\u5e8f\u5217\uff0c\u7136\u540e\u5c06\u51fd\u6570\u5e94\u7528\u5230\u6bcf\u4e00\u4e2a\u5143\u7d20\u4e0a\uff0c</p> <p>\u56e0\u6b64</p> <pre><code>(define (mul-expr e)\n  (if (number? e) e\n      (mul (map mul-expr (cdr e)))))\n</code></pre> <p>\u7b2c\u4e09\u9898\u4e5f\u6bd4\u8f83\u96be\uff0c\u5148\u662f\u6839\u636e\u6211\u7684\u7406\u89e3\u5199\u51fa\u4e86</p> <pre><code>(define (*-to-mul e)\n  (if (not (list? e)) e\n      (let ((op (car e)) (rest (map *-to-mul (cdr e))))\n        (if (equal? op '*)\n            (list ______)\n            (cons op rest)))))\n</code></pre> <p><code>(list ______)</code> \u8fd9\u4e00\u884c\uff0c\u4e00\u5f00\u59cb\u5c1d\u8bd5 <code>(list mul rest)</code> \uff0c\u4f46\u662f\u6d4b\u8bd5\u65f6\u663e\u793a</p> <pre><code>scm&gt; (eval (*-to-mul '(* 1 (+ 2 3) (+ 4 5 (* 6 1)))))\nTraceback (most recent call last):\n  0     (eval (*-to-mul (quote (* 1 (+ 2 3) (+ 4 5 (* 6 1))))))\n  1     ((lambda (s) (reduce mulxy s)) (1 (+ 2 3) (+ 4 5 ((lambda (s) (reduce mulxy s)) (6 1)))))\n  2     (lambda (s) (reduce mulxy s))\nError: malformed list: (lambda (s) (reduce mulxy s))\nscm&gt; (*-to-mul '(* 1 (+ 2 3) (+ 4 5 (* 6 1))))\n((lambda (s) (reduce mulxy s)) (1 (+ 2 3) (+ 4 5 ((lambda (s) (reduce mulxy s)) (6 1)))))\n</code></pre> <p>\u7136\u540e\u6211\u610f\u8bc6\u5230\uff0c\u5e94\u8be5\u628a <code>mul</code> \u6539\u6210 <code>'mul</code> \uff0c\u56e0\u4e3a\u9700\u8981\u8fd4\u56de\u7684\u662f\u4e00\u4e2a\u8868\u8fbe\u5f0f\uff0c\u8868\u8fbe\u5f0f\u4e2d\u7684\u7b26\u53f7\u548c\u51fd\u6570\u5e94\u8be5\u662f\u5f15\u7528\u7684\u5f62\u5f0f\uff0c</p> <p>\u4fee\u6539\u6210 <code>(list 'mul rest)</code> \u4e4b\u540e\uff0c\u6d4b\u8bd5\u663e\u793a</p> <pre><code>scm&gt; (eval (*-to-mul '(* 1 (+ 2 3) (+ 4 5 (* 6 1)))))\nTraceback (most recent call last):\n  0     (eval (*-to-mul (quote (* 1 (+ 2 3) (+ 4 5 (* 6 1))))))\n  1     (mul (1 (+ 2 3) (+ 4 5 (mul (6 1)))))\n  2     (1 (+ 2 3) (+ 4 5 (mul (6 1))))\nError: int is not callable: 1\n</code></pre> <p>\u672c\u6765\u770b\u5230\u4e0a\u9762\u7684</p> <pre><code>;; (mul '(2 3 4 2)) -&gt; 48\n</code></pre> <p>\u5c06\u4ee3\u7801\u5c1d\u8bd5\u6539\u6210\u4e86</p> <pre><code>(list 'mul ('quote rest))\n</code></pre> <p>\u4f46\u662f\u6d4b\u8bd5\u65f6\u663e\u793a</p> <pre><code>Traceback (most recent call last):\n  ...   ...\n  4     (list (quote mul) ((quote quote) rest))\n  5     ((quote quote) rest)\nError: str is not callable: quote\n</code></pre> <p>\u6700\u540e\u60f3\u4e0d\u51fa\u7b54\u6848\u3002</p> <p></p> <p>John \u5229\u7528\u4e00\u4e2a\u4f8b\u5b50\u6765\u8fdb\u884c\u8bb2\u89e3\uff0c</p> <pre><code>(*-to-mul '(* 1 2 (* 3 4)))\n</code></pre> <p>\u5e94\u8be5\u5f97\u5230\u7684\u662f(\u611f\u89c9\u6211\u4e4b\u524d\u505a\u7684\u65f6\u5019\u662f\u6ca1\u60f3\u5230\u8fd9\u4e2a\u5173\u952e\u7684\u5730\u65b9)</p> <pre><code>(mul (list 1 2 (mul (list 3 4))))\n</code></pre> <p>Hany \u671f\u95f4\u95ee\u9053\u4e3a\u4ec0\u4e48\u4e0d\u662f <code>(mul (1 2 (mul (3 4))))</code></p> <p>John \u8bf4 \u56e0\u4e3a <code>1</code> \u4e0d\u662f\u53ef\u8c03\u7528\u7684\uff0c\u5982\u679c\u8fd9\u6837\u5199\u5c31\u4f1a\u8c03\u7528 <code>1</code></p> <p>\u6240\u4ee5\u6700\u540e\u6b63\u786e\u7684\u7b54\u6848\u662f(John \u7684\u4ee3\u7801\u6709\u4e00\u4e9b\u95ee\u9898\uff0c\u9012\u5f52\u5e94\u8be5\u53d1\u751f\u5728\u5b9a\u4e49 <code>rest</code> \u7684\u65f6\u5019(\u5426\u5219\u5982\u679c\u7b2c\u4e00\u4e2a\u662f <code>+</code> \u5c31\u4f1a\u4e0d\u53d1\u751f\u66ff\u6362))</p> <pre><code>(define (*-to-mul e)\n  (if (not (list? e)) e\n      (let ((op (car e)) (rest (map *-to-mul (cdr e))))\n        (if (equal? op '*)\n            (list 'mul (cons 'list rest))\n            (cons op rest)))))\n</code></pre> <p>(\u8fd9\u9898\u662f\u771f\u7684\u96be\u60f3\ud83d\ude31)</p>"},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part2/#4_10","title":"4","text":"<p>Quote</p> <p>John:</p> <p>You can think of a list as built from a bunch of <code>cons</code> . <code>cons</code> is like the most fundamental operation, and what it does is it just adds one element to the beginning of an existing list.</p> <p>John:</p> <p>\u4f60\u53ef\u4ee5\u5c06\u5217\u8868\u770b\u4f5c\u662f\u7531\u4e00\u5806 <code>cons</code> \u6784\u5efa\u800c\u6210\u7684\u3002 <code>cons</code> \u5c31\u50cf\u662f\u6700\u57fa\u672c\u7684\u64cd\u4f5c\uff0c\u5b83\u7684\u4f5c\u7528\u662f\u5728\u73b0\u6709\u5217\u8868\u7684\u5f00\u5934\u6dfb\u52a0\u4e00\u4e2a\u5143\u7d20\u3002</p> <p>\u6211\u89c9\u5f97 John \u8fd9\u4e2a\u5bf9 <code>cons</code> \u51fd\u6570\u7684\u89e3\u91ca\u5f88\u597d\uff0c\u628a <code>cons</code> \u7406\u89e3\u6210 \u4e00\u4e2a\u5728\u73b0\u6709\u5217\u8868\u5f00\u5934\u63d2\u5165\u65b0\u5143\u7d20\u7684\u51fd\u6570 \u5c31\u66f4\u65b9\u4fbf</p>"},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part2/#5_7","title":"5","text":"<p>John \u53c8\u63d0\u5230\u4e86scheme\u4e2d\u7684 <code>append</code> \u51fd\u6570\uff0c\u80fd\u5c06\u4e24\u4e2a\u94fe\u8868\u5408\u5e76\u5230\u4e00\u8d77</p>"},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part2/#lecture-29-calculater","title":"Lecture 29 Calculater","text":""},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part2/#1_27","title":"1","text":"<p>John \u8bb2\u89e3 \u89e3\u6790 parse \u4e00\u4e2a\u8bed\u8a00\u7684\u8bed\u53e5\u7684\u8fc7\u7a0b</p> <p></p>"},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part2/#2_23","title":"2","text":"<p>scheme \u4e2d\u7684\u51cf\u6cd5\u548c\u9664\u6cd5\u7a0d\u5fae\u7279\u6b8a\u4e00\u4e9b\uff0c\u5982\u679c\u53ea\u6709\u4e00\u4e2a\u53c2\u6570\uff0c\u5c31\u76f4\u63a5\u53d6\u76f8\u53cd\u6570\u6216\u8005\u5012\u6570\uff0c\u5982\u679c\u6709\u591a\u4e2a\u53c2\u6570\uff0c\u5c31\u662f\u62ff\u7b2c\u4e00\u4e2a\u53bb\u51cf\u6216\u9664\u4e4b\u540e\u5269\u4f59\u7684\u6570</p>"},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part2/#3_18","title":"3","text":"<p>\u7528 python \u5b9e\u73b0 scheme \u4e2d(\u9002\u7528\u4e8e\u6570\u5b66\u8fd0\u7b97\u8868\u8fbe\u5f0f\u7684) <code>eval</code> \u51fd\u6570</p> <p></p>"},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part2/#4_11","title":"4","text":"<p>\u4ea4\u4e92\u5f0f\u89e3\u91ca\u5668 interactive interpreter \u7684\u5de5\u4f5c\u6d41\u7a0b *\u8bfb\u53d6-\u6c42\u503c-\u8f93\u51fa\u5faa\u73af Read-Eval-Print Loop (REPL)* </p> <ul> <li>\u4ece\u7528\u6237\u7684\u6587\u672c\u8f93\u5165\u4e2d\u8bfb\u53d6</li> <li>\u5c06\u6587\u672c \u89e3\u6790 parse \u4e3a\u8868\u8fbe\u5f0f</li> <li>\u8ba1\u7b97\u8868\u8fbe\u5f0f</li> <li>\u5982\u679c\u53d1\u751f\u9519\u8bef\uff0c\u62a5\u544a\u9519\u8bef</li> <li>\u8f93\u51fa\u8868\u8fbe\u5f0f\u8ba1\u7b97\u7ed3\u679c\u7684\u503c\uff0c\u5e76\u91cd\u590d\u4e0a\u8ff0\u8fc7\u7a0b</li> </ul>"},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part2/#5_8","title":"5","text":"<p>John \u8bf4\u5230 \u4ea4\u4e92\u5f0f\u89e3\u91ca\u5668 interactive interpreter \u4e0d\u80fd\u56e0\u4e3a\u7a0b\u5e8f\u7684\u9519\u8bef\u5c31\u4e2d\u65ad\u6574\u4e2a\u7a0b\u5e8f\uff0c\u6240\u4ee5\u9700\u8981\u8fdb\u884c exception \u7684\u5904\u7406</p> <p>Quote</p> <p>John:</p> <p>...So, an interactive interpreter should print information about each error. So that when those errors occur, the programmer who generated them can figure out what to change in order to get rid of the error. And a well-designed interactive interpreter should never really halt; it should stop evaluating the current expression and print out the arrow, but then give the programmer a chance to revise what they've done. So, the user should have the opportunity to try again in the current environment, instead of having the whole program crash. And that's exactly what happens here.</p> <p>So, as you can see, I'm able to continue entering expressions. The only way I can quit out of this game calculator is by pressing in my system control \"d,\" which says this is the end of the file. Then it will say, \"Calculation is complete,\" and finally, the program will end.</p> <p>Now, how do we control for all this? Well, we put both the parsing and evaluation within a <code>try</code> statement,</p> <pre><code>@main\ndef read_eval_print_loop():\n    \"\"\"Run a read-eval-print loop for Calculator.\"\"\"\n    while True:\n        try:\n            src = buffer_input()\n            while src.more_on_line:\n                expression = scheme_read(src)\n                print(calc_eval(expression))\n        except (SyntaxError, TypeError, ValueError, ZeroDivisionError) as err:\n            print(type(err).__name__ + ':', err)\n        except (KeyboardInterrupt, EOFError):  # &lt;Control&gt;-D, etc.\n            print('Calculation completed.')\n            return\n</code></pre> <p>that knows to look for syntax, type, value, and zero division errors \u2013 all the things that can occur, and just prints those errors out. And then, since this is all embedded within the suite of a <code>while</code> statement, we'll go back and try again. So, the only way to stop is to reach the end of a file or a keyboard interrupt, at which point it will print \"Calculation is complete.\"</p> <p>John:</p> <p>\u56e0\u6b64\uff0c\u4ea4\u4e92\u5f0f\u89e3\u91ca\u5668\u5e94\u8be5\u6253\u5370\u6709\u5173\u6bcf\u4e2a\u9519\u8bef\u7684\u4fe1\u606f\uff0c\u4ee5\u4fbf\u5f53\u8fd9\u4e9b\u9519\u8bef\u53d1\u751f\u65f6\uff0c\u751f\u6210\u5b83\u4eec\u7684\u7a0b\u5e8f\u5458\u80fd\u591f\u5f04\u6e05\u695a\u8981\u66f4\u6539\u4ec0\u4e48\u4ee5\u6d88\u9664\u9519\u8bef\u3002\u4e00\u4e2a\u8bbe\u8ba1\u826f\u597d\u7684\u4ea4\u4e92\u5f0f\u89e3\u91ca\u5668\u5b9e\u9645\u4e0a\u4e0d\u5e94\u8be5\u505c\u6b62\uff1b\u5b83\u5e94\u8be5\u505c\u6b62\u8bc4\u4f30\u5f53\u524d\u8868\u8fbe\u5f0f\u5e76\u6253\u5370\u51fa\u7bad\u5934\uff0c\u7136\u540e\u7ed9\u7a0b\u5e8f\u5458\u4e00\u4e2a\u673a\u4f1a\u6765\u4fee\u6539\u4ed6\u4eec\u6240\u505a\u7684\u4e8b\u60c5\u3002\u56e0\u6b64\uff0c\u7528\u6237\u5e94\u8be5\u6709\u673a\u4f1a\u5728\u5f53\u524d\u73af\u5883\u4e2d\u518d\u6b21\u5c1d\u8bd5\uff0c\u800c\u4e0d\u662f\u4f7f\u6574\u4e2a\u7a0b\u5e8f\u5d29\u6e83\u3002\u8fd9\u6b63\u662f\u8fd9\u91cc\u53d1\u751f\u7684\u60c5\u51b5\u3002</p> <p>\u6240\u4ee5\uff0c\u6b63\u5982\u4f60\u6240\u89c1\uff0c\u6211\u80fd\u591f\u7ee7\u7eed\u8f93\u5165\u8868\u8fbe\u5f0f\u3002\u9000\u51fa\u8fd9\u4e2a\u6e38\u620f\u8ba1\u7b97\u5668\u7684\u552f\u4e00\u65b9\u6cd5\u662f\u6309\u4e0b\u6211\u7684\u7cfb\u7edf\u63a7\u5236 \u201cd\u201d\uff0c\u8fd9\u8868\u793a\u8fd9\u662f\u6587\u4ef6\u7684\u7ed3\u5c3e\u3002\u7136\u540e\u5b83\u5c06\u663e\u793a \u201cCalculation is complete\u201d\uff0c\u6700\u540e\u7a0b\u5e8f\u5c06\u7ed3\u675f\u3002</p> <p>\u73b0\u5728\uff0c\u6211\u4eec\u5982\u4f55\u63a7\u5236\u6240\u6709\u8fd9\u4e9b\u5462\uff1f\u55ef\uff0c\u6211\u4eec\u5c06\u89e3\u6790\u548c\u8bc4\u4f30\u90fd\u653e\u5728\u4e00\u4e2a <code>try</code> \u8bed\u53e5\u4e2d\uff0c </p> <pre><code>@main\ndef read_eval_print_loop():\n    \"\"\"Run a read-eval-print loop for Calculator.\"\"\"\n    while True:\n        try:\n            src = buffer_input()\n            while src.more_on_line:\n                expression = scheme_read(src)\n                print(calc_eval(expression))\n        except (SyntaxError, TypeError, ValueError, ZeroDivisionError) as err:\n            print(type(err).__name__ + ':', err)\n        except (KeyboardInterrupt, EOFError):  # &lt;Control&gt;-D, etc.\n            print('Calculation completed.')\n            return\n</code></pre> <p>\u8be5\u8bed\u53e5\u77e5\u9053\u5982\u4f55\u67e5\u627e\u8bed\u6cd5\u3001\u7c7b\u578b\u3001\u503c\u548c\u96f6\u9664\u9519\u8bef\uff0c\u5373\u6240\u6709\u53ef\u80fd\u53d1\u751f\u7684\u4e8b\u60c5\uff0c\u5e76\u53ea\u662f\u6253\u5370\u51fa\u8fd9\u4e9b\u9519\u8bef\u3002\u7136\u540e\uff0c\u7531\u4e8e\u6240\u6709\u8fd9\u4e9b\u90fd\u5d4c\u5957\u5728\u4e00\u4e2a <code>while</code> \u8bed\u53e5\u7684\u5957\u4ef6\u4e2d\uff0c\u6211\u4eec\u5c06\u56de\u5230\u5e76\u5c1d\u8bd5\u518d\u6b21\u6267\u884c\u3002\u56e0\u6b64\uff0c\u552f\u4e00\u505c\u6b62\u7684\u65b9\u5f0f\u662f\u5230\u8fbe\u6587\u4ef6\u7684\u672b\u5c3e\u6216\u952e\u76d8\u4e2d\u65ad\uff0c\u6b64\u65f6\u5b83\u5c06\u6253\u5370 \u201cCalculation is complete\u201d\u3002</p>"},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part2/#lecture-29-qa","title":"Lecture 29 Q&amp;A","text":""},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part2/#1_28","title":"1","text":"<p>\u6709\u4eba\u63d0\u95ee\u9053(python)\u4ee3\u7801\u4e2d\u7684 <code>@main</code> \u6709\u4ec0\u4e48\u4f5c\u7528\uff0c</p> <p>Quote</p> <p>John:</p> <p>...Yeah, so this main decorator is something that's specific to 61a. It just says if you run the file, this is the function that should be called. So if I run the whole <code>scalc.py</code> file, it's not going to call as scheme list instead, it's going to call <code>read_eval_print_loop</code> .</p> <p>John:</p> <p>...\u662f\u7684\uff0c\u6240\u4ee5\u8fd9\u4e2a\u4e3b\u88c5\u9970\u5668\u662f61a\u7279\u6709\u7684\u4e1c\u897f\u3002\u5b83\u53ea\u662f\u8bf4\uff0c\u5982\u679c\u4f60\u8fd0\u884c\u6587\u4ef6\uff0c\u8fd9\u5c31\u662f\u5e94\u8be5\u8c03\u7528\u7684\u51fd\u6570\u3002\u56e0\u6b64\uff0c\u5982\u679c\u6211\u8fd0\u884c\u6574\u4e2a <code>scalc.py</code> \u6587\u4ef6\uff0c\u5b83\u4e0d\u4f1a\u8c03\u7528scheme-list\uff0c\u800c\u662f\u8c03\u7528 <code>read_eval_print_loop</code> \u3002</p> <p>\u8fd9\u4e2a\u548c</p> <pre><code>if __name__ = '__main__':\n    ...\n</code></pre> <p>\u6709\u70b9\u50cf\uff0c\u4e0d\u8fc7\u5c01\u88c5\u6210\u51fd\u6570\u518d\u52a0\u4e0a <code>@main</code> \u8fd8\u6709\u4e00\u70b9\u597d\u5904\u5c31\u662f\u8fd8\u53ef\u4ee5\u518d\u6b21\u8fdb\u884c\u8c03\u7528</p>"},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part2/#hw-07","title":"HW 07","text":""},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part2/#1_29","title":"1","text":"<p>\u5728 Q1 \u7684\u9898\u76ee\u8bf4\u660e\u4e2d\u63d0\u5230\u4e86 <code>filter</code> \u51fd\u6570\uff0c\u8ddf\u8fd9\u9898\u8981\u5b9e\u73b0\u7684 <code>filter-lst</code> \u7528\u6cd5\u4e00\u6837(\u7528\u4e8e\u94fe\u8868\u4e0a)\uff0c\u4e5f\u662f\u9700\u8981\u4e00\u4e2a \u8c13\u8bcd predicate (\u4f20\u5165\u4e00\u4e2a\u53c2\u6570\u7136\u540e\u8fd4\u56de\u771f\u5047\u7684\u51fd\u6570) \u548c\u4e00\u4e2a\u94fe\u8868\uff0c\u7136\u540e\u5c31\u4f1a\u7b5b\u9009\u51fa\u4e3a\u771f\u7684\u5143\u7d20</p> <pre><code>scm&gt; (define (x y) (&gt; y 1))\nx\nscm&gt; (filter x '(1 2 3 4 5))\n(2 3 4 5)\n</code></pre> <p>\u8fd9\u9898\u8981\u6c42\u5b9e\u73b0\u7684\u51fd\u6570\u53eb\u505a <code>filter-lst</code> \uff0c\u6240\u4ee5\u6709\u53ef\u80fd <code>filter</code> \u51fd\u6570\u8fd8\u53ef\u4ee5\u4f5c\u7528\u4e8e\u5176\u4ed6\u7684\u6570\u636e\u7c7b\u578b</p> code <pre><code>(define (filter-lst fn lst)\n  'YOUR-CODE-HERE\n  (if (eq? lst nil)\n      nil\n      (if (fn (car lst))\n          (cons (car lst) (filter-lst fn (cdr lst)))\n          (filter-lst fn (cdr lst))))\n)\n</code></pre>"},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part2/#2_24","title":"2","text":"<p>Q4 \u8fd9\u9898\u6709\u70b9\u96be(\u4e3b\u8981\u662f\u4e00\u76f4\u60f3\u7528python\u4e2d\u7684 <code>in</code> \u800cscheme\u4e2d\u7528\u4e0d\u4e86\ud83d\ude05)\uff0c</p> <p>\u6700\u540e\u5199\u51fa\u6765\u4e3b\u8981\u662f\u9898\u76ee\u4e2d\u63d0\u793a\u53ef\u4ee5\u4f7f\u7528\u7b2c\u4e00\u9898\u4e2d\u5b9e\u73b0\u7684 <code>filter-lst</code> \u51fd\u6570\uff0c\u7136\u540e\u6211\u53c8\u731c\u6d4b\u8fd8\u662f\u9700\u8981\u4f7f\u7528\u9012\u5f52\u6765\u5b9e\u73b0\uff0c\u90a3\u4e48\u4f20\u5165 <code>filter-lst</code> \u51fd\u6570\u7684\u94fe\u8868\u5e94\u8be5\u5c31\u662f <code>(cdr lst)</code> \uff0c</p> <p>\u8fdb\u800c\uff0c <code>filter-lst</code> \u7b5b\u51fa\u6765\u7684\u94fe\u8868\u5e94\u8be5\u8fd8\u8981\u9012\u5f52\u5730\u653e\u5165 <code>no-repeats</code> \u4e2d\uff0c\u6700\u540e\u518d\u52a0\u4e0a base case \u5c31\u6210\u529f\u5b9e\u73b0\u4e86</p> code <pre><code>(define (no-repeats lst)\n  'YOUR-CODE-HERE\n  (if (equal? lst nil)\n      nil\n      (cons (car lst)\n            (no-repeats (filter-lst (lambda (x) (not (= x (car lst))))\n                                    (cdr lst)))))\n)\n</code></pre>"},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part2/#lab-11","title":"Lab 11","text":""},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part2/#1_30","title":"1","text":"<p>Q3\u8fd9\u9898\u9700\u8981\u628a\u9898\u76ee\u610f\u601d\u7406\u89e3\u6e05\u695a\uff0c <code>CallExpr</code> \u5b9e\u4f8b\u4e2d\u7684 <code>operator</code> \u548c <code>operands</code> \u76f8\u5f53\u4e8e\u53d8\u91cf\u540d\uff0c\u9700\u8981\u8c03\u7528\u5b83\u4eec\u7684 <code>eval</code> \u65b9\u6cd5\u5e76\u4f20\u5165\u73af\u5883\u6765\u83b7\u53d6\u5bf9\u5e94\u7684\u503c\u6216\u8005\u5b9e\u4f8b\uff0c</p> <p>\u6700\u540e\uff0c\u64cd\u4f5c\u7b26 <code>operator</code> \u9700\u8981\u8c03\u7528 <code>apply</code> \u65b9\u6cd5\u6765\u8fdb\u884c\u4f7f\u7528</p> <p>Hint: Since the operator and operands are all instances of <code>Expr</code>, you can evaluate them by calling their <code>eval</code> methods. Also, you can apply a function (an instance of <code>PrimitiveFunction</code> or <code>LambdaFunction</code>) by calling its <code>apply</code> method, which takes in a list of arguments (<code>Value</code> instances).</p> code <pre><code>class CallExpr(Expr):\n    def eval(self, env):\n        return self.operator.eval(env).apply([operand.eval(env) for operand in self.operands])\n</code></pre>"},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part2/#2_25","title":"2","text":"<p>Q4\u4e2d\uff0c\u9700\u8981\u66f4\u65b0\u4ee5\u5b57\u5178\u5f62\u5f0f\u5b58\u50a8\u7684\u73af\u5883\uff0c\u7ed3\u5408Q3\u7684\u51fd\u6570\u8bf4\u660e\uff0c\u53ef\u4ee5\u77e5\u9053\u53ef\u4ee5\u4f7f\u7528\u5b57\u5178\u7684 <code>update</code> \u65b9\u6cd5\uff0c</p> <p>\u5728\u7ec8\u7aef\u4e2d\u8bd5\u4e86\u4e00\u4e0b</p> <pre><code>&gt;&gt;&gt; dict\n&lt;class 'dict'&gt;\n&gt;&gt;&gt; dict.update\n&lt;method 'update' of 'dict' objects&gt;\n&gt;&gt;&gt; dict.extend\nTraceback (most recent call last):\nFile \"&lt;stdin&gt;\", line 1, in &lt;module&gt;\nAttributeError: type object 'dict' has no attribute 'extend'\n&gt;&gt;&gt; dict.append\nTraceback (most recent call last):\nFile \"&lt;stdin&gt;\", line 1, in &lt;module&gt;\nAttributeError: type object 'dict' has no attribute 'append'\n</code></pre> <p><code>dict.update()</code> \u6ca1\u6709\u8fd4\u56de\u503c(\u548c\u5217\u8868\u7684 <code>append</code> \u548c <code>extend</code> \u4e00\u6837)\uff0c\u6240\u4ee5\u4e00\u5f00\u59cb\u6211\u7528</p> <pre><code>new_env = self.parent.copy().update(dict(zip(self.parameters, arguments)))\n</code></pre> <p>\u7136\u540e\u62a5\u4e86 <code>NoneType</code> \u7684\u9519\u8bef\u3002</p> code <pre><code>class LambdaFunction(Value):\n    def apply(self, arguments):\n        if len(self.parameters) != len(arguments):\n            raise TypeError(\"Oof! Cannot apply number {} to arguments {}\".format(\n                comma_separated(self.parameters), comma_separated(arguments)))\n        \"*** YOUR CODE HERE ***\"\n        new_env = self.parent.copy()\n        new_env.update(dict(zip(self.parameters, arguments)))\n        return self.body.eval(new_env)\n</code></pre>"},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part2/#3_19","title":"3","text":"<p>Q5\u6ca1\u4ec0\u4e48\u660e\u786e\u7684\u8981\u6c42\uff0c\u6211\u76f4\u63a5\u5728</p> <pre><code>except (SyntaxError, NameError, TypeError, OverflowError, ZeroDivisionError) as err:\n</code></pre> <p>\u8fd9\u4e00\u884c\u6dfb\u52a0\u4e86 <code>OverflowError</code> \u548c <code>ZeroDivisionError</code></p>"},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part2/#project-scheme","title":"Project Scheme","text":""},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part2/#1_31","title":"1","text":"<p>Problem 1\u7684\u524d\u9762\u67d0\u9898\u6211\u5361\u4e86\u4e00\u5c0f\u4f1a\ud83d\ude05</p> <pre><code>&gt;&gt;&gt; from scheme_reader import *\n&gt;&gt;&gt; tokens = tokenize_lines([\"(+ 1 \", \"(23 4)) (\"])\n&gt;&gt;&gt; src = Buffer(tokens)\n&gt;&gt;&gt; src.current()\n? ...\n-- OK! --\n\n&gt;&gt;&gt; src.pop_first()\n? ...\n-- OK! --\n\n&gt;&gt;&gt; src.current()\n? ...\n-- OK! --\n\n&gt;&gt;&gt; src.pop_first()\n? ...\n-- OK! --\n\n&gt;&gt;&gt; src.pop_first()\n? ...\n-- OK! --\n\n&gt;&gt;&gt; scheme_read(src)  # Removes the next complete expression in src and returns it as a Pair\n? \n</code></pre> <p>\u6700\u540e\u662f\u770b\u4e86 <code>scheme_reader.py</code> \u4e2d <code>scheme_read</code> \u7684\u51fd\u6570\u8bf4\u660e\u4e2d</p> <pre><code>def scheme_read(src):\n    \"\"\"Read the next expression from SRC, a Buffer of tokens.\n\n    ...\n    &gt;&gt;&gt; scheme_read(Buffer(tokenize_lines(['(+ 1 2)'])))\n    Pair('+', Pair(1, Pair(2, nil)))\n    \"\"\"\n</code></pre> <p>\u624d\u660e\u767d <code>returns it as a Pair</code> \u5177\u4f53\u8fd4\u56de\u662f\u4ec0\u4e48\u6837\u5b50\u3002</p> <p>\u7136\u540e\u770b\u5230\u4e86\u9898\u76ee\u8bf4\u660e\u4e2d\u7684</p> <p><code>scheme_read</code>:</p> <ul> <li>If the current token is <code>(</code>, the expression is a pair or list. Call <code>read_tail</code> on the rest of <code>src</code> and return its result.</li> </ul> <p><code>read_tail</code>:</p> <ul> <li>If the token is <code>)</code>, then we've reached the end of the list or pair. Remove this token from the buffer and return the <code>nil</code> object.</li> </ul> <p>\u6240\u4ee5\u660e\u767d\u53ea\u4f1a\u8bfb\u53d6\u5230\u7b2c\u4e00\u4e2a\u53f3\u62ec\u53f7 <code>)</code> \uff0c\u56e0\u6b64\u6700\u540e\u6b63\u786e\u7b54\u6848\u662f</p> <pre><code>Pair(23, Pair(4, nil))\n</code></pre> <p>\u4f46\u662f\u6709\u4e2a\u5730\u65b9\u611f\u89c9\u6709\u70b9\u5c0f\u79bb\u8c31\ud83d\ude05\uff0c\u5c11\u4e86\u4e2a\u7a7a\u683c\u5c45\u7136\u663e\u793a\u9519\u8bef</p> <pre><code>? Pair(23, Pair(4,nil))\n-- Not quite. Try again! --\n\n? Pair(23, Pair(4, nil))\n-- OK! --\n</code></pre> <p>\u5728\u5b9e\u73b0 <code>read_tail</code> \u65f6\uff0c\u610f\u8bc6\u5230\u9898\u76ee\u8bf4\u660e\u4e2d\u7684\u8fd9\u53e5\u8bdd</p> <p>Both functions mutate the buffer, removing the tokens that have already been processed.</p> <p>\u5c31\u662f\u8bf4\uff0c(\u6bd4\u5982\u88ab <code>scheme_read</code> \u8c03\u7528\u7684) <code>read_tail</code> \u4e2d\u9700\u8981\u7a81\u53d8 <code>src</code> (\u79fb\u9664\u5df2\u7ecf\u4f7f\u7528\u8fc7\u7684\u4ee4\u724c)\uff0c\u8fd9\u6837\u5728 <code>read_tail</code> \u4e2d\u4f7f\u7528\u8fc7\u7684 \u4ee4\u724c tokens \uff0c\u5c31\u4e0d\u4f1a\u88ab <code>scheme_read</code> \u6216\u8005\u4e0a\u4e00\u5c42 <code>read_tail</code> \u518d\u6b21\u4f7f\u7528</p> <p>\u6ca1\u60f3\u5230Problem 1\u5c31\u5199\u4e86\u534a\u5c0f\u65f6(\u7b97\u4e0a\u89e3\u9501\u82b1\u4e86\u4e00\u5c0f\u65f6\ud83d\ude07)\u3002</p> <p>\u8fd9\u9898\u4e3b\u8981\u662f\u9700\u8981\u5b8c\u5168\u7406\u89e3\u9898\u76ee\u7684\u610f\u601d\uff0c\u5982\u679c\u6709bug\u5c31\u56de\u53bb\u91cd\u65b0\u7406\u89e3\u9898\u76ee(\u4ed4\u7ec6\u9605\u8bfb\u9898\u76ee\u7684\u8bf4\u660e)\u5c31\u597d\u4e86\u3002</p> <p>\u4e00\u5f00\u59cb\u6211\u5199\u7684\u662f</p> <pre><code>def scheme_read(src):\n    if src.current() is None:\n        raise EOFError\n    val = src.pop_first() # Get and remove the first token\n    if val == 'nil':\n        \"*** YOUR CODE HERE ***\"\n        return nil\n    elif val == '(':\n        \"*** YOUR CODE HERE ***\"\n        return read_tail(src)\n    ...\ndef read_tail(src):\n    try:\n        if src.current() is None:\n            raise SyntaxError('unexpected end of file')\n        elif src.current() == ')':\n            \"*** YOUR CODE HERE ***\"\n            src.pop_first()\n            return nil\n        else:\n            \"*** YOUR CODE HERE ***\"\n            return Pair(src.pop_first(), read_tail(src))\n    except EOFError:\n        raise SyntaxError('unexpected end of file')\n</code></pre> <p>\u7136\u540e\u62a5\u4e86\u8fd9\u6837\u7684\u9519\u8bef</p> <pre><code>&gt;&gt;&gt; read_tail(Buffer(tokenize_lines(['(2)'])))\nPair('(', Pair(2, nil))\n\n# Error: expected\n#     SyntaxError\n# but got\n#     Pair('(', Pair(2, nil))\n</code></pre> <p>\u7136\u540e\u770b\u5230\u4e86\u9898\u76ee\u4e2d\u7684</p> <p><code>read_tail</code>:</p> <ul> <li> <p>If none of the above cases apply, the next token is the operator in a combination, e.g. src contains <code>+ 2 3)</code>. To parse this:</p> <ol> <li> <p><code>scheme_read</code> the next complete expression in the buffer.</p> <p>...</p> </li> </ol> </li> </ul> <p>\u4e8e\u662f\u660e\u767d\u5982\u679c\u5728 <code>read_tail</code> \u4e2d\u8bfb\u5230\u5de6\u62ec\u53f7 <code>(</code> \uff0c\u5c31\u610f\u5473\u7740\u8bfb\u5230\u4e86\u5d4c\u5957\u7684\u8868\u8fbe\u5f0f\uff0c\u9700\u8981\u8c03\u7528 <code>scheme_read</code> \u6765\u5904\u7406\u8fd9\u4e2a\u5185\u5c42\u7684\u8868\u8fbe\u5f0f\uff0c\u56e0\u6b64\u6539\u6210\u4e86</p> <pre><code>if src.current() == '(':\n    return Pair(scheme_read(src), read_tail(src))\nreturn Pair(src.pop_first(), read_tail(src))\n</code></pre> <p>\u518d\u6b21\u6d4b\u8bd5\uff0c\u539f\u6765\u9519\u8bef\u7684\u5730\u65b9\u901a\u8fc7\u4e86\uff0c\u4f46\u662f\u51fa\u73b0\u4e86\u65b0\u7684\u62a5\u9519</p> <pre><code>&gt;&gt;&gt; read_line('(a)')\nnil\n\n# Error: expected\n#     Pair('a', nil)\n# but got\n#     nil\n</code></pre> <p>\u8fdb\u884c\u5206\u6790\uff0c\u611f\u89c9\u4e0a\u4e00\u4e2a\u9519\u8bef\u4e5f\u548c\u8fd9\u4e2a\u5dee\u4e0d\u591a\uff0c\u4f46\u662f\u5df2\u7ecf\u88ab\u89e3\u51b3\uff0c\u8bf4\u660e\u95ee\u9898\u4e0d\u5728 <code>read_tail</code> \u4e2d\uff0c\u6240\u4ee5\u5e94\u8be5\u5728 <code>scheme_read</code> \u4e2d\uff0c\u4e8e\u662f\u8fdb\u884c\u67e5\u770b\uff0c\u53d1\u73b0\u8fd9\u91cc\u5df2\u7ecf\u5f39\u51fa\u8fc7\u4ee4\u724c\u4e86</p> <pre><code>val = src.pop_first() # Get and remove the first token\n</code></pre> <p>\u6240\u4ee5\u5c06\u4e4b\u524d\u7684\u4ee3\u7801\u4fee\u6539\u540e\uff0c\u6700\u540e\u7ec8\u4e8e\u901a\u8fc7\ud83d\ude2d</p> code <pre><code>def scheme_read(src):\n    if src.current() is None:\n        raise EOFError\n    val = src.pop_first() # Get and remove the first token\n    if val == 'nil':\n        # BEGIN PROBLEM 1\n        \"*** YOUR CODE HERE ***\"\n        return nil\n        # END PROBLEM 1\n    elif val == '(':\n        # BEGIN PROBLEM 1\n        \"*** YOUR CODE HERE ***\"\n        return read_tail(src)\n        # END PROBLEM 1\n    elif val == \"'\":\n        # BEGIN PROBLEM 6\n        \"*** YOUR CODE HERE ***\"\n        # END PROBLEM 6\n    elif val not in DELIMITERS:\n        return val\n    else:\n        raise SyntaxError('unexpected token: {0}'.format(val))\ndef read_tail(src):\n    try:\n        if src.current() is None:\n            raise SyntaxError('unexpected end of file')\n        elif src.current() == ')':\n            # BEGIN PROBLEM 1\n            \"*** YOUR CODE HERE ***\"\n            src.pop_first()\n            return nil\n            # END PROBLEM 1\n        else:\n            # BEGIN PROBLEM 1\n            \"*** YOUR CODE HERE ***\"\n            if src.current() == '(':\n                return Pair(scheme_read(src), read_tail(src))\n            return Pair(src.pop_first(), read_tail(src))\n            # END PROBLEM 1\n    except EOFError:\n        raise SyntaxError('unexpected end of file')\n</code></pre> <p>Problem 13\u4e2d\u53d1\u73b0\u4e86 \u7531\u4e8eProblem 1\u4e2d\u4ee3\u7801\u5b58\u5728\u6f0f\u6d1e \u800c\u5bfc\u81f4\u7684\u9519\u8bef\uff0c\u91cd\u65b0\u9605\u8bfb\u9898\u76ee\u540e\uff0c\u5c06\u4ee3\u7801\u4fee\u6539\u6b63\u786e(\u5177\u4f53\u53ef\u89c1\u4e8e\u7b2c7\u6761Problem 13)</p> code <pre><code>def scheme_read(src):\n    if src.current() is None:\n        raise EOFError\n    val = src.pop_first() # Get and remove the first token\n    if val == 'nil':\n        # BEGIN PROBLEM 1\n        \"*** YOUR CODE HERE ***\"\n        return nil\n        # END PROBLEM 1\n    elif val == '(':\n        # BEGIN PROBLEM 1\n        \"*** YOUR CODE HERE ***\"\n        return read_tail(src)\n        # END PROBLEM 1\n    elif val == \"'\":\n        # BEGIN PROBLEM 6\n        \"*** YOUR CODE HERE ***\"\n        # END PROBLEM 6\n    elif val not in DELIMITERS:\n        return val\n    else:\n        raise SyntaxError('unexpected token: {0}'.format(val))\ndef read_tail(src):\n    try:\n        if src.current() is None:\n            raise SyntaxError('unexpected end of file')\n        elif src.current() == ')':\n            # BEGIN PROBLEM 1\n            \"*** YOUR CODE HERE ***\"\n            src.pop_first()\n            return nil\n            # END PROBLEM 1\n        else:\n            # BEGIN PROBLEM 1\n            \"*** YOUR CODE HERE ***\"\n            return Pair(scheme_read(src), read_tail(src))\n            # END PROBLEM 1\n    except EOFError:\n        raise SyntaxError('unexpected end of file')\n</code></pre>"},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part2/#2_26","title":"2","text":"<p>Problem 4\uff0c\u4e00\u5f00\u59cb\u6211\u5199\u7684\u662f</p> <pre><code>operator = env.lookup(first)\nvalidate_procedure(operator)\noperands = rest.map(lambda x: env.lookup(x))\nreturn scheme_apply(operator, operands, env)\n</code></pre> <p>\u4f46\u662f\u62a5\u4e86\u8fd9\u6837\u7684\u9519\u8bef</p> <pre><code>&gt;&gt;&gt; from scheme_reader import *\n&gt;&gt;&gt; from scheme import *\n&gt;&gt;&gt; expr = read_line('(+ 2 2)')\n&gt;&gt;&gt; scheme_eval(expr, create_global_frame()) # Type SchemeError if you think this errors\nTraceback (most recent call last):\n  ...\nscheme_builtins.SchemeError: unknown identifier: 2\n\n# Error: expected\n#     4\n# but got\n#     Traceback (most recent call last):\n#       ...\n#     SchemeError: unknown identifier: 2\n</code></pre> <p>\u7136\u540e\u7a81\u7136\u60f3\u5230 <code>2</code> \u5e76\u4e0d\u662f\u4e00\u4e2a \u7b26\u53f7 symbol \uff0c\u6240\u4ee5 <code>env.lookup(2)</code> \u5e94\u8be5\u662f\u4f1a\u62a5\u9519\uff0c\u7136\u540e\u53c8\u4f1a\u60f3\u8d77\u9898\u76ee\u4e2d\u7684</p> <p>You'll have to recursively call <code>scheme_eval</code> in the first two steps.</p> <p>\u6240\u4ee5\u5c31\u77e5\u9053\u9700\u8981\u5982\u4f55\u4fee\u6539\u4e86\uff0c\u6700\u540e\u4fee\u6539\u540e\u901a\u8fc7\u4e86\u6d4b\u8bd5</p> code <pre><code>def scheme_eval(expr, env, _=None): # Optional third argument is ignored\n    # Evaluate atoms\n    if scheme_symbolp(expr):\n        return env.lookup(expr)\n    elif self_evaluating(expr):\n        return expr\n\n    # All non-atomic expressions are lists (combinations)\n    if not scheme_listp(expr):\n        raise SchemeError('malformed list: {0}'.format(repl_str(expr)))\n    first, rest = expr.first, expr.rest\n    if scheme_symbolp(first) and first in SPECIAL_FORMS:\n        return SPECIAL_FORMS[first](rest, env)\n    else:\n        # BEGIN PROBLEM 4\n        \"*** YOUR CODE HERE ***\"\n        operator = scheme_eval(first, env)\n        validate_procedure(operator)\n        operands = rest.map(lambda x: scheme_eval(x, env))\n        return scheme_apply(operator, operands, env)\n        # END PROBLEM 4\n</code></pre>"},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part2/#3_20","title":"3","text":"<p>Problem 5\uff0c\u6ce8\u610f\u9700\u8981\u533a\u5206\u7b2c\u4e8c\u4e2a\u64cd\u4f5c\u6570\u9700\u8981\u901a\u8fc7\u6c42\u503c\u5c06\u7b26\u53f7\u6216\u8868\u8fbe\u5f0f\u53d8\u6210\u5bf9\u5e94\u503c</p> code <pre><code>def do_define_form(expressions, env):\n    validate_form(expressions, 2) # Checks that expressions is a list of length at least 2\n    target = expressions.first\n    if scheme_symbolp(target):\n        validate_form(expressions, 2, 2) # Checks that expressions is a list of length exactly 2\n        # BEGIN PROBLEM 5\n        \"*** YOUR CODE HERE ***\"\n        env.define(target, scheme_eval(expressions.rest.first, env))\n        return target\n        # END PROBLEM 5\n    ...\n</code></pre>"},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part2/#4_12","title":"4","text":"<p>Problem 6\u4e2d\uff0c\u4e00\u5f00\u59cb\u5728 <code>scheme_read</code> \u4e2d\u5199\u7684\u662f</p> <pre><code>return Pair(\"quote\", scheme_read(src))\n</code></pre> <p>\u4f46\u662f\u62a5\u9519\u4e86</p> <pre><code>scm&gt; ''hello\nhello str\n# Error: cdr can only be a pair, nil, or a promise but was hello\n\n# Error: expected\n#     (quote hello)\n# but got\n#     Traceback (most recent call last):\n#       ...\n#     SchemeError: cdr can only be a pair, nil, or a promise but was hello\n</code></pre> <p>\u7ecf\u8fc7\u601d\u8003\uff0c\u5927\u6982\u7406\u89e3\u4e86\uff0c\u6211\u611f\u89c9 <code>'</code> \u53ef\u4ee5\u7406\u89e3\u4e3a\u53ea\u4f1a\u6709\u4e00\u4e2a\u53c2\u6570/\u64cd\u4f5c\u6570\u7684\u51fd\u6570(\u56e0\u4e3a\u5f15\u53f7\u540e\u53ea\u4f1a\u6709\u4e00\u4e2a\u6700\u5916\u5c42\u7684\u62ec\u53f7)\uff0c\u56e0\u6b64\u8fd4\u56de\u7684\u7ed3\u6784\u5c31\u4f1a\u662f</p> <pre><code>Pair(\"quote\", Pair(..., nil))\n</code></pre> <p><code>...</code> \u5c31\u662f\u88ab\u5f15\u7528\u7684\u90e8\u5206\uff0c\u4e5f\u5c31\u662f\u90a3\u552f\u4e00\u7684\u53c2\u6570\u3002</p> code scheme.py<pre><code>def do_quote_form(expressions, env):\n    validate_form(expressions, 1, 1)\n    # BEGIN PROBLEM 6\n    \"*** YOUR CODE HERE ***\"\n    return expressions.first\n    # END PROBLEM 6\n</code></pre> scheme_reader.py<pre><code>def scheme_read(src):\n    ...\n    elif val == \"'\":\n        # BEGIN PROBLEM 6\n        \"*** YOUR CODE HERE ***\"\n        return Pair(\"quote\", Pair(scheme_read(src), nil))\n        # END PROBLEM 6\n    ...\ndef read_tail(src):\n    try:\n        ...\n        else:\n            # BEGIN PROBLEM 1\n            \"*** YOUR CODE HERE ***\"\n            # if src.current() == '(':\n            if src.current() in ('(', \"'\"):\n                ...\n            ...\n            # END PROBLEM 1\n    ...\n</code></pre>"},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part2/#5_9","title":"5","text":"<p>\u89e3\u9501Problem 8\u7684\u8fd9\u9898\u7b54\u6848(\u53c2\u8003 <code>do_lambda_form</code> \u51fd\u6570\u8bf4\u660e\u53ef\u4ee5\u5f97\u77e5\u662f <code>Pair(...)</code> \u7684\u5f62\u5f0f)\u6709\u4e9b\u96be\u6572(\u4e3b\u8981\u662f\u56e0\u4e3a\u592a\u957f\u4e86\ud83d\ude05)</p> <pre><code>&gt;&gt;&gt; from scheme_reader import *\n&gt;&gt;&gt; from scheme import *\n&gt;&gt;&gt; env = create_global_frame()\n&gt;&gt;&gt; lambda_line = read_line(\"(lambda (a b c) (+ a (* b c)))\")\n&gt;&gt;&gt; lambda_proc = do_lambda_form(lambda_line.rest, env)\n&gt;&gt;&gt; lambda_proc.formals\n? Pair('a', Pair('b', Pair('c', nil)))\n-- OK! --\n\n&gt;&gt;&gt; lambda_proc.body # Remember that the body is a *list* of expressions!\n? Pair(Pair('+', Pair('a', Pair(Pair('*', Pair('b', Pair('c', nil))), nil))), nil)\n-- OK! --\n</code></pre>"},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part2/#6_4","title":"6","text":"<p>Problem 10\uff0c\u8fd9\u9898\u4e0d\u96be\uff0c\u4f46\u6211\u7528\u5faa\u73af\u8fed\u4ee3\u5b9e\u73b0\u4e86\u4e4b\u540e\uff0c\u7a81\u7136\u60f3\u5230 <code>Pair</code> \u6709 <code>map</code> \u65b9\u6cd5\uff0c\u6240\u4ee5\u7a81\u53d1\u5947\u60f3\u60f3\u7528 <code>map</code> \u6765\u5b9e\u73b0(\u5229\u7528 <code>map</code> \u6765\u83b7\u53d6 <code>Pair</code> \u4e2d\u6240\u6709\u7684\u5143\u7d20)</p> code \u5b9e\u73b0\u4e00\u5b9e\u73b0\u4e8c <pre><code>class Frame(object):\n    ...\n    def make_child_frame(self, formals, vals):\n        if len(formals) != len(vals):\n            raise SchemeError('Incorrect number of arguments to function call')\n        # BEGIN PROBLEM 10\n        \"*** YOUR CODE HERE ***\"\n        child = Frame(self)\n        while formals is not nil:\n            child.define(formals.first, vals.first)\n            formals, vals = formals.rest, vals.rest\n        return child\n        # END PROBLEM 10\n</code></pre> <pre><code>class Frame(object):\n    ...\n    def make_child_frame(self, formals, vals):\n        if len(formals) != len(vals):\n            raise SchemeError('Incorrect number of arguments to function call')\n        # BEGIN PROBLEM 10\n        \"*** YOUR CODE HERE ***\"\n        child = Frame(self)\n        formals_list, vals_list = [], []\n        formals.map(lambda x: formals_list.append(x))\n        vals.map(lambda x: vals_list.append(x))\n        for formal, val in zip(formals_list, vals_list):\n            child.define(formal, val)\n        return child\n        # END PROBLEM 10\n</code></pre>"},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part2/#7_3","title":"7","text":"<p>Problem 13\u4e0d\u7b97\u590d\u6742\uff0c\u4f46\u6211\u5199\u51fa\u6765\u4e4b\u540e\uff0c\u62a5\u4e86\u4e00\u4e2a\u9519\u8bef</p> <pre><code>scm&gt; (cond ((= 1 1) nil))\n# Error: unknown identifier: nil\n\n# Error: expected\n#     ()\n# but got\n#     Traceback (most recent call last):\n#       ...\n#     SchemeError: unknown identifier: nil\n</code></pre> <p>\u7ecf\u8fc7\u4fee\u6539\u4ee3\u7801\u6765\u67e5\u770b\u9519\u8bef\u5730\u65b9\u7684\u76f8\u5173\u4fe1\u606f\uff0c\u8fdb\u884c\u5230\u9519\u8bef\u53d1\u751f\u7684\u5730\u65b9\u524d\uff0c\u6253\u5370 <code>clause.rest</code> \u663e\u793a <code>Pair('nil', nil)</code> \uff0c\u8fd9\u610f\u5473\u7740\u662f\u5728\u8bfb\u53d6\u7684\u65f6\u5019\u6ca1\u6709\u8bfb\u53d6\u6b63\u786e\uff0c\u4e8e\u662f\u56de\u5934\u67e5\u770bProblem 1\u7684 <code>scheme_read</code> \u548c <code>read_tail</code> \uff0c</p> <p>\u800c <code>scheme_read</code> \u4e2d\u662f\u6709\u5904\u7406 <code>'nil'</code> \u7684\u76f8\u5173\u4ee3\u7801\u7684</p> <pre><code>if val == 'nil':\n    # BEGIN PROBLEM 1\n    \"*** YOUR CODE HERE ***\"\n    return nil\n    # END PROBLEM 1\n</code></pre> <p>\u5c1d\u8bd5\u76f4\u63a5\u8fd0\u884cscheme\u89e3\u91ca\u5668\u8fdb\u884c\u6d4b\u8bd5</p> <pre><code>python scheme.py\n</code></pre> <p>\u53d1\u73b0\u76f4\u63a5\u8f93\u5165 <code>nil</code> \u65f6\uff0c\u80fd\u6b63\u786e\u8f93\u51fa\u6210\u7a7a\u94fe\u8868 <code>()</code> \uff0c\u800c\u5f53 <code>nil</code> \u88ab\u5d4c\u5957\u5305\u542b\u65f6\uff0c\u5c31\u4e0d\u80fd\u88ab\u6b63\u5e38\u8f6c\u6362\uff0c\u6240\u4ee5\u9519\u8bef\u53d1\u751f\u5728 <code>read_tail</code> \u4e2d\uff0c</p> <pre><code>scm&gt; nil\n()\nscm&gt; (+ nil)\nError: unknown identifier: nil\n</code></pre> <p>\u4e8e\u662f\u91cd\u65b0\u56de\u53bb\u7406\u89e3\u9898\u76ee\u7684\u8bf4\u660e</p> <p>Quote</p> <p><code>read_tail</code>:</p> <ul> <li>If there are no more tokens, then the list is missing a close parenthesis and we should raise an error. (provided)</li> <li>If the token is <code>)</code>, then we've reached the end of the list or pair. Remove this token from the buffer and return the <code>nil</code> object.</li> <li>If none of the above cases apply, the next token is the operator in a combination, e.g. src contains <code>+ 2 3)</code>. To parse this:<ol> <li><code>scheme_read</code> the next complete expression in the buffer.</li> <li>Call <code>read_tail</code> to read the rest of the combination until the matching closing parenthesis.</li> <li>Return the results as a <code>Pair</code> instance, where the first element is the next complete expression from (1) and the second element is the rest of the combination from (2).</li> </ol> </li> </ul> <p>\u4e09\u4e2a\u60c5\u51b5\u521a\u597d\u5bf9\u5e94\u6240\u7ed9\u7684\u4ee3\u7801\u6846\u67b6\u4e2d\u7684 <code>if-elif-else</code> \u7684\u4e09\u5757\u4ee3\u7801\uff0c\u56e0\u6b64\uff0c\u6839\u636e\u9898\u76ee\u7684\u610f\u601d\uff0c <code>else</code> \u5904\u7684\u4ee3\u7801\u5e94\u8be5\u4e3a</p> <pre><code>return Pair(scheme_read(src), read_tail(src))\n</code></pre> <p>\u6d4b\u8bd5Problem 1\u901a\u8fc7\uff0c\u518d\u6d4b\u8bd5Problem 13\uff0c\u7ec8\u4e8e\u901a\u8fc7\u4e86\ud83d\ude07</p> code <pre><code>def do_cond_form(expressions, env):\n    while expressions is not nil:\n        clause = expressions.first\n        validate_form(clause, 1)\n        if clause.first == 'else':\n            test = True\n            if expressions.rest != nil:\n                raise SchemeError('else must be last')\n        else:\n            test = scheme_eval(clause.first, env)\n        if is_true_primitive(test):\n            # BEGIN PROBLEM 13\n            \"*** YOUR CODE HERE ***\"\n            if clause.rest is nil:\n                return test\n            return eval_all(clause.rest, env)\n            # END PROBLEM 13\n        expressions = expressions.rest\n</code></pre>"},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part2/#8_2","title":"8","text":"<p>Problem 14\u4e2d\uff0c\u9700\u8981\u6ce8\u610f \u6709\u53ef\u80fd\u8981\u88ab\u8d4b\u503c\u7684\u7b26\u53f7\u5bf9\u5e94\u7684\u662f\u4e00\u4e2a\u8868\u8fbe\u5f0f\uff0c\u6240\u4ee5\u9700\u8981\u8fdb\u884c\u6c42\u503c</p> code <pre><code>def make_let_frame(bindings, env):\n    if not scheme_listp(bindings):\n        raise SchemeError('bad bindings list in let form')\n    names, values = nil, nil\n    # BEGIN PROBLEM 14\n    \"*** YOUR CODE HERE ***\"\n    while bindings is not nil:\n        binding = bindings.first\n        validate_form(binding, 2, 2)\n        names = Pair(binding.first, names)\n        values = Pair(scheme_eval(binding.rest.first, env), values)\n        bindings = bindings.rest\n    validate_formals(names)\n    # END PROBLEM 14\n    return env.make_child_frame(names, values)\n</code></pre>"},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part2/#9_2","title":"9","text":"<p>Problem 16\u611f\u89c9\u86ee\u6709\u610f\u601d</p> code <pre><code>(define (merge comp list1 list2)\n  ; BEGIN PROBLEM 16\n  'replace-this-line\n  (cond ((equal? list1 nil) list2)\n        ((equal? list2 nil) list1)\n        (else (let ((x (car list1)) (y (car list2)))\n                   (if (comp x y)\n                       (cons x (merge comp (cdr list1) list2))\n                       (cons y (merge comp list1 (cdr list2)))))))\n  )\n  ; END PROBLEM 16\n</code></pre> <p>Problem 17\u4ee3\u7801\u6709\u70b9\u7ed5(\u96be\u5199\uff0cdebug\u8d77\u6765\u4e5f\u75db\u82e6\ud83d\ude05)</p> code <pre><code>(define (nondecreaselist s)\n    ; BEGIN PROBLEM 17\n    'replace-this-line\n    (cond ((equal? s nil) nil)\n          ((equal? (cdr s) nil) (list s))\n          ((&gt; (car s) (cadr s)) (cons (list (car s)) (nondecreaselist (cdr s))))\n          (else (let ((rest (nondecreaselist (cdr s))))\n                     (cons (cons (car s) (car rest)) (cdr rest)))))\n    )\n    ; END PROBLEM 17\n</code></pre>"},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part2/#10_2","title":"10","text":"<p>Extra Credit\uff0c\u8fd9\u9898\u6709\u70b9\u96be\u5ea6\ud83d\ude05(\u4f9d\u6b21\u4fee\u6539\u4e86\u597d\u51e0\u6b21\u6700\u7ec8\u624d\u5168\u90e8\u901a\u8fc7)\uff0c</p> <p>\u4e00\u5f00\u59cb\u6211\u5199\u51fa\u6765</p> <pre><code>(define (let-to-lambda expr)\n  (cond ((atom? expr)\n         ; BEGIN PROBLEM EC\n         'replace-this-line\n         expr\n         ; END PROBLEM EC\n         )\n        ((quoted? expr)\n         ; BEGIN PROBLEM EC\n         'replace-this-line\n         (cons 'quote (cdr expr))\n         ; END PROBLEM EC\n         )\n        ((or (lambda? expr)\n             (define? expr))\n         (let ((form   (car expr))\n               (params (cadr expr))\n               (body   (cddr expr)))\n           ; BEGIN PROBLEM EC\n           'replace-this-line\n           (cons form (cons params body))\n           ; END PROBLEM EC\n           ))\n        ((let? expr)\n         (let ((values (cadr expr))\n               (body   (cddr expr)))\n           ; BEGIN PROBLEM EC\n           'replace-this-line\n           (let ((values (zip values)))\n                (cons (cons 'lambda (cons (car values) body)) (cadr values)))\n           ; END PROBLEM EC\n           ))\n        (else\n         ; BEGIN PROBLEM EC\n         'replace-this-line\n         expr\n         ; END PROBLEM EC\n         )))\n</code></pre> <p>\u7136\u540e\u6839\u636e\u6d4b\u8bd5\u7528\u4f8b\u7684\u9519\u8bef\uff0c\u53d1\u73b0\u8fd8\u9700\u8981\u9012\u5f52\u5730\u5e94\u7528\u8868\u8fbe\u5f0f\uff0c\u4f9d\u6b21\u53d1\u73b04\u4e2a\u5730\u65b9\u9700\u8981\u9012\u5f52\uff1a</p> <ul> <li><code>(cons form (cons params body))</code> \u7684 <code>body</code> </li> <li><code>(cons (cons 'lambda (cons (car values) body)) (cadr values)))</code> \u7684 <code>body</code> \u548c <code>(cadr values)</code> </li> <li>\u6700\u540e\u7684 <code>expr</code></li> </ul> <p>\u5e76\u4e14\u7531\u4e8e\u662f\u5f88\u591a\u4e2a\u8868\u8fbe\u5f0f\uff0c\u6240\u4ee5\u9700\u8981\u7528\u5230 <code>map</code> \u51fd\u6570</p> code <pre><code>(define (let-to-lambda expr)\n  (cond ((atom? expr)\n         ; BEGIN PROBLEM EC\n         'replace-this-line\n         expr\n         ; END PROBLEM EC\n         )\n        ((quoted? expr)\n         ; BEGIN PROBLEM EC\n         'replace-this-line\n         (cons 'quote (cdr expr))\n         ; END PROBLEM EC\n         )\n        ((or (lambda? expr)\n             (define? expr))\n         (let ((form   (car expr))\n               (params (cadr expr))\n               (body   (cddr expr)))\n           ; BEGIN PROBLEM EC\n           'replace-this-line\n           (cons form (cons params (map let-to-lambda body)))\n           ; END PROBLEM EC\n           ))\n        ((let? expr)\n         (let ((values (cadr expr))\n               (body   (cddr expr)))\n           ; BEGIN PROBLEM EC\n           'replace-this-line\n           (let ((values (zip values)))\n                (cons (cons 'lambda (cons (car values) (map let-to-lambda body))) (map let-to-lambda (cadr values))))\n           ; END PROBLEM EC\n           ))\n        (else\n         ; BEGIN PROBLEM EC\n         'replace-this-line\n         (map let-to-lambda expr)\n         ; END PROBLEM EC\n         )))\n</code></pre>"},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part2/#11_2","title":"11","text":"<p>Problem 11\uff0c\u8fd9\u9898\u9898\u76ee\u6211\u7406\u89e3\u4e86\u597d\u51e0\u904d\u6700\u540e\u624d\u611f\u89c9\u7b97\u662f\u5b8c\u5168\u7406\u89e3\u6b63\u786e</p> <p>Quote</p> <p>Complete the function <code>optimize_tail_calls</code> in <code>scheme.py</code>. It returns an alternative to <code>scheme_eval</code> that is properly tail recursive. That is, the interpreter will allow an unbounded number of active tail calls in constant space.</p> <p>The <code>Thunk</code> class represents a thunk, an expression that needs to be evaluated in an environment. When <code>scheme_optimized_eval</code> receives a non-atomic expression in a <code>tail</code> context, then it returns an <code>Thunk</code> instance. Otherwise, it should repeatedly call <code>prior_eval_function</code> until the result is a value, rather than a <code>Thunk</code>.</p> <p>A successful implementation will require changes to several other functions, including some functions that we provided for you. All expressions throughout your interpreter that are in a tail context should be evaluated by calling <code>scheme_eval</code> with <code>True</code> as a third argument. Your goal is to determine which expressions are in a tail context throughout your code.</p> <p>\u5728 <code>scheme.py</code> \u4e2d\u5b8c\u6210 <code>optimize_tail_calls</code> \u51fd\u6570\u3002\u5b83\u8fd4\u56de <code>scheme_eval</code> \u7684\u4e00\u79cd\u66ff\u4ee3\u65b9\u6cd5\uff0c\u53ef\u4ee5\u6b63\u786e\u5904\u7406\u5c3e\u9012\u5f52\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u89e3\u91ca\u5668\u5c06\u5141\u8bb8\u5728\u5e38\u91cf\u7a7a\u95f4\u5185\u6709\u65e0\u9650\u6570\u91cf\u7684\u6d3b\u52a8\u5c3e\u8c03\u7528\u3002</p> <p><code>Thunk</code> \u7c7b\u8868\u793a\u4e00\u4e2athunk\uff0c\u5373\u9700\u8981\u5728\u73af\u5883\u4e2d\u6c42\u503c\u7684\u8868\u8fbe\u5f0f\u3002\u5f53 <code>scheme_optimized_eval</code> \u5728 <code>\u5c3e</code> \u4e0a\u4e0b\u6587\u4e2d\u63a5\u6536\u5230\u4e00\u4e2a\u975e\u539f\u5b50\u8868\u8fbe\u5f0f\u65f6\uff0c\u5b83\u5c06\u8fd4\u56de\u4e00\u4e2a <code>Thunk</code> \u5b9e\u4f8b\u3002\u5426\u5219\uff0c\u5b83\u5e94\u8be5\u53cd\u590d\u8c03\u7528 <code>prior_eval_function</code>\uff0c\u76f4\u5230\u7ed3\u679c\u662f\u4e00\u4e2a\u503c\uff0c\u800c\u4e0d\u662f\u4e00\u4e2a <code>Thunk</code>\u3002</p> <p>\u6210\u529f\u7684\u5b9e\u73b0\u5c06\u9700\u8981\u5bf9\u5176\u4ed6\u51e0\u4e2a\u51fd\u6570\u8fdb\u884c\u66f4\u6539\uff0c\u5305\u62ec\u4e00\u4e9b\u6211\u4eec\u4e3a\u60a8\u63d0\u4f9b\u7684\u51fd\u6570\u3002 \u5728\u6574\u4e2a\u89e3\u91ca\u5668\u4e2d\uff0c\u6240\u6709\u5728\u5c3e\u4e0a\u4e0b\u6587\u4e2d\u7684\u8868\u8fbe\u5f0f\u90fd\u5e94\u901a\u8fc7\u8c03\u7528\u5e26\u6709 <code>True</code> \u4f5c\u4e3a\u7b2c\u4e09\u4e2a\u53c2\u6570\u7684 <code>scheme_eval</code> \u6765\u8fdb\u884c\u6c42\u503c\u3002\u60a8\u7684\u76ee\u6807\u662f\u786e\u5b9a\u4ee3\u7801\u4e2d\u54ea\u4e9b\u8868\u8fbe\u5f0f\u5728\u5c3e\u4e0a\u4e0b\u6587\u4e2d\u3002</p> <p>\u8fd9\u9898\u5927\u6982\u610f\u601d\u662f\uff0c\u9700\u8981\u4f18\u5316\u5904\u7406\u6c42\u503c\u90e8\u5206\uff0c\u5bf9\u4e8e \u5c3e\u9012\u5f52 tail recursive \u7684\u60c5\u51b5\u3002</p> <p>The <code>Thunk</code> class represents a thunk, an expression that needs to be evaluated in an environment. When <code>scheme_optimized_eval</code> receives a non-atomic expression in a <code>tail</code> context, then it returns an <code>Thunk</code> instance. Otherwise, it should repeatedly call <code>prior_eval_function</code> until the result is a value, rather than a <code>Thunk</code>.</p> <p>\u8fd9\u4e00\u6bb5\u5176\u5b9e\u4e0a\u6211\u8ba4\u4e3a\u5bf9\u5e94\u7684\u5c31\u662f\u63d0\u4f9b\u7684\u4ee3\u7801\u4e2d\u7684\u8fd9\u4e2a\u90e8\u5206(non-atomic \u521a\u597d\u5bf9\u5e94 <code>not scheme_symbolp(expr) and not self_evaluating(expr)</code> )</p> <pre><code>if tail and not scheme_symbolp(expr) and not self_evaluating(expr):\n    return Thunk(expr, env)\n</code></pre> <p>All expressions throughout your interpreter that are in a tail context should be evaluated by calling <code>scheme_eval</code> with <code>True</code> as a third argument. Your goal is to determine which expressions are in a tail context throughout your code.</p> <p>\u8fd9\u53e5\u8bf4\u7684\u662f\uff0c\u9898\u76ee\u7684\u5173\u952e\u5c31\u662f\u9700\u8981\u627e\u5230/\u60f3\u5230\u5224\u65ad\u5c3e\u9012\u5f52\u5f62\u5f0f/\u683c\u5f0f\u7684\u65b9\u6cd5\uff0c\u5e76\u8fdb\u884c\u5bf9\u5e94\u7684\u5904\u7406\u3002</p> <p>\u6700\u540e\u5c31\u662f\u8fd9\u4e00\u53e5\uff0c</p> <p>A successful implementation will require changes to several other functions, including some functions that we provided for you.</p> <p>\u662f\u8bf4\u6700\u7ec8\u7684\u5b9e\u73b0\u8fd8\u4f1a\u9700\u8981\u4fee\u6539\u4e00\u4e9b\u51fd\u6570\uff0c\u5305\u62ec\u63d0\u4f9b\u7684\u51fd\u6570\uff0c\u6240\u4ee5\u8fd9\u610f\u5473\u7740\u8fd9\u9898\u975e\u5e38\u5f00\u653e\uff0c\u5f88\u96be\uff0c\u6211\u5c1d\u8bd5\u4e86\u5f88\u4e45\u4e5f\u6ca1\u6709\u5c1d\u8bd5\u51fa\u6765\u3002</p> <p>\u6700\u540e\u770b\u5230 Lecture 35 \u548c 36 \u521a\u597d\u5c31\u662f Tail calls \u548c Macros \uff0c\u521a\u597d\u5206\u522b\u5bf9\u5e9419\u548c20\u9898\uff0c\u7136\u540e\u53bb\u770b\u4e86\u4e00\u4e0blecture 35\uff0c\u53d1\u73b0\u8bfe\u4e0a\u6709\u8bb2\u89e3\u8fd9\u4e00\u9898\uff0c\u6240\u4ee5\u5c31\u5148\u8df3\u8fc7\u8fd9\u4e00\u9898\u4e86\u3002(\u53d1\u73b020\u9898\u4e5f\u9700\u8981\u7528\u5230tail call\uff0c\u6240\u4ee5\u4e5f\u8df3\u8fc7\u4e86)</p>"},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part2/#12","title":"12","text":"<p>\u770b\u5b8c\u4e86\u6240\u6709\u8bfe\u7a0b\u4e4b\u540e\u7ee7\u7eed\u5c1d\u8bd5\u5b8c\u6210\u4e4b\u524d\u6ca1\u6709\u5b8c\u6210\u7684\u9898\u76ee\uff0c</p> <p>Problem 20 \u5b8f macro\uff0c\u8fd9\u9898\u4e0d\u7b97\u7279\u522b\u590d\u6742\uff0c\u6309\u7167\u9898\u76ee\u4e2d\u8bf4\u7684\uff0c\u5b9e\u73b0 <code>do_define_macro</code> \u51fd\u6570\u521b\u5efa\u4e00\u4e2a <code>MacroProcedure</code> \u7c7b\uff0c\u518d\u4fee\u6539\u4e00\u4e0b <code>scheme_eval</code> \u5c31\u884c\u4e86\uff0c</p> <p><code>do_define_macro</code> \u4e2d\u7684\u4ee3\u7801\u57fa\u672c\u4e0a\u53ef\u4ee5\u53c2\u8003 <code>do_define_form</code> \u7684\u4ee3\u7801\uff0c</p> <p><code>scheme_eval</code> \u4e2d\uff0c\u9700\u8981\u8c03\u7528 <code>MacroProcedure</code> \u7684 <code>apply_macro</code> \u65b9\u6cd5\uff0c\u5e76\u4e0d\u5148\u6c42\u503c\u800c\u662f\u76f4\u63a5\u4f20\u5165\u53c2\u6570\u7684\u539f\u59cb\u8868\u8fbe\u5f0f\uff0c\u4e00\u5f00\u59cb\u6211\u5199\u7684\u662f</p> <pre><code>return operator.apply_macro(rest, env)\n</code></pre> <p>\u4f46\u6d4b\u8bd5\u65f6\u663e\u793a\u8fd9\u91cc\u8fd4\u56de\u7684\u662f</p> <pre><code>scm&gt; (for i '(1 2 3)\n....      (if (= i 1)\n....          0\n....          i))\n(map (lambda (i) (if (= i 1) 0 i)) (quote (1 2 3)))\n\n# Error: expected\n#     (0 2 3)\n# but got\n#     (map (lambda (i) (if (= i 1) 0 i)) (quote (1 2 3)))\n</code></pre> <p>\u6240\u4ee5\u6700\u540e\u518d\u6dfb\u52a0\u4e00\u4e2a <code>scheme_eval</code> \u51fd\u6570\u5c31\u53ef\u4ee5\u4e86</p> code <pre><code>def do_define_macro(expressions, env):\n    # BEGIN Problem 20\n    \"*** YOUR CODE HERE ***\"\n    validate_form(expressions, 2)\n    target = expressions.first\n    if isinstance(target, Pair) and scheme_symbolp(target.first):\n        name = target.first\n        formals = target.rest\n        validate_formals(formals)\n        value = MacroProcedure(formals, expressions.rest, env)\n        env.define(name, value)\n        return name\n    else:\n        bad_target = target.first if isinstance(target, Pair) else target\n        raise SchemeError(\"non-symbol: {0}\".format(bad_target))\n    # END Problem 20\n</code></pre> <pre><code>def scheme_eval(expr, env, _=None): # Optional third argument is ignored\n    ...\n    else:\n        ...\n        validate_procedure(operator)\n        if isinstance(operator, MacroProcedure):\n            return scheme_eval(operator.apply_macro(rest, env), env)\n        ...\n</code></pre>"},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part2/#13","title":"13","text":"<p>Problem 19\uff0c\u505a\u8fd9\u9898\u82b1\u4e86\u597d\u4e45\u65f6\u95f4\uff0c\u4e5f\u5c1d\u8bd5\u4e86\u597d\u591a\u6b21\u3002</p> <p>\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u9898\u76ee\u4e2d\u6709\u4e00\u5904\u5199\u7684\u662f <code>prior_eval_function</code> \uff0c\u8fd9\u91cc\u53ef\u80fd\u662f\u5fd8\u8bb0\u8fdb\u884c\u4fee\u6539(20\u5e74\u590f\u5b63\u7684scheme project\u5bf9\u5e94\u7684\u4ee3\u7801\u662f <code>prior_eval_function</code> )\uff0c\u5e94\u8be5\u5bf9\u5e94\u7684\u662f\u4ee3\u7801\u4e2d\u7684 <code>original_scheme_eval</code></p> <p>\u521a\u5f00\u59cb\u662f\u89c9\u5f97\u9700\u8981\u5728 <code>optimized_eval</code> \u4e2d\u8fdb\u884c\u662f\u5426\u662f\u5c3e(\u8c03\u7528)\u683c\u5f0f(in tail context)\u7684\u5224\u65ad\uff0c\u4e8e\u662f\u5728\u51fd\u6570\u4e2d\u7f16\u5199</p> <pre><code>def in_tail_context(expr):\n    if isinstance(expr, Pair) and scheme_symbolp(expr.first):\n        first = expr.first\n        if first not in SPECIAL_FORMS and isinstance(env.lookup(first), LambdaProcedure):\n            return True\n        elif first == \"if\":\n            sub_expr_2 = expr.rest.rest.first\n            sub_expr_3 = expr.rest.rest.rest.first\n            return in_tail_context(sub_expr_2) or in_tail_context(sub_expr_3)\n        else:\n            return False\n    else:\n        return False\n</code></pre> <p>\u56e0\u4e3a\u5728lecture 35 Tail Calls\u91cc\uff0cJohn\u8bf4\u53ea\u9700\u8981\u6ce8\u610f \u6700\u540e\u7684\u8868\u8fbe\u5f0f\u662f\u8c03\u7528lambda\u51fd\u6570 \u548c <code>if</code> \u8868\u8fbe\u5f0f \u8fd9\u4e24\u79cd\u60c5\u51b5\uff0c</p> <p></p> <p>\u6240\u4ee5\u6211\u5c31\u53ea\u5bf9\u8fd9\u4e24\u79cd\u60c5\u51b5\u8fdb\u884c\u4e86\u5224\u65ad\u3002</p> <p>\u7136\u540e\uff0c\u6211\u7684\u60f3\u6cd5\u662f\uff0c\u5982\u679c\u4e0d\u7b26\u5408\u5c3e\u683c\u5f0f\uff0c\u5c31\u4f7f\u7528\u539f\u59cb\u7684eval\u51fd\u6570\uff0c\u5982\u679c\u7b26\u5408\u7684\u8bdd\uff0c\u90a3\u4e48\u5c31\u5e94\u8be5\u662f\u4f1a\u5f97\u5230 <code>Thunk</code> \u7c7b\u5b9e\u4f8b\uff0c\u90a3\u4e48\u5e94\u8be5\u5faa\u73af\u8fdb\u884c\u6c42\u503c(\u5c31\u4e0d\u4f1a\u9012\u5f52\u6ea2\u51fa)\uff0c\u4e8e\u662f</p> <pre><code>def optimize_tail_calls(original_scheme_eval):\n    def optimized_eval(expr, env, tail=False):\n        if tail and not scheme_symbolp(expr) and not self_evaluating(expr):\n            return Thunk(expr, env)\n\n        result = Thunk(expr, env)\n        # BEGIN PROBLEM 19\n        \"*** YOUR CODE HERE ***\"\n        def in_tail_context(expr):\n            ...\n\n        if not in_tail_context(expr):\n            return original_scheme_eval(expr, env)\n\n        while isinstance(result, Thunk):\n            result = original_scheme_eval(result.expr, result.env)\n        return result\n        # END PROBLEM 19\n    return optimized_eval\n</code></pre> <p>\u8fd9\u91cc\u60f3\u5230\u8981\u7528 <code>while</code> \u5faa\u73af\uff0c\u662f\u56e0\u4e3a\u539f\u59cb\u7684\u4ee3\u7801\u4e2d\u6709 <code>result = Thunk(expr, env)</code> \u611f\u89c9\u5f88\u50cf\u662f\u9700\u8981\u5faa\u73af\u8fdb\u884c\u8ba1\u7b97\u6700\u540e\u5f97\u5230\u4e0d\u662f <code>Thunk</code> \u7684 <code>result</code> \u3002</p> <p>\u4f46\u6d4b\u8bd5\u53d1\u73b0\u4e0d\u884c\uff0c</p> <p>\u7136\u540e\u634b\u4e86\u4e00\u4e0b\u4ee3\u7801\u7684\u6d41\u7a0b\uff0c\u611f\u89c9\u5e94\u8be5\u662f\u9700\u8981\u5728\u67d0\u4e2a\u81ea\u5b9a\u4e49\u7684\u5c3e\u9012\u5f52(\u6216\u8005\u8bf4body\u7b26\u5408\u5c3e\u683c\u5f0f)\u7684\u51fd\u6570\u8fd4\u56debody\u65f6\u8fd4\u56de <code>Thunk</code> (\u6240\u4ee5\u4e3a\u4e86\u8fd0\u884c\u8fd9\u4e2a\u51fd\u6570\u4e4b\u524d\u7684\u8c03\u7528\u7684eval\u548capply\u7b49\u51fd\u6570\u5c31\u53ef\u4ee5\u8fd4\u56de\u8fd9\u4e2a <code>Thunk</code> \u56e0\u6b64\u5c31\u4e0d\u4f1a\u6ea2\u51fa)\uff0c\u7136\u540e\u8fd9\u4e2a <code>Thunk</code> \u5728 <code>optimized_eval</code> \u4e2d\u88ab\u5faa\u73af\u6c42\u503c\uff0c</p> <p>\u6240\u4ee5\u89c9\u5f97\u5224\u65ad\u5c3e\u683c\u5f0f\u5e94\u8be5\u662f\u5728 <code>scheme_apply</code> \u8c03\u7528\u7684 <code>eval_all</code> \u4e2d\uff0c\u4e8e\u662f\u5c06\u4ee3\u7801\u4fee\u6539\u6210\u4e86</p> <pre><code>def eval_all(expressions, env):\n    def in_tail_context(expr):\n        ...\n\n    result = None\n    while expressions.rest is not nil:\n        result = scheme_eval(expressions.first, env)\n        expressions = expressions.rest\n    result = scheme_eval(expressions.first, env, tail=in_tail_context(expressions.first))\n    return result\n</code></pre> <p>\u8fdb\u884c\u6d4b\u8bd5\u53d1\u73b0\u4e0d\u884c\uff0c</p> <pre><code>scm&gt; (define (sum n total)\n....   (if (zero? n)\n....       total\n....       (sum (- n 1) (+ n total))))\nsum\nscm&gt; (sum 1001 0)\n</code></pre> <p>\u7136\u540e\u60f3\u5230\u662f\u7531\u4e8e\u6bcf\u6b21\u8fdb\u5165\u6700\u540e\u7684 <code>sum</code> \u65f6\uff0c\u90fd\u4f1a\u65b0\u8c03\u7528\u4e00\u4e2aeval\uff0c\u6240\u4ee5\u5c31\u4f1a\u9012\u5f52\u6ea2\u51fa\uff0c</p> <p>\u4e8e\u662f\u60f3\u5230\u4e86\u5728 <code>optimized_eval</code> \u4e2d\u76f4\u63a5\u5904\u7406\u8fd9\u4e24\u79cd\u60c5\u51b5\uff0c</p> <pre><code>while isinstance(result, Thunk):\n    if result.expr.first == \"if\":\n        result = do_if_form(result.expr.rest, result.env, in_tail=True)\n    else:\n        result = original_scheme_eval(result.expr, result.env)\n</code></pre> <p>\u5e76\u4e14\u5bf9 <code>do_if_form</code> \u8fdb\u884c\u4fee\u6539</p> <pre><code>def do_if_form(expressions, env, in_tail=False):\n    validate_form(expressions, 2, 3)\n    if is_true_primitive(scheme_eval(expressions.first, env)):\n        return scheme_eval(expressions.rest.first, env, tail=in_tail)\n    elif len(expressions) == 3:\n        return scheme_eval(expressions.rest.rest.first, env, tail=in_tail)\n</code></pre> <p>\u6dfb\u52a0 <code>in_tail</code> \u53c2\u6570\u662f\u56e0\u4e3a\uff0c\u9700\u8981\u5728\u8fd9\u91cc\u5c31\u8fd4\u56de <code>Thunk</code> \u7c7b\uff0c\u5426\u5219\u8fd8\u662f\u4f1a\u5f62\u6210\u9012\u5f52</p> <p>\u7136\u540e\u8fdb\u884c\u6d4b\u8bd5\uff0c\u53d1\u73b0\u7adf\u7136\u771f\u7684\u80fd\u901a\u8fc7\u51e0\u4e2a\u6d4b\u8bd5\u7528\u4f8b\ud83d\ude2e\uff0c\u4f46\u6ca1\u5168\u90e8\u901a\u8fc7\uff0c</p> <p>\u4f46\u662f\u611f\u89c9\u8fd9\u6837\u7684\u601d\u8def(\u5728 <code>eval_all</code> \u4e2d\u8fdb\u884c\u5c3e\u683c\u5f0f\u7684\u5224\u65ad)\u5e94\u8be5\u53ef\u4ee5\u901a\u8fc7\u6d4b\u8bd5\uff0c\u4e8e\u662f\u5c06 <code>optimized_eval</code> \u6539\u6210\u4e86</p> <pre><code>def optimized_eval(expr, env, tail=False):\n    if tail and not scheme_symbolp(expr) and not self_evaluating(expr):\n        return Thunk(expr, env)\n\n    result = Thunk(expr, env)\n    # BEGIN PROBLEM 19\n    \"*** YOUR CODE HERE ***\"\n    result = original_scheme_eval(expr, env)\n\n    while isinstance(result, Thunk):\n        rest_expr, env = result.expr.rest, result.env\n        if result.expr.first == \"if\":\n            result = do_if_form(rest_expr, env, in_tail=True)\n        else:\n            result = original_scheme_eval(result.expr, env)\n    return result\n    # END PROBLEM 19\n</code></pre> <p>\u7136\u540e\u6d4b\u8bd5\u53d1\u73b0\u53ea\u901a\u8fc7\u4e86\u4e24\u4e2a\u4f8b\u5b50\uff0c\u88ab\u5361\u5728\u4e86\u7b2c3\u4e2a\u4f8b\u5b50\u4e0a\uff0c\u8fd9\u4e2a\u4f8b\u5b50\u4f7f\u7528\u4e86 <code>cond</code> \uff0c\u6240\u4ee5\u9700\u8981\u5bf9\u8fd9\u79cd\u60c5\u51b5\u8fdb\u884c\u5904\u7406\uff0c</p> <p>\u4e8e\u662f\u4fee\u6539 <code>eval_all</code> \u4e2d\u7684 <code>in_tail_context</code> </p> <pre><code>def in_tail_context(expr):\n    if not isinstance(expr, Pair):\n        return True\n\n    if isinstance(expr, Pair) and scheme_symbolp(expr.first):\n        first = expr.first\n        if first not in SPECIAL_FORMS and isinstance(env.lookup(first), LambdaProcedure):\n            return True\n        elif first == \"if\":\n            sub_expr_2 = expr.rest.rest.first\n            sub_expr_3 = expr.rest.rest.rest.first\n            return in_tail_context(sub_expr_2) and in_tail_context(sub_expr_3)\n        elif first == \"cond\":\n            non_preds = []\n            cond_expr = expr.rest\n            while cond_expr is not nil:\n                non_pred = True\n                sub_expr = cond_expr.first\n                while sub_expr.rest is not nil:\n                    non_pred = sub_expr.rest.first\n                    sub_expr = sub_expr.rest\n                non_preds += [non_pred]\n                cond_expr = cond_expr.rest\n            return all([in_tail_context(x) for x in non_preds])\n        else:\n            return False\n    else:\n        return False\n</code></pre> <p>\u7136\u540e\u53d1\u73b0\uff0c\u53ef\u80fd\u662f\u7531\u4e8e <code>do_cond_form</code> \u4e2d\u6700\u540e\u8c03\u7528\u7684\u662f <code>eval_all</code> (\u5176\u4e2d\u6709\u5224\u65ad\u5c3e\u5f62\u5f0f\u7684\u4ee3\u7801)\u6240\u4ee5\u5c31\u53ef\u4ee5\u4f7f\u7528\u539f\u672c\u7684eval\u6765\u5904\u7406 <code>cond</code> \u7684\u60c5\u51b5\uff0c</p> <p>\u7136\u540e\u6d4b\u8bd5\u88ab\u7b2c5\u4e2a\u4f8b\u5b50 <code>let</code> \u8bed\u53e5\u5361\u4f4f\uff0c\u4e8e\u662f\u7ee7\u7eed\u5728 <code>in_tail_context</code> \u4e2d\u6dfb\u52a0\u5224\u65ad\u7684\u60c5\u51b5\uff0c</p> <pre><code>def in_tail_context(expr):\n    ...\n    if isinstance(expr, Pair) and scheme_symbolp(expr.first):\n        first = expr.first\n        if first not in SPECIAL_FORMS and isinstance(env.lookup(first), LambdaProcedure):\n            ...\n        elif first == \"let\":\n            # return True\n            let_expr = expr.rest.rest\n            while let_expr.rest is not nil:\n                let_expr = let_expr.rest\n            return in_tail_context(let_expr.first)\n        else:\n            return False\n    else:\n        return False\n</code></pre> <p>\u518d\u6d4b\u8bd5\uff0c\u88ab\u7b2c6\u4e2a\u4f8b\u5b50 <code>or</code> \u548c <code>and</code> \u5361\u4f4f\uff0c</p> <p>\u7136\u540e\u770b\u4e86\u4e00\u4e0b\u4e4b\u524d\u7684ppt\uff0c<code>and</code> <code>or</code> <code>begin</code> \u7684\u60c5\u51b5\u5dee\u4e0d\u591a\uff0c\u6240\u4ee5\u5c31\u4e00\u8d77\u5224\u65ad\u4e86</p> <pre><code>def in_tail_context(expr):\n    ...\n    if ...:\n        ...\n        elif first in (\"and\", \"or\", \"begin\"):\n            return True\n        else:\n            return False\n    else:\n        return False\n</code></pre> <p>\u7136\u540e\u5bf9\u5e94\u5728 <code>do_and_form</code> \u548c <code>do_or_form</code> \u4e2d\u8fdb\u884c\u4fee\u6539</p> <p><code>do_begin_form</code> \u7531\u4e8e\u548c\u4e4b\u524d\u7684 <code>do_cond_form</code> \u4e00\u6837\u6700\u540e\u8c03\u7528\u7684\u662f <code>eval_all</code> \u6240\u4ee5\u5c31\u4e0d\u7528\u4fee\u6539</p> <pre><code>def do_and_form(expressions, env, in_tail=False):\n    result = \"#t\"\n    while expressions is not nil:\n        if not isinstance(expressions.first, Pair):\n            result = scheme_eval(expressions.first, env)\n        elif in_tail and scheme_symbolp(expressions.first.first):\n            first = expressions.first.first\n            if first not in SPECIAL_FORMS and isinstance(env.lookup(first), LambdaProcedure):\n                result = scheme_eval(expressions.first, env, tail=True)\n            else:\n                result = scheme_eval(expressions.first, env)\n        else:\n            result = scheme_eval(expressions.first, env)\n\n        if is_false_primitive(result) or isinstance(result, Thunk):\n            break\n        expressions = expressions.rest\n    return result\n\ndef do_or_form(expressions, env, in_tail=False):\n    result = \"#f\"\n    while expressions is not nil:\n        if not isinstance(expressions.first, Pair):\n            result = scheme_eval(expressions.first, env)\n        elif in_tail and scheme_symbolp(expressions.first.first):\n            first = expressions.first.first\n            if first not in SPECIAL_FORMS and isinstance(env.lookup(first), LambdaProcedure):\n                result = scheme_eval(expressions.first, env, tail=True)\n            else:\n                result = scheme_eval(expressions.first, env)\n        else:\n            result = scheme_eval(expressions.first, env)\n\n        if is_true_primitive(result) or isinstance(result, Thunk):\n            break\n        expressions = expressions.rest\n    return result\n</code></pre> <p>\u6700\u540e\u5728 <code>optimized_eval</code> \u4e2d</p> <pre><code>def optimized_eval(expr, env, tail=False):\n    ...\n    # BEGIN PROBLEM 19\n    \"*** YOUR CODE HERE ***\"\n    result = original_scheme_eval(expr, env)\n    while isinstance(result, Thunk):\n        rest_expr, env = result.expr.rest, result.env\n        if result.expr.first in (\"if\", \"and\", \"or\"):\n            result = SPECIAL_FORMS[result.expr.first](rest_expr, env, in_tail=True)\n        else:\n            result = original_scheme_eval(result.expr, env)\n    return result\n</code></pre> <p>\u6700\u540e\u6d4b\u8bd5\uff0c\u7ec8\u4e8e\u5168\u90e8\u901a\u8fc7\u4e86\ud83d\ude2d\uff0c\u603b\u7b97\u662f\u5168\u90e8\u5b8c\u6210\u4e86\u8fd9\u4e2aproject</p> code <pre><code>def optimize_tail_calls(original_scheme_eval):\n    def optimized_eval(expr, env, tail=False):\n        if tail and not scheme_symbolp(expr) and not self_evaluating(expr):\n            return Thunk(expr, env)\n\n        result = Thunk(expr, env)\n        # BEGIN PROBLEM 19\n        \"*** YOUR CODE HERE ***\"\n        result = original_scheme_eval(expr, env)\n        while isinstance(result, Thunk):\n            rest_expr, env = result.expr.rest, result.env\n            if result.expr.first in (\"if\", \"and\", \"or\"):\n                result = SPECIAL_FORMS[result.expr.first](rest_expr, env, in_tail=True)\n            else:\n                result = original_scheme_eval(result.expr, env)\n        return result\n        # END PROBLEM 19\n    return optimized_eval\n</code></pre> <pre><code>def eval_all(expressions, env):\n    # BEGIN PROBLEM 7\n    # return scheme_eval(expressions.first, env) # replace this with lines of your own code\n\n    # result = None\n    # while expressions is not nil:\n    #     result = scheme_eval(expressions.first, env)\n    #     expressions = expressions.rest\n    # return result\n\n    def in_tail_context(expr):\n        if not isinstance(expr, Pair):\n            return True\n\n        if isinstance(expr, Pair) and scheme_symbolp(expr.first):\n            first = expr.first\n            if first not in SPECIAL_FORMS and isinstance(env.lookup(first), LambdaProcedure):\n                return True\n            elif first == \"if\":\n                sub_expr_2 = expr.rest.rest.first\n                sub_expr_3 = expr.rest.rest.rest.first\n                return in_tail_context(sub_expr_2) and in_tail_context(sub_expr_3)\n            elif first == \"cond\":\n                non_preds = []\n                cond_expr = expr.rest\n                while cond_expr is not nil:\n                    non_pred = True\n                    sub_expr = cond_expr.first\n                    while sub_expr.rest is not nil:\n                        non_pred = sub_expr.rest.first\n                        sub_expr = sub_expr.rest\n                    non_preds += [non_pred]\n                    cond_expr = cond_expr.rest\n                return all([in_tail_context(x) for x in non_preds])\n            elif first == \"let\":\n                let_expr = expr.rest.rest\n                while let_expr.rest is not nil:\n                    let_expr = let_expr.rest\n                return in_tail_context(let_expr.first)\n            elif first in (\"and\", \"or\", \"begin\"):\n                return True\n            else:\n                return False\n        else:\n            return False\n\n    if expressions is nil:\n        return\n    result = None\n    while expressions.rest is not nil:\n        result = scheme_eval(expressions.first, env)\n        expressions = expressions.rest\n    result = scheme_eval(expressions.first, env, tail=in_tail_context(expressions.first))\n    return result\n    # END PROBLEM 7\n</code></pre> <pre><code>def do_if_form(expressions, env, in_tail=False):\n    validate_form(expressions, 2, 3)\n    if is_true_primitive(scheme_eval(expressions.first, env)):\n        return scheme_eval(expressions.rest.first, env, tail=in_tail)\n    elif len(expressions) == 3:\n        return scheme_eval(expressions.rest.rest.first, env, tail=in_tail)\n</code></pre> <pre><code>def do_and_form(expressions, env, in_tail=False):\n    # BEGIN PROBLEM 12\n    \"*** YOUR CODE HERE ***\"\n    result = \"#t\"\n    while expressions is not nil:\n        # result = scheme_eval(expressions.first, env)\n        # if is_false_primitive(result):\n        #     return result\n        # expressions = expressions.rest\n\n        if not isinstance(expressions.first, Pair):\n            result = scheme_eval(expressions.first, env)\n        elif in_tail and scheme_symbolp(expressions.first.first):\n            first = expressions.first.first\n            if first not in SPECIAL_FORMS and isinstance(env.lookup(first), LambdaProcedure):\n                result = scheme_eval(expressions.first, env, tail=True)\n            else:\n                result = scheme_eval(expressions.first, env)\n        else:\n            result = scheme_eval(expressions.first, env)\n\n        if is_false_primitive(result) or isinstance(result, Thunk):\n            break\n        expressions = expressions.rest\n    return result\n    # END PROBLEM 12\n\ndef do_or_form(expressions, env, in_tail=False):\n    # BEGIN PROBLEM 12\n    \"*** YOUR CODE HERE ***\"\n    result = \"#f\"\n    while expressions is not nil:\n        # result = scheme_eval(expressions.first, env)\n        # if is_true_primitive(result):\n        #     return result\n        # expressions = expressions.rest\n\n        if not isinstance(expressions.first, Pair):\n            result = scheme_eval(expressions.first, env)\n        elif in_tail and scheme_symbolp(expressions.first.first):\n            first = expressions.first.first\n            if first not in SPECIAL_FORMS and isinstance(env.lookup(first), LambdaProcedure):\n                result = scheme_eval(expressions.first, env, tail=True)\n            else:\n                result = scheme_eval(expressions.first, env)\n        else:\n            result = scheme_eval(expressions.first, env)\n\n        if is_true_primitive(result) or isinstance(result, Thunk):\n            break\n        expressions = expressions.rest\n    return result\n    # END PROBLEM 12\n</code></pre>"},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part3/","title":"CS61A Part 3","text":"<p> \u7ea6 16893 \u4e2a\u5b57  1674 \u884c\u4ee3\u7801  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 77 \u5206\u949f</p> \u76ee\u5f55 <ul> <li>Lecture 31 Declarative Programming</li> <li>Lecture 32 Tables</li> <li>Lecture 32 Q&amp;A</li> <li>Lab 12</li> <li>Lecture 33 Aggregation</li> <li>Lecture 33 Q&amp;A</li> <li>Lecture 34 Database</li> <li>Lecture 34 Q&amp;A</li> <li>HW 09</li> <li>Lecture 35 Tail Calls</li> <li>Lab 13</li> <li>Lecture 36 Macros</li> <li>Lab 14</li> <li>Lecture 36 Q&amp;A</li> <li>Lecture 37 Final Examples</li> <li>Lecture 37 Q&amp;A</li> <li>Lecture 38 Conclusion</li> </ul>"},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part3/#lecture-31-declarative-programming","title":"Lecture 31 Declarative Programming","text":""},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part3/#1","title":"1","text":"<p>John\u89e3\u91ca\u4ec0\u4e48\u662f \u58f0\u660e\u5f0f\u8bed\u8a00 declarative language \uff0c\u4ee5\u53ca\u548c \u547d\u4ee4\u5f0f\u8bed\u8a00 imperative language \u7684\u533a\u522b\uff0c</p> <p>\u4e3b\u8981\u5728\u4e8e\uff0c\u547d\u4ee4\u5f0f\u8bed\u8a00\u53ea\u4f1a\u56fa\u5b9a\u5730\u6267\u884c\u5199\u597d\u7684\u7a0b\u5e8f\uff0c\u800c\u58f0\u660e\u5f0f\u8bed\u8a00\u4f1a\u6839\u636e\u9700\u8981\u5904\u7406\u7684\u60c5\u51b5\u6765\u81ea\u5df1\u9009\u62e9\u5408\u9002\u7684\u5904\u7406\u65b9\u6cd5</p> <p>Quote</p> <p>John:</p> <p>SQL is a declarative programming language. What's that? Well, in a declarative language, SQL is the most common example, but there are many others such as Prolog. A program is a description of the desired result that you want your computer to generate. The interpreter's job is to figure out how to generate that result for you. That's different from an imperative language, such as Python or Scheme. In an imperative language, when you write a program in that language, it's a description of some computational process or processes that you want to be carried out. The job of an interpreter in an imperative language is to carry out the execution and evaluation rules in order to have a correctly interpreted program, and you've done this in your project.</p> <p>So, there's more flexibility in a declarative language interpreter. We'll see what I mean by that in time, but here's a place to start: in an imperative language, if you write a quadratic time algorithm by specifying that computational process, it's probably gonna run in quadratic time. But in a declarative language, you just say what you want, and if there are multiple ways to compute that, one of which runs in quadratic time and one of which runs in linear time, well, it's up to the interpreter to choose among those options in order to compute what you want as efficiently as possible.</p> <p>So, a lot of the interesting research in declarative languages is in making decisions about how to compute the desired result, given that there are many ways to compute it correctly, but some of them are faster than others.</p> <p>John:</p> <p>SQL\u662f\u4e00\u79cd\u58f0\u660e\u5f0f\u7f16\u7a0b\u8bed\u8a00\u3002\u90a3\u662f\u4ec0\u4e48\uff1f\u55ef\uff0c\u5728\u58f0\u660e\u5f0f\u8bed\u8a00\u4e2d\uff0cSQL\u662f\u6700\u5e38\u89c1\u7684\u4f8b\u5b50\uff0c\u4f46\u8fd8\u6709\u8bb8\u591a\u5176\u4ed6\u8bed\u8a00\uff0c\u6bd4\u5982Prolog\u3002\u7a0b\u5e8f\u662f\u5bf9\u4f60\u60f3\u8ba9\u8ba1\u7b97\u673a\u751f\u6210\u7684\u671f\u671b\u7ed3\u679c\u7684\u63cf\u8ff0\u3002\u89e3\u91ca\u5668\u7684\u4efb\u52a1\u662f\u5f04\u6e05\u695a\u5982\u4f55\u4e3a\u4f60\u751f\u6210\u8be5\u7ed3\u679c\u3002\u8fd9\u4e0e\u547d\u4ee4\u5f0f\u8bed\u8a00\u4e0d\u540c\uff0c\u6bd4\u5982Python\u6216Scheme\u3002\u5728\u547d\u4ee4\u5f0f\u8bed\u8a00\u4e2d\uff0c\u5f53\u4f60\u5728\u8be5\u8bed\u8a00\u4e2d\u7f16\u5199\u7a0b\u5e8f\u65f6\uff0c\u5b83\u662f\u5bf9\u4f60\u60f3\u6267\u884c\u7684\u4e00\u4e9b\u8ba1\u7b97\u8fc7\u7a0b\u6216\u8fc7\u7a0b\u7684\u63cf\u8ff0\u3002\u547d\u4ee4\u5f0f\u8bed\u8a00\u4e2d\u89e3\u91ca\u5668\u7684\u4efb\u52a1\u662f\u6267\u884c\u6267\u884c\u548c\u8bc4\u4f30\u89c4\u5219\uff0c\u4ee5\u786e\u4fdd\u6b63\u786e\u89e3\u91ca\u7a0b\u5e8f\uff0c\u800c\u4f60\u5728\u9879\u76ee\u4e2d\u5df2\u7ecf\u505a\u5230\u4e86\u8fd9\u4e00\u70b9\u3002</p> <p>\u56e0\u6b64\uff0c\u5728\u58f0\u660e\u5f0f\u8bed\u8a00\u89e3\u91ca\u5668\u4e2d\u6709\u66f4\u591a\u7684\u7075\u6d3b\u6027\u3002\u6211\u4eec\u4f1a\u5728\u540e\u9762\u8be6\u7ec6\u8ba8\u8bba\u8fd9\u4e00\u70b9\uff0c\u4f46\u8fd9\u91cc\u662f\u4e00\u4e2a\u8d77\u70b9\uff1a\u5728\u547d\u4ee4\u5f0f\u8bed\u8a00\u4e2d\uff0c\u5982\u679c\u4f60\u901a\u8fc7\u6307\u5b9a\u8ba1\u7b97\u8fc7\u7a0b\u6765\u7f16\u5199\u4e00\u4e2a\u4e8c\u6b21\u65f6\u95f4\u590d\u6742\u5ea6\u7684\u7b97\u6cd5\uff0c\u5b83\u53ef\u80fd\u4f1a\u8fd0\u884c\u5728\u4e8c\u6b21\u65f6\u95f4\u590d\u6742\u5ea6\u3002\u4f46\u5728\u58f0\u660e\u5f0f\u8bed\u8a00\u4e2d\uff0c\u4f60\u53ea\u9700\u8bf4\u660e\u4f60\u60f3\u8981\u7684\u7ed3\u679c\uff0c\u5982\u679c\u6709\u591a\u79cd\u8ba1\u7b97\u8be5\u7ed3\u679c\u7684\u65b9\u5f0f\uff0c\u5176\u4e2d\u4e00\u79cd\u662f\u4e8c\u6b21\u65f6\u95f4\u590d\u6742\u5ea6\uff0c\u53e6\u4e00\u79cd\u662f\u7ebf\u6027\u65f6\u95f4\u590d\u6742\u5ea6\uff0c\u90a3\u4e48\u7531\u89e3\u91ca\u5668\u6765\u5728\u8fd9\u4e9b\u9009\u9879\u4e2d\u9009\u62e9\uff0c\u4ee5\u5c3d\u53ef\u80fd\u9ad8\u6548\u5730\u8ba1\u7b97\u51fa\u4f60\u60f3\u8981\u7684\u7ed3\u679c\u3002</p> <p>\u56e0\u6b64\uff0c\u5728\u58f0\u660e\u5f0f\u8bed\u8a00\u4e2d\uff0c\u5173\u4e8e\u5982\u4f55\u8ba1\u7b97\u671f\u671b\u7ed3\u679c\u7684\u6709\u8da3\u7814\u7a76\u5f88\u591a\uff0c\u9274\u4e8e\u6709\u8bb8\u591a\u6b63\u786e\u8ba1\u7b97\u7ed3\u679c\u7684\u65b9\u5f0f\uff0c\u4f46\u5176\u4e2d\u4e00\u4e9b\u6bd4\u5176\u4ed6\u65b9\u5f0f\u66f4\u5feb\u3002</p>"},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part3/#2","title":"2","text":"<p>SQL\u8bed\u8a00\u7684\u4e00\u4e9b\u57fa\u672c\u8bed\u53e5\uff0cJohn\u8bf4(\u9664\u4e86 <code>select</code> <code>create table</code> )\u5176\u4ed6\u7684\u8bed\u53e5\u5bf9\u4e8e\u7406\u89e3SQL\u7684\u6838\u5fc3\u4e0d\u592a\u91cd\u8981</p> <p>Quote</p> <p>John:</p> <p>...They're important if you're actually going to use one of these systems in a large industrial application, but they're not too important for understanding the heart of how SQL works. Most of the important action is in the SELECT statement.</p> <p>John:</p> <p>...\u5b83\u4eec\u5728\u5b9e\u9645\u5e94\u7528\u4e8e\u5927\u578b\u5de5\u4e1a\u5e94\u7528\u7a0b\u5e8f\u65f6\u975e\u5e38\u91cd\u8981\uff0c\u4f46\u5bf9\u4e8e\u7406\u89e3 SQL \u5de5\u4f5c\u7684\u6838\u5fc3\u5e76\u4e0d\u592a\u91cd\u8981\u3002\u5927\u90e8\u5206\u91cd\u8981\u7684\u64cd\u4f5c\u90fd\u5728 SELECT \u8bed\u53e5\u4e2d\u3002</p>"},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part3/#3","title":"3","text":"<p><code>select</code> \u8bed\u53e5\u7684\u57fa\u672c\u7528\u6cd5</p> <pre><code>select [expression] as [name], [expression] as [name], ... ;\n</code></pre> <p>\u5206\u53f7 <code>;</code> \u8868\u793a\u7ed3\u675f\uff0c <code>as [name]</code> \u90e8\u5206\u662f\u53ef\u9009\u7684\u3002</p> <p>\u4e00\u4e2a <code>select</code> \u8bed\u53e5\u53ea\u4f1a\u751f\u6210\u4e00\u4e2a\u4e00\u884c\u7684\u6570\u636e\u8868\uff0c\u53ef\u4ee5\u4f7f\u7528 <code>union</code> \u5c06\u591a\u4e2a\u8868\u5408\u5e76\uff0c\u5408\u5e76\u8981\u6c42\u4e24\u4e2a\u8868\u7684\u5217\u6570\u662f\u4e00\u6837\u7684\uff0c\u4f7f\u7528\u7b2c\u4e00\u4e2a\u8868\u7684\u5217\u540d\u4f5c\u4e3a\u65b0\u8868\u7684\u5217\u540d(\u6240\u4ee5\u53ef\u4ee5\u770b\u5230\u5c55\u793a\u7684\u4ee3\u7801\u4e2d\uff0c\u4e4b\u540e <code>select</code> \u8bed\u53e5(\u5373\u4e4b\u540e\u7684\u8868)\u90fd\u53ef\u4ee5\u4e0d\u7528\u6dfb\u52a0\u5217\u540d\u4e0d\u7528\u5199 <code>as [name]</code> )</p> <p>Quote</p> <p>John:</p> <p>...If you <code>select</code> literals, which are expressions like the number <code>2</code> or the string <code>\"Berkeley\"</code> , that will create a one-row table. But if you want to create a multi-row table, you can union together two <code>select</code> statements. The union of two <code>select</code> statements is another table, but it contains the rows of both. You can only union together tables that have the same number of columns and the same type of information in each column. But the two <code>select</code> statements that you union together don't need to have the same names for the columns; it will just use the names of the first <code>select</code> statement in order to name the columns in the final result.</p> <p>John:</p> <p>...\u5982\u679c\u4f60\u9009\u62e9\uff08 <code>select</code> \uff09\u5b57\u9762\u91cf\uff0c\u8fd9\u4e9b\u8868\u8fbe\u5f0f\u53ef\u4ee5\u662f\u50cf\u6570\u5b57 <code>2</code> \u6216\u5b57\u7b26\u4e32 <code>\"Berkeley\"</code> \u8fd9\u6837\u7684\u8868\u8fbe\u5f0f\uff0c\u90a3\u5c06\u521b\u5efa\u4e00\u4e2a\u4e00\u884c\u7684\u8868\u3002\u4f46\u5982\u679c\u4f60\u60f3\u521b\u5efa\u4e00\u4e2a\u591a\u884c\u7684\u8868\uff0c\u4f60\u53ef\u4ee5\u5c06\u4e24\u4e2a <code>select</code> \u8bed\u53e5\u8054\u5408\u5728\u4e00\u8d77\u3002\u4e24\u4e2a <code>select</code> \u8bed\u53e5\u7684\u8054\u5408\u662f\u53e6\u4e00\u4e2a\u8868\uff0c\u4f46\u5b83\u5305\u542b\u4e86\u4e24\u8005\u7684\u884c\u3002\u4f60\u53ea\u80fd\u8054\u5408\u90a3\u4e9b\u5177\u6709\u76f8\u540c\u5217\u6570\u548c\u6bcf\u5217\u76f8\u540c\u7c7b\u578b\u4fe1\u606f\u7684\u8868\u3002\u4f46\u4f60\u8054\u5408\u5728\u4e00\u8d77\u7684\u4e24\u4e2a <code>select</code> \u8bed\u53e5\u7684\u5217\u540d\u4e0d\u9700\u8981\u76f8\u540c\uff1b\u5b83\u5c06\u53ea\u4f7f\u7528\u7b2c\u4e00\u4e2a <code>select</code> \u8bed\u53e5\u7684\u5217\u540d\u6765\u547d\u540d\u6700\u7ec8\u7ed3\u679c\u4e2d\u7684\u5217\u3002</p> <p></p> <p><code>select</code> \u8bed\u53e5\u53ea\u4f1a\u5c55\u793a\u6570\u636e\u8868\uff0c\u4f46\u5e76\u4e0d\u4f1a\u5c06\u6570\u636e\u8868\u50a8\u5b58\uff0c\u6240\u4ee5\u5982\u679c\u9700\u8981\u50a8\u5b58\u6570\u636e\u8868\uff0c\u53ef\u4ee5\u4f7f\u7528 <code>create table</code> \u8bed\u53e5(\u5982\u4e0a\u56fe)</p>"},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part3/#4","title":"4","text":"<p>\u7528 <code>select</code> \u8bed\u53e5\u6765 \u6295\u5f71 project \u73b0\u6709\u6570\u636e\u8868</p> <p>project\u5b98\u65b9\u7684\u7ffb\u8bd1\u662f\u6295\u5f71\uff0c\u4f46\u6211\u89c9\u5f97\u8fd9\u91cc\u7406\u89e3\u4e3a \u5904\u7406 \u4e5f\u53ef\u4ee5</p> <p></p> <p>\u53ef\u4ee5\u7528 <code>from</code> \u6765\u9009\u62e9\u4e00\u4e2a\u5df2\u6709\u7684\u8868\uff0c\u53ef\u4ee5\u7528 <code>where</code> \u6765\u7b5b\u9009\u7b26\u5408\u6761\u4ef6\u7684\u884c(\u611f\u89c9\u6709\u70b9\u50cfpython\u5217\u8868\u63a8\u5230\u5f0f\u4e2d\u7684 <code>if</code> )\uff0c\u53ef\u4ee5\u7528 <code>order by</code> \u6765\u7ed9\u65b0\u8868\u8bbe\u7f6e\u6392\u5e8f\u89c4\u5219</p> <p>\u5728John\u7684demo\u6f14\u793a\u4e2d\uff0c\u4f7f\u7528 <code>*</code> \u6765\u9009\u62e9\u6240\u6709\u5217</p> <pre><code>select * from parents;\n</code></pre> <p></p>"},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part3/#5","title":"5","text":"<p><code>select</code> \u8bed\u53e5\u4e2d\u4e5f\u53ef\u4ee5\u8fdb\u884c\u6570\u5b66\u7684\u5904\u7406(\u5982\u4e0a\u56fe)</p>"},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part3/#6","title":"6","text":"<p>\u5728 sql \u7ec8\u7aef\u4e2d\uff0c\u53ef\u4ee5\u4f7f\u7528 <code>-init xxx.sql</code> \u6765\u52a0\u8f7d <code>.sql</code> \u6587\u4ef6</p> <p>John\u63d0\u5230 <code>select * from ints</code> \u540e\uff0c\u65b0\u8868\u4e0e\u539f\u8868\u987a\u5e8f\u4e0d\u4e00\u81f4\u7684\u73b0\u8c61</p> <p>Quote</p> <p>John:</p> <p>Notice something quite interesting. These rows don't appear in the order that I wrote them out in the first place. When you union together a bunch of <code>select</code> statements, you get no guarantees about the order of the result. That's up to the declarative programming engine, which tries to compute the result efficiently.</p> <p>Now, one thing that <code>union</code> does is it discards repeats, and the way that it discards repeats in some cases is to sort all the rows to look for whether there's repetition. And that's exactly what happened here. So, you can see that it's written all of these in an alphabetical order according to the word, which is not what I asked for in the first place, but that's what I got.</p> <p>And this is one of the properties of declarative programming languages. There's no particular procedure that's defined in advance that tells me how to compute the result of unioning together a bunch of <code>select</code> statements. Instead, it's up to the system to create the correct result in whatever way it chooses, and that might involve building the table in a different order than you might expect.</p> <p>John:</p> <p>\u8bf7\u6ce8\u610f\u4e00\u4e9b\u76f8\u5f53\u6709\u8da3\u7684\u4e8b\u60c5\u3002\u8fd9\u4e9b\u884c\u5e76\u4e0d\u6309\u7167\u6211\u6700\u521d\u5199\u51fa\u5b83\u4eec\u7684\u987a\u5e8f\u51fa\u73b0\u3002\u5f53\u4f60\u8054\u5408\u4e00\u5806 <code>select</code> \u8bed\u53e5\u65f6\uff0c\u4f60\u65e0\u6cd5\u4fdd\u8bc1\u7ed3\u679c\u7684\u987a\u5e8f\u3002\u8fd9\u7531\u58f0\u660e\u6027\u7f16\u7a0b\u5f15\u64ce\u51b3\u5b9a\uff0c\u5b83\u8bd5\u56fe\u6709\u6548\u5730\u8ba1\u7b97\u7ed3\u679c\u3002</p> <p>\u73b0\u5728\uff0c <code>union</code> \u7684\u4e00\u9879\u529f\u80fd\u662f\u4e22\u5f03\u91cd\u590d\u9879\uff0c\u800c\u5728\u67d0\u4e9b\u60c5\u51b5\u4e0b\u4e22\u5f03\u91cd\u590d\u9879\u7684\u65b9\u6cd5\u662f\u5bf9\u6240\u6709\u884c\u8fdb\u884c\u6392\u5e8f\uff0c\u4ee5\u67e5\u770b\u662f\u5426\u6709\u91cd\u590d\u3002\u8fd9\u6b63\u662f\u8fd9\u91cc\u53d1\u751f\u7684\u60c5\u51b5\u3002\u6240\u4ee5\u4f60\u53ef\u4ee5\u770b\u5230\uff0c\u5b83\u6309\u7167\u5355\u8bcd\u7684\u5b57\u6bcd\u987a\u5e8f\u5199\u51fa\u4e86\u6240\u6709\u8fd9\u4e9b\uff0c\u8fd9\u4e0d\u662f\u6211\u6700\u521d\u8981\u6c42\u7684\uff0c\u4f46\u8fd9\u5c31\u662f\u6211\u5f97\u5230\u7684\u7ed3\u679c\u3002</p> <p>\u8fd9\u662f\u58f0\u660e\u6027\u7f16\u7a0b\u8bed\u8a00\u7684\u4e00\u4e2a\u7279\u6027\u3002\u6ca1\u6709\u9884\u5148\u5b9a\u4e49\u7684\u7279\u5b9a\u8fc7\u7a0b\u544a\u8bc9\u6211\u5982\u4f55\u8ba1\u7b97\u8054\u5408\u4e00\u5806 <code>select</code> \u8bed\u53e5\u7684\u7ed3\u679c\u3002\u76f8\u53cd\uff0c\u8fd9\u53d6\u51b3\u4e8e\u7cfb\u7edf\u4ee5\u4efb\u4f55\u5b83\u9009\u62e9\u7684\u65b9\u5f0f\u521b\u5efa\u6b63\u786e\u7684\u7ed3\u679c\uff0c\u8fd9\u53ef\u80fd\u6d89\u53ca\u4ee5\u4e0e\u4f60\u671f\u671b\u7684\u4e0d\u540c\u7684\u987a\u5e8f\u6784\u5efa\u8868\u3002</p>"},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part3/#7","title":"7","text":"<p>\u95ee\u9898B\uff0c\u6700\u540eJohn\u7528\u4e86\u4e00\u79cd\u6211\u6ca1\u60f3\u5230\u7684\u65b9\u6cd5\ud83d\ude02\uff0c</p> <pre><code>select word from ints\nwhere one + two/2 + four/4 + eight/8 = 1;\n</code></pre> <p>\u5373\u5224\u65ad\u662f\u5426\u53ea\u6709\u4e00\u4e2a\u4e3a\u6b63\uff0c</p> <p>\u6211\u60f3\u5230\u7684\u662f\uff0c\u5c061 2 4 8\u52a0\u8d77\u6765(\u7b97\u81ea\u5df1\u7684\u503c)\u7136\u540e\u53d6\u6a21\u4e3a\u96f6(\u4f46\u4e0d\u77e5\u9053sql\u4e2d\u6709\u6ca1\u6709\u53d6\u6a21\u8fd0\u7b97\uff0c\u6709\u7684\u8bdd\u5e94\u8be5\u5c31\u53ef\u884c)</p>"},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part3/#lecture-32-tables","title":"Lecture 32 Tables","text":""},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part3/#1_1","title":"1","text":"<p>\u8054\u63a5 join \u4e24\u4e2a\u8868\u7684\u65b9\u6cd5\uff0c\u4f7f\u7528 \u9017\u53f7 <code>,</code> \u6765\u8054\u63a5\uff0c\u7ed3\u679c\u662f\u5f97\u5230\u4e00\u4e2a\u6bcf\u4e2a\u8868\u7684\u6bcf\u4e00\u884c\u4e0e\u5176\u4ed6\u8868\u7684\u6bcf\u4e00\u884c\u7ec4\u5408\u7684\u65b0\u7684\u8868(\u4ece\u4e0a\u56feJohn\u7684demo\u6f14\u793a\u4e2d\u53ef\u4ee5\u770b\u5230)</p> <p></p> <p>\u5982\u679c\u9047\u5230\u4e0d\u540c\u7684\u8868\u6709\u76f8\u540c\u540d\u5b57\u7684\u5217\uff0c\u6216\u8005\u9700\u8981\u4f7f\u7528\u540c\u4e00\u4e2a\u8868(\u5982\u4e0a\u56fe)\uff0c\u5c31\u9700\u8981\u4f7f\u7528 \u522b\u540d alias ( <code>from [table] as [alias]</code> )\uff0c\u7136\u540e\u4f7f\u7528 \u70b9\u8868\u8fbe\u5f0f <code>.</code> \u6765\u4f7f\u7528\u4e0d\u540c\u8868/\u522b\u540d\u4e2d\u7684\u76f8\u540c\u540d\u5b57\u7684\u5217</p> <p>John\u5c55\u793a\u4e86\u8054\u63a5\u2018\u591a\u4e2a\u8868\u7684\u5e94\u7528\uff0c</p> <p></p> <p>\u7b5b\u9009\u51fa\u7956\u7236\u548c\u5b59\u5b50\u6bdb\u53d1\u7c7b\u578b\u4e00\u6837\u7684\u6570\u636e</p> <pre><code>select grandog from grandparents, dogs as c, dogs as d\n  where grandog = c.name and\n        granpup = d.name and\n        c.fur = d.fur;\n</code></pre>"},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part3/#2_1","title":"2","text":"<p>sql\u4e2d\u7684\u4e00\u4e9b\u6570\u5b66\u8fd0\u7b97\u76f8\u5173\u7684\u8868\u8fbe\u5f0f\uff0c</p> <p>\u5176\u4e2d\u4e0d\u7b49\u53f7\u6709\u4e24\u79cd <code>&lt;&gt;</code> \u548c <code>!=</code> \uff0c\u800c\u7b49\u53f7\u662f <code>=</code> (\u548cpython\u4e2d\u7684 <code>==</code> \u4e0d\u4e00\u6837)</p>"},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part3/#3_1","title":"3","text":"<p>John\u5c55\u793a\u7684sql\u4e2d\u5b57\u7b26\u4e32string\u7684\u4e00\u4e9b\u7528\u6cd5\uff0c</p> <ul> <li> <p>\u5b57\u7b26\u4e32\u7684 \u8fde\u63a5 concatenation\uff0c\u4f7f\u7528 <code>||</code> \u53ef\u4ee5\u5c06\u4e24\u4e2a\u5b57\u7b26\u4e32\u8fde\u63a5\uff0c</p> </li> <li> <p>\u5b50\u5b57\u7b26\u4e32 <code>substr</code> \uff0c\u7b2c\u4e00\u4e2a\u4f4d\u7f6e\u662f\u5b57\u7b26\u4e32\uff0c\u7b2c\u4e8c\u4e2a\u4f4d\u7f6e\u662f\u8d77\u59cb\u5b57\u7b26\u7684\u4f4d\u7f6e(\u4ece1\u5f00\u59cb)\uff0c\u7b2c\u4e09\u4e2a\u4f4d\u7f6e\u662f\u5b50\u4e32\u957f\u5ea6</p> <p>\u6240\u4ee5\u4e0a\u56fe\u4e2d\uff0c <code>substr(s, 4, 2)</code> \u7684\u7ed3\u679c\u662f <code>lo</code></p> </li> <li> <p>\u5b57\u7b26\u4e32\u4e2d\u5b57\u7b26\u7684\u4f4d\u7f6e <code>instr</code> \uff0c\u7b2c\u4e00\u4e2a\u4f4d\u7f6e\u662f\u5b57\u7b26\u4e32\uff0c\u7b2c\u4e8c\u4e2a\u4f4d\u7f6e\u662f\u8981\u627e\u7684\u5b57\u7b26(\u53ef\u80fd\u5b50\u5b57\u7b26\u4e32\u4e5f\u53ef\u4ee5)\uff0c\u7136\u540e\u8fd4\u56de\u7b2c\u4e00\u4e2a\u5bf9\u5e94\u7684\u4f4d\u7f6e</p> </li> </ul>"},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part3/#lecture-32-qa","title":"Lecture 32 Q&amp;A","text":""},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part3/#1_2","title":"1","text":"<p>\u6709\u4eba\u63d0\u95ee\u5230 \u52a8\u6001\u4f5c\u7528\u57df dynamic scope \uff0cJohn\u89e3\u91ca\u4e86\u8fd9\u4e2a\u6982\u5ff5\u4e00\u4e9b\u76f8\u5173\u4fe1\u606f</p> <p>Quote</p> <p>John:</p> <p>...Dynamic scope, which is different from lexical scope, is what you're used to. Lexical scope basically says that all of the variables within a function can be identified just by looking at the code. This is true in Python; if you have an inner function like the <code>adder</code> function within <code>make_adder</code>, you can see all the names within the <code>adder</code> function in the code. They might be part of the <code>adder</code> function; they might be part of the <code>make_adder</code> function, the enclosing scope, but they're all kind of there. That's what's called lexical scope. It's the most common way in which programming languages work.</p> <p>In other offerings of this course, we talk about an alternative called dynamic scope, which is hardly ever used. It's kind of interesting intellectually, and there are a few cases where it gets used, but mostly it doesn't exist in modern programming languages. So, for that reason, it's fine to just not know about it. But if you want to know about it, the story is basically that when you call a function, that function's environment inherits all of the names that already existed from wherever it was called. That means when you look at the body of the function, it might have names in it that you just can't see anywhere in the code because they're actually defined where that function is called, maybe in a different file or something like that.</p> <p>Dynamic scope allows you to set up your environment and then make a function call, which is pretty different from lexical scope where you have to pass in everything that's relevant. But for that reason, it can simplify some things where, instead of passing in several different arguments, you just kind of have them already, and you don't have to pass any of them in. So, that's kind of the story with dynamic scope. It's just the same as lexical scope, except for the parent of a frame is always the frame from which that function was called, as opposed to where that function was defined.</p> <p>John:</p> <p>...\u52a8\u6001\u4f5c\u7528\u57df\uff08dynamic scope\uff09\u4e0e\u8bcd\u6cd5\u4f5c\u7528\u57df\uff08lexical scope\uff09\u4e0d\u540c\uff0c\u800c\u4f60\u53ef\u80fd\u5df2\u7ecf\u4e60\u60ef\u4e86\u8bcd\u6cd5\u4f5c\u7528\u57df\u3002\u8bcd\u6cd5\u4f5c\u7528\u57df\u57fa\u672c\u4e0a\u8868\u793a\u4e00\u4e2a\u51fd\u6570\u5185\u7684\u6240\u6709\u53d8\u91cf\u90fd\u53ef\u4ee5\u901a\u8fc7\u67e5\u770b\u4ee3\u7801\u6765\u786e\u5b9a\u3002\u5728Python\u4e2d\u662f\u8fd9\u6837\u7684\uff1b\u5982\u679c\u4f60\u6709\u4e00\u4e2a\u5185\u90e8\u51fd\u6570\uff0c\u6bd4\u5982\u5728 <code>make_adder</code> \u5185\u7684 <code>adder</code> \u51fd\u6570\uff0c\u4f60\u53ef\u4ee5\u5728\u4ee3\u7801\u4e2d\u770b\u5230 <code>adder</code> \u51fd\u6570\u4e2d\u7684\u6240\u6709\u540d\u79f0\u3002\u5b83\u4eec\u53ef\u80fd\u662f <code>adder</code> \u51fd\u6570\u7684\u4e00\u90e8\u5206\uff1b\u5b83\u4eec\u53ef\u80fd\u662f <code>make_adder</code> \u51fd\u6570\u7684\u4e00\u90e8\u5206\uff0c\u5373\u5c01\u95ed\u4f5c\u7528\u57df\uff0c\u4f46\u5b83\u4eec\u90fd\u5728\u90a3\u91cc\u3002\u8fd9\u5c31\u662f\u6240\u8c13\u7684\u8bcd\u6cd5\u4f5c\u7528\u57df\uff0c\u8fd9\u662f\u5927\u591a\u6570\u7f16\u7a0b\u8bed\u8a00\u5de5\u4f5c\u7684\u6700\u5e38\u89c1\u65b9\u5f0f\u3002</p> <p>\u5728\u672c\u8bfe\u7a0b\u7684\u5176\u4ed6\u90e8\u5206\uff0c\u6211\u4eec\u8c08\u5230\u4e86\u4e00\u79cd\u53eb\u505a\u52a8\u6001\u4f5c\u7528\u57df\u7684\u66ff\u4ee3\u65b9\u6848\uff0c\u4f46\u5b83\u51e0\u4e4e\u4ece\u4e0d\u88ab\u4f7f\u7528\u3002\u4ece\u667a\u529b\u4e0a\u8bb2\uff0c\u5b83\u6709\u70b9\u6709\u8da3\uff0c\u800c\u4e14\u6709\u4e00\u4e9b\u60c5\u51b5\u4e0b\u4f1a\u7528\u5230\uff0c\u4f46\u5728\u73b0\u4ee3\u7f16\u7a0b\u8bed\u8a00\u4e2d\u5b83\u57fa\u672c\u4e0d\u5b58\u5728\u3002\u56e0\u6b64\uff0c\u51fa\u4e8e\u8fd9\u4e2a\u539f\u56e0\uff0c\u4f60\u53ef\u4ee5\u4e0d\u4e86\u89e3\u5b83\u3002\u4f46\u5982\u679c\u4f60\u60f3\u4e86\u89e3\uff0c\u6545\u4e8b\u57fa\u672c\u4e0a\u662f\uff0c\u5f53\u4f60\u8c03\u7528\u4e00\u4e2a\u51fd\u6570\u65f6\uff0c\u8be5\u51fd\u6570\u7684\u73af\u5883\u7ee7\u627f\u4e86\u4ece\u5b83\u88ab\u8c03\u7528\u7684\u4efb\u4f55\u5730\u65b9\u5df2\u7ecf\u5b58\u5728\u7684\u6240\u6709\u540d\u79f0\u3002\u8fd9\u610f\u5473\u7740\u5f53\u4f60\u67e5\u770b\u51fd\u6570\u7684\u4e3b\u4f53\u65f6\uff0c\u5b83\u53ef\u80fd\u5305\u542b\u5728\u4ee3\u7801\u4e2d\u4f60\u65e0\u6cd5\u770b\u5230\u7684\u540d\u79f0\uff0c\u56e0\u4e3a\u5b83\u4eec\u5b9e\u9645\u4e0a\u662f\u5728\u8c03\u7528\u8be5\u51fd\u6570\u7684\u5730\u65b9\u5b9a\u4e49\u7684\uff0c\u53ef\u80fd\u5728\u4e0d\u540c\u7684\u6587\u4ef6\u4e2d\u7b49\u3002</p> <p>\u52a8\u6001\u4f5c\u7528\u57df\u5141\u8bb8\u4f60\u8bbe\u7f6e\u4f60\u7684\u73af\u5883\u7136\u540e\u8fdb\u884c\u51fd\u6570\u8c03\u7528\uff0c\u8fd9\u4e0e\u8bcd\u6cd5\u4f5c\u7528\u57df\u76f8\u5f53\u4e0d\u540c\uff0c\u5728\u8bcd\u6cd5\u4f5c\u7528\u57df\u4e2d\uff0c\u4f60\u5fc5\u987b\u4f20\u5165\u6240\u6709\u76f8\u5173\u7684\u5185\u5bb9\u3002\u4f46\u56e0\u4e3a\u8fd9\u4e2a\u539f\u56e0\uff0c\u5b83\u53ef\u4ee5\u7b80\u5316\u4e00\u4e9b\u4e8b\u60c5\uff0c\u800c\u4e0d\u662f\u4f20\u9012\u591a\u4e2a\u4e0d\u540c\u7684\u53c2\u6570\uff0c\u4f60\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528\u5b83\u4eec\uff0c\u800c\u65e0\u9700\u4f20\u9012\u5b83\u4eec\u3002\u56e0\u6b64\uff0c\u8fd9\u5c31\u662f\u52a8\u6001\u4f5c\u7528\u57df\u7684\u6545\u4e8b\uff0c\u5b83\u4e0e\u8bcd\u6cd5\u4f5c\u7528\u57df\u57fa\u672c\u76f8\u540c\uff0c\u53ea\u662f\u4e00\u4e2a\u6846\u67b6\u7684\u7236\u7ea7\u59cb\u7ec8\u662f\u8c03\u7528\u8be5\u51fd\u6570\u7684\u6846\u67b6\uff0c\u800c\u4e0d\u662f\u5b9a\u4e49\u8be5\u51fd\u6570\u7684\u5730\u65b9\u3002</p> <p>\u5173\u4e8e\u52a8\u6001\u4f5c\u7528\u57df\uff0c\u6211\u89c9\u5f97\u5173\u952e\u7684\u5730\u65b9\u5728\u4e8e\uff0c\u51fd\u6570\u5185\u90e8\u7684\u53c2\u6570\u662f\u57fa\u4e8e\u88ab\u8c03\u7528\u65f6\u7684\u73af\u5883\u7684</p>"},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part3/#2_2","title":"2","text":"<p>John\u4e3e\u4f8b\u89e3\u91ca\u9053scheme\u4e2d\u8868\u8fbe\u5f0f\u6c42\u503c\u7684\u987a\u5e8f</p> <pre><code>(if (= (+ 1 2) 3) (print 5) (print 6))\n\n--------------------------------------\n    -------------\n     - ------- -\n        - - -     \n                  ---------\n                   ----- -\n\n(define (cube x) (* x x x))\n\n---------------------------\n\n(cube (+ 1 2))\n\n--------------\n ---- -------\n       - - -\n\n                 ---------\n                  - - - -\n</code></pre> <p>\u53ef\u4ee5\u770b\u5230\u662f\u5148\u8fdb\u884c\u8868\u8fbe\u5f0f\u7684\u6c42\u503c\uff0c\u7136\u540e\u518d\u53bb\u5bf9\u8868\u8fbe\u5f0f\u5185\u90e8\u7684\u5b57\u8fdb\u884c\u6c42\u503c</p>"},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part3/#lab-12","title":"Lab 12","text":""},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part3/#1_3","title":"1","text":"<p>\u8fd9\u4e2alab\u4e2d\u9700\u8981\u8fd0\u884c\u547d\u4ee4</p> <pre><code>python sqlite_shell.py --init lab12.sql\n</code></pre> <p>\u6765\u52a0\u8f7d <code>lab12.sql</code> \u6587\u4ef6\u4ee5\u53ca\u542f\u52a8sql\u7684\u7ec8\u7aef\uff0c\u4f46\u662f\u57282020\u5e74\u79cb\u5b63\u8bfe\u7a0b\u7f51\u9875(\u4e0d\u77e5\u4ec0\u4e48\u539f\u56e0)\u7ed9\u51fa\u7684 <code>lab12.zip</code> \u4e2d\uff0c <code>sqlite_shell.py</code> \u662f\u4e2a\u7a7a\u6587\u4ef6\uff0c</p> <p>\u7136\u540e\u6211\u5c31\u53bb\u67e5\u770b\u4e86lab\u7f51\u9875\u4e2d\u7684 <code>Troubleshooting</code> \uff0c\u8fd9\u91cc\u63d0\u5230\u4e86\u53e6\u4e00\u79cd\u66ff\u4ee3\u65b9\u6cd5</p> <p>If running <code>python3 sqlite_shell.py</code> didn't work, you can download a precompiled sqlite directly by following the following instructions and then use <code>sqlite3</code> and <code>./sqlite3</code> instead of <code>python3 sqlite_shell.py</code> based on which is specified for your platform.</p> <p>\u5728SQLite\u5b98\u7f51\u4e0b\u8f7d\u5df2\u7ecf\u7f16\u8bd1\u597d\u7684\u53ef\u6267\u884c\u6587\u4ef6\uff0c\u4e8e\u662f\u6211\u6309\u7167\u7f51\u9875\u4e0a\u7684\u6307\u793a\u4e0b\u8f7d\u597d\u4e86 <code>sqlite-tools-win-x64-3450100.zip</code> \uff0c\u7136\u540e\u80fd\u5728\u7ec8\u7aef\u6b63\u5e38\u6253\u5f00 <code>sqlite.exe</code> \uff0c\u4f46\u662f\u6211\u5728\u4f7f\u7528\u547d\u4ee4</p> <pre><code>./sqlite3 &lt; lab12.sql\n</code></pre> <p>\u548c</p> <pre><code>./sqlite3 --init lab12.sql\n</code></pre> <p>\u52a0\u8f7d <code>lab12.sql</code> \u65f6\uff0c\u90fd\u663e\u793a\u76f8\u540c\u7684\u62a5\u9519</p> <pre><code>-- Loading resources from lab12.sql\nParse error near line 4: no such column: 11/13/2020 14:28:25\n   \"Image 3\", 129                   UNION    SELECT \"11/13/2020 14:28:25\"\n                                      error here ---^\nParse error near line 401: no such column: 11/13/2020 14:28:25\n  True\" , \"False\", \"False\", \"False\" UNION    SELECT \"11/13/2020 14:28:25\"\n                                      error here ---^\n...\n</code></pre> <p>\u4e0d\u77e5\u9053\u662f\u4ec0\u4e48\u539f\u56e0\u3002</p> <p>\u4e4b\u540e\u6211\u5206\u522b\u53bb\u67e5\u770b\u4e8623\u300121\u300119\u5e74\u79cb\u5b63\u7684\u5bf9\u5e94\u7684SQL\u7684lab(lab12\u6216lab13)\uff0c\u8fd9\u51e0\u4e2a\u5b66\u671f\u7684sql lab\u538b\u7f29\u5305\u5185\u7684 <code>sqlite_shell.py</code> \u6587\u4ef6\u90fd\u4e0d\u662f\u7a7a\u6587\u4ef6\uff0c\u5e76\u4e14\u4f3c\u4e4e\u4e09\u4e2a\u5b66\u671f\u7684 <code>sqlite_shell.py</code> \u6587\u4ef6\u54c8\u5e0c\u503c\u90fd\u4e00\u6837(\u8bf4\u660e\u662f\u540c\u4e00\u4e2a\u6587\u4ef6)\uff0c\u4e8e\u662f\u6211\u5c31\u5c0623\u79cb\u5b63\u7684 <code>sqlite_shell.py</code> \u89e3\u538b\u66ff\u6362\u4e86\u539f\u6709\u7684\u6587\u4ef6\uff0c\u6700\u540e\u53ef\u4ee5\u8fd0\u884c\u6700\u521d\u7684\u547d\u4ee4\u3002</p> sqlite_shell.py sqlite_shell.py<pre><code>#!/usr/bin/env python\n\n# Licensed under the MIT license\n\n# A simple SQLite shell that uses the built-in Python adapter.\n\nimport codecs\nimport io\nimport os\nimport sys\nimport sqlite3\nimport time\nimport warnings\n\ntry: FileNotFoundError\nexcept NameError: FileNotFoundError = OSError\n\nif str != bytes: buffer = bytes\nif str != bytes: unicode = str\n\ntry: import msvcrt\nexcept ImportError: msvcrt = None\n\nCP_UTF8 = 65001\npythonapi = None\nif msvcrt:\n    import ctypes\n    (BOOL, DWORD, HANDLE, UINT) = (ctypes.c_long, ctypes.c_ulong, ctypes.c_void_p, ctypes.c_uint)\n    GetConsoleCP = ctypes.WINFUNCTYPE(UINT)(('GetConsoleCP', ctypes.windll.kernel32))\n    SetConsoleCP = ctypes.WINFUNCTYPE(BOOL, UINT)(('SetConsoleCP', ctypes.windll.kernel32))\n    GetConsoleOutputCP = ctypes.WINFUNCTYPE(UINT)(('GetConsoleOutputCP', ctypes.windll.kernel32))\n    SetConsoleOutputCP = ctypes.WINFUNCTYPE(BOOL, UINT)(('SetConsoleOutputCP', ctypes.windll.kernel32))\n    GetConsoleMode = ctypes.WINFUNCTYPE(BOOL, HANDLE, ctypes.POINTER(DWORD), use_last_error=True)(('GetConsoleMode', ctypes.windll.kernel32))\n    GetNumberOfConsoleInputEvents = ctypes.WINFUNCTYPE(BOOL, HANDLE, ctypes.POINTER(DWORD), use_last_error=True)(('GetNumberOfConsoleInputEvents', ctypes.windll.kernel32))\n    ReadConsoleW = ctypes.WINFUNCTYPE(BOOL, HANDLE, ctypes.c_void_p, DWORD, ctypes.POINTER(DWORD), ctypes.c_void_p, use_last_error=True)(('ReadConsoleW', ctypes.windll.kernel32))\n    WriteConsoleW = ctypes.WINFUNCTYPE(BOOL, HANDLE, ctypes.c_void_p, DWORD, ctypes.POINTER(DWORD), ctypes.c_void_p, use_last_error=True)(('WriteConsoleW', ctypes.windll.kernel32))\n    class Py_buffer(ctypes.Structure): _fields_ = [('buf', ctypes.c_void_p), ('obj', ctypes.py_object), ('len', ctypes.c_ssize_t), ('itemsize', ctypes.c_ssize_t), ('readonly', ctypes.c_int), ('ndim', ctypes.c_int), ('format', ctypes.c_char_p), ('shape', ctypes.POINTER(ctypes.c_ssize_t)), ('strides', ctypes.POINTER(ctypes.c_ssize_t)), ('suboffsets', ctypes.POINTER(ctypes.c_ssize_t))] + ([('smalltable', ctypes.c_ssize_t * 2)] if sys.version_info[0] &lt;= 2 else []) + [('internal', ctypes.c_void_p)]\n    try: from ctypes import pythonapi\n    except ImportError: pass\nif pythonapi:\n    def getbuffer(b, writable):\n        arr = Py_buffer()\n        pythonapi.PyObject_GetBuffer(ctypes.py_object(b), ctypes.byref(arr), ctypes.c_int(writable))\n        try: buf = (ctypes.c_ubyte * arr.len).from_address(arr.buf)\n        finally: pythonapi.PyBuffer_Release(ctypes.byref(arr))\n        return buf\n\nENCODING = 'utf-8'\n\nif sys.version_info[0] &lt; 3:\n    class NotASurrogateError(Exception): pass\n    def surrogateescape_handler(exc):\n        # Source: https://github.com/PythonCharmers/python-future/blob/aef57391c0cd58bf840dff5e2bc2c8c0f5b0a1b4/src/future/utils/surrogateescape.py\n        mystring = exc.object[exc.start:exc.end]\n        try:\n            if isinstance(exc, UnicodeDecodeError):\n                decoded = []\n                for ch in mystring:\n                    if isinstance(ch, int):\n                        code = ch\n                    else:\n                        code = ord(ch)\n                    if 0x80 &lt;= code &lt;= 0xFF:\n                        decoded.append(unichr(0xDC00 + code))\n                    elif code &lt;= 0x7F:\n                        decoded.append(unichr(code))\n                    else:\n                        raise NotASurrogateError()\n                decoded = str().join(decoded)\n            elif isinstance(exc, UnicodeEncodeError):\n                decoded = []\n                for ch in mystring:\n                    code = ord(ch)\n                    if not 0xD800 &lt;= code &lt;= 0xDCFF:\n                        raise NotASurrogateError()\n                    if 0xDC00 &lt;= code &lt;= 0xDC7F:\n                        decoded.append(unichr(code - 0xDC00))\n                    elif code &lt;= 0xDCFF:\n                        decoded.append(unichr(code - 0xDC00))\n                    else:\n                        raise NotASurrogateError()\n                decoded = str().join(decoded)\n            else:\n                raise exc\n        except NotASurrogateError:\n            raise exc\n        return (decoded, exc.end)\n    codecs.register_error('surrogateescape', surrogateescape_handler)\n\ndef exception_encode(ex, codec):\n    if str == bytes:\n        reduced = ex.__reduce__()\n        ex = reduced[0](*tuple(map(lambda arg: codec.decode(arg)[0] if isinstance(arg, bytes) else arg, reduced[1])))\n    return ex\n\ndef sql_commands(read_line):\n    delims = ['\"', \"'\", ';', '--']\n    counter = 0\n    in_string = None\n    j = i = 0\n    prev_line = None\n    line = None\n    concat = []\n    while True:\n        if line is None:\n            while True:  # process preprocessor directives\n                counter += 1\n                not_in_the_middle_of_any_input = not in_string and i == j and all(map(lambda chunk_: len(chunk_) == 0, concat))\n                line = read_line(counter - 1, not_in_the_middle_of_any_input, prev_line)\n                empty_string = line[:0] if line is not None else line\n                prev_line = line\n                if not line:\n                    break\n                if not_in_the_middle_of_any_input and line.startswith(\".\"):\n                    yield line\n                    line = None\n                else:\n                    break\n            if not line:\n                break\n            j = i = 0\n        if j &lt; len(line):\n            (j, delim) = min(map(lambda pair: pair if pair[0] &gt;= 0 else (len(line), pair[1]), map(lambda d: (line.find(d, j), d), in_string or delims if in_string != '--' else \"\\n\")))\n            if i &lt; j: concat.append(line[i:j]); i = j\n            if not in_string:\n                if j &lt; len(line):\n                    j += len(delim)\n                    if delim == ';':\n                        i = j\n                        concat.append(line[j : j + len(delim)])    # ensure delimeter is the same type as the string (it may not be due to implicit conversion)\n                        # Eat up any further spaces until a newline\n                        while j &lt; len(line):\n                            delim = line[j:j+1]\n                            if not delim.isspace(): break\n                            j += 1\n                            if delim == \"\\n\": break\n                        if i &lt; j: concat.append(line[i:j]); i = j\n                        yield empty_string.join(concat)\n                        del concat[:]\n                    else:\n                        in_string = delim\n            else:\n                if j &lt; len(line):\n                    ch = line[j:j+1]\n                    assert ch == in_string or in_string == '--'\n                    j += 1\n                    i = j\n                    concat.append(ch)\n                    in_string = None\n        else:\n            if i &lt; j: concat.append(line[i:j]); i = j\n            line = None\n\nclass WindowsConsoleIOMixin(object):\n    # Ctrl+C handling with ReadFile() is messed up on Windows starting on Windows 8... here's some background reading:\n    #   https://stackoverflow.com/a/43260436\n    #   https://github.com/microsoft/terminal/issues/334\n    # We use ReadConsole when we can, so it doesn't affect us, but it's good info to know regardless.\n    def __init__(self, fd):\n        assert isatty(fd), \"file descriptor must refer to a console (note that on Windows, NUL satisfies isatty(), but is not a console)\"\n        self.fd = fd\n        self.handle = msvcrt.get_osfhandle(fd)\n    def fileno(self): return self.fd\n    def isatty(self): return isatty(self.fd)\n    def seekable(self): return False\n    def readable(self): return GetNumberOfConsoleInputEvents(self.handle, ctypes.byref(DWORD(0))) != 0\n    def writable(self): n = DWORD(0); return WriteConsoleW(self.handle, ctypes.c_void_p(), n, ctypes.byref(n), ctypes.c_void_p()) != 0\n    def readwcharsinto(self, buf, n):\n        nr = DWORD(n)\n        old_error = ctypes.get_last_error()\n        ctypes.set_last_error(0)\n        success = ReadConsoleW(self.handle, buf, nr, ctypes.byref(nr), ctypes.c_void_p())\n        error = ctypes.get_last_error()\n        ctypes.set_last_error(old_error)\n        if not success: raise ctypes.WinError(error)\n        ERROR_OPERATION_ABORTED = 995\n        if nr.value == 0 and error == ERROR_OPERATION_ABORTED:\n            # Apparently this can trigger pending KeyboardInterrupts?\n            time.sleep(1.0 / (1 &lt;&lt; 64))\n            raise KeyboardInterrupt()  # If Python doesn't raise it, we can\n        return nr.value\n    def writewchars(self, buf, n):\n        nw = DWORD(n)\n        if not WriteConsoleW(self.handle, buf, nw, ctypes.byref(nw), ctypes.c_void_p()):\n            raise ctypes.WinError()\n        return nw.value\n\nclass WindowsConsoleRawIO(WindowsConsoleIOMixin, io.RawIOBase):\n    def readinto(self, b):\n        wordsize = ctypes.sizeof(ctypes.c_wchar)\n        return self.readwcharsinto(getbuffer(b, True), len(b) // wordsize) * wordsize\n    def write(self, b):\n        wordsize = ctypes.sizeof(ctypes.c_wchar)\n        return self.writewchars(getbuffer(b, False), len(b) // wordsize) * wordsize\n\nclass WindowsConsoleTextIO(WindowsConsoleIOMixin, io.TextIOBase):\n    buf = None\n    buffered = unicode()\n    translate = True\n    def getbuf(self, ncodeunits):\n        buf = self.buf\n        if buf is None or len(buf) &lt; ncodeunits:\n            self.buf = buf = ctypes.create_unicode_buffer(ncodeunits)\n        return buf\n    @staticmethod  # Don't let classes override this... they can override the caller instead\n    def do_read(self, nchars, translate_newlines):\n        prenewline = os.linesep[:-1]\n        newline = os.linesep[-1:]\n        empty = os.linesep[:0]\n        if nchars is None or nchars &lt; -1: nchars = -1\n        ncodeunits = nchars if nchars &gt;= 0 else io.DEFAULT_BUFFER_SIZE  # Unit mismatch, but doesn't matter; we'll loop\n        buf = None\n        istart = 0\n        while True:\n            iend = self.buffered.find(newline, istart, min(istart + nchars, len(self.buffered)) if nchars &gt;= 0 else None) if newline is not None else nchars\n            if iend &gt;= 0: iend += len(newline) if newline is not None else 0\n            if 0 &lt;= iend &lt;= len(self.buffered):\n                break\n            if buf is None: buf = self.getbuf(ncodeunits)\n            istart = len(self.buffered)\n            chunk = buf[:self.readwcharsinto(buf, ncodeunits)]\n            if translate_newlines: chunk = chunk.replace(prenewline, empty)\n            if chunk.startswith('\\x1A'):  # EOF on Windows (Ctrl+Z) at the beginning of a line results in the entire rest of the buffer being discarded\n                iend = istart\n                break\n            # Python 2 and Python 3 behaviors differ on Windows... Python 2's sys.stdin.readline() just deletes the next character if it sees EOF in the middle of a string! I won't emulate that here.\n            self.buffered += chunk  # We're relying on Python's concatenation optimization here... we don't do it ourselves, since we want self.buffered to be valid every iteration in case there is an exception raised\n        result = self.buffered[:iend]\n        self.buffered = self.buffered[iend:]\n        return result\n    def read(self, nchars=-1): return WindowsConsoleTextIO.do_read(self, nchars, None, self.translate)\n    def readline(self, nchars=-1): return WindowsConsoleTextIO.do_read(self, nchars, self.translate)\n    def write(self, text): buf = ctypes.create_unicode_buffer(text); return self.writewchars(buf, max(len(buf) - 1, 0))\n\ndef wrap_windows_console_io(stream, is_output):\n    fd = None\n    if stream is not None and sys.version_info[0] &lt; 3 and msvcrt and (is_output or pythonapi) and isatty(stream):\n        try: fd = stream.fileno()\n        except io.UnsupportedOperation: pass\n    result = stream\n    if fd is not None:\n        f = GetConsoleOutputCP if is_output else GetConsoleCP\n        if not f or f() != CP_UTF8:\n            try:\n                if True or is_output:\n                    result = WindowsConsoleTextIO(fd)\n                else:\n                    result = io.TextIOWrapper((io.BufferedWriter if is_output else io.BufferedReader)(WindowsConsoleRawIO(fd)), 'utf-16-le', 'strict', line_buffering=True)\n            except IOError: pass\n    return result\n\nclass NonOwningTextIOWrapper(io.TextIOWrapper):\n    def __init__(self, base_textiowrapper, **kwargs):\n        assert isinstance(base_textiowrapper, io.TextIOWrapper)\n        self.base = base_textiowrapper  # must keep a reference to this alive so it doesn't get closed\n        super(NonOwningTextIOWrapper, self).__init__(base_textiowrapper.buffer, **kwargs)\n    def close(self):\n        super(NonOwningTextIOWrapper, self).flush()\n\ndef wrap_unicode_stdio(stream, is_writer, encoding):  # The underlying stream must NOT be used directly until the stream returned by this function is disposed of\n    if isinstance(stream, io.TextIOWrapper):\n        stream.flush()  # Make sure nothing is left in the buffer before we re-wrap it\n        none = object()\n        kwargs = {}\n        for key in ['encoding', 'errors', 'newline', 'line_buffering', 'write_through']:\n            value = getattr(stream, 'newlines' if key == 'newline' else key, none)\n            if value is not none:\n                kwargs[key] = value\n        kwargs['encoding'] = encoding\n        result = NonOwningTextIOWrapper(stream, **kwargs)\n    elif 'PYTHONIOENCODING' not in os.environ and str == bytes and stream in (sys.stdin, sys.stdout, sys.stderr):\n        result = (codecs.getwriter if is_writer else codecs.getreader)(encoding)(stream)\n    else:\n        result = stream\n    return result\n\nclass StringEscapeParser(object):\n    def __init__(self):\n        import re\n        self.pattern = re.compile(\"\\\"((?:[^\\\"\\\\n]+|\\\\\\\\.)*)(?:\\\"|$)|\\'([^\\'\\\\n]*)(?:\\'|$)|(\\\\S+)\")\n        self.escape_pattern = re.compile(\"\\\\\\\\(.)\", re.DOTALL)\n    @staticmethod\n    def escape_replacement(m):\n        text = m.group(1)\n        if text == \"\\\\\": text = \"\\\\\"\n        elif text == \"/\": text = \"\\n\"\n        elif text == \"n\": text = \"\\n\"\n        elif text == \"r\": text = \"\\r\"\n        elif text == \"t\": text = \"\\t\"\n        elif text == \"v\": text = \"\\v\"\n        elif text == \"f\": text = \"\\f\"\n        elif text == \"a\": text = \"\\a\"\n        elif text == \"b\": text = \"\\b\"\n        return text\n    def __call__(self, s):\n        escape_pattern = self.escape_pattern\n        escape_replacement = self.escape_replacement\n        result = []\n        for match in self.pattern.finditer(s):\n            [m1, m2, m3] = match.groups()\n            if m1 is not None: result.append(escape_pattern.sub(escape_replacement, m1))\n            if m2 is not None: result.append(m2)\n            if m3 is not None: result.append(escape_pattern.sub(escape_replacement, m3))\n        return result\n\nclass Database(object):\n    def __init__(self, name, *args, **kwargs):\n        self.connection = sqlite3.connect(name, *args, **kwargs)\n        self.cursor = self.connection.cursor()\n        self.name = name  # assign name only AFTER cursor is created\n\ndef isatty(file_or_fd):\n    result = True\n    method = getattr(file_or_fd, 'isatty', None) if not isinstance(file_or_fd, int) else None  # this check is just an optimization\n    if method is not None:\n        try: tty = method()\n        except io.UnsupportedOperation: tty = None\n        result = result and tty is not None and tty\n    method = getattr(file_or_fd, 'fileno', None) if not isinstance(file_or_fd, int) else None  # this check is just an optimization\n    if method is not None:\n        try: fd = method()\n        except io.UnsupportedOperation: fd = None\n        result = result and fd is not None and os.isatty(fd) and (not msvcrt or GetConsoleMode(msvcrt.get_osfhandle(fd), ctypes.byref(DWORD(0))) != 0)\n    return result\n\ndef can_call_input_for_stdio(stream):\n    return stream == sys.stdin and sys.version_info[0] &gt;= 3\n\nclass StdIOProxy(object):\n    # Maybe useful later: codecs.StreamRecoder(bytesIO, codec.decode, codec.encode, codec.streamwriter, codec.streamreader, errors='surrogateescape')\n    def __init__(self, stdin, stdout, stderr, codec, allow_set_code_page):\n        self.codec = codec\n        streams = (stdin, stdout, stderr)\n        for stream in streams:\n            assert isinstance(stream, io.IOBase) or sys.version_info[0] &lt; 3 and isinstance(stream, file) or hasattr(stream, 'mode'), \"unable to determine stream type\"\n            assert not isinstance(stream, io.RawIOBase), \"RAW I/O APIs are different and not supported\"\n        self.streaminfos = tuple(map(lambda stream:\n            (\n                stream,\n                isinstance(stream, io.BufferedIOBase) or isinstance(stream, io.RawIOBase) or not isinstance(stream, io.TextIOBase) and 'b' in stream.mode,\n                isinstance(stream, io.TextIOBase) or not (isinstance(stream, io.BufferedIOBase) or isinstance(stream, io.RawIOBase)) and 'b' not in stream.mode,\n                allow_set_code_page\n            ),\n            streams))\n    @property\n    def stdin(self): return self.streaminfos[0][0]\n    @property\n    def stdout(self): return self.streaminfos[1][0]\n    @property\n    def stderr(self): return self.streaminfos[2][0]\n    def _coerce(self, streaminfo, codec, arg):\n        stream = streaminfo[0]\n        can_binary = streaminfo[1]\n        can_text = streaminfo[2]\n        if not isinstance(arg, bytes) and not isinstance(arg, buffer) and not isinstance(arg, unicode):\n            arg = unicode(arg)\n        if isinstance(arg, bytes) or isinstance(arg, buffer):\n            if not can_binary:\n                arg = codec.decode(arg, 'surrogateescape')[0]\n        elif isinstance(arg, unicode):\n            if not can_text:\n                arg = codec.encode(unicode(arg), 'strict')[0]\n        return arg\n    @staticmethod\n    def _do_readline(stream, allow_set_code_page, *args):\n        new_code_page = CP_UTF8\n        old_code_page = GetConsoleCP() if msvcrt and GetConsoleCP and isatty(stream) else None\n        if old_code_page == new_code_page: old_code_page = None  # Don't change code page if it's already correct...\n        if old_code_page is not None:\n            if not SetConsoleCP(new_code_page):\n                old_code_page = None\n        try:\n            result = stream.readline(*args)\n        finally:\n            if old_code_page is not None:\n                SetConsoleCP(old_code_page)\n        return result\n    @staticmethod\n    def _do_write(stream, allow_set_code_page, *args):\n        new_code_page = CP_UTF8\n        old_code_page = GetConsoleOutputCP() if msvcrt and GetConsoleOutputCP and isatty(stream) else None\n        if old_code_page == new_code_page: old_code_page = None  # Don't change code page if it's already correct...\n        if old_code_page is not None:\n            if not SetConsoleOutputCP(new_code_page):\n                old_code_page = None\n        try:\n            result = stream.write(*args)\n        finally:\n            if old_code_page is not None:\n                SetConsoleCP(old_code_page)\n        return result\n    def _readln(self, streaminfo, codec, prompt):\n        stream = streaminfo[0]\n        can_binary = streaminfo[1]\n        allow_set_code_page = streaminfo[3]\n        if can_call_input_for_stdio(stream) and not can_binary:  # input() can't work with binary data\n            result = self._coerce(streaminfo, codec, \"\")\n            try:\n                result = input(*((self._coerce(streaminfo, codec, prompt),) if prompt is not None else ()))\n                result += self._coerce(streaminfo, codec, \"\\n\")\n            except EOFError: pass\n        else:\n            self.output(*((prompt,) if prompt is not None else ()))\n            self.error()\n            result = StdIOProxy._do_readline(stream, allow_set_code_page)\n        return result\n    def _writeln(self, streaminfo, codec, *args, **kwargs):\n        stream = streaminfo[0]\n        allow_set_code_page = streaminfo[3]\n        flush = kwargs.pop('flush', True)\n        kwargs.setdefault('end', '\\n')\n        kwargs.setdefault('sep', ' ')\n        end = kwargs.get('end')\n        sep = kwargs.get('sep')\n        first = True\n        for arg in args:\n            if first: first = False\n            elif sep is not None:\n                StdIOProxy._do_write(stream, allow_set_code_page, self._coerce(streaminfo, codec, sep))\n            StdIOProxy._do_write(stream, allow_set_code_page, self._coerce(streaminfo, codec, arg))\n        if end is not None:\n            StdIOProxy._do_write(stream, allow_set_code_page, self._coerce(streaminfo, codec, end))\n        if flush: stream.flush()\n    def inputln(self, prompt=None): return self._readln(self.streaminfos[0], self.codec, prompt)\n    def output(self, *args, **kwargs): kwargs.setdefault('end', None); return self._writeln(self.streaminfos[1], self.codec, *args, **kwargs)\n    def outputln(self, *args, **kwargs): return self._writeln(self.streaminfos[1], self.codec, *args, **kwargs)\n    def error(self, *args, **kwargs): kwargs.setdefault('end', None); return self._writeln(self.streaminfos[2], self.codec, *args, **kwargs)\n    def errorln(self, *args, **kwargs): return self._writeln(self.streaminfos[2], self.codec, *args, **kwargs)\n\nclass bytes_comparable_with_unicode(bytes):  # For Python 2/3 compatibility, to allow implicit conversion between strings and bytes when it is safe. (Used for strings like literals which we know be safe.)\n    codec = codecs.lookup('ascii')  # MUST be a safe encoding\n    @classmethod\n    def coerce(cls, other, for_output=False):\n        return cls.codec.encode(other)[0] if not isinstance(other, bytes) else bytes_comparable_with_unicode(other) if for_output else other\n    @classmethod\n    def translate_if_bytes(cls, value):\n        if value is not None and isinstance(value, bytes): value = cls(value)\n        return value\n    def __hash__(self): return super(bytes_comparable_with_unicode, self).__hash__()  # To avoid warning\n    def __eq__(self, other): return super(bytes_comparable_with_unicode, self).__eq__(self.coerce(other))\n    def __ne__(self, other): return super(bytes_comparable_with_unicode, self).__ne__(self.coerce(other))\n    def __lt__(self, other): return super(bytes_comparable_with_unicode, self).__lt__(self.coerce(other))\n    def __gt__(self, other): return super(bytes_comparable_with_unicode, self).__gt__(self.coerce(other))\n    def __le__(self, other): return super(bytes_comparable_with_unicode, self).__le__(self.coerce(other))\n    def __ge__(self, other): return super(bytes_comparable_with_unicode, self).__ge__(self.coerce(other))\n    def __getitem__(self, index): return self.coerce(super(bytes_comparable_with_unicode, self).__getitem__(index), True)\n    def __add__(self, other): return self.coerce(super(bytes_comparable_with_unicode, self).__add__(self.coerce(other)), True)\n    def __iadd__(self, other): return self.coerce(super(bytes_comparable_with_unicode, self).__iadd__(self.coerce(other)), True)\n    def __radd__(self, other): return self.coerce(self.coerce(other).__add__(self), True)\n    def find(self, other, *args): return super(bytes_comparable_with_unicode, self).find(self.coerce(other), *args)\n    def join(self, others): return self.coerce(super(bytes_comparable_with_unicode, self).join(map(self.coerce, others)), True)\n    def startswith(self, other): return super(bytes_comparable_with_unicode, self).startswith(self.coerce(other))\n    def __str__(self): return self.codec.decode(self)[0]\n    if str == bytes:\n        __unicode__ = __str__\n        def __str__(self): raise NotImplementedError()\n\ndef wrap_bytes_comparable_with_unicode_readline(readline):\n    def callback(*args):\n        line = readline(*args)\n        line = bytes_comparable_with_unicode.translate_if_bytes(line)\n        return line\n    return callback\n\ndef main(program, *args, **kwargs):  # **kwargs = dict(stdin=file, stdout=file, stderr=file); useful for callers who import this module\n    import argparse  # slow import (compiles regexes etc.), so don't import it until needed\n    argparser = argparse.ArgumentParser(\n        prog=os.path.basename(program),\n        usage=None,\n        description=None,\n        epilog=None,\n        parents=[],\n        formatter_class=argparse.RawTextHelpFormatter)\n    argparser.add_argument('-version', '--version', action='store_true', help=\"show SQLite version\")\n    argparser.add_argument('-batch', '--batch', action='store_true', help=\"force batch I/O\")\n    argparser.add_argument('-init', '--init', metavar=\"FILE\", help=\"read/process named file\")\n    argparser.add_argument('filename', nargs='?', metavar=\"FILENAME\", help=\"is the name of an SQLite database.\\nA new database is created if the file does not previously exist.\")\n    argparser.add_argument('sql', nargs='*', metavar=\"SQL\", help=\"SQL commnds to execute after opening database\")\n    argparser.add_argument('--readline', action='store', metavar=\"(true|false)\", default=\"true\", choices=(\"true\", \"false\"), help=\"whether to import readline if available (default: %(default)s)\")\n    argparser.add_argument('--self-test', action='store_true', help=\"perform a basic self-test\")\n    argparser.add_argument('--cross-test', action='store_true', help=\"perform a basic test against the official executable\")\n    argparser.add_argument('--unicode-stdio', action='store', metavar=\"(true|false)\", default=\"true\", choices=(\"true\", \"false\"), help=\"whether to enable Unicode wrapper for standard I/O (default: %(default)s)\")\n    argparser.add_argument('--console', action='store', metavar=\"(true|false)\", default=\"true\", choices=(\"true\", \"false\"), help=\"whether to auto-detect and use console window APIs (default: %(default)s)\")\n    argparser.add_argument('--encoding', default=ENCODING, help=\"the default encoding to use (default: %(default)s)\")\n    (stdin, stdout, stderr) = (kwargs.pop('stdin', sys.stdin), kwargs.pop('stdout', sys.stdout), kwargs.pop('stderr', sys.stderr))\n    parsed_args = argparser.parse_args(args)\n    codec = codecs.lookup(parsed_args.encoding or argparser.get_default('encoding'))\n    if parsed_args.self_test: self_test(codec)\n    if parsed_args.cross_test: cross_test(\"sqlite3\", codec)\n    parse_escaped_strings = StringEscapeParser()\n    if parsed_args.unicode_stdio == \"true\":\n        stdin = wrap_unicode_stdio(stdin, False, codec.name)\n        stdout = wrap_unicode_stdio(stdout, True, codec.name)\n        stderr = wrap_unicode_stdio(stderr, True, codec.name)\n    if parsed_args.console == \"true\":\n        stdin = wrap_windows_console_io(stdin, False)\n        stdout = wrap_windows_console_io(stdout, True)\n        stderr = wrap_windows_console_io(stderr, True)\n    allow_set_code_page = sys.version_info[0] &lt; 3 and False  # This is only necessary on Python 2 if we use the default I/O functions instead of bypassing to ReadConsole()/WriteConsole()\n    stdio = StdIOProxy(stdin, stdout, stderr, codec, allow_set_code_page)\n    db = None\n    no_args = len(args) == 0\n    init_sql = parsed_args.sql\n    is_nonpipe_input = stdin.isatty()  # NOT the same thing as TTY! (NUL and /dev/null are the difference)\n    init_show_prompt = not parsed_args.batch and is_nonpipe_input\n    if not parsed_args.batch and isatty(stdin) and (parsed_args.readline == \"true\" or __name__ == '__main__') and parsed_args.readline != \"false\":\n        try:\n            with warnings.catch_warnings():\n                warnings.filterwarnings('ignore', category=DeprecationWarning)\n                import readline\n        except ImportError: pass\n    if parsed_args and parsed_args.version:\n        stdio.outputln(sqlite3.sqlite_version);\n    else:\n        filename = parsed_args.filename\n        if filename is None: filename = \":memory:\"\n        db = Database(filename, isolation_level=None)\n    def exec_script(db, filename, ignore_io_errors):\n        try:\n            with io.open(filename, 'r', encoding=codec.name) as f:  # Assume .sql files are text -- any binary data inside them should be X'' encoded, not embedded directly\n                for command in sql_commands(wrap_bytes_comparable_with_unicode_readline(lambda *args: (lambda s: (s) or None)(f.readline()))):\n                    result = exec_command(db, command, False and ignore_io_errors)\n                    if result is not None:\n                        return result\n        except IOError as ex:\n            stdio.errorln(ex)\n            if not ignore_io_errors: return ex.errno\n    def raise_invalid_command_error(command):\n        if isinstance(command, bytes): command = codec.decode(command)[0]\n        if command.startswith(\".\"): command = command[1:]\n        raise RuntimeError(\"Error: unknown command or invalid arguments:  \\\"%s\\\". Enter \\\".help\\\" for help\" % (command.rstrip().replace(\"\\\\\", \"\\\\\\\\\").replace(\"\\\"\", \"\\\\\\\"\"),))\n    def exec_command(db, command, ignore_io_errors):\n        results = None\n        query = None\n        query_parameters = {}\n        try:\n            if command.startswith(\".\"):\n                args = list(parse_escaped_strings(command))\n                if args[0] in (\".quit\", \".exit\"):\n                    return 0\n                elif args[0] == \".help\":\n                    stdio.error(\"\"\"\n.cd DIRECTORY          Change the working directory to DIRECTORY\n.dump                  Dump the database in an SQL text format\n.exit                  Exit this program\n.help                  Show this message\n.open FILE             Close existing database and reopen FILE\n.print STRING...       Print literal STRING\n.quit                  Exit this program\n.read FILENAME         Execute SQL in FILENAME\n.schema ?PATTERN?      Show the CREATE statements matching PATTERN\n.show                  Show the current values for various settings\n.tables ?TABLE?        List names of tables\n\"\"\".lstrip())\n                elif args[0] == \".cd\":\n                    if len(args) != 2: raise_invalid_command_error(command)\n                    os.chdir(args[1])\n                elif args[0] == \".dump\":\n                    if len(args) != 1: raise_invalid_command_error(command)\n                    foreign_keys = db.cursor.execute(\"PRAGMA foreign_keys;\").fetchone()[0]\n                    if foreign_keys in (0, \"0\", \"off\", \"OFF\"):\n                        stdio.outputln(\"PRAGMA foreign_keys=OFF;\", flush=False)\n                    for line in db.connection.iterdump():\n                        stdio.outputln(line, flush=False)\n                    stdio.output()\n                elif args[0] == \".open\":\n                    if len(args) &lt;= 1: raise_invalid_command_error(command)\n                    filename = args[-1]\n                    for option in args[+1:-1]:\n                        raise ValueError(\"option %s not supported\" % (repr(option),))\n                    try: db.__init__(filename)\n                    except sqlite3.OperationalError as ex:\n                        ex.args = ex.args[:0] + (\"Error: unable to open database \\\"%s\\\": %s\" % (filename, ex.args[0]),) + ex.args[1:]\n                        raise\n                elif args[0] == \".print\":\n                    stdio.outputln(*args[1:])\n                elif args[0] == \".read\":\n                    if len(args) != 2: raise_invalid_command_error(command)\n                    exec_script(db, args[1], ignore_io_errors)\n                elif args[0] == \".schema\":\n                    if len(args) &gt; 2: raise_invalid_command_error(command)\n                    pattern = args[1] if len(args) &gt; 1 else None\n                    query_parameters['type'] = 'table'\n                    if pattern is not None:\n                        query_parameters['pattern'] = pattern\n                    query = \"SELECT sql || ';' FROM sqlite_master WHERE type = :type\" + (\" AND name LIKE :pattern\" if pattern is not None else \"\") + \";\"\n                elif args[0] == \".show\":\n                    if len(args) &gt; 2: raise_invalid_command_error(command)\n                    stdio.errorln(\"    filename:\", db.name)\n                elif args[0] == \".tables\":\n                    if len(args) &gt; 2: raise_invalid_command_error(command)\n                    pattern = args[1] if len(args) &gt; 1 else None\n                    query_parameters['type'] = 'table'\n                    if pattern is not None:\n                        query_parameters['pattern'] = pattern\n                    query = \"SELECT name FROM sqlite_master WHERE type = :type\" + (\" AND name LIKE :pattern\" if pattern is not None else \"\") + \";\"\n                else:\n                    raise_invalid_command_error(args[0])\n            else:\n                query = command\n            if query is not None:\n                results = db.cursor.execute(query if isinstance(query, unicode) else codec.decode(query, 'surrogatereplace')[0], query_parameters)\n        except (RuntimeError, OSError, FileNotFoundError, sqlite3.OperationalError) as ex:\n            stdio.errorln(exception_encode(ex, codec))\n        if results is not None:\n            for row in results:\n                stdio.outputln(*tuple(map(lambda item: item if item is not None else \"\", row)), sep=\"|\", flush=False)\n            stdio.output()\n    if db:\n        if parsed_args and parsed_args.init:\n            if is_nonpipe_input: stdio.errorln(\"-- Loading resources from\", parsed_args.init)\n            exec_script(db, parsed_args.init, False)\n        def read_stdin(index, not_in_the_middle_of_any_input, prev_line):\n            show_prompt = init_show_prompt\n            to_write = []\n            if index &lt; len(init_sql):\n                line = init_sql[index]\n                if not line.startswith(\".\") and not line.rstrip().endswith(\";\"):\n                    line += \";\"\n            elif index == len(init_sql) and len(init_sql) &gt; 0:\n                line = None\n            else:\n                if show_prompt:\n                    if not_in_the_middle_of_any_input:\n                        show_prompt = False\n                        if index == 0:\n                            to_write.append(\"SQLite version %s (adapter version %s)\\nEnter \\\".help\\\" for usage hints.\\n\" % (sqlite3.sqlite_version, sqlite3.version))\n                            if no_args:\n                                to_write.append(\"Connected to a transient in-memory database.\\nUse \\\".open FILENAME\\\" to reopen on a persistent database.\\n\")\n                    if index &gt; 0 and not prev_line:\n                        to_write.append(\"\\n\")\n                    to_write.append(\"%7s \" % (\"sqlite%s&gt;\" % (\"\",) if not_in_the_middle_of_any_input else \"...&gt;\",))\n                try:\n                    line = stdio.inputln(\"\".join(to_write))\n                except KeyboardInterrupt:\n                    line = \"\"\n                    raise  # just kidding, don't handle it for now...\n            return line\n        for command in sql_commands(wrap_bytes_comparable_with_unicode_readline(read_stdin)):\n            result = exec_command(db, command, True)\n            if result is not None:\n                return result\n        if init_show_prompt and len(init_sql) == 0:\n            stdio.outputln()\n\ndef call_program(cmdline, input_text):\n    import subprocess\n    return subprocess.Popen(cmdline, bufsize=0, stdin=subprocess.PIPE, stdout=subprocess.PIPE, stderr=subprocess.PIPE, universal_newlines=False).communicate(input_text)\n\ndef test_query():\n    hexcodec = codecs.lookup('hex_codec')\n    ascii = 'ascii'\n    data1 = b\"\\xD8\\xA2\"\n    data2 = b\"\\x01\\x02\\xFF\\x01\\xFF\\xFE\\xFD\"\n    values = [data1, data2]\n    query_bytes = b'SELECT %s;' % (b\", \".join(map(lambda b: b\"X'%s'\" % (hexcodec.encode(b)[0].upper(),), values)),)\n    expected_bytes = b\"%s\\n\" % (b\"|\".join(values),)\n    return query_bytes, expected_bytes\n\ndef cross_test(sqlite_cmdline, codec):\n    (query_bytes, expected_bytes) = test_query()\n    (official_output, official_error) = call_program(sqlite_cmdline, query_bytes)\n    # We can't use os.linesep here since binaries may belong to different platforms (Win32/MinGW vs. MSYS/Cygwin vs. WSL...)\n    official_output = official_output.replace(b\"\\r\\n\", b\"\\n\")\n    official_error = official_error.replace(b\"\\r\\n\", b\"\\n\")\n    if official_output != expected_bytes:\n        raise sqlite3.ProgrammingError(\"expected bytes are wrong: official %s != expected %s\" % (repr(official_output), repr(expected_bytes)))\n    if official_error:\n        raise sqlite3.ProgrammingError(\"did not expect errors from official binary\")\n\ndef self_test(codec):\n    (query_bytes, expected_bytes) = test_query()\n    if not (lambda stdin, stdout, stderr: not main(sys.argv[0], stdin=stdin, stdout=stdout, stderr=stderr) and stdout.getvalue() == expected_bytes)(io.BytesIO(query_bytes), io.BytesIO(), io.BytesIO()):\n        raise sqlite3.ProgrammingError(\"byte I/O is broken\")\n    if not (lambda stdin, stdout, stderr: not main(sys.argv[0], stdin=stdin, stdout=stdout, stderr=stderr) and stdout.getvalue() == codec.decode(expected_bytes, 'surrogateescape'))(io.StringIO(query_bytes.decode(ascii)), io.StringIO(), io.StringIO()):\n        raise sqlite3.ProgrammingError(\"string I/O is broken\")\n\nif __name__ == '__main__':\n    import sys\n    exit_code = main(*sys.argv)\n    if exit_code not in (None, 0): raise SystemExit(exit_code)\n</code></pre>"},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part3/#2_3","title":"2","text":"<p>Q4\u4e2d\uff0c\u6211\u672c\u6765\u5199\u7684\u662f</p> <pre><code>CREATE TABLE matchmaker AS\n  select pet, song, a.color, b.color from students as a, students as b\n  where a.pet = b.pet and a.song = b.song and a.time &lt; b.time;\n</code></pre> <p>\u4f46\u662f\u663e\u793a\u4e86\u8fd9\u6837\u7684\u62a5\u9519</p> <pre><code>ambiguous column name: pet\nno such table: matchmaker\n</code></pre> <p>\u5206\u6790\u5e94\u8be5\u662f\u7528\u8868\u8054\u63a5\u81ea\u8eab\u5e76\u52a0\u4e0a\u4e86\u522b\u540d\u65f6\uff0c\u5217\u7684\u540d\u79f0\u4e5f\u9700\u8981\u52a0\u4e0a\u522b\u540d\uff0c\u4fee\u6539\u540e\u6700\u540e\u901a\u8fc7</p> code <pre><code>CREATE TABLE matchmaker AS\n  select a.pet, a.song, a.color, b.color from students as a, students as b\n  where a.pet = b.pet and a.song = b.song and a.time &lt; b.time;\n</code></pre>"},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part3/#3_2","title":"3","text":"<p>\u5728\u505aQ5\u65f6\u53d1\u73b0\uff0c\u5982\u679c\u8054\u63a5\u4e86\u591a\u4e2a\u8868\uff0c\u6bcf\u4e2a\u8868\u7684\u5217\u540d\u9700\u8981\u4f7f\u7528 <code>.</code> \u6765\u4f7f\u7528\uff0c\u5373\u4f7f\u8fd9\u4e2a\u5217\u540d\u5728\u5176\u4ed6\u8868\u4e2d\u4e0d\u5b58\u5728\uff0c\u4f8b\u5982</p> <pre><code>select * from students, numbers where '7' = 'True';\n</code></pre> <p>\u8fd9\u884c\u8bed\u53e5\u8fd0\u884c\u540e\u6ca1\u6709\u7ed3\u679c\uff0c\u6216\u8005\u8bf4\u6ca1\u6709\u5339\u914d\u7684\u884c\uff0c</p> <pre><code>select * from students, numbers where students.'7' = 'True';\n</code></pre> <p>\u4f46\u8fd9\u4e00\u884c\u8bed\u53e5\u5c31\u4f1a\u6709\u7ed3\u679c</p> code <pre><code>CREATE TABLE sevens AS\n  select a.seven from students as a, numbers as b where a.time = b.time and a.number = 7 and b.'7' = 'True';\n</code></pre>"},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part3/#lecture-33-aggregation","title":"Lecture 33 Aggregation","text":""},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part3/#1_4","title":"1","text":"<p>sql\u4e2d\u7684\u805a\u5408\u51fd\u6570 Aggregation function \uff0c\u53ef\u4ee5\u4f7f\u7528\u591a\u884c\u7684\u6570\u636e\u8fdb\u884c\u5904\u7406\uff0c\u6bd4\u5982</p> <ul> <li><code>max</code> <code>min</code> \u53d6\u6700\u5927/\u6700\u5c0f</li> <li><code>sum</code> \u53d6\u6240\u6709\u6570\u636e\u7684\u548c</li> <li><code>avg</code> \u53d6\u6240\u6709\u6570\u636e\u7684\u5e73\u5747\u503c</li> <li><code>count</code> \u83b7\u53d6\u6570\u636e\u7684\u4e2a\u6570</li> </ul> <p>\u5728\u4f20\u5165\u53c2\u6570(\u5217\u540d)\u65f6\uff0c\u8fd8\u53ef\u4ee5\u5728\u53c2\u6570\u524d\u6dfb\u52a0 <code>distinct</code> \uff0c\u8868\u793a\u8fd9\u4e00\u5217\u4e2d\u91cd\u590d\u7684\u5143\u7d20\u53ea\u53d6\u7528\u4e00\u4e2a\uff0c\u53ef\u4ee5\u53c2\u8003\u4e0b\u56fe</p> <p></p> <p></p> <p></p> <p>\u805a\u5408\u51fd\u6570\u4e5f\u53ef\u4ee5\u548c\u5176\u4ed6\u666e\u901a\u7684\u8868\u8fbe\u5f0f\u4e00\u8d77\u6df7\u5408\u4f7f\u7528\uff0c\u6765\u83b7\u53d6\u5176\u4ed6\u6709\u7528\u7684\u4fe1\u606f(\u540c\u4e00\u884c\u6570\u636e\u7684\u5176\u4ed6\u4fe1\u606f)\uff0c\u5982\u4e0a\u56fe\u4e2dJohn\u7684\u6f14\u793a\uff0c</p> <p>\u4f46\u6709\u4e9b\u805a\u5408\u51fd\u6570\u7ed3\u679c\u4e0d\u4f1a\u662f\u67d0\u884c\u6570\u636e\u4e2d\u7684\u6570\u503c\uff0c</p> <p>Quote</p> <p>John:</p> <p>...So, you have to be careful about selecting single values in conjunction with aggregations. Some aggregations give you a meaningful value, like <code>min</code> and <code>max</code> ; others don't, like <code>avg</code> .</p> <p>John:</p> <p>...\u5f53\u4f60\u4e0e\u805a\u5408\u51fd\u6570\u4e00\u8d77\u9009\u62e9\u5355\u4e00\u503c\u65f6\uff0c\u4f60\u5fc5\u987b\u5c0f\u5fc3\u3002\u6709\u4e9b\u805a\u5408\u51fd\u6570\u4f1a\u7ed9\u4f60\u4e00\u4e2a\u6709\u610f\u4e49\u7684\u503c\uff0c\u6bd4\u5982 <code>min</code> \u548c <code>max</code> \uff0c\u800c\u5176\u4ed6\u4e00\u4e9b\u5374\u4e0d\u4f1a\uff0c\u6bd4\u5982 <code>avg</code> \u3002</p> <p>\u5e76\u4e14\uff0c\u4eceJohn\u7684demo\u6f14\u793a\u4e2d\u53ef\u4ee5\u770b\u5230\uff0c\u5728\u4f7f\u7528 <code>min</code> \u6216 <code>max</code> \u65f6\uff0c\u5373\u4f7f\u6709\u591a\u884c\u6570\u636e\u90fd\u662f\u6700\u5c0f/\u5927\u503c\uff0c\u4f46\u662f\u5374\u53ea\u662f\u8fd4\u56de\u4e86\u4e00\u4e2a\u7ed3\u679c</p> <pre><code>sqlite&gt; select max(legs), kind from animals;\n4|cat\n</code></pre>"},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part3/#2_4","title":"2","text":"<p>\u5206\u7ec4 group</p> <p>\u53ef\u4ee5\u4f7f\u7528 <code>group by</code> \u8fdb\u884c\u5206\u7ec4\uff0c\u5728 <code>group by</code> \u540e\u5199(\u5355\u4e2a\u6216\u591a\u4e2a)\u5217\u540d\u6216\u8868\u8fbe\u5f0f\uff0c\u5c31\u4f1a\u628a\u6bcf\u4e2a\u76f8\u540c\u7684\u503c\u5bf9\u5e94\u7684\u90a3\u4e00\u884c\u5206\u5230\u540c\u4e00\u4e2a\u7ec4\uff0c\u800c\u5982\u679c\u4f7f\u7528\u805a\u5408\u51fd\u6570\u5c31\u4f1a\u5206\u522b\u4f5c\u7528\u4e8e\u6bcf\u4e2a\u7ec4(\u800c\u4e0d\u662f\u4f5c\u7528\u4e8e\u6574\u4e2a\u8868\u6240\u6709\u884c\u7684\u6570\u636e)\uff0c\u53ef\u4ee5\u53c2\u8003\u4e0a\u56fe\u4e2dJohn\u7684demo\u6f14\u793a</p> <p></p> <p>\u5728\u5206\u7ec4\u65f6\uff0c\u8fd8\u53ef\u4ee5\u4f7f\u7528 <code>having</code> \u6765\u5bf9\u7ec4\u8fdb\u884c\u7b5b\u9009(\u533a\u522b\u4e8e <code>where</code> \u662f\u5bf9\u5355\u884c\u6570\u636e\u8fdb\u884c\u7b5b\u9009)</p>"},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part3/#lecture-33-qa","title":"Lecture 33 Q&amp;A","text":""},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part3/#1_5","title":"1","text":"<p>\u6709\u4eba\u5411John\u63d0\u95ee\u7684mentor13(\u5728\u7f51\u7ad9\u4e0a\u6ca1\u627e\u5230)\u7684\u4e00\u9898\uff0c</p> <p>Quote</p> <p>Fill in <code>skip-list</code> , which takes in a potentially nested list <code>lst</code> and a single-argument filter function <code>filter-fn</code> that returns a boolean when called, and goes through each element in order. It returns a new list that contains all elements that return true when passed into <code>filter-fn</code> . The returned list is not nested.</p> <pre><code>;Doctests\nscm&gt; (skip-list '(1 (3)) even?)\n()\nscm&gt; (skip-list'(1 (2 (3 4) 5) 6 (7) 8 9) odd?)\n(1 3 5 7 9)\n</code></pre> <pre><code>(define (skip-list lst filter-fn)\n    (define (helper lst lst-so-far next)\n        (cond\n            ((null? lst)\n                (if (null? ______)\n                    ______\n                    ______)\n            )\n            ((pair? ______)\n                (______))\n            ((filter-fn (car lst))\n                ______)\n            (else\n                ______)\n        )\n    )\n    (helper ______)\n)\n</code></pre> <p>\u4e8e\u662f\u81ea\u5df1\u5199\u4e86\u4e00\u4e0b\uff0c</p> <p>\u7531\u4e8e\u4e0d\u6e05\u695a <code>null?</code> \u548c <code>pair?</code> \u7684\u4f5c\u7528\uff0c\u4e8e\u662f\u5148\u8bd5\u4e86\u4e00\u4e0b\uff0c\u53d1\u73b0 <code>null?</code> \u53ea\u5728\u4f20\u5165\u7a7a\u5217\u8868 <code>nil</code> \u6216\u8005 <code>()</code> \u65f6\u624d\u8fd4\u56de <code>true</code> \uff0c\u800c <code>pair?</code> \u53ea\u5728\u4f20\u5165\u4e1c\u897f\u4e3a\u5217\u8868\uff0c\u4e14\u5217\u8868\u4e0d\u4e3a\u7a7a\u65f6\u8fd4\u56de <code>true</code> (\u4f20\u5165 <code>(())</code> \u65f6\u4e5f\u8fd4\u56de <code>true</code> )\u3002</p> <p>\u6700\u540e\u5199\u4e86\u597d\u4e00\u4f1a\u624d\u5199\u51fa\u6765\uff0c\u8fd9\u9898\u6709\u70b9\u590d\u6742\uff0c\u56e0\u4e3a\u9700\u8981\u628a\u5d4c\u5957\u7684\u5217\u8868\u7ed9\u5c55\u5f00\uff0c</p> <p>\u6240\u4ee5\u4e3a\u4e86\u5904\u7406\u8fd9\u6837\u7684\u60c5\u51b5\uff0c\u5728\u8fdb\u5165\u66f4\u6df1\u5c42\u7684\u5217\u8868\u65f6\uff0c\u5c31\u9700\u8981\u901a\u8fc7 <code>next</code> \u53c2\u6570\u6765\u6807\u8bb0\u4e4b\u524d\u7684\u4f4d\u7f6e(\u4e00\u5f00\u59cb\u8fd8\u4ee5\u4e3a <code>next</code> \u6307\u7684\u662f\u5217\u8868\u7684\u4e4b\u540e\u7684\u90e8\u5206\uff0c\u4f46\u662f\u60f3\u5230\u8fd9\u6837\u7684\u60c5\u51b5\u4e00\u822c\u4f7f\u7528 <code>rest</code> \u6765\u547d\u540d)\uff0c</p> <p>\u6700\u597d\u60f3\u7684\u5c31\u662f <code>(filter-fn (car lst)</code> \u548c <code>else</code> \u4e24\u884c\uff0c\u56e0\u4e3a\u8fd9\u4e24\u884c\u5c31\u5bf9\u5e94\u666e\u901a\u7684\u60c5\u51b5\uff0c\u5373\u5217\u8868\u4e0d\u662f\u5d4c\u5957\u7684\uff0c\u90a3\u4e48\u5c31\u5927\u6982\u53ef\u4ee5\u5f97\u5230</p> <pre><code>((filter-fn (car lst))\n    (helper (cdr lst) (append lst-so-far (list (car lst))) next))\n(else\n    (helper (cdr lst) lst-so-far next))\n</code></pre> <p>\u8fd9\u91cc\u6211\u4f7f\u7528\u4e86scheme\u4e2d\u7684 <code>append</code> \u51fd\u6570\uff0c\u56e0\u4e3a\u9700\u8981\u5c06\u7b26\u5408\u7b5b\u9009\u6761\u4ef6\u7684\u5143\u7d20\u62fc\u63a5\u5230 <code>lst-so-far</code> \u7684\u5c3e\u90e8\uff0c</p> <p><code>append</code> \u51fd\u6570\u7684\u7528\u6cd5\u662f\u4f20\u5165\u591a\u4e2a\u5217\u8868\uff0c\u5c06\u4ed6\u4eec\u6309\u987a\u5e8f\u62fc\u5230\u4e00\u8d77\uff0c\u6240\u4ee5\u8fd9\u91cc\u7684\u4ee3\u7801\u5c31\u5199\u6210\u4e86 <code>(list (car lst))</code> </p> <p>\u4e00\u5f00\u59cb\u5199\u7684\u662f</p> <pre><code>(append lst-so-far (car lst))\n</code></pre> <p>\u7136\u540e\u8fd0\u884c\u6d4b\u8bd5\u65f6\u5c31\u62a5\u9519\u4e86\ud83d\ude05</p> <pre><code>scm&gt; (skip-list '(1 (3)) even?)\n()\nscm&gt; (skip-list '(1 (2 (3 4) 5) 6 (7) 8 9) odd?)\nTraceback (most recent call last):\n  1     (append lst-so-far (car lst))\nError: argument 0 of append has wrong type (int)\n</code></pre> <p>\u63a5\u7740\u6765\u5904\u7406 <code>pair?</code> \u8fd9\u4e2a\u60c5\u51b5\uff0c\u6839\u636e\u521a\u624d\u7684\u4e24\u79cd\u60c5\u51b5\u5927\u6982\u5c31\u80fd\u731c\u5230\u8fd9\u91cc\u5e94\u8be5\u5c31\u662f\u5224\u65ad\u7b2c\u4e00\u4e2a\u5143\u7d20\u662f\u4e0d\u662f\u5217\u8868\uff0c\u6240\u4ee5 <code>(pair? (car lst))</code> \uff0c</p> <p>\u4e8e\u662f\u5982\u679c\u662f\u7b2c\u4e00\u4e2a\u5143\u7d20\u662f\u5217\u8868\uff0c\u90a3\u4e48\u80af\u5b9a\u9700\u8981\u5411\u5185\u7ee7\u7eed\u8d70\uff0c\u53ef\u4ee5\u731c\u5230\u8fd9\u79cd\u60c5\u51b5\u4e0b\u9012\u5f52\u8c03\u7528\u7684 <code>helper</code> \u7684\u7b2c\u4e00\u4e2a\u53c2\u6570\u4f1a\u662f <code>(car lst)</code> \uff0c</p> <p>\u7136\u540e\u6700\u5173\u952e\u7684\u5730\u65b9\u5728\u4e8e\uff0c\u9700\u8981\u8bb0\u4f4f <code>lst</code> \u4e4b\u540e\u7684\u5143\u7d20\uff0c\u4e00\u5f00\u59cb\u6211\u4ee5\u4e3a <code>helper</code> \u7b2c\u4e09\u4e2a\u53c2\u6570\u5c31\u662f <code>(cdr lst)</code> \uff0c\u4f46\u60f3\u5230\u5982\u679c\u518d\u6709\u4e00\u5c42\u5d4c\u5957\u7684\u5217\u8868\uff0c\u539f\u672c\u7684 <code>next</code> \u5c31\u4f1a\u88ab\u8986\u76d6\u4e22\u5931\uff0c</p> <p>\u6700\u540e\u60f3\u4e86\u597d\u4e45\u7ec8\u4e8e\u60f3\u5230\u5e94\u8be5\u662f\u628a\u4e24\u8005\u5408\u5e76\u5230\u4e00\u8d77(\u8fd9\u6837\u4e24\u8005\u7684\u4fe1\u606f\u90fd\u5305\u542b\u4e86)\uff0c\u6240\u4ee5</p> <pre><code>((pair? (car lst))\n    (helper (car lst) lst-so-far (cons (cdr lst) next)))\n</code></pre> <p>\u4e8e\u662fbase case\u7684\u60c5\u51b5\u5c31\u4e0d\u96be\u60f3\u4e86\uff0c\u7ed3\u675f\u9012\u5f52\u65f6\u8fd4\u56de <code>lst-so-far</code> \u5373\u53ef\uff0c</p> <pre><code>((null? lst)\n\n    (if (null? next)\n        lst-so-far\n        (helper (car next) lst-so-far (cdr next)))\n)\n</code></pre> <p>\u6240\u4ee5 <code>skip-list</code> \u4e2d\u7684\u90a3\u4e00\u884c\u5c31\u662f</p> <pre><code>(helper lst nil nil)\n</code></pre> <p>\u5b8c\u6574\u7684\u7b54\u6848\u4e3a</p> <pre><code>(define (skip-list lst filter-fn)\n    (define (helper lst lst-so-far next)\n        (cond\n            ((null? lst)\n                (if (null? next)\n                    lst-so-far\n                    (helper (car next) lst-so-far (cdr next)))\n            )\n            ((pair? (car lst))\n                (helper (car lst) lst-so-far (cons (cdr lst) next)))\n            ((filter-fn (car lst))\n                (helper (cdr lst) (append lst-so-far (list (car lst))) next))\n            (else\n                (helper (cdr lst) lst-so-far next))\n        )\n    )\n    (helper lst nil nil)\n)\n</code></pre> <p>John\u6700\u540e\u7684\u7b54\u6848\u548c\u6211\u7684\u6709\u4e9b\u533a\u522b\uff0c\u4ed6\u662f\u4f7f\u7528\u4e86 <code>append</code> \u6765\u8fde\u63a5 <code>(cdr lst)</code> \u548c <code>next</code> \uff0c</p> <pre><code>(helper (car lst) lst-so-far (append (cdr lst) next))\n</code></pre> <p>\u800cbase case\u4e2d\u5c31\u662f</p> <pre><code>(if (null? next)\n    lst-so-far\n    (helper next lst-so-far nil))\n</code></pre> code <pre><code>(define (skip-list lst filter-fn)\n    (define (helper lst lst-so-far next)\n        (cond\n            ((null? lst)\n                (if (null? next)\n                    lst-so-far\n                    (helper next lst-so-far nil))\n            )\n            ((pair? (car lst))\n                (helper (car lst) lst-so-far (append (cdr lst) next))\n            ((filter-fn (car lst))\n                (helper (cdr lst) (append lst-so-far (list (car lst))) next))\n            (else\n                (helper (cdr lst) lst-so-far next))\n        )\n    )\n    (helper lst nil nil)\n)\n</code></pre> <p>\u800cJohn\u53c8\u8bf4\u5230\u8fd9\u9898\u63d0\u4f9b\u7684\u4ee3\u7801\u6846\u67b6\u4e2d\u7684 <code>helper</code> \u51fd\u6570\uff0c\u5176\u5b9e\u8ba9\u8fd9\u9898\u53d8\u5f97\u590d\u6742\u4e86\uff0c <code>lst-so-far</code> \u5bf9\u5e94\u7740\u4ece\u5934(\u5de6\u8fb9)\u52a0\u8f7d\u7ed3\u679c\uff0c\u800c\u5982\u679c\u6309\u7167\u4ee5\u5f80\u7684\u601d\u8def\uff0c\u4ece\u672b\u5c3e(\u53f3\u8fb9)\u52a0\u8f7d\u7ed3\u679c\uff0c\u4f1a\u66f4\u7b80\u5355\uff0c\u4ee3\u7801\u662f</p> <pre><code>(define (skip-list s f)\n  (cond ((null? s) nil)\n        ((list? (car s)) (append (skip-list (car s) f) (skip-list (cdr s) f)))\n        ((f (car s)) (cons (car s) (skip-list (cdr s) f)))\n        (else (skip-list (cdr s) f))))\n</code></pre>"},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part3/#2_5","title":"2","text":"<p>\u6709\u4eba\u63d0\u95ee\u768417\u5e74\u79cb\u5b63\u7684\u671f\u672b\u8003\u8bd5\u7b2c6\u9898</p> <p>Quote</p> <p>Simplify! Simplify! For this problem, consider a very small subset of Scheme containing only if expression, <code>(if pred then=part else part)</code> , and atoms including symbols, <code>#t</code> for true, and <code>#f</code> for false. Such expressions can be simplified according to the following transformation rules. Here, <code>P</code> , <code>E1</code> , and <code>E2</code> are Scheme expressions in the subset, and <code>P'</code> , <code>E1'</code> , and <code>E2'</code> are their simplified versions.</p> <ul> <li>The expression <code>(if P E1 E2)</code> simplified to<ul> <li><code>E1'</code> if <code>P'</code> is <code>#t</code> .</li> <li><code>E2'</code> if <code>P'</code> is <code>#f</code> .</li> <li><code>E1'</code> if <code>E1'</code> equals <code>E2</code>\u2018 .</li> <li>Otherwise, an <code>if</code> expression with <code>P'</code> , <code>E1'</code> , and <code>E2'</code> as the predicate, then-part, and else-part.</li> </ul> </li> <li>Any expression, <code>E</code> , simplies to <code>#t</code> if <code>E</code> is known to be true (see below); or to <code>#f</code> if it is known to be false.</li> <li>Finally, in the expression <code>(if P E1 E2)</code> , <code>P'</code> is known to be true while simplifying <code>E1</code> and is known to be false while simplifying <code>E2</code> . Initially, only <code>#t</code> is known to be true and only <code>#f</code> is known to be false.</li> </ul> <p>Fill in the blanks on the next page so that <code>(simp E)</code> returns the simplied version of <code>E</code> according to these rules, and the helper function <code>(simp-ontext E known-t known-f)</code> returns the simpliation of <code>E</code> given that <code>known-t</code> is a list of expressions known to be true, and <code>known-f</code> is a list of expressions known to be false.</p> <p>For convenience, assume that <code>(nth k L)</code> is defined to return element k of list <code>L</code> (where 0 is the first), and that <code>(in? E L)</code> is defined to return true if and only if E is <code>equal?</code> to a member of the list L.</p> <pre><code>scm&gt; (simp '(if a b c))\n(if a b c)\nscm&gt; (simp '(if a b b))\nb\nscm&gt; (simp '(if #t (if #f a b) c))\nb\nscm&gt; (simp '(if a (if a b c) (if a d e)))\n(if a b e)\nscm&gt; (simp '(if (if #t a b) (if a d e) f))\n(if a d f)\nscm&gt; (simp '(if (if a b b) (if b c d) (if e f f)))\n(if b c f)\nscm&gt; (simp '(if (if a b c) (if (if a b c) x y) (if (if a b c) y z)))\n(if (if a b c) x z)\nscm&gt; (simp '(if (if a b c) (if (if a (if a b b) c) d e) f))\n(if (if a b c) d f)\n</code></pre> <pre><code>(define (simp expr)\n  (simp-context expr ______ ______))\n\n(define (simp-context expr known-t known-f)\n  (define simp-expr (if (pair? expr)\n                        (simp-if (nth 1 expr) (nth 2 expr) (nth 3 expr) known-t known-f)\n                        expr))\n  (cond (______ #t)\n        (______ #f)\n        (else ______)))\n\n(define (simp-if pred then-part else-part known-t known-f)\n  (let ((simp-pred (simp-context pred ______)))\n    (define simp-then\n      ______)\n    (define simp-else\n      ______)\n    (cond ((equal? simp-pred #t) simp-then)\n          (______ simp-else)\n          (______ simp-then)\n          (else ______))))\n</code></pre> <p>\u4e8e\u662f\u81ea\u5df1\u5199\u4e86\u4e00\u4e0b</p> <p>\u9898\u76ee\u4e2d\u63d0\u5230\u4f46\u89e3\u91ca\u5668\u4e2d\u5e76\u6ca1\u6709\u7684\u4e24\u4e2a\u51fd\u6570 <code>nth</code> \u548c <code>in?</code> \uff0c\u4e8e\u662f\u6211\u81ea\u5df1\u7528\u4ee3\u7801\u5b9e\u73b0</p> <p><pre><code>(define (nth k L)\n (if (= k 0)\n     (car L)\n     (nth (- k 1) (cdr L))))\n\n(define (in? E L)\n (cond ((null? L) false)\n       ((equal? E (car L)) true)\n       (else (in? E (cdr L)))))\n</code></pre> </p> <p>\u770b\u5b8c\u4e86\u9898\u76ee\u611f\u89c9\u6ca1\u660e\u767d\u9700\u8981\u5e72\u4ec0\u4e48\ud83d\ude05\uff0c\u4f46\u770b\u5230\u63d0\u4f9b\u7684\u4f8b\u5b50\u5c31\u660e\u767d\u4e86\u3002</p> <p>\u9898\u76ee\u662f\u8981\u5b9e\u73b0\u5316\u7b80 <code>if</code> \u8868\u8fbe\u5f0f\u7684\u51fd\u6570\uff0c</p> <pre><code>scm&gt; (simp '(if a b b))\nb\nscm&gt; (simp '(if #t (if #f a b) c))\nb\n</code></pre> <p>\u8fd9\u4e24\u4e2a\u4f8b\u5b50\u5c55\u793a\u4e86\u6700\u7b80\u5355\u7684\u80fd\u5316\u7b80\u7684\u60c5\u51b5\uff0c</p> <ul> <li>\u5982\u679c\u6ee1\u8db3\u548c\u4e0d\u6ee1\u8db3\u6761\u4ef6\uff0c\u8fd4\u56de\u7684\u4e24\u79cd\u7ed3\u679c\u662f\u4e00\u6837\u7684\uff0c\u90a3\u4e48\u76f4\u63a5\u8868\u8fbe\u5f0f\u53ef\u4ee5\u5316\u7b80\u6210\u8fd9\u4e2a\u7ed3\u679c</li> <li>\u5982\u679c\u6761\u4ef6\u53ef\u4ee5\u786e\u5b9a\u4e3a\u771f\uff0c\u90a3\u4e48\u5c31\u8fd4\u56de \u6ee1\u8db3\u65f6\u7684\u8868\u8fbe\u5f0f\u7684\u7b80\u5316\u7248 \uff0c\u800c\u5982\u679c\u53ef\u4ee5\u786e\u5b9a\u4e3a\u5047\uff0c\u5c31\u8fd4\u56de \u4e0d\u6ee1\u8db3\u65f6\u7684\u8868\u8fbe\u5f0f\u7684\u7b80\u5316\u7248</li> </ul> <p>\u800c\u66f4\u590d\u6742\u7684\u60c5\u51b5\u53ef\u4ee5\u53c2\u8003\u7b2c4\u4e2a\u4f8b\u5b50</p> <pre><code>scm&gt; (simp '(if a (if a b c) (if a d e)))\n(if a b e)\n</code></pre> <p>\u4e00\u5f00\u59cb\u770b\u5230\u8fd9\u4e2a\u4f8b\u5b50\u6ca1\u60f3\u660e\u767d\u8981\u5982\u4f55\u5b9e\u73b0\u8fd9\u6837\u7684\u64cd\u4f5c\uff0c\u4f46\u4e4b\u540e\u770b\u5230\u4e86\u4ee3\u7801\u5c31\u660e\u767d\u4e86</p> <p>\u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c\u9700\u8981\u7406\u89e3\u4e00\u4e2a\u5173\u952e\u4e4b\u5904\uff0c <code>(if a b c)</code> \u80fd\u8f6c\u53d8\u6210 <code>b</code> \uff0c\u662f\u56e0\u4e3a\u5982\u679c\u5df2\u7ecf\u8fdb\u5165\u5230\u9700\u8981\u8fd0\u7b97 <code>(if a b c)</code> \u8868\u8fbe\u5f0f\u65f6\uff0c\u8bf4\u660e <code>a</code> \u5df2\u7ecf\u786e\u5b9a\u4e3a\u771f\u4e86(\u56e0\u4e3a\u8054\u7cfb\u5230\u9898\u76ee\u4e2d\u8bf4\u5230 <code>known-t</code> \u548c <code>known-f</code> \u662f \u786e\u5b9a\u4e3a\u771f/\u5047\u7684\u8868\u8fbe\u5f0f\u7684\u5217\u8868)</p> <p>\u7136\u540e\u770b\u4ee3\u7801\uff0c\u6838\u5fc3\u7684\u90e8\u5206\u662f <code>simp-if</code> \u518d\u662f <code>simp-context</code> \uff0c\u770b\u5230 <code>simp-if</code> \u4e2d\u7684\u8fd9\u4e00\u884c\uff0c</p> <pre><code>(let ((simp-pred (simp-context pred ______))) ...)\n</code></pre> <p>\u6211\u5c31\u660e\u767d\u4e86\uff0c<code>simp-context</code> \u662f\u7528\u6765\u5316\u7b80\u5355\u4e2a\u8868\u8fbe\u5f0f\uff0c\u7ee7\u800c\u660e\u767d <code>simp-if</code> \u662f\u7528\u6765\u5316\u7b80 <code>if</code> \u8868\u8fbe\u5f0f\u7684\uff0c</p> <p>\u56e0\u6b64\u5927\u6982\u53ef\u4ee5\u731c\u51fa\uff0c\u8fd9\u4e00\u884c\u7684\u7a7a\u5e94\u8be5\u5c31\u662f\u6700\u7b80\u5355\u7684 <code>known-t known-f</code> \uff0c\u7ee7\u800c\u53c8\u5f88\u5bb9\u6613\u53ef\u4ee5\u60f3\u5230 <code>simp-then</code> \u548c <code>simp-else</code> \u4e5f\u9700\u8981\u8c03\u7528 <code>simp-context</code> \u5e76\u5404\u81ea\u628a <code>pred</code> \u52a0\u4e0a</p> <pre><code>(define simp-then\n  (simp-context then-part (cons simp-pred known-t) known-f))\n(define simp-else\n  (simp-context else-part known-t (cons simp-pred known-f)))\n</code></pre> <p>\u4e8e\u662f\u6700\u540e\u7684 <code>cond</code> \u4e2d\uff0c\u5c31\u5bf9\u5e94\u9898\u76ee\u4e2d\u7684\u56db\u4e2a\u60c5\u51b5\uff0c\u4e0d\u96be\u5199\u51fa\u4ee3\u7801\uff0c\u4f46\u9700\u8981\u6ce8\u610f\u5747\u8981\u4f7f\u7528\u5316\u7b80\u4e4b\u540e\u7684\u8868\u8fbe\u5f0f\uff0c\u5176\u4e2d\u6700\u540e\u4e00\u79cd\u60c5\u51b5\u5bf9\u5e94\u4e0d\u80fd\u5316\u7b80\u7684\u60c5\u51b5\uff0c\u5219\u9700\u8981\u628a\u5404\u4e2a\u90e8\u5206\u91cd\u65b0(\u7528 <code>list</code> )\u62fc\u6210 <code>if</code> \u8868\u8fbe\u5f0f\uff0c</p> <pre><code>(cond ((equal? simp-pred #t) simp-then)\n      ((equal? simp-pred #f) simp-else)\n      ((equal? simp-then simp-else) simp-then)\n      (else (list 'if simp-pred simp-then simp-else)))))\n</code></pre> <p>\u7136\u540e <code>simp-context</code> \u4e2d\uff0c\u5c31\u662f\u9700\u8981\u5224\u65ad\u5316\u7b80\u540e\u7684\u8868\u8fbe\u5f0f <code>simp-expr</code> (\u7ed9\u4e86\u80af\u5b9a\u6709\u7528\u80af\u5b9a\u662f\u8981\u7528\u4e0a\u7684\ud83d\ude05)\u662f\u4e0d\u662f\u5728 <code>known-t</code> \u6216\u8005 <code>known-f</code> \u4e2d\uff0c</p> <pre><code>(cond ((in? simp-expr known-t) #t)\n      ((in? simp-expr known-f) #f)\n      (else simp-expr)))\n</code></pre> <p>\u6700\u540e\u7684 <code>simp</code> \u4e2d\u5c31\u5f88\u5bb9\u6613\u4e86\uff0c</p> <p>\u6240\u4ee5\u5b8c\u6574\u7684\u4ee3\u7801\u662f\u8fd9\u6837</p> <pre><code>(define (simp expr)\n  (simp-context expr '(#t) '(#f)))\n\n(define (simp-context expr known-t known-f)\n  (define simp-expr (if (pair? expr)\n                        (simp-if (nth 1 expr) (nth 2 expr) (nth 3 expr) known-t known-f)\n                        expr))\n  (cond ((in? simp-expr known-t) #t)\n        ((in? simp-expr known-f) #f)\n        (else simp-expr)))\n\n(define (simp-if pred then-part else-part known-t known-f)\n  (let ((simp-pred (simp-context pred known-t known-f)))\n    (define simp-then\n      (simp-context then-part (cons simp-pred known-t) known-f))\n    (define simp-else\n      (simp-context else-part known-t (cons simp-pred known-f)))\n    (cond ((equal? simp-pred #t) simp-then)\n          ((equal? simp-pred #f) simp-else)\n          ((equal? simp-then simp-else) simp-then)\n          (else (list 'if simp-pred simp-then simp-else)))))\n</code></pre> <p>\u611f\u89c9\u8fd9\u9898\u8fd8\u662f\u633a\u6709\u610f\u601d\u7684</p>"},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part3/#3_3","title":"3","text":"<p>\u5728\u6d4b\u8bd5scheme\u4ee3\u7801\u65f6\u53d1\u73b0\uff0c\u8bfe\u7a0b(\u4e4b\u524dhw\u548clab\u4e2d)\u63d0\u4f9b\u7684scheme\u89e3\u91ca\u5668\u4e2d\u5185\u7f6e\u4e86\u52a0\u8f7d <code>.scm</code> \u6587\u4ef6\u7684\u51fd\u6570 <code>load</code> \uff0c</p> <p>\u53d1\u73b0\u4e86\u51e0\u79cd\u52a0\u8f7d\u7684\u65b9\u5f0f\uff0c</p> <ul> <li> <p>1</p> <pre><code>(load \"\u6587\u4ef6\u540d\")\n</code></pre> </li> <li> <p>2</p> <pre><code>(load '\u6587\u4ef6\u540d)\n</code></pre> </li> </ul> <p>\u4ee5\u53ca\uff0c\u5982\u679c\u4e0d\u6dfb\u52a0\u6587\u4ef6\u540e\u7f00\u540d\uff0c\u4f1a\u9ed8\u8ba4\u8ba4\u4e3a\u662fscm\u6587\u4ef6\uff0c\u5373\u4f1a\u81ea\u52a8\u6dfb\u52a0 <code>.scm</code></p> <pre><code>scm&gt; (load \"a\")\nTraceback (most recent call last):\n  0     (load \"a\")\nError: [Errno 2] No such file or directory: 'a.scm' \nscm&gt; (load '../a)  \nTraceback (most recent call last):\n  0     (load (quote ../a))\nError: [Errno 2] No such file or directory: '../a.scm' \n</code></pre>"},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part3/#lecture-34-database","title":"Lecture 34 Database","text":""},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part3/#1_6","title":"1","text":"<p>sql\u4e2d\u521b\u5efa\u6570\u636e\u8868\u7684\u64cd\u4f5c\uff0c</p> <p>John\u8bf4\u5230\uff0c\u53ea\u9700\u8981\u638c\u63e1\u90e8\u5206\u5373\u53ef(\u56fe\u4e2d\u9ed1\u8272\u7684\u90e8\u5206)</p> <p></p> <p>\u5220\u9664\u8868\u7684\u64cd\u4f5c</p> <p></p> <p>\u5728\u8868\u4e0a\u7684\u63d2\u5165\u7684\u64cd\u4f5c</p> <p>John\u7684demo\u6f14\u793a</p> <pre><code>sqlite&gt; create table primes(n, prime);\nsqlite&gt; drop table if exists primes;\nsqlite&gt; select * from primes;\nError: no such table: primes\nsqlite&gt; create table primes(n UNIQUE, prime DEFAULT 1);\nsqlite&gt; select * from primes;\nsqlite&gt; INSERT INTO primes VALUES (2, 1), (3, 1);\nsqlite&gt; select * from primes;\n2|1\n3|1\nsqlite&gt; INSERT INTO primes(n) VALUES (4), (5), (6), (7);\nsqlite&gt; select * from primes;\n2|1\n3|1\n4|1\n5|1\n6|1\n7|1\nsqlite&gt; INSERT INTO primes(n) SELECT n+6 FROM primes;\nsqlite&gt; select * from primes;\n2|1\n3|1\n4|1\n5|1\n6|1\n7|1\n8|1\n9|1\n10|1\n11|1\n12|1\n13|1\nsqlite&gt; INSERT INTO primes(n) SELECT n+12 FROM primes;\nsqlite&gt; select * from primes;\n2|1\n3|1\n4|1\n5|1\n6|1\n7|1\n8|1\n9|1\n10|1\n11|1\n12|1\n13|1\n14|1\n15|1\n16|1\n17|1\n18|1\n19|1\n20|1\n21|1\n22|1\n23|1\n24|1\n25|1\n</code></pre> <p></p> <p>\u66f4\u65b0\u8868\u4e2d\u5217\u7684\u6570\u636e\u7684\u64cd\u4f5c <code>update</code></p> <p>John\u7684demo\u6f14\u793a</p> <pre><code>sqlite&gt; UPDATE primes SET prime=0 WHERE n&gt;2 AND n%2=0;\nsqlite&gt; select * from primes;\n2|1\n3|1\n4|0\n5|1\n6|0\n7|1\n8|0\n9|1\n10|0\n11|1\n12|0\n13|1\n14|0\n15|1\n16|0\n17|1\n18|0\n19|1\n20|0\n21|1\n22|0\n23|1\n24|0\n25|1\nsqlite&gt; UPDATE primes SET prime=0 WHERE n&gt;3 AND n%3=0;\nsqlite&gt; UPDATE primes SET prime=0 WHERE n&gt;5 AND n%5=0;\nsqlite&gt; select * from primes;\n2|1\n3|1\n4|0\n5|1\n6|0\n7|1\n8|0\n9|0\n10|0\n11|1\n12|0\n13|1\n14|0\n15|0\n16|0\n17|1\n18|0\n19|1\n20|0\n21|0\n22|0\n23|1\n24|0\n25|0\n</code></pre> <p></p> <p>\u8868\u4e2d\u5220\u9664\u7684\u64cd\u4f5c</p> <p>John\u7684demo\u6f14\u793a</p> <pre><code>sqlite&gt; DELETE FROM primes WHERE prime=0;\nsqlite&gt; select * from primes;\n2|1\n3|1\n5|1\n7|1\n11|1\n13|1\n17|1\n19|1\n23|1\n</code></pre>"},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part3/#2_6","title":"2","text":"<p>John demo\u6f14\u793a\u4e86\u5982\u4f55\u5728python\u4e2d\u4f7f\u7528sql</p> <p></p> <ul> <li> <p>\u4f7f\u7528 <code>sqlite3.Connection(\"xxx.db\")</code> \u6765\u52a0\u8f7ddb\u6587\u4ef6\uff0c\u7136\u540e\u4f1a\u8fd4\u56de\u4e00\u4e2a <code>Connection</code> \u7c7b\u7684\u5b9e\u4f8b</p> <p>db\u6587\u4ef6\u662f\u6570\u636e\u5e93 database\u6587\u4ef6</p> </li> <li> <p>\u4f7f\u7528 <code>execute</code> \u65b9\u6cd5\u53ef\u4ee5\u6267\u884csql\u7684\u547d\u4ee4/\u8bed\u53e5</p> <p>\u5e76\u4e14\uff0c\u53ef\u4ee5\u6709\u5982\u4e0a\u56fe\u4e2d\u7684\u8fd9\u6837\u7684\u64cd\u4f5c</p> <pre><code>db.execute(\"INSERT INTO nums VALUES (?), (?), (?);\", range(4, 7))\n</code></pre> </li> <li> <p>\u8c03\u7528 <code>execute</code> \u65b9\u6cd5\uff0c\u65b9\u6cd5\u7684\u8fd4\u56de\u503c\u6709 <code>fetchall</code> \u65b9\u6cd5\uff0c\u53ef\u4ee5\u5c06\u672c\u6765\u5e94\u8be5\u663e\u793a\u7684\u6570\u636e\u8f6c\u6362\u6210\u5143\u7ec4\uff0c\u5982\u4e0a\u56fe\u4e2d\u7684</p> <pre><code>print(db.execute(\"SELECT * FROM nums;\").fetchall())\n</code></pre> <pre><code>~/lec$ python3 ex.py\n[(2,), (3,), (4,), (5,), (6,)]\n</code></pre> </li> <li> <p>\u4f7f\u7528 <code>commit</code> \u65b9\u6cd5\u53ef\u4ee5\u5c06\u6570\u636e\u50a8\u5b58\u5230\u5bf9\u5e94\u7684db\u6587\u4ef6\u4e2d\uff0c\u5982\u679c\u6ca1\u6709\u8fd9\u4e2a\u6587\u4ef6\u4f1a\u65b0\u5efa\u4e00\u4e2a\u6587\u4ef6\uff0c\u4e0a\u56feJohn\u7684demo\u6f14\u793a\u4e2d\uff0c\u8fd0\u884c <code>python3 ex.py</code> \u524d\u5df2\u7ecf\u8fd0\u884c <code>rm n.db</code> \u547d\u4ee4</p> </li> </ul>"},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part3/#3_4","title":"3","text":"<p>John\u8bf4\u9053\uff0c\u4e3a\u4e86\u907f\u514d\u5728python\u4e2d\u4f7f\u7528sql\uff0c\u63d2\u5165\u67d0\u4e9b\u7279\u6b8a\u7684\u540d\u5b57\u800c\u5f15\u53d1\u7684\u4e00\u4e9b\u9519\u8bef\uff0c\u8981(\u5982\u4e0a\u56fe)\u4f7f\u7528 <code>execute</code> \u65b9\u6cd5\u6765\u63d2\u5165\u540d\u5b57\uff0c</p> <p>\u800c\u4e0d\u662f\u4f7f\u7528python\u7684\u5b57\u7b26\u4e32\u62fc\u63a5\u548c <code>executescript</code> \u65b9\u6cd5( <code>executescript</code> \u65b9\u6cd5\u4f1a\u6267\u884c\u591a\u884csql\u8bed\u53e5)</p>"},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part3/#lecture-34-qa","title":"Lecture 34 Q&amp;A","text":""},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part3/#1_7","title":"1","text":"<p>John\u89e3\u91ca\u4e4b\u524d\u8bfe\u4e0a\u7528python\u548csql\u6a21\u62df\u8d4c\u573a21\u70b9 Casino Blackjack\u6e38\u620f\u7684\u4ee3\u7801\u4e2d\u7684 <code>sqlite3.Connection</code> \u7c7b\u7684\u5177\u4f53\u4f5c\u7528</p> <p>Quote</p> <p>John:</p> <p>The question is, here are some demos from today's lecture. There's this line that's like \"build a connection\" to some database,</p> <pre><code>db = sqlite3.Connection('number.db')\n</code></pre> <p>and then, you know, we give it a name \u2013 give it any name you want, \"db\" or \"n\" or something like that. What would happen if you evaluated this same expression a second time? Would that give you a new database or the same database, or would it erase the old one? Like, what's the story?</p> <p>And the story is that this name, which describes the name of a file on your file system, is a database that won't ever just get erased. Instead, it's persistent. Even if you quit Python and start Python again, it will retain whatever information was in it before. If you evaluate this expression multiple times, then you just get multiple connections to the same database with the same data in it, and that's okay. Actually, databases are designed to have multiple connections.</p> <p>And what do these connections mean? That means different programs might all be changing the database or querying the database at the same time. But that doesn't mean that the database is going to get refreshed or changed or something like that. It basically just stays there and accumulates information over time. If one program changes it and then another program queries it, that second program is going to see the changes from the first program.</p> <p>So, I think within a particular Python program, there really isn't a good reason to have multiple connections. Usually, those multiple connections come from multiple Python programs, or maybe they're not all Python, but you certainly could do it, and I don't think anything would break.</p> <p>John:</p> <p>\u95ee\u9898\u662f\uff0c\u8fd9\u91cc\u6709\u4eca\u5929\u8bb2\u5ea7\u4e2d\u7684\u4e00\u4e9b\u6f14\u793a\u3002\u6709\u8fd9\u6837\u4e00\u884c\u4ee3\u7801\uff0c\u7c7b\u4f3c\u4e8e\u201c\u5efa\u7acb\u4e00\u4e2a\u8fde\u63a5\u201d\u5230\u67d0\u4e2a\u6570\u636e\u5e93\uff0c</p> <pre><code>db = sqlite3.Connection('number.db')\n</code></pre> <p>\u7136\u540e\uff0c\u4f60\u77e5\u9053\uff0c\u6211\u4eec\u7ed9\u5b83\u4e00\u4e2a\u540d\u5b57 - \u968f\u4fbf\u53d6\u4e2a\u540d\u5b57\uff0c\u6bd4\u5982\u201cdb\u201d\u6216\u201cn\u201d\u4e4b\u7c7b\u7684\u3002\u5982\u679c\u4f60\u591a\u6b21\u8bc4\u4f30\u76f8\u540c\u7684\u8868\u8fbe\u5f0f\u4f1a\u53d1\u751f\u4ec0\u4e48\uff1f\u8fd9\u4f1a\u7ed9\u4f60\u4e00\u4e2a\u65b0\u7684\u6570\u636e\u5e93\u8fd8\u662f\u76f8\u540c\u7684\u6570\u636e\u5e93\uff0c\u6216\u8005\u4f1a\u64e6\u9664\u65e7\u7684\u6570\u636e\u5e93\uff1f\u8fd9\u662f\u4ec0\u4e48\u60c5\u51b5\uff1f</p> <p>\u6545\u4e8b\u662f\uff0c\u8fd9\u4e2a\u63cf\u8ff0\u4f60\u6587\u4ef6\u7cfb\u7edf\u4e0a\u6587\u4ef6\u540d\u7684\u540d\u79f0\u662f\u4e00\u4e2a\u6570\u636e\u5e93\uff0c\u5b83\u4e0d\u4f1a\u88ab\u8f7b\u6613\u64e6\u9664\u3002\u76f8\u53cd\uff0c\u5b83\u662f\u6301\u4e45\u7684\u3002\u5373\u4f7f\u4f60\u9000\u51fa Python \u5e76\u91cd\u65b0\u542f\u52a8 Python\uff0c\u5b83\u5c06\u4fdd\u7559\u4e4b\u524d\u7684\u6240\u6709\u4fe1\u606f\u3002\u5982\u679c\u4f60\u591a\u6b21\u8bc4\u4f30\u8fd9\u4e2a\u8868\u8fbe\u5f0f\uff0c\u90a3\u4e48\u4f60\u53ea\u662f\u5f97\u5230\u5bf9\u540c\u4e00\u4e2a\u6570\u636e\u5e93\u7684\u591a\u4e2a\u8fde\u63a5\uff0c\u5176\u4e2d\u5305\u542b\u76f8\u540c\u7684\u6570\u636e\uff0c\u8fd9\u662f\u53ef\u4ee5\u7684\u3002\u5b9e\u9645\u4e0a\uff0c\u6570\u636e\u5e93\u88ab\u8bbe\u8ba1\u4e3a\u5177\u6709\u591a\u4e2a\u8fde\u63a5\u3002</p> <p>\u90a3\u4e48\u8fd9\u4e9b\u8fde\u63a5\u610f\u5473\u7740\u4ec0\u4e48\uff1f\u8fd9\u610f\u5473\u7740\u4e0d\u540c\u7684\u7a0b\u5e8f\u53ef\u80fd\u4f1a\u540c\u65f6\u66f4\u6539\u6570\u636e\u5e93\u6216\u67e5\u8be2\u6570\u636e\u5e93\u3002\u4f46\u8fd9\u5e76\u4e0d\u610f\u5473\u7740\u6570\u636e\u5e93\u4f1a\u88ab\u5237\u65b0\u3001\u66f4\u6539\u6216\u7c7b\u4f3c\u7684\u4e8b\u60c5\u3002\u5b83\u57fa\u672c\u4e0a\u5c31\u5728\u90a3\u91cc\uff0c\u5e76\u968f\u7740\u65f6\u95f4\u7d2f\u79ef\u4fe1\u606f\u3002\u5982\u679c\u4e00\u4e2a\u7a0b\u5e8f\u66f4\u6539\u4e86\u5b83\uff0c\u7136\u540e\u53e6\u4e00\u4e2a\u7a0b\u5e8f\u67e5\u8be2\u5b83\uff0c\u90a3\u4e48\u7b2c\u4e8c\u4e2a\u7a0b\u5e8f\u5c06\u770b\u5230\u7b2c\u4e00\u4e2a\u7a0b\u5e8f\u7684\u66f4\u6539\u3002</p> <p>\u56e0\u6b64\uff0c\u6211\u8ba4\u4e3a\u5728\u4e00\u4e2a\u7279\u5b9a\u7684 Python \u7a0b\u5e8f\u4e2d\uff0c\u6ca1\u6709\u771f\u6b63\u9700\u8981\u6709\u591a\u4e2a\u8fde\u63a5\u7684\u597d\u7406\u7531\u3002\u901a\u5e38\uff0c\u8fd9\u4e9b\u591a\u4e2a\u8fde\u63a5\u6765\u81ea\u591a\u4e2a Python \u7a0b\u5e8f\uff0c\u6216\u8005\u5b83\u4eec\u5e76\u975e\u5168\u90e8\u90fd\u662f Python\uff0c\u4f46\u4f60\u5f53\u7136\u53ef\u4ee5\u8fd9\u6837\u505a\uff0c\u6211\u8ba4\u4e3a\u4e0d\u4f1a\u6709\u4ec0\u4e48\u95ee\u9898\u3002</p>"},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part3/#2_7","title":"2","text":"<p>\u6709\u4eba\u63d0\u95eescheme\u4e2d\u5728 <code>let</code> \u4e2d\u7684 <code>define</code> \u662f\u5426\u4f1a\u5f71\u54cd\u5230\u5168\u5c40\u6846\u67b6\uff0c</p> <p>John\u8fdb\u884c\u6f14\u793a\uff0c\u53d1\u73b0 <code>let</code> \u8bed\u53e5\u4e2d\u5d4c\u5957\u7684 <code>define</code> \u8bed\u53e5\u5e76\u4e0d\u4f1a\u4fee\u6539\u4e0a\u4e00\u5c42\u6846\u67b6\uff0c\u800c\u53ea\u4f1a\u4fee\u6539 <code>let</code> \u7684\u6846\u67b6</p> <pre><code>scm&gt; (let ((x 1)) (define a x) (+ x 1))\n2\nscm&gt; a\nTraceback (most recent call last):\n  0     a\nError: unknown identifier: a\nscm&gt; (let ((x 1)) (define a x) (+ x a))\n2\n</code></pre>"},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part3/#3_5","title":"3","text":"<p>\u6709\u4eba\u63d0\u95eesql\u4e2d <code>select</code> \u80fd\u4e0d\u80fd\u5d4c\u5957\u5728 <code>where</code> \u4e2d\uff0c\u4e8e\u662fJohn\u6f14\u793a\u4e86\u4e00\u79cd\u7528\u6cd5</p> <pre><code>sqlite&gt; CREATE TABLE numbers AS SELECT 1 AS n UNION SELECT 2 UNION SELECT 3 UNION SELECT 5;\nsqlite&gt; SELECT * FROM numbers;\n1\n2\n3\n5\nsqlite&gt; SELECT * FROM numbers WHERE (SELECT MAX(n) FROM NUMBERS) &gt; n;\n1\n2\n3\n</code></pre> <p>\u4e00\u5f00\u59cb\u8fd8\u6ca1\u7406\u89e3\u8fd9\u662f\u4ec0\u4e48\u610f\u601d\ud83d\ude05\uff0c\u770b\u4e86\u4e00\u4f1a\u4e4b\u540e\u624d\u660e\u767d\uff0c\u62ec\u53f7\u5185\u7684 <code>select</code> \u8bed\u53e5\u5927\u6982\u662f\u4ece\u539f\u6765\u7684\u8868\u521b\u5efa\u4e86\u4e00\u884c\u65b0\u7684\u6570\u636e\uff0c\u7136\u540e\u7528\u8fd9\u884c\u65b0\u7684\u6570\u636e\u5728 <code>where</code> \u4e2d\u8fdb\u884c\u7b5b\u9009\uff0c\u6240\u4ee5\u8fd9\u91cc <code>MAX(n)</code> \u6700\u540e\u83b7\u5f97\u7684\u662f5\uff0c\u800c\u5c0f\u4e8e5\u7684\u53ea\u67091 2 3</p> <p>\u4f46\u662f\u89c9\u5f97\u8fd9\u79cd\u7528\u6cd5\u786e\u5b9e\u5982\u540cJohn\u8bf4\u7684\u4e00\u6837\u6ca1\u4ec0\u4e48\u592a\u5927\u7684\u4f5c\u7528\ud83d\ude05</p>"},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part3/#hw-09","title":"HW 09","text":""},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part3/#1_8","title":"1","text":"<p>Q2\u4e2d\uff0c\u4e00\u5f00\u59cb\u60f3\u7684\u662f\u5224\u65ad\u7236\u6bcd\u5728\u4e0d\u5728 <code>parents</code> \u4e2d\uff0c\u4f46\u6700\u540e\u53d1\u73b0\u6392\u5e8f\u9700\u8981\u6309\u7167\u7236\u6bcd\u7684\u8eab\u9ad8\u6765\u6392\u5e8f\uff0c\u6240\u4ee5\u53d1\u73b0\u53ea\u80fd\u5224\u65ad\u5b50\u5973\u5728\u4e0d\u5728 <code>parents</code> \u4e2d\uff0c</p> <p>\u5e76\u4e14\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u662f\u4ece\u9ad8\u5230\u77ee\u6392\u5e8f\uff0c\u6240\u4ee5\u9700\u8981\u4e58\u4e00\u4e2a <code>-1</code> (\u4e00\u5f00\u59cb\u6ca1\u6ce8\u610f\u7ed3\u679c\u521a\u597d\u53cd\u8fc7\u6765\u4e86\ud83d\ude05)</p> code <pre><code>CREATE TABLE by_parent_height AS\n  select a.child from parents as a, dogs as b\n  where b.name = a.parent order by b.height*-1;\n</code></pre>"},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part3/#2_8","title":"2","text":"<p>Q3\u9898\u76ee\u7684\u63d0\u793a\u4e2d\u63d0\u5230sql\u4e2d\u8fde\u63a5\u5b57\u7b26\u4e32\u8981\u4f7f\u7528 <code>||</code></p> <p>Hint: In order to concatenate two strings into one, use the <code>||</code> operator.</p> code <pre><code>CREATE TABLE siblings AS\n  select a.child as first_child, b.child as second_child from parents as a, parents as b\n  where a.child &lt; b.child and a.parent = b.parent;\n\nCREATE TABLE sentences AS\n  select \"The two siblings, \"||a.first_child||\" plus \"||a.second_child||\" have the same size: \"||b.size \n  from siblings as a, size_of_dogs as b, size_of_dogs as c \n  where a.first_child = b.name and a.second_child = c.name and b.size = c.size;\n</code></pre>"},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part3/#lecture-35-tail-calls","title":"Lecture 35 Tail Calls","text":""},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part3/#1_9","title":"1","text":"<p>John\u4ecb\u7ecd\u4e86\u4e00\u4e0b \u51fd\u6570\u5f0f\u7f16\u7a0b Functional Programming</p> <p></p> <p>\u6240\u6709\u7684\u51fd\u6570\u90fd\u662f\u7eaf\u51fd\u6570\u3002</p> <p>\u6ca1\u6709\u91cd\u65b0\u8d4b\u503c\uff0c\u4e5f\u6ca1\u6709\u53ef\u53d8\u7684\u6570\u636e\u7c7b\u578b\u3002</p> <p>\u540d\u79f0-\u503c\u7684\u7ed1\u5b9a\u662f\u6c38\u4e45\u7684\u3002</p> <p>\u51fd\u6570\u5f0f\u7f16\u7a0b\u7684\u4f18\u52bf\uff1a</p> <ul> <li>\u8868\u8fbe\u5f0f\u7684\u503c\u4e0e\u5b50\u8868\u8fbe\u5f0f\u6c42\u503c\u7684\u987a\u5e8f\u65e0\u5173\u3002</li> <li>\u5b50\u8868\u8fbe\u5f0f\u53ef\u4ee5\u5b89\u5168\u5730\u5e76\u884c\u6216\u6309\u9700(\u60f0\u6027\u5730)\u8fdb\u884c\u6c42\u503c\u3002</li> <li>\u5f15\u7528\u900f\u660e\u6027\uff1a\u5f53\u6211\u4eec\u7528\u5b50\u8868\u8fbe\u5f0f\u7684\u503c\u66ff\u6362\u8be5\u5b50\u8868\u8fbe\u5f0f\u7684\u503c\u65f6\uff0c\u8868\u8fbe\u5f0f\u7684\u503c\u4e0d\u4f1a\u6539\u53d8\u3002</li> </ul>"},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part3/#2_9","title":"2","text":"<p>John\u63d0\u5230\u4e86\u533a\u5206\u51fa\u5c3e\u8c03\u7528\u7684\u4e00\u79cd\u65b9\u6cd5\uff0c</p> <p>Quote</p> <p>John:</p> <p>...It's a distinction that figures out whether, when one procedure is calling another procedure, is there more work to do when that called procedure is finished or not. If there isn't anything else to do, besides just return the value of the expression you call, well then that's a tail call.</p> <p>John:</p> <p>...\u8fd9\u662f\u4e00\u79cd\u533a\u5206\u7684\u65b9\u6cd5\uff0c\u7528\u4e8e\u786e\u5b9a\u5f53\u4e00\u4e2a\u8fc7\u7a0b\u8c03\u7528\u53e6\u4e00\u4e2a\u8fc7\u7a0b\u65f6\uff0c\u8c03\u7528\u7684\u8fc7\u7a0b\u5b8c\u6210\u540e\u662f\u5426\u8fd8\u6709\u5176\u4ed6\u5de5\u4f5c\u8981\u505a\u3002\u5982\u679c\u9664\u4e86\u8fd4\u56de\u4f60\u8c03\u7528\u7684\u8868\u8fbe\u5f0f\u7684\u503c\u4e4b\u5916\u6ca1\u6709\u5176\u4ed6\u4e8b\u60c5\u8981\u505a\uff0c\u90a3\u4e48\u8fd9\u5c31\u662f\u4e00\u4e2a\u5c3e\u8c03\u7528\u3002</p> <p>\u7136\u540e\u53c8\u4ecb\u7ecd\u4e86\u5c3e\u8c03\u7528\u7684\u4e00\u4e9b\u7279\u5f81</p> <p></p>"},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part3/#3_6","title":"3","text":"<p>John\u8bf4\u9053 \u662f\u7ebf\u6027\u9012\u5f52 linear recursion\u4f46\u4e0d\u662f/\u4e0d\u6ee1\u8db3\u5c3e\u8c03\u7528\u683c\u5f0f\u7684\u51fd\u6570\uff0c\u53ef\u4ee5\u88ab\u6539\u5199\u6210\u5c3e\u9012\u5f52/\u5c3e\u8c03\u7528\u7684\u5f62\u5f0f\uff0c\u5e76\u7528\u6c42\u94fe\u8868\u957f\u5ea6\u7684\u51fd\u6570\u6765\u8bf4\u660e</p>"},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part3/#4_1","title":"4","text":"<p>John\u4e3e\u4e86\u51e0\u4e2a\u4f8b\u5b50\u8bf4\u660e\u662f\u5c3e\u9012\u5f52\u7684\u51fd\u6570\u662f\u4ec0\u4e48\u6837\u7684</p> <p></p>"},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part3/#5_1","title":"5","text":"<p>John\u5728\u7528 <code>reduce</code> \u51fd\u6570\u8bb2\u89e3\u5c3e\u8c03\u7528\uff0c\u8bf4\u5728 <code>reduce</code> \u7684\u5b9e\u73b0\u4e2d\uff0c\u9664\u4e86 <code>(procedure start (car s))</code> \u90fd\u662f\u5c3e\u8c03\u7528\uff0c\u800c\u6700\u7ec8 <code>reduce</code> \u662f\u5426\u53ea\u9700\u4f7f\u7528\u56fa\u5b9a\u5927\u5c0f\u7684\u7a7a\u95f4 \u53d6\u51b3\u4e8e <code>procedure</code> \u662f\u5426\u4f7f\u7528\u56fa\u5b9a\u5927\u5c0f\u7684\u7a7a\u95f4</p>"},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part3/#6_1","title":"6","text":"<p>John\u8bb2\u89e3\u5982\u4f55\u5c06 <code>map</code> \u51fd\u6570\u6539\u5199\u6210\u5c3e\u9012\u5f52\u7684\u5f62\u5f0f\uff0c</p> <p>\u5927\u81f4\u7684\u601d\u8def\u662f\uff0c\u5148\u5c06\u5e94\u7528\u51fd\u6570\u5230\u76ee\u6807\u94fe\u8868\u4e0a\uff0c\u5f97\u5230\u4e00\u4e2a\u5012\u5e8f\u7684\u94fe\u8868(\u56e0\u4e3a\u8981\u5c3e\u9012\u5f52\u7684\u8bdd\u5c31\u53ea\u80fd\u4ece\u5c3e\u90e8\u5f00\u59cb)\uff0c\u7136\u540e\u518d\u5c06\u5012\u5e8f\u7684\u94fe\u8868\u7684\u987a\u5e8f\u8f6c\u6362\u56de\u6765( <code>reverse</code> \u51fd\u6570)\uff0c\u800c\u8fd9\u4e2a\u8fc7\u7a0b\u4e5f\u662f\u5c3e\u9012\u5f52\u7684\uff0c\u6240\u4ee5\u6574\u4e2a <code>map</code> \u5c31\u5b9e\u73b0\u4e86\u5c3e\u9012\u5f52\u7684\u5f62\u5f0f</p>"},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part3/#lab-13","title":"Lab 13","text":""},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part3/#1_10","title":"1","text":"<p>\u53d1\u73b0\u8fd9\u4e2alab\u7684zip\u4e2d\u7684 <code>sqlite_shell.py</code> \u6587\u4ef6\u548clab12\u4e2d\u4e00\u6837\u662f\u7a7a\u7684</p>"},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part3/#2_10","title":"2","text":"<p>\u5728\u5199Q3\u65f6\uff0c\u53d1\u73b0 <code>where</code> \u653e\u5728 <code>group by</code> \u4e4b\u540e\u4f1a\u62a5\u9519\uff0c</p> <pre><code>near \"where\": syntax error\n</code></pre> <p>\u7136\u540e\u8c03\u6574\u4e86\u4e00\u4e0b\u987a\u5e8f\u4e4b\u540e\u5c31\u597d\u4e86</p> code <pre><code>create table helper as\n  select a.name as name, min(a.MSRP/a.rating), b.store as store \n  from products as a, lowest_prices as b where a.name = b.item group by category;\n\nCREATE TABLE shopping_list AS\n  -- SELECT \"REPLACE THIS LINE WITH YOUR SOLUTION\";\n  select name, store from helper;\n</code></pre>"},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part3/#lecture-36-macros","title":"Lecture 36 Macros","text":""},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part3/#1_11","title":"1","text":"<p>\u5173\u4e8e \u5b8f Macro \u7684\u4e00\u4e9b\u8bf4\u660e</p> <p>\u5b8f\u8c03\u7528\u8868\u8fbe\u5f0f\u7684\u6c42\u503c\u8fc7\u7a0b:</p> <ul> <li>\u8ba1\u7b97\u64cd\u4f5c\u7b26\u5b50\u8868\u8fbe\u5f0f\uff0c\u5176\u7ed3\u679c\u4e3a\u4e00\u4e2a\u5b8f</li> <li>\u5bf9\u64cd\u4f5c\u6570\u8868\u8fbe\u5f0f\u8fdb\u884c\u8c03\u7528\uff0c\u800c\u4e0d\u5148\u5bf9\u5b83\u4eec\u8fdb\u884c\u6c42\u503c</li> <li>\u8ba1\u7b97\u4ece\u5b8f\u8fc7\u7a0b\u8fd4\u56de\u7684\u8868\u8fbe\u5f0f</li> </ul>"},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part3/#2_11","title":"2","text":"<p>John\u6f14\u793a\u4e86\u5982\u679c\u4e0d\u4f7f\u7528\u5b8f\uff0c\u5c31\u65e0\u6cd5\u5b9e\u73b0 <code>twice</code> \u51fd\u6570\uff0c</p>"},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part3/#3_7","title":"3","text":"<p>John\u6f14\u793a\u4e86\u4f7f\u7528 <code>define-macro</code> \u548c <code>define</code> \u5e94\u7528\u4e8e\u540c\u6837\u7684\u4ee3\u7801\u7684\u4e0d\u540c\u6548\u679c</p> <p></p> <p></p>"},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part3/#lab-14","title":"Lab 14","text":""},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part3/#1_12","title":"1","text":"<p>Q1\uff0c\u9700\u8981\u6ce8\u610f\u6ca1\u6709\u8fd4\u56de\u503c(\u4ece\u6d4b\u8bd5\u6587\u6863\u4e2d\u53ef\u4ee5\u5f97\u77e5)</p> code <pre><code>def prune_min(t):\n    \"*** YOUR CODE HERE ***\"\n    if t.is_leaf():\n        return\n    min_b = min(t.branches, key=lambda t: t.label)\n    prune_min(min_b)\n    t.branches = [min_b]\n</code></pre>"},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part3/#2_12","title":"2","text":"<p>Q2\u8fd9\u9898\u6ca1\u6709\u7ed9\u4f8b\u5b50\uff0c\u6240\u4ee5\u5bfc\u81f4\u6211\u4e00\u5f00\u59cb\u6ca1\u7406\u89e3\u51c6\u786e\u9898\u76ee\u7684\u610f\u601d\ud83d\ude05\uff0c\u7406\u89e3\u51c6\u786e\u4e86\u5c31\u4e0d\u662f\u5f88\u96be\u4e86\uff0c</p> <p>\u8fd9\u662f\u4e24\u4e2a\u6d4b\u8bd5\u7684\u4f8b\u5b50</p> <pre><code>scm&gt; (car (split-at '(1 2 3 4 5) 3))\n(1 2 3)\nscm&gt; (cdr (split-at '(1 2 3 4 5) 3))\n(4 5)\n</code></pre> code <pre><code>(define (split-at lst n)\n  'YOUR-CODE-HERE\n  (if (or (null? lst) (= n 0))\n      (cons nil lst)\n      (let ((rest (split-at (cdr lst) (- n 1))))\n           (cons (cons (car lst) (car rest)) (cdr rest))))\n)\n</code></pre>"},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part3/#3_8","title":"3","text":"<p>Q3\u8fd9\u9898\u6709\u70b9\u96be\u60f3\uff0c\u6211\u60f3\u4e86\u4e00\u4f1a\u624d\u60f3\u51fa\u4ee3\u7801</p> code <pre><code>(define (compose-all funcs)\n  'YOUR-CODE-HERE\n  (if (null? funcs)\n      (lambda (x) x)\n      (lambda (x) ((compose-all (cdr funcs)) ((car funcs) x))))\n)\n</code></pre>"},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part3/#4_2","title":"4","text":"<p>Q4\u8fd9\u9898\u633a\u96be\u7684\uff0c\u60f3\u4e86\u597d\u4e45\u624d\u60f3\u51fa\u6765</p> <p>\u4e00\u5f00\u59cb\u4ee5\u4e3a\uff0c\u9700\u8981\u5c06\u5217\u8868\u4e2d\u7684\u5143\u7d20\u4e00\u4e2a\u4e00\u4e2a\u9012\u5f52\u5730\u53bb\u9664\u6765\u5224\u65ad(\u53ef\u80fd\u662fscheme\u5199\u591a\u4e86\u7684\u539f\u56e0\ud83d\ude05)\uff0c\u7136\u540e\u5c1d\u8bd5\u4e86\u5f88\u4e45\u90fd\u6ca1\u6709\u601d\u8def\uff0c</p> <p>\u5728\u91cd\u65b0\u7406\u89e3\u8fd9\u4e2a\u4f8b\u5b50\u65f6\uff0c</p> <pre><code>&gt;&gt;&gt; num_splits([1, 5, 4], 0)  # splits to [1, 4] and [5]\n1\n</code></pre> <p>\u7a81\u7136\u60f3\u5230 <code>1 - 5 + 4 = 0</code> \uff0c\u7136\u540e\u5c31\u60f3\u5230\u4e86\u53ef\u4ee5\u901a\u8fc7\u7ed9\u6570\u5b57\u52a0\u4e0a\u6b63\u8d1f\u53f7\u6765\u5224\u65ad\u5206\u5230\u54ea\u4e00\u8fb9\uff0c\u4e8e\u662f\u5199\u4e86\u4e00\u4e2a\u8f85\u52a9\u51fd\u6570</p> <pre><code>def spliter(s, d, current_diff):\n    if s == []:\n        return 1 if current_diff &gt;= 0 and current_diff &lt;= d else 0\n    else:\n        return spliter(s[1:], d, current_diff + s[0]) + spliter(s[1:], d, current_diff - s[0])\n</code></pre> <p>\u5224\u65ad <code>current_diff &gt;= 0</code> \u672c\u6765\u662f\u60f3\u901a\u8fc7\u8fd9\u6837\u6765\u53bb\u6389\u76f8\u53cd\u987a\u5e8f/\u8fb9\u7684\u4e00\u534a(\u987a\u5e8f\u76f8\u53cd\u7684\u8bdd\u6700\u540e\u7684\u5dee\u503c\u5e94\u8be5\u521a\u597d\u662f\u76f8\u53cd\u6570)\uff0c\u4f46\u662f\u5c31\u5728 <code>num_splits([1, 5, 4], 0)</code> \u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c\u91cd\u590d\u7684\u53e6\u4e00\u534a\u5dee\u503c\u4e5f\u521a\u597d\u662f0\uff0c\u4e8e\u662f\u6700\u540e\u5f97\u5230\u4e862</p> <p>\u7136\u540e\u601d\u8003\u4e86\u4e00\u4f1a\u540e\uff0c\u4fee\u6539\u6210\u4e86\u76f4\u63a5\u7b97\u51fa\u5305\u542b\u91cd\u590d\u7684\u6240\u6709\u7684\u60c5\u51b5\uff0c\u518d\u96642\u5c31\u597d\u4e86</p> code <pre><code>def num_splits(s, d):\n    \"*** YOUR CODE HERE ***\"\n    def spliter(s, d, current_diff):\n        if s == []:\n            return 1 if abs(current_diff) &lt;= d else 0\n        else:\n            return spliter(s[1:], d, current_diff + s[0]) + spliter(s[1:], d, current_diff - s[0])\n    return spliter(s, d, 0) // 2\n</code></pre>"},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part3/#4_3","title":"4","text":"<p>Q6\uff0c\u8fd9\u9898\u9898\u76ee\u770b\u7740\u6bd4\u8f83\u590d\u6742\uff0c\u4f46\u5176\u5b9e\u5927\u6982\u7684\u4ee3\u7801\u6846\u67b6\u57fa\u672c\u4e0a\u90fd\u5df2\u7ecf\u5199\u597d\u4e86\uff0c\u9700\u8981\u586b\u5145\u7684\u90e8\u5206\u601d\u8def\u548c\u4e4b\u524d\u7684\u4e00\u9898\u5927\u81f4\u4e0a\u662f\u7c7b\u4f3c\u7684\uff0c\u6240\u4ee5\u6700\u540e\u5199\u8d77\u6765\u8fd8\u662f\u6bd4\u8f83\u597d\u5199\u7684</p> <p>\u5199\u7684\u8fc7\u7a0b\u4e2d\u53d1\u73b0\uff0cpython\u4e2d\u5b57\u7b26\u4e32\u4e0d\u80fd\u7528 \u5207\u7247\u8d4b\u503c</p> <pre><code>&gt;&gt;&gt; align_skeleton(skeleton=\"i\", code=\"i\")\nTraceback (most recent call last):\n  File \"C:\\Courses\\cs61a\\lab\\lab14\\lab14.py\", line 189, in align_skeleton\n    result, cost = helper_align(0, 0)\n  File \"C:\\Courses\\cs61a\\lab\\lab14\\lab14.py\", line 178, in helper_align\n    match_match[0:0] = skel_char\nTypeError: 'str' object does not support item assignment\n</code></pre> code <pre><code>def align_skeleton(skeleton, code):\n    \"\"\"\n    Aligns the given skeleton with the given code, minimizing the edit distance between\n    the two. Both skeleton and code are assumed to be valid one-line strings of code. \n\n    &gt;&gt;&gt; align_skeleton(skeleton=\"\", code=\"\")\n    ''\n    &gt;&gt;&gt; align_skeleton(skeleton=\"\", code=\"i\")\n    '+[i]'\n    &gt;&gt;&gt; align_skeleton(skeleton=\"i\", code=\"\")\n    '-[i]'\n    &gt;&gt;&gt; align_skeleton(skeleton=\"i\", code=\"i\")\n    'i'\n    &gt;&gt;&gt; align_skeleton(skeleton=\"i\", code=\"j\")\n    '+[j]-[i]'\n    &gt;&gt;&gt; align_skeleton(skeleton=\"x=5\", code=\"x=6\")\n    'x=+[6]-[5]'\n    &gt;&gt;&gt; align_skeleton(skeleton=\"return x\", code=\"return x+1\")\n    'returnx+[+]+[1]'\n    &gt;&gt;&gt; align_skeleton(skeleton=\"while x&lt;y\", code=\"for x&lt;y\")\n    '+[f]+[o]+[r]-[w]-[h]-[i]-[l]-[e]x&lt;y'\n    &gt;&gt;&gt; align_skeleton(skeleton=\"def f(x):\", code=\"def g(x):\")\n    'def+[g]-[f](x):'\n    \"\"\"\n    skeleton, code = skeleton.replace(\" \", \"\"), code.replace(\" \", \"\")\n\n    def helper_align(skeleton_idx, code_idx):\n        \"\"\"\n        Aligns the given skeletal segment with the code.\n        Returns (match, cost)\n            match: the sequence of corrections as a string\n            cost: the cost of the corrections, in edits\n        \"\"\"\n        if skeleton_idx == len(skeleton) and code_idx == len(code):\n            return \"\", 0\n        if skeleton_idx &lt; len(skeleton) and code_idx == len(code):\n            edits = \"\".join([\"-[\" + c + \"]\" for c in skeleton[skeleton_idx:]])\n            return edits, len(skeleton) - skeleton_idx\n        if skeleton_idx == len(skeleton) and code_idx &lt; len(code):\n            edits = \"\".join([\"+[\" + c + \"]\" for c in code[code_idx:]])\n            return edits, len(code) - code_idx\n\n        possibilities = []\n        skel_char, code_char = skeleton[skeleton_idx], code[code_idx]\n        # Match\n        if skel_char == code_char:\n            match_match, cost_match = helper_align(skeleton_idx + 1, code_idx + 1)\n            match_match = skel_char + match_match\n            possibilities .append((match_match, cost_match))\n        # Insert\n        match_insert, cost_insert = helper_align(skeleton_idx, code_idx + 1)\n        # match_insert[0:0] = \"+[\" + code_char + \"]\"\n        match_insert = \"+[\" + code_char + \"]\" + match_insert\n        possibilities.append((match_insert, cost_insert + 1))\n        # Delete\n        match_delete, cost_delete = helper_align(skeleton_idx + 1, code_idx)\n        # match_delete[0:0] = \"-[\" + skel_char + \"]\"\n        match_delete = \"-[\" + skel_char + \"]\" + match_delete\n        possibilities.append((match_delete, cost_delete + 1))\n        return min(possibilities, key=lambda x: x[1])\n    result, cost = helper_align(0, 0)\n    return result\n</code></pre>"},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part3/#5_2","title":"5","text":"<p>Q8\uff0c\u8fd9\u9898\u4e00\u5f00\u59cb\u6ca1\u770b\u89c1\u9700\u8981\u7528 <code>foldl</code> \u6216\u8005 <code>foldr</code> \u6765\u5b9e\u73b0\uff0c\u6240\u4ee5\u76f4\u63a5\u5199\u51fa\u6765\u4e86</p> <pre><code>def filterl(lst, pred):\n    \"*** YOUR CODE HERE ***\"\n    if lst is Link.empty:\n        return lst\n    elif pred(lst.first):\n        return Link(lst.first, filterl(lst.rest, pred))\n    else:\n        return filterl(lst.rest, pred)\n</code></pre> <p>\u4e4b\u540e\u7528 <code>foldl</code> \u5b9e\u73b0\u4e86\uff0c\u4f46\u662f\u611f\u89c9\u7528\u4e86 <code>foldl</code> \u7684\u6211\u7684\u4ee3\u7801\u5e76\u6ca1\u6709\u6bd4\u4e4b\u524d\u7b80\u5355\ud83d\ude05</p> <pre><code>def filterl(lst, pred):\n    \"*** YOUR CODE HERE ***\"\n    def fn_pred(r, v):\n        if not pred(v):\n            return r\n        elif r is Link.empty:\n            return Link(v, r)\n        else:\n            r.rest = Link(v)\n            return r\n    return foldl(lst, fn_pred, Link.empty)\n</code></pre> <p>\u7136\u540e\u60f3\u4e86\u60f3\uff0c\u6309\u7167\u9898\u76ee\u7684\u610f\u601d\uff0c\u4f7f\u7528 <code>foldl</code> \u6216\u8005 <code>foldr</code> \u5e94\u8be5\u662f\u80fd\u7b80\u5316\u4ee3\u7801\uff0c\u53c8\u60f3\u5230 <code>foldl</code> \u4e2d\u662f\u5c06\u94fe\u8868\u4e2d\u7684\u5143\u7d20\u4ece\u5de6\u5230\u53f3\u5e94\u7528\u5230 <code>fn</code> \u4e2d\uff0c\u6240\u4ee5 <code>foldr</code> \u51fd\u6570\u5c31\u5e94\u8be5(\u521a\u597d\u76f8\u53cd)\u662f\u4ece\u53f3\u5230\u5de6\u5e94\u7528\u94fe\u8868\u4e2d\u7684\u5143\u7d20\uff0c\u4e8e\u662f\u7528\u4ee3\u7801\u5b9e\u73b0\u4e86 <code>foldr</code> </p> <pre><code>def foldr(link, fn, z):\n    \"\"\" Right fold \"\"\"\n    if link is Link.empty:\n        return z\n    return fn(foldr(link.rest, fn, z), link.first)\n</code></pre> <p>\u7136\u540e\u7528 <code>foldr</code> \u5b9e\u73b0\u4e86\u8fd9\u9898(\u8fd9\u6837\u5c31\u7b80\u5355\u591a\u4e86\ud83d\ude0a)</p> <pre><code>def filterl(lst, pred):\n    \"*** YOUR CODE HERE ***\"\n    return foldr(lst, lambda r, v: Link(v, r) if pred(v) else r, Link.empty)\n</code></pre> <p>\u4e4b\u540e\u53bb21\u5e74\u79cb\u5b63\u5b66\u671f\u7684lab14\u4e2d\uff0c\u770b\u5230\u4e86\u5b9e\u73b0 <code>foldr</code> \u51fd\u6570\u7684\u9898\u76eeFold Right</p> <pre><code>def foldr(link, fn, z):\n    \"\"\" Right fold\n    &gt;&gt;&gt; lst = Link(3, Link(2, Link(1)))\n    &gt;&gt;&gt; foldr(lst, sub, 0) # (3 - (2 - (1 - 0)))\n    2\n    &gt;&gt;&gt; foldr(lst, add, 0) # (3 + (2 + (1 + 0)))\n    6\n    &gt;&gt;&gt; foldr(lst, mul, 1) # (3 * (2 * (1 * 1)))\n    6\n    \"\"\"\n    \"*** YOUR CODE HERE ***\"\n</code></pre> <p>\u53d1\u73b0\u5c31\u8ddf\u6211\u521a\u624d\u60f3\u7684\u4e00\u6837\uff0c</p> <p>\u4e0d\u8fc7\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c <code>fn</code> \u7684\u4e24\u4e2a\u53c2\u6570\u7684\u4f4d\u7f6e\u548c\u6211\u4e4b\u524d\u7684\u5b9e\u73b0\u662f\u53cd\u8fc7\u6765\u7684\uff0c\u56e0\u6b64\u6700\u540e <code>foldr</code> \u548c <code>filterl</code> \u6b63\u786e\u7684\u5b9e\u73b0\u4ee3\u7801\u5e94\u8be5\u662f</p> <pre><code>def foldr(link, fn, z):\n    \"\"\" Right fold \"\"\"\n    if link is Link.empty:\n        return z\n    return fn(link.first, foldr(link.rest, fn, z))\n</code></pre> <pre><code>def filterl(lst, pred):\n    \"*** YOUR CODE HERE ***\"\n    return foldr(lst, lambda v, r: Link(v, r) if pred(v) else r, Link.empty)\n</code></pre>"},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part3/#6_2","title":"6","text":"<p>Q9\uff0c\u8fd9\u9898\u6709\u70b9\u610f\u601d\uff0c\u9898\u76ee\u4e2d\u8bf4\u9700\u8981\u7528\u5230\u4e4b\u524d\u5b9e\u73b0\u7684 <code>foldl</code> \u51fd\u6570\uff0c\u5e76\u4e14\u53ea\u9700\u8981\u4e00\u884c\u4ee3\u7801\u5c31\u53ef\u4ee5\u5b9e\u73b0\u4e86\uff0c</p> <p>\u4e00\u5f00\u59cb\u6211\u5199\u7684\u662f</p> <pre><code>return foldl(lst, lambda l, r: Link(l.first, r), Link.empty)\n</code></pre> <p>\u7136\u540e\u53d1\u751f\u4e86\u62a5\u9519</p> <pre><code>Traceback (most recent call last):\n  ...\n  File \"C:\\Courses\\cs61a\\lab\\lab14\\lab14.py\", line 237, in &lt;lambda&gt;\n    return foldl(lst, lambda l, r: Link(l.first, r), Link.empty)\nAttributeError: 'tuple' object has no attribute 'first'\n</code></pre> <p>\u7136\u540e\u610f\u8bc6\u5230\u4f20\u5165\u7684 <code>fn</code> \u5e94\u8be5\u539f\u59cb\u7684\u503c\u5728\u7b2c\u4e00\u4e2a\u53c2\u6570\u4f4d\uff0c\u4e8e\u662f\u4fee\u6539\u4e86\u4e00\u4e0b\u987a\u5e8f</p> <pre><code>return foldl(lst, lambda r, l: Link(l.first, r), Link.empty)\n</code></pre> <p>\u4f46\u662f\u8fd8\u662f\u62a5\u9519\u4e86</p> <pre><code>AttributeError: 'int' object has no attribute 'first'\n</code></pre> <p>\u7136\u540e\u6211\u610f\u8bc6\u5230 <code>foldl</code> \u51fd\u6570\u4e2d\u62ff\u5230\u7684\u5e94\u8be5\u662f <code>lst</code> \u7684\u5143\u7d20\uff0c\u4e8e\u662f\u6700\u540e\u5c31\u6539\u597d\u4e86</p> code <pre><code>def reverse(lst):\n    \"*** YOUR CODE HERE ***\"\n    return foldl(lst, lambda r, l: Link(l.first, r), Link.empty)\n</code></pre> <p>\u5199\u5b8cQ10\u4e4b\u540e\u5c1d\u8bd5\u4e86\u4e00\u4e0b Extra for experience\uff0c\u5373\u4e0d\u9002\u7528 <code>Link</code> \u6784\u9020\u51fd\u6570\u6765\u5b9e\u73b0 <code>reverse</code> (\u53ef\u4ee5\u4e0d\u4f7f\u7528 <code>foldl</code> \u548c <code>foldr</code> )\uff0c\u611f\u89c9\u8fd8\u884c\uff0c\u5199\u4e86\u4e00\u4e2a\u8f85\u52a9\u51fd\u6570\u5c31\u80fd\u5b9e\u73b0\u4e86</p> code <pre><code>def reverse(lst):\n    \"*** YOUR CODE HERE ***\"\n    def reverse_helper(lst, rest):\n        if lst is Link.empty:\n            return rest\n        else:\n            old_rest, lst.rest = lst.rest, rest\n            return reverse_helper(old_rest, lst)\n    return reverse_helper(lst, Link.empty)\n</code></pre>"},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part3/#7_1","title":"7","text":"<p>Q10\uff0c\u8fd9\u9898\u9898\u76ee\u4e0d\u96be\u7406\u89e3\uff0c\u4f46\u662f\u4ee3\u7801\u7684\u5b9e\u73b0\u601d\u8def\u6709\u70b9\u7ed5\uff0c\u6211\u60f3\u4e86\u597d\u4e00\u4f1a\u624d\u634b\u6e05\u695a(\u56e0\u4e3a\u8981\u628a\u987a\u5e8f\u53cd\u8fc7\u6765\ud83d\ude05)</p> <p>\u6211\u6700\u540e\u662f\u501f\u52a9\u7b2c\u4e00\u4e2a\u6d4b\u8bd5\u7528\u4f8b\u6765\u7406\u89e3\u7684\uff0c</p> <pre><code>&gt;&gt;&gt; lst = Link(3, Link(2, Link(1)))\n&gt;&gt;&gt; foldr(lst, sub, 0) # (3 - (2 - (1 - 0)))\n</code></pre> <p>\u628a\u8fd9\u4e2a\u6d4b\u8bd5\u7528\u4f8b\u4e2d\u7684 <code>-</code> \u770b\u6210\u662f <code>fn</code></p> <p>\u548c</p> <pre><code>&gt;&gt;&gt; list = Link(3, Link(2, Link(1)))\n&gt;&gt;&gt; foldl2(list, sub, 0) # (((0 - 3) - 2) - 1)\n</code></pre> <p>\u5728 <code>foldr</code> \u4e2d\uff0c\u5230\u8fbe\u94fe\u8868\u7684\u672b\u5c3e\u65f6\uff0c\u5c31\u4f1a\u76f4\u63a5\u8fd4\u56de\u521d\u59cb\u503c <code>z</code> \uff0c\u5373 <code>identity</code> \u51fd\u6570\uff0c\u7136\u540e <code>step</code> \u5c31\u4f1a\u63a5\u6536\u5230 <code>1</code> \u548c <code>identity</code> (\u5206\u522b\u5bf9\u5e94 <code>x</code> \u548c <code>g</code> )\uff0c\u800c\u5728 <code>foldl2</code> \u4e2d\uff0c\u662f\u9700\u8981\u628a <code>1</code> \u5957\u5728\u6700\u5916\u9762\uff0c\u6240\u4ee5\u8fd9\u91cc\u7684 <code>step</code> \u662f\u9700\u8981\u8fd4\u56de\u4e00\u4e2a <code>f(?) = (? - 1)</code> \u51fd\u6570\u7684\u51fd\u6570\uff0c</p> <p>\u800c\u6700\u540e\u8fd4\u56de\u5230\u4e86\u6700\u5f00\u59cb\u65f6\uff0c <code>x</code> \u5bf9\u5e94 <code>3</code> \uff0c <code>g</code> \u5c31\u5e94\u8be5\u5bf9\u5e94\u7684\u662f\u4e00\u4e2a <code>f(?) = ((? - 2) - 1)</code> \u7684\u51fd\u6570\uff0c\u800c\u8fd9\u65f6\u4f1a\u88ab\u4f20\u5165 <code>foldl2</code> \u7684 <code>z</code> \u548c <code>3</code> \uff0c\u6240\u4ee5 <code>?</code> \u5bf9\u5e94\u7684\u5c31\u662f <code>fn(z, x)</code> \uff0c\u5373 <code>step</code> \u4e2d\u5e94\u8be5\u662f <code>g(fn(z, x))</code> \uff0c\u6700\u540e\u5dee\u4e0d\u591a\u5c31\u505a\u51fa\u6765\u4e86</p> code <pre><code>def foldl2(link, fn, z):\n    def step(x, g):\n        \"*** YOUR CODE HERE ***\"\n        return lambda z: g(fn(z, x))\n    return foldr(link, step, identity)(z)\n</code></pre>"},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part3/#lecture-36-qa","title":"Lecture 36 Q&amp;A","text":""},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part3/#1_13","title":"1","text":"<p>\u6709\u4eba\u63d0\u95ee19\u5e74\u79cb\u5b63\u671f\u672b\u8003\u8bd5\u7b2c6\u9898c\u9898\uff0c</p> <p>Quote</p> <p>(20 points) Palindromes</p> <p>Definition. A palindrome is a sequence that has the same elements in normal and reverse order.</p> <p>(a) (3 pt) Implement <code>pal</code> , which takes a positive integer <code>n</code> and returns a positive integer with the digits of <code>n</code> followed by the digits of <code>n</code> in reverse order.</p> <p>Important: You may not write <code>str</code> , <code>repr</code> , <code>list</code> , <code>tuple</code> , <code>[</code> , or <code>]</code> .</p> <pre><code>def pal(n):\n    \"\"\"Return a palindrome starting with n.\n\n    &gt;&gt;&gt; pal(12430)\n    1243003421\n    \"\"\"\n    m = n\n    while m:\n        n, m = ____________________________________ , ____________________________________\n    return n\n</code></pre> <p>(b) (4 pt) Implement <code>contains</code> , which takes non-negative integers <code>a</code> and <code>b</code> . It returns whether all of the digits of a also appear in order among the digits of <code>b</code> .</p> <p>Important: You may not write <code>str</code> , <code>repr</code> , <code>list</code> , <code>tuple</code> , <code>[</code> , or <code>]</code> .</p> <pre><code>def contains(a, b):\n    \"\"\"Return whether the digits of a are contained in the digits of b.\n\n    &gt;&gt;&gt; contains(357, 12345678)\n    True\n    &gt;&gt;&gt; contains(753, 12345678)\n    False\n    &gt;&gt;&gt; contains(357, 37)\n    False\n    \"\"\"\n    if a == b:\n        return True\n    if ________________________________________ &gt; _________________________________________:\n        return False\n    if ________________________________________ == ________________________________________:\n        return contains( _______________________________ , _______________________________ )\n    else:\n        return contains( _______________________________ , _______________________________ )\n</code></pre> <p>(c) (6 pt) Implement <code>big</code> , a helper function for <code>biggest_palindrome</code> . The <code>biggest_palindrome</code> function takes a non-negative integer <code>n</code> and returns the largest palindrome integer with an even number of digits that appear among the digits of <code>n</code> in order. If there is no even-length palindrome among the digits of <code>n</code> , then <code>biggest_palindrome(n)</code> returns 0. You may call <code>pal</code> and <code>contains</code> . </p> <p>Important: You may not write <code>str</code> , <code>repr</code> , <code>list</code> , <code>tuple</code> , <code>[</code> , or <code>]</code> .</p> <pre><code>def biggest_palindrome(n):\n    \"\"\"Return the largest even-length palindrome in n.\n\n    &gt;&gt;&gt; biggest_palindrome(3425534)\n    4554\n    &gt;&gt;&gt; biggest_palindrome(126130450234125)\n    21300312\n    \"\"\"\n    return big(n, 0)\n\ndef big(n, k):\n    \"\"\"A helper function for biggest_palindrome.\"\"\"\n    if n == 0:\n        return 0\n    choices = [big( _________________ , k) , big( _________________ , _________________ )]\n    if contains(k, ______________________________________________________________________):\n        __________________________________________________________________________________\n    return max(choices)\n</code></pre> <p>(d) (1 pt) Circle the term that fills in the blank: the <code>is_palindrome</code> function defined below runs in ____ time in the length of its input.</p> <ul> <li>Constant</li> <li>Logarithmic</li> <li>Linear</li> <li>Quadratic</li> <li>Exponential</li> <li>None of these</li> </ul> <pre><code>def is_palindrome(s):\n    \"\"\"Return whether a list of numbers s is a palindrome.\"\"\"\n    return all([s[i] == s[len(s) - i - 1] for i in range(len(s))])\n</code></pre> <p>Assume that <code>len</code> runs in constant time and <code>all</code> runs in linear time in the length of its input. Selecting an element of a list by its index requires constant time. Constructing a <code>range</code> requires constant time.</p> <p>(e) (6 pt) Implement <code>outer</code> , a helper function for <code>palinkdrome</code> . The <code>palinkdrome</code> function takes a positive integer <code>n</code> and returns a one-argument function that, when called repeatedly <code>n</code> times, returns a <code>Link</code> containing the sequence of arguments to the repeated calls followed by that sequence in reverse order. The <code>Link</code> class appears on Page 2 (left column) of the Midterm 2 study guide.</p> <pre><code>def palinkdrome(n):\n    \"\"\"Return a function that returns a palindrome starting with the args of n repeated calls.\n    &gt;&gt;&gt; print(palinkdrome(3)(5)(6)(7))\n    &lt;5 6 7 7 6 5&gt;\n    &gt;&gt;&gt; print(palinkdrome(1)(4))\n    &lt;4 4&gt;\n    \"\"\"\n    return outer(Link.empty, n)\n\ndef outer(r, n):\n    def inner(k):\n        s = Link(k, ______________________________________________________________)\n        if n == 1:\n            t = __________________________________________________________________\n            while s is not Link.empty:\n                t, s = Link(________________, ________________) , ________________\n            return t\n        else:\n            return ____________________________________________________________\n    return ________________________________________________________________________\n</code></pre> <pre><code>class Link:\n    \"\"\"A linked list.\n\n    &gt;&gt;&gt; s = Link(1)\n    &gt;&gt;&gt; s.first\n    1\n    &gt;&gt;&gt; s.rest is Link.empty\n    True\n    &gt;&gt;&gt; s = Link(2, Link(3, Link(4)))\n    &gt;&gt;&gt; s.first = 5\n    &gt;&gt;&gt; s.rest.first = 6\n    &gt;&gt;&gt; s.rest.rest = Link.empty\n    &gt;&gt;&gt; s                                    # Displays the contents of repr(s)\n    Link(5, Link(6))\n    &gt;&gt;&gt; s.rest = Link(7, Link(Link(8, Link(9))))\n    &gt;&gt;&gt; s\n    Link(5, Link(7, Link(Link(8, Link(9)))))\n    &gt;&gt;&gt; print(s)                             # Prints str(s)\n    &lt;5 7 &lt;8 9&gt;&gt;\n    \"\"\"\n    empty = ()\n\n    def __init__(self, first, rest=empty):\n        assert rest is Link.empty or isinstance(rest, Link)\n        self.first = first\n        self.rest = rest\n\n    def __repr__(self):\n        if self.rest is not Link.empty:\n            rest_repr = ', ' + repr(self.rest)\n        else:\n            rest_repr = ''\n        return 'Link(' + repr(self.first) + rest_repr + ')'\n\n    def __str__(self):\n        string = '&lt;'\n        while self.rest is not Link.empty:\n            string += str(self.first) + ' '\n            self = self.rest\n        return string + str(self.first) + '&gt;'\n</code></pre> <p>\u4e8e\u662f\u5c1d\u8bd5\u81ea\u5df1\u5199\u4e00\u4e0b\uff0c\u53d1\u73b0\u786e\u5b9ec\u9898\u96be\u60f3\ud83d\ude05\uff0c</p> <p>\u6211\u770b\u5230\u4ee3\u7801\u7684\u65f6\u5019\uff0c\u5927\u6982\u80fd\u60f3\u5230\u4ed6\u7684\u5927\u81f4\u60f3\u6cd5/\u601d\u8def\uff0c\u4f46\u662f\u4e0d\u77e5\u5230\u8981\u5982\u4f55\u7528\u4ee3\u7801\u5b9e\u73b0(\u8ddf\u4ed6\u7ed9\u7684\u4ee3\u7801\u6846\u67b6\u5bf9\u4e0d\u4e0a)\u3002</p> <p>\u4e00\u5f00\u59cb\u770b\u5b8c\u4e86\u4ee3\u7801\u4e4b\u540e\uff0c\u6211\u6700\u5148\u731c\u5230\u7684\u662f <code>choices</code> \u8fd9\u884c\u7684\u4f5c\u7528</p> <pre><code>choices = [big(_________________, k), big(_________________, _________________ )]\n</code></pre> <p>\u6211\u60f3\u5230\u5e94\u8be5\u662f\u8003\u8651\u6700\u540e\u4e00\u4f4d\u662f\u5426\u7b97\u5165\u56de\u6587\u6570\u4e2d/\u662f\u5426\u53d6\u7528\u6700\u540e\u4e00\u4f4d\uff0c</p> <p>\u6bd4\u5982 213123 \u8fd9\u4e2a\u6570\u5b57\uff0c\u5982\u679c\u53d6\u75283\uff0c\u90a3\u4e48\u7ed3\u679c\u53ea\u80fd\u662f33\uff0c\u5982\u679c\u4e0d\u53d6\u75283\u7684\u8bdd\uff0c\u7ed3\u679c\u5e94\u662f2112</p> <p>\u5e76\u4e14\u5c06\u4e24\u79cd\u60c5\u51b5\u7684\u7ed3\u679c\u90fd\u653e\u5230 <code>choices</code> \u4e2d\uff0c\u6700\u540e\u518d\u9009\u5176\u4e2d\u7684\u6700\u5927\u503c(\u5bf9\u5e94 <code>return max(choices)</code> \u8fd9\u884c\u4ee3\u7801)\uff0c</p> <p>\u7136\u540e\u53c8\u6ce8\u610f\u5230\u8fd9\u662f\u4e2a\u9012\u5f52\u7684\u7ed3\u6784\uff0c\u6240\u4ee5\u5e94\u8be5\u662f\u8981\u5c06 <code>n // 10</code> \u4f20\u5165\uff0c\u6240\u4ee5\u5927\u6982\u731c\u6d4b\u8fd9\u884c\u4ee3\u7801\u662f\u8fd9\u6837</p> <pre><code>choices = [big(n // 10, k), big(n // 10, k * 10 + n % 10)]\n</code></pre> <p>\u800c\u5728 <code>if</code> \u4e2d\uff0c\u611f\u89c9\u5e94\u8be5\u662f\u6ee1\u8db3\u4e00\u4e2a\u4ec0\u4e48\u6761\u4ef6\uff0c\u4f1a\u628a\u4e00\u4e2a\u7ed3\u679c\u52a0\u5230 <code>choices</code> \u4e2d\uff0c\u7136\u540e\u53c8\u6839\u636e\u4e4b\u524d\u5199\u7684\u4ee3\u7801\u4e2d <code>k</code> \u53ea\u662f\u56de\u6587\u7684\u4e00\u534a\uff0c\u6240\u4ee5\u611f\u89c9\u8fd9\u884c\u53ef\u80fd\u662f</p> <pre><code>choices += [pal(k)]\n</code></pre> <p>\u800c\u7531\u4e8e\u6211\u5ffd\u7565\u4e86 <code>k * 10 + n % 10</code> \u8fd9\u91cc\u521a\u597d\u4f1a \u4ee5\u5012\u8fc7\u6765\u7684\u987a\u5e8f \u628a\u539f\u59cb\u6570\u5b57\u7684\u6570\u4f4d\u653e\u5230 <code>k</code> \u4e0a\uff0c\u6240\u4ee5\u4e00\u5f00\u59cb\u5728 <code>if</code> \u7684\u5224\u65ad\u6761\u4ef6\u4e2d\uff0c\u6211\u5199\u7684\u662f</p> <pre><code>if contains(k, pal(n)):\n</code></pre> <p>\u4f46\u662f\u6d4b\u8bd5\u65f6\u4e0e\u6b63\u786e\u7ed3\u679c\u4e0d\u5bf9</p> <pre><code>Failed example:\n    biggest_palindrome(126130450234125)\nExpected:\n    21300312\nGot:\n    2143223412\n</code></pre> <p>\u672c\u6765\u5df2\u7ecf\u60f3\u4e0d\u51fa\u8981\u5982\u4f55\u4fee\u6539\u4e86\uff0c\u4f46\u968f\u4fbf\u5c1d\u8bd5\u4fee\u6539\u4e86\u4e00\u4e0b</p> <pre><code>if contains(k, n):\n</code></pre> <p>\u7136\u540e\u60ca\u5947\u5730\u53d1\u73b0\u901a\u8fc7\u6d4b\u8bd5\u4e86\ud83d\ude2e\uff0c\u4e8e\u662f\u4e4b\u540e\u5c31\u60f3\u660e\u767d\u4e86\u539f\u56e0</p> <pre><code>def biggest_palindrome(n):\n    \"\"\"Return the largest even-length palindrome in n.\n\n    &gt;&gt;&gt; biggest_palindrome(3425534)\n    4554\n    &gt;&gt;&gt; biggest_palindrome(126130450234125)\n    21300312\n    \"\"\"\n    return big(n, 0)\n\ndef big(n, k):\n    \"\"\"A helper function for biggest_palindrome.\"\"\"\n    if n == 0:\n        return 0\n    choices = [big(n // 10, k), big(n // 10, k * 10 + n % 10)]\n    if contains(k, n):\n        choices += [pal(k)]\n    return max(choices)\n</code></pre> <p>\u6240\u6709\u7684\u9898\u76ee\u7684\u4ee3\u7801</p> (a)(b)(c)(e) <pre><code>def pal(n):\n    \"\"\"Return a palindrome starting with n.\n\n    &gt;&gt;&gt; pal(12430)\n    1243003421\n    \"\"\"\n    m = n\n    while m:\n        n, m = n * 10 + m % 10, m // 10\n    return n\n</code></pre> <pre><code>def contains(a, b):\n    \"\"\"Return whether the digits of a are contained in the digits of b.\n\n    &gt;&gt;&gt; contains(357, 12345678)\n    True\n    &gt;&gt;&gt; contains(753, 12345678)\n    False\n    &gt;&gt;&gt; contains(357, 37)\n    False\n    \"\"\"\n    if a == b:\n        return True\n    if a &gt; b:\n        return False\n    if a % 10 == b % 10:\n        return contains(a // 10, b // 10)\n    else:\n        return contains(a, b // 10)\n</code></pre> <pre><code>def biggest_palindrome(n):\n    \"\"\"Return the largest even-length palindrome in n.\n\n    &gt;&gt;&gt; biggest_palindrome(3425534)\n    4554\n    &gt;&gt;&gt; biggest_palindrome(126130450234125)\n    21300312\n    \"\"\"\n    return big(n, 0)\n\ndef big(n, k):\n    \"\"\"A helper function for biggest_palindrome.\"\"\"\n    if n == 0:\n        return 0\n    choices = [big(n // 10, k), big(n // 10, k * 10 + n % 10)]\n    if contains(k, n):\n        choices += [pal(k)]\n    return max(choices)\n</code></pre> <pre><code>def palinkdrome(n):\n    \"\"\"Return a function that returns a palindrome starting with the args of n repeated calls.\n    &gt;&gt;&gt; print(palinkdrome(3)(5)(6)(7))\n    &lt;5 6 7 7 6 5&gt;\n    &gt;&gt;&gt; print(palinkdrome(1)(4))\n    &lt;4 4&gt;\n    \"\"\"\n    return outer(Link.empty, n)\n\ndef outer(r, n):\n    def inner(k):\n        s = Link(k, r)\n        if n == 1:\n            t = s\n            while s is not Link.empty:\n                t, s = Link(s.first, t), s.rest\n            return t\n        else:\n            return outer(s, n - 1)\n    return inner\n</code></pre> <p>\u6709\u4eba\u95ee\u9053John\u662f\u5982\u4f55\u5904\u7406\u8fd9\u4e2a\u95ee\u9898\u7684\uff0c\u4e0b\u9762\u662fJohn\u7684\u89e3\u91ca</p> <p>Quote</p> <p>John:</p> <p>Yeah, great question. So how do you approach this problem? What are the steps? Um, one is to recognize that there's a tree recursion problem. You could do that from the syntax because there are two calls to <code>big</code> , or you could do that from the kind of nature of the problem, which is they were doing some search among all the possible subsets of digits in here. Which one's the biggest looks like a tree recursion problem. Um, so you have to look for a way to distill that into a sequence of choices.</p> <p>And, uh, a common sequence of choices that you have is to keep the last digit or you don't. I mean, we've seen that in a few different examples. Um, but and so it happens to apply here. Sometimes it's not clear what kind of sequence of choices you need to make, but that is a big part of solving a tree recursion problem. So, um, yeah, how you figure out what that choice is is to think about all the different possibilities that you need to consider. So, all the different palindromes within here, and how would I enumerate that set? Well, all the ones that have a four at the end and all the ones that don't is a way of partitioning that set using an operation that I could repeat over and over again. So, that's how you kind of figure out what choice you're going to be making.</p> <p>I guess that got us as far as thinking probably what we're going to do is call <code>big</code> where we keep the last digit and <code>big</code> where we don't. Now is the hard part, which is how are we going to represent this notion of keeping the last digit? It's not like we have a list called digits where we're appending the last digit to. Instead, what we're doing is we're effectively reassigning k. Here, k either stays the same or k includes one more digit than it was before. So, whenever you make a recursive call, a good way to think about what you're doing is that you're assigning these formal parameters to new values.</p> <p>So, I guess that starts to explain what's going on here. The last piece is very problem-specific. How would you know that you've found a palindrome and therefore you want to consider that as one of the choices? You know, these two lines wouldn't show up in any other tree recursion problems. They're really just about palindromes because it happens to be that one way of describing a palindrome is that you find some digits within half the number, and then you make sure those digits also appear in the other half of the number in reverse order. How would you discover this? I guess, um, hopefully, the definition of the palindrome would get you there. Like, how do you describe a palindrome? It's like some digits, and then those digits also have to be contained in the other half of the number in reverse order.</p> <p>John:</p> <p>\u662f\u7684\uff0c\u8fd9\u662f\u4e00\u4e2a\u5f88\u597d\u7684\u95ee\u9898\u3002\u90a3\u4e48\u4f60\u5982\u4f55\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff1f\u6709\u54ea\u4e9b\u6b65\u9aa4\uff1f\u55ef\uff0c\u9996\u5148\u8981\u8ba4\u8bc6\u5230\u8fd9\u662f\u4e00\u4e2a\u6811\u9012\u5f52\u95ee\u9898\u3002\u4f60\u53ef\u4ee5\u4ece\u8bed\u6cd5\u4e0a\u770b\u51fa\u6765\uff0c\u56e0\u4e3a\u6709\u4e24\u6b21\u5bf9 <code>big</code> \u7684\u8c03\u7528\uff0c\u6216\u8005\u4f60\u53ef\u4ee5\u4ece\u95ee\u9898\u7684\u6027\u8d28\u4e0a\u770b\u51fa\u6765\uff0c\u4ed6\u4eec\u5728\u8fd9\u91cc\u8fdb\u884c\u4e86\u4e00\u4e9b\u641c\u7d22\uff0c\u641c\u7d22\u6240\u6709\u53ef\u80fd\u7684\u6570\u5b57\u5b50\u96c6\uff0c\u627e\u51fa\u5176\u4e2d\u6700\u5927\u7684\u4e00\u4e2a\uff0c\u770b\u8d77\u6765\u50cf\u4e00\u4e2a\u6811\u9012\u5f52\u95ee\u9898\u3002\u90a3\u4e48\uff0c\u4f60\u5fc5\u987b\u5bfb\u627e\u4e00\u79cd\u5c06\u5176\u5f52\u7eb3\u4e3a\u4e00\u7cfb\u5217\u9009\u62e9\u7684\u65b9\u6cd5\u3002</p> <p>\u800c\u4e14\uff0c\u4f60\u901a\u5e38\u4f1a\u6709\u4e00\u7cfb\u5217\u5171\u540c\u7684\u9009\u62e9\uff0c\u6bd4\u5982\u4fdd\u7559\u6700\u540e\u4e00\u4f4d\u6570\u5b57\u6216\u8005\u4e0d\u4fdd\u7559\u3002\u6211\u7684\u610f\u601d\u662f\uff0c\u6211\u4eec\u5728\u51e0\u4e2a\u4e0d\u540c\u7684\u4f8b\u5b50\u4e2d\u90fd\u770b\u5230\u8fc7\u3002\u4f46\u662f\u5728\u67d0\u4e9b\u60c5\u51b5\u4e0b\uff0c\u4e0d\u6e05\u695a\u9700\u8981\u505a\u51fa\u4ec0\u4e48\u6837\u7684\u9009\u62e9\uff0c\u4f46\u8fd9\u662f\u89e3\u51b3\u6811\u9012\u5f52\u95ee\u9898\u7684\u4e00\u4e2a\u91cd\u8981\u90e8\u5206\u3002\u6240\u4ee5\uff0c\u55ef\uff0c\u4f60\u5982\u4f55\u786e\u5b9a\u8fd9\u4e2a\u9009\u62e9\u662f\u4ec0\u4e48\uff0c\u5c31\u662f\u8003\u8651\u4f60\u9700\u8981\u8003\u8651\u7684\u6240\u6709\u4e0d\u540c\u53ef\u80fd\u6027\u3002</p> <p>\u6240\u4ee5\uff0c\u5728\u8fd9\u91cc\u9762\u7684\u6240\u6709\u4e0d\u540c\u56de\u6587\u6570\uff0c\u6211\u8be5\u5982\u4f55\u679a\u4e3e\u8fd9\u4e2a\u96c6\u5408\u5462\uff1f\u55ef\uff0c\u6240\u6709\u4ee5\u56db\u7ed3\u5c3e\u7684\u56de\u6587\u6570\u548c\u6240\u6709\u4e0d\u4ee5\u56db\u7ed3\u5c3e\u7684\u56de\u6587\u6570\u662f\u4e00\u79cd\u5212\u5206\u8fd9\u4e2a\u96c6\u5408\u7684\u65b9\u6cd5\uff0c\u4f7f\u7528\u4e00\u4e2a\u53ef\u4ee5\u4e00\u904d\u53c8\u4e00\u904d\u91cd\u590d\u7684\u64cd\u4f5c\u3002\u6240\u4ee5\uff0c\u8fd9\u5c31\u662f\u4f60\u5982\u4f55\u60f3\u51fa\u4f60\u5c06\u8981\u505a\u51fa\u7684\u9009\u62e9\u7684\u65b9\u5f0f\u3002</p> <p>\u6211\u60f3\uff0c\u8fd9\u8ba9\u6211\u4eec\u60f3\u5230\uff0c\u6211\u4eec\u53ef\u80fd\u8981\u505a\u7684\u4e8b\u60c5\u662f\u8c03\u7528\u4fdd\u7559\u6700\u540e\u4e00\u4f4d\u6570\u5b57\u7684 <code>big</code> \uff0c\u548c\u4e0d\u4fdd\u7559\u7684 <code>big</code> \u3002\u73b0\u5728\uff0c\u56f0\u96be\u7684\u90e8\u5206\u6765\u4e86\uff0c\u5c31\u662f\u6211\u4eec\u5982\u4f55\u8868\u793a\u4fdd\u7559\u6700\u540e\u4e00\u4f4d\u6570\u5b57\u7684\u8fd9\u4e2a\u6982\u5ff5\u5462\uff1f\u8fd9\u4e0d\u50cf\u6211\u4eec\u6709\u4e00\u4e2a\u540d\u4e3adigits\u7684\u5217\u8868\uff0c\u6211\u4eec\u5728\u5176\u4e2d\u6dfb\u52a0\u6700\u540e\u4e00\u4f4d\u6570\u5b57\u3002\u76f8\u53cd\uff0c\u6211\u4eec\u6b63\u5728\u6709\u6548\u5730\u91cd\u65b0\u5206\u914dk\u3002\u5728\u8fd9\u91cc\uff0ck\u8981\u4e48\u4fdd\u6301\u4e0d\u53d8\uff0c\u8981\u4e48\u6bd4\u4ee5\u524d\u591a\u5305\u542b\u4e00\u4f4d\u6570\u5b57\u3002\u6240\u4ee5\uff0c\u6bcf\u5f53\u4f60\u8fdb\u884c\u9012\u5f52\u8c03\u7528\u65f6\uff0c\u601d\u8003\u4f60\u6b63\u5728\u505a\u7684\u4e8b\u60c5\u7684\u4e00\u4e2a\u597d\u65b9\u6cd5\u662f\uff0c\u4f60\u6b63\u5728\u5c06\u8fd9\u4e9b\u5f62\u5f0f\u53c2\u6570\u8d4b\u4e88\u65b0\u7684\u503c\u3002</p> <p>\u6240\u4ee5\uff0c\u6211\u60f3\u8fd9\u5f00\u59cb\u89e3\u91ca\u8fd9\u91cc\u53d1\u751f\u4e86\u4ec0\u4e48\u3002\u6700\u540e\u4e00\u5757\u662f\u975e\u5e38\u7279\u5b9a\u4e8e\u95ee\u9898\u7684\u3002\u4f60\u5982\u4f55\u77e5\u9053\u627e\u5230\u4e86\u4e00\u4e2a\u56de\u6587\u6570\uff0c\u56e0\u6b64\u4f60\u60f3\u628a\u5b83\u89c6\u4e3a\u9009\u62e9\u4e4b\u4e00\uff1f\u4f60\u77e5\u9053\uff0c\u8fd9\u4e24\u884c\u4e0d\u4f1a\u51fa\u73b0\u5728\u4efb\u4f55\u5176\u4ed6\u6811\u9012\u5f52\u95ee\u9898\u4e2d\u3002\u5b83\u4eec\u5b9e\u9645\u4e0a\u53ea\u6d89\u53ca\u56de\u6587\u6570\uff0c\u56e0\u4e3a\u78b0\u5de7\u63cf\u8ff0\u56de\u6587\u6570\u7684\u4e00\u79cd\u65b9\u5f0f\u662f\uff0c\u5728\u6570\u5b57\u7684\u4e00\u534a\u4e2d\u627e\u5230\u4e00\u4e9b\u6570\u5b57\uff0c\u7136\u540e\u786e\u4fdd\u8fd9\u4e9b\u6570\u5b57\u4e5f\u4ee5\u76f8\u53cd\u7684\u987a\u5e8f\u51fa\u73b0\u5728\u6570\u5b57\u7684\u53e6\u4e00\u534a\u4e2d\u3002\u4f60\u5982\u4f55\u53d1\u73b0\u8fd9\u4e00\u70b9\u5462\uff1f\u6211\u60f3\uff0c\u5e0c\u671b\u56de\u6587\u6570\u7684\u5b9a\u4e49\u4f1a\u8ba9\u4f60\u660e\u767d\u3002\u5c31\u50cf\uff0c\u4f60\u5982\u4f55\u63cf\u8ff0\u4e00\u4e2a\u56de\u6587\u6570\uff0c\u5c31\u662f\u4e00\u4e9b\u6570\u5b57\uff0c\u7136\u540e\u8fd9\u4e9b\u6570\u5b57\u4e5f\u5fc5\u987b\u5305\u542b\u5728\u6570\u5b57\u7684\u53e6\u4e00\u534a\u4e2d\uff0c\u5e76\u4e14\u662f\u76f8\u53cd\u7684\u987a\u5e8f\u3002</p>"},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part3/#2_13","title":"2","text":"<p>\u6709\u4eba\u63d0\u95ee19\u5e74\u590f\u5b63\u671f\u672b\u8003\u8bd5\u7684\u7b2c8\u9898</p> <p>Quote</p> <p>(10 points) The Big SQL</p> <p>The <code>ingredients</code> table describes the <code>dish</code> and <code>part</code> for each part of each dish at a restaurant. The <code>shops</code> table describes the <code>food</code> , <code>shop</code> , and <code>price</code> for each part of a dish sold at each of two shops. All ingredients (parts) are sold by both shops, and each ingredient will only appear once for each shop. Write your SQL statements so that they would still be correct if table contents changed. You can assume the shops table will only ever contain two shops ( <code>A</code> and <code>B</code> ).</p> <pre><code>CREATE TABLE ingredients AS\n  SELECT \"chili\" AS dish, \"beans\" AS part UNION\n  SELECT \"chili\"        , \"onions\"        UNION\n  SELECT \"soup\"         , \"broth\"         UNION\n  SELECT \"soup\"         , \"onions\"        UNION\n  SELECT \"beans\"        , \"beans\";\n\nCREATE TABLE shops AS\n  SELECT \"beans\" AS food, \"A\" AS shop, 2 AS price UNION\n  SELECT \"beans\"        , \"B\"        , 2 AS price UNION\n  SELECT \"onions\"       , \"A\"        , 3          UNION\n  SELECT \"onions\"       , \"B\"        , 2          UNION\n  SELECT \"broth\"        , \"A\"        , 3          UNION\n  SELECT \"broth\"        , \"B\"        , 5;\n</code></pre> <p>(a) (2 pt)  Select a two-column table with one row per food that describes the lowest price for each food.</p> <pre><code>SELECT food, _________________ FROM shops ________________________;\n</code></pre> <pre><code>beans|2\nbroth|3\nonions|2\n</code></pre> <p>(b) (4 pt) Select a two-column table with one row per dish that describes the total cost of each dish if all parts are purchased from shop A.</p> <pre><code>SELECT ________________________ FROM _____________________________\n  WHERE __________________________________________________________;\n</code></pre> <pre><code>beans|2\nchili|5\nsoup|6\n</code></pre> <p>(c) (4 pt) In two different ways, select a one-column table of all foods that have a different price at each store.</p> <pre><code>SELECT _________ FROM __________________________________, __________________________________\n  WHERE ____________________________________________________________________________________;\nSELECT _________ FROM shops GROUP BY _______________________________________________________;\n</code></pre> <pre><code>onions\nbroth\n</code></pre> <p>\u81ea\u5df1\u505a\u4e86\u4e00\u4e0b\u8fd9\u9898\uff0c\u6700\u540e\u611f\u89c9\u9664\u4e86c\u9898\u4e2d\u8981\u5b9e\u73b0\u7684\u7b2c\u4e8c\u79cd\u65b9\u6cd5\uff0c\u5176\u4ed6\u90fd\u4e0d\u662f\u5f88\u96be</p> <pre><code>python sqlite_shell.py -i test.sql\n</code></pre> (a)(b)(c) <pre><code>SELECT food, min(price) FROM shops GROUP BY food;\n</code></pre> <pre><code>SELECT a.dish, sum(b.price) FROM ingredients AS a, shops AS b\n  WHERE a.part = b.food AND b.shop = \"A\" GROUP BY a.dish;\n</code></pre> <pre><code>SELECT a.food FROM shops AS a, shops AS b\n  WHERE a.food = b.food AND a.shop &lt; b.shop AND a.price != b.price;\nSELECT food FROM shops GROUP BY food HAVING min(price) != max(price);\n</code></pre> <p>\u770b\u4e86John\u7684\u89e3\u7b54\uff0c\u53d1\u73b0\u4ed6c\u9898\u7684\u7b2c\u4e8c\u79cd\u5199\u6cd5\u6bd4\u6211\u66f4\u7b80\u6d01\u4e00\u4e9b</p> <pre><code>SELECT food FROM shops GROUP BY food HAVING MIN(price) != MAX(price);\n</code></pre>"},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part3/#lecture-37-final-examples","title":"Lecture 37 Final Examples","text":""},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part3/#1_14","title":"1","text":"<p>\u5c1d\u8bd5\u5b9e\u73b0\u8bfe\u4e0a\u7684\u8fd9\u9898</p> <pre><code>class Tree:\n    \"\"\"\n    &gt;&gt;&gt; t = Tree(3, [Tree(2, [Tree(5)]), Tree(4)])\n    &gt;&gt;&gt; t.label\n    3\n    &gt;&gt;&gt; t.branches[0].label\n    2\n    &gt;&gt;&gt; t.branches[1].is_leaf()\n    True\n    \"\"\"\n    def __init__(self, label, branches=[]):\n        for b in branches:\n            assert isinstance(b, Tree)\n        self.label = label\n        self.branches = list(branches)\n\n    def is_leaf(self):\n        return not self.branches\n\n    def map(self, fn):\n        \"\"\"\n        Apply a function `fn` to each node in the tree and mutate the tree.\n\n        &gt;&gt;&gt; t1 = Tree(1)\n        &gt;&gt;&gt; t1.map(lambda x: x + 2)\n        &gt;&gt;&gt; t1.map(lambda x : x * 4)\n        &gt;&gt;&gt; t1.label\n        12\n        &gt;&gt;&gt; t2 = Tree(3, [Tree(2, [Tree(5)]), Tree(4)])\n        &gt;&gt;&gt; t2.map(lambda x: x * x)\n        &gt;&gt;&gt; t2\n        Tree(9, [Tree(4, [Tree(25)]), Tree(16)])\n        \"\"\"\n        self.label = fn(self.label)\n        for b in self.branches:\n            b.map(fn)\n\n    def __contains__(self, e):\n        \"\"\"\n        Determine whether an element exists in the tree.\n\n        &gt;&gt;&gt; t1 = Tree(1)\n        &gt;&gt;&gt; 1 in t1\n        True\n        &gt;&gt;&gt; 8 in t1\n        False\n        &gt;&gt;&gt; t2 = Tree(3, [Tree(2, [Tree(5)]), Tree(4)])\n        &gt;&gt;&gt; 6 in t2\n        False\n        &gt;&gt;&gt; 5 in t2\n        True\n        \"\"\"\n        if self.label == e:\n            return True\n        for b in self.branches:\n            if e in b:\n                return True\n        return False\n\n    def __repr__(self):\n        if self.branches:\n            branch_str = ', ' + repr(self.branches)\n        else:\n            branch_str = ''\n        return 'Tree({0}{1})'.format(self.label, branch_str)\n\n    def __str__(self):\n        def print_tree(t, indent=0):\n            tree_str = '  ' * indent + str(t.label) + \"\\n\"\n            for b in t.branches:\n                tree_str += print_tree(b, indent + 1)\n            return tree_str\n        return print_tree(self).rstrip()\n</code></pre> <pre><code>def bigs(t):\n    \"\"\"Return the number of nodes in t that are larger than all their ancestor nodes.\n\n    &gt;&gt;&gt; a = Tree(1, [Tree(4, [Tree(4), Tree(5)], Tree(3, [Tree(0, [Tree(2)])])])\n    &gt;&gt;&gt; bigs(a)\n    4\n    \"\"\"\n    def f(a, x):\n        if ____________________________________________________:\n            return 1 + ________________________________________\n        else:\n            return ____________________________________________\n    return ____________________________________________________\n</code></pre> <p>\u611f\u89c9\u4e0d\u7b97\u96be</p> <pre><code>def bigs(t):\n    def f(a, x):\n        if a.label &gt; x:\n            return 1 + sum([f(b, a.label) for b in a.branches])\n        else:\n            return sum([f(b, x) for b in a.branches])\n    return 1 + sum([f(b, t.label) for b in t.branches])\n</code></pre> <p></p> <p>John\u6700\u540e\u5c55\u793a\u4e86\u5982\u4f55\u4e00\u6b65\u6b65\u5f97\u5230\u6700\u540e\u7684\u7b54\u6848/\u4ee3\u7801</p> <p></p> <p>John\u5c55\u793a\u4e86\u53e6\u4e00\u79cd\u4f7f\u7528 <code>nonlocal</code> \u8bed\u53e5\u6765\u5b9e\u73b0\u7684\u9012\u5f52\u7684\u65b9\u6cd5</p>"},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part3/#2_14","title":"2","text":"<p>John\u5c55\u793a\u4e86\u4e00\u79cd\u7f16\u5199\u7a0b\u5e8f\u89e3\u51b3\u95ee\u9898\u7684\u6b65\u9aa4\uff0c\u4ed6\u8ba4\u4e3a\u8fd9\u867d\u7136\u4e0d\u662f\u4e00\u4e2a\u5b8c\u7f8e\u7684\u65b9\u6cd5\uff0c\u4f46\u662f\u662f\u4e00\u4e2a\u6bd4\u8f83\u6709\u7528\u548c\u8003\u8651\u5468\u5230\u7684\u65b9\u6cd5\uff0c\u53ef\u4ee5\u5728\u7b2c\u4e00\u773c\u4e0d\u77e5\u9053\u95ee\u9898\u5982\u4f55\u89e3\u51b3\u65f6\u60f3\u60f3\u8fd9\u6837\u7684\u65b9\u6cd5</p> <p>\u4ece\u95ee\u9898\u5206\u6790\u5230\u6570\u636e\u5b9a\u4e49</p> <p>\u786e\u5b9a\u5fc5\u987b\u8868\u793a\u7684\u4fe1\u606f\u4ee5\u53ca\u5728\u9009\u62e9\u7684\u7f16\u7a0b\u8bed\u8a00\u4e2d\u5982\u4f55\u8868\u793a\u8fd9\u4e9b\u4fe1\u606f\u3002\u5236\u5b9a\u6570\u636e\u5b9a\u4e49\u5e76\u7528\u4f8b\u5b50\u52a0\u4ee5\u8bf4\u660e\u3002</p> <p>\u7b7e\u540d\u3001\u76ee\u7684\u8bed\u53e5\u3001\u5934\u90e8</p> <p>\u8bf4\u660e\u6240\u9700\u51fd\u6570\u6d88\u8017\u548c\u4ea7\u751f\u7684\u6570\u636e\u7c7b\u578b\u3002\u5bf9\u95ee\u9898\u201c\u51fd\u6570\u8ba1\u7b97\u4ec0\u4e48\u201d\u63d0\u51fa\u7b80\u660e\u7684\u56de\u7b54\u3002\u5b9a\u4e49\u4e00\u4e2a\u7b26\u5408\u7b7e\u540d\u7684\u5b58\u6839\u3002</p> <p>\u529f\u80fd\u793a\u4f8b</p> <p>\u901a\u8fc7\u4f8b\u5b50\u6f14\u793a\u51fd\u6570\u7684\u76ee\u7684\u3002</p> <p>\u51fd\u6570\u6a21\u677f</p> <p>\u5c06\u6570\u636e\u5b9a\u4e49\u8f6c\u5316\u4e3a\u51fd\u6570\u7684\u5927\u7eb2\u3002</p> <p>\u6d4b\u8bd5</p> <p>\u5c06\u4f8b\u5b50\u8868\u8fbe\u4e3a\u6d4b\u8bd5\uff0c\u5e76\u786e\u4fdd\u51fd\u6570\u901a\u8fc7\u6240\u6709\u6d4b\u8bd5\u3002\u8fd9\u6837\u505a\u6709\u52a9\u4e8e\u53d1\u73b0\u9519\u8bef\u3002\u6d4b\u8bd5\u4e5f\u53ef\u4ee5\u4f5c\u4e3a\u4f8b\u5b50\u7684\u8865\u5145\uff0c\u5e2e\u52a9\u4ed6\u4eba\u5728\u9700\u8981\u65f6\u9605\u8bfb\u548c\u7406\u89e3\u5b9a\u4e49-\u800c\u5bf9\u4e8e\u4efb\u4f55\u4e25\u8083\u7684\u7a0b\u5e8f\uff0c\u8fd9\u662f\u5fc5\u8981\u7684\u3002 </p>"},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part3/#3_9","title":"3","text":"<p>\u5c1d\u8bd5\u5b9e\u73b0\u8fd9\u4e00\u9898</p> <pre><code>def smalls(t):\n    \"\"\"Return the non-leaf nodes in t that are smaller than all their descendants.\n\n    &gt;&gt;&gt; a = Tree(1, [Tree(2, [Tree(4), Tree(5)]), Tree(3, [Tree(0, [Tree(6)])])])\n    &gt;&gt;&gt; sorted([t.label for t in smalls(a)])\n    [0, 2]\n    \"\"\"\n    result = []\n    def process(t):\n        if t.is_leaf():\n            return __________________________________________\n        else:\n            smallest = ______________________________________\n            if ______________________________________________:\n                _____________________________________________\n            return min(smallest, t.label)\n    process(t)\n    return result\n</code></pre> <p>\u6211\u7684\u5b9e\u73b0</p> <pre><code>def smalls(t):\n    result = []\n    def process(t):\n        if t.is_leaf():\n            return t.label\n        else:\n            smallest = min([process(b) for b in t.branches])\n            if t.label &lt; smallest:\n                result.append(t)\n            return min(smallest, t.label)\n    process(t)\n    return result\n</code></pre> <p></p>"},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part3/#lecture-37-qa","title":"Lecture 37 Q&amp;A","text":""},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part3/#1_15","title":"1","text":"<p>\u8bfe\u4e0a\u63d0\u5230\u768418\u5e74\u6625\u5b63\u671f\u672b\u8003\u8bd5\u7684\u7b2c5\u9898</p> <p>Quote</p> <p>(12 points) Function As Expected</p> <p>Definition. For \\(n &gt; 1\\) , an order n function takes one argument and returns an onder \\(n - 1\\) function.</p> <p>An order 1 function is any function that takes one argument.</p> <p>(a) (6 pt) Implement <code>scurry</code> , which takes a function <code>f</code> and a positive integers <code>n</code> . <code>f</code> must be a function that takes a list as its argument. <code>scurry</code> returns an order n function that, when called successively n times on a sequence of values \\(x_1, x_2, ... x_n\\) , returns the result of calling <code>f</code> on a list containing \\(x_1, x_2, ... x_n\\) .</p> <pre><code>def scurry(f, n):\n    \"\"\"Return a function that calls f on a list of arguments after being called n times.\n\n    &gt;&gt;&gt; scurry(sum, 4)(1)(1)(3)(2)  # equivalent to sum([1, 1, 3, 2])\n    7\n    &gt;&gt;&gt; scurry(len, 3)(7)([8])(-9)  # equivalent to len([7, [8], -9])\n    3\n    \"\"\"\n    def h(k, args_so_far):\n        if k == 0:\n            return ________________________________________________________________________\n        return ____________________________________________________________________________\n    return ________________________________________________________________________________\n</code></pre> <p>(b) (6 pt) Implement <code>factorize</code> , which takes two integers <code>n</code> and <code>k</code> , both larger than 1. It returns the number of ways that <code>n</code> can be expressed as a product of non-decreasing integers greater than or equal to <code>k</code> .</p> <pre><code>def factorize(n, k=2):\n    \"\"\"Return the number of ways to factorize positive integer n.\n\n    &gt;&gt;&gt; factorize(7)  # 7\n    1\n    &gt;&gt;&gt; factorize(12) # 2*2*3, 2*6, 3*4, 12\n    4\n    &gt;&gt;&gt; factorize(36) # 2*2*3*3, 2*2*9, 2*3*6, 2*18, 3*3*4, 3*12, 4*9, 6*6, 36\n    9\n    \"\"\"\n    if _____________________________________________________________________________________:\n        return 1\n    elif ___________________________________________________________________________________:\n        return 0\n    elif ___________________________________________________________________________________:\n        return factorize(_________________________________, ________________________________)\n    return _________________________________________________________________________________\n</code></pre> <p>\u81ea\u5df1\u5c1d\u8bd5\u505a\u4e86\u4e00\u4e0b\uff0c\u611f\u89c9\u8fd8\u86ee\u6709\u610f\u601d\uff0c</p> <p>\u611f\u89c9\u662f\u56e0\u4e3a\u5df2\u7ecf\u505a\u8fc7\u5f88\u591a\u7c7b\u4f3c\u7684\u9898\u76ee\uff0c\u6240\u4ee5\u505ab\u9898\u65f6\uff0c\u5f88\u5feb\u5c31\u60f3\u5230\u4e86 <code>if</code> \u7684\u51e0\u79cd\u60c5\u51b5\uff0c\u5206\u522b\u662f \u521a\u597d\u76f8\u7b49\u6574\u9664\u5f971\uff0c\u65e0\u6cd5\u9664\uff0c\u80fd\u6574\u9664\uff0c\u4e0d\u80fd\u6574\u9664</p> (a)(b) <pre><code>def scurry(f, n):\n    def h(k, args_so_far):\n        if k == 0:\n            return f(args_so_far)\n        return lambda x: h(k - 1, args_so_far + [x])\n    return h(n, [])\n</code></pre> <pre><code>def factorize(n, k=2):\n    if k == n:\n        return 1\n    elif k &gt; n:\n        return 0\n    elif n % k != 0:\n        return factorize(n, k + 1)\n    return factorize(n // k, k) + factorize(n, k + 1)\n</code></pre> <p>John\u89e3\u7b54\u8fd9\u9898\u65f6\u8bf4\u5230b\u9898\u7b2c\u4e00\u79cd\u60c5\u51b5\u4e2d <code>n == k</code> \u548c <code>n == 1</code> \u4e24\u4e2a\u5224\u65ad\u6761\u4ef6\u90fd\u53ef\u4ee5\uff0c\u7136\u540e\u8bd5\u4e86\u4e00\u4e0b\u53d1\u73b0\u771f\u7684\u80fd\u901a\u8fc7</p>"},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part3/#2_15","title":"2","text":"<p>John\u63d0\u5230scheme\u4e2d\u4e5f\u6709\u7c7b\u4f3cpython\u4e2d <code>*args</code> \u7684\u4f20\u5165\u4e0d\u5b9a\u4e2a\u6570\u53c2\u6570\u7684\u65b9\u6cd5\uff0c\u5728\u5b9a\u4e49\u51fd\u6570\u65f6\uff0c\u53ef\u4ee5\u4f7f\u7528 <code>. args</code> \u7684\u5f62\u5f0f\u6765\u83b7\u53d6\u6240\u6709\u7684\u53c2\u6570(\u53ef\u89c1\u4e8e\u4e0b\u56fe)\uff0c\u7136\u540e <code>args</code> \u5c31\u4f1a\u662f\u4e00\u4e2a\u94fe\u8868</p> <p></p>"},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part3/#lecture-38-conclusion","title":"Lecture 38 Conclusion","text":""},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part3/#1_16","title":"1","text":"<p>John\u548cHany\u63d0\u5230\u7684\u4e00\u4e9b\u5173\u4e8e\u6280\u672f\u7684\u601d\u8003(\u7684\u5176\u4e2d\u4e00\u90e8\u5206)</p> <p>Quote</p> <p>John:</p> <p>...Yeah, and so the one thing I'd love to leave you all with is the idea that you don't just decide, \"I'm gonna become a software engineer for life\" or, \"Oh, I'm gonna become a regulator for life.\" That's just not how it is. I mean, so many people take meandering paths in their lives where they do some of both. They understand the technology well enough that they realize, \"Oh, their impact should be figuring out how to collaborate with government to regulate it in a way that has the right sorts of trade-offs.\"</p> <p> </p> <p>Hany:</p> <p>Yeah, let me add one more thing too, John, and this is something you need to practice from a very young age, like right now, which is how do you talk to people who are not technical about technical things? There's always this language barrier between us computer scientists and our regulators and our lawyers. It's really good to get in the habit of thinking about how do you take these, in some cases, very complex things and explain them in honest and clear ways so that people can understand them, process them, and then reason about them properly.</p> <p>John:</p> <p>...\u662f\u7684\uff0c\u6240\u4ee5\u6211\u60f3\u7559\u7ed9\u5927\u5bb6\u7684\u4e00\u4e2a\u60f3\u6cd5\u662f\uff0c\u4f60\u4e0d\u53ea\u662f\u51b3\u5b9a\u201c\u6211\u8981\u6210\u4e3a\u4e00\u540d\u7ec8\u8eab\u8f6f\u4ef6\u5de5\u7a0b\u5e08\u201d\u6216\u201c\u54e6\uff0c\u6211\u8981\u7ec8\u8eab\u6210\u4e3a\u76d1\u7ba1\u8005\u201d\u3002\u60c5\u51b5\u5e76\u975e\u5982\u6b64\u3002\u6211\u610f\u5473\u7740\u5f88\u591a\u4eba\u5728\u4ed6\u4eec\u7684\u751f\u6d3b\u4e2d\u8d70\u8fc7\u66f2\u6298\u7684\u9053\u8def\uff0c\u65e2\u6d89\u8db3\u6280\u672f\uff0c\u53c8\u7406\u89e3\u5f97\u8db3\u591f\u6df1\u523b\uff0c\u4ee5\u81f3\u4e8e\u610f\u8bc6\u5230\u4ed6\u4eec\u7684\u5f71\u54cd\u5e94\u8be5\u662f\u5f04\u6e05\u695a\u5982\u4f55\u4e0e\u653f\u5e9c\u5408\u4f5c\uff0c\u4ee5\u4e00\u79cd\u5177\u6709\u6b63\u786e\u6743\u8861\u7684\u65b9\u5f0f\u8fdb\u884c\u76d1\u7ba1\u3002</p> <p> </p> <p>Hany:</p> <p>\u662f\u7684\uff0c\u7ea6\u7ff0\uff0c\u518d\u8865\u5145\u4e00\u70b9\uff0c\u8fd9\u662f\u4f60\u9700\u8981\u4ece\u5f88\u5c0f\u7684\u65f6\u5019\u5c31\u5f00\u59cb\u7ec3\u4e60\u7684\u4e8b\u60c5\uff0c\u5c31\u50cf\u73b0\u5728\u8fd9\u6837\uff0c\u90a3\u5c31\u662f\u5982\u4f55\u4e0e\u4e0d\u61c2\u6280\u672f\u7684\u4eba\u8c08\u8bba\u6280\u672f\u95ee\u9898\uff1f\u6211\u4eec\u8ba1\u7b97\u673a\u79d1\u5b66\u5bb6\u3001\u76d1\u7ba1\u8005\u548c\u5f8b\u5e08\u4e4b\u95f4\u603b\u662f\u5b58\u5728\u8fd9\u79cd\u8bed\u8a00\u969c\u788d\u3002\u517b\u6210\u4e00\u4e2a\u4e60\u60ef\uff0c\u601d\u8003\u5982\u4f55\u4ee5\u771f\u5b9e\u800c\u6e05\u6670\u7684\u65b9\u5f0f\u89e3\u91ca\u8fd9\u4e9b\uff0c\u6709\u65f6\u662f\u975e\u5e38\u590d\u6742\u7684\u4e8b\u60c5\uff0c\u4ee5\u4fbf\u4eba\u4eec\u80fd\u591f\u7406\u89e3\u3001\u5904\u7406\uff0c\u5e76\u6b63\u786e\u5730\u8fdb\u884c\u63a8\u7406\u3002</p>"},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part3/#2_16","title":"2","text":"<p>John\u548cHany\u8c08\u5230\u4eba\u751f/\u751f\u6d3b(life)</p> <p>Quote</p> <p>John:</p> <p>Here's my spiel about life. You know, I'm not going to tell you how to live your life, but I wanted to remind you of a few things.</p> <p>One is about freedom, which is that when you learn how to write software, then your skills are going to be in demand. There's no question about that. Lots of people are going to work with you. In fact, there are so many different problems to solve that we can't solve them all with the people that we've trained to do this kind of thing. So, that means that what you decide to work on actually influences what gets built in the world.</p> <p>What you decide to work on will also influence your own experience. I think I've known a lot of people now in the tech industry, and the ones who make the most money are not the ones that seem most fulfilled or most happy to me. The ones that seem like they're very comfortable with their life usually have found something that they're good at, something that they enjoy, and it also happens to be something that matters to the world in some way. You know, if you find that combination, then great. So, when I say freedom, I mean you can choose what you work on. You don't have to just take the internship from the company that's got the flashiest website or the best reputation. There are lots of cool things to do out there, and you should be selective and search for something that is a good fit for you.</p> <p> </p> <p>Hany:</p> <p>Yeah, I think that's exactly right, John. I think one of the greatest gifts in life is being able to wake up every day and do the things that you find fulfilling, that you're good at, that you're excited about. And, by the way, to boot, somebody's willing to pay you to do them. It's an incredible gift.</p> <p>Thinking about what are you prioritizing? For some people, the priority is they want to make a lot of money. That's fine, that's a different choice. But think about what's going to be important to you. And here's the rub, by the way: What's important to you when you're 20, and when you're 30, 40, 50, and 60, it's going to be different. And I will tell you, I have a lot of friends who left grad school, made a lot of money on Wall Street, but when they turned 40 and started looking down the line at what's their legacy, it wasn't quite as good.</p> <p>Whereas I can look at my legacy as an academic and interact with smart young people, trying to inspire and motivate them. You can feel really good about that. So try to think not just about what's today but also, you know, 10, 20, 30 years from now.</p> <p> </p> <p>John:</p> <p>Yeah, exactly. And you might change course. You know, I didn't discover that I liked teaching until I tried it, which was when I went to grad school. I didn't do any of that in undergrad. So, if you haven't figured out the perfect thing for you yet, don't worry. But, make sure that you think about the kind of long-term implications of whatever you do commit to.</p> <p>John:</p> <p>\u5173\u4e8e\u4eba\u751f\uff0c\u6211\u60f3\u8bf4\u7684\u4e00\u4e9b\u8bdd\u3002\u6211\u4e0d\u4f1a\u544a\u8bc9\u4f60\u5982\u4f55\u8fc7\u4f60\u7684\u4eba\u751f\uff0c\u4f46\u6211\u60f3\u63d0\u9192\u4f60\u4e00\u4e9b\u4e8b\u60c5\u3002</p> <p>\u9996\u5148\u662f\u5173\u4e8e\u81ea\u7531\u7684\u95ee\u9898\uff0c\u5b66\u4f1a\u5199\u8f6f\u4ef6\u540e\uff0c\u4f60\u7684\u6280\u80fd\u5c06\u4f1a\u53d7\u5230\u9700\u6c42\uff0c\u6beb\u65e0\u7591\u95ee\u3002\u5f88\u591a\u4eba\u4f1a\u548c\u4f60\u4e00\u8d77\u5de5\u4f5c\u3002\u4e8b\u5b9e\u4e0a\uff0c\u6709\u5f88\u591a\u4e0d\u540c\u7684\u95ee\u9898\u9700\u8981\u89e3\u51b3\uff0c\u800c\u6211\u4eec\u65e0\u6cd5\u4ec5\u51ed\u6211\u4eec\u57f9\u8bad\u51fa\u6765\u7684\u4eba\u6765\u89e3\u51b3\u6240\u6709\u95ee\u9898\u3002\u6240\u4ee5\uff0c\u8fd9\u610f\u5473\u7740\u4f60\u51b3\u5b9a\u5de5\u4f5c\u7684\u5b9e\u9645\u4e0a\u4f1a\u5f71\u54cd\u5728\u4e16\u754c\u4e0a\u6784\u5efa\u4ec0\u4e48\u3002</p> <p>\u4f60\u51b3\u5b9a\u4ece\u4e8b\u4ec0\u4e48\u5de5\u4f5c\u4e5f\u5c06\u5f71\u54cd\u4f60\u81ea\u5df1\u7684\u7ecf\u9a8c\u3002\u6211\u8ba4\u8bc6\u4e86\u5f88\u591a\u79d1\u6280\u884c\u4e1a\u7684\u4eba\uff0c\u6700\u8d5a\u94b1\u7684\u4eba\u5e76\u4e0d\u662f\u6211\u8ba4\u4e3a\u6700\u5145\u5b9e\u6216\u6700\u5e78\u798f\u7684\u4eba\u3002\u90a3\u4e9b\u770b\u8d77\u6765\u975e\u5e38\u8212\u9002\u7684\u4eba\u901a\u5e38\u627e\u5230\u4e86\u81ea\u5df1\u64c5\u957f\u7684\u4e8b\u60c5\uff0c\u559c\u6b22\u505a\u7684\u4e8b\u60c5\uff0c\u800c\u4e14\u8fd9\u4e8b\u60c5\u6070\u597d\u5bf9\u4e16\u754c\u6709\u610f\u4e49\u3002\u4f60\u77e5\u9053\uff0c\u5982\u679c\u4f60\u627e\u5230\u4e86\u8fd9\u79cd\u7ec4\u5408\uff0c\u90a3\u5c31\u592a\u597d\u4e86\u3002\u6240\u4ee5\uff0c\u5f53\u6211\u8bf4\u81ea\u7531\u65f6\uff0c\u6211\u662f\u6307\u4f60\u53ef\u4ee5\u9009\u62e9\u4f60\u8981\u4ece\u4e8b\u7684\u5de5\u4f5c\u3002\u4f60\u4e0d\u5fc5\u53ea\u662f\u9009\u62e9\u90a3\u5bb6\u7f51\u7ad9\u6700\u70ab\u6216\u58f0\u8a89\u6700\u597d\u7684\u516c\u53f8\u7684\u5b9e\u4e60\u673a\u4f1a\u3002\u6709\u5f88\u591a\u6709\u8da3\u7684\u4e8b\u60c5\u7b49\u7740\u4f60\u53bb\u505a\uff0c\u4f60\u5e94\u8be5\u6709\u9009\u62e9\u5730\u5bfb\u627e\u9002\u5408\u4f60\u7684\u4e1c\u897f\u3002</p> <p> </p> <p>Hany:</p> <p>\u662f\u7684\uff0c\u6211\u8ba4\u4e3a\u7ea6\u7ff0\u8bf4\u5f97\u5bf9\u3002\u6211\u8ba4\u4e3a\u4eba\u751f\u4e2d\u6700\u4f1f\u5927\u7684\u793c\u7269\u4e4b\u4e00\u662f\u6bcf\u5929\u9192\u6765\uff0c\u505a\u4f60\u89c9\u5f97\u5145\u5b9e\u3001\u64c5\u957f\u5e76\u4e14\u611f\u5230\u5174\u594b\u7684\u4e8b\u60c5\u3002\u800c\u4e14\uff0c\u987a\u4fbf\u8bf4\u4e00\u4e0b\uff0c\u8fd8\u6709\u4eba\u613f\u610f\u4e3a\u4f60\u4ed8\u94b1\u6765\u505a\u8fd9\u4e9b\u4e8b\u60c5\u3002\u8fd9\u662f\u4e00\u4efd\u96be\u4ee5\u7f6e\u4fe1\u7684\u793c\u7269\u3002</p> <p>\u8003\u8651\u4e00\u4e0b\u4f60\u6b63\u5728\u4f18\u5148\u8003\u8651\u4ec0\u4e48\uff1f\u5bf9\u4e8e\u4e00\u4e9b\u4eba\u6765\u8bf4\uff0c\u4f18\u5148\u8003\u8651\u7684\u662f\u4ed6\u4eec\u60f3\u8d5a\u5f88\u591a\u94b1\u3002\u90a3\u6ca1\u95ee\u9898\uff0c\u8fd9\u662f\u4e00\u4e2a\u4e0d\u540c\u7684\u9009\u62e9\u3002\u4f46\u8981\u8003\u8651\u5bf9\u4f60\u6765\u8bf4\u4ec0\u4e48\u624d\u91cd\u8981\u3002\u800c\u4e14\u987a\u4fbf\u8bf4\u4e00\u4e0b\uff0c\u73b0\u5728\u662f\u5173\u952e\uff1a\u5f53\u4f6020\u5c81\u300130\u5c81\u300140\u5c81\u300150\u5c81\u548c60\u5c81\u65f6\uff0c\u5bf9\u4f60\u91cd\u8981\u7684\u4e1c\u897f\u4f1a\u6709\u6240\u4e0d\u540c\u3002\u6211\u544a\u8bc9\u4f60\uff0c\u6211\u6709\u5f88\u591a\u670b\u53cb\u79bb\u5f00\u7814\u7a76\u751f\u5b66\u6821\uff0c\u5728\u534e\u5c14\u8857\u8d5a\u4e86\u5f88\u591a\u94b1\uff0c\u4f46\u5f53\u4ed6\u4eec40\u5c81\u65f6\u5f00\u59cb\u601d\u8003\u81ea\u5df1\u7684\u9057\u4ea7\u65f6\uff0c\u60c5\u51b5\u5c31\u4e0d\u90a3\u4e48\u7406\u60f3\u4e86\u3002</p> <p>\u800c\u6211\u4f5c\u4e3a\u4e00\u540d\u5b66\u8005\uff0c\u53ef\u4ee5\u770b\u5f85\u6211\u7684\u9057\u4ea7\uff0c\u4e0e\u806a\u660e\u7684\u5e74\u8f7b\u4eba\u4e92\u52a8\uff0c\u8bd5\u56fe\u6fc0\u53d1\u548c\u6fc0\u52b1\u4ed6\u4eec\u3002\u4f60\u53ef\u4ee5\u56e0\u6b64\u611f\u5230\u975e\u5e38\u81ea\u8c6a\u3002\u56e0\u6b64\uff0c\u8bd5\u7740\u4e0d\u53ea\u8003\u8651\u4eca\u5929\uff0c\u8fd8\u8981\u8003\u8651\uff0c\u4f60\u77e5\u9053\uff0c\u672a\u676510\u300120\u300130\u5e74\u3002</p> <p> </p> <p>John:</p> <p>\u662f\u7684\uff0c\u786e\u5b9e\u3002\u800c\u4e14\u4f60\u53ef\u80fd\u4f1a\u6539\u53d8\u65b9\u5411\u3002\u4f60\u77e5\u9053\uff0c\u6211\u76f4\u5230\u5c1d\u8bd5\u624d\u53d1\u73b0\u6211\u559c\u6b22\u6559\u5b66\uff0c\u90a3\u662f\u6211\u4e0a\u7814\u7a76\u751f\u5b66\u6821\u65f6\u3002\u5728\u672c\u79d1\u65f6\u6211\u6ca1\u6709\u5c1d\u8bd5\u8fc7\u8fd9\u4e9b\u3002\u6240\u4ee5\uff0c\u5982\u679c\u4f60\u8fd8\u6ca1\u627e\u5230\u5b8c\u5168\u9002\u5408\u4f60\u7684\u4e8b\u60c5\uff0c\u4e0d\u7528\u62c5\u5fc3\u3002\u4f46\u662f\uff0c\u8bf7\u786e\u4fdd\u4f60\u8003\u8651\u4f60\u6240\u627f\u8bfa\u7684\u4e8b\u60c5\u7684\u957f\u8fdc\u5f71\u54cd\u3002</p>"},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part3/#3_10","title":"3","text":"<p>John\u548cHany\u63d0\u5230\u4e0d\u53ea\u8981\u4e13\u7cbe\u4e8e\u8ba1\u7b97\u673a\u4e13\u4e1a\u7684\u6280\u672f\uff0c\u5b66\u4e60\u5176\u4ed6\u9886\u57df\u7684\u77e5\u8bc6\u4f1a\u66f4\u597d</p> <p>Quote</p> <p>Hany:</p> <p>Ah, what would be a good career path if someone were to want to go into law and policy regarding tech? Since, as John mentioned, they need someone who understands the law and tech side of things.</p> <p>Yeah, that's a good question. A lot of the big companies these days are hiring people to work on policy. For example, there are people who are responsible for global policy, domestic policy. They often are lawyers, which is good in some ways, but I would like to see some more technologists there.</p> <p>For me, I like people who, maybe instead of a CS major, they're a CS minor or, in addition to a CS major, they've also studied politics or economics or something in the social sciences where they can think about the implications of policies. I find historians really fascinating in this regard, political scientists who think about laws, for example, understanding that. But typically, it's that kind of dual career that is very useful.</p> <p> </p> <p>John:</p> <p>Yeah, a lot of people I know who are really interesting and really effective, they know something really well, and then they know something else quite well. And by quite well, I mean not just like they've read a lot of New York Times articles about it, but like, you know, they've gone pretty deep.</p> <p>So yeah, whether it's, you know, the software really well and the policy issues pretty well, or vice versa, you can be extraordinarily effective in either way, much more so than being like, \"Yeah, just even more deep into policy but you don't understand the technology.\"</p> <p>Hany:</p> <p>\u554a\uff0c\u5982\u679c\u6709\u4eba\u60f3\u8981\u4ece\u4e8b\u4e0e\u79d1\u6280\u76f8\u5173\u7684\u6cd5\u5f8b\u548c\u653f\u7b56\u5de5\u4f5c\uff0c\u4ec0\u4e48\u6837\u7684\u804c\u4e1a\u9053\u8def\u4f1a\u662f\u4e00\u4e2a\u4e0d\u9519\u7684\u9009\u62e9\u5462\uff1f\u6b63\u5982John\u6240\u63d0\u5230\u7684\uff0c\u4ed6\u4eec\u9700\u8981\u4e86\u89e3\u6cd5\u5f8b\u548c\u6280\u672f\u65b9\u9762\u7684\u4eba\u624d\u3002</p> <p>\u662f\u7684\uff0c\u8fd9\u662f\u4e00\u4e2a\u5f88\u597d\u7684\u95ee\u9898\u3002\u5982\u4eca\uff0c\u5f88\u591a\u5927\u516c\u53f8\u90fd\u5728\u62db\u8058\u8d1f\u8d23\u653f\u7b56\u65b9\u9762\u5de5\u4f5c\u7684\u4eba\u5458\u3002\u4f8b\u5982\uff0c\u6709\u4eba\u8d1f\u8d23\u5168\u7403\u653f\u7b56\u3001\u56fd\u5185\u653f\u7b56\u3002\u4ed6\u4eec\u901a\u5e38\u662f\u5f8b\u5e08\uff0c\u4ece\u67d0\u4e9b\u65b9\u9762\u6765\u8bf4\u662f\u597d\u7684\uff0c\u4f46\u6211\u5e0c\u671b\u80fd\u770b\u5230\u66f4\u591a\u7684\u6280\u672f\u4eba\u624d\u52a0\u5165\u3002</p> <p>\u5bf9\u6211\u6765\u8bf4\uff0c\u6211\u559c\u6b22\u90a3\u4e9b\u53ef\u80fd\u4e0d\u662f\u8ba1\u7b97\u673a\u79d1\u5b66\u4e13\u4e1a\u4e3b\u4fee\u7684\u4eba\uff0c\u800c\u662f\u8ba1\u7b97\u673a\u79d1\u5b66\u4e13\u4e1a\u8f85\u4fee\u6216\u8005\u540c\u65f6\u5b66\u4e60\u653f\u6cbb\u3001\u7ecf\u6d4e\u6216\u793e\u4f1a\u79d1\u5b66\u7b49\u65b9\u9762\u7684\u4eba\uff0c\u4ed6\u4eec\u80fd\u591f\u601d\u8003\u653f\u7b56\u7684\u5f71\u54cd\u3002\u5728\u8fd9\u65b9\u9762\uff0c\u6211\u89c9\u5f97\u5386\u53f2\u5b66\u5bb6\u5728\u8fd9\u65b9\u9762\u975e\u5e38\u8ff7\u4eba\uff0c\u653f\u6cbb\u79d1\u5b66\u5bb6\u4e5f\u5728\u601d\u8003\u6cd5\u5f8b\u7b49\u65b9\u9762\u7684\u95ee\u9898\uff0c\u7406\u89e3\u8fd9\u4e9b\u662f\u5f88\u6709\u5e2e\u52a9\u7684\u3002\u4f46\u901a\u5e38\u6765\u8bf4\uff0c\u8fd9\u79cd\u53cc\u91cd\u804c\u4e1a\u80cc\u666f\u662f\u975e\u5e38\u6709\u7528\u7684\u3002</p> <p> </p> <p>John:</p> <p>\u662f\u7684\uff0c\u6211\u8ba4\u8bc6\u7684\u8bb8\u591a\u975e\u5e38\u6709\u8da3\u4e14\u975e\u5e38\u6709\u6548\u7684\u4eba\uff0c\u4ed6\u4eec\u64c5\u957f\u67d0\u4e2a\u9886\u57df\uff0c\u7136\u540e\u53c8\u5bf9\u53e6\u4e00\u4e2a\u9886\u57df\u4e86\u89e3\u5f97\u76f8\u5f53\u900f\u5f7b\u3002\u5f53\u6211\u8bf4\u76f8\u5f53\u900f\u5f7b\u65f6\uff0c\u6211\u6307\u7684\u4e0d\u4ec5\u4ec5\u662f\u8bfb\u4e86\u5f88\u591a\u300a\u7ebd\u7ea6\u65f6\u62a5\u300b\u7684\u6587\u7ae0\uff0c\u800c\u662f\u6df1\u5165\u4e86\u89e3\u4e86\u8bb8\u591a\u3002</p> <p>\u6240\u4ee5\uff0c\u662f\u7684\uff0c\u65e0\u8bba\u662f\u5bf9\u8f6f\u4ef6\u4e86\u89e3\u5f97\u5f88\u900f\u5f7b\uff0c\u5bf9\u653f\u7b56\u95ee\u9898\u4e5f\u4e86\u89e3\u5f97\u76f8\u5f53\u900f\u5f7b\uff0c\u8fd8\u662f\u76f8\u53cd\uff0c\u4f60\u90fd\u53ef\u4ee5\u5728\u4efb\u4e00\u65b9\u9762\u53d6\u5f97\u975e\u51e1\u7684\u6210\u5c31\uff0c\u8fdc\u6bd4\u53ea\u662f\u6df1\u5165\u4e86\u89e3\u653f\u7b56\u800c\u5bf9\u6280\u672f\u4e00\u65e0\u6240\u77e5\u66f4\u4e3a\u6709\u6548\u3002</p>"},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part3/#4_4","title":"4","text":"<p>\u6709\u4eba\u63d0\u95ee\u5c45\u5bb6\u4e0a\u5b66\u611f\u5230\u4e0e\u5b66\u6821\u8131\u79bb\uff0cHany\u8fdb\u884c\u56de\u7b54\uff0c\u5e76\u63d0\u5230\u5904\u4e8e\u4f4e\u8c37\u4e2d\u7684\u5efa\u8bae</p> <p>Quote</p> <p>Hany:</p> <p>What, um, yeah, god, this is a tough question. I don't know that I have an answer, but I want to answer the question anyway. Um, what advice would you have for someone living at home for this year and feeling kind of detached from the university and academia?</p> <p>Oh man, I gotta tell you, that question just breaks my heart because I know a lot of people are going through that. So I don't know if I have a good answer for you, but let me try a few things. Um, this will end. We will come out at the other end of this. And the one thing that I've learned, having been around for a few decades now, is when you're in the middle of a hard time like this, whether it's something like this global pandemic or it's family or it's work or it's a relationship or it's personal or it's health, when you're in the middle of it, it feels really bad. And it is, but you always come out the other end.</p> <p>And in all of these cases, I will look back at it and will say to myself, you know what, I've come back from this, better, stronger, more mature. Um, and there will be positives that come from this. So for me, what I do is I try to think down the line, six months, nine months from now, we're going to be back, and will we be better for this? We will be, hopefully, better human beings, better societies, and we will learn how to work through hardships. It's a shitty answer, by the way, for what to do right now, but it's a more hopeful answer for what's downstream for you.</p> <p>Hany:</p> <p>\u55ef\uff0c\u55ef\uff0c\u5929\u54ea\uff0c\u8fd9\u662f\u4e00\u4e2a\u68d8\u624b\u7684\u95ee\u9898\u3002\u6211\u4e0d\u77e5\u9053\u6211\u662f\u5426\u6709\u4e00\u4e2a\u7b54\u6848\uff0c\u4f46\u6211\u8fd8\u662f\u60f3\u56de\u7b54\u8fd9\u4e2a\u95ee\u9898\u3002\u55ef\uff0c\u5bf9\u4e8e\u90a3\u4e9b\u4eca\u5e74\u7559\u5728\u5bb6\u91cc\u5e76\u611f\u5230\u6709\u70b9\u8131\u79bb\u5927\u5b66\u548c\u5b66\u672f\u754c\u7684\u4eba\uff0c\u4f60\u6709\u4ec0\u4e48\u5efa\u8bae\uff1f</p> <p>\u54e6\uff0c\u5929\u554a\uff0c\u6211\u5f97\u544a\u8bc9\u4f60\uff0c\u8fd9\u4e2a\u95ee\u9898\u771f\u7684\u8ba9\u6211\u5fc3\u788e\uff0c\u56e0\u4e3a\u6211\u77e5\u9053\u5f88\u591a\u4eba\u90fd\u7ecf\u5386\u4e86\u8fd9\u79cd\u60c5\u51b5\u3002\u6240\u4ee5\u6211\u4e0d\u77e5\u9053\u6211\u662f\u5426\u6709\u4e00\u4e2a\u597d\u7684\u7b54\u6848\u7ed9\u4f60\uff0c\u4f46\u8ba9\u6211\u8bd5\u8bd5\u51e0\u4e2a\u65b9\u6cd5\u3002\u55ef\uff0c\u8fd9\u4f1a\u7ed3\u675f\u7684\u3002\u6211\u4eec\u4f1a\u5ea6\u8fc7\u96be\u5173\u7684\u3002\u800c\u6211\u5b66\u5230\u7684\u4e00\u4ef6\u4e8b\u662f\uff0c\u7ecf\u5386\u4e86\u51e0\u5341\u5e74\uff0c\u5f53\u4f60\u5904\u4e8e\u8fd9\u6837\u7684\u8270\u96be\u65f6\u523b\uff0c\u65e0\u8bba\u662f\u50cf\u8fd9\u6837\u7684\u5168\u7403\u5927\u6d41\u884c\uff0c\u8fd8\u662f\u5bb6\u5ead\u3001\u5de5\u4f5c\u3001\u4eba\u9645\u5173\u7cfb\u3001\u4e2a\u4eba\u95ee\u9898\u6216\u5065\u5eb7\u95ee\u9898\uff0c\u5f53\u4f60\u6b63\u5904\u4e8e\u5176\u4e2d\u65f6\uff0c\u611f\u89c9\u771f\u7684\u5f88\u7cdf\u7cd5\u3002\u786e\u5b9e\u5982\u6b64\uff0c\u4f46\u4f60\u603b\u4f1a\u8d70\u51fa\u56f0\u5883\u3002</p> <p>\u5728\u6240\u6709\u8fd9\u4e9b\u60c5\u51b5\u4e0b\uff0c\u6211\u4f1a\u56de\u987e\u4e00\u4e0b\uff0c\u5bf9\u81ea\u5df1\u8bf4\uff0c\u4f60\u77e5\u9053\u5417\uff0c\u6211\u4ece\u4e2d\u8d70\u4e86\u51fa\u6765\uff0c\u53d8\u5f97\u66f4\u597d\u3001\u66f4\u5f3a\u5927\u3001\u66f4\u6210\u719f\u3002\u55ef\uff0c\u4f1a\u6709\u4e00\u4e9b\u79ef\u6781\u7684\u65b9\u9762\u3002\u6240\u4ee5\u5bf9\u6211\u6765\u8bf4\uff0c\u6211\u505a\u7684\u662f\u5c3d\u91cf\u5f80\u524d\u770b\uff0c\u516d\u4e2a\u6708\u3001\u4e5d\u4e2a\u6708\u540e\uff0c\u6211\u4eec\u4f1a\u56de\u6765\u7684\uff0c\u6211\u4eec\u4f1a\u56e0\u6b64\u53d8\u5f97\u66f4\u597d\u5417\uff1f\u6211\u4eec\u4f1a\uff0c\u5e0c\u671b\u6210\u4e3a\u66f4\u597d\u7684\u4eba\u7c7b\uff0c\u66f4\u597d\u7684\u793e\u4f1a\uff0c\u6211\u4eec\u4f1a\u5b66\u4f1a\u5982\u4f55\u514b\u670d\u56f0\u5883\u3002\u8fd9\u5bf9\u4e8e\u73b0\u5728\u8be5\u600e\u4e48\u529e\u6765\u8bf4\u662f\u4e00\u4e2a\u7cdf\u7cd5\u7684\u7b54\u6848\uff0c\u4f46\u5bf9\u4e8e\u4f60\u672a\u6765\u7684\u60c5\u51b5\u800c\u8a00\uff0c\u8fd9\u662f\u4e00\u4e2a\u66f4\u6709\u5e0c\u671b\u7684\u7b54\u6848\u3002</p>"},{"location":"zh/Notes%20of%20Courses/CS61A/CS61A_part3/#5_3","title":"5","text":"<p>John\u63d0\u5230\u4e0d\u8981\u4e0e\u4ed6\u4eba\u6bd4\u8f83\uff0c\u800c\u662f\u6ce8\u91cd\u81ea\u6211\u7684\u63d0\u5347</p> <p>Quote</p> <p>John:</p> <p>Yeah, we've got two minutes left. Maybe, um, since I started by talking about the final exam, I'll end with something related, which is a piece of advice that I got when I was getting married. So, I was a Ph.D. student at the time, and my mom pulled me aside on my wedding day and said, \"John, I want to give you some advice.\" And I was like, \"Oh, great. She's going to tell me to listen to my wife or whatever.\" But she didn't. She said only two words that have stuck with me for a long time. She said, \"Don't compare.\" And then she was like, \"Okay, you can go back to doing whatever you're doing.\"</p> <p>At the time, this was very hard for me to process because I was in a university, which is all about comparing people based on, like, what their exam score was. And, you know, it turns out that out there in the world, there are no exams that everybody takes that are standardized anymore. All that matters is what you go and get done on your own particular path. So, comparing yourselves to other people becomes meaningless rapidly, as what really matters is what you can do yourself, like what you're capable of and what you bother to do and how you choose to spend your time.</p> <p>But it took years of this two-word phrase, \"Don't compare,\" to marinate inside of me, and for me to realize that my self-worth really has nothing to do with what other people can do and whether I can do it better than them or worse than them, and it has everything to do with what I've done and what I'm gonna do next, and how I spend my time to better myself. So, I should just focus on improving myself and forget about what everybody else is doing.</p> <p>So, um, you're gonna go take a final, and a bunch of other people are gonna take this final exam too. But who cares? This course is not graded on a curve; it's just you doing your best work. So, I do hope you prepare, I do hope you get some good sleep and all of that, but at the same time, I don't think you need to worry about the histogram and how your friends are doing. Just help each other out and focus on yourself in the end.</p> <p> </p> <p>Hany:</p> <p>That's incredibly beautiful, John. I want to say two things. First of all, I'm gonna go talk to my mother because I didn't get nearly such good advice growing up, so I'm gonna have a word with her. I want to re-emphasize this because this is something that took me a long time in life to understand - not to compare. There's a trap too that we fall into, which is that we compare, for example, how big our house is to that one friend, how much money we make to another friend, the kind of clothes we have to this friend, and how smart we are to that friend. We pick and choose these things, and that's, first of all, even doing that individually is meaningless. But also, it's a trap, and this is the problem with social media - you see these curated worlds of other people, and it's a trap. One of the great things about getting older (and you will get there, I promise you) is that you will realize it's a trap and it means absolutely nothing. It really is a very internal thing. What are you doing? Who do you want to be? How do you want to go through this world? How do you want to treat other people? At the end of the day, that, and almost nothing else, is going to matter. And you've got to just trust that it's going to be there.</p> <p>John:</p> <p>\u662f\u7684\uff0c\u6211\u4eec\u8fd8\u6709\u4e24\u5206\u949f\u5de6\u53f3\uff0c\u4e5f\u8bb8\uff0c\u7531\u4e8e\u6211\u4e00\u5f00\u59cb\u8c08\u5230\u671f\u672b\u8003\u8bd5\uff0c\u6211\u4f1a\u4ee5\u4e0e\u4e4b\u76f8\u5173\u7684\u4e8b\u60c5\u7ed3\u675f\u3002\u8fd9\u4e0e\u6211\u7ed3\u5a5a\u65f6\u83b7\u5f97\u7684\u4e00\u4e9b\u5efa\u8bae\u6709\u5173\u3002\u90a3\u65f6\uff0c\u6211\u8fd8\u662f\u4e00\u540d\u535a\u58eb\u751f\uff0c\u6211\u5988\u5988\u5728\u6211\u5a5a\u793c\u90a3\u5929\u62c9\u7740\u6211\u4e00\u8fb9\u8bf4\uff1a\u201cJohn\uff0c\u6211\u60f3\u7ed9\u4f60\u4e00\u4e9b\u5efa\u8bae\u3002\u201d\u6211\u5f53\u65f6\u89c9\u5f97\uff1a\u201c\u54e6\uff0c\u592a\u597d\u4e86\uff0c\u5979\u4f1a\u544a\u8bc9\u6211\u542c\u4ece\u59bb\u5b50\u7684\u8bdd\u6216\u5176\u4ed6\u4ec0\u4e48\u7684\u3002\u201d\u4f46\u5979\u6ca1\u6709\u3002\u5979\u53ea\u8bf4\u4e86\u4e24\u4e2a\u8bcd\uff0c\u8fd9\u4e24\u4e2a\u8bcd\u4e00\u76f4\u5728\u6211\u5fc3\u4e2d\u3002\u5979\u8bf4\uff1a\u201c\u4e0d\u8981\u6bd4\u8f83\u3002\u201d\u7136\u540e\u5979\u8bf4\uff1a\u201c\u597d\u5427\uff0c\u4f60\u53ef\u4ee5\u56de\u53bb\u505a\u4f60\u6b63\u5728\u505a\u7684\u4e8b\u60c5\u4e86\u3002\u201d</p> <p>\u5f53\u65f6\uff0c\u8fd9\u5bf9\u6211\u6765\u8bf4\u5f88\u96be\u7406\u89e3\uff0c\u56e0\u4e3a\u6211\u8eab\u5904\u4e00\u4e2a\u5927\u5b66\uff0c\u90a3\u91cc\u4e00\u5207\u90fd\u662f\u5173\u4e8e\u6839\u636e\u8003\u8bd5\u6210\u7ee9\u6bd4\u8f83\u4eba\u4eec\u7684\u5730\u65b9\u3002\u4f60\u77e5\u9053\uff0c\u4e8b\u5b9e\u8bc1\u660e\uff0c\u5728\u8fd9\u4e2a\u4e16\u754c\u4e0a\uff0c\u6ca1\u6709\u4eba\u518d\u63a5\u53d7\u6807\u51c6\u5316\u7684\u8003\u8bd5\u4e86\u3002\u771f\u6b63\u91cd\u8981\u7684\u662f\u4f60\u6309\u7167\u81ea\u5df1\u7684\u7279\u5b9a\u8def\u5f84\u6240\u505a\u7684\u4e8b\u60c5\u3002\u56e0\u6b64\uff0c\u4e0e\u5176\u4ed6\u4eba\u6bd4\u8f83\u53d8\u5f97\u8fc5\u901f\u53d8\u5f97\u6beb\u65e0\u610f\u4e49\uff0c\u56e0\u4e3a\u771f\u6b63\u91cd\u8981\u7684\u662f\u4f60\u81ea\u5df1\u80fd\u505a\u4ec0\u4e48\uff0c\u4f60\u6709\u4ec0\u4e48\u672c\u9886\uff0c\u4ee5\u53ca\u4f60\u9009\u62e9\u5982\u4f55\u5ea6\u8fc7\u65f6\u95f4\u3002</p> <p>\u4f46\u662f\uff0c\u201c\u4e0d\u8981\u6bd4\u8f83\u201d\u8fd9\u4e24\u4e2a\u8bcd\u5728\u6211\u5185\u5fc3\u53d1\u9175\u4e86\u597d\u591a\u5e74\uff0c\u6211\u624d\u610f\u8bc6\u5230\u6211\u7684\u81ea\u6211\u4ef7\u503c\u5b9e\u9645\u4e0a\u4e0e\u5176\u4ed6\u4eba\u80fd\u505a\u4ec0\u4e48\u65e0\u5173\uff0c\u6211\u662f\u5426\u80fd\u505a\u5f97\u6bd4\u4ed6\u4eec\u597d\u6216\u5dee\uff0c\u800c\u4e0e\u6211\u5df2\u7ecf\u505a\u4e86\u4ec0\u4e48\u4ee5\u53ca\u6211\u5c06\u6765\u4f1a\u505a\u4ec0\u4e48\uff0c\u4ee5\u53ca\u6211\u5982\u4f55\u82b1\u65f6\u95f4\u6765\u63d0\u5347\u81ea\u5df1\u6709\u5173\u3002\u6240\u4ee5\uff0c\u6211\u5e94\u8be5\u4e13\u6ce8\u4e8e\u6539\u5584\u81ea\u5df1\uff0c\u5fd8\u8bb0\u5176\u4ed6\u4eba\u5728\u505a\u4ec0\u4e48\u3002</p> <p>\u6240\u4ee5\uff0c\u4f60\u8981\u53bb\u53c2\u52a0\u671f\u672b\u8003\u8bd5\uff0c\u5176\u4ed6\u5f88\u591a\u4eba\u4e5f\u4f1a\u53c2\u52a0\u8fd9\u4e2a\u671f\u672b\u8003\u8bd5\u3002\u4f46\u8c01\u5728\u4e4e\u5462\uff1f\u8fd9\u95e8\u8bfe\u4e0d\u662f\u6309\u7167\u66f2\u7ebf\u8bc4\u5206\u7684\uff0c\u8fd9\u53ea\u662f\u4f60\u5c3d\u529b\u800c\u4e3a\u3002\u6240\u4ee5\uff0c\u6211\u5e0c\u671b\u4f60\u505a\u597d\u51c6\u5907\uff0c\u4e5f\u5e0c\u671b\u4f60\u6709\u5145\u8db3\u7684\u7761\u7720\u7b49\u7b49\uff0c\u4f46\u4e0e\u6b64\u540c\u65f6\uff0c\u6211\u8ba4\u4e3a\u4f60\u65e0\u9700\u62c5\u5fc3\u76f4\u65b9\u56fe\u548c\u4f60\u7684\u670b\u53cb\u4eec\u7684\u60c5\u51b5\u3002\u4e92\u76f8\u5e2e\u52a9\uff0c\u6700\u7ec8\u4e13\u6ce8\u4e8e\u81ea\u5df1\u3002</p> <p> </p> <p>Hany:</p> <p>\u8fd9\u771f\u7684\u975e\u5e38\u7f8e\u597d\uff0c\u7ea6\u7ff0\u3002\u6211\u60f3\u8bf4\u4e24\u4ef6\u4e8b\u3002\u9996\u5148\uff0c\u6211\u8981\u53bb\u627e\u6211\u5988\u5988\u804a\u804a\uff0c\u56e0\u4e3a\u6211\u5728\u6210\u957f\u8fc7\u7a0b\u4e2d\u6ca1\u6709\u5f97\u5230\u8fd9\u4e48\u597d\u7684\u5efa\u8bae\uff0c\u6240\u4ee5\u6211\u8981\u548c\u5979\u8c08\u8c08\u3002\u6211\u60f3\u91cd\u7533\u4e00\u4e0b\uff0c\u56e0\u4e3a\u8fd9\u662f\u6211\u5f88\u957f\u65f6\u95f4\u624d\u660e\u767d\u7684\u4e8b\u60c5\u2014\u2014\u4e0d\u8981\u6bd4\u8f83\u3002\u6211\u4eec\u4e5f\u4f1a\u9677\u5165\u4e00\u4e2a\u9677\u9631\uff0c\u6bd4\u5982\u6211\u4eec\u4f1a\u6bd4\u8f83\u6211\u4eec\u7684\u623f\u5b50\u6709\u591a\u5927\uff0c\u4e0e\u670b\u53cb\u76f8\u6bd4\u6211\u4eec\u6323\u591a\u5c11\u94b1\uff0c\u4e0e\u53e6\u4e00\u4e2a\u670b\u53cb\u76f8\u6bd4\u6211\u4eec\u6709\u4ec0\u4e48\u6837\u7684\u8863\u670d\uff0c\u751a\u81f3\u4e0e\u90a3\u4f4d\u670b\u53cb\u76f8\u6bd4\u6211\u4eec\u6709\u591a\u806a\u660e\u3002\u6211\u4eec\u9009\u62e9\u8fd9\u4e9b\u4e8b\u60c5\uff0c\u9996\u5148\uff0c\u5355\u72ec\u505a\u8fd9\u4e9b\u662f\u6beb\u65e0\u610f\u4e49\u7684\u3002\u4f46\u540c\u6837\uff0c\u8fd9\u662f\u4e00\u4e2a\u9677\u9631\uff0c\u8fd9\u5c31\u662f\u793e\u4ea4\u5a92\u4f53\u7684\u95ee\u9898\u2014\u2014\u4f60\u770b\u5230\u5176\u4ed6\u4eba\u7ecf\u8fc7\u7cbe\u5fc3\u7b56\u5212\u7684\u4e16\u754c\uff0c\u8fd9\u662f\u4e00\u4e2a\u9677\u9631\u3002\u53d8\u8001\u7684\u4e00\u4e2a\u597d\u5904\uff08\u4f60\u4f1a\u5230\u8fbe\u90a3\u91cc\u7684\uff0c\u6211\u5411\u4f60\u4fdd\u8bc1\uff09\u662f\u4f60\u4f1a\u610f\u8bc6\u5230\u8fd9\u662f\u4e00\u4e2a\u9677\u9631\uff0c\u5b83\u6beb\u65e0\u610f\u4e49\u3002\u8fd9\u786e\u5b9e\u662f\u4e00\u79cd\u975e\u5e38\u5185\u5728\u7684\u4e1c\u897f\u3002\u4f60\u5728\u505a\u4ec0\u4e48\uff1f\u4f60\u60f3\u6210\u4e3a\u8c01\uff1f\u4f60\u60f3\u5982\u4f55\u5ea6\u8fc7\u8fd9\u4e2a\u4e16\u754c\uff1f\u4f60\u60f3\u5982\u4f55\u5bf9\u5f85\u5176\u4ed6\u4eba\uff1f\u5728\u4e00\u5929\u7ed3\u675f\u65f6\uff0c\u90a3\u51e0\u4e4e\u662f\u552f\u4e00\u91cd\u8981\u7684\u4e8b\u60c5\u3002\u4f60\u53ea\u9700\u76f8\u4fe1\u5b83\u4f1a\u5728\u90a3\u91cc\u3002</p>"},{"location":"zh/Notes%20of%20Courses/CS61B/CS61B/","title":"CS61B","text":"<p> \u7ea6 10610 \u4e2a\u5b57  963 \u884c\u4ee3\u7801  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 47 \u5206\u949f</p> <p>cs61b\u53ef\u7528\u7684gradescope\u8bfe\u7a0b\u9080\u8bf7\u7801\u662f MB7ZPY\uff0c\u622a\u6b62\u523024\u5e74\u5e95</p> <p>\u53c2\u8003</p> <p>cs61b Lab0/1 setup - \u77e5\u4e4e (zhihu.com)</p>"},{"location":"zh/Notes%20of%20Courses/CS61B/CS61B/#lecture-0-intro-hello-world-java","title":"Lecture 0 Intro, Hello World Java","text":""},{"location":"zh/Notes%20of%20Courses/CS61B/CS61B/#1","title":"1","text":"<p>java\u4e2d\u6240\u6709\u51fd\u6570\u90fd\u5e94\u8be5\u5b58\u5728\u4e8e\u7c7b\u4e2d\uff0c\u56e0\u6b64java\u4e2d\u6240\u6709\u7684\u51fd\u6570\u90fd\u662f\u65b9\u6cd5 method</p>"},{"location":"zh/Notes%20of%20Courses/CS61B/CS61B/#hw-0","title":"HW 0","text":""},{"location":"zh/Notes%20of%20Courses/CS61B/CS61B/#1_1","title":"1","text":"<p>java\u4e2d\u6570\u7ec4\u7684\u4f7f\u7528\u65b9\u6cd5</p> <pre><code>int[] numbers = new int[3];\nnumbers[0] = 4;\nnumbers[1] = 7;\nnumbers[2] = 10;\nSystem.out.println(numbers[1]);\n</code></pre> <p>\u6216\u8005</p> <pre><code>int[] numbers = new int[]{4, 7, 10};\nSystem.out.println(numbers[1]);\n</code></pre> <p>\u53ef\u4ee5\u4f7f\u7528 <code>.length</code> \u6765\u83b7\u53d6\u6570\u7ec4\u7684\u957f\u5ea6\uff0c\u4f8b\u5982</p> <pre><code>int[] numbers = new int[]{4, 7, 10};\nSystem.out.println(numbers.length);\n</code></pre>"},{"location":"zh/Notes%20of%20Courses/CS61B/CS61B/#2","title":"2","text":"<p>In Java, the <code>for</code> keyword has the syntax below:</p> <pre><code>for (initialization; termination; increment) {\n    statement(s)\n}\n</code></pre> <p>The initialization, termination, and increment must be semicolon separated. Each of these three can feature multiple comma-separated statements, e.g.</p> <pre><code>for (int i = 0, j = 10; i &lt; j; i += 1) {\n    System.out.println(i + j);\n}\n</code></pre> <p>Comma separated <code>for</code> loops should be used sparingly.</p> <p>java\u4e2d <code>for</code> \u7684\u4f7f\u7528\u65b9\u6cd5(\u8ddfc\u4e2d\u5dee\u4e0d\u591a)</p>"},{"location":"zh/Notes%20of%20Courses/CS61B/CS61B/#3","title":"3","text":"<p>Exercise 4</p> code <pre><code>public class BreakContinue {\n    public static void windowPosSum(int[] a, int n) {\n        /** your code here */ \n        for (int i = 0; i &lt; a.length; i += 1) {\n            if (a[i] &lt; 0) {\n                continue;\n            }\n\n            int sum = 0;\n            for (int j = 0; j &lt;= n; j += 1) {\n                if (i + j &gt;= a.length) {\n                    break;\n                }\n                sum += a[i + j];\n            }\n\n            a[i] = sum;\n        }\n    }\n\n    public static void main(String[] args) {\n        int[] a = {1, 2, -3, 4, 5, 4};\n        int n = 3;\n        windowPosSum(a, n);\n\n        // Should print 4, 8, -3, 13, 9, 4\n        System.out.println(java.util.Arrays.toString(a));\n    }\n}\n</code></pre>"},{"location":"zh/Notes%20of%20Courses/CS61B/CS61B/#4","title":"4","text":"<p><code>for</code> \u5faa\u73af\u8bed\u53e5\u7684\u589e\u5f3a</p> <p>java\u4e2d <code>for</code> \u53ef\u4ee5\u6709\u76f8\u4f3c\u4e8epython\u4e2d\u5217\u8868\u63a8\u5bfc\u5f0f\u7684\u7528\u6cd5(\u628a\u6570\u7ec4\u4e2d\u7684\u5143\u7d20\u89e3\u538b\u51fa\u6765)</p> <pre><code>public class EnhancedForBreakDemo {\n    public static void main(String[] args) {\n        String[] a = {\"cat\", \"dog\", \"laser horse\", \"ketchup\", \"horse\", \"horbse\"};\n\n        for (String s : a) {\n            for (int j = 0; j &lt; 3; j += 1) {\n                System.out.println(s);\n                if (s.contains(\"horse\")) {\n                    break;\n                }                \n            }\n        }\n    }\n}\n</code></pre> <p>\u6ce8\u610f\u5230\uff0cjava\u4e2d\uff0c\u5b57\u7b26\u4e32String\u6709 <code>contain</code> \u65b9\u6cd5\uff0c\u53ef\u4ee5\u5224\u65ad\u662f\u5426\u5305\u542b\u67d0\u4e2a\u5b50\u5b57\u7b26\u4e32</p>"},{"location":"zh/Notes%20of%20Courses/CS61B/CS61B/#lecture-2-defining-and-using-classes","title":"Lecture 2 Defining and Using Classes","text":""},{"location":"zh/Notes%20of%20Courses/CS61B/CS61B/#1_2","title":"1","text":"<p>Josh\u6f14\u793a\u4e86\u5728\u7ec8\u7aef\u4e2d\u8fd0\u884cjava\u6587\u4ef6\u7684\u65b9\u6cd5\uff0c</p> <p>\u9700\u8981\u5148\u4f7f\u7528 <code>javac</code> \u6765\u7f16\u8bd1java\u6587\u4ef6\uff0c\u7136\u540e\u4f1a\u751f\u6210class\u6587\u4ef6\uff0c</p> <p>\u518d\u4f7f\u7528 <code>java</code> \u6587\u4ef6\u6765\u8fd0\u884cclass\u6587\u4ef6(\u8f93\u5165\u547d\u4ee4\u65f6\u53ef\u4ee5\u5ffd\u7565 <code>.class</code> \u540e\u7f00)</p> <p><code>cat</code> \u547d\u4ee4\u53ef\u4ee5\u5728\u7ec8\u7aef\u4e2d\u8f93\u51fa/\u663e\u793a\u6587\u4ef6\u7684\u5185\u5bb9</p> <p>Josh\u63d0\u5230\u8fd0\u884cjava\u7a0b\u5e8f\u7684\u4e24\u6b65\u6b65\u9aa4</p> <pre><code>flowchart LR\na(Hello.java) --&gt; b[Compiler&lt;br&gt;&lt;code&gt;javac&lt;/code&gt;] --&gt; c(Hello.class) --&gt; d[Interpreter&lt;br&gt;&lt;code&gt;java&lt;/code&gt;] --&gt; e([stuff&lt;br&gt;happens])</code></pre> <p>\u4f46Josh\u4e5f\u63d0\u5230\u8fd9\u4e0d\u662f\u552f\u4e00(\u8fd0\u884cjava\u7a0b\u5e8f)\u7684\u65b9\u6cd5</p>"},{"location":"zh/Notes%20of%20Courses/CS61B/CS61B/#2_1","title":"2","text":"<p>Josh\u6f14\u793a\u4e86\u8c03\u7528\u5176\u4ed6java\u6587\u4ef6\u4e2d\u7684\u51fd\u6570</p> DogLauncher.javaDog.java <pre><code>public class DogLauncher {\n    public static void main(String[] args) {\n        Dog.makeNoise();\n    }\n}\n</code></pre> <pre><code>public class Dog {\n    public static void makeNoise() {\n        System.out.println(\"Bark!\");\n    }\n}\n</code></pre> <p>\u7136\u540e\u53d1\u73b0\uff0c\u540c\u4e00\u76ee\u5f55\u4e0b\u7684java\u6587\u4ef6\u4e4b\u95f4\u53ef\u4ee5(\u50cfJosh\u6f14\u793a\u7684\u4e00\u6837)\u76f4\u63a5\u76f8\u4e92\u8c03\u7528\u51fd\u6570(\u800c\u4e0d\u9700\u8981 <code>import</code> \uff0c\u4e0d\u540c\u76ee\u5f55\u4e0b\u4e0d\u80fd\u8fd9\u6837\u76f4\u63a5\u8c03\u7528)</p>"},{"location":"zh/Notes%20of%20Courses/CS61B/CS61B/#3_1","title":"3","text":"<p>\u76f4\u63a5\u901a\u8fc7 <code>\u7c7b\u540d.\u65b9\u6cd5</code> \u7684\u65b9\u6cd5\u53ea\u80fd\u8c03\u7528 <code>static</code> \u5c5e\u6027\u7684\u51fd\u6570(\u611f\u89c9\u6709\u70b9\u7c7b\u4f3c\u4e8epython\u4e2d\u7684\u7c7b\u5c5e\u6027\u548c\u5b9e\u4f8b\u5c5e\u6027\u7684\u533a\u522b)\uff0c\u6ca1\u6709 <code>static</code> \u7684\u51fd\u6570\u53ea\u80fd\u901a\u8fc7\u5b9e\u4f8b\u53bb\u8c03\u7528</p> <pre><code>public class Dog {\n    public int weightInPounds;\n\n    public void makeNoise() {\n        if (weightInPounds &lt; 10) {\n            System.out.println(\"yip!\");\n        } else if (weightInPounds &lt; 30) {\n            System.out.println(\"bark.\");\n        } else {\n            System.out.println(\"woooof!\");\n        }\n    }\n}\n</code></pre> <p>\u5982\u679c\u76f4\u63a5\u4f7f\u7528\u7c7b\u540d\u53bb\u8c03\u7528\uff0c</p> <pre><code>public class DogLauncher {\n    public static void main(String[] args) {\n        Dog.makeNoise();\n    }\n}\n</code></pre> <p>\u4f1a\u6709\u5982\u4e0b\u62a5\u9519</p> <pre><code>DogLauncher.java:3 error: non-static method makeNoise() cannot be referenced from a static context:\n        Dog.makeNoise();\n1 error\n</code></pre> <p>\u5982\u679c\u4fee\u6539\u6210</p> <pre><code>public class DogLauncher {\n    public static void main(String[] args) {\n        Dog d = new Dog();\n        d.weightInPounds = 20;\n        d.makeNoise();\n    }\n}\n</code></pre> <p>\u5c31\u80fd\u6b63\u5e38\u7f16\u8bd1</p>"},{"location":"zh/Notes%20of%20Courses/CS61B/CS61B/#4_1","title":"4","text":"<p>\u5b9a\u4e49\u4e00\u4e2a\u7c7b\u7684\u5927\u6982\u4ee3\u7801\u7ed3\u6784</p> <p></p>"},{"location":"zh/Notes%20of%20Courses/CS61B/CS61B/#5","title":"5","text":"<p>\u5728\u4f7f\u7528\u81ea\u5b9a\u4e49\u7684\u7c7b\u6765\u521b\u5efa\u6570\u7ec4\u65f6\uff0c\u6570\u7ec4\u5728\u521b\u5efa\u65f6\u5e76\u4e0d\u4f1a\u521b\u5efa\u7c7b\u7684\u5bf9\u8c61\uff0c\u5373</p> <pre><code>Dog[] dogs = new Dog[2];\n</code></pre> <p>\u53ea\u4f1a\u521b\u5efa\u4e00\u4e2a\u6570\u7ec4\uff0c\u5e76\u4e0d\u4f1a\u521b\u5efa\u4e24\u4e2aDog\u5b9e\u4f8b</p>"},{"location":"zh/Notes%20of%20Courses/CS61B/CS61B/#6","title":"6","text":"<p><code>static</code> \u7684\u51fd\u6570\u4e0d\u80fd\u8c03\u7528\u5b9e\u4f8b\u7684\u53d8\u91cf</p>"},{"location":"zh/Notes%20of%20Courses/CS61B/CS61B/#7","title":"7","text":"<p>\u5728\u4e0d\u662f <code>static</code> \u7684\u51fd\u6570\u4e2d\uff0c\u53ef\u4ee5\u4f7f\u7528 <code>this</code> \u6765\u83b7\u5f97\u81ea\u8eab\u8fd9\u4e2a\u5b9e\u4f8b(\u4e0ec\u4e2d\u7684 <code>this</code> \u7565\u6709\u4e0d\u540c\uff0cc\u4e2d <code>this</code> \u662f\u6307\u9488\uff0cjava\u4e2d <code>this</code> \u4e0d\u662f\u6307\u9488)</p>"},{"location":"zh/Notes%20of%20Courses/CS61B/CS61B/#8","title":"8","text":"<p>Josh\u5efa\u8bae\uff0c\u5bf9\u4e8e\u7c7b\u4e2d\u7684 <code>static</code> \u7684\u5c5e\u6027\uff0c\u4f7f\u7528\u7c7b\u540d\u53bb\u83b7\u53d6\u8fd9\u4e2a\u5c5e\u6027\uff0c\u800c\u4e0d\u8981\u4f7f\u7528\u5b9e\u4f8b\u53bb\u83b7\u53d6\u8fd9\u4e2a\u5c5e\u6027</p>"},{"location":"zh/Notes%20of%20Courses/CS61B/CS61B/#9","title":"9","text":"<p><code>static</code> \u7684\u51fd\u6570\u4e2d\u5982\u679c\u60f3\u8981\u8bbf\u95ee \u975e <code>static</code> \u7684\u5c5e\u6027(\u5373\u5b9e\u4f8b\u5c5e\u6027)\uff0c\u9700\u8981\u4f20\u5165\u5b9e\u4f8b\u5e76\u901a\u8fc7\u5b9e\u4f8b\u6765\u8bbf\u95ee</p>"},{"location":"zh/Notes%20of%20Courses/CS61B/CS61B/#10","title":"10","text":"<p>Josh\u5728\u8bfe\u4e0a\u63d0\u5230\u4e86\u4e00\u4e2a\u7f51\u7ad9\uff0c\u548ccs61a\u4e2d\u7684python tutor\u7c7b\u4f3c\u7684\u7f51\u7ad9\uff0c\u4f46\u662f\u662fjava\u8bed\u8a00</p> <p>Java Visualizer (uwaterloo.ca)</p>"},{"location":"zh/Notes%20of%20Courses/CS61B/CS61B/#11","title":"11","text":"<p>Josh\u63d0\u5230\uff0c\u4f7f\u7528helper\u51fd\u6570\u6765\u628a\u5927\u95ee\u9898\u5206\u89e3\u6210\u5c0f\u95ee\u9898\uff0c</p> <p>\u5e76\u4e14\u8fd9\u6837\u505a\u6709\u51e0\u70b9\u597d\u5904</p> <ul> <li>more narratively clear</li> <li>easier to get right when you write it</li> <li>easier to debug</li> </ul> <p>\u7136\u540eJosh\u901a\u8fc7\u4e00\u4e2a\u5177\u4f53\u4f8b\u5b50\u6f14\u793a\uff0c</p> <p></p> <p>Josh\u5c55\u793a\u5982\u679c\u4ee3\u7801\u5199\u5728\u4e00\u4e2a\u51fd\u6570\u4e2d\uff0c\u5927\u6982\u662f\u8fd9\u6837</p> <pre><code>public static Dog[] largerThanFourNeighbors(Dog[] dogs) {\n    for (int i = 0; i &lt; dogs.length; i += 1) {\n        boolean largest = true;\n\n        for (int j = -2; j &lt;= 2; j += 1) {\n            if (i + j &lt; 0) {\n                continue;\n            }\n            if (i + j &gt;= dogs.length) {\n                break;\n            }\n            if (j == 0) {\n                continue;\n            }\n\n            Dog neighbor = dogs[i + j];\n            if (neighbor.weightInPounds &gt; dogs[i].weightInPounds) {\n                largest = false;\n            }\n        }\n        ...\n    }\n}\n</code></pre> <p>\u800c\u5206\u6210\u4e0d\u540c\u7684\u51fd\u6570\u53bb\u7f16\u5199\uff0c\u5c31\u4f1a\u770b\u8d77\u6765\u7ed3\u6784\u66f4\u52a0\u6e05\u6670\uff0cdebug\u4e5f\u4f1a\u66f4\u65b9\u4fbf</p> <pre><code>public static Dog[] largerThanFourNeighbors(Dog[] dogs) {\n    Dog[] returnDogs = new Dog[dogs.length];\n    int cnt = 0;\n\n    for (int i = 0; i &lt; dogs.length; i += 1) {\n        if (isBiggestOfFour(dogs, i)) {\n            returnDogs[cnt] = dogs[i];\n            cnt = cnt + 1;\n        }\n    }\n\n    returnDogs = arrayWithNoNulls(returnDogs, cnt);\n    return returnDogs;\n}\n\n/** cnt is the number of non-null items */\npublic static Dog[] arrayWithNoNulls(Dog[] dogs, int cnt) {\n    Dog[] noNullDogs = new Dog[cnt];\n    for (int i = 0; i &lt; cnt; i += 1) {\n        noNullDogs[i] = dogs[i];\n    }\n    return noNullDogs;\n}\n\n/** Return true if dogs[i] is larger than its four neighbors */\npublic static boolean isBiggestOfFour(Dog[] dogs, int i) {\n    boolean isBiggest = true;\n    for (int j = -2; j &lt;= 2; j += 1) {\n        int compareIndex = i + j;\n\n        /* avoid comparing ourself to ourself */\n        if (j == 0) {\n            continue;\n        }\n\n        if (validIndex(dogs, i + j)) {\n            if (dogs[compareIndex].weightInPounds &gt; dogs[i].weightInPounds) {\n                isBiggest = false;\n            }\n        }\n    }\n    return isBiggest;\n}\n\npublic static boolean validIndex(Dog[] dogs, int i) {\n    if (i &lt; 0) {\n        return false;\n    }\n    if (i &gt;= dogs.length) {\n        return false;\n    }\n    return true;\n}\n</code></pre> <pre><code>public static void main(String[] args) {\n    Dog[] dogs = new Dog[] {\n        new Dog(10),\n        new Dog(15),\n        new Dog(20),\n        new Dog(15),\n        new Dog(10),\n        new Dog(5),\n        new Dog(10),\n        new Dog(15),\n        new Dog(22),\n        new Dog(15),\n        new Dog(20),\n    };\n    Dog[] bigDogs = largerThanFourNeighbors(dogs);\n\n    for (int k = 0; k &lt; bigDogs.length; k += 1) {\n        System.out.print(bigDogs[k].weightInPounds + \" \");\n    }\n    System.out.println();\n}\n</code></pre>"},{"location":"zh/Notes%20of%20Courses/CS61B/CS61B/#lecture-2-qa","title":"Lecture 2 Q&amp;A","text":""},{"location":"zh/Notes%20of%20Courses/CS61B/CS61B/#1_3","title":"1","text":"<p>Josh\u5728\u6f14\u793a\u65f6\uff0c\u53d1\u73b0\u4ed6\u7684IDEA\u4e2d\u88c5\u6709Java Visualizer\u7684\u63d2\u4ef6\uff0c\u80fd\u76f4\u63a5\u5728IDEA\u4e2d\u5728\u8c03\u8bd5\u65f6\u770b\u5230\u53ef\u89c6\u5316\u7684\u73af\u5883\u56fe environment diagram\uff0c</p> <p>\u611f\u89c9\u633a\u6709\u7528\uff0c\u4e8e\u662f\u4e5f\u5b89\u88c5\u4e86\u8fd9\u4e2a\u63d2\u4ef6</p> <p>Josh\u8c03\u8bd5\u65f6\u8fd8\u7528\u4e86\u4e00\u4e0bstep over \u6b65\u8fc7\u7684\u64cd\u4f5c\uff0c\u4e4b\u524d\u4e0d\u592a\u6e05\u695a \u6b65\u8fc7 step over \u3001 \u6b65\u5165 step into \u3001 \u6b65\u51fa step out \u7684\u5177\u4f53\u542b\u4e49\uff0c\u4e8e\u662f\u5c31\u53bb\u67e5\u4e86\u4e00\u4e0b\uff0c</p> <p>\u3010pycharm\u8c03\u8bd5\u3011Pycharm \u65ad\u70b9\u8df3\u8f6c\u53ca Step Over/Step Into/Step Out \u7b49\u7684\u4f7f\u7528_pycharm\u4e2d\u7684step over\u548c-CSDN\u535a\u5ba2</p> <p>\u4ece\u8fd9\u7bc7\u6587\u7ae0\u4e0a\u4e86\u89e3\u5230\uff0c</p> <ul> <li> <p>\u6b65\u8fc7 step over \u662f\u5982\u679c\u8fd9\u4e00\u884c\u6709\u8c03\u7528\u5176\u4ed6\u51fd\u6570\uff0c\u90a3\u4e48\u4f1a\u6267\u884c\u5b8c\u8c03\u7528\u7684\u51fd\u6570\uff0c\u7136\u540e\u8d70\u5230\u4e0b\u4e00\u884c\u4ee3\u7801</p> </li> <li> <p>\u6b65\u5165 step into \u662f\u5982\u679c\u8fd9\u4e00\u884c\u6709\u8c03\u7528\u5176\u4ed6\u51fd\u6570\uff0c\u90a3\u4e48\u5c31\u4f1a\u8d70\u5230\u88ab\u8c03\u7528\u51fd\u6570\u7684\u7b2c\u4e00\u884c\u4ee3\u7801</p> <p>\u5982\u679c\u8fd9\u4e00\u884c\u6ca1\u6709\u8c03\u7528\u5176\u4ed6\u51fd\u6570\uff0c\u90a3\u4e48\u6b65\u8fc7step over\u548c\u6b65\u5165 step into\u6548\u679c\u5c31\u662f\u4e00\u6837\u7684(\u90fd\u662f\u8d70\u5230\u4e0b\u4e00\u884c\u4ee3\u7801)</p> </li> <li> <p>\u6b65\u51fa step out \u662f\u7ed3\u5408\u6b65\u5165 step into\u6765\u4f7f\u7528\u7684\uff0c\u6b65\u51fa step out\u4f1a\u6267\u884c\u5b8c\u5f53\u524d\u6574\u4e2a\u51fd\u6570\uff0c\u7136\u540e\u56de\u5230\u524d\u4e00\u4e2a\u51fd\u6570\u8c03\u7528\u8fd9\u4e2a\u51fd\u6570\u7684\u4f4d\u7f6e</p> </li> </ul>"},{"location":"zh/Notes%20of%20Courses/CS61B/CS61B/#project-0","title":"Project 0","text":""},{"location":"zh/Notes%20of%20Courses/CS61B/CS61B/#1_4","title":"1","text":"<p>\u7531\u4e8e\u5728\u8bfe\u7a0b\u7f51\u7ad9\u4e0a\u6ca1\u6709\u627e\u5230\u80fd\u4e0b\u8f7d\u63d0\u4f9b\u7684\u521d\u59cb\u4ee3\u7801\u7684\u5730\u65b9(\u8bfe\u7a0b\u7f51\u7ad9\u4e0a\u63d0\u4f9b\u7684\u65b9\u6cd5\u662f\u8bfe\u7a0b\u7684\u5b66\u751f\u4ecegithub\u4e0a <code>git pull</code> \u81ea\u5df1\u5bf9\u5e94\u5b66\u53f7\u7684\u4ed3\u5e93)\uff0c</p> <p>\u4e8e\u662f\u5728github\u4e0a\u641c\u7d22 <code>cs61b sp21</code> \u6765\u641c\u7d22\u522b\u4eba\u5b8c\u6210\u7684\u4f5c\u4e1a\u4ed3\u5e93\uff0c\u770b\u770b\u80fd\u4e0d\u80fd\u627e\u5230\u539f\u59cb\u7684\u4ee3\u7801\uff0c</p> <p>\u7136\u540e\u70b9\u51fb\u6700\u67e5\u770b\u591astar\u7684\u4ed3\u5e93</p> <p>exuanbo/cs61b-sp21: CS 61B, Spring 2021 (github.com)</p> <p>\u53d1\u73b0\u5728 <code>README.md</code> \u4e2d\u6709\u5199\u7740cs61b sp21\u7684\u5b98\u65b9\u539f\u59cb\u4ee3\u7801\u4ed3\u5e93</p> <p>Berkeley-CS61B/skeleton-sp21: starter code for spring 21 (github.com)</p> <p>\u4e8e\u662f\u5c31\u987a\u4fbf\u53d1\u73b0\u4e86cs61b\u7684\u5b98\u65b9github\u8d26\u53f7</p> <p>Public Access Resources</p> <p>Previous course staff have made some iterations of this course available for auditors -- both Berkeley students and members of the public. While the assignment skeletons and specifications will be available for most years, some assignments have autograders that are not public. The most recent version with a public autograder is Spring 2021.</p> <p>Here's lints to the relevant materials:</p> <ul> <li>SP21 Course Website</li> <li>Skeleton code</li> <li>Java Libraries</li> <li>Lecture Code</li> </ul> <p>Tooling</p> <p>61B uses some tools to run its course. These are the open-source ones that we maintain for ourselves and actively use.</p> <ul> <li>IntelliJ Plugin - A style checker</li> <li>Java Visualizer - An IntelliJ plugin to visualize the data layout in Java applications. Externally maintained.</li> <li>jh61b - A JUnit executor to output test results in Gradescope's format</li> <li>BSAG - A Better SimpleAutograder for custom Gradescope logic<ul> <li>bsag-jh61b - BSAG steps for jh61b components</li> </ul> </li> </ul>"},{"location":"zh/Notes%20of%20Courses/CS61B/CS61B/#2_2","title":"2","text":"<p>\u8bf4\u660e\u4e2d\u63d0\u5230\uff0c\u6846\u67b6\u4ee3\u7801\u4f7f\u7528\u4e86\u4e00\u79cd\u53eb\u505a \u6a21\u578b-\u89c6\u56fe-\u63a7\u5236\u5668\u6a21\u5f0f Model-View-Controller Pattern (MVC) \u7684\u6a21\u5f0f</p> <p>The MVC pattern divides our problem into three parts:</p> <ul> <li>The model represents the subject matter being represented and acted upon \u2013 in this case incorporating the state of a board game and the rules by which it may be modified. Our model resides in the <code>Model</code> , <code>Side</code> , <code>Board</code> , and <code>Tile</code> classes. The instance variables of <code>Model</code> fully determine what the state of the game is. Note: You\u2019ll only be modifying the <code>Model</code> class.</li> <li>A view of the model, which displays the game state to the user. Our view resides in the <code>GUI</code> and <code>BoardWidget</code> classes.</li> <li>A controller for the game, which translates user actions into operations on the model. Our controller resides mainly in the <code>Game</code> class, although it also uses the GUI class to read keystrokes.</li> </ul>"},{"location":"zh/Notes%20of%20Courses/CS61B/CS61B/#3_2","title":"3","text":"<p>java\u4e2d\u5224\u65ad\u662f\u5426\u4e3a <code>null</code> \u53ef\u4ee5\u4f7f\u7528 <code>==</code></p>"},{"location":"zh/Notes%20of%20Courses/CS61B/CS61B/#4_2","title":"4","text":"<p>\u5728\u5c1d\u8bd5\u5b8c\u6210 <code>tilt</code> \u51fd\u6570\u7684\u8fc7\u7a0b\u4e2d\uff0c\u4e00\u5171\u8fdb\u884c\u4e863\u6b21\u5c1d\u8bd5\uff0c</p> <p>\u524d\u4e24\u6b21\u5c1d\u8bd5\u5927\u81f4\u601d\u8def\u90fd\u662f\uff0c\u6bcf\u4e00\u5217\u53ea\u904d\u5386\u4e00\u6b21\uff0c\u7136\u540e\u6807\u8bb0\u7a7a\u7684\u4f4d\u7f6e\u548c\u4e0a\u4e00\u4e2a\u74f7\u7816 tile(\u7b2c2\u6b21\u5c1d\u8bd5\u4e0e\u7b2c1\u6b21\u7684\u533a\u522b\u5728\u4e8e\uff0c\u5c06\u5904\u7406\u6bcf\u4e00\u5217\u5199\u6210\u4e86\u4e00\u4e2a\u51fd\u6570)\uff0c</p> <p>\u4f46\u662f\u4e24\u6b21\u90fd\u662f\u53ea\u80fd\u901a\u8fc7 <code>TestUpOnly</code> \u800c\u4e0d\u80fd\u901a\u8fc7 <code>TestModel</code> \u3002</p> <p>\u7b2c3\u6b21\u5c1d\u8bd5\u6253\u7b97\u653e\u5f03\u8fd9\u4e2a\u601d\u8def\uff0c\u800c\u662f\u5c06\u6bcf\u4e00\u5c0f\u6b65\u90fd\u5199\u6210\u4e00\u4e2a\u51fd\u6570\uff0c\u5e76\u4e14\u7531\u4e8e\u7559\u610f\u5230\u9898\u76ee\u8bf4\u660e\u4e2d\u63d0\u5230 <code>board.move</code> \u65b9\u6cd5\u5982\u679c\u5408\u5e76\u4e86\u74f7\u7816\u4f1a\u8fd4\u56de <code>true</code> \u4e8e\u662f\u6253\u7b97\u5229\u7528\u8fd9\u4e00\u70b9\uff0c\u6700\u540e\u5199\u5b8c\u5e76debug\u5b8c\u540e\uff0c\u6ca1\u60f3\u5230\u4e0d\u4ec5\u901a\u8fc7\u4e86 <code>TestUpOnly</code> \u4e5f\u901a\u8fc7\u4e86 <code>TestModel</code> (\ud83d\ude2e\u5f88\u9707\u60ca\uff0c\u4e0d\u77e5\u9053\u4e3a\u4ec0\u4e48)</p> code <pre><code>public boolean tilt(Side side) {\n    ...\n\n    board.setViewingPerspective(side);\n    for (int i = 0; i &lt; board.size(); i++) {\n        if (processCol(i)) {\n            changed = true;\n        }\n    }\n    board.setViewingPerspective(Side.NORTH);\n\n    ...\n}\n\npublic boolean processCol(int col) {\n    boolean changed = false;\n    int size = board.size();\n\n    boolean[] isMerged = new boolean[size];\n    for (int i = 0; i &lt; size; i++) {\n        int row = size - i - 1;\n        isMerged[row] = false;\n\n        if (needMove(col, row)) {\n            int target = findTarget(col, row, isMerged);\n            boolean doMerge = board.move(col, target, board.tile(col, row));\n\n            if (doMerge) {\n                isMerged[target] = true;\n                score += board.tile(col, target).value();\n            }\n\n            changed = true;\n        }\n    }\n    return changed;\n}\n\npublic boolean needMove(int col, int row) {\n    Tile tile = board.tile(col, row);\n    if (tile == null) {\n        return false;\n    } else if (row == board.size() - 1) {\n        return false;\n    } else {\n        Tile upTile = board.tile(col, row + 1);\n        return upTile == null || upTile.value() == tile.value();\n    }\n}\n\npublic int findTarget(int col, int row, boolean[] isMerge) {\n    int target = findEmptyTarget(col, row);\n\n    if (target + 1 &lt; board.size() &amp;&amp; !isMerge[target + 1]\n            &amp;&amp; board.tile(col, row).value() == board.tile(col, target + 1).value()) {\n        target += 1;\n    }\n    return target;\n}\n\npublic int findEmptyTarget(int col, int row) {\n    int target = row;\n    for (int i = row + 1; i &lt; board.size(); i++) {\n        if (board.tile(col, i) != null) {\n            break;\n        }\n        target = i;\n    }\n    return target;\n}\n</code></pre>"},{"location":"zh/Notes%20of%20Courses/CS61B/CS61B/#5_1","title":"5","text":"<p>\u4e0d\u77e5\u9053\u662f\u4ec0\u4e48\u539f\u56e0\uff0c\u5728\u6211\u7684\u7535\u8111\u4e0a\u8fd0\u884c\u540e\u6309\u65b9\u5411\u952e\u6ca1\u6709\u53cd\u5e94\uff0c</p> <p>\u4e8e\u662f\u542f\u52a8\u8c03\u5f0f\u6a21\u5f0f\u67e5\u770b\u95ee\u9898\uff0c\u53d1\u73b0\u5728 <code>Game.java:37</code> \u4e2d</p> <pre><code>String cmnd = _source.getKey();\n</code></pre> <p>\u6309\u538b\u5de6\u952e\u540e\u7684 <code>cmnd</code> \u662f <code>\"\u5411\u5de6\u7bad\u5934\"</code> \uff0c\u4e8e\u662f\u7ee7\u7eed\u8ffd\u8e2a\u51fd\u6570\uff0c\u53d1\u73b0\u6e90\u5934\u5728 <code>GUISource.java:36</code> \u5904\uff0c</p> <p></p> <p>\u6240\u4ee5\u5c31\u5728 <code>switch</code> \u4e2d\u65b0\u52a0\u4e86\u51e0\u4e2a <code>case</code></p> <pre><code>switch (command) {\n    ...\n    case \"\u5411\u4e0a\u7bad\u5934\" :\n        command = \"Up\";\n        break;\n    case \"\u5411\u53f3\u7bad\u5934\" :\n        command = \"Right\";\n        break;\n    case \"\u5411\u4e0b\u7bad\u5934\" :\n        command = \"Down\";\n        break;\n    case \"\u5411\u5de6\u7bad\u5934\" :\n        command = \"Left\";\n        break;\n    default :\n        break;\n}\n</code></pre> <p>\u7136\u540e\u5c31\u80fd\u6b63\u5e38\u8fd0\u884c\u5e76\u73a9\u6e38\u620f\u4e86\ud83d\ude04</p>"},{"location":"zh/Notes%20of%20Courses/CS61B/CS61B/#lecture-3-testing","title":"Lecture 3 Testing","text":""},{"location":"zh/Notes%20of%20Courses/CS61B/CS61B/#1_5","title":"1","text":"<p>java\u4e2d\u5224\u65ad\u4e24\u4e2a\u6570\u7ec4\u4e2d\u7684\u5143\u7d20\u662f\u5426\u76f8\u7b49\uff0c\u53ef\u4ee5\u4f7f\u7528</p> <pre><code>java.util.Arrays.equals(a, b);\n</code></pre> <p>java\u4e2d\u6709\u7528\u4e8e\u6d4b\u8bd5\u7684\u5de5\u5177junit\uff0c</p> <p>\u4f8b\u5982\u6d4b\u8bd5\u6570\u7ec4\u662f\u5426\u548c\u9884\u671f\u503c\u4e00\u6837\uff0c\u5e76\u4e14\u5982\u679c\u4e0d\u4e00\u6837\u53ef\u4ee5\u663e\u793a\u51fa\u9519\u7684\u5143\u7d20</p> <pre><code>String[] input = {\"i\", \"have\", \"an\", \"egg\"};\nString[] expected = {\"an\", \"egg\", \"have\", \"i\"};\n\norg.junit.Assert.assertArrayEquals(expected, input);\n</code></pre>"},{"location":"zh/Notes%20of%20Courses/CS61B/CS61B/#2_3","title":"2","text":"<p>java\u4e2d\u5b57\u7b26\u4e32\u4e0d\u80fd\u76f4\u63a5\u6bd4\u8f83\u5927\u5c0f\uff0c\u53ef\u4ee5\u4f7f\u7528 <code>str1.compareTo(str2)</code> \u7684\u65b9\u6cd5(\u4f7f\u7528\u5b57\u7b26\u4e32\u7684 <code>compareTo</code> \u65b9\u6cd5)\u6bd4\u8f83\uff0c</p> <ul> <li>\u5982\u679c\u5c0f\u4e8e\u4f20\u5165\u7684\u5b57\u7b26\u4e32\uff0c\u4f1a\u8fd4\u56de <code>-1</code></li> <li>\u76f8\u7b49\u8fd4\u56de <code>0</code></li> <li>\u5927\u4e8e\u8fd4\u56de <code>1</code></li> </ul>"},{"location":"zh/Notes%20of%20Courses/CS61B/CS61B/#3_3","title":"3","text":"<p>\u5728Josh\u7684\u6f14\u793a\u4e2d\u53d1\u73b0\uff0cidea(\u53ef\u80fd\u5176\u4ed6jetbrains\u7684ide\u4e5f\u5dee\u4e0d\u591a)\u4e2d\u7684\u65ad\u70b9\u53f3\u952e\u53ef\u4ee5\u6dfb\u52a0\u6761\u4ef6</p>"},{"location":"zh/Notes%20of%20Courses/CS61B/CS61B/#4_3","title":"4","text":"<p>\u7f16\u5199\u7684\u6d4b\u8bd5\u7684\u51fd\u6570\uff0c\u53ef\u4ee5\u5728non-static\u51fd\u6570\u58f0\u660e\u4e0a\u6dfb\u52a0\u88c5\u9970\u7b26 <code>@org.junit.Test</code> \uff0c\u7136\u540e\u5c31\u53ef\u4ee5\u4e0d\u7528\u5728 <code>main</code> \u4e2d\u8c03\u7528\u8fd9\u4e2a\u51fd\u6570\uff0c\u53ef\u4ee5\u76f4\u63a5\u8fd0\u884c\u6587\u4ef6\u5c31\u53ef\u4ee5\u8fdb\u884c\u6d4b\u8bd5\uff0c\u4f8b\u5982</p> <pre><code>@org.junit.Test\npublic void testSort() {\n    String[] input = {\"i\", \"have\", \"an\", \"egg\"};\n    String[] expected  = {\"an\", \"egg\", \"have\", \"i\"};\n\n    Sort.sort(input);\n\n    org.junit.Assert.assertArrayEquals(expected, input);\n}\n</code></pre> <p>\u4e3a\u4e86\u65b9\u4fbf\uff0c\u8fd8\u53ef\u4ee5</p> <pre><code>import org.junit.Test;\n</code></pre> <p>\u7136\u540e\u5c31\u53ef\u4ee5\u76f4\u63a5 <code>@Test</code> \u65e2\u53ef\u4ee5\u4e86</p> <p>\u4e3a\u4e86\u65b9\u4fbf\uff0c\u8fd8\u53ef\u4ee5\u5bfc\u5165 <code>Assert</code></p> <pre><code>import org.junit.Assert.*;\n</code></pre>"},{"location":"zh/Notes%20of%20Courses/CS61B/CS61B/#5_2","title":"5","text":"<p>Josh\u63d0\u5230\u4e86\u4e00\u4e2a\u6982\u5ff5\uff0c\u6d4b\u8bd5\u9a71\u52a8\u5f00\u53d1 Test-Driven Development (TDD)\uff0c</p> <p></p> <p>\u5927\u6982\u610f\u601d\u662f\uff0c\u5982\u679c\u8981\u5b9e\u73b0\u4e00\u4e2a\u529f\u80fd\uff0c\u5148\u786e\u5b9a\u7279\u5f81\uff0c\u518d\u6839\u636e\u8fd9\u4e2a\u7279\u5f81\u7f16\u5199\u6d4b\u8bd5\u4f8b\u5b50\uff0c\u4e00\u5f00\u59cb\u8fd0\u884c\u65e0\u6cd5\u901a\u8fc7\u6d4b\u8bd5\uff0c\u6240\u4ee5\u7f16\u5199\u4ee3\u7801\u4ee5\u901a\u8fc7\u6d4b\u8bd5\uff0c\u7136\u540e\u518d\u6539\u8fdb\u4ee3\u7801\uff0c\u5faa\u73af\u5f80\u590d</p>"},{"location":"zh/Notes%20of%20Courses/CS61B/CS61B/#lecture-3-qa","title":"Lecture 3 Q&amp;A","text":""},{"location":"zh/Notes%20of%20Courses/CS61B/CS61B/#1_6","title":"1","text":"<p>\u6709\u4eba\u63d0\u95eepython\u4e2d\u7684 <code>is</code> \u548c <code>==</code> \u5206\u522b\u5bf9\u5e94java\u4e2d\u7684\u4ec0\u4e48\uff0c</p> <p>Josh\u8bf4\uff0cjava\u4e2d <code>==</code> \u7c7b\u4f3c\u4e8epython\u4e2d\u7684 <code>is</code> (\u4f1a\u68c0\u67e5\u5bf9\u8c61\u7684\u5730\u5740)\uff0c\u800cjava\u4e2d\u7c7b\u7684 <code>.equals()</code> \u65b9\u6cd5\u7c7b\u4f3c\u4e8epython\u4e2d\u7684 <code>==</code> (python\u4e2d\u81ea\u5b9a\u4e49\u7c7b\u9700\u8981\u5b9e\u73b0 <code>__eq__</code> \u65b9\u6cd5)</p> <p>\u5728java\u4e2d\uff0c\u5982\u679c\u6ca1\u6709\u91cd\u5199 <code>equals</code> \u65b9\u6cd5\uff0c\u90a3\u4e48\u9ed8\u8ba4\u7684 <code>equals</code> \u65b9\u6cd5\u662f\u68c0\u67e5\u5730\u5740</p>"},{"location":"zh/Notes%20of%20Courses/CS61B/CS61B/#2_4","title":"2","text":"<p>\u6709\u4eba\u63d0\u95ee\uff0cJosh\u6f14\u793a</p> <pre><code>System.out.println(5 + 6 + \"hi\" + 5 + 6);\n</code></pre> <p>\u6700\u540e\u663e\u793a\u51fa\u6765\u662f <code>11hi56</code> \uff0c</p> <p>\u4e8e\u662f\u53d1\u73b0java\u662f\u4ece\u5de6\u5f80\u53f3\u8fdb\u884c\u8fd0\u7b97\uff0c\u4e00\u5f00\u59cb <code>5 + 6</code> \u5f97\u5230 <code>11</code> \uff0c\u7136\u540e <code>+ \"hi\"</code> \u5f97\u5230 <code>\"11hi\"</code> \uff0c\u56e0\u6b64\u6700\u540e\u5c31\u4f1a\u5f97\u5230 <code>\"11hi56\"</code></p>"},{"location":"zh/Notes%20of%20Courses/CS61B/CS61B/#lecture-4-references-recursion-and-lists","title":"Lecture 4 References, Recursion, and Lists","text":""},{"location":"zh/Notes%20of%20Courses/CS61B/CS61B/#1_7","title":"1","text":"<p>\u5982\u679c\u81ea\u5b9a\u4e49\u5bf9\u8c61\u5b9e\u4f8b\u8d4b\u503c\u7ed9\u4e00\u4e2a\u65b0\u7684\u53d8\u91cf\uff0c\u5e76\u4f7f\u7528\u65b0\u7684\u53d8\u91cf\u6765\u4fee\u6539\u5c5e\u6027\uff0c\u90a3\u4e48\u4fee\u6539\u7684\u662f\u539f\u5b9e\u4f8b\u672c\u8eab\u7684\u5c5e\u6027\uff0c\u4f8b\u5982</p> <pre><code>Walrus a = new Walrus(1000, 8.3);\nWalrus b;\nb = a;\nb.weight = 5;\nSystem.out.println(a);\nSystem.out.println(b);\n</code></pre> <pre><code>weight: 5, tusk size: 8.30\nweight: 5, tusk size: 8.30\n</code></pre>"},{"location":"zh/Notes%20of%20Courses/CS61B/CS61B/#lecture-4-qa","title":"Lecture 4 Q&amp;A","text":""},{"location":"zh/Notes%20of%20Courses/CS61B/CS61B/#1_8","title":"1","text":"<p>java\u4e2d\u7684String\u5b57\u7b26\u4e32(\u521b\u5efa\u540e)\u4e0d\u80fd\u88ab\u4fee\u6539</p>"},{"location":"zh/Notes%20of%20Courses/CS61B/CS61B/#2_5","title":"2","text":"<p>java\u4e2d\u53ef\u4ee5\u4f7f\u7528\u4e09\u76ee\u8fd0\u7b97\u7b26(\u548cc\u4e2d\u4e00\u6837)</p>"},{"location":"zh/Notes%20of%20Courses/CS61B/CS61B/#lab-2","title":"Lab 2","text":""},{"location":"zh/Notes%20of%20Courses/CS61B/CS61B/#1_9","title":"1","text":"<p>\u5728Lab 2 Setup\u7684One-Time Setup\u4e2d\uff0c\u9700\u8981\u5728IDEA\u7684\u4e3b\u754c\u9762(\u6ca1\u6709\u6253\u5f00\u9879\u76ee\u7684\u754c\u9762)\u4e2d\u6253\u5f00\u8bbe\u7f6e\uff0c</p> <p>windows\u4e2d\u53ef\u4ee5\u4f7f\u7528 Ctrl+Alt+S \u6253\u5f00\u8bbe\u7f6e\u754c\u9762\uff0c\u4e5f\u53ef\u4ee5\u5728 <code>\u81ea\u5b9a\u4e49 &gt; \u6240\u6709\u8bbe\u7f6e...</code> \u4e2d\u6253\u5f00\u8bbe\u7f6e\u754c\u9762</p> <p>\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u5728\u65b0\u7248\u7684IDEA\u4e2d\uff0c\u8981\u628a\u300e\u4f7f\u7528 .mvn/maven.config \u4e2d\u7684\u8bbe\u7f6e\u300f\u8fd9\u4e2a\u9009\u9879==\u53bb\u6389\u52fe\u9009==(\u9ed8\u8ba4\u662f\u52fe\u9009\u4e0a\u7684)\uff0c\u5426\u5219\u300e\u672c\u5730\u4ed3\u5e93\u300f\u8bbe\u7f6e\u7684\u91cd\u5199\u7684\u66f4\u6539\u4e0d\u4f1a\u5e94\u7528\u5230\u6bcf\u4e2a\u65b0\u7684\u9879\u76ee\u4e0a</p> <p></p>"},{"location":"zh/Notes%20of%20Courses/CS61B/CS61B/#2_6","title":"2","text":"<p>\u4e00\u5f00\u59cb\u6211\u4f7f\u7528\u7684jdk\u662f\u4e4b\u524d\u5b89\u88c5\u7684azul zulu\u7684jdk\uff0c\u4f46\u662flab 2 setup\u4e00\u76f4\u65e0\u6cd5\u914d\u7f6e\u597dmaven\uff0c</p> <p>\u4e8e\u662f\u5c31\u53bb\u88c5\u4e86oracel\u7684openjdk 17\uff0c\u6700\u540e\u5c31\u53ef\u4ee5\u8fd0\u884c\u4e86</p>"},{"location":"zh/Notes%20of%20Courses/CS61B/CS61B/#3_4","title":"3","text":"<p>This is because JUnit tests are short-circuiting \u2013 as soon as one of the asserts in a method fails, it will output the failure and move on to the next test.</p> <p>\u5982\u679c\u6d4b\u8bd5\u7684\u51fd\u6570(\u6dfb\u52a0\u4e86 <code>@Test</code> \u7684\u51fd\u6570)\u4e2d\uff0c\u6709\u4e00\u4e2a <code>assert</code> \u9519\u4e86\uff0c\u90a3\u4e48\u5c31\u4f1a\u76f4\u63a5\u62a5\u9519\uff0c\u7136\u540e\u8fdb\u884c\u4e0b\u4e00\u4e2a\u8981\u6d4b\u8bd5\u7684\u51fd\u6570</p>"},{"location":"zh/Notes%20of%20Courses/CS61B/CS61B/#4_4","title":"4","text":"<p>\u4ece <code>IntList.java</code> \u7684 <code>of</code> \u51fd\u6570\u4e2d\u53d1\u73b0\uff0cjava\u4e2d\u5728\u58f0\u660e\u51fd\u6570\u65f6\uff0c\u53ef\u4ee5\u4f7f\u7528 <code>...</code> \u6765\u4ee5\u6570\u7ec4\u7684\u5f62\u5f0f\u83b7\u53d6\u4f20\u5165\u7684\u591a\u4e2a\u53c2\u6570(\u7c7b\u4f3c\u4e8epython\u4e2d\u7684 <code>*args</code> )\uff0c\u4f8b\u5982</p> <pre><code>public static int max(int ...argList) {\n    int result = 0;\n    for (int i = 0; i &lt; argList.length; i++) {\n        if (argList[i] &gt; result) {\n            result = argList[i];\n        }\n    }\n    return result;\n}\n</code></pre>"},{"location":"zh/Notes%20of%20Courses/CS61B/CS61B/#5_3","title":"5","text":"<p>\u6700\u540e\u53d1\u73b0 <code>DebugExercise2.java</code> \u4e2d\u7684 <code>max</code> \u9700\u8981\u4fee\u6539(\u6539\u6210\u80fd\u6b63\u786e\u8fd4\u56de\u6700\u5927\u503c)\uff0c\u5426\u5219gradescope\u4e0a\u7684 <code>b001) DebugExercise: Hidden Test 1</code> \u8fd9\u4e2a\u6d4b\u8bd5\u5c31\u901a\u8fc7\u4e0d\u4e86</p>"},{"location":"zh/Notes%20of%20Courses/CS61B/CS61B/#lecture-5-sllists-nested-classes-sentinel-nodes","title":"Lecture 5 SLLists, Nested Classes, Sentinel Nodes","text":""},{"location":"zh/Notes%20of%20Courses/CS61B/CS61B/#1_10","title":"1","text":"<p>Josh\u8bf4\uff0c\u5982\u679c\u5d4c\u5957\u7684\u7c7b\uff0c\u91cc\u9762\u7684\u7c7b\u5982\u679c\u4e0d\u9700\u8981\u8bbf\u95ee\u5916\u9762\u7c7b\u7684\u5c5e\u6027\uff0c\u90a3\u4e48\u53ef\u4ee5\u52a0\u4e0a <code>static</code> \u5173\u952e\u5b57\uff0c\u597d\u5904\u662f\u53ef\u4ee5\u8282\u7701\u4e00\u4e9b\u7a7a\u95f4\uff0c\u4f8b\u5982</p> <pre><code>public class SLList {\n    private static class IntNode {\n        public int item;\n        public IntNode next;\n        public IntNode(int i, IntNode n) {\n            item = i;\n            next = n;\n        }\n        ...\n    }\n}\n</code></pre> <p>\u4e2a\u4eba\u7406\u89e3\u662f\uff0c\u5982\u679c\u662fnon-static\uff0c\u90a3\u4e48\u6bcf\u6b21\u5b9e\u4f8b\u5316\u5916\u9762\u7684\u7c7b\u65f6\uff0c\u90fd\u4f1a\u7ed9\u5b9e\u4f8b\u6dfb\u52a0\u8fd9\u4e2a\u5c5e\u6027\uff0c\u5982\u679c\u662fstatic\uff0c\u90a3\u4e48\u5c31\u4e0d\u4f1a\u8fd9\u6837</p>"},{"location":"zh/Notes%20of%20Courses/CS61B/CS61B/#2_7","title":"2","text":"<p>Josh\u63d0\u5230\uff0cjava\u4ee3\u7801\u4e2d\u4e00\u4e2a <code>public</code> \u7684\u51fd\u6570\u914d\u4e00\u4e2a <code>private</code> \u7684\u540c\u540dhelper\u51fd\u6570\u5f88\u5e38\u89c1</p>"},{"location":"zh/Notes%20of%20Courses/CS61B/CS61B/#3_5","title":"3","text":"<p>\u5982\u679c\u9700\u8981\u521b\u5efa\u7a7a\u94fe\u8868\uff0c\u53ef\u4ee5\u7ed9\u94fe\u8868\u6dfb\u52a0 \u54e8\u5175\u8282\u70b9 sentinel node (\u5373\u7a7a\u7684\u5934\u8282\u70b9)\uff0c\u5c31\u53ef\u4ee5\u5728\u5b9e\u73b0\u94fe\u8868\u7684\u5176\u4ed6\u529f\u80fd\u65f6\uff0c\u907f\u514d\u5904\u7406\u7a7a\u94fe\u8868\u7684\u7279\u6b8a\u60c5\u51b5</p>"},{"location":"zh/Notes%20of%20Courses/CS61B/CS61B/#lecture-5-qa","title":"Lecture 5 Q&amp;A","text":""},{"location":"zh/Notes%20of%20Courses/CS61B/CS61B/#1_11","title":"1","text":"<p>\u6709\u4eba\u63d0\u95ee\u5173\u4e8eJosh\u8bfe\u4e0a\u8bf4\u7684\uff0c\u5d4c\u5957\u5728\u5185\u90e8\u5b9a\u4e49\u7684\u7c7b\uff0c\u5982\u679c\u628a\u7c7b\u8bbe\u7f6e\u6210\u4e86 <code>private</code> \u7684\u5c5e\u6027\uff0c\u90a3\u4e48\u7c7b\u7684\u6210\u5458\u8bbe\u7f6e\u6210 <code>public</code> \u8fd8\u662f <code>private</code> \u90fd\u5dee\u522b\u4e0d\u5927\uff0c</p> <p>Josh\u56de\u7b54\uff0c\u56e0\u4e3a\u7c7b\u8bbe\u7f6e\u6210 <code>private</code> \u4e4b\u540e\uff0c\u91cc\u9762\u7684\u65b9\u6cd5\u548c\u5c5e\u6027(\u5728\u5916\u5c42\u7684\u7c7b\u4e4b\u5916)\u5c31\u90fd\u65e0\u6cd5\u8bbf\u95ee\u5230\u4e86(\u5e94\u8be5\u662f\u8fde\u6784\u9020\u65b9\u6cd5\u4e5f\u65e0\u6cd5\u8bbf\u95ee\u5230)\uff0c\u6240\u4ee5\u6210\u5458\u7684\u5c5e\u6027\u662f <code>public</code> \u8fd8\u662f <code>private</code> \u90fd\u4e00\u6837</p>"},{"location":"zh/Notes%20of%20Courses/CS61B/CS61B/#lecture-6-dllists-arrays","title":"Lecture 6 DLLists, Arrays","text":""},{"location":"zh/Notes%20of%20Courses/CS61B/CS61B/#1_12","title":"1","text":"<p>\u4ecb\u7ecd\u4e86\u53cc\u5411\u94fe\u8868 doubly linked list (DLList) (\u4e0e\u4e4b\u5bf9\u5e94\u7684\u662f\u5355\u5411\u94fe\u8868 singly linked list (SLList) )\uff0c\u4e3a\u4e86\u907f\u514d\u53cc\u5411\u94fe\u8868\u7684\u5934\u548c\u5c3e\u90fd\u6307\u5411\u540c\u4e00\u4e2a\u54e8\u5175\u8282\u70b9\u7684\u60c5\u51b5\uff0c</p> <p></p> <p>\u63d0\u5230\u4e86\u4e24\u79cd\u89e3\u51b3\u65b9\u6cd5\uff0c</p> <ul> <li> <p>\u8bbe\u7f6e\u4e24\u4e2a\u54e8\u5175\u8282\u70b9</p> <p></p> </li> <li> <p>\u6216\u8005\uff0c\u8bbe\u7f6e\u6210\u5faa\u73af\u7684\u53cc\u5411\u94fe\u8868</p> <p></p> </li> </ul>"},{"location":"zh/Notes%20of%20Courses/CS61B/CS61B/#2_8","title":"2","text":"<p>\u5982\u679c\u60f3\u8981\u94fe\u8868\u7ed3\u6784\u50a8\u5b58\u4e0d\u540c\u7684\u6570\u636e\u7c7b\u578b(\u800c\u4e0d\u91cd\u590d\u5b9e\u73b0\u4ee3\u7801)\uff0c\u53ef\u4ee5\u5728\u5b9a\u4e49\u7c7b\u65f6\uff0c\u5728\u7c7b\u540d\u540e\u4f7f\u7528 <code>&lt;...&gt;</code> \u6dfb\u52a0\u81ea\u5b9a\u4e49\u540d\u79f0\uff0c\u4e4b\u540e\u5728\u58f0\u660e\u5bf9\u5e94\u53d8\u91cf\u7684\u6570\u636e\u7c7b\u578b\u65f6\uff0c\u90fd\u4f7f\u7528\u8fd9\u4e2a\u540d\u79f0\uff0c\u4f8b\u5982</p> <pre><code>public class SLList&lt;LochNess&gt; {\n    private class StuffNode {\n        public LochNess item;\n        public StuffNode next;\n\n        public StuffNode(LochNess i, StuffNode n) {\n            item = i;\n            next = n;\n        }\n    }\n\n    private StuffNode first;\n    private int size;\n\n    public SLList(LochNess x) {\n        first = new StuffNode(x, null);\n        size = 1;\n    }\n\n    ...\n}\n</code></pre> <p>\u4f7f\u7528\u8fd9\u4e2a\u7c7b\u65f6\uff0c\u5219\u9700\u8981\u5728 <code>&lt;&gt;</code> \u4e2d\u6dfb\u52a0\u6570\u636e\u7c7b\u578b</p> <pre><code>SLList&lt;String&gt; s1 = new SLList&lt;String&gt;(\"bone\");\n</code></pre> <p>\u4e5f\u53ef\u4ee5\u5c06\u6784\u9020\u51fd\u6570\u7684 <code>String</code> \u53bb\u9664</p> <pre><code>SLList&lt;String&gt; s1 = new SLList&lt;&gt;(\"bone\");\n</code></pre>"},{"location":"zh/Notes%20of%20Courses/CS61B/CS61B/#3_6","title":"3","text":"<p>java\u4e2d\u521b\u5efa\u6570\u7ec4\u76843\u79cd\u65b9\u6cd5\uff0c</p> <pre><code>y = new int[3];\n</code></pre> <pre><code>x = new int[] {1, 2, 3, 4, 5};\n</code></pre> <pre><code>int[] w = {9, 10, 11, 12, 13};\n</code></pre> <p>\u4f46\u9700\u8981\u6ce8\u610f\u7b2c3\u79cd\u65b9\u6cd5\u4e0d\u80fd\u5bf9\u5df2\u7ecf\u58f0\u660e\u7684\u53d8\u91cf\u4f7f\u7528</p>"},{"location":"zh/Notes%20of%20Courses/CS61B/CS61B/#4_5","title":"4","text":"<p><code>System.arraycopy</code> \u7684\u7528\u6cd5\uff0c</p> <p>Takes 5 parameters:</p> <ul> <li>Source array</li> <li>Start position in source</li> <li>Target array</li> <li>Start position in target</li> <li>Number to copy</li> </ul> <p>\u4ee5 <code>System.arraycopy(b, 0, x, 3, 2)</code> \u4e3a\u4f8b\uff0c</p> <ul> <li><code>b</code> \u662f\u8981\u590d\u5236\u7684\u6570\u7ec4</li> <li><code>0</code> \u662f <code>b</code> \u4e2d\u5f00\u59cb\u590d\u5236\u7684\u4e0b\u6807</li> <li><code>x</code> \u662f\u8981\u7c98\u8d34\u590d\u5236\u5185\u5bb9\u7684\u6570\u7ec4</li> <li><code>3</code> \u662f <code>x</code> \u4e2d\u5f00\u59cb\u7c98\u8d34\u7684\u4e0b\u6807</li> <li><code>2</code> \u662f\u590d\u5236\u7684\u5143\u7d20\u4e2a\u6570</li> </ul> <p>\u5982\u679c <code>b</code> \u662f <code>{9, 10, 11}</code> \uff0c<code>x</code> \u662f <code>{-1, 2, 5, 4, 99}</code> \uff0c</p> <p>\u90a3\u4e48\u590d\u5236\u540e <code>x</code> \u5c31\u53d8\u6210 <code>{-1, 2, 5, 9, 10}</code> </p>"},{"location":"zh/Notes%20of%20Courses/CS61B/CS61B/#5_4","title":"5","text":"<p>java\u4e2d\uff0c\u4e8c\u7ef4\u6570\u7ec4\u7684\u6bcf\u4e2a\u5143\u7d20\u662f\u4e00\u7ef4\u6570\u7ec4\u7684\u5730\u5740\uff0c\u6240\u4ee5\u540c\u4e00\u4e2a\u4e8c\u7ef4\u6570\u7ec4\u4e2d\u53ef\u4ee5\u5b58\u50a8\u4e0d\u540c\u957f\u5ea6\u7684\u4e00\u7ef4\u6570\u7ec4</p> <p></p>"},{"location":"zh/Notes%20of%20Courses/CS61B/CS61B/#lecture-7-alists-resizing-vs-slists","title":"Lecture 7 ALists, Resizing, vs. SLists","text":""},{"location":"zh/Notes%20of%20Courses/CS61B/CS61B/#1_13","title":"1","text":"<p>\u8bfe\u4e0a\u8bf4\u5230 \u987a\u5e8f\u8868 (\u57fa\u4e8e\u6570\u7ec4\u7684\u5217\u8868) array based list (AList) \u7531\u4e8e\u5728\u5b58\u50a8\u6570\u636e\u4e2a\u6570\u8fbe\u5230\u6570\u7ec4\u957f\u5ea6\u65f6\u9700\u8981\u66f4\u6362\u4e00\u4e2a\u66f4\u5927\u7684\u6570\u7ec4\uff0c\u4f46\u5982\u679c\u6bcf\u6b21\u6269\u5c55\u90fd\u53ea\u589e\u52a0\u56fa\u5b9a\u7684\u957f\u5ea6\uff0c\u90a3\u4e48\u6570\u636e\u91cf\u5927\u65f6\u7a0b\u5e8f\u5c31\u4f1a\u8fd0\u884c\u6bd4\u8f83\u6162\uff0c\u6240\u4ee5\u63d0\u5230\u6bcf\u6b21\u6269\u5c55\u53ef\u4ee5\u6269\u5c55\u6210\u4e4b\u524d\u957f\u5ea6\u76842\u500d</p>"},{"location":"zh/Notes%20of%20Courses/CS61B/CS61B/#2_9","title":"2","text":"<p>\u5728\u628a\u987a\u5e8f\u8868\u6539\u9020\u6210 \u6cdb\u578b\u987a\u5e8f\u8868 \u65f6\uff0c\u5728\u6784\u9020\u6570\u7ec4\u65f6\uff0c</p> <pre><code>public class AList&lt;Item&gt; {\n    private Item[] items;\n    private int size;\n\n    public AList() {\n        items = new Item[100];\n        size = 0;\n    }\n}\n</code></pre> <p><code>new Item[100]</code> IDEA\u62a5\u9519(\u4f1a\u5f15\u8d77generic array creation\u7684\u9519\u8bef)\uff0c\u800c\u9700\u8981\u6539\u6210</p> <pre><code>items = (Item[]) new Object[100];\n</code></pre>"},{"location":"zh/Notes%20of%20Courses/CS61B/CS61B/#3_7","title":"3","text":"<p>\u7531\u4e8e\u5728java\u4e2d\uff0c\u5bf9\u8c61\u53ea\u6709\u5931\u53bb\u6700\u540e\u4e00\u4e2a\u6307\u5411 reference\u65f6\uff0c\u624d\u4f1a\u88ab\u56de\u6536\u7a7a\u95f4\uff0c\u6240\u4ee5\u5728\u6cdb\u578b\u987a\u5e8f\u8868\u7684\u5220\u9664\u65b9\u6cd5\u4e2d\uff0c\u9700\u8981\u628a\u6570\u7ec4\u4e2d(\u9700\u8981\u5220\u53bb\u7684)\u6700\u540e\u4e00\u4e2a\u5143\u7d20\u6307\u5411 <code>null</code></p>"},{"location":"zh/Notes%20of%20Courses/CS61B/CS61B/#lab-3","title":"Lab 3","text":""},{"location":"zh/Notes%20of%20Courses/CS61B/CS61B/#1_14","title":"1","text":"<p>\u5f02\u5e38\u65ad\u70b9\u7684\u4f7f\u7528\uff0c</p> <p>\u5728 \u8fd0\u884c --- \u67e5\u770b\u65ad\u70b9 \u4e2d\u6253\u5f00\uff0c\u6216\u8005\u4f7f\u7528 Ctrl+Shift+F8 \u6253\u5f00\uff0c</p> <p></p> <p>\u9009\u4e2d(\u4efb\u4f55\u5f02\u5e38)\u65ad\u70b9\uff0c\u8fd8\u53ef\u4ee5\u5728\u300e\u6761\u4ef6\u300f\u4e2d\u6dfb\u52a0\u5224\u65ad\u7684\u6761\u4ef6</p> <p>\u5982</p> <pre><code>this instanceof java.lang.ArrayIndexOutOfBoundsException\n</code></pre>"},{"location":"zh/Notes%20of%20Courses/CS61B/CS61B/#lecture-8-inheritance-implements","title":"Lecture 8 Inheritance, Implements","text":""},{"location":"zh/Notes%20of%20Courses/CS61B/CS61B/#1_15","title":"1","text":"<p>\u63a5\u53e3 interface \u7684\u4f7f\u7528\u65b9\u6cd5\uff0c\u4f8b\u5982</p> <p>\u5148\u5b9e\u73b0\u4e00\u4e2a\u63a5\u53e3(\u4f7f\u7528 <code>interface</code> \u5173\u952e\u5b57)\uff0c</p> <pre><code>public interface List61B&lt;Item&gt; {\n    public void addFirst(Item x);\n    public void addLast(Item y);\n    public Item getFirst();\n    public Item getLast();\n    public Item removeLast();\n    public Item get(int i);\n    public void insert(Item x, int position);\n    public in size();\n}\n</code></pre> <p>\u7136\u540e\u4e4b\u524d\u7684SLList\u548cAList\u7c7b\u5c31\u53ef\u4ee5\u6dfb\u52a0\u4e0a <code>implements List61B&lt;...&gt;</code></p> <pre><code>public class AList&lt;Item&gt; implements List61B&lt;Item&gt; {\n    ...\n}\n</code></pre> <pre><code>public class SLList&lt;BLorp&gt; implements List61B&lt;Blorp&gt; {\n    ...\n}\n</code></pre> <p>\u800c\u518d\u5c06\u51fd\u6570\u4f20\u5165\u7684\u53c2\u6570\u6539\u6210 <code>List61B&lt;String&gt; list</code> (\u539f\u6765\u662f <code>SLList</code> \u6216 <code>AList</code> )\uff0c\u90a3\u4e48\u5728\u8c03\u7528\u8fd9\u4e2a\u51fd\u6570\u65f6\uff0c\u4f20\u5165SLList\u6216\u8005AList\u5b9e\u4f8b\u90fd\u53ef\u4ee5</p> <p></p> <p>\u7ee7\u627f\u63a5\u53e3\u7684\u5b50\u7c7b\u5fc5\u987b\u5b9e\u73b0\u63a5\u53e3\u7684\u6240\u6709\u65b9\u6cd5</p>"},{"location":"zh/Notes%20of%20Courses/CS61B/CS61B/#2_10","title":"2","text":"<ul> <li>Override \u8986\u5199 \u6307\u7684\u662f\u5b50\u7c7b\u5728\u7c7b\u4e2d\u91cd\u65b0\u91cd\u65b0\u5b9e\u73b0\u7236\u7c7b\u6216\u8005\u63a5\u53e3\u4e2d\u7684\u65b9\u6cd5</li> <li>Overload \u91cd\u8f7d \u6307\u7684\u662f\u540c\u4e00\u4e2a\u51fd\u6570\u88ab\u91cd\u590d\u591a\u6b21\u5b9e\u73b0(\u53ef\u4ee5\u662f\u5728\u4e0d\u540c\u7684\u5b50\u7c7b\u4e2d)</li> </ul>"},{"location":"zh/Notes%20of%20Courses/CS61B/CS61B/#3_8","title":"3","text":"<p><code>@Override</code> \u6ce8\u91ca\uff0c\u4f5c\u7528\u662f\u53ea\u6709\u51fd\u6570\u662f\u8986\u5199\u7236\u7c7b\u6216\u63a5\u53e3\u7684\u51fd\u6570\u65f6\uff0c\u624d\u4f1a\u88ab\u7f16\u8bd1</p> <p>Why use <code>@Override</code> ?</p> <ul> <li>Main reason: Protects against typos.<ul> <li>If you say <code>@Override</code> , but it the method isn't actually overriding anything, you'll get a compile error.</li> <li>e.g. <code>public void addLats(Item x)</code></li> </ul> </li> <li>Reminds programmer that method definition came from somewhere higher up in the inheritance hierarchy.</li> </ul>"},{"location":"zh/Notes%20of%20Courses/CS61B/CS61B/#4_6","title":"4","text":"<p>Implementation Inheritance \u5b9e\u73b0\u7ee7\u627f\uff0c\u4f7f\u7528 <code>default</code> \u5173\u952e\u5b57\uff0c\u53ef\u4ee5\u5728\u63a5\u53e3\u4e2d\u5b9e\u73b0\u51fd\u6570\uff0c\u5e76\u4e14\u5b50\u7c7b\u80fd\u7ee7\u627f\u5df2\u7ecf\u5b9e\u73b0\u597d\u7684\u51fd\u6570(\u5c31\u53ef\u4ee5\u4e0d\u7528\u8986\u5199)\uff0c\u4f8b\u5982</p> <pre><code>default public void print() {\n    for (int i = 0; i &lt; size(); i += 1) {\n        System.out.print(get(i) + \" \");\n    }\n    System.out.println();\n}\n</code></pre> <p>\u7531\u4e8e\u662f\u5728\u63a5\u53e3\u4e2d\u5b9e\u73b0\uff0c\u6240\u4ee5\u53ea\u80fd\u4f7f\u7528\u63a5\u53e3\u4e2d\u7684\u65b9\u6cd5</p>"},{"location":"zh/Notes%20of%20Courses/CS61B/CS61B/#5_5","title":"5","text":"<p>\u5982\u679c\u58f0\u660e\u7684\u662f\u7236\u7c7b\u7684\u53d8\u91cf\uff0c\u4f46\u6307\u5411\u7684\u662f\u5b50\u7c7b\u7684\u5b9e\u4f8b\uff0c\u5728\u4f7f\u7528\u8fd9\u4e2a(\u7236\u7c7b\u7c7b\u578b\u7684)\u53d8\u91cf\u8c03\u7528\u8986\u5199\u7684\u65b9\u6cd5\u65f6\uff0c\u7531\u4e8e \u52a8\u6001\u65b9\u6cd5\u9009\u62e9 Dynamic Method Selection\uff0c\u6700\u7ec8\u8fd0\u884c\u65f6\u8fd0\u884c\u7684\u4f1a\u662f\u5b9e\u9645\u5b50\u7c7b\u5b9e\u4f8b\u7684\u65b9\u6cd5</p> <p></p> <p>\u5982\u679c\u5728\u5b50\u7c7b\u4e2d\u53ea\u662f\u91cd\u8f7d\u800c\u6ca1\u6709\u8986\u5199\u7684\u65b9\u6cd5\uff0c\u90a3\u4e48\u5982\u679c\u53d8\u91cf\u58f0\u660e\u65f6\u662f\u7236\u7c7b\u7684\u7c7b\u578b\uff0c\u5728\u8c03\u7528\u91cd\u8f7d\u7684\u65b9\u6cd5\u65f6\uff0c\u5c31\u4f1a\u8c03\u7528\u7236\u7c7b\u7684\u65b9\u6cd5\uff0c\u800c\u5982\u679c\u662f\u5b50\u7c7b\u7684\u7c7b\u578b\u5c31\u4f1a\u8c03\u7528\u5b50\u7c7b\u7684\u65b9\u6cd5(\u5982\u4e0a\u56fe\u4e2d\uff0c\u4ece\u7236\u7c7b\u548c\u5b50\u7c7b\u7684\u65b9\u6cd5\u4e2d\u4f20\u5165\u7684\u53c2\u6570\u4e0d\u4e00\u81f4\u53ef\u4ee5\u770b\u51fa\u662f\u91cd\u8f7d\uff0c\u6240\u4ee5 <code>a.praise(d)</code> \u8c03\u7528\u7684\u662f <code>Animal</code> \u7c7b\u7684\u65b9\u6cd5)</p> <p>\u6559\u6388\u7684\u89e3\u91ca\uff1a</p> <p>this praise method, it's overloaded, not overriden. Notice that this is not the same method signature in the dog class, it's not praise animal in the dog class, it's praise dog in the dog class. This is actually a totally new method, so it's not overriding, it's overloading. The other praise method in this dog class</p> <p>Josh\u8bf4\u9053\uff0c\u53e6\u4e00\u79cd\u52a8\u6001\u65b9\u6cd5\u9009\u62e9\u7684\u7406\u89e3\u662f\uff0c\u628a\u5b83\u5f53\u6210\u662f\u4e00\u4e2a\u4e24\u6b65\u7684\u5904\u7406\u8fc7\u7a0b\uff0c\u7b2c\u4e00\u6b65\u5728\u7f16\u8bd1\u65f6\u53d1\u751f\uff0c\u7b2c\u4e8c\u6b65\u5728\u8fd0\u884c\u65f6\u53d1\u751f</p> <ul> <li>At compile time: We determine the signature S of the method to be called.<ul> <li>S is decided using ONLY static types.</li> </ul> </li> <li>At runtime: The dynamic type of the invoking object uses its method with this exact signature S.</li> </ul> <p>\u5982\u4e0a\u56fe\u4e2d\u7684\u4f8b\u5b50</p> <pre><code>Animal a = new Dog();\nDog d = new Dog();\na.greet(d);  // greet(Animal a)\na.sniff(d);  // sniff(Animal a)\nd.praise(d); // praise(Dog a)\na.praise(d); // praise(Animal a)\n</code></pre> <p>\u5728\u7f16\u8bd1\u65f6\uff0c\u4f1a\u53d8\u91cf\u7684\u6570\u636e\u7c7b\u578b\u4ee5\u53ca\u8c03\u7528\u65b9\u6cd5\u65f6\u4f20\u5165\u7684\u53c2\u6570\u786e\u5b9a\u8c03\u7528\u7684\u51fd\u6570\uff0c\u5982 <code>a.praise(d)</code> \u4e2d <code>a</code> \u662f <code>Animal</code> \uff0c\u6240\u4ee5\u4f1a\u5bfb\u627e <code>Animal</code> \u7c7b\u4e2d\u7684\u65b9\u6cd5\uff0c\u6839\u636e\u4f20\u5165\u7684\u53c2\u6570 <code>d</code> \u662f <code>Animal</code> (\u7684\u5b50\u7c7b)\uff0c\u6240\u4ee5\u786e\u5b9a\u8c03\u7528\u7684\u65b9\u6cd5\u4e3a <code>praise(Animal a)</code> \uff0c</p> <p>\u5728\u8fd0\u884c\u65f6\uff0c\u518d\u6839\u636e\u5177\u4f53\u53d8\u91cf\u6307\u5411\u7684\u5b9e\u4f8b\u8c03\u7528\u5bf9\u5e94\u7684\u65b9\u6cd5\uff0c\u5982 <code>a.sniff(d)</code> \u5728\u7f16\u8bd1\u65f6\u786e\u5b9a\u65b9\u6cd5\u4e3a <code>sniff(Animal a)</code> \uff0c\u800c\u5b9e\u4f8b <code>a</code> ( <code>Dog</code> \u7c7b)\u4e2d\u6709\u5bf9\u5e94\u7684\u65b9\u6cd5\uff0c\u6240\u4ee5\u8c03\u7528\u7684\u5c31\u662f <code>Dog</code> \u7c7b\u7684 <code>sniff</code> \u65b9\u6cd5</p>"},{"location":"zh/Notes%20of%20Courses/CS61B/CS61B/#6_1","title":"6","text":"<pre><code>import java.util.List;\nimport java.util.ArrayList;\n</code></pre> <p>\u53ef\u4ee5\u5bfc\u5165java\u5df2\u7ecf\u5b9e\u73b0\u597d\u7684\u94fe\u8868\u7c7b</p>"},{"location":"zh/Notes%20of%20Courses/CS61B/CS61B/#lecture-8-qa","title":"Lecture 8 Q&amp;A","text":""},{"location":"zh/Notes%20of%20Courses/CS61B/CS61B/#1_16","title":"1","text":"<p>\u6709\u4eba\u63d0\u95ee\u5173\u4e8ejava\u4e2d\u7c7b\u578b\u8f6c\u6362 Casting\u7684\u95ee\u9898</p> <pre><code>Bird bird = new Falcon();\nFalcon falcon = (Falcon) bird;\n</code></pre> <p>\u8fd9\u4e24\u884c\u4ee3\u7801(\u8bbe\u7f6e\u7684\u53d8\u91cf)\u5bf9\u5e94\u7684\u9759\u6001\u7c7b\u578b\u548c\u52a8\u6001\u7c7b\u578b\u662f\u8fd9\u6837\uff0c</p> Static Type Dynamic Type <code>bird</code> Bird Falcon <code>falcon</code> Falcon Falcon <p>\u7136\u540eJosh\u5bf9\u4ee3\u7801\u7a0d\u52a0\u4fee\u6539\uff0c</p> <pre><code>Bird bird = (Bird) new Falcon();\nFalcon falcon = (Falcon) bird;\n</code></pre> <p>\u7136\u540e\u8bf4\u9053\u7b2c\u4e00\u884c\u52a0\u4e0a <code>(Bird)</code> \u4e5f\u4e0d\u4f1a\u6539\u53d8\u5bf9\u5e94\u7684\u9759\u6001\u7c7b\u578b\u548c\u52a8\u6001\u7c7b\u578b\uff0c</p> <p>in fact, a cast doesn't change anything, it never changes anything. When I think about a cast as I'll say in lecture 9 is, it tells the compiler don't do your normal type checking, I know what I'm doing. It doesn't actually change anything, it just says for the purposes of type checking pretend this is a bird.</p>"},{"location":"zh/Notes%20of%20Courses/CS61B/CS61B/#2_11","title":"2","text":"<p>\u6709\u4eba\u5411Josh\u63d0\u95ee\u4e00\u9898\uff0c\u8981\u6c42\u53ea\u4fee\u6539\u539f\u65b9\u9635(\u4e0d\u521b\u5efa\u65b0\u77e9\u9635)\u4f7f\u77e9\u9635\u65cb\u8f6c90\u00b0\uff0c\u7b54\u6848\u7684\u505a\u6cd5\u5927\u6982\u662f\uff0c\u56e0\u4e3a\u65b9\u9635\u4e2d\u7684\u6bcf\u4e2a\u4f4d\u7f6e\u65cb\u8f6c4\u6b21\u5c31\u4f1a\u56de\u5230\u539f\u6765\u7684\u4f4d\u7f6e\uff0c\u6240\u4ee5\u628a\u6bcf\u4e2a\u5143\u7d20\u66ff\u6362\u5230\u65cb\u8f6c\u540e\u7684\u4f4d\u7f6e\uff0c\u518d\u628a\u65b0\u4f4d\u7f6e\u7684\u65e7\u5143\u7d20\u6362\u5230\u65cb\u8f6c\u540e\u7684\u4f4d\u7f6e\uff0c\u5faa\u73af4\u6b21\u5c31\u80fd\u6362\u597d4\u4e2a\u5143\u7d20\uff0c\u53ef\u4ee5\u53c2\u8003Josh\u753b\u7684\u56fe</p> <p></p>"},{"location":"zh/Notes%20of%20Courses/CS61B/CS61B/#project-1","title":"Project 1","text":""},{"location":"zh/Notes%20of%20Courses/CS61B/CS61B/#1_17","title":"1","text":"<p>Java instanceof - javatpoint</p> <p>The java instanceof operator is used to test whether the object is an instance of the specified type (class or subclass or interface).</p> <p>\u8bfe\u7a0b\u7f51\u7ad9\u4e0a\u8bf4\u4f1a\u7528\u5230 <code>instanceof</code> \u5173\u952e\u5b57\uff0c\u7136\u540e\u6839\u636e\u8bfe\u7a0b\u7f51\u7ad9\u4e0a\u63d0\u4f9b\u7684\u94fe\u63a5\uff0c<code>instanceof</code> \u5173\u952e\u5b57\u7684\u89e3\u91ca\u5982\u4e0a</p>"},{"location":"zh/Notes%20of%20Courses/CS61B/CS61B/#2_12","title":"2","text":"<p>\u7531\u4e8e <code>ArrayDeque</code> \u6ca1\u6709\u6d4b\u8bd5\u7684\u6587\u4ef6\uff0c\u5982\u679c\u8981\u6d4b\u8bd5\u7684\u8bdd\u9700\u8981\u81ea\u5df1\u5199\u4e00\u4e2a\u6d4b\u8bd5\u7684\u6587\u4ef6\uff0c\u8bfe\u7a0b\u7f51\u7ad9\u4e0a\u5efa\u8bae\u53ef\u4ee5\u53c2\u8003Lab 3\u4e2d\u7684\u6d4b\u8bd5\uff0c</p> <p>So how do you verify correctness of your data structure? You use your skills that you got from Lab 3! You are encouraged to copy and paste those tests for <code>SList</code> and <code>AList</code> and adapt them for these data structures. The tests will look very similar and only require basic changes.</p> <p>\u4e8e\u662f\u6211cv\u4e86 <code>TestBuggyAList.java</code> \uff0c\u7136\u540e\u6539\u6210\u4e86</p> code RandomizedComparisonTest.java<pre><code>package deque;\n\nimport ...;\n\npublic class RandomizedComparisonTest {\n    // YOUR TESTS HERE\n    @Test\n    public void testThreeAddThreeRemove() {\n        LinkedListDeque&lt;Integer&gt; l1 = new LinkedListDeque&lt;&gt;();\n        ArrayDeque&lt;Integer&gt; l2 = new ArrayDeque&lt;&gt;();\n\n        ...\n    }\n\n    @Test\n    public void randomizedTest() {\n        LinkedListDeque&lt;Integer&gt; L = new LinkedListDeque&lt;&gt;();\n        ArrayDeque&lt;Integer&gt; L2 = new ArrayDeque&lt;&gt;();\n\n        int N = 100000;\n        for (int i = 0; i &lt; N; i += 1) {\n            int operationNumber = StdRandom.uniform(0, 4);\n            if (operationNumber == 0) {\n                ...\n            } else if (operationNumber == 3) {\n                // addFirst\n                int randVal = StdRandom.uniform(0, 100);\n                L.addFirst(randVal);\n                L2.addFirst(randVal);\n                System.out.println(\"addFirst(\" + randVal + \")\");\n            }\n        }\n    }\n}\n</code></pre>"},{"location":"zh/Notes%20of%20Courses/CS61B/CS61B/#3_9","title":"3","text":"<p>java\u4e2d\u751f\u6210\u968f\u673a\u6570\u53ef\u4ee5\u4f7f\u7528 <code>Math.random()</code> \uff0c\u4f1a\u8fd4\u56de <code>[0, 1)</code> \u7684\u968f\u673a\u6570</p>"},{"location":"zh/Notes%20of%20Courses/CS61B/CS61B/#4_7","title":"4","text":"<p>\u5728autograder\u4e2d\uff0c<code>Deque</code> \u7684\u5b50\u7c7b\u53ef\u80fd\u4e0d\u6b62\u81ea\u5df1\u5b9e\u73b0\u7684 <code>LinkedListDeque</code> \u548c <code>ArrayDeque</code> \uff0c\u6240\u4ee5\u5728\u5b9e\u73b0 <code>equals</code> \u65b9\u6cd5\u65f6\uff0c\u9700\u8981\u8003\u8651\u5230\u8fd9\u6837\u7684\u60c5\u51b5( <code>equals</code> \u65b9\u6cd5\u7684\u8981\u6c42\u662f\uff0c\u53ea\u8981\u662f <code>Deque</code> \u5e76\u4e14\u6240\u6709\u5143\u7d20\u6309\u987a\u5e8f\u4e00\u81f4\uff0c\u5219\u8ba4\u4e3a\u76f8\u7b49)</p>"},{"location":"zh/Notes%20of%20Courses/CS61B/CS61B/#lecture-9-extends-casting-higher-order-functions","title":"Lecture 9 Extends, Casting, Higher Order Functions","text":""},{"location":"zh/Notes%20of%20Courses/CS61B/CS61B/#1_18","title":"1","text":"<p><code>extends</code> \u5173\u952e\u5b57\uff0c\u80fd\u7ee7\u627f\u53e6\u4e00\u4e2a\u7c7b\u7684\u6240\u6709\u4e0d\u662f <code>private</code> \u7684\u5c5e\u6027(\u5305\u62ec\u65b9\u6cd5)\uff0c\u7136\u540e\u53ef\u4ee5\u6dfb\u52a0\u65b0\u7684\u65b9\u6cd5</p> <p>\u7ee7\u627f\u4e86\u4e4b\u540e\uff0c\u53ef\u4ee5\u4f7f\u7528 <code>super</code> \u6765\u8bbf\u95ee\u7236\u7c7b\u7684\u975e <code>private</code> \u7684\u5c5e\u6027</p> <p>\u5b50\u7c7b\u7684\u6784\u9020\u51fd\u6570\u4e2d\uff0c\u5982\u679c\u6ca1\u6709\u663e\u5f0f\u5730\u8c03\u7528\u7236\u7c7b\u7684\u6784\u9020\u51fd\u6570(\u901a\u8fc7 <code>super([...]);</code> \u8c03\u7528)\uff0c\u90a3\u4e48\u4f1a\u81ea\u52a8\u9690\u5f0f\u5730\u8c03\u7528(\u8c03\u7528 <code>super();</code> )</p> <p></p>"},{"location":"zh/Notes%20of%20Courses/CS61B/CS61B/#2_13","title":"2","text":"<p>Java\u4e2d\u7684\u9ad8\u9636\u51fd\u6570 Higher Order Functions</p> <p>Josh\u5728\u8bfe\u4e0a\u5c55\u793a\u4e86\u4e00\u4e2a\u4f8b\u5b50(\u4f7f\u7528interface)</p> JavaPython IntUnaryFunction<pre><code>public interface IntUnaryFunction {\n    int apply(int x);\n}\n</code></pre> TenX<pre><code>public class TenX implements IntUnaryFunction {\n    public int apply(int x) {\n        return 10 * x;\n    }\n}\n</code></pre> HoFDemo<pre><code>public class HoFDemo {\n    public static int do_twice(IntUnaryFunction f, int x) {\n        return f.apply(f.apply(x));\n    }\n    public static void main(String[] args) {\n        System.out.println(do_twice(new TenX(), 2));\n    }\n}\n</code></pre> <pre><code>def tenX(x):\n    return 10 * x\n\ndef do_twice(f, x):\n    return f(f(x))\n\nprint(do_twice(tenX, 2))\n</code></pre>"},{"location":"zh/Notes%20of%20Courses/CS61B/CS61B/#lecture-10-subtype-polymorphism-vs-hofs","title":"Lecture 10 Subtype Polymorphism vs. HoFs","text":""},{"location":"zh/Notes%20of%20Courses/CS61B/CS61B/#1_19","title":"1","text":"<p>Josh\u63d0\u5230 <code>OurComparable</code> \u7684\u7f3a\u70b9</p> <pre><code>public interface OurComparable {\n    public int compareTo(Object o);\n}\n</code></pre> <p>\u5373\u5728\u8fd0\u884c\u65f6(\u5982\u679c\u7c7b\u578b\u4e0d\u4e00\u81f4)\u4f1a\u51fa\u73b0\u9519\u8bef</p> <pre><code>public class Dog implements OurComparable {\n    public int compareTo(Object obj) {\n        /** Warning, cast can cause runtime error! */\n        Dog uddaDog = (Dog) obj;\n        return this.size - uddaDog.size;\n    }\n}\n</code></pre> <p>\u6240\u4ee5(\u4e3a\u4e86\u907f\u514d\u8fd9\u79cd\u60c5\u51b5)\u8981\u6362\u6210\u4f7f\u7528 <code>Comparable&lt;T&gt;</code> (java\u5185\u7f6e\u7684\u63a5\u53e3)</p> <pre><code>public interface Comparable&lt;T&gt; {\n    public int compareTo(T obj);\n}\n</code></pre> <pre><code>public class Dog implements Comparable&lt;Dog&gt; {\n    public int compareTo(Dog uddaDog) {\n        return this.size - uddaDog.size;\n    }\n}\n</code></pre>"},{"location":"zh/Notes%20of%20Courses/CS61B/CS61B/#2_14","title":"2","text":"<p>Josh\u63d0\u5230\uff0c\u7c7b\u4f3c\u4e8epython\u4e2d\u4f20\u5165 \u6bd4\u8f83\u51fd\u6570 \u8fdb\u884c\u4e0d\u540c\u7684\u6bd4\u8f83</p> python<pre><code>def print_larget(x, y, compare, stringify):\n    if compare(x, y):\n        return stringify(x)\n    return stringify(y)\n</code></pre> <p>java\u4e2d\u901a\u5e38\u4f7f\u7528 <code>Comparator</code> \uff0c\u4ed6\u5c55\u793a\u7684\u793a\u4f8b\u5982\u4e0b</p> java<pre><code>import java.util.Comparator;\n\npublic class Dog {\n    private String name;\n    ...\n    private static class NameComparator implements Comparator&lt;Dog&gt; {\n        public int compare(Dog a, Dog b) {\n            return a.name.compareTo(b.name);\n        }\n    }\n\n    public static class Comparator&lt;Dog&gt; getNameComparator() {\n        return new NameComparator();\n    }\n}\n</code></pre> <pre><code>Comparator&lt;Dog&gt; cd = Dog.getNameComparator();\nif (cd.compare(d1, d3) &gt; 0) {\n    d1.bark();\n} else {\n    d3.bark();\n}\n</code></pre>"},{"location":"zh/Notes%20of%20Courses/CS61B/CS61B/#lecture-10-qa","title":"Lecture 10 Q&amp;A","text":""},{"location":"zh/Notes%20of%20Courses/CS61B/CS61B/#1_20","title":"1","text":"<p>Josh\u6839\u636e\u4e0b\u9762\u8fd9\u4e2aLecture 10\u8bfe\u4e0a\u63d0\u5230\u7684\u4f8b\u5b50\uff0c\u5bf9\u7c7b\u578b\u8f6c\u6362 Casting\u8fdb\u884c\u4e86\u8fdb\u4e00\u6b65\u7684\u89e3\u91ca</p> <pre><code>Object o2 = new ShowDog(\"Mortimer\", \"Corgi\", 25, 512.2);\n\nShowDog sdx = ((ShowDog) o2);\nsdx.bark();\n\nDog dx = ((Dog) o2);\ndx.bark();\n\n((Dog) o2).bark();\n\nObject o3 = (Dog) o2;\no3.bark();  // Compile error\n</code></pre> <p>\u7c7b\u578b\u8f6c\u6362\u4e0d\u4f1a\u6539\u53d8\u539f\u672c\u53d8\u91cf\u7684\u9759\u6001\u7c7b\u578b\u548c\u52a8\u6001\u7c7b\u578b(\u5373\u5b9e\u9645\u7684\u7c7b\u578b)\uff0c\u4f46\u662f\u4f8b\u5982\u8fd9\u4e00\u884c\u4ee3\u7801\u4e2d</p> <pre><code>ShowDog sdx = ((ShowDog) o2);\n</code></pre> <p><code>((ShowDog) o2)</code> \u7531\u4e8e\u6709\u7c7b\u578b\u8f6c\u6362 Casting\uff0c\u6240\u4ee5\u8fd9\u4e2a\u8868\u8fbe\u5f0f(\u6574\u4f53)\u4f1a\u88ab\u8ba4\u4e3a\u9759\u6001\u7c7b\u578b\u662f <code>ShowDog</code> \uff0c\u56e0\u800c\u80fd\u8d4b\u503c\u7ed9\u9759\u6001\u7c7b\u578b\u540c\u4e3a <code>ShowDog</code> \u7684 <code>sdx</code> \uff0c\u800c\u5982\u679c\u4e0d\u52a0\u7c7b\u578b\u8f6c\u6362\uff0c</p> <pre><code>ShowDog sdx = o2;\n</code></pre> <p>\u5373\u4f7f <code>o2</code> \u7684\u52a8\u6001\u7c7b\u578b(\u5b9e\u9645\u7684\u7c7b\u578b)\u662f <code>ShowDog</code> \uff0c\u4f46\u662f\u56e0\u4e3a <code>o2</code> \u9759\u6001\u7c7b\u578b\u662f <code>Object</code> \uff0c <code>Object</code> \u4e0d\u80fd\u8d4b\u503c\u7ed9 <code>ShowDog</code> (\u53ea\u6709 <code>ShowDog</code> \u7c7b\u548c <code>ShowDog</code> \u7684\u5b50\u7c7b\u624d\u80fd\u8d4b\u503c\u7ed9 <code>ShowDog</code> )\uff0c\u6240\u4ee5\u4f1a\u4ea7\u751f\u7f16\u8bd1\u9519\u8bef</p>"},{"location":"zh/Notes%20of%20Courses/CS61B/CS61B/#lab-4","title":"Lab 4","text":""},{"location":"zh/Notes%20of%20Courses/CS61B/CS61B/#1_21","title":"1","text":"<p>\u53ef\u4ee5\u901a\u8fc7 <code>git checkout</code> \u6765\u53d8\u66f4\u6587\u4ef6\u5230\u67d0\u4e2acommit\u7684\u72b6\u6001</p> <pre><code>git checkout ... path/to/file\n</code></pre> <p><code>...</code> \u5904\u53ef\u4ee5\u662fcommit\u7684\u7f16\u53f7(\u4f8b\u5982 <code>47bb0877</code> )\uff0c\u6216\u8005branch(\u4f8b\u5982 <code>main</code> )\u6216\u8005tag(\u4f8b\u5982 <code>origin/main</code> )</p>"},{"location":"zh/Notes%20of%20Courses/CS61B/CS61B/#lecture-11-exceptions-iterators-object-methods","title":"Lecture 11 Exceptions, Iterators, Object Methods","text":""},{"location":"zh/Notes%20of%20Courses/CS61B/CS61B/#1_22","title":"1","text":"<p>java\u4e2d\u7684\u96c6\u5408 Set <code>java.util.Set</code> \u4e0d\u80fd\u5728\u4e00\u4e2aset\u4e2d\u52a0\u5165\u4e24\u4e2a\u4e00\u6837\u7684\u5143\u7d20</p> <p>Stores a set of values with on duplicates. Has no sense of order.</p> JavaPython <pre><code>Set&lt;String&gt; S = new HashSet&lt;&gt;();\nS.add(\"Tokyo\");\nS.add(\"Beijing\");\nS.add(\"Lagos\");\nS.add(\"S\u00e3o Paulo\");\nSystem.out.println(S.contains(\"Tokyo\"));\n</code></pre> Output<pre><code>true\n</code></pre> <pre><code>s = set()\ns.add(\"Tokyo\")\ns.add(\"Beijing\")\ns.add(\"Lagos\")\ns.add(\"S\u00e3o Paulo\")\nprint(\"Tokyo\" in s)\n</code></pre> Output<pre><code>True\n</code></pre>"},{"location":"zh/Notes%20of%20Courses/CS61B/CS61B/#2_15","title":"2","text":"<p>\u7c7b\u4f3c\u5728python\u4e2d\u7528 <code>raise</code> \u5f15\u53d1\u9519\u8bef\uff0c\u5728java\u4e2d\u53ef\u4ee5\u4f7f\u7528 <code>throw</code> \u629b\u51fa\u5f02\u5e38\uff0c\u4f8b\u5982</p> <pre><code>public void add(T x) {\n    if (x == null) {\n        throw new IllegalArgumentException(\"Cannot add null!\");\n    }\n}\n</code></pre>"},{"location":"zh/Notes%20of%20Courses/CS61B/CS61B/#3_10","title":"3","text":"<p>java\u4e2d\u7684foreach\u5faa\u73af/\u589e\u5f3afor\u5faa\u73af Enhanced For loop\uff0c</p> <pre><code>Set&lt;Integer&gt; javaset = new HashSet&lt;Integer&gt;();\n</code></pre> Enhanced For / foreach<pre><code>for (int x : javaset) {\n    System.out.println(x);\n}\n</code></pre> \u666e\u901afor\u5faa\u73af<pre><code>Iterator&lt;Integer&gt; seer = javaset.iterator();\n\nwhile (seer.hasNext()) {\n    System.out.println(seer.next());\n}\n</code></pre> <p>\u63a5\u53e3 <code>Iterator</code> \u9700\u8981\u5b9e\u73b02\u4e2a\u65b9\u6cd5</p> <pre><code>public interface Iterator&lt;T&gt; {\n    boolean hasNext();\n    T next();\n}\n</code></pre> <p>Josh\u5b9e\u73b0\u7684\u793a\u4f8b</p> <pre><code>public class ArraySet&lt;T&gt; {\n    private class ArraySetIterator implements Iterator&lt;T&gt; {\n        private int wizPos;\n        public ArraySetIterator() {\n            wizPos = 0;\n        }\n\n        public boolean hasNext() {\n            return wizPos &lt; size;\n        }\n\n        public T next() {\n            T returnItem = items[wizPos];\n            wizPos += 1;\n            return returnItem;\n        }\n    }\n}\n</code></pre> <p>\u5982\u679c\u60f3\u8981\u652f\u6301\u589e\u5f3afor\u5faa\u73af\uff0c\u90a3\u4e48\u9700\u8981\u8ba9\u7c7b\u5b9e\u73b0 <code>Iterable</code> \u63a5\u53e3</p> <pre><code>public interface Iterable&lt;T&gt; {\n    Iterator&lt;T&gt; iterator();\n}\n</code></pre> <p>\u4f8b\u5982</p> <pre><code>public class ArraySet&lt;T&gt; implements Iterable&lt;T&gt; {\n    ...\n    public Iterator&lt;T&gt; iterator() { ... }\n}\n</code></pre> <p>\u6216\u8005\u9700\u8981\u662f <code>Iterable</code> \u7684\u5b50\u7c7b\uff0c\u5982\u4e0b\u9762\u7684 <code>Set</code> \u7c7b</p> <pre><code>public class Collection&lt;E&gt; extends Iterable&lt;E&gt; { ... }\n</code></pre> <pre><code>public class Set&lt;E&gt; extends Collection&lt;E&gt; { ... }\n</code></pre>"},{"location":"zh/Notes%20of%20Courses/CS61B/CS61B/#4_8","title":"4","text":"<p>java\u4e2d\u6240\u6709\u7c7b\u90fd\u662f <code>Object</code> \u7c7b\u7684\u5b50\u7c7b</p> <p><code>Object</code> \u4e2d\u6bd4\u8f83\u91cd\u8981\u76844\u4e2a\u65b9\u6cd5(61b\u4e2d\u4f1a\u6d89\u53ca\u5230\u7684)</p> <ul> <li><code>String toString()</code></li> <li><code>boolean equals(Object obj)</code></li> <li><code>Class&lt;?&gt; getClass()</code></li> <li><code>int hashCode()</code></li> </ul>"},{"location":"zh/Notes%20of%20Courses/CS61B/CS61B/#5_6","title":"5","text":"<p>java\u4e2d\uff0c\u4e00\u4e2a <code>String</code> \u52a0\u4e0a\u53e6\u5916\u4e00\u4e2a\u4e1c\u897f\u7684\u65f6\u5019\uff0c\u4f1a\u81ea\u52a8\u9690\u5f0f\u5730\u8c03\u7528 <code>toString</code> \u65b9\u6cd5</p>"},{"location":"zh/Notes%20of%20Courses/CS61B/CS61B/#6_2","title":"6","text":"<p>Josh\u8bf4\u9053\uff0cjava\u4e2d \u5b57\u7b26\u4e32\u62fc\u63a5 \u6bd4\u8f83\u8017\u65f6\uff0c\u6240\u4ee5\u53ef\u4ee5\u4f7f\u7528 <code>StringBuilder</code> \uff0c\u4f8b\u5982</p> <pre><code>@Override\npublic String toString() {\n    StringBuilder returnSB = new StringBuilder(\"{\");\n    for (int i = 0; i &lt; size - 1; i += 1) {\n        returnSB.append(items[i].toString());\n        returnSB.append(\", \");\n    }\n    returnSB.append(items[size - 1]);\n    returnSB.append(\"}\");\n    return returnSB.toString();\n}\n</code></pre>"},{"location":"zh/Notes%20of%20Courses/CS61B/CS61B/#7_1","title":"7","text":"<p><code>==</code> \u548c <code>.equals</code> \u7684\u533a\u522b</p> <ul> <li><code>==</code> \u6bd4\u8f83\u4e24\u4e2a\u662f\u4e0d\u662f\u6307\u5411\u540c\u4e00\u4e2a\u5b9e\u4f8b</li> <li><code>.equals</code> \u8c03\u7528\u7684\u662f\u7c7b\u5185\u7684 <code>.equals</code> \u65b9\u6cd5</li> </ul>"},{"location":"zh/Notes%20of%20Courses/CS61B/CS61B/#8_1","title":"8","text":"<p>Josh\u5b9e\u73b0 <code>equals</code> \u7684\u793a\u4f8b</p> <pre><code>@Override\npublic boolean equals(Object other) {\n    if (this == other) {\n        return true;\n    }\n    if (other == null) {\n        return false;\n    }\n    if (other.getClass() != Array.class) {  // or != this.getClass()\n        return false;\n    }\n    ArraySet&lt;T&gt; o = (ArraySet&lt;T&gt;) other;\n    if (o.size() != this.size()) {\n        return false;\n    }\n    for (T item : this) {\n        if (!o.contains(item)) {\n            return false;\n        }\n    }\n    return true;\n}\n</code></pre> <p>\u6ce8\u610f\u5230\u4f7f\u7528\u4e86 <code>.getClass</code> \u65b9\u6cd5</p>"},{"location":"zh/Notes%20of%20Courses/CS61B/CS61B/#9_1","title":"9","text":"<p>Josh\u63d0\u5230\u4e86 <code>String.join</code> \u51fd\u6570\u7684\u4f7f\u7528(\u7528\u6765\u7b80\u5316 <code>.toString</code> \u65b9\u6cd5\u7684\u5b9e\u73b0)</p> <pre><code>public String toString() {\n    List&lt;String&gt; listOfItems = new ArrayList&lt;&gt;();\n    for (T x : this) {\n        listOfItems.add(x.toString());\n    }\n    return \"{\" + String.join(\", \", listOfItems) + \"}\";\n}\n</code></pre> <p><code>String.join</code> \u51fd\u6570\u7684\u4e00\u79cd\u7528\u6cd5\u662f\u4f20\u5165\u4e2d\u95f4\u7528\u4e8e\u5206\u5272\u7684\u5b57\u7b26\u4e32\uff0c\u548c\u4e00\u4e2a <code>Iterable</code> \uff0c\u7136\u540e\u4f1a\u8fd4\u56de\u7528 <code>Iterable</code> \u4e2d\u7684\u5143\u7d20\u62fc\u63a5\u7684\u5b57\u7b26\u4e32</p>"},{"location":"zh/Notes%20of%20Courses/CS61B/CS61B/#10_1","title":"10","text":"<p>Josh\u4ecb\u7ecd\u4e86 <code>of</code> \u9759\u6001\u65b9\u6cd5\u7684\u5b9e\u73b0\u548c\u7528\u6cd5</p> <pre><code>public class ArratSet&lt;T&gt; implements Iterable&lt;T&gt; {\n    public static &lt;Glerp&gt; ArratSet&lt;Glerp&gt; of(Glerp... stuff) {\n        ArratSet&lt;Glerp&gt; returnSet = new ArratSet&lt;Glerp&gt;();\n        for (Glerp x : stuff) {\n            returnSet.add(x);\n        }\n        return returnSet;\n    }\n}\n</code></pre> <ul> <li>\u56e0\u4e3a\u662f\u9759\u6001\u65b9\u6cd5\uff0c\u6240\u4ee5 <code>of</code> \u4e0d\u77e5\u9053 <code>T</code> \u662f\u4ec0\u4e48\uff0c\u6240\u4ee5\u9700\u8981\u58f0\u660e\u4e00\u4e2a\u65b0\u7684 <code>Glerp</code></li> <li><code>Glerp...</code> \u662f\u4e00\u4e2a\u53ef\u53d8\u6570\u91cf\u7684\u53c2\u6570(\u7c7b\u4f3c\u4e8epython\u4e2d\u7684 <code>*args</code> )\uff0c\u5e76\u4e14\u662f <code>Iterable</code> (\u53ef\u4ee5\u4f7f\u7528foreach)</li> </ul> <p>Josh\u5c55\u793a\u7684\u4f7f\u7528\u7684\u793a\u4f8b</p> <pre><code>ArraySet&lt;String&gt; asetOfStrings = ArraySet.of(\"hi\", \"I'm\", \"here\");\nSystem.out.println(asetOfStrings);\n</code></pre> Output<pre><code>{hi, I'm, here}\n</code></pre>"},{"location":"zh/Notes%20of%20Courses/CS61B/CS61B/#lecture-11-qa","title":"Lecture 11 Q&amp;A","text":""},{"location":"zh/Notes%20of%20Courses/CS61B/CS61B/#1_23","title":"1","text":"<p>Josh\u5c55\u793a\u4e86\u4f7f\u7528 <code>Arrays.sort(T[] a, Comparator&lt;? super T&gt; c)</code> \u51fd\u6570\uff0c\u5c06\u4e00\u4e2a\u6570\u7ec4\u6309\u7167\u81ea\u5b9a\u4e49\u7684\u6392\u5e8f\u65b9\u5f0f\u8fdb\u884c\u6392\u5e8f\u7684\u65b9\u6cd5</p> <pre><code>import org.junit.Test;\nimport java.util.Arrays;\nimport java.util.Comparator;\nimport static org.junit.Assert.assertEquals;\n\npublic class SevenCountComparator implements Comparator&lt;Integer&gt; {\n    @Test\n    public void testSevenCount() {\n        assertEquals(1, sevenCount(7));\n        assertEquals(0, sevenCount(9));\n        assertEquals(2, sevenCount(707));\n        assertEquals(6, sevenCount(77707077));\n    }\n\n    private int sevenCount(int a) {\n        String s = Integer.toString(a);\n        int count = 0;\n        for (int i = 0; i &lt; s.length(); i += 1) {\n            if (s.charAt(i) == '7') {\n                count += 1;\n            }\n        }\n        return count;\n    }\n\n    public int compare(Integer a, Integer b) {\n        return sevenCount(a) - sevenCount(b);\n    }\n\n    public static void main(String[] args) {\n        Integer[] a = {1, 3, 65, 88, 7, 126, 777, 728, 10912983, 99999999};\n        Arrays.sort(a, new SevenCountComparator());\n\n        System.out.println(Arrays.toString(a));\n    }\n}\n</code></pre> Output<pre><code>[1, 3, 65, 88, 126, 10912983, 99999999, 7, 728, 777]\n</code></pre>"},{"location":"zh/Notes%20of%20Courses/CS61B/CS61B/#lecture-12-command-line-programming-git-project-2-preview","title":"Lecture 12 Command Line Programming, Git, Project 2 Preview","text":""},{"location":"zh/Notes%20of%20Courses/CS61B/CS61B/#1_24","title":"1","text":"<p>Josh\u5c55\u793a <code>main</code> \u51fd\u6570 <code>args</code> \u53c2\u6570\u7684\u4f5c\u7528\uff0c\u4f5c\u7528\u5927\u81f4\u662f\u7528\u547d\u4ee4\u884c\u8fd0\u884cjava\u6587\u4ef6\u65f6\u7ed9\u83b7\u53d6\u4f20\u5165\u7684\u53c2\u6570</p> Hello.java<pre><code>public class Hello {\n    public static void main(String[] args) {\n        System.out.println(args[0]);\n        System.out.println(args[1]);\n        System.out.println(args[2]);\n    }\n}\n</code></pre> <pre><code>$ javac Hello.java\n$ java Hello.java one two three four\none\ntwo\nthree\n</code></pre>"},{"location":"zh/Notes%20of%20Courses/CS61B/CS61B/#2_16","title":"2","text":"<p>ppt\u4e2d\u5c55\u793a\u4e86\u53ef\u4ee5\u4f7f\u7528 <code>Integer.parseInt()</code> \u5c06\u5b57\u7b26\u4e32\u8f6c\u6362\u6210\u5bf9\u5e94\u7684\u6570\u5b57\u7684\u65b9\u6cd5</p>"},{"location":"zh/Notes%20of%20Courses/CS61B/CS61B/#3_11","title":"3","text":"<p>Josh\u89e3\u91cagit\u4f7f\u7528git-SHA1\u54c8\u5e0c\u503c\u6765\u5b58\u50a8\u6587\u4ef6\u7684\u65b9\u5f0f</p> <ul> <li> <p>First, git computes the git-SHA1 hash:</p> <ul> <li>HelloWorld.java \u2192 <code>66ccdc645c9d156d5c796dbe6ed768430c1562a2</code></li> </ul> </li> <li> <p>Git creates a folder called <code>.git/objects/66</code></p> <ul> <li>The <code>66</code> is the first two characters of the git-SHA1 hash.</li> </ul> </li> <li> <p>Git stores the contents in a file called</p> <p><code>ccdc645c9d156d5c796dbe6ed768430c1562a2</code>.</p> <ul> <li>File is stored in a compressed format (zlib) to save space.</li> </ul> </li> </ul> <pre><code>$ cd .git\n/.git$ cd objects\n/.git/objects$ cd 66\n/.git/objects/66$ ls\nccdc645c9d156d5c796dbe6ed768430c1562a2\n/.git/objects/66$ cat ~/Scuts/gitview.py\nimport sys\nimport zlib  # A compression / decompression library\nfilename = sys.argv[1]\ncompressed_contents = open(filename, 'rb').read()\ndecompressed_contents = zlib.decompress(compressed_contents)\ntry:\n    print(decompressed_contents.decode('utf-8'))\nexcept:\n    print(decompressed_contents)\n/.git/objects/66$ python3 ~/Scuts/gitview.py ccdc645c9d156d5c796dbe6ed768430c1562a2\nblob 115public class HelloWorld {\n        public static void main(String[] args) {\n                System.out.println(\"Hello World!\");\n        }\n}\n</code></pre>"},{"location":"zh/Notes%20of%20Courses/CS61B/CS61B/#lecture-13-asymptotics-i","title":"Lecture 13 Asymptotics I","text":""},{"location":"zh/Notes%20of%20Courses/CS61B/CS61B/#1_25","title":"1","text":"<p>Big Theta \u548c Big O \u7684\u533a\u522b</p> <p>Whereas Big Theta can informally be thought of as something like \u201cequals\u201d, Big O can be thought of as \u201cless than or equal\u201d.</p> <p>Example, the following are all true:</p> <ul> <li>N\u00b3 + 3N\u2074 \u2208 \u0398(N\u2074)</li> <li>N\u00b3 + 3N\u2074 \u2208 O(N\u2074)</li> <li>N\u00b3 + 3N\u2074 \u2208 O(N\u2076)</li> <li>N\u00b3 + 3N\u2074 \u2208 O(N!)</li> <li>N\u00b3 + 3N\u2074 \u2208 O(N<sup>N!</sup>)</li> </ul> <p>$$   R(N) \u2208 \u0398(f(N)) \u21d2 k_1 \u00b7 f(N) \u2264 R(N) \u2264 k_2 \u00b7 f(N)   $$</p> <p>$$   R(N) \u2208 Of(N)) \u21d2 R(N) \u2264 k_2 \u00b7 f(N)   $$</p>"},{"location":"zh/Notes%20of%20Courses/CS61B/CS61B/#lecture-14-disjoint-sets","title":"Lecture 14 Disjoint Sets","text":""},{"location":"zh/Notes%20of%20Courses/CS61B/CS61B/#1_26","title":"1","text":"<p>\u8fd9\u8282\u8bfeJosh\u8bb2\u6388\u4e86 \u5f97\u5230\u5e94\u7528\u4e8e\u201c\u52a8\u6001\u8fde\u63a5 Dynamic Connectivity\u201d\u95ee\u9898\u7684\u201c\u4e0d\u4ea4\u96c6 Disjoint Sets\u201d\u6570\u636e\u7ed3\u6784\u7684\u8fc7\u7a0b</p> <p>The ideas that made our implementation efficient:</p> <ul> <li>Represent sets as connected components (don't track individual connections).<ul> <li>ListOfSetsDS: Store connected components as a List of Sets (slow, complicated).</li> <li>QuickFindDS: Store connected components as set ids.</li> <li>QuickUnionDS: Store connected components as parent ids.<ul> <li>WeightedQuickUnionDS: Also track the size of each set, and use size to decide on new tree root.<ul> <li>WeightedQuickUnionWithPathCompressionDS: On calls to connect and isConnected, set parent id to the root for all items seen.</li> </ul> </li> </ul> </li> </ul> </li> </ul> Implementation Runtime ListOfSetsDS O(NM) QuickFindDS \u0398(NM) QuickUnionDS O(NM) WeightedQuickUnionDS O(N + M log N) WeightedQuickUnionWithPathCompressionDS O(N + M \u03b1(N)) <p>Runtimes are given assuming:</p> <ul> <li>We have a DisjointSets object of size N.</li> <li>We perform M operations, where an operation is defined as either a call to <code>connected</code> or <code>isConnected</code>.</li> </ul> <p>\u8981\u70b91</p> <p>\u5c06\u8fde\u901a\u5206\u91cf connected components\u7528\u96c6\u5408\u8868\u793a(\u5ffd\u7565\u5177\u4f53\u7684\u8fb9)\uff0c\u4f8b\u5982</p> <code>connect(2, 3)</code> \u64cd\u4f5c\u524d<code>connect(2, 3)</code> \u64cd\u4f5c\u540e <pre><code>flowchart TD\n0 --- 4\n0 --- 1 --- 2\n3 --- 5\n6</code></pre> <pre><code>{0, 1, 2, 4}, {3, 5}, {6}\n</code></pre> <pre><code>flowchart TD\n0 --- 4\n0 --- 1 --- 2 --- 3\n3 --- 5\n6</code></pre> <pre><code>{0, 1, 2, 4, 3, 5}, {6}\n</code></pre> <p>\u8981\u70b92</p> <p>QuickUnionDS\uff0c\u7528\u4e00\u4e2a\u6570\u7ec4\u6807\u8bb0\u6bcf\u4e2a\u8282\u70b9\u7684\u7236\u8282\u70b9(\u4f7f\u5f97\u6bcf\u4e2a\u8fde\u901a\u5206\u91cf\u50cf\u4e00\u4e2a\u6811\u4e00\u6837)\uff0c\u8fd9\u6837\u53ef\u4ee5\u51cf\u5c11 <code>connect</code> \u6240\u9700\u8981\u505a\u7684\u66f4\u6539/\u6240\u9700\u8981\u7684\u64cd\u4f5c(\u76f8\u6bd4\u4e8eListOfSetsDS)</p> <code>parent</code> -1 0 1 -1 0 3 -1 0 1 2 3 4 5 6 <pre><code>flowchart TD\n0 --- 4\n0 --- 1 --- 2\n3 --- 5\n6</code></pre> <p>\u8981\u70b93</p> <p>WeightedQuickUnionDS\uff0c\u6807\u8bb0\u6bcf\u4e2a\u6811\u7684\u5927\u5c0f\uff0c\u6bcf\u6b21 <code>connected</code> \u65f6\uff0c\u90fd\u5c06\u5c0f\u6811\u7684\u6839\u8fde\u63a5\u5230\u5927\u6811\u7684\u6839\u4e0a\uff0c\u8fd9\u6837\u80fd\u4f7f\u5f97 <code>connected</code> \u540e\u7684\u6811\u7684\u5c42\u6570\u4e0d\u4f1a\u592a\u9ad8\uff0c\u4f7f\u5f97 <code>connect</code> \u548c <code>isConnected</code> \u7684\u590d\u6742\u5ea6\u90fd\u964d\u5230 O(log N).</p> <pre><code>flowchart TD\n0 --- 1\n0 --- 2\n0 --- 3\n0 --- 4\n0 --- 5\n6 --- 7\n6 --- 8 --- 9</code></pre> <p>Two common approaches:</p> <ul> <li> <p>Use values other than -1 in <code>parent</code> array for root nodes to track size.</p> <code>parent</code> -6 0 0 0 0 0 -4 6 6 8 0 1 2 3 4 5 6 7 8 9 </li> <li> <p>Create a separate <code>size</code> array.</p> <code>size</code> 6 1 1 1 1 1 4 1 2 1 0 1 2 3 4 5 6 7 8 9 </li> </ul> <p>\u8981\u70b94</p> <p>WeightedQuickUnionWithPathCompressionDS\uff0c\u5728 <code>isConnected</code> \u65f6\u628a\u7ecf\u8fc7\u7684\u8282\u70b9\u76f4\u63a5\u6539\u4e3a\u8fde\u63a5\u5230\u6839\u8282\u70b9\u4e0a</p> <code>isConnected(15, 10)</code> \u524d<code>isConnected(15, 10)</code> \u540e <pre><code>flowchart TD\n0 --- 1([\"1\"]) --- 5([\"5\"]) --- 11([\"11\"]) --- 15([\"15\"])\n5 --- 12\n1 --- 6 --- 13\n1 --- 7\n0 --- 2 --- 8 --- 14\n2 --- 9\n0 --- 3([\"3\"]) --- 10([\"10\"])\n0 --- 4</code></pre> <pre><code>flowchart TD\n0 --- 15([\"15\"])\n0 --- 11([\"11\"])\n0 --- 5([\"5\"])\n0 --- 1([\"1\"])\n5 --- 12\n1 --- 6 --- 13\n1 --- 7\n0 --- 2 --- 8 --- 14\n2 --- 9\n0 --- 3([\"3\"])\n0 --- 10([\"10\"])\n0 --- 4</code></pre> <p>\u4f7f\u5f97N\u4e2a\u8282\u70b9M\u6b21\u64cd\u4f5c\u7684\u590d\u6742\u5ea6\u51cf\u5c11\u5230 O(N + M lg* N)</p> <p>\\(2\\) = lg* 1</p> <p>\\(2^{2^{2^{2}}}\\) = lg* 4</p> <p>...</p>"},{"location":"zh/Notes%20of%20Courses/CS61B/CS61B/#lec-15-asymptotics-ii","title":"Lec 15 Asymptotics II","text":""},{"location":"zh/Notes%20of%20Courses/CS61B/CS61B/#1_27","title":"1","text":"<p>Josh\u8bb2\u89e3\u52a0\u5165\u4e00\u6b21Merge\u5bf9\u9009\u62e9\u6392\u5e8f Selection Sort\u7684\u5177\u4f53\u52a0\u901f\u8fc7\u7a0b\uff0c\u5e76\u8fdb\u800c\u8bb2\u89e3\u5f52\u5e76\u6392\u5e8f Merge Sort\u65f6\u5982\u4f55\u6bd4\u9009\u62e9\u6392\u5e8f\u66f4\u5feb\u7684</p> <p>Runtime of selection sort is \u0398(N\u00b2):</p> <ul> <li>Look at all N unfixed items to find smallest.</li> <li>Then look at N-1 remaining unfixed.</li> <li>...</li> <li>Look at last two unfixed items.</li> <li>Done, sum is 2+3+4+5+...+N = \u0398(N\u00b2)</li> </ul> <p>Given that runtime is quadratic, for N = 64, we might sat the runtime for selection sort is 2,048 arbitrary units of time (AU).</p> <p>Using Merge to Speed Up the Sorting Process</p> <p>Merging can give us an improvement over vanilla selection sort:</p> <ul> <li>Selection sort the left half: \u0398(N\u00b2).</li> <li>Selection sort the right half: \u0398(N\u00b2).</li> <li>Merge the results: \u0398(N).</li> </ul> <p>N=64: ~1088 AU.</p> <ul> <li>Merge: ~64 AU.</li> <li>Selection Sort: ~2*512 = ~1024 AU.</li> </ul> <p>Still \u0398(N\u00b2), but faster since N+2*(N/2)\u00b2 &lt; N\u00b2</p> <ul> <li>~1088 vs. ~2048 AU for N=64.</li> </ul> <p>Mergesort Order of Growth</p> <p>Mergesort has worst case runtime = \u0398(N log N).</p> <ul> <li>Every level takes ~N AU.<ul> <li>Top level takes ~N AU.</li> <li>Next  level takes ~N/2 + ~N/2 =  ~N.</li> <li>One more level down: ~N/4 + ~N/4 + ~N/4 + ~N/4 = ~N.</li> </ul> </li> <li>Thus, total runtime is ~Nk, where k is the number of levels.<ul> <li>How many levels? Goes until we get to size 1.</li> <li>k = log\u2082(N).</li> </ul> </li> <li>Overall runtime is \u0398(N log N).</li> </ul> <p>Mergesort using Recurrence Relations (Extra)</p> <p>C(N): Number of calls to mergesort + number of array writes.   $$   C(N) = \\begin{cases}   1 &amp; : N &lt; 2 \\   2C(N/2) + N &amp; : N \u2265 2 \\   \\end{cases}   $$</p> <p>$$   \\begin{equation}   \\begin{aligned}   C(N) &amp; = 2(2C(N/4) + N/2) + N \\        &amp; = 4C(N/4) + N + N \\        &amp; = 8C(N/8) + N + N + N \\        &amp; = N \\cdot 1 + N + N + \\ldots + N  (k = \\lg N)\\        &amp; = N + N \\lg N \\in \\Theta(N \\lg N)   \\end{aligned}   \\end{equation}   $$</p>"},{"location":"zh/Notes%20of%20Courses/CS61B/CS61B/#lecture-16-adts-sets-maps-bsts","title":"Lecture 16 ADTs, Sets, Maps, BSTs","text":""},{"location":"zh/Notes%20of%20Courses/CS61B/CS61B/#1_28","title":"1","text":"<p>Josh\u8bfe\u4e0a\u63d0\u5230\u7684java\u4e2d\u7684map\u7684\u4f7f\u7528\u793a\u4f8b(\u548cpython\u4e2d\u7684\u5b57\u5178\u7c7b\u4f3c)</p> JavaPython <pre><code>Map&lt;String, Integer&gt; m = new TreeMap&lt;&gt;();\nString[] text = {\"sumomo\", \"mo\", \"momo\", \"mo\", \"momo\", \"no\", \"uchi\"};\n\nfor (String s : text) {\n    int currentCount = m.getOrDefault(s, 0);\n    m.put(s, currentCount + 1);\n}\n</code></pre> <pre><code>m = {}\ntext = [\"sumomo\", \"mo\", \"momo\", \"mo\", \"momo\", \"no\", \"uchi\"]\nfor s in text:\n    current_count = m.get(s, 0)\n    m[s] = current_count + 1\n</code></pre>"},{"location":"zh/Notes%20of%20Courses/CS61B/CS61B/#2_17","title":"2","text":"<p>Josh\u5728\u8bb2\u5230\u4e8c\u5206\u67e5\u627e\u6811\u7684\u63d2\u5165 insert\u65b9\u6cd5\u65f6\uff0c</p> <pre><code>static BST insert(BST T, Key ik) {\n    if (T == null)\n        return new BST(ik);\n    if (ik &lt; T.key)\n        T.left = insert(T.left, ik);\n    else if (ik &gt; T.key)\n        T.right = insert(T.right, ik);\n    return T;\n}\n</code></pre> <p>\u8981\u4f7f\u7528\u4e0a\u9762\u8fd9\u6837\u7684\u4ee3\u7801\u7ed3\u6784\uff0c\u907f\u514d\u4f7f\u7528\u4e0b\u9762\u8fd9\u6837\u7684\u4ee3\u7801(\u6bd4\u4e0a\u9762\u7684\u8981\u590d\u6742\uff0c\u4e5f\u4e0d\u7f8e\u89c2)</p> <p>ARMS LENGTH RECURSION!!!! No good.</p> <p>A common rookie bad habit to avoid:</p> <pre><code>    if (T.left == null)\n        T.left = new BST(ik);\n    else if (T.right = null)\n        T.right = new BST(ik);\n</code></pre>"},{"location":"zh/Notes%20of%20Courses/CS61B/CS61B/#3_12","title":"3","text":"<p>Josh\u8bb2\u5230\uff0c\u5728\u5bf9\u4e8c\u5206\u67e5\u627e\u6811\u8fdb\u884c\u5220\u9664\u64cd\u4f5c\u65f6\uff0c\u5982\u679c\u8981\u5220\u9664\u7684\u8282\u70b9\u6709\u4e24\u4e2a\u5b50\u8282\u70b9\uff0c\u90a3\u4e48\u9700\u8981\u627e\u5230\u5de6\u5b50\u6811\u4e2d\u7684\u6700\u5927\u8282\u70b9(a.k.a predecessor)\u6216\u8005\u53f3\u5b50\u6811\u4e2d\u7684\u6700\u5c0f\u8282\u70b9(a.k.a successor)\uff0c\u7ee7\u7eed\u9012\u5f52\u5730\u5220\u9664\u8fd9\u4e2a\u8282\u70b9\uff0c\u6700\u540e\u7528\u8fd9\u4e2a\u8282\u70b9\u7684\u503c\u6784\u9020\u4e00\u4e2a\u65b0\u7684\u8282\u70b9\u4ee3\u66ff\u88ab\u5220\u9664\u7684\u8282\u70b9\uff0c</p> <p>\u4f8b\u5982\uff0c\u8981\u5220\u9664 <code>k</code></p> <pre><code>flowchart TD\nk[\"k (to be deleted)\"] --- e --- b --- a\nb --- d\ne --- g([\"g\"]) --- f\ng --- null1(\" \")\nk --- v --- p --- m([\"m\"])\np --- r\nv --- y --- x\ny --- z</code></pre> <p>\u90a3\u4e48 <code>g</code> \u662fpredecessor\uff0c<code>m</code> \u662fsuccessor\uff0c</p> <p>\u5982\u679c\u9009\u62e9 <code>g</code> \u4ee3\u66ff <code>k</code> \u7684\u4f4d\u7f6e\uff0c\u90a3\u4e48\u6700\u540e\u7684\u7ed3\u679c\u5c31\u662f</p> <pre><code>flowchart TD\ng --- e --- b --- a\nb --- d\ne --- f\ng --- v --- p --- m\np --- r\nv --- y --- x\ny --- z</code></pre>"},{"location":"zh/Notes%20of%20Courses/CS61B/CS61B/#4_9","title":"4","text":"<p>Josh\u63d0\u5230\uff0c\u4f7f\u7528\u4e8c\u5206\u67e5\u627e\u6811\u6765\u5b9e\u73b0\u4e4b\u524d\u63d0\u5230\u7684map\uff0c\u5c06key\u548cvalue\u4e00\u8d77\u4f5c\u4e3a\u6811\u7684\u4e00\u4e2a\u8282\u70b9\u5373\u53ef\uff0c\u67e5\u627e\u65f6\u6309\u7167key\u7684\u503c\u6765\u67e5\u627e\uff0c\u4f8b\u5982</p> <pre><code>flowchart TD\nsumomo[\"sumomo | 1\"] --- momo[\"momo | 2\"] --- mo[\"mo | 2\"]\nmomo --- no[\"no | 1\"]\nsumomo --- uchi[\"uchi | 1\"]</code></pre>"},{"location":"zh/Notes%20of%20Courses/CS61B/CS61B/#lecture-16-qa","title":"Lecture 16 Q&amp;A","text":""},{"location":"zh/Notes%20of%20Courses/CS61B/CS61B/#1_29","title":"1","text":"<p>\u6709\u4eba\u63d0\u95ee\u8fd9\u4e00\u9898</p> <pre><code>public static void f5(int N, int m) {\n    if (N &lt; 10) { return; }\n    for (int i = 0; i &lt;= N % 10; i++) {\n        f5(N / 10, M / 10);\n        System.out.println(M);\n    }\n}\n</code></pre> <p>\u9898\u76ee\u662f\u95ee\u8fd9\u4e2a\u51fd\u6570\u7684\u65f6\u95f4\u590d\u6742\u5ea6O\u662f\u591a\u5c11\u3002</p> <p>\u6700\u540e\u53d1\u73b0\uff0c\u901a\u8fc7\u53d6\u6700\u574f\u60c5\u51b5\u7684N\uff0c999...9\u5bf9\u5e94\u4f1a <code>println</code> 1+10+100+...=111...1\u6b21\uff0c\u6240\u4ee5\u590d\u6742\u5ea6\u662fO(N)\uff0c</p> <p>\u6240\u4ee5\u6211\u89c9\u5f97\u8fd9\u79cd\u9898\u53ef\u4ee5\u76f4\u63a5\u53d6\u6700\u574f\u7684\u60c5\u51b5\u8fdb\u884c\u5206\u6790\u5224\u65ad</p>"},{"location":"zh/Notes%20of%20Courses/CS61B/CS61B/#lab-6","title":"Lab 6","text":""},{"location":"zh/Notes%20of%20Courses/CS61B/CS61B/#1_30","title":"1","text":"<p>\u5b9e\u9a8c\u8bf4\u660e\u4e2d\u63d0\u5230\u4e86\uff0cjava\u4e2d\u53ef\u4ee5\u8fd9\u6837\u83b7\u53d6\u5230\u8fd0\u884c\u65f6\u7684\u8def\u5f84(\u5f53\u524d\u5de5\u4f5c\u76ee\u5f55 current working directory)</p> <pre><code>System.getProperty(\"user.dir\")\n</code></pre> <p>The current working directory (CWD) of a Java program is the directory from where you execute that Java program. You can access the CWD from within a Java program by using <code>System.getProperty(\"user.dir\")</code>.</p> <p>\u6559\u7a0b\u4e2d\u7ed9\u51fa\u4e86IDEA\u4e2d\u8bbe\u7f6e\u5f53\u524d\u5de5\u4f5c\u76ee\u5f55\u7684\u65b9\u6cd5\uff0c</p> <p>In IntelliJ, the CWD is given by the specified directory under Run &gt; Edit Configurations &gt; Working Directory</p> <p>\u300e\u5f53\u524d\u6587\u4ef6\u300f\u4e0b\u7684\u300e\u7f16\u8f91\u914d\u7f6e\u300f&gt;\u300e<code>+</code>\u300f&gt;\u300e\u5e94\u7528\u7a0b\u5e8f\u300f\uff0c\u7136\u540e\u5728\u4e4b\u540e\u7684\u754c\u9762\u91cc\u5c31\u53ef\u4ee5\u8bbe\u7f6e\u5f53\u524d\u5de5\u4f5c\u76ee\u5f55\u4e86</p> <p></p> <p></p> <p></p>"},{"location":"zh/Notes%20of%20Courses/CS61B/CS61B/#2_18","title":"2","text":"<p>\u5b9e\u9a8c\u8bf4\u660e\u4e2d\u7ed9\u51fa\u7684java\u4e2d\u5173\u4e8e\u6587\u4ef6\u548c\u6587\u4ef6\u5939\u7684\u64cd\u4f5c</p> <p>Files</p> <p>You can make a File object in Java with the File constructor and passing in the path to the file:</p> <pre><code>File f = new File(\"dummy.txt\");\n</code></pre> <p>The above path is a relative path where we are referring to the file <code>dummy.txt</code> in our Java program\u2019s CWD. You can think of this File object as a reference to the actual file <code>dummy.txt</code> - when we create the new File object, we aren\u2019t actually creating the <code>dummy.txt</code> file itself, we are just saying, \u201cin the future, when I do operations with <code>f</code>, I want to do these operations on <code>dummy.txt</code>\u201d. To actually create this <code>dummy.txt</code> file, we could call</p> <pre><code>f.createNewFile();\n</code></pre> <p>and then the file <code>dummy.txt</code> will actually now exist (and you could see it in File Explorer / Finder).</p> <p>You can check if the file \u201cdummy.txt\u201d already exists or not with the <code>exists</code> method of the File class:</p> <pre><code>f.exists()\n</code></pre> <p>Actually writing to a file is pretty ugly in Java. To keep things simple, we\u2019ve provided you with a <code>Utils.java</code>. This class will be very handy for this lab and in Gitlet. You should look at the list of available methods in <code>Utils.java</code> to get a sense of what it can do for you. See the FAQ at the bottom of this lab for hints on what to focus on.</p> <p>As an example, if you want to write a String to a file, you can do the following:</p> <pre><code>Utils.writeContents(f, \"Hello World\");\n</code></pre> <p>Now <code>dummy.txt</code> would now have the text \u201cHello World\u201d in it.</p> <p>Directories</p> <p>Directories in Java are also represented with File objects. For example, you can make a File object that represents a directory:</p> <pre><code>File d = new File(\"dummy\");\n</code></pre> <p>Similar to files, this directory might not actually exist in your file system. To actually create the folder in your file system, you can run:</p> <pre><code>d.mkdir();\n</code></pre> <p>and now there should be a folder called <code>dummy</code> in your CWD. You should also checkout the <code>mkdirs()</code> method, whose documentation can be found here.</p>"},{"location":"zh/Notes%20of%20Courses/CS61B/CS61B/#3_13","title":"3","text":"<p>\u5b9e\u9a8c\u8bf4\u660e\u4e2d\u63d0\u5230\u4e86java\u4e2d\u5c06\u53d8\u91cf\u4fdd\u5b58\u5230\u6587\u4ef6\u4e2d\u7684\u65b9\u6cd5\uff0c\u5373\u8ba9\u81ea\u5b9a\u4e49\u7684\u7c7b\u5b9e\u73b0 <code>java.io.Serializable</code> \u8fd9\u4e2a\u63a5\u53e3\uff0c\u7136\u540e\u5c31\u53ef\u4ee5(\u7ed3\u5408java\u4e2d\u5bf9\u6587\u4ef6\u7684\u64cd\u4f5c)\u5c06\u53d8\u91cf\u5199\u5165\u5230\u6307\u5b9a\u7684\u6587\u4ef6\u5f53\u4e2d\u6216\u4ece\u6587\u4ef6\u4e2d\u8bfb\u53d6(\u611f\u89c9\u548cpython\u4e2d\u7684pickle\u5305\u6bd4\u8f83\u7c7b\u4f3c)\uff0c\u4f8b\u5982</p> <pre><code>import java.io.Serializable;\n\npublic class Model implements Serializable {\n    ...\n}\n</code></pre> \u5199\u5165<pre><code>Model m = ....;\nFile outFile = new File(saveFileName);\ntry {\n    ObjectOutputStream out =\n        new ObjectOutputStream(new FileOutputStream(outFile));\n    out.writeObject(m);\n    out.close();\n} catch (IOException excp) {\n    ...\n}\n</code></pre> \u8bfb\u53d6<pre><code>Model m;\nFile inFile = new File(saveFileName);\ntry {\n    ObjectInputStream inp =\n        new ObjectInputStream(new FileInputStream(inFile));\n    m = (Model) inp.readObject();\n    inp.close();\n} catch (IOException | ClassNotFoundException excp) {\n    ...\n    m = null;\n}\n</code></pre>"},{"location":"zh/Notes%20of%20Courses/CS61B/CS61B/#4_10","title":"4","text":"<p>\u5728\u4f7f\u7528 <code>make</code> \u65f6\uff0c\u9700\u8981\u4f7f\u7528git bash\uff0c\u4f7f\u7528powershell\u65f6\u51fa\u73b0\u4e86\u8fd9\u6837\u7684\u62a5\u9519</p> <pre><code>PS C:\\Github\\CS-61B-Spring-2021\\hwCode\\lab6&gt; make check              \n\"C:/Program Files (x86)/GnuWin32/bin/make\" -C testing PYTHON=python3 TESTER_FLAGS=\"\" check\nmake[1]: Entering directory `C:/Github/CS-61B-Spring-2021/hwCode/lab6/testing'\n\u7cfb\u7edf\u627e\u4e0d\u5230\u6307\u5b9a\u7684\u8def\u5f84\u3002\n'true' \u4e0d\u662f\u5185\u90e8\u6216\u5916\u90e8\u547d\u4ee4\uff0c\u4e5f\u4e0d\u662f\u53ef\u8fd0\u884c\u7684\u7a0b\u5e8f\n\u6216\u6279\u5904\u7406\u6587\u4ef6\u3002\nmake[1]: *** [check] \u9519\u8bef 1\nmake[1]: Leaving directory `C:/Github/CS-61B-Spring-2021/hwCode/lab6/testing'\nmake: *** [check] \u9519\u8bef 2\n</code></pre> <p>\u6362\u6210git bash\u4e4b\u540e\uff0c\u8fd0\u884c <code>make check</code> \u65f6\u51fa\u73b0\u4e86\u8fd9\u6837\u7684\u62a5\u9519</p> <pre><code>$ make check\n\"C:/Program Files (x86)/GnuWin32/bin/make\" -C testing PYTHON=python3 TESTER_FLAGS=\"\" check\nmake[1]: Entering directory `C:/Github/CS-61B-Spring-2021/hwCode/lab6/testing'\nTesting application capers.Main...\npython3 tester.py  --src=our-src our/*.in\nmake[1]: *** [check] \u9519\u8bef 49\nmake[1]: Leaving directory `C:/Github/CS-61B-Spring-2021/hwCode/lab6/testing'\nmake: *** [check] \u9519\u8bef 2\n</code></pre> <p>\u53d1\u73b0\u6309\u7167\u4efb\u52a1\u8bf4\u660eFAQs\u4e2d\u8bf4\u7684\uff0c\u7531\u4e8ewindows\u4e2d\u7684\u8fd0\u884cpython\u7684\u547d\u4ee4\u662f <code>python</code> \u800c\u4e0d\u662f <code>python3</code> \uff0c\u6240\u4ee5\u52a0\u4e00\u4e2a <code>PYTHON=python</code> \u5373\u53ef</p> <pre><code>make check PYTHON=python\n</code></pre>"},{"location":"zh/Notes%20of%20Courses/CS61B/CS61B/#lecture-17-b-trees-2-3-2-3-4-trees","title":"Lecture 17 B-Trees (2-3, 2-3-4 Trees)","text":""},{"location":"zh/Notes%20of%20Courses/CS61B/CS61B/#1_31","title":"1","text":"<p>Big O\u867d\u7136\u7c7b\u4f3c\u4e8e\u5c0f\u4e8e\u7b49\u4e8e\uff0c\u4f46\u662f\u901a\u5e38\u7528\u4e8e\u8868\u793a\u6700\u574f\u7684\u60c5\u51b5\u7684Big Theta\u662f\u8fd9\u6837</p> <p>(Big O) Allows us to make simple blanket statements, e.g. can just say \u201cbinary search is O(log N)\u201d instead of \u201cbinary search is \u0398(log N) in the worst cast\u201d.</p>"},{"location":"zh/Notes%20of%20Courses/CS61B/CS61B/#2_19","title":"2","text":"<p>\u6811\u7684\u9ad8\u5ea6 Height\u3001\u6df1\u5ea6 Depth\u7684\u5b9a\u4e49\uff0c\u4ee5\u53ca\u5b83\u4eec\u548c\u8fd0\u884c\u65f6\u95f4 Runtime\u7684\u5173\u7cfb</p> <pre><code>flowchart TD\nk --- e --- b --- a\nb --- d\ne --- g --- f\ng --- j\nk --- v --- p --- r --- s\nv --- y --- z</code></pre> <p>Height and Depth</p> <p>Height and average depth are important properties of BSTs.</p> <ul> <li>The \u201cdepth\u201d of a node is how far it is from the root, e.g. depth(g) = 2.</li> <li>The \u201cheight\u201d of a tree is the depth of its deepest leaf, e.g. height(T) = 4.</li> <li>The \u201caverage depth\u201d of a tree is the average depth of a tree's nodes.<ul> <li>(0x1 + 1x2 + 2x4 + 3x6 + 4x1)/(1+2+4+6+1) = 2.35</li> </ul> </li> </ul> <p>Height, Depth and Runtime</p> <p>Height and average depth determine runtimes for BST operations.</p> <ul> <li>The \u201cheight\u201d of a tree determines the worst case runtime to find a node.<ul> <li>Example: Worst case is contains(s), requires 5 comparisons (height + 1).</li> </ul> </li> <li>The \u201caverage depth\u201d determines the average case runtime to find a node.<ul> <li>Example: Average case is 3.35 comparisons (average depth + 1).</li> </ul> </li> </ul>"},{"location":"zh/Notes%20of%20Courses/CS61B/CS61B/#3_14","title":"3","text":"<p>ppt\u4e2d\u5c55\u793a\u7684\u4e00\u4e2a3\u9636B\u6811\u6dfb\u52a0\u5143\u7d20\u53d8\u5316\u7684\u8fc7\u7a0b</p> <p></p>"},{"location":"zh/Notes%20of%20Courses/CS61B/CS61B/#4_11","title":"4","text":"<p>\u7279\u6b8aB\u6811\u7684\u522b\u79f0</p> <ul> <li>B-trees of order L=3 (like we used today) are also called a 2-3-4 tree or a 2-4 tree.<ul> <li>\u201c2-3-4\u201d refers to the number of children that a node can have, e.g. a 2-3-4 tree node may have 2, 3, or 4 children.</li> </ul> </li> <li>B-trees of order L=2 are also called a 2-3 tree.</li> </ul> <p>B-Trees are most popular in two specific contexts:</p> <ul> <li>Small L (L=2, L=3):<ul> <li>Used as a conceptually simple balanced search tree (as today).</li> </ul> </li> <li>L is very large (say thousands).<ul> <li>Used in practice for databases and filesystems (i.e. systems with very large records).</li> </ul> </li> </ul> <p>B\u6811\u7684\u4e24\u4e2a\u4e0d\u53d8\u5f0f Invariant</p> <ul> <li>All leaves must be the same distance from the source.</li> <li>A non-leaf node with k items must have exactly k+1 children.</li> </ul> <p>B\u6811\u7684\u9ad8\u5ea6\uff1a\u5728 ~log<sub>L+1</sub>(N) \u548c ~log\u2082(N) \u4e4b\u95f4</p>"},{"location":"zh/Notes%20of%20Courses/CS61B/CS61B/#5_7","title":"5","text":"<p>B\u6811\u7684\u8fd0\u884c\u65f6\u95f4 Runtime</p> <p>Runtime for <code>contains</code></p> <p>Runtime for contains:</p> <ul> <li>Worst case number of nodes to inspect: H + 1</li> <li>Worst case number of items to inspect per node: L</li> <li>Overall runtime: O(HL)</li> </ul> <p>Since H = \u0398(log N), overall runtime is O(L log N).</p> <ul> <li>Since L is a constant, runtime is therefore O(log N).</li> </ul> <p>Runtime for <code>add</code>:</p> <ul> <li>Worst case number of nodes to inspect: H + 1</li> <li>Worst case number of items to inspect per node: L</li> <li>Worst case number of split operations: H + 1</li> <li>Overall runtime: O(HL)</li> </ul> <p>... O(log N).</p>"},{"location":"zh/Notes%20of%20Courses/CS61B/CS61B/#lecture-18-red-black-trees","title":"Lecture 18 Red Black Trees","text":""},{"location":"zh/Notes%20of%20Courses/CS61B/CS61B/#1_32","title":"1","text":"<p>Josh\u4ecb\u7ecd\u5230\u7ea2\u9ed1\u6811\u548c2-3 tree\u662f\u4e00\u6837\u7684(\u6570\u5b66\u4e0a\u53ef\u4ee5\u53eb\u505a\u53cc\u5c04 bijection)\uff0c\u4e0b\u56feppt\u4e2d\u5c55\u793a\u7684\u662f\u5de6\u503e Left-Leaning\u7ea2\u9ed1\u6811\uff0c\u5de6\u503e\u5373\u4ee3\u8868 \u8868\u793a2-3tree\u4e2d\u540c\u4e00\u4e2a\u8282\u70b9\u4e0a\u4e24\u4e2a\u5143\u7d20\u7684\u7ea2\u9ed1\u6811\u7684\u4e24\u4e2a\u8282\u70b9 \u4e4b\u95f4\u7528\u8fde\u63a5\u5de6\u5b50\u6811\u7684\u7ebf\u8fdb\u884c\u8fde\u63a5</p> <p></p> <p>Some handy LLRB properties:</p> <ul> <li>No node has two red links [otherwise it'd be a analogous to a 4-node, which are disallowed in 2-3 trees].</li> <li>Every path from root to a leaf has same number of black links [because 2-3 trees have the same number of links to every leaf]. LLRBs are therefore balanced.</li> </ul>"},{"location":"zh/Notes%20of%20Courses/CS61B/CS61B/#2_20","title":"2","text":"<p>Josh\u901a\u8fc74\u4e2a\u4f8b\u5b50\uff0c\u8bb2\u89e3\u4e86\u7ea2\u9ed1\u6811\u5982\u4f55\u6784\u5efa\u7684\u8fc7\u7a0b</p> <ul> <li>When insering: Use a red link.</li> <li>If there is a right leaning \u201c3-node\u201d, we have a Left Leaning Violation.<ul> <li>Rotate left the appropriate node to fix.</li> </ul> </li> <li>If there are two consecutive left links, we have an Incorrect 4 Node Violation.<ul> <li>Rotate right the appropriate node to fix.</li> </ul> </li> <li>If there are any nodes with two red children, we have a Temporary 4 Node.<ul> <li>Color flip the node to emulate the split operation.</li> </ul> </li> </ul> <p></p> <p></p> <p></p> <p></p> <p></p>"},{"location":"zh/Notes%20of%20Courses/CS61B/CS61B/#lab-7","title":"Lab 7","text":""},{"location":"zh/Notes%20of%20Courses/CS61B/CS61B/#1_33","title":"1","text":"<p>\u4efb\u52a1\u8bf4\u660e\u4e2d\u63d0\u5230\u4e86\u6cdb\u578b generic\u4e5f\u53ef\u4ee5\u6307\u5b9a\u7c7b\u578b</p> <p>This can be enforced in Java with a bounded type parameter. Consider the example below, taken from the Oracle docs:</p> <pre><code>/*\n * Bounded type parameters allow you to invoke methods defined in the bounds:\n * The `isEven` method invokes the `intValue` method defined in the \n * `Integer` class through `n`.\n */\n\npublic class NaturalNumber&lt;T extends Integer&gt; {\n\n    private T n;\n\n    public NaturalNumber(T n)  { this.n = n; }\n\n    public boolean isEven() {\n        return n.intValue() % 2 == 0;\n    }\n\n    // ...\n}\n</code></pre>"},{"location":"zh/Notes%20of%20Courses/CS61B/CS61B/#lecture-19-hashing","title":"Lecture 19 Hashing","text":""},{"location":"zh/Notes%20of%20Courses/CS61B/CS61B/#1_34","title":"1","text":"<p>Josh\u63d0\u5230\u901a\u8fc7\u5c06\u54c8\u5e0c\u8868\u4ece\u50a8\u5b58 <code>true</code> \u6216 <code>false</code> \u6539\u6210\u50a8\u5b58\u54c8\u5e0c\u503c\u4e3a\u5bf9\u5e94\u4e0b\u6807\u7684\u5bf9\u8c61\u6765\u89e3\u51b3 \u6b67\u4e49 Ambiguity \u7684\u95ee\u9898</p> <p>\u800c\u53ef\u4ee5\u4f7f\u7528\u4e0d\u540c\u7684\u6570\u636e\u7ed3\u6784\u53bb\u5b9e\u73b0\u8fd9\u4e2a\u65b9\u6cd5</p> <p>Resolving Ambiguity</p> <p>Suppose N items have the same numerical representation h:</p> <ul> <li>Instead of storing <code>true</code> in position h, store a \u201cbucket\u201d of these N items at position h.</li> </ul> <p>How to implement a \u201cbucket\u201d?</p> <ul> <li>Conceptually simplest way: LinkedList.</li> <li>Could also use ArrayLists.</li> <li>Could also use an ArraySet.</li> <li>Will see it doesn't really matter what you do.</li> </ul> <p>\u8fd8\u80fd\u518d\u8fdb\u4e00\u6b65\u5bf9\u54c8\u5e0c\u503c\u53d6\u6a21\uff0c\u800c\u51cf\u5c11\u4e0b\u6807\u7684\u603b\u6570</p> <ul> <li>Data is converted by hash function into an integer representation called a hash code.</li> <li>The hash code is then reduced to a valid index, usually using the modulus operators, e.g. 2348762878 % 10 = 8.</li> </ul> <p>\u4f46\u662f\u8fd9\u6837\u4f1a\u4f7f\u5f97\u6bcf\u4e2abucket\u7684\u957f\u5ea6\u4e3a\u0398(N) (\u5219\u54c8\u5e0c\u8868\u7684\u64cd\u4f5c\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e5f\u662f\u0398(N) )\uff0c\u6240\u4ee5\u901a\u8fc7\u52a8\u6001\u589e\u52a0bucket\u7684\u4e2a\u6570\u6765\u4f7f\u5f97\u65f6\u95f4\u590d\u6742\u5ea6\u53d8\u6210O(1)</p> <p>One example strategy: When N/M is \u2265 1.5, then double M.</p> <ul> <li>We often call this process of increasing M \u201cresizing\u201d.</li> <li>N/M is often called the \u201cload factor\u201d. It represents how full the hash table is.</li> </ul>"},{"location":"zh/Notes%20of%20Courses/CS61B/CS61B/#2_21","title":"2","text":"<p>Josh\u63d0\u5230\u4e86\u4e24\u4e2a\u9700\u8981\u6ce8\u610f\u7684\u8b66\u544a</p> <p>Two Important Warnings When Using HashMaps/HashSets</p> <p>Warning #1: Never store objects that can change in a <code>HashSet</code> or <code>HashMap</code>!</p> <ul> <li>If an object's variables changes, then its hashCode changes. May result in items getting lost.</li> </ul> <p>Warning #2: Never override <code>equals</code> without also overriding <code>hashCode</code>.</p> <ul> <li>Can also lead to items getting lost and genarally weird behavior.</li> <li>HashMaps and HashSets use equals to determine if an item exists in a particular bucket.</li> <li>See HW3 or the study guide problems.</li> </ul>"},{"location":"zh/Notes%20of%20Courses/CS61B/CS61B/#homework-2","title":"Homework 2Q1 Asymptotic Warmup32 PointsQ2 Asymptotic Potpourri32 PointsQ2 WQU32 PointsQ4 Switcheroo32 PointsQ5 Mechanical Hashing32 Points","text":"<p>\u6211\u7684\u7b54\u6848(\u597d\u50cf\u5b98\u65b9\u6ca1\u6709\u63d0\u4f9b\u53c2\u8003\u7b54\u6848)</p> \u6211\u7684\u7b54\u6848\u53ca\u601d\u8def <p>HW2: Conceptual Review</p> <p></p> <p>Give the tightest asymptotic bound on <code>foo(n)</code>.</p> <pre><code>public int foo(int n) {\n   if (n == 0) {\n      return 0;\n   }\n   bloop(n);\n   return foo(n/3) + foo(n/3) + foo(n/3);\n\npublic int bloop(int n) {\n   for (int i = 0; i &lt; n; i += 1) {\n      System.out.println(\"Ah, loops too\");\n   }\n   return n;\n}\n</code></pre> <ul> <li> \\(\\Omega(1)\\)</li> <li> \\(\\Omega(\\log(n))\\)</li> <li> \\(\\Omega(n)\\)</li> <li> \\(\\Omega(n \\cdot \\log(n))\\)</li> <li> \\(\\Omega(n^2)\\)</li> <li> \\(\\Omega(n^3)\\)</li> <li> \\(\\Omega(3^n)\\)</li> <li> \\(\\Omega(n!)\\)</li> <li> \\(\\Theta(1)\\)</li> <li> \\(\\Theta(\\log(n))\\)</li> <li> \\(\\Theta(n)\\)</li> <li> \\(\\Theta(n \\cdot \\log(n))\\)</li> <li> \\(\\Theta(n^2)\\)</li> <li> \\(\\Theta(n^3)\\)</li> <li> \\(\\Theta(3^n)\\)</li> <li> \\(\\Theta(n!)\\)</li> <li> \\(O(1)\\)</li> <li> \\(O(\\log(n))\\)</li> <li> \\(O(n)\\)</li> <li> \\(O(n \\cdot \\log(n))\\)</li> <li> \\(O(n^2)\\)</li> <li> \\(O(n^3)\\)</li> <li> \\(O(3^n)\\)</li> <li> \\(O(n!)\\)</li> </ul> \u601d\u8def <p><code>foo</code> \u7684\u6bcf\u4e00\u5c42\u9012\u5f52\uff0c<code>foo(n/3) + foo(n/3) + foo(n/3)</code> \u52a0\u8d77\u6765\u521a\u597d\u4f1a <code>println</code> n\u6b21\uff0c\u800c\u4e00\u5171\u4f1a\u6709 \\(\\log_3 n\\) \u5c42\u9012\u5f52\uff0c\u6240\u4ee5\u662f \\(\\Theta(n \\cdot \\log(n))\\)</p> <p></p> <p>Note: This is the hardest problem on this Homework. If you are stuck on it for a long time, move on to other problems, and post on Ed or come to Office Hours so we can help you.</p> <p>Give the runtime of the following functions in \\(\\Theta\\) notation. Your answer should be a function of N that is as simple as possible with no unnecessary leading constants or lower order terms.</p> <p>Q2.1 Mystery 18 Points</p> <pre><code>public void mystery1(int n) {\n   for (int i = n; i &gt; 0; i = i / 2) {\n      for (int j = 0; j &lt; 100000000; j += 2) {\n         System.out.println(\"Hello World\");\n      }\n   }\n}\n</code></pre> <ul> <li> \\(1\\)</li> <li> \\(\\log(n)\\)</li> <li> \\(n\\)</li> <li> \\(n \\cdot \\log(n)\\)</li> <li> \\((\\log(n))^2\\)</li> <li> \\(n^2\\)</li> <li> \\(n^2\\cdot\\log(n)\\)</li> <li> \\(2^n\\)</li> <li> \\(n!\\)</li> <li> Other</li> </ul> <p>Q2.2 Mystery 28 Points</p> <pre><code>public void mystery2(int n) {\n   for (int i = 1; i &lt; n; i += 1) {\n      for (int j = 0; j &lt; n; j += 1) {\n         i = i * 2;\n         j = j * 2;\n      }\n   }\n}\n</code></pre> <ul> <li> \\(1\\)</li> <li> \\(\\log(n)\\)</li> <li> \\(n\\)</li> <li> \\(n \\cdot \\log(n)\\)</li> <li> \\((\\log(n))^2\\)</li> <li> \\(n^2\\)</li> <li> \\(n^2\\cdot\\log(n)\\)</li> <li> \\(2^n\\)</li> <li> \\(n!\\)</li> <li> Other</li> </ul> \u601d\u8def <p>\u5f53\u5185\u90e8 <code>j</code> \u7684\u5faa\u73af\u7ed3\u675f\u7684\u65f6\u5019( <code>j &gt;= n</code> \u65f6)\uff0c\u57fa\u672c\u4e0a\u4e5f\u6709 <code>i &gt;= n</code> \u4e86\uff0c\u5916\u90e8 <code>i</code> \u7684\u5faa\u73af\u5927\u6982\u53ea\u80fd\u5faa\u73af1\u52302\u6b21\uff0c\u56e0\u6b64\u662f \\(\\Theta(\\log(n))\\)</p> <p>Q2.3 Mystery 38 Points</p> <pre><code>public void mystery3(int n) {\n    for (int i = n; i &gt; 0; i = i / 2) {\n        for (int j = 1; j &lt; i * i; j *= 2) {\n            System.out.println(\"Hello World\");\n        }\n    }\n}\n</code></pre> <p>What sum represents the work done by <code>mystery3(n)</code>?</p> <ul> <li> \\(1 + 2 + 3 + \\cdots + n\\)</li> <li> \\(1 + 2 + 3 + \\cdots + \\log(n)\\)</li> <li> \\(2^0 + 2^1 + 2^2 + \\cdots + 2^{\\log(n)}\\)</li> <li> \\(2^0 + 2^1 + 2^2 + \\cdots + 2^n\\)</li> <li> \\(2^0 + 2^1 + 2^2 + \\cdots + n^2\\)</li> <li> \\(\\log(n^2) + \\log\\left(\\frac{n^2}{2}\\right) + \\log\\left(\\frac{n^2}{2^2}\\right) + \\log\\left(\\frac{n^2}{2^3}\\right) + \\cdots + 1\\)</li> <li> \\(\\log(n) + \\log\\left(\\frac{n}{2}\\right) + \\log\\left(\\frac{n}{3}\\right) + \\cdots + 1\\)</li> <li> Other</li> </ul> <p>Q2.4 Mystery 48 Points</p> <p>Here, assume that the <code>SLList</code> constructor, and the <code>size</code> and <code>addFirst</code> methods take constant time.</p> <pre><code>public void mystery4(int n) {\n    SLList&lt;Integer&gt; list = new SLList&lt;&gt;();\n    for (int i = 1; list.size() &lt; n; i += 1) {\n        for (int j = 0; j &lt; i; j += 1) {\n            list.addFirst(j);\n        }\n        System.out.print(list.size() + \" + \");\n    }\n}\n</code></pre> <ul> <li> \\(1\\)</li> <li> \\(\\log(n)\\)</li> <li> \\(n\\)</li> <li> \\(n \\cdot \\log(n)\\)</li> <li> \\((\\log(n))^2\\)</li> <li> \\(n^2\\)</li> <li> \\(n^2\\cdot\\log(n)\\)</li> <li> \\(2^n\\)</li> <li> \\(n!\\)</li> <li> Other</li> </ul> <p>Q3.1 Mechanical8 Points</p> <p>Here, fill in the value in each index of the resulting underlying array of the Weighted Quick Union object.</p> <p>Value in index 0:</p> <pre><code>5\n</code></pre> <p>Value in index 1:</p> <pre><code>0\n</code></pre> <p>Value in index 2:</p> <pre><code>5\n</code></pre> <p>Value in index 3:</p> <pre><code>2\n</code></pre> <p>Value in index 4:</p> <pre><code>2\n</code></pre> <p>Value in index 5:</p> <pre><code>-5\n</code></pre> <p>Value in index 6:</p> <pre><code>-1\n</code></pre> <p>Value in index 7:</p> <pre><code>5\n</code></pre> <p>Value in index 8:</p> <pre><code>-1\n</code></pre> <p>Value in index 9:</p> <pre><code>5\n</code></pre> <p>Value in index 10:</p> <pre><code>-1\n</code></pre> \u601d\u8def <p>\u8fd9\u9898\u4e2d\u5173\u952e\u7684\u7ed3\u675f\u5faa\u73af\u7684\u5224\u65ad\u6761\u4ef6\u662f <code>list.size() &lt; n</code> \uff0c\u6240\u4ee5\u5728\u7ed3\u675f\u524d\uff0c\u94fe\u8868\u53ea\u4f1a\u88ab\u6dfb\u52a0n\u4e2a\u5de6\u53f3\u7684\u5143\u7d20\uff0c\u6240\u4ee5\u662f \\(\\Theta(n)\\)</p> <p></p> <p>Draw the Weighted Quick Union object on 0 through 10, that results from the following <code>connect</code> calls. Do not use path compression. Note that if we connect two sets of  equal weight, by convention we make the set whose root has a smaller number the child of the other. We use the convention that if an element is the root of the set, its array value is the weight of the set negated.</p> <pre><code>connect(0, 1);\nconnect(2, 3);\nconnect(9, 5);\nconnect(5, 7);\nconnect(7, 1);\nconnect(4, 2);\nconnect(3, 1);\n</code></pre> \u601d\u8def <p>\u7528\u8868\u683c\u8bb0\u5f55\u6570\u7ec4\u7684\u53d8\u5316\u5982\u4e0b</p> \u6570\u7ec4\u4e0b\u6807 0 1 2 3 4 5 6 7 8 9 10 \u521d\u59cb -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 connect(0, 1) -2 0 connect(2, 3) -2 2 connect(9, 5) -2 5 connect(5, 7) -3 5 connect(7, 1) 5 -4 connect(4, 2) -3 2 connect(3, 1) 5 -5 \u7ed3\u675f 5 0 5 2 2 -5 -1 5 -1 5 -1 <p>Q3.2 Best and Worst Heights8 Points</p> <p>Assume that a single node has a height of 0. What are the shortest and tallest heights for a Quick Union object with 16 connected elements? What about for a Weighted Quick Union object?</p> <p>Quick Union: Shortest</p> <pre><code>1\n</code></pre> <p>Quick Union: Tallest</p> <pre><code>15\n</code></pre> <p>Weighted Quick Union: Shortest</p> <pre><code>1\n</code></pre> <p>Weighted Quick Union: Tallest</p> <pre><code>4\n</code></pre> \u601d\u8def <p>\u4e24\u8005\u6700\u597d\u7684\u60c5\u51b5\u90fd\u662f\u6240\u6709\u8282\u70b9\u90fd\u8fde\u5728\u540c\u4e00\u4e2a\u6839\u8282\u70b9\u4e0a(\u6240\u4ee5\u9ad8\u5ea6\u90fd\u662f1)\uff0cQuick Union\u6700\u574f\u7684\u60c5\u51b5\u662f\u53d8\u6210\u7c7b\u4f3c\u94fe\u8868\uff0c\u6240\u4ee5\u9ad8\u5ea6\u662fn-1=15\uff0cWeighted Quick Union\u6309\u7167Josh ppt\u4e0a\u7684\u56fe\uff0c\u6700\u574f\u7684\u60c5\u51b5\u7684\u9ad8\u5ea6\u662flog\u2082n=4\u3002</p> <p>\u4e0b\u9762\u4e24\u9898\u7684\u6700\u597d\u6700\u574f\u60c5\u51b5\u4e5f\u5dee\u4e0d\u591a\u5c31\u662f\u8fd9\u6837\u7684\u60c5\u51b5\uff0c\u56e0\u6b64\u7b54\u6848\u7c7b\u4f3c\u3002</p> <p>Q3.3 Connect Runtime8 Points</p> <p>What are the best and worst runtimes for <code>connect</code> in a Quick Union object with \\(n\\) elements? What about in a Weighted Quick Union object?</p> <p>Quick Union: Best Case</p> <ul> <li> \\(1\\)</li> <li> \\(\\log(n)\\)</li> <li> \\(n\\)</li> <li> \\(n \\cdot \\log(n)\\)</li> <li> \\(n^2\\)</li> <li> \\(2^n\\)</li> <li> Other</li> </ul> <p>Quick Union: Worst Case</p> <ul> <li> \\(1\\)</li> <li> \\(\\log(n)\\)</li> <li> \\(n\\)</li> <li> \\(n \\cdot \\log(n)\\)</li> <li> \\(n^2\\)</li> <li> \\(2^n\\)</li> <li> Other</li> </ul> <p>Weighted Quick Union: Best Case</p> <ul> <li> \\(1\\)</li> <li> \\(\\log(n)\\)</li> <li> \\(n\\)</li> <li> \\(n \\cdot \\log(n)\\)</li> <li> \\(n^2\\)</li> <li> \\(2^n\\)</li> <li> Other</li> </ul> <p>Weighted Quick Union: Worst Case</p> <ul> <li> \\(1\\)</li> <li> \\(\\log(n)\\)</li> <li> \\(n\\)</li> <li> \\(n \\cdot \\log(n)\\)</li> <li> \\(n^2\\)</li> <li> \\(2^n\\)</li> <li> Other</li> </ul> <p>Q3.4 isConnected Runtime8 Points</p> <p>What are the best and worst runtimes for <code>isConnected</code> in a Quick Union object with \\(n\\) elements? What about in a Weighted Quick Union object?</p> <p>Quick Union: Best Case</p> <ul> <li> \\(1\\)</li> <li> \\(\\log(n)\\)</li> <li> \\(n\\)</li> <li> \\(n \\cdot \\log(n)\\)</li> <li> \\(n^2\\)</li> <li> \\(2^n\\)</li> <li> Other</li> </ul> <p>Quick Union: Worst Case</p> <ul> <li> \\(1\\)</li> <li> \\(\\log(n)\\)</li> <li> \\(n\\)</li> <li> \\(n \\cdot \\log(n)\\)</li> <li> \\(n^2\\)</li> <li> \\(2^n\\)</li> <li> Other</li> </ul> <p>Weighted Quick Union: Best Case</p> <ul> <li> \\(1\\)</li> <li> \\(\\log(n)\\)</li> <li> \\(n\\)</li> <li> \\(n \\cdot \\log(n)\\)</li> <li> \\(n^2\\)</li> <li> \\(2^n\\)</li> <li> Other</li> </ul> <p>Weighted Quick Union: Worst Case</p> <ul> <li> \\(1\\)</li> <li> \\(\\log(n)\\)</li> <li> \\(n\\)</li> <li> \\(n \\cdot \\log(n)\\)</li> <li> \\(n^2\\)</li> <li> \\(2^n\\)</li> <li> Other</li> </ul> <p></p> <p>Consider the following 2-3 tree:</p> <p></p> <p>Q4.1 Balance the Tree20 Points</p> <p>Convert this 2-3 tree to an LLRB, and describe the 6 LLRB operations to balance the tree after inserting the number 11. The LLRB operations are: <code>rotateRight(x)</code>, <code>rotateLeft(x)</code>, and <code>colorFlip(x)</code></p> <pre><code>rotateLeft(10)\n</code></pre> <pre><code>rotateRight(15)\n</code></pre> <pre><code>colorFlip(11)\n</code></pre> <pre><code>rotateLeft(9)\n</code></pre> <pre><code>rotateRight(17)\n</code></pre> <pre><code>colorFlip(11)\n</code></pre> \u601d\u8def <p>\u539f\u59cb\u7ea2\u9ed1\u6811</p> <p></p> <p>\u63d2\u516511</p> <p></p> <p><code>rotateLeft(10)</code></p> <p></p> <p><code>rotateRight(15)</code></p> <p></p> <p><code>colorFlip(11)</code></p> <p></p> <p><code>rotateLeft(9)</code></p> <p></p> <p><code>rotateRight(17)</code></p> <p></p> <p><code>colorFlip(11)</code></p> <p></p> <p>Q4.2 LLRB Height6 Points</p> <p>After inserting 11 and balancing the LLRB, how many nodes are on along the longest path from the root to a leaf.</p> <pre><code>4\n</code></pre> <p>Q4.3 Red Links6 Points</p> <p>After inserting 11 and balancing the LLRB, how many red links are on along the longest path from the root to a leaf.</p> <pre><code>2\n</code></pre> <p></p> <p>Suppose we insert the following words into an initially empty hash table, in this order: kerfuffle, broom, hroom, ragamuffin, donkey, brekky, blob, zenzizenzizenzic, and yap. Assume that the hash code of a String is just its length (note that this is not actually the hash code for Strings in Java). Use separate chaining to resolve collisions. Assume 4 is the initial size of the hash table array, and double this array\u2019s size when the load factor is equal to 1. Illustrate this hash table with a box-and-pointer diagram.</p> <p>For each index of the final hash table, specify what Strings are stored in it. If it is empty, write <code>None</code>. In your final answer, do not wrap Strings in quotes. </p> <p>If an index has more than 1 String in it, separate them using a comma and a single space. For example, if index 0 stores the Strings <code>one</code> and <code>two</code>, your answer should be <code>one, two</code>.</p> <p>Elements in index 0:</p> <pre><code>zenzizenzizenzic\n</code></pre> <p>Elements in index 1:</p> <pre><code>None\n</code></pre> <p>Elements in index 2:</p> <pre><code>None\n</code></pre> <p>Elements in index 3:</p> <pre><code>yap\n</code></pre> <p>Elements in index 4:</p> <pre><code>blob\n</code></pre> <p>Elements in index 5:</p> <pre><code>broom, hroom\n</code></pre> <p>Elements in index 6:</p> <pre><code>donkey, brekky\n</code></pre> <p>Elements in index 7:</p> <pre><code>None\n</code></pre> <p>Elements in index 8:</p> <pre><code>None\n</code></pre> <p>Elements in index 9:</p> <pre><code>kerfuffle\n</code></pre> <p>Elements in index 10:</p> <pre><code>ragamuffin\n</code></pre> <p>Elements in index 11:</p> <pre><code>None\n</code></pre> <p>Elements in index 12:</p> <pre><code>None\n</code></pre> <p>Elements in index 13:</p> <pre><code>None\n</code></pre> <p>Elements in index 14:</p> <pre><code>None\n</code></pre> <p>Elements in index 15:</p> <pre><code>None\n</code></pre>"},{"location":"zh/Notes%20of%20Courses/CS61B/CS61B/#project-2","title":"Project 2","text":""},{"location":"zh/Notes%20of%20Courses/CS61B/CS61B/#1_35","title":"1","text":"<p>\u5728\u8c03\u7528 <code>gitlet.Utils</code> \u4e2d\u7684 <code>plainFilenamesIn</code> \u65b9\u6cd5\uff0c\u4f7f\u7528\u8fd4\u56de\u7684 <code>List</code> \u7684\u8fc7\u7a0b\u4e2d\uff0c\u53d1\u73b0\u5728\u8c03\u7528 <code>remove</code> \u65b9\u6cd5\u65f6\uff0c\u51fa\u73b0\u4e86 <code>UnsupportedOperationException</code> \u7684\u62a5\u9519\uff0c</p> <p>\u6700\u540e\u5728\u7f51\u4e0a\u641c\u7d22\uff0c\u53d1\u73b0\u662f\u8fd9\u6837\u7684\u539f\u56e0</p> <p>java - Why do I get an UnsupportedOperationException when trying to remove an element from a List? - Stack Overflow</p> <p>(\u6839\u636e\u8fd9\u4e2a\u56de\u7b54)\u5bf9\u6b64\u53ef\u4ee5\u8fd9\u6837\u8fdb\u884c\u4fee\u6539</p> <pre><code>List&lt;String&gt; list = new LinkedList&lt;String&gt;(Arrays.asList(split));\n</code></pre>"},{"location":"zh/Notes%20of%20Courses/CS61B/CS61B/#lecture-21-tree-and-graph-traversals","title":"Lecture 21 Tree and Graph Traversals","text":""},{"location":"zh/Notes%20of%20Courses/CS61B/CS61B/#1_36","title":"1","text":"<p>Josh\u5728\u4ecb\u7ecd\u4e8c\u53c9\u6811\u7684\u4e09\u79cd\u904d\u5386\u65b9\u5f0f\u65f6\uff0c\u63d0\u5230\u4e86\u4e00\u4e2a\u6bd4\u8f83\u65b9\u4fbf\u7684\u5c0f\u6280\u5de7</p> <p></p> <p>A Useful Visual Trick (for Humans, Not Algorithms)</p> <ul> <li>Preorder traversal: We trace a path around the graph, from the top going counter-clockwise. \u201cVisit\u201d every time we pass the LEFT of a node.</li> <li>Inorder traversal: \u201cVisit\u201d when you cross the bottom of a node.</li> <li>Postorder traversal: \u201cVisit\u201d when you cross the right a node.</li> </ul>"},{"location":"zh/git%E7%9B%B8%E5%85%B3/fastgithub/","title":"FastGithub","text":"<p> \u7ea6 11 \u4e2a\u5b57 </p>"},{"location":"zh/git%E7%9B%B8%E5%85%B3/fastgithub/#1","title":"1","text":"<p>FastGithub\u4e0b\u8f7d\u53ca\u4f7f\u7528 - \u77e5\u4e4e (zhihu.com)</p>"},{"location":"zh/git%E7%9B%B8%E5%85%B3/github%20copilot/","title":"Github Copilot","text":"<p> \u7ea6 244 \u4e2a\u5b57  7 \u884c\u4ee3\u7801  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 1 \u5206\u949f</p>"},{"location":"zh/git%E7%9B%B8%E5%85%B3/github%20copilot/#1","title":"1","text":"<p>Copilot\u6fc0\u6d3b\u65b9\u5f0f</p> <ol> <li> <p>\u6210\u529f\u8ba4\u8bc1\u5b66\u751f\u5305\u540e\uff0c\u6253\u5f00GitHub\uff0c\u8fdb\u5165\u4e2a\u4eba\u8bbe\u7f6e-&gt;Billing and plans-&gt;Plans and usage-&gt;Enable GitHub Copilot\u3002</p> </li> <li> <p>\u8df3\u8f6c\u540e\u70b9\u51fbGet access to GitHub Copilot\u5c31\u597d\u5566\u3002</p> </li> <li> <p>\u8df3\u8f6c\u540e\u7684\u9875\u9762\u9009\u62e9Allow\u3002 </p> </li> </ol>"},{"location":"zh/git%E7%9B%B8%E5%85%B3/github%20copilot/#2","title":"2","text":"<p>pycharm\u3001clion\u7b49ide\u5b89\u88c5github copilot\u63d2\u4ef6\u540e\uff0c\u65e0\u6cd5\u767b\u9646\uff0c\u53ef\u4ee5\u5728\u8bbe\u7f6e\u4e2d\u8bbe\u7f6eide\u7684\u7f51\u7edc\u4ee3\u7406</p> <p></p> <p>clash:</p> <ul> <li>\u4e3b\u673a\uff1a127.0.0.1</li> <li>\u7aef\u53e3\uff1a7890</li> </ul>"},{"location":"zh/git%E7%9B%B8%E5%85%B3/github%20copilot/#3","title":"3","text":"<p>\u4f7f\u7528\u7ecf\u9a8c\uff1a</p> <ol> <li>\u5148\u7528\u82f1\u6587\u5199\u4e00\u6bb5\u6ce8\u91ca\uff08\u4e0d\u4f1a\u53ef\u4ee5\u4e2d\u6587\u5199\u51fa\u518d\u7528\u767e\u5ea6\u7ffb\u8bd1\uff09</li> <li>\u518d\u56de\u8f66\u7b49\u5f85copilot\u7f16\u5199\u4ee3\u7801</li> <li>\u6700\u540e\u6839\u636e\u5177\u4f53\u9700\u6c42\u9002\u5f53\u4fee\u6539</li> </ol> <p>\u793a\u4f8b\uff1a</p> <p>\u60f3\u5728python\u6587\u4ef6\u4e2d\u7f16\u5199\u4e00\u4e2a\u51fd\u6570\u5c06\u5185\u5bb9\u5199\u5165\u540c\u76ee\u5f55\u4e0b\u7684 <code>latex.md</code> \u6587\u4ef6</p> <pre><code># Define a function to overwrite the content in the latex.md file and open it with VSCode\n</code></pre> <p>\u82e5\u5e72\u6b21\u56de\u8f66\u540e</p> <pre><code># Define a function to overwrite the content in the latex.md file and open it with VSCode\ndef write_latex_md(content):\n    with open(\"latex.md\", \"w\") as f:\n        f.write(content)\n    os.system(\"code latex.md\")\n</code></pre>"},{"location":"zh/git%E7%9B%B8%E5%85%B3/github%20copilot/#4","title":"4","text":"<p>\u5728VSCode\u4e2d\u4f7f\u7528github copilot\u804a\u5929\u529f\u80fd\u65f6\uff0c\u663e\u793a</p> <pre><code>Cannot read properties of undefined (reading 'split')\n</code></pre> <p>\u641c\u7d22\u76f8\u5173\u4fe1\u606f\uff0c\u627e\u5230</p> <p>\"Cannot read properties of undefined (reading 'split')\" after first message \u00b7 community \u00b7 Discussion #102408 (github.com)</p> <p>\u6839\u636enaveen-98\u7684\u56de\u7b54\u4e2d\u7684 <code>Disable and re-enable GitHub Copilot</code> \uff0c\u7981\u7528\u518d\u91cd\u65b0\u542f\u7528github copilot\u63d2\u4ef6\u4e4b\u540e\uff0c\u53ef\u4ee5\u6b63\u5e38\u4f7f\u7528\u4e86</p>"},{"location":"zh/git%E7%9B%B8%E5%85%B3/github%26gitee/","title":"Github &amp; Gitee","text":"<p> \u7ea6 1485 \u4e2a\u5b57  67 \u884c\u4ee3\u7801  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 6 \u5206\u949f</p>"},{"location":"zh/git%E7%9B%B8%E5%85%B3/github%26gitee/#1","title":"1","text":"<ul> <li> <p>gitee SSH\u516c\u94a5\u8bbe\u7f6e</p> <p>SSH \u516c\u94a5\u8bbe\u7f6e | Gitee \u4ea7\u54c1\u6587\u6863</p> </li> <li> <p>github SSH key \u8bbe\u7f6e</p> <p>\u8d26\u6237\u6dfb\u52a0SSH: Adding a new SSH key to your GitHub account - GitHub Docs</p> <p>\u751f\u6210SSH: Generating a new SSH key and adding it to the ssh-agent - GitHub Docs</p> </li> </ul>"},{"location":"zh/git%E7%9B%B8%E5%85%B3/github%26gitee/#2","title":"2","text":"<p>\u4e0a\u4f20\u6587\u4ef6\u81f3\u4ed3\u5e93\uff1a</p> <pre><code>git add --all\ngit commit -m \"...\" # \u4f1a\u5728\u4ed3\u5e93\u5bf9\u5e94\u6587\u4ef6\u7684\u5904\u663e\u793a\uff0c\u5e94\u8be5\u662f\u7528\u4e8e\u6807\u8bb0\u54ea\u4e00\u6b21\u4e0a\u4f20\ngit push -u origin [ master | main ]\n</code></pre>"},{"location":"zh/git%E7%9B%B8%E5%85%B3/github%26gitee/#3","title":"3","text":"<p>gitee pages \u66f4\u65b0\u9700\u8981\u624b\u52a8\u70b9\u51fb\u66f4\u65b0\uff0c</p> <p>github pages \u53ef\u4ee5\u81ea\u52a8\u66f4\u65b0</p>"},{"location":"zh/git%E7%9B%B8%E5%85%B3/github%26gitee/#4","title":"4","text":"<p>Generating a new SSH key and adding it to the ssh-agent - GitHub Docs</p> <p></p> <pre><code>ssh-keygen -t ed25519 -C \"xxx@example.com\"\n</code></pre> <p>\u7b2c\u4e8c\u884c\u586b\u5199\u6587\u4ef6\u8981\u4fdd\u5b58\u7684\u4f4d\u7f6e\uff08\u76f4\u63a5\u590d\u5236\u7ed9\u7684\u5c31\u597d\u4e86\uff09\uff0c\u7136\u540e<code>passphrase</code>\u53ef\u4ee5\u4e0d\u8bbe\u7f6e\uff0c\u4e4b\u540e\u628a<code>~/.ssh/id_ed25519.pub</code>\u4e2d\u7684\u5168\u90e8\u590d\u5236\u7c98\u8d34\u5230github\u8bbe\u7f6essh\u4e2d\u5c31\u884c\u4e86</p>"},{"location":"zh/git%E7%9B%B8%E5%85%B3/github%26gitee/#5","title":"5","text":"<p>\u66f4\u65b0\u672c\u5730\u7684\u4ed3\u5e93\uff1a</p> <pre><code>git pull\n</code></pre>"},{"location":"zh/git%E7%9B%B8%E5%85%B3/github%26gitee/#6","title":"6","text":"<p>github \u4ed3\u5e93\u8bbe\u7f6e \u8ba8\u8bba GitHub Discussions</p> <p>GitHub Discussions \u6587\u6863 - GitHub \u6587\u6863</p> <p>\u5728 Settings - General - Features - Discussions \u524d\u9762\u52fe\u9009\u4e0a</p> <p>\u5c31\u53ef\u4ee5\u6253\u5f00\u8ba8\u8bba\u529f\u80fd\u4e86</p>"},{"location":"zh/git%E7%9B%B8%E5%85%B3/github%26gitee/#7","title":"7","text":"<p>git \u4ee3\u7406\u76f8\u5173\u95ee\u9898</p> <p>\u7531\u4e8e\u4e4b\u524d\u60f3\u5728 git bash \u7ec8\u7aef\u4e2d\u4f7f\u7528 clash \u7684\u4ee3\u7406\u6240\u4ee5\u5728 <code>E:\\Program Files\\Git\\etc\\bash.bashrc</code> \u6700\u4e0a\u65b9\u6309\u7f51\u4e0a\u8bf4\u7684\u6dfb\u52a0\u4e86</p> <pre><code># Clash\nexport http_proxy=https://127.0.0.1:7890;export https_proxy=https://127.0.0.1:7890\n</code></pre> <p>\u7136\u540e\u53d1\u73b0 <code>git clone</code> \u5728\u4e0d\u6253\u5f00 clash \u7684\u60c5\u51b5\u4e0b\u4f1a\u6709\u62a5\u9519</p> <pre><code>Collecting git+https://github.com/huggingface/peft.git (from -r requirements.txt (line 8))\n  Cloning https://github.com/huggingface/peft.git to c:\\users\\administrator\\appdata\\local\\temp\\pip-req-build-t4u9g6h5\n  Running command git clone --filter=blob:none --quiet https://github.com/huggingface/peft.git 'C:\\Users\\Administrator\\AppData\\Local\\Temp\\pip-req-build-t4u9g6h5'\n  fatal: unable to access 'https://github.com/huggingface/peft.git/': Failed to connect to 127.0.0.1 port 7890 after 2032 ms: Couldn't connect to server\n</code></pre> <p>\u6240\u4ee5\u5728\u7f51\u4e0a\u67e5\u8be2\u76f8\u5173\u4fe1\u606f\uff0c\u53d1\u73b0\u8fd9\u7bc7\u6587\u7ae0</p> <p>\u89e3\u51b3git\u4e0b\u8f7d\u51fa\u73b0\uff1aFailed to connect to 127.0.0.1 port 1080: Connection refused\u62d2\u7edd\u8fde\u63a5\u9519\u8bef-CSDN\u535a\u5ba2</p> <p>\u53ef\u4ee5\u901a\u8fc7(windows\u4e5f\u53ef\u4ee5)</p> <pre><code>git config --global http.proxy\ngit config --global https.proxy\n</code></pre> <p>\u67e5\u8be2 git http \u548c htttps \u6709\u6ca1\u6709\u4f7f\u7528\u4ee3\u7406</p> <p>\u6587\u7ae0\u8fd8\u8bf4\u5230 linux \u8fd8\u53ef\u4ee5\u4f7f\u7528</p> <pre><code>env|grep -I proxy\n</code></pre> <p>\u6765\u67e5\u8be2\u7cfb\u7edf\u73af\u5883\u6709\u6ca1\u6709\u4ee3\u7406\uff0c\u4e0d\u8fc7windows\u4e0b\u8fd9\u4e2a\u547d\u4ee4\u8fd0\u884c\u4e0d\u4e86</p> <p>\u53d6\u6d88\u4ee3\u7406\u7684\u65b9\u6cd5</p> <p>\u6211\u5728 windows git bash \u4e0a\u4f7f\u7528</p> <pre><code>git config --global --unset http.proxy\ngit config --global --unset https.proxy\n</code></pre> <p>\u6210\u529f\u53d6\u6d88\u4e86\u4ee3\u7406</p> <p>\u800c\u6587\u7ae0\u4e2d\u7684\u53e6\u4e00\u79cd\u65b9\u6cd5</p> <pre><code>unset http_proxy\nunset ftp_proxy\nunset all_proxy\nunset https_proxy\nunset no_proxy\n</code></pre> <p>\u6211\u8bd5\u4e86\u5728 windows git bash \u4e0a\u4e0d\u884c\uff0c\u53ef\u80fd\u5728linux\u4e0a\u53ef\u4ee5</p> <p>\u6700\u540e\u6211\u53d6\u6d88\u4e86\u4ee3\u7406\u4e4b\u540e <code>git clone</code> \u5c31\u4e0d\u4f1a\u6709\u4e4b\u524d\u7684 <code>Failed to connect to 127.0.0.1 port 7890</code> </p> <p>\u4f46\u662f\u6ca1\u6253\u5f00 clash \u65f6\uff0c\u53d8\u6210\u4e86</p> <pre><code>fatal: unable to access 'https://github.com/huggingface/peft.git/': Failed to connect to github.com port 443 after 21065 ms: Couldn't connect to server\n</code></pre>"},{"location":"zh/git%E7%9B%B8%E5%85%B3/github%26gitee/#8","title":"8","text":"<p>git \u8bbe\u7f6e\u4ee3\u7406</p> <p>(\u56e0\u4e3a\u6709\u65f6\u53ef\u80fd\u4f1a git clone \u4e0d\u4e86)</p> <p>\u3010git\u9519\u8bef\u3011Error: Failed to connect to github.com port 443 after 21074 ms: Timed out_Sheyami\u7684\u535a\u5ba2-CSDN\u535a\u5ba2</p> <pre><code>git config --global http.proxy http://127.0.0.1:7890\ngit config --global https.proxy http://127.0.0.1:7890\n</code></pre>"},{"location":"zh/git%E7%9B%B8%E5%85%B3/github%26gitee/#9","title":"9","text":"<p>\u590d\u73b0\u4ee3\u7801</p> <p>git bash \u4e2d\u5728\u8fd0\u884c\u547d\u4ee4\u662f\uff0c\u53ef\u4ee5\u73af\u5883\u53d8\u91cf(\u6216\u8005\u53eb\u5168\u5c40\u53d8\u91cf\uff1f)\uff0c\u5982</p> <pre><code>HF_DATASETS_OFFLINE=1 TRANSFORMERS_OFFLINE=1 \\\npython examples/pytorch/translation/run_translation.py --model_name_or_path t5-small --dataset_name wmt16 --dataset_config ro-en ...\n</code></pre> <p>\u6216</p> <pre><code># Make sure you have git-lfs installed (https://git-lfs.com)\ngit lfs install\ngit clone https://huggingface.co/decapoda-research/llama-7b-hf\n\n# if you want to clone without large files \u2013 just their pointers\n# prepend your git clone with the following env var:\nGIT_LFS_SKIP_SMUDGE=1\n</code></pre>"},{"location":"zh/git%E7%9B%B8%E5%85%B3/github%26gitee/#10","title":"10","text":"<p>\u53ef\u4ee5\u4f7f\u7528 <code>--amend</code> \u6765\u4fee\u6539\u4e0a\u4e00\u6b21 <code>commit</code> \u63d0\u4ea4</p> <pre><code>usage: git commit [-a | --interactive | --patch] [-s] [-v] [-u&lt;mode&gt;] [--amend]\n                  [--dry-run] [(-c | -C | --squash) &lt;commit&gt; | --fixup [(amend|reword):]&lt;commit&gt;)]\n                  [-F &lt;file&gt; | -m &lt;msg&gt;] [--reset-author] [--allow-empty]\n                  [--allow-empty-message] [--no-verify] [-e] [--author=&lt;author&gt;]\n                  [--date=&lt;date&gt;] [--cleanup=&lt;mode&gt;] [--[no-]status]\n                  [-i | -o] [--pathspec-from-file=&lt;file&gt; [--pathspec-file-nul]]\n                  [(--trailer &lt;token&gt;[(=|:)&lt;value&gt;])...] [-S[&lt;keyid&gt;]]\n                  [--] [&lt;pathspec&gt;...]\n    ...\n    --amend               amend previous commit\n</code></pre> <pre><code>git commit --amend -m \"...\"\n</code></pre>"},{"location":"zh/git%E7%9B%B8%E5%85%B3/github%26gitee/#11","title":"11","text":"<p>\u5b66\u4e60 git \u7684\u89c6\u9891</p> <p>Git + GitHub 10\u5206\u949f\u5b8c\u5168\u5165\u95e8_\u54d4\u54e9\u54d4\u54e9_bilibili</p> <p>Git + GitHub 10\u5206\u949f\u5b8c\u5168\u5165\u95e8 (\u8fdb\u9636)_\u54d4\u54e9\u54d4\u54e9_bilibili</p> <p>GitHub \u5230\u5e95\u600e\u4e48\u7528\uff1f\u5341\u5206\u949f\u5b66\u4f1a GitHub \u57fa\u7840\u77e5\u8bc6_\u54d4\u54e9\u54d4\u54e9_bilibili</p>"},{"location":"zh/git%E7%9B%B8%E5%85%B3/github%26gitee/#12","title":"12","text":"<p>github \u63d0\u4ea4 PR Pull requests \u7684\u65b9\u6cd5\uff0c</p> <p>\u9700\u8981\u5148\u5c06\u522b\u4eba\u7684\u4ed3\u5e93 fork \u5230\u81ea\u5df1\u7684\u4ed3\u5e93\u4e2d\uff0c\u7136\u540e\u8fdb\u884c\u4fee\u6539\uff0c</p> <p>\u4e4b\u540e\u5c31\u53ef\u4ee5\u5728\u81ea\u5df1 fork \u7684\u4ed3\u5e93\u6216\u8005\u539f\u672c\u7684\u4ed3\u5e93\u4e2d\u63d0\u4ea4 PR Pull requests</p>"},{"location":"zh/git%E7%9B%B8%E5%85%B3/github%26gitee/#13","title":"13","text":"<p>\u67e5\u770b\u4ed3\u5e93\u5173\u8054\u7684\u8fdc\u7a0b\u5e93\u7684\u547d\u4ee4</p> <pre><code>git remote -v\n</code></pre> <p>\u5c06\u672c\u5730\u4ed3\u5e93\u5173\u8054\u591a\u4e2a\u8fdc\u7a0b\u5e93</p> <p>\u65b9\u6cd5\u4e00 (\u4e0d\u80fd\u540c\u65f6\u63a8\u9001)</p> <p>Gitee\u5bfc\u5165Github\u4ed3\u5e93\u5e76\u540c\u6b65\u66f4\u65b0_gitee\u5f3a\u5236\u540c\u6b65-CSDN\u535a\u5ba2</p> <p>\u5173\u8054\u7684\u8fdc\u7a0b\u5e93\u540d\u9ed8\u8ba4\u4e3a <code>origin</code> \uff0c</p> <p>\u6dfb\u52a0\u65b0\u7684\u8fdc\u7a0b\u5e93</p> <pre><code>git remote add github git@github.com:RonaldLN/Exam-for-Software-of-DRB-of-2023.git\n</code></pre> <p><code>github</code> \u5904\u53ef\u4ee5\u6539\u6210\u5176\u4ed6(\u81ea\u5b9a\u4e49\u7684)\u8fdc\u7a0b\u5e93\u540d\uff0c\u6700\u540e\u662f\u8fdc\u7a0b\u5e93\u7684\u5730\u5740\uff0c</p> <p>\u6dfb\u52a0\u540e\uff0c\u8fdb\u884c <code>git remote -v</code> \u67e5\u770b\u4f1a\u53d1\u73b0</p> <pre><code>github  git@github.com:RonaldLN/Exam-for-Software-of-DRB-of-2023.git (fetch)\ngithub  git@github.com:RonaldLN/Exam-for-Software-of-DRB-of-2023.git (push)\norigin  git@gitee.com:ronald-luo/test.git (fetch)\norigin  git@gitee.com:ronald-luo/test.git (push)\n</code></pre> <p>\u56e0\u6b64\u5728 <code>git push</code> \u65f6\u9700\u8981\u9009\u62e9\u8981\u63a8\u9001\u7684\u8fdc\u7a0b\u5e93\u7684\u5e93\u540d\u8fdb\u884c\u63a8\u9001</p> <pre><code>git push -u xxx branch\n</code></pre> <p>\u5220\u9664\u5173\u8054\u7684\u8fdc\u7a0b\u5e93\u7684\u547d\u4ee4</p> <pre><code>git remote rm xxx\n</code></pre> <p>\u65b9\u6cd5\u4e8c (\u53ef\u4ee5\u540c\u65f6\u63a8\u9001)</p> <p>Git\u540c\u65f6\u63a8\u9001\u591a\u4e2a\u8fdc\u7a0b\u4ed3\u5e93 - \u77e5\u4e4e (zhihu.com)</p> <p>\u7531\u4e8e\u9ed8\u8ba4\u5173\u8054\u7684\u8fdc\u7a0b\u5e93\u540d\u662f <code>origin</code> \uff0c</p> <p>\u6240\u4ee5\u901a\u8fc7</p> <pre><code>git remote set-url --add origin git@github.com:RonaldLN/Exam-for-Software-of-DRB-of-2023.git\n</code></pre> <p>\u6765\u5728 <code>origin</code> \u5e93\u540d\u4e0b\u6dfb\u52a0\u8fdc\u7a0b\u5e93\uff0c</p> <p>\u7136\u540e <code>git remote -v</code> \u67e5\u770b</p> <pre><code>origin  git@gitee.com:ronald-luo/test.git (fetch)\norigin  git@gitee.com:ronald-luo/test.git (push)\norigin  git@github.com:RonaldLN/Exam-for-Software-of-DRB-of-2023.git (push)\n</code></pre> <p>\u56e0\u6b64\u5728\u63a8\u9001 <code>origin</code> \u65f6\u5c31\u4f1a\u5411 github \u548c gitee \u4e00\u8d77\u63a8\u9001</p>"},{"location":"zh/git%E7%9B%B8%E5%85%B3/github%26gitee/#14","title":"14","text":"<p>\u4fee\u6539\u672c\u5730\u5206\u652f\u540d\u7684\u547d\u4ee4</p> <pre><code>git branch -m oldName newName\n</code></pre>"},{"location":"zh/git%E7%9B%B8%E5%85%B3/github%26gitee/#15","title":"15","text":"<p>\u5c06\u4e24\u4e2a\u8fdc\u7a0b\u4ed3\u5e93\u514b\u9686\u5230\u4e00\u4e2a\u672c\u5730\u4ed3\u5e93\u7684\u4e24\u4e2a\u5206\u652f\uff0c\u5e76\u4e14\u5408\u5e76\u7684\u65b9\u6cd5</p> <p>\u5982\u4f55\u5408\u5e76\u4e24\u4e2a\u4e0d\u540c\u7684 Git \u4ed3\u5e93\uff1f - \u77e5\u4e4e (zhihu.com)</p>"},{"location":"zh/git%E7%9B%B8%E5%85%B3/github%26gitee/#16","title":"16","text":"<p>\u5982\u679c\u4ed3\u5e93\u4e2d\u7684\u67d0\u4e2a\u6587\u4ef6\u5939\uff0c\u91cc\u9762\u6709 <code>.git/</code> \u6587\u4ef6\u5939\uff0c\u5373\u662f\u53e6\u4e00\u4e2a\u4ed3\u5e93\uff0c\u90a3\u4e48\u8fd9\u4e2a\u6587\u4ef6\u5939\u4e2d\u7684\u6587\u4ef6\u4e0d\u4f1a\u88abgit\u8bc6\u522b\u5230</p>"},{"location":"zh/git%E7%9B%B8%E5%85%B3/github%26gitee/#17","title":"17","text":"<p>\u6dfb\u52a0submodule</p> <pre><code>git submodule add xxx.git [\u8def\u5f84]\n</code></pre>"},{"location":"zh/git%E7%9B%B8%E5%85%B3/github%26gitee/#18","title":"18","text":"<p>\u5728windows\u4e0a\u5b89\u88c5 <code>git-filter-repo</code> \uff0c</p> <p>\u53c2\u8003 python - <code>git filter-repo</code> commands output nothing on Windows - Stack Overflow \u4e2d TTT\u7684\u56de\u7b54</p> <ol> <li>\u8fd0\u884c <code>git --exec-path</code> \u67e5\u770b <code>git.exe</code> \u6240\u5728\u7684\u8def\u5f84</li> <li>\u4e0b\u8f7d <code>git-filter-repo</code> \u6587\u4ef6(\u6ce8\u610f\u4e0d\u8981\u6709\u540e\u7f00\uff0c\u53ef\u80fd\u4e0b\u8f7d\u4f1a\u81ea\u52a8\u6dfb\u52a0 <code>.txt</code> \u540e\u7f00)\uff0c\u5e76\u5c06 <code>git-filter-repo</code> \u590d\u5236\u5230 <code>git.exe</code> \u6240\u5728\u7684\u8def\u5f84</li> <li>\u5728\u9700\u8981\u8fd0\u884c <code>git filter-repo</code> \u547d\u4ee4\u7684\u4ed3\u5e93/\u8def\u5f84\u4e0b\uff0c\u5c1d\u8bd5\u8fd0\u884c\u547d\u4ee4<ul> <li>\u5982\u679c\u547d\u4ee4\u80fd\u6b63\u5e38\u8fd0\u884c\uff0c\u4f1a\u663e\u793a <code>No arguments specified.</code> \uff0c\u90a3\u4e48\u5c31\u4e0d\u7528\u6267\u884c\u4e0b\u4e00\u6b65</li> </ul> </li> <li>\u5982\u679c\u6ca1\u6709\u663e\u793a\u7684\u4fe1\u606f\uff0c\u6216\u8005\u663e\u793a\u7c7b\u4f3c\u4e8e <code>/usr/bin/env: \u2018python3\u2019: No such file or directory</code> \u7684\u62a5\u9519\u4fe1\u606f\uff0c\u90a3\u4e48\u5c06 <code>git-filter-repo</code> \u6587\u4ef6\u7b2c\u4e00\u884c <code>#!/usr/bin/env python3</code> \u4e2d\u7684 <code>python3</code> \u6362\u6210 <code>python</code></li> </ol>"},{"location":"zh/git%E7%9B%B8%E5%85%B3/github%26gitee/#19","title":"19","text":"<p>\u5c06\u5b50\u6587\u4ef6\u5939\u62c6\u5206\u6210\u65b0\u4ed3\u5e93 - GitHub \u6587\u6863</p> <p>\u9700\u8981\u5b89\u88c5 <code>git-filter-repo</code> \uff0c</p> <p>\u6709\u4e24\u79cd\u62c6\u5206\u7684\u5f62\u5f0f\uff1a</p> <ol> <li> <p>\u53ea\u4fdd\u7559\u67d0\u4e2a\u5b50\u6587\u4ef6\u5939\u5230\u65b0\u4ed3\u5e93\u4e2d\uff0cgit\u7684\u5386\u53f2\u8bb0\u5f55\u91cc\u4e5f\u53ea\u4f1a\u4fdd\u7559\u4e0e\u8fd9\u4e2a\u6587\u4ef6\u5939\u76f8\u5173\u7684commit</p> <pre><code>git filter-repo --path FOLDER-NAME/\n</code></pre> <p>Filter the specified branch in your directory and remove empty commits</p> </li> <li> <p>\u5c06\u67d0\u4e2a\u5b50\u6587\u4ef6\u5939\u4f5c\u4e3a\u65b0\u4ed3\u5e93\u7684\u6839\u76ee\u5f55\uff0c\u5373\u628a\u8be5\u5b50\u6587\u4ef6\u5939\u4f5c\u4e3a\u4e00\u4e2a\u65b0\u7684\u4ed3\u5e93\uff0c\u5e76\u53ea\u4fdd\u7559\u76f8\u5173\u7684commit(commit\u4e2d\u6587\u4ef6\u7684\u8def\u5f84\u4f1a\u81ea\u52a8\u8fdb\u884c\u66f4\u6539)</p> <pre><code>git filter-repo --subdirectory-filter FOLDER-NAME\n</code></pre> <p>Filter the specific branch by using a single sub-directory as the root for the new repository</p> </li> </ol>"},{"location":"zh/git%E7%9B%B8%E5%85%B3/github%26gitee/#20","title":"20","text":"<p>windows\u5347\u7ea7git</p> <p>How to upgrade Git on Windows to the latest version - Stack Overflow</p> <p>Dutch Glory\u7684\u56de\u7b54\u63d0\u5230windows\u4e2d\u53ef\u4ee5\u4f7f\u7528\u4ee5\u4e0b\u547d\u4ee4\u5347\u7ea7git</p> <pre><code>git update-git-for-windows\n</code></pre>"},{"location":"zh/git%E7%9B%B8%E5%85%B3/github%26gitee/#21","title":"21","text":"<p>\u5982\u679cclone\u4e0b\u6765\u7684\u4ed3\u5e93\u4e2d\u6709submodule\u5b50\u6a21\u5757\uff0c\u4f46\u5bf9\u5e94\u8def\u5f84\u53ea\u6709\u4e00\u4e2a\u7a7a\u6587\u4ef6\u5939\uff0c\u90a3\u4e48\u53ef\u4ee5\u4f7f\u7528 <code>--init</code> \u53c2\u6570\u6765\u62c9\u53d6\u5bf9\u5e94\u7684\u6587\u4ef6</p> <p><code>--recursive</code> \u8868\u793a\u9012\u5f52\u5bf9\u6240\u6709\u5d4c\u5957\u5b50\u6a21\u5757\u8fdb\u884c\u64cd\u4f5c</p> <pre><code>git submodule update --init --recursive\n</code></pre> <p>\u5982\u679csubmodule\u5b50\u6a21\u5757\u4e2d\u6709\u5927\u6587\u4ef6\uff0c\u90a3\u4e48\u53ef\u4ee5\u4f7f\u7528\u8fd9\u6837\u7684\u547d\u4ee4\u5bf9\u6240\u6709submodule\u62c9\u53d6\u5927\u6587\u4ef6</p> <pre><code>git submodule foreach git lfs pull\n</code></pre>"},{"location":"zh/git%E7%9B%B8%E5%85%B3/github%26gitee/#22","title":"22","text":"<p>\u5982\u679c\u60f3\u5728clone\u7684\u65f6\u5019\u5c31\u987a\u4fbf\u628asubmodule\u4e00\u5e76\u514b\u9686\u597d\uff0c\u6dfb\u52a0\u4e00\u4e2a <code>--recurse-submodules</code> \u53c2\u6570</p> <pre><code>git clone --recurse-submodules\n</code></pre>"},{"location":"zh/git%E7%9B%B8%E5%85%B3/github%26gitee/#23","title":"23","text":"<p>\u53ef\u4ee5\u4f7f\u7528 <code>git archive</code> \u547d\u4ee4\u6765\u6253\u5305(\u67d0\u4e2a\u5206\u652f\u7684)\u4ee3\u7801</p> <pre><code>git archive main --format=tar.gz --output=/path/to/main.tar.gz\n</code></pre> <p>\u6216\u8005\u4f7f\u7528zip\u683c\u5f0f\u6253\u5305</p> <pre><code>git archive main --format=zip --output=main.zip\n</code></pre>"},{"location":"zh/git%E7%9B%B8%E5%85%B3/github%26gitee/#24","title":"24","text":"<p>\u5728\u7ec8\u7aef\u4e2d\u6253\u5370git\u7248\u672c\u6811(\u5386\u53f2\u6240\u6709\u7684commits)</p> <pre><code>git log --oneline --graph --decorate --all\n</code></pre> <p>\u53c2\u8003</p> <p>gitk - Viewing full version tree in git - Stack Overflow</p>"},{"location":"zh/markdown%E7%9B%B8%E5%85%B3/hexo/","title":"Hexo","text":"<p> \u7ea6 189 \u4e2a\u5b57  9 \u884c\u4ee3\u7801  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 1 \u5206\u949f</p>"},{"location":"zh/markdown%E7%9B%B8%E5%85%B3/hexo/#1","title":"1","text":"<p>### \u5b89\u88c5\u524d\u63d0</p> <p>\u5b89\u88c5 Hexo \u76f8\u5f53\u7b80\u5355\uff0c\u53ea\u9700\u8981\u5148\u5b89\u88c5\u4e0b\u5217\u5e94\u7528\u7a0b\u5e8f\u5373\u53ef\uff1a</p> <ul> <li>Node.js (Node.js \u7248\u672c\u9700\u4e0d\u4f4e\u4e8e 10.13\uff0c\u5efa\u8bae\u4f7f\u7528 Node.js 12.0 \u53ca\u4ee5\u4e0a\u7248\u672c)</li> <li>Git</li> </ul> <p>\u5b89\u88c5 <code>hexo</code> </p> <pre><code>npm install -g hexo-cli\n</code></pre> <p>\u5efa\u7ad9 | Hexo</p> <pre><code>hexo init &lt;folder&gt;\ncd &lt;folder&gt;\nnpm install\n</code></pre> <p>\u611f\u89c9\u8ddf mkdocs \u6709\u70b9\u7c7b\u4f3c</p> <p>\u9884\u89c8</p> <p>\u6307\u4ee4 - server| Hexo</p> <pre><code>hexo server\n</code></pre> <p>\u542f\u52a8\u670d\u52a1\u5668\u3002\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u8bbf\u95ee\u7f51\u5740\u4e3a\uff1a <code>http://localhost:4000/</code>\u3002</p> \u9009\u9879 \u63cf\u8ff0 <code>-p</code>, <code>--port</code> \u91cd\u8bbe\u7aef\u53e3 <code>-s</code>, <code>--static</code> \u53ea\u4f7f\u7528\u9759\u6001\u6587\u4ef6 <code>-l</code>, <code>--log</code> \u542f\u52a8\u65e5\u8bb0\u8bb0\u5f55\uff0c\u4f7f\u7528\u8986\u76d6\u8bb0\u5f55\u683c\u5f0f <pre><code>E:\\Github\\hexotest2&gt;hexo server\nINFO  Validating config\nINFO  Start processing\nINFO  Hexo is running at http://localhost:4000/ . Press Ctrl+C to stop.\n</code></pre>"},{"location":"zh/markdown%E7%9B%B8%E5%85%B3/hexo/#2","title":"2","text":"<p>\u4f7f\u7528\u4e3b\u9898 <code>Hexo Aurora Theme</code> </p> <ul> <li> <p>\u5b98\u65b9\u7f51\u7ad9\uff1a</p> <p>Hexo Aurora Docs | Hexo Aurora Docs (tridiamond.tech)</p> </li> <li> <p>\u5b98\u65b9 github \u4ed3\u5e93\uff1a</p> <p>auroral-ui/hexo-theme-aurora: \ud83c\udff3\ufe0f\u200d\ud83c\udf08 Futuristic auroral Hexo theme. (github.com)</p> </li> </ul> <p>\u5728\u4f7f\u7528 hexo \u642d\u5efa\u597d\u521d\u59cb\u7684\u7f51\u7ad9\u540e\uff0c\u5c31\u53ef\u4ee5\u6309\u7167</p> <p>\u5feb\u901f\u4e0a\u624b | Hexo Aurora Docs (tridiamond.tech)</p> <p>\u4e2d\u7684\u6307\u5f15\u6765\u5c06\u9ed8\u8ba4\u7684\u4e3b\u9898\u6362\u6210 <code>Aurora</code></p>"},{"location":"zh/markdown%E7%9B%B8%E5%85%B3/mermaid/","title":"Mermaid","text":"<p> \u7ea6 70 \u4e2a\u5b57  31 \u884c\u4ee3\u7801  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 1 \u5206\u949f</p>"},{"location":"zh/markdown%E7%9B%B8%E5%85%B3/mermaid/#_1","title":"\u793a\u4f8b","text":"<pre><code>flowchart LR\n\u5d07\u9ad8 --&gt; \u5f62\u5f0f\u7279\u5f81 --&gt; a[\"\u201c\u5927\u201d\"] --&gt; b[\"\u6765\u6e90\u4e8e\u4e2a\u4eba\u5411\u4eba\u7c7b\u603b\u4f53\u7684\u5347\u534e&lt;br \\&gt;\uff08\u65e0\u9650\uff09\"]\na --&gt; c[\"\u8d85\u8d8a\u6709\u9650\u7684\u5f62\u4f53\uff0c&lt;br \\&gt;\u5e26\u6709\u8d8b\u5411\u65e0\u9650\u6027\u7684\u7279\u70b9\"]\n\u5d07\u9ad8 --- d[\"\uff08\u201c\u5c0f\u201d\u5bf9\u201c\u5927\u201d\uff0c\u201c\u5f31\u201d\u5bf9\u201c\u5f3a\u201d\uff09&lt;br \\&gt;\u594b\u6597\u6297\u4e89\u7684\u8fc7\u7a0b\"] --- \u77db\u76fe --&gt; e[\"\u611f\u53d7\u5230\u529b\u91cf&lt;br \\&gt;\uff08\u8d85\u7ea7\u82f1\u96c4\uff09\"]\nf[\"\u6765\u6e90\u4e8e\u4e2a\u4f53\u5230\u603b\u4f53\u7684\u751f\u5316\uff08\u8d85\u8d8a\u6027\uff09\"] --&gt; e\n\u5d07\u9ad8 --- \u4fa7\u91cd\u5c55\u793a\u4eba\u7684\u672c\u8d28\u5bf9\u8c61\u5316\u5b9e\u73b0\u7684\u66f2\u6298\u8fc7\u7a0b\nsubgraph g[\" \"]\n\u75db\u82e6\u7684\n\u6109\u60a6\u6027\nend\n\u77db\u76fe --- g\n\u75db\u82e6\u7684 --- \u4e2a\u4f53\u7684\u6297\u4e89\n\u6109\u60a6\u6027 --- \u4e2a\u4f53\u5230\u603b\u4f53\u7684\u5347\u534e\n</code></pre> <pre><code>flowchart LR\n\u5d07\u9ad8 --&gt; \u5f62\u5f0f\u7279\u5f81 --&gt; a[\"\u201c\u5927\u201d\"] --&gt; b[\"\u6765\u6e90\u4e8e\u4e2a\u4eba\u5411\u4eba\u7c7b\u603b\u4f53\u7684\u5347\u534e&lt;br \\&gt;\uff08\u65e0\u9650\uff09\"]\na --&gt; c[\"\u8d85\u8d8a\u6709\u9650\u7684\u5f62\u4f53\uff0c&lt;br \\&gt;\u5e26\u6709\u8d8b\u5411\u65e0\u9650\u6027\u7684\u7279\u70b9\"]\n\u5d07\u9ad8 --- d[\"\uff08\u201c\u5c0f\u201d\u5bf9\u201c\u5927\u201d\uff0c\u201c\u5f31\u201d\u5bf9\u201c\u5f3a\u201d\uff09&lt;br \\&gt;\u594b\u6597\u6297\u4e89\u7684\u8fc7\u7a0b\"] --- \u77db\u76fe --&gt; e[\"\u611f\u53d7\u5230\u529b\u91cf&lt;br \\&gt;\uff08\u8d85\u7ea7\u82f1\u96c4\uff09\"]\nf[\"\u6765\u6e90\u4e8e\u4e2a\u4f53\u5230\u603b\u4f53\u7684\u751f\u5316\uff08\u8d85\u8d8a\u6027\uff09\"] --&gt; e\n\u5d07\u9ad8 --- \u4fa7\u91cd\u5c55\u793a\u4eba\u7684\u672c\u8d28\u5bf9\u8c61\u5316\u5b9e\u73b0\u7684\u66f2\u6298\u8fc7\u7a0b\nsubgraph g[\" \"]\n\u75db\u82e6\u7684\n\u6109\u60a6\u6027\nend\n\u77db\u76fe --- g\n\u75db\u82e6\u7684 --- \u4e2a\u4f53\u7684\u6297\u4e89\n\u6109\u60a6\u6027 --- \u4e2a\u4f53\u5230\u603b\u4f53\u7684\u5347\u534e</code></pre> <p>Typora(meimaid)\u7ed8\u5236\u6d41\u7a0b\u56fe - \u77e5\u4e4e (zhihu.com)</p>"},{"location":"zh/markdown%E7%9B%B8%E5%85%B3/mermaid/#1","title":"1","text":"<p>\u6709\u6807\u70b9\u6216\u7279\u6b8a\u7b26\u53f7\uff0c\u5982<code>\u201c</code> \u3001<code>&lt;</code>\u3001<code>\uff08</code>\u3001\u7a7a\u683c\u3001html\u6362\u884c\u7b26 \u7b49\u65f6\uff0c\u9700\u8981\u7528\u5b57\u6bcd\u52a0<code>[]</code>\u6765\u5f62\u6210\u5355\u5143\u5757\uff0c\u5982\uff1a</p> <pre><code>d[\"\uff08\u201c\u5c0f\u201d\u5bf9\u201c\u5927\u201d\uff0c\u201c\u5f31\u201d\u5bf9\u201c\u5f3a\u201d\uff09&lt;br \\&gt;\u594b\u6597\u6297\u4e89\u7684\u8fc7\u7a0b\"]\n</code></pre>"},{"location":"zh/markdown%E7%9B%B8%E5%85%B3/mermaid/#2","title":"2","text":"<p>\u652f\u6301html</p> <ul> <li>\u6362\u884c  <code>&lt;br \\&gt;</code></li> <li>\u659c\u4f53 <code>&lt;i&gt;...&lt;/i&gt;</code></li> <li>\u52a0\u7c97\u3001\u4e0b\u5212\u7ebf\u3001\u5927\u53f7\u5c0f\u53f7\u5b57\u4f53 ...</li> </ul>"},{"location":"zh/markdown%E7%9B%B8%E5%85%B3/mermaid/#3","title":"3","text":"<pre><code>subgraph g[\" \"]\na\nb\nend\n</code></pre> <p>\u5b50\u56fe\uff0c\u5982\u4e0a\uff0c\u9700\u8981\u4e00\u4e2a\u540d\u79f0\uff0c\u53ef\u4ee5\u6307\u5411\u6216\u88ab\u6307\u5411</p>"},{"location":"zh/markdown%E7%9B%B8%E5%85%B3/mermaid/#4","title":"4","text":"<p>\u5728\u7ebf\u753bmermaid\u56fe\u7f51\u7ad9</p> <p>Online FlowChart &amp; Diagrams Editor - Mermaid Live Editor</p>"},{"location":"zh/markdown%E7%9B%B8%E5%85%B3/mkdocs%28material%29/","title":"Mkdocs (Material)","text":"<p> \u7ea6 5328 \u4e2a\u5b57  903 \u884c\u4ee3\u7801  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 29 \u5206\u949f</p>"},{"location":"zh/markdown%E7%9B%B8%E5%85%B3/mkdocs%28material%29/#1","title":"1","text":"<p>Installation - Material for MkDocs (squidfunk.github.io)</p>"},{"location":"zh/markdown%E7%9B%B8%E5%85%B3/mkdocs%28material%29/#2","title":"2","text":"<pre><code>markdown_extensions:\n  - pymdownx.superfences: # mermaid\u753b\u56fe\n      custom_fences:\n        - name: mermaid\n          class: mermaid\n          format: !!python/name:pymdownx.superfences.fence_code_format\n  - attr_list # \u77e9\u5f62\u6309\u94ae/\u6309\u952e\n  - def_list # a \u65e0\u5e8f/\u6709\u5e8f/\u4efb\u52a1 \u5217\u8868\n  - pymdownx.tasklist: # a\n      custom_checkbox: true\n  - pymdownx.critic # b Formatting \u542b \u9ad8\u4eae/\u5220\u9664\u7ebf/\u4e0b\u5212\u7ebf/\u4e0a\u4e0b\u89d2\u6807 [\u7b49]\n  - pymdownx.caret # b\n  - pymdownx.keys # b\n  - pymdownx.mark # b\n  - pymdownx.tilde # b\n  - toc: # \u76ee\u5f55\u76f8\u5173\n      permalink: true # \u6bcf\u4e2a\u9875\u9762\u5185\uff0c\u5404\u6807\u9898\u4f1a\u751f\u6210\u5404\u81ea\u7684\u94fe\u63a5\n      # title: \u76ee\u5f55 # \u4fee\u6539\u9875\u9762\u53f3\u4fa7 Table of contents \u6587\u5b57\n  - footnotes # \u811a\u6ce8\n  - pymdownx.highlight: # c \u4ee3\u7801\u5757\u914d\u7f6e\n      anchor_linenums: true\n      line_spans: __span\n      pygments_lang_class: true\n  - pymdownx.inlinehilite # c\n  - pymdownx.snippets # c\n  - pymdownx.superfences # c\n  - admonition # d \u6807\u6ce8\n  - pymdownx.details # d\n  - pymdownx.superfences # d\n  - pymdownx.emoji: # \u4f7f\u7528emoji\u548cicon\n      emoji_index: !!python/name:material.extensions.emoji.twemoji \n      emoji_generator: !!python/name:material.extensions.emoji.to_svg\n  - pymdownx.superfences # e \u5185\u5bb9\u9009\u9879\u5361\n  - pymdownx.tabbed: # e\n      alternate_style: true\n  - md_in_html # \u5728 md \u6587\u6863\u4e2d\u80fd\u663e\u793a html \u7684\u6548\u679c\n</code></pre>"},{"location":"zh/markdown%E7%9B%B8%E5%85%B3/mkdocs%28material%29/#3","title":"3","text":"<pre><code>theme:\n  name: material # \u56fa\u5b9a\n  # language: zh # \u8bed\u8a00\u8bbe\u7f6e\u4e3a\u4e2d\u6587(\u4f1a\u6539\u53d8\u641c\u7d22\u680f/\u6700\u540e\u4fee\u6539 \u7b49\u6587\u5b57)\uff0c\u9ed8\u8ba4\u4e3a\u82f1\u6587\n  logo: assets/logo.jpg # \u9875\u9762\u4e2d\u9876\u90e8\u680f\u5de6\u4fa7\u56fe\u6807\n  favicon: assets/favicon.jpg # \u6d4f\u89c8\u5668\u9875\u9762\u6807\u7b7e\u56fe\u6807\n  custom_dir: overrides # html\u6e90\u4ee3\u7801\u6269\u5c55\u6587\u4ef6\u5939\n  features:\n    - navigation.expand # \u76ee\u5f55\u81ea\u52a8\u5c55\u5f00\u5b50\u76ee\u5f55\n    # - toc.integrate # \u53f3\u8fb9\u7684toc\u878d\u5408\u5230\u5de6\u4fa7\u7684\u76ee\u5f55\u4e2d\n    - toc.follow # \u53f3\u4fa7toc\u968f\u7740\u9875\u9762\u6ed1\u52a8\u81ea\u52a8\u6ed1\u52a8\n    - navigation.top # \u6709\u56de\u5230\u9875\u9762\u6700\u4e0a\u65b9top\u7684\u6309\u952e\n    - search.suggest # \u641c\u7d22\u5efa\u8bae\n    - navigation.footer # \u9875\u9762\u5e95\u90e8\u6709\u4e0b\u4e00\u9875\u7684\u94fe\u63a5(\u6309\u76ee\u5f55\u4e0a\u7684\u987a\u5e8f)\n    - navigation.tabs # \u4e00\u7ea7\u76ee\u5f55\u878d\u5408\u81f3\u9876\u680f\uff0c\u5e76\u4e14\u53ea\u5c55\u793a\u4e8c\u7ea7\u76ee\u5f55\n    - navigation.tracking # \u5728\u7ffb\u5230\u9875\u9762\u5bf9\u5e94\u7684\u6807\u9898\u5904\u65f6\uff0c\u4f1a\u5c06\u5730\u5740\u680f\u7684\u5730\u5740\u66f4\u65b0\u6210\u6807\u9898\u5904\u7684\u94fe\u63a5\n    - navigation.instant\n    - navigation.instant.progress # \u9875\u9762\u9876\u90e8\u663e\u793a\u52a0\u8f7d\u8fdb\u5ea6\u6761\n    - content.code.copy # \u4ee3\u7801\u5757\u590d\u5236\u6309\u952e\n    - search.suggest # \u641c\u7d22\u5efa\u8bae\n    - search.highlight # \u641c\u7d22\u7ed3\u679c\u9ad8\u4eae/\u7a81\u51fa\u663e\u793a\n    - search.share # \u641c\u7d22\u7ed3\u679c\u5206\u4eab\n</code></pre>"},{"location":"zh/markdown%E7%9B%B8%E5%85%B3/mkdocs%28material%29/#4","title":"4","text":"<p>\u663c\u591c\u6a21\u5f0f\u5207\u6362\u6309\u952e</p> <pre><code>theme:\n  palette: \n\n    # Palette toggle for light mode\n    - media: \"(prefers-color-scheme: light)\"\n      scheme: default\n      toggle:\n        icon: material/weather-night # \u56fe\u6807(\u53ef\u6539\uff0c\u4e0b\u540c)\n        name: Switch to dark mode\n\n    # Palette toggle for dark mode\n    - media: \"(prefers-color-scheme: dark)\"\n      scheme: slate\n      toggle:\n        icon: material/weather-sunny\n        name: Switch to light mode\n</code></pre>"},{"location":"zh/markdown%E7%9B%B8%E5%85%B3/mkdocs%28material%29/#5","title":"5","text":"<p>\u76ee\u5f55</p> <pre><code>nav:\n  - \u4e00\u7ea7\u76ee\u5f55a: \"a.md\"\n  - \u4e00\u7ea7\u76ee\u5f55b: \"b.md\"\n  - \u4e00\u7ea7\u76ee\u5f55c: # \u6709\u5b50\u76ee\u5f55\u4e0d\u80fd\u5305\u542b\u94fe\u63a5\n    - \u4e8c\u7ea7\u76ee\u5f55aa: \"aa.md\"\n    - \u4e8c\u7ea7\u76ee\u5f55ab: \n      - \u4e09\u7ea7\u76ee\u5f55aaa: \"aaa.md\"\n  - \u4e00\u7ea7\u76ee\u5f55d: \"d.md\"\n  ...\n</code></pre>"},{"location":"zh/markdown%E7%9B%B8%E5%85%B3/mkdocs%28material%29/#6","title":"6","text":"<pre><code>plugins:\n  # - blog: # \u8bbe\u7f6eblog\n  #     blog_dir: . # \u8bbe\u7f6eblog\u5bf9\u5e94\u7684\u8def\u5f84\n  #     blog_toc: true # \u8bbe\u7f6eblog\u7d22\u5f15\u9875\u9762\u7684\u76ee\u5f55\n  #     post_date_format: full # \u8bbe\u7f6eblog\u7d22\u5f15\u9875\u9762\u7684\u65e5\u671f\u683c\u5f0f\n  #     archive_toc: true\n  #     categories_toc: true\n  #     pagination_format: \"$link_first $link_previous ~2~ $link_next $link_last\" # \u8bbe\u7f6eblog\u7d22\u5f15\u9875\u9762\u7684\u5206\u9875\u683c\u5f0f\n  #     pagination_keep_content: true # \u8bbe\u7f6eblog\u7d22\u5f15\u9875\u9762\u7684\u5206\u9875\u5185\u5bb9\n  #     draft_if_future_date: true # \u8bbe\u7f6e\u5982\u679cblog\u7684\u65e5\u671f\u662f\u672a\u6765\u7684\u8bdd\uff0c\u5c31\u4f1a\u88ab\u5f53\u6210\u8349\u7a3f\u4e0d\u4f1a\u88ab\u53d1\u5e03\n  - i18n: # \u8bed\u8a00\u5207\u6362 (\u9700\u8981\u653e\u5728 git-revision-date-localized \u4e4b\u524d)\n    # v0.5.6\n      # default_language: en\n      # material_alternate: true\n      # languages:\n      #   zh:\n      #     name: \u7b80\u4f53\u4e2d\u6587\n      #     build: true\n      #   en:\n      #     name: English labels (\u82f1\u6587\u6807\u7b7e)\n      #     build: false\n    # v1.0.3\n      reconfigure_search: false\n      languages:\n          - locale: zh\n            name: \u7b80\u4f53\u4e2d\u6587\n            build: true\n            default: false\n          - locale: en\n            name: English labels (\u82f1\u6587\u6807\u7b7e)\n            build: true\n            default: true\n  - git-revision-date-localized: # \u9875\u9762\u4e0b\u65b9\u521b\u5efa\u548c\u4fee\u6539\u65f6\u95f4\n      enable_creation_date: true\n      type: timeago\n  - glightbox # \u56fe\u7247\u653e\u5927\n  - search: # \u641c\u7d22(\u652f\u6301\u4e2d\u6587\u3001\u82f1\u6587)\n      # separator: '[\\s\\-,:!=\\[\\]()\"/]+|(?!\\b)(?=[A-Z][a-z])|\\.(?!\\d)|&amp;[lg]t;'\n      separator: '[\\\\s\\\\u200b\\\\u3000\\\\-\u3001\u3002\uff0c\uff0e\uff1f\uff01\uff1b\\s\\-,:!=\\[\\]()\"/]+|(?!\\b)(?=[A-Z][a-z])|\\.(?!\\d)|&amp;[lg]t;'\n      # jieba_dict: jieba_dict/dict.txt.big\n      # jieba_dict_user: jieba_dict/user_dict.txt\n      lang: \n        # - zh\n        - ja\n        - en\n  # - tags # \u6dfb\u52a0\u7ed9\u5355\u4e2a\u6587\u6863\u6dfb\u52a0tag\u6807\u7b7e\n  - statistics # \u7edf\u8ba1\u9875\u9762\u5b57\u6570\u3001\u4ee3\u7801\u884c\u6570\u3001\u9605\u8bfb\u65f6\u95f4\n</code></pre> <ul> <li>\u8bed\u8a00\u5207\u6362</li> <li>\u9875\u9762\u4e0b\u65b9\u521b\u5efa\u548c\u4fee\u6539\u65f6\u95f4</li> <li>\u56fe\u7247\u653e\u5927</li> </ul>"},{"location":"zh/markdown%E7%9B%B8%E5%85%B3/mkdocs%28material%29/#7","title":"7","text":"<p>\u53f3\u4e0a\u89d2github\u4ed3\u5e93</p> <p>Adding a git repository - Material for MkDocs (squidfunk.github.io)</p> <pre><code>repo_url: https://github.com/RonaldLN/Project-Application-Form-of-AIGC\nrepo_name: Project-Application-Form-of-AIGC\n</code></pre>"},{"location":"zh/markdown%E7%9B%B8%E5%85%B3/mkdocs%28material%29/#8","title":"8","text":"<p>\u4e0a\u4f20\u5230<code>github</code>\u3001<code>gitee</code>\u4ed3\u5e93\uff1a</p> <pre><code>mkdocs gh-deploy --force\n</code></pre> <p>(\u8be5\u547d\u4ee4\u53ea\u4e0a\u4f20site\u6587\u4ef6\u5939\u81f3gh-pages\u5206\u652f\uff0c\u82e5\u662fgithub\u4ed3\u5e93\uff0c\u4f1a\u81ea\u52a8\u9009\u62e9gh-pages\u5206\u652f\u751f\u6210github pages\u9875\u9762)</p>"},{"location":"zh/markdown%E7%9B%B8%E5%85%B3/mkdocs%28material%29/#9","title":"9","text":"<p>\u6dfb\u52a0 KaTeX \u516c\u5f0f\u4e66\u5199</p> <p><code>docs/javascripts/katex.js</code>:</p> <pre><code>document$.subscribe(({ body }) =&gt; { \n  renderMathInElement(body, {\n    delimiters: [\n      { left: \"$$\",  right: \"$$\",  display: true },\n      { left: \"$\",   right: \"$\",   display: false },\n      { left: \"\\\\(\", right: \"\\\\)\", display: false },\n      { left: \"\\\\[\", right: \"\\\\]\", display: true }\n    ],\n  })\n})\n</code></pre> <p><code>mkdocs.yml</code>:</p> <pre><code>extra_javascript:\n  - javascripts/katex.js \n  - https://cdnjs.cloudflare.com/ajax/libs/KaTeX/0.16.7/katex.min.js  \n  - https://cdnjs.cloudflare.com/ajax/libs/KaTeX/0.16.7/contrib/auto-render.min.js\n\nextra_css:\n  - https://cdnjs.cloudflare.com/ajax/libs/KaTeX/0.16.7/katex.min.css\n</code></pre>"},{"location":"zh/markdown%E7%9B%B8%E5%85%B3/mkdocs%28material%29/#10","title":"10","text":"<p>\u653e\u5728 <code>/doc</code>\u5185\u5b50\u6587\u4ef6\u5939\u91cc\u7684md\u6587\u4ef6\u4f1a\u6839\u636e\u8be5\u5b50\u6587\u4ef6\u5939\u540d\u81ea\u52a8\u751f\u6210\u4e00\u7ea7\u76ee\u5f55\uff08\u5982\u679c\u6ca1\u6709\u81ea\u5b9a\u4e49\u76ee\u5f55\uff09</p>"},{"location":"zh/markdown%E7%9B%B8%E5%85%B3/mkdocs%28material%29/#11","title":"11","text":"<p>\u6dfb\u52a0\u8c37\u6b4c\u5206\u6790</p> <pre><code>extra:\n  analytics:\n    provider: google\n    property: G-xxxxxxxxxx\n</code></pre>"},{"location":"zh/markdown%E7%9B%B8%E5%85%B3/mkdocs%28material%29/#12","title":"12","text":"<p>\u56fe\u50cf\u5ef6\u8fdf\u52a0\u8f7d</p> <p>\u5728\u6bcf\u4e2a\u56fe\u50cf\u540e\u52a0\u4e0a <code>{ loading=lazy }</code> </p> <pre><code>![xxx](.../xxx.png){ loading=lazy }\n</code></pre>"},{"location":"zh/markdown%E7%9B%B8%E5%85%B3/mkdocs%28material%29/#13","title":"13","text":"<p>\u8bbe\u7f6e\u6bcf\u4e2a\u6587\u7ae0\u5e95\u90e8\u663e\u793a\u521b\u5efa\u548c\u66f4\u65b0\u65f6\u95f4</p> <p>Adding a git repository - Material for MkDocs (squidfunk.github.io)</p> <p>\u6dfb\u52a0\u5305\uff1a</p> <pre><code>pip install mkdocs-git-revision-date-localized-plugin\n</code></pre> <p>\u6dfb\u52a0\u5230 <code>mkdocs.yml</code>:</p> <pre><code>plugins:\n  - git-revision-date-localized:\n      enable_creation_date: true\n      type: timeago\n</code></pre>"},{"location":"zh/markdown%E7%9B%B8%E5%85%B3/mkdocs%28material%29/#14","title":"14","text":"<p>\u56fe\u7247\u7f29\u653e\u529f\u80fd/\u70b9\u51fb\u653e\u5927</p> <p>Images - Material for MkDocs (squidfunk.github.io)</p> <p><code>pip</code>:</p> <pre><code>pip install mkdocs-glightbox\n</code></pre> <p><code>mkdocs.yml</code>:</p> <pre><code>plugins:\n  - glightbox\n</code></pre> <p>\u63d2\u4ef6\u5b98\u65b9\u4f7f\u7528\u6587\u6863\uff1a</p> <p>blueswen/mkdocs-glightbox: A MkDocs plugin supports image lightbox (zoom effect) with GLightbox. (github.com)</p>"},{"location":"zh/markdown%E7%9B%B8%E5%85%B3/mkdocs%28material%29/#15","title":"15","text":"<p>\u6dfb\u52a0\u7248\u6743\u4fe1\u606f</p> <pre><code>copyright: Copyright &amp;copy; 2023 - 2023 Ronald Luo\n</code></pre>"},{"location":"zh/markdown%E7%9B%B8%E5%85%B3/mkdocs%28material%29/#16","title":"16","text":"<p>\u641c\u7d22</p> <pre><code>theme:\n    ...\n    features:\n    ...\n    - search.suggest # \u641c\u7d22\u5efa\u8bae\n    - search.highlight # \u641c\u7d22\u7ed3\u679c\u9ad8\u4eae/\u7a81\u51fa\u663e\u793a\n    - search.share # \u641c\u7d22\u7ed3\u679c\u5206\u4eab\n\nplugins:\n  ...\n  - search: # \u641c\u7d22(\u9009\u62e9\u652f\u6301\u4e2d\u6587\u3001\u82f1\u6587)\n      separator: '[\\s\\-,:!=\\[\\]()\"/]+|(?!\\b)(?=[A-Z][a-z])|\\.(?!\\d)|&amp;[lg]t;'\n      lang: \n        # - zh\n        - ja\n        - en\n</code></pre> <p>\u4e2d\u6587\u6682\u4e0d\u652f\u6301\uff0c\u53ef\u4ee5\u9009\u62e9\u65e5\u6587( <code>ja</code> )\u4ee3\u66ff</p> <p>\u4e2d\u6587\u652f\u6301(\u5373\u5c06)</p> <p>Setting up site search - Material for MkDocs (squidfunk.github.io)</p> <p>\u4e3a\u4e86\u5728\u5185\u7f6e\u641c\u7d22\u63d2\u4ef6\u4e2d\u6dfb\u52a0\u5bf9\u4e2d\u6587\u7684\u652f\u6301\uff0c\u8bf7\u901a\u8fc7 <code>pip</code> \u5b89\u88c5 jieba \u6587\u672c\u5206\u5272\u5e93\uff0c\u63d2\u4ef6\u5c06\u901a\u8fc7\u5206\u53e5\u5668\u8fd0\u884c\u6240\u6709\u6587\u672c\uff1a</p> <pre><code>pip install jieba\n</code></pre> <p>\u641c\u7d22\u5efa\u8bae\u529f\u80fd\uff1a</p> <p>\u542f\u7528\u641c\u7d22\u5efa\u8bae\u540e\uff0c\u641c\u7d22\u5c06\u663e\u793a\u6700\u540e\u4e00\u4e2a\u5355\u8bcd\u7684\u6700\u53ef\u80fd\u5b8c\u6210\u60c5\u51b5\uff0c\u8be5\u5355\u8bcd\u53ef\u4ee5\u901a\u8fc7 Right \u952e\u586b\u5145</p>"},{"location":"zh/markdown%E7%9B%B8%E5%85%B3/mkdocs%28material%29/#17","title":"17","text":"<p>\u8bed\u8a00\u5207\u6362</p> <p>\u53c2\u8003</p> <p>cs-self-learning/mkdocs.yml at master \u00b7 PKUFlyingPig/cs-self-learning (github.com)</p> <p>\u9700\u8981\u5b89\u88c5 <code>mkdocs-static-i18n</code> \u5305</p> <pre><code>pip install mkdocs-static-i18n\n</code></pre> <p>\u5e76\u4e14\u5728 <code>mkdocs.yml</code> \u4e2d <code>plugins:</code> \u91cc <code>- i18n:</code> \u9700\u8981\u5199\u5728 <code>git-revision-date-localized</code> \u4e4b\u524d</p> <p>\u62a5\u9519\u4fe1\u606f\uff1a</p> <pre><code>Error: [git-revision-date-localized] should be defined after the i18n plugin in your mkdocs.yml file. This is because i18n adds a 'locale' variable to markdown pages that this plugin supports.\n</code></pre> <p>\u5e76\u4e14\u6dfb\u52a0\u4e86i18n\u9700\u8981\u6ce8\u91ca\u6389 <code>theme:</code> \u4e2d\u7684 <code>language:</code> </p> <p>\u6b64\u5916\uff0c</p> <p>\u82e5\u60f3\u6dfb\u52a0\u5bf9\u5e94\u8bed\u8a00\u7248\u672c\u7684\u6587\u6863\uff0c\u6bd4\u5982 <code>index.md</code> \u7684\u4e2d\u6587\u7248\uff0c\u5219\u5728\u76f8\u540c\u8def\u5f84\u4e0b\u521b\u5efa <code>index.zh.md</code> \u8fdb\u884c\u7f16\u5199</p> <p>\u53c2\u8003</p> <p>cs-self-learning/docs at master \u00b7 PKUFlyingPig/cs-self-learning (github.com)</p> <p>ultrabug/mkdocs-static-i18n: MkDocs i18n plugin using static translation markdown files (github.com)</p> <p>`mkdocs-static-i18n\u63d2\u4ef6\u7248\u672c\u66f4\u65b0:</p> <p>1.0.0\u4e4b\u540e\u7684\u7248\u672c\uff0c\u4f3c\u4e4e\u914d\u7f6e\u683c\u5f0f\u6539\u53d8\u4e86\uff0ccs-self-learning/docs at master \u00b7 PKUFlyingPig/cs-self-learning (github.com) \u8fd9\u91cc\u9762\u4f7f\u7528\u7684\u683c\u5f0f\u53ef\u80fd\u662f\u65e7\u7248\u7684\uff0c\u65b0\u7248\u7684\u914d\u7f6e\u683c\u5f0f\u53ef\u4ee5\u89c1Setting up languages - MkDocs static i18n plugin documentation (en) (ultrabug.github.io)\uff1a</p> <pre><code>- i18n:\n      reconfigure_search: false\n      languages:\n          - locale: zh\n            name: \u7b80\u4f53\u4e2d\u6587\n            build: true\n            default: false\n          - locale: en\n            name: English labels (\u82f1\u6587\u6807\u7b7e)\n            build: true\n            default: true\n</code></pre> <p>\u7531\u4e8e\u5e94\u8be5\u662f\u53bb\u9664\u4e86 <code>default_language</code> \u8fd9\u4e2a\u9009\u9879\uff0c\u6240\u4ee5\u9ed8\u8ba4\u8bed\u8a00\u9700\u8981\u5728\u8bed\u8a00\u91cc\u9762\u5355\u72ec\u8bbe\u7f6e\uff0c\u9ed8\u8ba4\u8bed\u8a00\u9700\u8981\u5c06 <code>build</code> \u548c <code>default</code> \u90fd\u8bbe\u7f6e\u4e3a <code>true</code> \uff0c\u5426\u5219\u4f1a\u62a5\u9519\u3002</p> <p>(\u65b0\u7248\u4e2d <code>default_language</code> \u548c <code>material_alternate</code> \u4e24\u4e2a\u9009\u9879\u90fd\u5df2\u7ecf\u4e0d\u80fd\u7528\uff0c\u5982\u679c\u914d\u7f6e\u4f1a\u62a5\u9519)</p> <p>\u6b64\u5916\uff0c\u7531\u4e8e mkdocs-material \u672c\u8eab\u7684\u641c\u7d22\u529f\u80fd\u4e0d\u652f\u6301\u4e2d\u6587 <code>zh</code> \uff0c\u56e0\u6b64\u9700\u8981\u5c06 <code>reconfigure_search</code> \u8bbe\u7f6e\u4e3a <code>false</code> </p> <p>Setting up search - MkDocs static i18n plugin documentation (en) (ultrabug.github.io)</p> <p>26\u8bb0\u5f55\u7684\u8be2\u95ee\u8fc7\u7a0b\u4e2d\u6d89\u53ca\u5230\u4e86\u8fd9\u4e2a\u95ee\u9898</p>"},{"location":"zh/markdown%E7%9B%B8%E5%85%B3/mkdocs%28material%29/#18","title":"18","text":"<p>\u6dfb\u52a0\u81ea\u5b9a\u4e49\u7684\u4ee3\u7801</p> <p>javascript - How to add script to head tag in MkDocs? - Stack Overflow</p> <p>Customization - Material for MkDocs (squidfunk.github.io)</p> <p>\u4ee5\u6dfb\u52a0\u767e\u5ea6\u7edf\u8ba1\u7684\u4ee3\u7801\u4e3a\u4f8b\uff1a</p> <p>\u5148\u5728 <code>mkdocs.yml</code> \u4e2d\u6dfb\u52a0\u4ee5\u4e0b\u5185\u5bb9</p> <pre><code>theme:\n  ...\n  custom_dir: overrides\n</code></pre> <p>Customization - Material for MkDocs (squidfunk.github.io)</p> <p>\u5e76\u4e14\u5728 <code>mkdocs.yml</code> \u76f8\u540c\u8def\u5f84\u4e0b\u521b\u5efa <code>overrides</code> \u6587\u4ef6\u5939</p> <p>\u518d\u5728\u8be5\u6587\u4ef6\u5939\u4e2d\u521b\u5efa <code>main.html</code> \u6587\u4ef6</p> <pre><code>.\n\u251c\u2500 overrides/\n\u2502  \u2514\u2500 main.html\n\u2514\u2500 mkdocs.yml\n</code></pre> <p>\u5e76\u5728\u8be5\u6587\u4ef6\u4e2d\u6dfb\u52a0\u5982\u4e0b\u5185\u5bb9\uff1a</p> <pre><code>{% extends \"base.html\" %}\n\n{% block extrahead %}\n  &lt;!-- \u4ece \u767e\u5ea6\u7edf\u8ba1-\u4ee3\u7801\u83b7\u53d6 \u4e2d\u83b7\u53d6\u7684\u4ee3\u7801 --&gt;\n  &lt;script&gt;\n    var _hmt = _hmt || [];\n    (function() {\n      var hm = document.createElement(\"script\");\n      hm.src = \"https://hm.baidu.com/hm.js?xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\";\n      var s = document.getElementsByTagName(\"script\")[0]; \n      s.parentNode.insertBefore(hm, s);\n    })();\n    &lt;/script&gt;\n{% endblock %}\n</code></pre> <p>\u5982\u679c\u8981\u8ffd\u52a0(\u800c\u4e0d\u662f\u8986\u5199)\uff0c\u9700\u8981\u6dfb\u52a0 <code>{{ super() }}</code> \u6765\u5305\u542b\u539f\u6709\u4ee3\u7801\uff0c\u5982</p> <pre><code>{% extends \"base.html\" %}\n\n{% block scripts %}\n  &lt;!-- Add scripts that need to run before here --&gt;\n  {{ super() }}\n  &lt;!-- Add scripts that need to run afterwards here --&gt;\n{% endblock %}\n</code></pre> <p>(\u7531\u4e8e <code>extrahead</code> \u672c\u8eab\u5c31\u4e3a\u7a7a\uff0c</p> <p>Empty block to add custom meta tags</p> <p>\u6240\u4ee5\u4e0d\u9700\u8981\u5305\u542b\u539f\u6709\u4ee3\u7801\uff0c\u53ef\u4ee5\u76f4\u63a5\u8986\u5199)</p>"},{"location":"zh/markdown%E7%9B%B8%E5%85%B3/mkdocs%28material%29/#19","title":"19","text":"<p>Setting up the footer - Material for MkDocs (squidfunk.github.io)</p> <p>\u6dfb\u52a0social links\u65f6\uff0c(\u4ee5\u53calogo\u548cgit\u4ed3\u5e93\u56fe\u6807)\u53ef\u4ee5\u66f4\u6539icon</p> <pre><code>extra:\n  social:\n    - icon: simple/github\n      link: https://github.com/RonaldLN\n    - icon: simple/gitee\n      link: https://gitee.com/ronald-luo\n    - icon: material/email-fast\n      link: mailto:&lt;ln12142325@mail.nwpu.edu.cn&gt;\n</code></pre> <p>\u53ef\u7528\u7684icon\u53ef\u4ee5\u5728</p> <p>Icons, Emojis - Material for MkDocs (squidfunk.github.io)</p> <p>\u4e2d\u67e5\u8be2\uff0c</p> <p>\u4f46\u5728\u5199\u5165 <code>mkdocs.yml</code> \u65f6\u9700\u8981\u9002\u5f53\u4fee\u6539\uff0c\u5982</p> <ul> <li> <code>:octicons-mail-16:</code> \u6539\u4e3a <code>octicons/mail-16</code></li> <li> <code>:material-email-fast:</code> \u6539\u4e3a <code>material/email-fast</code></li> <li> <code>:simple-github:</code> \u6539\u4e3a <code>simple/github</code></li> </ul>"},{"location":"zh/markdown%E7%9B%B8%E5%85%B3/mkdocs%28material%29/#20","title":"20","text":"<p>Content tabs - Material for MkDocs (squidfunk.github.io)</p> <p>\u5185\u5bb9\u9009\u9879\u5361</p> <p><code>mkdocs.yml</code>:</p> <pre><code>markdown_extensions:\n  - pymdownx.superfences\n  - pymdownx.tabbed:\n      alternate_style: true \n</code></pre> <p>\u793a\u4f8b</p> <pre><code>=== \"Unordered list\"\n\n    * Sed sagittis eleifend rutrum\n    * Donec vitae suscipit est\n    * Nulla tempor lobortis orci\n\n=== \"Ordered list\"\n\n    1. Sed sagittis eleifend rutrum\n    2. Donec vitae suscipit est\n    3. Nulla tempor lobortis orci\n</code></pre>"},{"location":"zh/markdown%E7%9B%B8%E5%85%B3/mkdocs%28material%29/#21","title":"21","text":"<p>\u5c0f\u6280\u5de7</p> <p>\u5982\u679c \u5185\u5bb9\u9009\u9879\u5361 \u6216\u8005 \u544a\u8beb/\u4fe1\u606f \u4e0d\u80fd\u5728\u6709\u5e8f\u5217\u8868\u4e2d\u663e\u793a(\u6216 \u6709\u5e8f\u5217\u8868\u56e0\u4e3a \u5185\u5bb9\u9009\u9879\u5361 \u6216\u8005 \u544a\u8beb/\u4fe1\u606f \u88ab\u4e2d\u65ad)\uff0c\u5982</p> <pre><code>1.   \u6b65\u9aa4\u4e00\n\n     !!! note\n\n         ...\n\n2.   \u6b65\u9aa4\u4e8c\n\n     ...\n</code></pre> <ol> <li> <p>\u6b65\u9aa4\u4e00</p> <p>!!! note</p> <pre><code> ...\n</code></pre> </li> <li> <p>\u6b65\u9aa4\u4e8c</p> <p>...</p> </li> </ol> <p>\u5219\u53ef\u4ee5\u501f\u52a9 \u5f15\u7528 <code>&gt;</code></p> <pre><code>1.   \u6b65\u9aa4\u4e00\n\n     &gt; !!! note\n     &gt; \n     &gt;     ...\n\n     &amp;nbsp;\n\n     &gt; === \"tab\"\n     &gt; \n     &gt;     ...\n\n2.   \u6b65\u9aa4\u4e8c\n\n     ...\n</code></pre> <ol> <li> <p>\u6b65\u9aa4\u4e00</p> <p>Note</p> <p>...</p> <p> </p> tab <p>...</p> </li> <li> <p>\u6b65\u9aa4\u4e8c</p> <p>...</p> </li> </ol>"},{"location":"zh/markdown%E7%9B%B8%E5%85%B3/mkdocs%28material%29/#22","title":"22","text":"<p>\u5c0f\u6280\u5de7</p> <p>\u5728typora\u4e2d</p> <pre><code>&gt;   ...\n\n&gt;   ...\n</code></pre> <p>\u4f1a\u663e\u793a\u6210\u4e24\u4e2a\u5206\u5f00\u7684\u5f15\u7528</p> <p>\u800c\u5728 material for mkdocs \u751f\u6210\u7684\u9875\u9762\u4e2d\uff0c\u4f1a\u5408\u6210\u4e00\u4e2a\u8fde\u7740\u7684\u5f15\u7528</p> <p>\u5904\u7406\u6280\u5de7 \u53ef\u4ee5\u7528 <code>&amp;nbsp;</code> (\u597d\u50cf\u662fhtml\u4e2d\u7684\u7a7a\u683c)\u6765\u5206\u5f00\u4e24\u4e2a\u5f15\u7528\uff1a</p> <pre><code>&gt;   ...\n\n&amp;nbsp;\n\n&gt;   ...\n</code></pre>"},{"location":"zh/markdown%E7%9B%B8%E5%85%B3/mkdocs%28material%29/#23","title":"23","text":"<p>\u7528 material for mkdocs \u5728 github \u6216 gitee \u4e0a\u90e8\u7f72\u9759\u6001\u7f51\u9875\u7684(\u6211\u7684)\u65b9\u6cd5\uff1a</p> <ol> <li>\u5148\u5728 github \u6216 gitee \u4e0a\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u4ed3\u5e93(\u53ef\u4ee5\u9009\u62e9\u81ea\u52a8\u6dfb\u52a0README.md\u6587\u4ef6\uff0c\u56e0\u4e3a\u8fd9\u6837\u4f1a\u81ea\u52a8\u521b\u5efa\u51fa main \u6216 master \u5206\u652f)</li> <li>\u7136\u540e\u5c06\u4ed3\u5e93 <code>git clone</code> \u5230\u672c\u5730\u4e2d</li> <li>\u518d\u5728\u547d\u4ee4\u884c\u4e2d <code>mkdocs new xxx</code> \u90a3\u4e2a\u6587\u4ef6\u5939</li> <li>\u6700\u540e\u6dfb\u52a0md\u6587\u6863\u6587\u4ef6\uff0c\u518d\u90e8\u7f72\u5230\u4ed3\u5e93\u5373\u53ef</li> </ol>"},{"location":"zh/markdown%E7%9B%B8%E5%85%B3/mkdocs%28material%29/#24","title":"24","text":"<p>\u5173\u4e8emkdocs-material\u7684tag\u529f\u80fd</p> <p>Setting up tags - Material for MkDocs (squidfunk.github.io)</p> <p>(\u4e2a\u4eba\u731c\u6d4b)\u5176\u4f5c\u7528\u5728\u4e8e\uff0c\u80fd\u591f\u5728\u6bcf\u4e2a\u9875\u9762\u7684\u7b2c\u4e00\u4e2a\u6807\u9898\u4e0a\u65b9\u663e\u793a\u4e00\u4e2a\u6216\u591a\u4e2a \u6807\u7b7e (\u597d\u50cf\u53ea\u80fd\u5728\u9875\u9762\u7684\u4e0a\u65b9)\uff0c\u4ee5\u53ca\u5728\u641c\u7d22\u65f6\uff0c\u542b\u6709\u5bf9\u5e94\u6807\u7b7e\u7684\u7f51\u9875/\u6587\u6863\u4e0b\u4e5f\u4f1a\u663e\u793a\u51fa\u8be5\u6807\u7b7e(\u8fd9\u4e2a\u6709\u5229\u4e8e\u641c\u7d22\u6587\u6863\uff0c\u6216\u8005\u6587\u6863\u5206\u7c7b)</p> <p>\u7136\u540e\u8fd8\u6709\u4e00\u4e2a\u529f\u80fd\u662f\uff0c\u80fd\u8bbe\u7f6e\u4e00\u4e2a\u6587\u6863\u6210\u4e3a \u6807\u7b7e\u7d22\u5f15\u9875 (Setting up tags - Material for MkDocs (squidfunk.github.io))\uff0c\u80fd\u663e\u793a\u6807\u7b7e\u88ab\u54ea\u4e9b\u9875\u9762/\u6587\u6863\u5305\u542b\u4e86</p> <p>Tags support \ud83c\udd95 \u00b7 Issue #2593 \u00b7 squidfunk/mkdocs-material (github.com)</p> <p>\u8fd9\u4e2a\u7f51\u9875\u80fd\u770b\u5230\u4e00\u4e9b\u6548\u679c</p>"},{"location":"zh/markdown%E7%9B%B8%E5%85%B3/mkdocs%28material%29/#25","title":"25","text":"<p>\u4e2d\u6587\u7684\u641c\u7d22\u652f\u6301</p> <p>Setting up site search - Material for MkDocs (squidfunk.github.io)</p> <p>\u9700\u8981\u4ecejieba github\u4ed3\u5e93\u4e2d\u4e0b\u8f7d <code>dict.txt</code> \u6216 <code>dict.txt.small</code> \u6216 <code>dict.txt.big</code> \u6587\u4ef6\uff0c\u7136\u540e\u653e\u5230\u672c\u5730\u9879\u76ee\u4e2d</p> <p><code>mkdocs.yml</code> \u4e2d\uff0c</p> <pre><code>plugins:\n  - search:\n      jieba_dict: dict.txt \n      jieba_dict_user: user_dict.txt\n</code></pre> <p><code>dict.txt</code> \u548c <code>user_dict.txt</code> \u4e24\u5904\u5bf9\u5e94\u7684\u662f <code>mkdocs.yml</code> \u6587\u4ef6\u7684\u4f4d\u7f6e\uff0c\u6240\u4ee5\u5982\u679c\u5c06\u8fd9\u4e24\u4e2a\u8def\u5f84\u66ff\u6362\u6210\u522b\u7684\u8def\u5f84\uff0c\u6839\u76ee\u5f55\u5e94\u8be5\u662f <code>mkdocs.yml</code> \u7684\u76ee\u5f55</p> <p>\u5e76\u4e14\u8981\u53bb\u9664\u6389 <code>lang</code> \u9009\u9879(\u5177\u4f53\u53ef\u89c126)</p>"},{"location":"zh/markdown%E7%9B%B8%E5%85%B3/mkdocs%28material%29/#26","title":"26","text":"<p>\u4e00\u6b21\u62a5\u544a\u9519\u8bef\u7684\u7ecf\u5386</p> <p>2023-09-11</p> <p>Why does mkdocs-material display unsupported Chinese when running the mkdocs gh-deploy -- force command \u00b7 squidfunk/mkdocs-material \u00b7 Discussion #5992 (github.com)</p> <p>stage 1</p> <p>\u4f5c\u8005\u8ba9\u521b\u5efa\u4e00\u4e2a\u6700\u5c0f\u590d\u5236\u4ef6\u7136\u540e\u4e0a\u4f20\uff0c</p> <p>Creating a reproduction - Material for MkDocs (squidfunk.github.io)</p> <p>\u6211\u5927\u81f4\u7684\u64cd\u4f5c\u8fc7\u7a0b\u662f\uff0c\u521b\u5efa\u4e00\u4e2a\u65b0\u7684mkdocs\u9879\u76ee\uff0c\u7136\u540e\u6309\u6587\u6863\u8bf4\u7684 \u5728 <code>mkdocs.yml</code> \u6587\u4ef6\u4e2d\u6dfb\u52a0\u5fc5\u8981\u7684\u914d\u7f6e\uff0c</p> <ul> <li> <p><code>yaml     theme:       name: material</code></p> <p>\u57fa\u672c\u4e0a\u5fc5\u987b\u7684</p> </li> <li> <p>```yaml     plugins:</p> <ul> <li>search:       jieba_dict: jieba_dict/dict.txt.big       jieba_dict_user: jieba_dict/user_dict.txt       lang:          - zh ```</li> </ul> <p>\u62a5\u9519\u7684\u5730\u65b9</p> </li> </ul> <p>\u7136\u540e <code>mkdocs build</code> \u4e00\u4e0b\uff0c\u51fa\u73b0\u4e86\u62a5\u9519\uff0c(\u5982\u679c\u6ca1\u6709\u5e94\u8be5\u5c31\u662f\u7ee7\u7eed\u6309\u539f\u6765\u7684\u914d\u7f6e\u6dfb\u52a0\u53ef\u80fd\u5bfc\u81f4\u62a5\u9519\u7684\u914d\u7f6e\uff0c\u4e0d\u65ad\u5c1d\u8bd5\u76f4\u5230\u51fa\u73b0\u62a5\u9519)</p> <p>\u518d\u6309\u6587\u6863\u8bf4\u7684\uff0c\u6dfb\u52a0\u751f\u6210\u9519\u8bef\u62a5\u544a\u7684\u63d2\u4ef6</p> <pre><code>plugins:\n  - info\n</code></pre> <p>\u6700\u540e\u518d <code>mkdocs build</code> \u4e00\u6b21\uff0c\u4f46\u662f\u8fd9\u6b21\u9700\u8981\u80fd\u8fde\u63a5\u4e0a github (\u8981\u6302\u68af\u5b50)\uff0c\u7136\u540e\u4f1a\u5728\u9879\u76ee\u6839\u76ee\u5f55\u751f\u6210\u4e00\u4e2a zip \u6587\u4ef6</p> <p></p> <p>stage 2</p> <p>\u4f5c\u8005\u56de\u590d\uff0c\u5c06 <code>search</code> \u4e2d\u7684 <code>lang</code> \u9009\u9879\u5168\u90e8\u53bb\u9664\u5373\u53ef</p> <p>\u4f46\u5728\u6211\u53bb\u9664\u540e\uff0c\u4ecd\u4ea7\u751f\u4e86\u4e00\u884c\u62a5\u9519</p> <pre><code>...\nWARNING - Language 'zh' is not supported by Lunr.js, not setting it in the 'plugins.search.lang' option\n...\n</code></pre> <p>\u6000\u7591\u662f\u7531\u4e8e\u4f7f\u7528\u4e86\u8bed\u8a00\u5207\u6362\u7684\u63d2\u4ef6 <code>i18n</code> \u4e2d\u8bbe\u7f6e\u7684 <code>zh</code> \u5bfc\u81f4\u7684\uff0c</p> <p>\u5c06\u63d2\u4ef6\u7684\u914d\u7f6e\u4ee3\u7801\u6ce8\u91ca\u6389\u4e4b\u540e\uff0c\u518d\u6b21\u914d\u7f6e\uff0c\u53d1\u73b0\u62a5\u9519\u4fe1\u606f\u6d88\u5931(\u6240\u4ee5\u786e\u5b9a\u62a5\u9519\u4fe1\u606f\u662f\u7531\u4e8e\u5728i18n\u63d2\u4ef6\u4e2d\u8bbe\u7f6e\u4e86 <code>zh</code> \u76f8\u5173\u7684\u914d\u7f6e\u4ea7\u751f\u7684)</p> <p>\u5728\u67e5\u770b\u4e86 <code>mkdocs-static-i18n</code> \u7684\u5b98\u65b9\u6587\u6863(Installation - MkDocs static i18n plugin documentation (en) (ultrabug.github.io))\u4e4b\u540e\uff0c\u53d1\u73b0\u63d2\u4ef6\u6709\u4e2a\u9009\u9879\u53ef\u4ee5\u4e0d\u66f4\u6539mkdocs-material\u539f\u6709\u7684\u5185\u7f6esearch\u63d2\u4ef6\u7684\u914d\u7f6e</p> <p>Setting up search - MkDocs static i18n plugin documentation (en) (ultrabug.github.io)</p> <p>\u7136\u540e\u53d1\u73b0\u8fd9\u662f\u65b0\u7248\u672c\u624d\u6709\u7684\u9009\u9879\uff0c\u6240\u4ee5\u5c06\u539f\u6709\u7248\u672c <code>v0.5.6</code> \u66f4\u65b0\u4e3a <code>v1.0.3</code> \uff0c\u4f46\u65b0\u7248\u672c\u7684\u8bed\u8a00\u914d\u7f6e\u4e5f\u6539\u53d8\uff0cSetting up languages - MkDocs static i18n plugin documentation (en) (ultrabug.github.io)\uff0c</p> <p>(\u5176\u4f59\u7684\u4e00\u4e9b\u5173\u4e8e\u65b0\u7248\u53d8\u5316\u7684\u53d1\u73b0\u53ef\u89c1\u4e8e18)</p> <p>\u7ecf\u8fc7\u8c03\u6574\u548c\u9009\u9879\u7684\u8bbe\u7f6e\uff0c\u6700\u540e\u62a5\u9519\u4fe1\u606f\u6d88\u5931\u4e86\u3002</p> <p>\u4f46\u662f\u641c\u7d22\u529f\u80fd\u7684\u4e2d\u6587\u5206\u5272\u4ecd\u7136\u4e0d\u80fd\u7528\uff0c\u5411\u4f5c\u8005\u518d\u6b21\u8be2\u95ee</p> <p>stage 3</p> <p>\u4f5c\u8005\u56de\u590d\u4ed6\u5c1d\u8bd5\u4e86\uff0c\u53ef\u4ee5\u6b63\u5e38\u4f7f\u7528</p> <p>\u7ecf\u8fc7\u5c1d\u8bd5\uff0c\u53d1\u73b0\u9700\u8981\u5c06 <code>theme</code> \u8bbe\u7f6e\u4e2d\u7684 <code>language</code> \u8bbe\u7f6e\u6210 <code>zh</code> \u624d\u80fd\u4f7f\u641c\u7d22\u7684\u4e2d\u6587\u652f\u6301\u6b63\u5e38(\u4e0d\u52a0\u5c31\u4e0d\u884c)\uff0c\u5e76\u5411\u4f5c\u8005\u53cd\u6620</p> <p>\u4f5c\u8005\u56de\u590d\uff0c\u56e0\u4e3a\u8bbe\u7f6e\u4e86 <code>language: zh</code> \u4f1a\u81ea\u52a8\u914d\u7f6e\u641c\u7d22\u5206\u5272(search separator)\uff0c\u5982\u679c\u6ca1\u6709\u8bbe\u7f6e <code>language: zh</code> \uff0c\u5219\u9700\u8981\u624b\u52a8\u6dfb\u52a0\u76f8\u5e94\u7684\u641c\u7d22\u5206\u5272(search separator)\uff0c\u53c2\u8003Chinese search support - Material for MkDocs (squidfunk.github.io)</p> <p>\u4f46\u662f\u6211\u770b\u5230\u4ed6\u7ed9\u51fa\u7684github\u91cc\u7684\u6587\u4ef6\u91cc\uff0c\u8bbe\u7f6e\u7684\u7684\u5206\u5272\u8981\u66f4\u591a( <code>\"search.config.separator\": \"[\\\\s\\\\u200b\\\\u3000\\\\-\u3001\u3002\uff0c\uff0e\uff1f\uff01\uff1b]+\",</code> )\uff0c\u6240\u4ee5\u6211\u9009\u53d6\u4e86\u90a3\u4e2a\u6587\u4ef6\u91cc\u7684\u914d\u7f6e\u6dfb\u52a0\u5230\u6211\u7684 <code>mkdocs.yml</code> \u6587\u4ef6\u91cc</p> <pre><code>  - search:\n      separator: '[\\\\s\\\\u200b\\\\u3000\\\\-\u3001\u3002\uff0c\uff0e\uff1f\uff01\uff1b\\s\\-,:!=\\[\\]()\"/]+|(?!\\b)(?=[A-Z][a-z])|\\.(?!\\d)|&amp;[lg]t;'\n</code></pre> <p>\u539f\u672c\u4e3a\uff1a</p> <pre><code>  - search:\n      separator: '[\\s\\-,:!=\\[\\]()\"/]+|(?!\\b)(?=[A-Z][a-z])|\\.(?!\\d)|&amp;[lg]t;'\n</code></pre> <p>\u7ecf\u8fc7\u6d4b\u8bd5\uff0c\u641c\u7d22\u4e2d\u6587\u652f\u6301\u80fd\u591f\u6b63\u5e38\u4f7f\u7528\uff0c\u5e76\u4e14 <code>i18n</code> \u63d2\u4ef6\u4e5f\u80fd\u6b63\u5e38\u4f7f\u7528</p>"},{"location":"zh/markdown%E7%9B%B8%E5%85%B3/mkdocs%28material%29/#27","title":"27","text":"<p>\u4e2d\u6587\u641c\u7d22\u652f\u6301\u611f\u89c9\u4e0d\u662f\u5f88\u597d\u7528\uff0c\u6240\u4ee5\u7528\u56de\u4e86\u539f\u6765\u7684\u914d\u7f6e</p> <pre><code>  - search: # \u641c\u7d22(\u9009\u62e9\u652f\u6301\u4e2d\u6587\u3001\u82f1\u6587)\n      separator: '[\\u200b\\u3000\\-\u3001\u3002\uff0c\uff0e\uff1f\uff01\uff1b\\s\\-,:!=\\[\\]()\"/]+|(?!\\b)(?=[A-Z][a-z])|\\.(?!\\d)|&amp;[lg]t;'\n      # jieba_dict: jieba_dict/dict.txt.big\n      # jieba_dict_user: jieba_dict/user_dict.txt\n      lang: \n        # - zh\n        - ja\n        - en\n</code></pre>"},{"location":"zh/markdown%E7%9B%B8%E5%85%B3/mkdocs%28material%29/#28","title":"28","text":"<p>\u914d\u7f6eblog\u7684\u8fc7\u7a0b\u8bb0\u5f55</p> <p>Setting up a blog - Material for MkDocs (squidfunk.github.io)</p> <p>\u5148\u914d\u7f6e\u597d\uff0c\u518d\u53d1\u5e03blog</p> <p>\u8bbe\u7f6eblog\u63d2\u4ef6\uff1a</p> <pre><code>plugin:\n  - blog\n</code></pre> <p>\u5e76\u521b\u5efa\u76f8\u5e94\u7684\u76ee\u5f55\u7ed3\u6784\uff1a</p> <pre><code>.\n\u251c\u2500 docs/\n\u2502  \u2514\u2500 blog/\n\u2502     \u251c\u2500 posts/\n\u2502     \u2514\u2500 index.md\n\u2514\u2500 mkdocs.yml\n</code></pre> <p>\u5e76\u5c06 <code>blog</code> \u8def\u5f84\u4e0b\u7684 <code>index.md</code> \u6dfb\u52a0\u5230 <code>mkdocs.yml</code> \u76ee\u5f55\u7684\u914d\u7f6e\u4e2d\uff1a</p> <pre><code>nav:\n  - Blog:\n    - blog/index.md \n</code></pre> <p>\u9ed8\u8ba4\u914d\u7f6e\u4e0b\uff0cblog\u5bf9\u5e94\u7684\u76ee\u5f55\u662f\u4e0a\u9762\u76ee\u5f55\u7ed3\u6784\u4e2d\u7684 <code>blog/</code> \uff0c</p> <p>\u5982\u679c\u8981\u81ea\u5b9a\u4e49blog\u7684\u76ee\u5f55\uff0c\u6bd4\u5982\u8981\u8bbe\u7f6e\u72ec\u7acb\u7684blog\uff0c\u53ef\u4ee5\u5c06 <code>blog-dir</code> \u8bbe\u7f6e\u6210 <code>.</code> \uff1a</p> <pre><code>plugins:\n  - blog:\n      blog_dir: .\n</code></pre> <p>\u90a3\u4e48\u5982\u679c\u5176\u4ed6\u7684\u8def\u5f84\u4f7f\u7528\u9ed8\u8ba4\u7684\u8bbe\u7f6e\u7684\u8bdd\uff0c\u6587\u4ef6\u7ed3\u6784\u5e94\u8be5\u53d8\u6210</p> <pre><code>.\n\u251c\u2500 docs/\n\u2502  \u251c\u2500 posts/\n\u2502  \u2514\u2500 index.md\n\u2514\u2500 mkdocs.yml\n</code></pre> <p>\u90a3\u4e48\u4e4b\u524d\u7684\u76ee\u5f55\u7684\u8bbe\u7f6e\u5e94\u8be5\u6539\u6210</p> <pre><code>nav:\n  - Blog:\n    - index.md \n</code></pre> <p><code>post_dir</code> \u53c2\u6570\u540c\u7406</p> <p>\u6700\u7ec8\u6211\u7684\u914d\u7f6e\uff1a</p> <pre><code>nav:\n  - Blog:\n    - index.md \n\nplugins:\n  - blog: # \u8bbe\u7f6eblog\n      blog_dir: . # \u8bbe\u7f6eblog\u5bf9\u5e94\u7684\u8def\u5f84\n      blog_toc: true # \u8bbe\u7f6eblog\u7d22\u5f15\u9875\u9762\u7684\u76ee\u5f55\n      post_date_format: full # \u8bbe\u7f6eblog\u7d22\u5f15\u9875\u9762\u7684\u65e5\u671f\u683c\u5f0f\n      archive_toc: true\n      categories_toc: true\n      pagination_format: \"$link_first $link_previous ~2~ $link_next $link_last\" # \u8bbe\u7f6eblog\u7d22\u5f15\u9875\u9762\u7684\u5206\u9875\u683c\u5f0f\n      pagination_keep_content: true # \u8bbe\u7f6eblog\u7d22\u5f15\u9875\u9762\u7684\u5206\u9875\u5185\u5bb9\n      draft_if_future_date: true # \u8bbe\u7f6e\u5982\u679cblog\u7684\u65e5\u671f\u662f\u672a\u6765\u7684\u8bdd\uff0c\u5c31\u4f1a\u88ab\u5f53\u6210\u8349\u7a3f\u4e0d\u4f1a\u88ab\u53d1\u5e03\n</code></pre> <p>\u5728post\u5bf9\u5e94\u7684\u76ee\u5f55\u4e2d\u521b\u5efablog\u6587\u6863(\u9ed8\u8ba4\u4e3a <code>{blog}/posts</code> )\uff0c</p> <pre><code>---\ndraft: false\ndate: 2023-09-11\nauthors:\n  - ronald_luo\ncategories:\n  - Configure &amp; Debug\n---\n\n# \u4e00\u6b21\u5728github\u4e0a\u8be2\u95ee\u4f5c\u8005\u7684\u7ecf\u5386\n\n&gt;   2023-09-11\n\n[Why does mkdocs-material display unsupported Chinese when running the mkdocs gh-deploy -- force command \u00b7 squidfunk/mkdocs-material \u00b7 Discussion #5992 (github.com)](https://github.com/squidfunk/mkdocs-material/discussions/5992)\n\n&lt;!-- more --&gt;\n\n## **stage 1**\n\n\u4f5c\u8005\u8ba9\u521b\u5efa\u4e00\u4e2a*\u6700\u5c0f\u590d\u5236\u4ef6*\u7136\u540e\u4e0a\u4f20\uff0c\n\n...\n</code></pre> <ul> <li><code>draft</code> : \u662f\u5426\u8bbe\u7f6e\u6210\u8349\u7a3f\uff0c\u53ea\u6709\u9884\u89c8\u4f1a\u6784\u5efa\uff0c\u53d1\u5e03\u4e0d\u4f1a\u6784\u5efa</li> <li><code>date</code> : \u65e5\u671f</li> <li><code>authors</code> : \u9009\u62e9\u4e00\u4e2a\u6216\u591a\u4e2a <code>.author.yml</code> \u6587\u4ef6\u4e2d\u5df2\u6709\u7684\u4f5c\u8005</li> <li><code>categories</code> : \u9009\u62e9\u5206\u7c7b</li> <li><code>&lt;!-- more --&gt;</code> : \u6458\u8981\u8bbe\u7f6e\uff0c\u4e3b\u9875\u4e2d\u53ea\u663e\u793a\u4ee3\u7801\u4e4b\u524d\u7684\u5185\u5bb9</li> </ul> <p>\u6ce8\u610f\uff1a\u4e00\u7ea7\u6807\u9898\u53ea\u80fd\u8bbe\u7f6e\u4e00\u4e2a\uff0c\u5426\u5219\u76ee\u5f55\u4e0d\u4f1a\u663e\u793a</p> <p>How can I make the table of content appear for each post in my blog? \u00b7 squidfunk/mkdocs-material \u00b7 Discussion #5998 (github.com)</p> <p>\u5176\u4f59\u4e00\u4e9b\u9009\u9879</p> <p>Adding categories</p> <p>\u8bbe\u7f6e\u5206\u7c7b\u6bd4\u8f83\u7b80\u5355 \u6613\u61c2</p> <p>Adding tags</p> <p>\u6dfb\u52a0tags\u5728\u6211\u7684\u5c1d\u8bd5\u8fc7\u7a0b\u4e2d\u53ea\u80fd\u5728\u641c\u7d22\u7ed3\u679c\u4e2d\u663e\u793atag\uff0c\u6587\u7ae0\u9876\u90e8\u5e76\u4e0d\u80fd\u663e\u793atag\uff0c\u611f\u89c9\u5b9e\u7528\u6027\u4e0d\u662f\u5f88\u9ad8\uff0c\u6240\u4ee5\u5c31\u6ca1\u6709\u6dfb\u52a0\u8fd9\u4e2a\u4e1c\u897f</p> <p>Setting the reading time</p> <p>\u9605\u8bfb\u65f6\u95f4\u5728blog\u63d2\u4ef6\u91cc\u5185\u7f6e\u6709\u8fd9\u4e2a\u529f\u80fd\uff0c\u4e0d\u7528\u8bbe\u7f6e\u4e5f\u80fd\u663e\u793a\u9605\u8bfb\u65f6\u95f4\uff0c\u4f46\u662f\u5982\u679c\u8ba4\u4e3a\u4e0d\u51c6\u7684\u8bdd\uff0c\u53ef\u4ee5\u81ea\u5df1\u5bf9\u5355\u7bc7blog\u8bbe\u7f6e\u9605\u8bfb\u65f6\u95f4\u800c\u8986\u76d6\u6389\u81ea\u52a8\u8ba1\u7b97\u7684</p>"},{"location":"zh/markdown%E7%9B%B8%E5%85%B3/mkdocs%28material%29/#29","title":"29","text":"<p>\u66f4\u6539\u548c\u914d\u7f6e\u81ea\u5b9a\u4e49\u7684\u7f51\u9875\u989c\u8272\u7684\u8bb0\u5f55</p> <p>\u5982\u679c\u53ea\u9700\u4fee\u6539\u9876\u90e8\u680f\u7684\u989c\u8272\u548c\u9f20\u6807\u653e\u7f6e\u5904\u7684\u94fe\u63a5\u7684\u5f3a\u8c03\u8272\uff0c\u5e76\u4e14\u4e0d\u4f7f\u7528\u81ea\u5b9a\u4e49\u7684\u989c\u8272\uff0c\u90a3\u4e48\u6839\u636e\u5b98\u65b9\u6587\u6863\u4e2d\u7684\u6307\u793a\uff0c</p> <p>Changing the colors - Material for MkDocs (squidfunk.github.io)</p> <p>\u5728 <code>mkdocs.yml</code> \u6dfb\u52a0\u76f8\u5e94\u7684\u914d\u7f6e\u5373\u53ef</p> <p>\u914d\u7f6e\u81ea\u5b9a\u4e49\u7684\u7f51\u9875\u4e3b\u9898(\u7f51\u9875\u5305\u62ec\u5e95\u8272\u3001\u9876\u90e8\u680f\u989c\u8272\u3001\u5f3a\u8c03\u8272)</p> <p>\u5728\u5bf9\u5e94\u8def\u5f84\u65b0\u5efa\u6587\u4ef6 <code>docs/stylesheets/extra.css</code> </p> <p>\u5e76\u5728 <code>mkdocs.yml</code> \u4e2d\u6dfb\u52a0\uff1a</p> <pre><code>extra_css:\n  - stylesheets/extra.css\n</code></pre> <p>\u989c\u8272\u8ba1\u7b97\u5668 - \u5728\u7ebf\u989c\u8272\u5de5\u5177 - PhotoKit.com</p> <p>\u8fd9\u4e2a\u7f51\u7ad9\u80fd\u67e5\u8be2\u989c\u8272\u7684HSL\u3001HSV\u3001HEX\u3001RGB\u7b49\u5bf9\u5e94\u7684\u503c</p> <p>css\u6587\u4ef6\u4e2d\u7684\u8bbe\u7f6e\u4ee3\u7801\uff1a</p> <ul> <li> <p>\u6df1\u8272\u4e3b\u9898\uff1a</p> <p>\u6211\u662f\u76f4\u63a5\u4ecemkdocs\u6784\u5efa\u7684\u7f51\u9875\u7684css\u6587\u4ef6\u4e2d\u590d\u5236\u4e86\u9ed8\u8ba4 <code>slate</code> \u4e3b\u9898\u7684\u914d\u7f6e\u4ee3\u7801\u5e76\u7a0d\u52a0\u4fee\u6539\u5f97\u5230\u6211\u81ea\u5b9a\u4e49\u7684\u4e3b\u9898\u914d\u7f6e\u4ee3\u7801\uff1a</p> <pre><code>[data-md-color-scheme=\"forest-dark\"] {\n  --md-hue: 221;\n  --md-default-fg-color: hsla(var(--md-hue), 75%, 95%, 1);\n  --md-default-fg-color--light: hsla(var(--md-hue), 75%, 90%, 0.62);\n  --md-default-fg-color--lighter: hsla(var(--md-hue), 75%, 90%, 0.32);\n  --md-default-fg-color--lightest: hsla(var(--md-hue), 75%, 90%, 0.12);\n  --md-default-bg-color: hsla(var(--md-hue), 45%, 22%, 1);\n  --md-default-bg-color--light: hsla(var(--md-hue), 45%, 22%, 0.54);\n  --md-default-bg-color--lighter: hsla(var(--md-hue), 45%, 22%, 0.26);\n  --md-default-bg-color--lightest: hsla(var(--md-hue), 45%, 22%, 0.07);\n  --md-code-fg-color: hsla(var(--md-hue), 18%, 86%, 1);\n  --md-code-bg-color: hsla(var(--md-hue), 45%, 16%, 1);\n  --md-code-hl-color: #4287ff26;\n  --md-code-hl-number-color: #e6695b;\n  --md-code-hl-special-color: #f06090;\n  --md-code-hl-function-color: #c973d9;\n  --md-code-hl-constant-color: #9383e2;\n  --md-code-hl-keyword-color: #6791e0;\n  --md-code-hl-string-color: #2fb170;\n  --md-code-hl-name-color: var(--md-code-fg-color);\n  --md-code-hl-operator-color: var(--md-default-fg-color--light);\n  --md-code-hl-punctuation-color: var(--md-default-fg-color--light);\n  --md-code-hl-comment-color: var(--md-default-fg-color--light);\n  --md-code-hl-generic-color: var(--md-default-fg-color--light);\n  --md-code-hl-variable-color: var(--md-default-fg-color--light);\n  --md-typeset-color: var(--md-default-fg-color);\n  --md-typeset-a-color: var(--md-primary-fg-color);\n  --md-typeset-mark-color: #ffb7424d;\n  --md-typeset-kbd-color: hsla(var(--md-hue), 15%, 94%, 0.12);\n  --md-typeset-kbd-accent-color: hsla(var(--md-hue), 15%, 94%, 0.2);\n  --md-typeset-kbd-border-color: hsla(var(--md-hue), 15%, 14%, 1);\n  --md-typeset-table-color: hsla(var(--md-hue), 75%, 95%, 0.12);\n  --md-typeset-table-color--light: hsla(var(--md-hue), 75%, 95%, 0.035);\n  --md-admonition-fg-color: var(--md-default-fg-color);\n  --md-admonition-bg-color: var(--md-default-bg-color);\n  --md-footer-bg-color: hsla(var(--md-hue), 15%, 12%, 0.87);\n  --md-footer-bg-color--dark: hsla(var(--md-hue), 15%, 10%, 1);\n  --md-shadow-z1: 0 0.2rem 0.5rem #0003, 0 0 0.05rem #0000001a;\n  --md-shadow-z2: 0 0.2rem 0.5rem #0000004d, 0 0 0.05rem #00000040;\n  --md-shadow-z3: 0 0.2rem 0.5rem #0006, 0 0 0.05rem #00000059;\n  color-scheme: dark;\n\n  --md-primary-fg-color: hsl(30, 78%, 61%);\n  --md-primary-fg-color--light: hsl(38, 91%, 82%);\n  --md-primary-fg-color--dark: hsl(25, 26%, 34%);\n  --md-primary-bg-color: #fff;\n  --md-primary-bg-color--light: #ffffffb3;\n\n  --md-typeset-a-color: var(--md-primary-fg-color);\n\n  --md-accent-fg-color: hsl(36, 100%, 45%);\n  --md-accent-fg-color--transparent: #f500561a;\n  --md-accent-bg-color: #fff;\n  --md-accent-bg-color--light: #ffffffb3;\n}\n</code></pre> <p>\u7f51\u9875\u5e95\u8272\u63a8\u8350\u91c7\u7528HSL\u6a21\u5f0f\u8bbe\u7f6e\u989c\u8272\uff0c\u56e0\u4e3a\u539f\u59cb\u7684\u4ee3\u7801\u4e2d\uff0c\u5355\u72ec\u5c06\u201cH\u201d(hue)\u8bbe\u7f6e\u4e3a\u4e00\u4e2a\u53c2\u6570 <code>--md-hue</code> \uff0c\u7136\u540e\u518d\u5176\u4ed6\u5c5e\u6027\u4e2d\u76f4\u63a5\u4f7f\u7528\u8fd9\u4e2a\u53c2\u6570\u6765\u914d\u7f6e\u76f8\u5e94\u7684\u7f51\u9875\u989c\u8272\u5c5e\u6027</p> <p>\u4e0e\u7f51\u9875\u5e95\u8272\u76f8\u5173\u7684\u5c5e\u6027\u6709\uff1a</p> <ul> <li> <p><code>--md-hue</code> \uff1a\u8bbe\u7f6e\u5e95\u8272\u7684\u8272\u76f8(Hue)\uff0c\u8303\u56f4\u4e3a 0 - 360</p> </li> <li> <p><code>css       --md-default-bg-color: hsla(var(--md-hue), 45%, 22%, 1);       --md-default-bg-color--light: hsla(var(--md-hue), 45%, 22%, 0.54);       --md-default-bg-color--lighter: hsla(var(--md-hue), 45%, 22%, 0.26);       --md-default-bg-color--lightest: hsla(var(--md-hue), 45%, 22%, 0.07);</code></p> <p><code>--md-default-bg-color</code> \u5bf9\u5e94\u7684\u5c31\u662f\u7f51\u9875\u7684\u5e95\u8272\uff0c<code>45%</code> \u5bf9\u5e94\u7684\u4f4d\u7f6e\u662fHSL\u4e2d\u7684S\u9971\u548c\u5ea6\uff0c<code>22%</code> \u5bf9\u5e94\u7684\u4f4d\u7f6e\u662fHSL\u4e2d\u7684L\u4eae\u5ea6\uff0c\u53e6\u5916\u4e09\u4e2a\u5c5e\u6027\u6682\u4e0d\u77e5\u9053\u5bf9\u5e94\u7684\u989c\u8272\u5728\u54ea\u91cc\uff0c\u4f46\u4ecb\u4e8e\u540d\u5b57\uff0c\u6240\u4ee5\u8ba4\u4e3a\u8fd9\u56db\u4e2a\u5c5e\u6027\u662f\u4e00\u5757\u7684</p> </li> <li> <p><code>--md-code-bg-color</code> \u8bbe\u7f6e\u4ee3\u7801\u5757\u7684\u5e95\u8272\uff0c\u53c2\u6570\u4e0e <code>--md-default-bg-color</code> \u4e00\u6837\uff0c\u6df1\u8272\u6a21\u5f0f\u4e0b\uff0c\u4ee3\u7801\u5757\u7684\u5e95\u8272\u7684\u4eae\u5ea6\u4e00\u822c\u8bbe\u7f6e\u6210\u7f51\u9875\u5e95\u8272\u7684\u4eae\u5ea6 -6%</p> </li> </ul> <p>\u4e0e\u9876\u90e8\u680f\u989c\u8272\u76f8\u5173\u7684\u5c5e\u6027\uff1a</p> <pre><code>  --md-primary-fg-color: hsl(30, 78%, 61%);\n  --md-primary-fg-color--light: hsl(38, 91%, 82%);\n  --md-primary-fg-color--dark: hsl(25, 26%, 34%);\n  --md-primary-bg-color: #fff;\n  --md-primary-bg-color--light: #ffffffb3;\n\n  --md-typeset-a-color: var(--md-primary-fg-color);\n</code></pre> <p><code>--md-primary-fg-color</code> \u662f\u76f4\u63a5\u51b3\u5b9a\u9876\u90e8\u680f\u989c\u8272\u7684\u5c5e\u6027\uff0c\u7528HSL(\u5982 <code>hsl(30, 78%, 61%)</code> )\uff0cHEX(\u5982 <code>#db9aa5</code> )\u5f62\u5f0f\u90fd\u53ef\u4ee5\u8bbe\u7f6e\u989c\u8272</p> <p><code>--md-primary-fg-color--light</code> \u548c <code>--md-primary-fg-color--dark</code> \u867d\u7136\u8fd8\u4e0d\u77e5\u9053\u8fd9\u4e24\u4e2a\u6709\u4ec0\u4e48\u7528\uff0c\u4f46\u662f\u6211\u53c2\u8003\u5b98\u65b9\u6587\u6863\u4ee5\u53ca\u9ed8\u8ba4slate\u4e3b\u9898\u5bf9\u5e94\u7684css\u6587\u4ef6\u4e2d\u7684\u90e8\u5206\uff0c\u5c06light\u8bbe\u7f6e\u6210\u540c\u8272\u7cfb\u7684\u6d45\u8272\uff0cdark\u8bbe\u7f6e\u6210\u540c\u8272\u7cfb\u7684\u6df1\u8272\uff0c\u5982\u4e0a\u9762\u7684\u4ee3\u7801(\u8bbe\u7f6e\u7684\u662f\u9ec4\u8272\u8272\u7cfb)</p> <p><code>--md-typeset-a-color</code> \u662f\u8bbe\u7f6e\u94fe\u63a5\u7b49\u5730\u65b9\u7684\u989c\u8272\uff0c\u76f4\u63a5\u5c06\u5176\u8bbe\u7f6e\u6210\u4e0e\u9876\u90e8\u680f\u989c\u8272\u4e00\u81f4\u5373\u53ef\uff1a</p> <pre><code>  --md-typeset-a-color: var(--md-primary-fg-color);\n</code></pre> <p>\u4e0e\u5f3a\u8c03\u8272\u76f8\u5173\u7684\u5c5e\u6027\uff1a</p> <pre><code>  --md-accent-fg-color: hsl(36, 100%, 45%);\n  --md-accent-fg-color--transparent: #f500561a;\n  --md-accent-bg-color: #fff;\n  --md-accent-bg-color--light: #ffffffb3;\n</code></pre> <p>\u53ea\u7528\u4fee\u6539 <code>--md-accent-fg-color</code> \u5c5e\u6027\u5373\u53ef</p> </li> <li> <p>\u6d45\u8272\u4e3b\u9898\uff1a</p> <p>\u4e0b\u9762\u662f\u6211\u76ee\u524d(\u5176\u4e2d\u4e00\u4e2a\u4e3b\u9898)\u7684\u8bbe\u7f6e\uff1a</p> <pre><code>[data-md-color-scheme=\"forest\"] {\n  --md-hue: 82;\n  --md-default-bg-color: hsla(var(--md-hue), 93%, 90%, 1);\n  --md-default-bg-color--light: hsla(var(--md-hue), 93%, 90%, 0.54);\n  --md-default-bg-color--lighter: hsla(var(--md-hue), 93%, 90%, 0.26);\n  --md-default-bg-color--lightest: hsla(var(--md-hue), 93%, 90%, 0.07);\n  --md-code-bg-color: hsla(var(--md-hue), 58%, 88%, 1);\n\n  --md-primary-fg-color: hsl(38, 100%, 34%);\n  --md-primary-fg-color--light: hsl(38, 91%, 82%);\n  --md-primary-fg-color--dark: hsl(25, 26%, 34%);\n  --md-primary-bg-color: #fff;\n  --md-primary-bg-color--light: #ffffffb3;\n\n  --md-typeset-a-color: var(--md-primary-fg-color);\n\n  --md-accent-fg-color: hsl(36, 100%, 45%);\n  --md-accent-fg-color--transparent: #f500561a;\n  --md-accent-bg-color: #fff;\n  --md-accent-bg-color--light: #ffffffb3;\n\n  --md-admonition-fg-color: var(--md-default-fg-color);\n  --md-admonition-bg-color: var(--md-default-bg-color);\n}\n</code></pre> <p>\u76f8\u5173\u7684\u9009\u9879\u4e0e\u6df1\u8272\u4e3b\u9898\u4e2d\u7684\u8bbe\u7f6e\u90fd\u5dee\u4e0d\u591a\uff0c\u597d\u50cf\u8981\u6ce8\u610f\u7684\u53ea\u6709\u6211\u8bbe\u7f6e\u7684\u6d45\u8272\u6a21\u5f0f\u4e0b\u7684\u4ee3\u7801\u5757\u7684\u5e95\u8272\u4eae\u5ea6\u662f\u6bd4\u7f51\u9875\u5e95\u8272\u8981\u9ad83%\u5de6\u53f3\uff0c\u4ee5\u53ca\u8865\u5145\u76f8\u5e94\u7684\u8bbe\u7f6e(\u53c2\u8003\u914d\u7f6e\u8fc7\u7a0b\u7684\u8bb0\u5f55)</p> </li> </ul> <p><code>css</code> \u6587\u4ef6\u4e2d\u7684 <code>data-md-color-scheme=</code> \u540e\u7684\u5f15\u53f7(\u6ca1\u6709\u5f15\u53f7\u4e5f\u53ef\u4ee5)\u4e2d\u7684\u5185\u5bb9\uff0c\u5c31\u662f\u53ef\u4ee5/\u5e94\u8be5\u5199\u5728 <code>mkdocs.yml</code> \u4e2d <code>scheme:</code> \u540e\u7684\u5173\u952e\u5b57\uff0c\u4f46\u662f\u8981\u6ce8\u610f\uff0c\u5982\u679c\u60f3\u8bbe\u7f6e\u7684\u5173\u952e\u5b57\u4e0d\u6b62\u4e00\u4e2a\u5355\u8bcd\uff0c\u90a3\u4e48 <code>css</code> \u6587\u4ef6\u4e2d\u7684\u8bbe\u7f6e\u5355\u8bcd\u4e4b\u95f4\u5e94\u8be5\u7528\u77ed\u6a2a\u7ebf <code>-</code> \u8fde\u63a5</p> <p><code>mkdocs.yml</code> \u4e2d\u7684\u8bbe\u7f6e\uff1a</p> <p>\u53ef\u4ee5\u6309 Color scheme \u4e2d\u76f4\u63a5\u8bbe\u7f6e <code>scheme</code> \u9009\u9879</p> <p>\u4e5f\u53ef\u4ee5\u6309 Color palette toggle \u8bbe\u7f6e\u591a\u4e2a\u4e3b\u9898\u5207\u6362\uff0c\u800c\u90fd\u662f\u5728\u76f8\u5e94\u7684 <code>scheme</code> \u9009\u9879\u4e4b\u540e\u586b\u5199\u8bbe\u7f6e\u7684\u5bf9\u5e94 \u5173\u952e\u5b57/\u4e3b\u9898\u540d\u5b57 \u5373\u53ef</p>"},{"location":"zh/markdown%E7%9B%B8%E5%85%B3/mkdocs%28material%29/#30","title":"30","text":"<p>\u6dfb\u52a0\u8bc4\u8bba</p> <p>Adding a comment system - Material for MkDocs (squidfunk.github.io)</p> <p>\u9700\u8981\u5148\u5c06github\u4ed3\u5e93\u7684\u8ba8\u8bba\u6253\u5f00(\u53ef\u89c1 \u624b\u518c - github - 6)</p> <p>\u7136\u540e\u6309\u7167\u8bf4\u660e\u6587\u6863\u4e0a\u7684\uff0c\u5b89\u88c5 Giscus GitHub App \u5e76\u7ed9\u5bf9\u5e94\u4ed3\u5e93\u7684\u6743\u9650\uff0c</p> <p>\u7136\u540e\u5728 giscus \u7f51\u9875\u4e0a\u81ea\u884c\u9009\u62e9\u4e00\u4e9b\u9009\u9879\uff0c\u7136\u540e\u751f\u6210\u4e00\u5c0f\u6bb5\u4ee3\u7801</p> <p>\u518d\u5728 <code>mkdocs.yml</code> \u76f8\u540c\u8def\u5f84\u7684 <code>overrides</code> \u6587\u4ef6\u5939\u4e2d(\u5982\u679c\u6ca1\u6709\u5c31\u521b\u5efa\u4e00\u4e2a)\uff0c\u521b\u5efa <code>overrides/partials/comments.html</code> :</p> <pre><code>{% if page.meta.comments %}\n  &lt;h2 id=\"__comments\"&gt;{{ lang.t(\"meta.comments\") }}&lt;/h2&gt;\n  &lt;!-- Insert generated snippet here --&gt;\n\n  &lt;!-- Synchronize Giscus theme with palette --&gt;\n  &lt;script&gt;\n    var giscus = document.querySelector(\"script[src*=giscus]\")\n\n    // Set palette on initial load\n    var palette = __md_get(\"__palette\")\n    if (palette &amp;&amp; typeof palette.color === \"object\") {\n      var theme = palette.color.scheme === \"slate\"\n        ? \"transparent_dark\"\n        : \"light\"\n\n      // Instruct Giscus to set theme\n      giscus.setAttribute(\"data-theme\", theme) \n    }\n\n    // Register event handlers after documented loaded\n    document.addEventListener(\"DOMContentLoaded\", function() {\n      var ref = document.querySelector(\"[data-md-component=palette]\")\n      ref.addEventListener(\"change\", function() {\n        var palette = __md_get(\"__palette\")\n        if (palette &amp;&amp; typeof palette.color === \"object\") {\n          var theme = palette.color.scheme === \"slate\"\n            ? \"transparent_dark\"\n            : \"light\"\n\n          // Instruct Giscus to change theme\n          var frame = document.querySelector(\".giscus-frame\")\n          frame.contentWindow.postMessage(\n            { giscus: { setConfig: { theme } } },\n            \"https://giscus.app\"\n          )\n        }\n      })\n    })\n  &lt;/script&gt;\n{% endif %}\n</code></pre> <p>\u5e76\u5c06 giscus \u7f51\u9875\u4e0a\u751f\u6210\u7684\u4ee3\u7801\u7c98\u8d34\u5230\u6ce8\u91ca\u4e2d\u7684\u5bf9\u5e94\u4f4d\u7f6e</p> <p>\u6b64\u5916</p> <p>\u7531\u4e8e\u6211\u4f7f\u7528\u7684\u662f\u81ea\u5b9a\u4e49\u7684\u989c\u8272\uff0c\u5e76\u4e14\u8bc4\u8bba\u7684\u989c\u8272\u4e5f\u60f3\u8fdb\u884c\u4e00\u4e9b\u4fee\u6539\uff0c\u6240\u4ee5\u5bf9\u4e0a\u9762\u7684\u4ee3\u7801\u8fdb\u884c\u4e00\u4e9b\u4fee\u6539</p> <p>\u9700\u8981\u5173\u6ce8\u4e24\u5904</p> <pre><code>      var theme = palette.color.scheme === \"slate\"\n        ? \"transparent_dark\"\n        : \"light\"\n</code></pre> <p>\u6211\u5c06 <code>\"slate\"</code> \u6539\u6210\u4e86\u6211\u4e4b\u524d\u81ea\u5b9a\u4e49\u7684\u7f51\u9875\u4e3b\u9898 <code>\"sunset-glow-dark\"</code> \uff0c\u5c06 <code>\"transparent_dark\"</code> \u548c <code>\"light\"</code> \u6539\u6210\u4e86\u6211\u8ba4\u4e3a\u66f4\u9002\u5408\u6211\u81ea\u5b9a\u4e49\u4e3b\u9898\u7684\u989c\u8272 <code>\"noborder_dark\"</code> \u548c <code>\"dark_dimmed\"</code></p>"},{"location":"zh/markdown%E7%9B%B8%E5%85%B3/mkdocs%28material%29/#31","title":"31","text":"<p>\u89e3\u51b3 <code>i18n</code> \u63d2\u4ef6\u9996\u9875\u8fdb\u884c\u8bed\u8a00\u5207\u6362\u65f6\uff0c\u8df3\u8f6c\u5230\u4e0d\u5b58\u5728\u7684\u7f51\u5740\u5e76\u663e\u793a404\u9875\u9762\u7684\u95ee\u9898</p> <p>9\u670818\u65e5\u5728 issue \u5411\u4f5c\u8005\u63d0\u95ee</p> <p>Link setting error on homepage (<code>index.md</code> <code>index.html</code>) \u00b7 Issue #261 \u00b7 ultrabug/mkdocs-static-i18n (github.com)</p> <p>\u4f5c\u8005\u5bf9\u6211\u7684 issue \u8fdb\u884c\u56de\u7b54</p> <p>\u89e3\u51b3\u65b9\u6cd5\u662f\uff0c</p> <p>\u9700\u8981\u5728 <code>mkdocs.yml</code> \u6587\u4ef6\u4e2d\uff0c\u6dfb\u52a0 <code>site_url</code> \u7684\u8bbe\u7f6e\uff0c</p> <pre><code>site_url: https://ronaldln.github.io/MyPamphlet\n</code></pre>"},{"location":"zh/markdown%E7%9B%B8%E5%85%B3/mkdocs%28material%29/#32","title":"32","text":"<p>\u975e blog \u9875\u9762\u8bbe\u7f6e \u9875\u9762\u5b57\u6570\u3001\u4ee3\u7801\u884c\u6570\u3001\u9605\u8bfb\u65f6\u95f4\u7edf\u8ba1</p> <p>\u4f7f\u7528 <code>mkdocs-statistics-plugin</code> \u63d2\u4ef6</p> <p>TonyCrane/mkdocs-statistics-plugin: A MkDocs plugin that generate statistic data of a site (github.com)</p> <p>\u5148 <code>pip install</code></p> <pre><code>pip install mkdocs-statistics-plugin\n</code></pre> <p>\u7136\u540e\u5728 <code>mkdocs.yml</code> \u4e2d\u6dfb\u52a0\u8bbe\u7f6e</p> <pre><code>plugins:\n  - statistics\n</code></pre> <p>\u4e00\u4e9b\u53ef\u4ee5\u8bbe\u7f6e\u7684\u9009\u9879\uff1a</p> <ul> <li><code>page_check_metadata</code> : \u9ed8\u8ba4\u4e3a\u7a7a\uff0c\u7528\u4e8e\u7b5b\u9009\u6dfb\u52a0\u7edf\u8ba1\u4fe1\u606f\u7684\u9875\u9762(\u53ea\u5728\u542b\u6709\u6307\u5b9a\u5c5e\u6027\u7684\u9875\u9762\u4e2d\u6dfb\u52a0\u7edf\u8ba1\u4fe1\u606f\uff0c\u5982\u542b\u6709 <code>comments</code> )</li> <li><code>page_read_time</code> : \u9ed8\u8ba4\u4e3a <code>true</code> \uff0c\u8bbe\u7f6e\u662f\u5426\u663e\u793a\u9605\u8bfb\u65f6\u95f4</li> <li><code>page_template</code> : \u9ed8\u8ba4\u4e3a\u7a7a\uff0c\u8bbe\u7f6e\u81ea\u5b9a\u4e49\u7684\u7edf\u8ba1\u4fe1\u606f\u6837\u5f0f\uff0c\u8def\u5f84\u76f8\u5bf9\u4e8e <code>/docs</code> </li> </ul> <p>\u8bbe\u7f6e\u81ea\u5b9a\u4e49\u7684\u7edf\u8ba1\u4fe1\u606f\u6837\u5f0f</p> <p>\u6a21\u677f\u6587\u4ef6\u5728\u4ed3\u5e93\u4e2d\u6709\uff0c<code>mkdocs_statistics_plugin/templates/page_statistics.html</code></p> <p>\u6211\u5728 blog \u4e2d\u8bbe\u7f6e\u4e86\u81ea\u5b9a\u4e49\u7684\u6837\u5f0f\uff0c\u6211\u628a\u6837\u5f0f\u6587\u4ef6\u8bbe\u7f6e\u4e3a <code>/docs/page_template/page_statistics.html</code> \uff0c\u5e76\u7a0d\u52a0\u4e86\u4fee\u6539( <code>&lt;div&gt;</code> \u91cc\u9762\u683c\u5f0f\u4e0e <code>markdown</code> (\u6240\u4ee5\u8981\u6362\u884c\u9700\u8981\u4e24\u884c))</p> <pre><code>&lt;div markdown=\"1\" style=\"margin-top: -30px; font-size: 0.75em; opacity: 0.7;\"&gt;\n&amp;nbsp;\n\n:material-circle-edit-outline: \u7ea6 {{ words }} \u4e2a\u5b57 {% if code_lines != 0 %} \u2022 :fontawesome-solid-code: {{ code_lines }} \u884c\u4ee3\u7801 {% endif %}{% if read_time %}:material-clock-time-two-outline: {% if read_time == 0 %}\u9884\u8ba1\u9605\u8bfb\u65f6\u95f4\u4e0d\u5230 1 \u5206\u949f{% else %}\u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 {{ read_time }} \u5206\u949f{% endif %}{% endif %}\n\n---\n&lt;/div&gt;\n</code></pre> <p><code>mkdocs.yml</code> \u4e2d</p> <pre><code>plugins:\n  - statistics: # \u7edf\u8ba1\u9875\u9762\u5b57\u6570\u3001\u4ee3\u7801\u884c\u6570\u3001\u9605\u8bfb\u65f6\u95f4\n      page_template: \"page_template/page_statistics.html\"\n</code></pre>"},{"location":"zh/markdown%E7%9B%B8%E5%85%B3/mkdocs%28material%29/#33","title":"33","text":"<p>\u5982\u679c\u6362\u7528 Google Font \u4e0a\u6536\u5f55\u7684\u5b57\u4f53\uff0c\u76f4\u63a5\u6309\u7167 Changing the fonts - Material for MkDocs (squidfunk.github.io) \u4e2d\u7684\u65b9\u6cd5\u64cd\u4f5c\u5373\u53ef\uff0c\u4f46\u662f\u8fd9\u79cd\u65b9\u6cd5\u5e94\u8be5\u4e0d\u80fd\u4f7f\u7528\u591a\u4e2a\u5b57\u4f53</p> <p>\u4f7f\u7528\u672a\u88ab Google Font \u6536\u5f55\u7684\u5b57\u4f53\uff0c\u4ee5\u53ca\u4f7f\u7528\u591a\u4e2a\u5b57\u4f53\u7684\u65b9\u6cd5(\u4e2d\u82f1\u6587\u4e0d\u540c\u5b57\u4f53)</p> <p>\u9700\u8981\u627e\u5230\u5b57\u4f53\u7684 <code>css</code> \u6587\u4ef6\uff0cGoogle Font \u4e0a\u7684\u5b57\u4f53\u53ef\u4ee5\u9009\u62e9\u5177\u4f53\u7c97\u7ec6\u89c4\u683c\u540e\uff0c\u70b9\u51fb\u9875\u9762\u53f3\u4e0a\u89d2\u50cf\u8d2d\u7269\u888b\u4e00\u6837\u7684\u56fe\u6807\uff0c\u7136\u540e\u5728\u53f3\u4fa7\u51fa\u73b0\u7684\u4e00\u680f\u4e2d\u627e\u5230 <code>css</code> \u6587\u4ef6\u5bf9\u5e94\u7684\u5730\u5740\uff0c\u4ee5\u53ca\u80fd\u770b\u5230\u5173\u952e\u5b57\uff0c</p> <p>\u6211\u4f7f\u7528\u4e86 Google Font \u4e0a\u7684 \u601d\u6e90\u5b8b\u4f53\uff0c\u5176\u5bf9\u5e94\u5730\u5740</p> <pre><code>https://fonts.googleapis.com/css2?family=Noto+Serif+SC&amp;display=swap\n</code></pre> <p>\u5173\u952e\u5b57\u4e3a <code>Noto Serif SC</code> \uff0c</p> <p>\u5982\u679c\u662f\u672a\u88ab Google Font \u6536\u5f55\u7684\u5b57\u4f53\uff0c\u5219\u9700\u8981\u53e6\u5916\u53bb\u5bfb\u627e\u5176 <code>css</code> \u7684\u5730\u5740\uff0c</p> <p>\u7136\u540e\u5728 <code>mkdocs.yml</code> \u4e2d <code>extra_css</code> \u5904\u52a0\u4e0a\u76f8\u5e94\u7684 <code>css</code> \u5730\u5740\uff0c</p> <p>\u518d\u5728\u8bbe\u7f6e\u81ea\u5b9a\u4e49\u7f51\u9875\u5916\u89c2\u7684 <code>css</code> \u6587\u4ef6\u4e2d(\u6211\u4e0e\u5b98\u65b9\u6587\u6863\u4e0a\u4e00\u6837\uff0c\u4f7f\u7528 <code>docs/stylesheets/extra.css</code> )\u6dfb\u52a0</p> <pre><code>:root {\n  --md-text-font: \"JetBrains Mono\", \"LXGW WenKai Screen\"; \n  --md-code-font: \"JetBrains Mono\", \"Noto Serif SC\";\n}\n</code></pre>"},{"location":"zh/markdown%E7%9B%B8%E5%85%B3/mkdocs%28material%29/#34","title":"34","text":"<p>\u4fee\u6539 \u4ee3\u7801\u5757 \u548c \u884c\u5185\u4ee3\u7801 \u4e2d\u7684 \u5b57\u4f53\u5927\u5c0f \u548c \u884c\u95f4\u8ddd</p> <p>\u8be6\u7ec6\u5c1d\u8bd5/\u8bd5\u9519\u8fc7\u7a0b\u7ec6\u8282\u53c2\u8003 \u8c03\u6574 mkdocs-material \u7f51\u9875\u5916\u89c2\u8fc7\u7a0b\u8bb0\u5f55</p> <p>\u5927\u81f4\u65b9\u6cd5\u662f\uff0c\u5728\u8bbe\u7f6e\u7f51\u9875\u6837\u5f0f\u7684 <code>css</code> \u6587\u4ef6\u4e2d(\u5b98\u65b9\u6587\u6863\u4e2d\u4f7f\u7528\u7684\u662f <code>docs/stylesheets/extra.css</code> \uff0c\u6211\u4f7f\u7528\u7684\u662f <code>docs/stylesheets/custom.css</code> )\uff0c</p> <pre><code>/* \u4fee\u6539\u6240\u6709\u4ee3\u7801\u5b57\u4f53\u5927\u5c0f */\n.md-typeset code {\n  font-size: .65rem;\n}\n\n/* (\u8986\u76d6)\u4fee\u6539\u884c\u5185\u4ee3\u7801\u5b57\u4f53\u5927\u5c0f */\n.md-typeset code:not(pre code) {\n  font-size: inherit;\n}\n\n/* \u4fee\u6539\u4ee3\u7801\u5757\u884c\u95f4\u8ddd */\n.md-typeset pre {\n  line-height: 1.8;\n}\n</code></pre> <p>\u5bf9\u8fd9\u51e0\u4e2a\u5c5e\u6027\u7684\u503c\u8fdb\u884c\u76f8\u5e94\u7684\u4fee\u6539(\u5982\u679c\u6ca1\u6709\u5c5e\u6027\u6dfb\u52a0\u5373\u53ef\uff0c\u4f1a \u8986\u76d6 \u539f\u6709\u7684\u9ed8\u8ba4\u5c5e\u6027\u503c)</p>"},{"location":"zh/markdown%E7%9B%B8%E5%85%B3/mkdocs%28material%29/#35","title":"35","text":"<p>\u4fee\u6539 giscus \u7684\u6837\u5f0f</p> <p>\u8be6\u7ec6\u5c1d\u8bd5/\u8bd5\u9519\u8fc7\u7a0b\u7ec6\u8282\u53c2\u8003 \u8c03\u6574 mkdocs-material \u7f51\u9875\u5916\u89c2\u8fc7\u7a0b\u8bb0\u5f55</p> <p>\u7ecf\u8fc7\u5728\u6d4f\u89c8\u5668\u4e0a\u6d4b\u8bd5\u53d1\u73b0\u4e86\u76f8\u5173\u7684\u51e0\u4e2a\u5c5e\u6027</p> <p></p> <ul> <li><code>--color-btn-primary-text</code> : \u53f3\u4e0b\u89d2  \u4f7f\u7528 Github \u767b\u5f55 \u7684\u6309\u94ae\u5904\uff0c\u8bbe\u7f6e\u5b57\u7684\u989c\u8272</li> <li><code>--color-btn-primary-bg</code> : \u540c\u4e0a\uff0c\u8bbe\u7f6e\u6309\u94ae(\u6574\u4f53\u586b\u5145)\u7684\u989c\u8272</li> <li><code>--color-btn-primary-border</code> : \u540c\u4e0a\uff0c\u8bbe\u7f6e\u6309\u94ae\u8fb9\u6846\u7684\u989c\u8272</li> <li><code>--color-btn-primary-hover-bg</code> : \u8bbe\u7f6e\u5c06\u9f20\u6807\u653e\u7f6e\u5728\u6309\u94ae\u4e0a\u65f6\uff0c\u6309\u94ae(\u6574\u4f53\u586b\u5145)\u7684\u989c\u8272</li> <li><code>--color-btn-primary-hover-border</code> : \u540c\u4e0a\uff0c\u8bbe\u7f6e\u6309\u94ae\u8fb9\u6846\u7684\u989c\u8272</li> <li><code>--color-fg-default</code> : \u8bbe\u7f6e <code>n</code> \u4e2a\u8868\u60c5 \u3001 <code>n</code> \u6761\u8bc4\u8bba \u3001\u8f93\u5165/\u9884\u89c8 (\u9009\u4e2d\u90a3\u4e2a) \u7684\u5b57\u4f53\u989c\u8272</li> <li><code>--color-fg-muted</code> : \u8bbe\u7f6e <code>n</code> \u4e2a\u8868\u60c5 \u4e0b\u7684\u7b11\u8138 \u3001\u8f93\u5165/\u9884\u89c8 (\u6ca1\u9009\u4e2d\u90a3\u4e2a) \u3001\u53f3\u4e0a\u5904 <code>Aa</code> \u3001\u6309\u94ae\u4e0a\u65b9\u7684markdown\u6807\u5fd7 \u7684\u989c\u8272</li> <li><code>--color-canvas-default</code> : \u8bbe\u7f6e \u8f93\u5165 \u548c \u6309\u94ae \u6240\u5728\u7684\u4e2d\u7a7a\u7684(\u6316\u53bb\u4e2d\u95f4\u8f93\u5165\u8bc4\u8bba\u6587\u672c\u7684\u533a\u57df)\u7684\u6846\u7684\u989c\u8272</li> <li><code>--color-canvas-inset</code> : \u8bbe\u7f6e \u4e2d\u95f4\u8f93\u5165\u8bc4\u8bba\u6587\u672c\u7684\u533a\u57df \u7684\u989c\u8272</li> <li><code>--color-canvas-subtle</code> : \u8bbe\u7f6e \u9884\u89c8 \u6240\u5728\u7684\u4e0a\u65b9\u7684\u6846\u7684\u989c\u8272</li> <li><code>--color-border-default</code> : \u8bbe\u7f6e\u6240\u6709\u52fe\u52d2\u8fb9\u6846\u7684\u7ebf\u7684\u989c\u8272</li> <li><code>--color-accent-fg</code> : \u8bbe\u7f6e \u5c06\u9f20\u6807\u79fb\u52a8\u5230 markdown\u6807\u5fd7 \u6216 <code>Aa</code> \u5904\u65f6\uff0c\u4ee5\u53ca\u5728\u8bc4\u8bba\u6587\u672c\u7684\u533a\u57df\u4e2d\u8f93\u5165\u65f6\u533a\u57df\u7684\u6846\uff0c\u6539\u53d8\u7684\u989c\u8272</li> <li><code>--color-btn-primary-selected-bg</code> : \u8bbe\u7f6e\u767b\u5f55\u6309\u94ae\u70b9\u51fb\u65f6\u7684\u989c\u8272</li> <li><code>--color-btn-primary-disabled-text</code> : \u8bbe\u7f6e\u767b\u5f55\u4e4b\u540e\uff0c\u8bc4\u8bba\u6309\u94ae\u7684\u8bc4\u8bba\u4e24\u4e2a\u5b57\u7684\u989c\u8272</li> <li><code>--color-btn-primary-disabled-bg</code> : \u540c\u4e0a\uff0c\u8bc4\u8bba\u6309\u94ae\u7684\u989c\u8272</li> <li><code>--color-btn-primary-disabled-border</code> : \u540c\u4e0a\uff0c\u8bc4\u8bba\u6309\u94ae\u8fb9\u6846\u7684\u989c\u8272</li> </ul> <p>\u7136\u540e\u57fa\u4e8e giscus \u5df2\u6709\u4e3b\u9898\u7684 css \u6587\u4ef6\u8fdb\u884c\u4fee\u6539\uff0c\u5982 <code>light</code> <code>noborder_dark</code> \uff0c\u5c06\u5bf9\u5e94\u7684\u5c5e\u6027\u7684\u503c\u8bbe\u7f6e\u6210\u81ea\u5df1\u60f3\u8bbe\u7f6e\u7684\u5c31\u53ef\u4ee5\u4e86\uff0c</p> <p>\u6700\u540e\u6211\u4fee\u6539\u5b8c\u7684</p> giscus_sunset_glow.cssgiscus_sunset_glow_dark.css giscus_sunset_glow.css <pre><code>/*! MIT License\n* Copyright (c) 2018 GitHub Inc.\n* https://github.com/primer/primitives/blob/main/LICENSE\n*/\nmain {\n--color-prettylights-syntax-comment: #6e7781;\n--color-prettylights-syntax-constant: #0550ae;\n--color-prettylights-syntax-entity: #8250df;\n--color-prettylights-syntax-storage-modifier-import: #24292f;\n--color-prettylights-syntax-entity-tag: #116329;\n--color-prettylights-syntax-keyword: #cf222e;\n--color-prettylights-syntax-string: #0a3069;\n--color-prettylights-syntax-variable: #953800;\n--color-prettylights-syntax-brackethighlighter-unmatched: #82071e;\n--color-prettylights-syntax-invalid-illegal-text: #f6f8fa;\n--color-prettylights-syntax-invalid-illegal-bg: #82071e;\n--color-prettylights-syntax-carriage-return-text: #f6f8fa;\n--color-prettylights-syntax-carriage-return-bg: #cf222e;\n--color-prettylights-syntax-string-regexp: #116329;\n--color-prettylights-syntax-markup-list: #3b2300;\n--color-prettylights-syntax-markup-heading: #0550ae;\n--color-prettylights-syntax-markup-italic: #24292f;\n--color-prettylights-syntax-markup-bold: #24292f;\n--color-prettylights-syntax-markup-deleted-text: #82071e;\n--color-prettylights-syntax-markup-deleted-bg: #ffebe9;\n--color-prettylights-syntax-markup-inserted-text: #116329;\n--color-prettylights-syntax-markup-inserted-bg: #dafbe1;\n--color-prettylights-syntax-markup-changed-text: #953800;\n--color-prettylights-syntax-markup-changed-bg: #ffd8b5;\n--color-prettylights-syntax-markup-ignored-text: #eaeef2;\n--color-prettylights-syntax-markup-ignored-bg: #0550ae;\n--color-prettylights-syntax-meta-diff-range: #8250df;\n--color-prettylights-syntax-brackethighlighter-angle: #57606a;\n--color-prettylights-syntax-sublimelinter-gutter-mark: #8c959f;\n--color-prettylights-syntax-constant-other-reference-link: #0a3069;\n--color-btn-text: #24292f;\n--color-btn-bg: #f6f8fa;\n--color-btn-border: #1f232826;\n--color-btn-shadow: 0 1px 0 #1f23280a;\n--color-btn-inset-shadow: inset 0 1px 0 #ffffff40;\n--color-btn-hover-bg: #f3f4f6;\n--color-btn-hover-border: #1f232826;\n--color-btn-active-bg: #ebecf0;\n--color-btn-active-border: #1f232826;\n--color-btn-selected-bg: #eeeff2;\n/* --color-btn-primary-text: #fff; */\n/* --color-btn-primary-bg: #1f883d; */\n/* --color-btn-primary-border: #1f232826; */\n--color-btn-primary-shadow: 0 1px 0 #1f23281a;\n--color-btn-primary-inset-shadow: inset 0 1px 0 #ffffff08;\n/* --color-btn-primary-hover-bg: #1a7f37; */\n/* --color-btn-primary-hover-border: #1f232826; */\n/* --color-btn-primary-selected-bg: #187733; */\n--color-btn-primary-selected-shadow: inset 0 1px 0 #002d1133;\n/* --color-btn-primary-disabled-text: #fffc; */\n/* --color-btn-primary-disabled-bg: #94d3a2; */\n/* --color-btn-primary-disabled-border: #1f232826; */\n--color-action-list-item-default-hover-bg: #d0d7de52;\n--color-segmented-control-bg: #eaeef2;\n--color-segmented-control-button-bg: #fff;\n--color-segmented-control-button-selected-border: #8c959f;\n/* --color-fg-default: #1f2328; */\n/* --color-fg-muted: #656d76; */\n--color-fg-subtle: #6e7781;\n/* --color-canvas-default: #fff; */\n--color-canvas-overlay: #fff;\n/* --color-canvas-inset: #f6f8fa; */\n/* --color-canvas-subtle: #f6f8fa; */\n/* --color-border-default: #d0d7de; */\n--color-border-muted: #d8dee4;\n--color-neutral-muted: #afb8c133;\n/* --color-accent-fg: #0969da; */\n--color-accent-emphasis: #0969da;\n--color-accent-muted: #54aeff66;\n--color-accent-subtle: #ddf4ff;\n--color-success-fg: #1a7f37;\n--color-attention-fg: #9a6700;\n--color-attention-muted: #d4a72c66;\n--color-attention-subtle: #fff8c5;\n--color-danger-fg: #d1242f;\n--color-danger-muted: #ff818266;\n--color-danger-subtle: #ffebe9;\n--color-primer-shadow-inset: inset 0 1px 0 #d0d7de33;\n--color-scale-gray-1: #eaeef2;\n--color-scale-blue-1: #b6e3ff;\n\n/*! Extensions from @primer/css/alerts/flash.scss */\n--color-social-reaction-bg-hover: var(--color-scale-gray-1);\n--color-social-reaction-bg-reacted-hover: var(--color-scale-blue-1);\n\n/* Custom style for sunset-glow mode */\n--primary-default: 123, 117, 165;\n--bg-default: 219, 154, 165;\n--color-btn-primary-text: #000000de;\n--color-btn-primary-bg: rgba(var(--primary-default), 0.45);\n--color-btn-primary-border: rgba(var(--primary-default), 0.5);\n--color-btn-primary-hover-bg: rgba(var(--primary-default), 0.3);\n--color-btn-primary-hover-border: rgba(var(--primary-default), 0.75);\n--color-btn-primary-selected-bg: rgba(var(--primary-default), 0.75);\n--color-btn-primary-disabled-text: #000000de;\n--color-btn-primary-disabled-bg: var(--color-btn-primary-bg);\n--color-btn-primary-disabled-border: var(--color-btn-primary-border);\n--color-fg-default: #000000de;\n--color-fg-muted: #0000008a;\n--color-canvas-default: hsl(322 21% 77% / 1);\n--color-canvas-inset: hsl(0 21% 87% / 1);\n--color-canvas-subtle: hsl(274 21% 70% / 1);\n--color-border-default: hsl(274 21% 70% / 1);\n--color-accent-fg: hsl(274 21% 70% / 1);\n}\n\nmain .pagination-loader-container {\nbackground-image: url(https://github.com/images/modules/pulls/progressive-disclosure-line.svg)\n}\n\nmain .gsc-loading-image {\nbackground-image: url(https://github.githubassets.com/images/mona-loading-default.gif)\n}\n</code></pre> giscus_sunset_glow_dark.css <pre><code>main {\n--primary-default: 20, 222, 155;\n--bg-default: 22, 22, 24;\n--color-prettylights-syntax-comment: #8b949e;\n--color-prettylights-syntax-constant: #79c0ff;\n--color-prettylights-syntax-entity: #d2a8ff;\n--color-prettylights-syntax-storage-modifier-import: #c9d1d9;\n--color-prettylights-syntax-entity-tag: #7ee787;\n--color-prettylights-syntax-keyword: #ff7b72;\n--color-prettylights-syntax-string: #a5d6ff;\n--color-prettylights-syntax-variable: #ffa657;\n--color-prettylights-syntax-brackethighlighter-unmatched: #f85149;\n--color-prettylights-syntax-invalid-illegal-text: #f0f6fc;\n--color-prettylights-syntax-invalid-illegal-bg: #8e1519;\n--color-prettylights-syntax-carriage-return-text: #f0f6fc;\n--color-prettylights-syntax-carriage-return-bg: #b62324;\n--color-prettylights-syntax-string-regexp: #7ee787;\n--color-prettylights-syntax-markup-list: #f2cc60;\n--color-prettylights-syntax-markup-heading: #1f6feb;\n--color-prettylights-syntax-markup-italic: #c9d1d9;\n--color-prettylights-syntax-markup-bold: #c9d1d9;\n--color-prettylights-syntax-markup-deleted-text: #ffdcd7;\n--color-prettylights-syntax-markup-deleted-bg: #67060c;\n--color-prettylights-syntax-markup-inserted-text: #aff5b4;\n--color-prettylights-syntax-markup-inserted-bg: #033a16;\n--color-prettylights-syntax-markup-changed-text: #ffdfb6;\n--color-prettylights-syntax-markup-changed-bg: #5a1e02;\n--color-prettylights-syntax-markup-ignored-text: #c9d1d9;\n--color-prettylights-syntax-markup-ignored-bg: #1158c7;\n--color-prettylights-syntax-meta-diff-range: #d2a8ff;\n--color-prettylights-syntax-brackethighlighter-angle: #8b949e;\n--color-prettylights-syntax-sublimelinter-gutter-mark: #484f58;\n--color-prettylights-syntax-constant-other-reference-link: #a5d6ff;\n--color-btn-text: #ebebf5db;\n--color-btn-bg: rgba(var(--bg-default), 1);\n--color-btn-border: rgba(var(--bg-default), 1);\n--color-btn-shadow: 0 1px 0 rgba(var(--bg-default), 1);\n--color-btn-inset-shadow: inset 0 1px 0 rgba(var(--bg-default), 1);\n--color-btn-hover-bg: rgba(var(--bg-default), 0.5);\n--color-btn-hover-border: rgba(var(--bg-default), 0.5);\n--color-btn-active-bg: rgba(var(--primary-default), 0.2);\n--color-btn-active-border: rgba(var(--primary-default), 1);\n--color-btn-selected-bg: rgba(var(--primary-default), 0.15);\n/* --color-btn-primary-text: #fff; */\n/* --color-btn-primary-bg: rgba(var(--primary-default), 0.45); */\n/* --color-btn-primary-border: rgba(var(--primary-default), 0.5); */\n--color-btn-primary-shadow: 0 1px 0 #1b1f241a;\n--color-btn-primary-inset-shadow: inset 0 1px 0 #ffffff08;\n/* --color-btn-primary-hover-bg: rgba(var(--primary-default), 0.53); */\n/* --color-btn-primary-hover-border: rgba(var(--primary-default), 0.75); */\n/* --color-btn-primary-selected-bg: rgba(var(--primary-default), 0.45); */\n--color-btn-primary-selected-shadow: inset 0 1px 0 #002d1133;\n/* --color-btn-primary-disabled-text: #fffc; */\n/* --color-btn-primary-disabled-bg: rgba(var(--primary-default), 0.5); */\n/* --color-btn-primary-disabled-border: rgba(var(--primary-default), 0.5); */\n--color-action-list-item-default-hover-bg: #b1bac41f;\n--color-segmented-control-bg: #6e76811a;\n--color-segmented-control-button-bg: #0d1117;\n--color-segmented-control-button-selected-border: rgba(var(--bg-default), 0.85);\n/* --color-fg-default: #ebebf5db; */\n/* --color-fg-muted: #ebebf599; */\n--color-fg-subtle: #ebebf580;\n/* --color-canvas-default: #1e1e20; */\n--color-canvas-overlay: #1e1e20;\n/* --color-canvas-inset: rgba(var(--bg-default), 0.85); */\n/* --color-canvas-subtle: rgba(var(--bg-default), 1); */\n/* --color-border-default: rgba(var(--bg-default), 0.85); */\n--color-border-muted: #afb8c133;\n--color-neutral-muted: #afb8c133;\n/* --color-accent-fg: rgba(var(--primary-default), 0.85); */\n--color-accent-emphasis: rgba(var(--primary-default), 0.95);\n--color-accent-muted: rgba(var(--primary-default), 0.4);\n--color-accent-subtle: rgba(var(--primary-default), 0.1);\n--color-success-fg: #3fb950;\n--color-attention-fg: #d29922;\n--color-attention-muted: #bb800966;\n--color-attention-subtle: #bb800926;\n--color-danger-fg: #f85149;\n--color-danger-muted: #f8514966;\n--color-danger-subtle: #f851491a;\n--color-primer-shadow-inset: 0 1px 0 rgba(var(--bg-default), 1), inset 0 1px 0 rgba(var(--bg-default), 1);\n--color-scale-gray-7: #161618;\n--color-scale-blue-8: #10b98126;\n\n/*! Extensions from @primer/css/alerts/flash.scss */\n--color-social-reaction-bg-hover: var(--color-scale-gray-7);\n--color-social-reaction-bg-reacted-hover: var(--color-scale-blue-8);\n\n/* Custom style for sunset-glow mode */\n--custom-primary-default: 123, 117, 165;\n/* --custom-bg-default: 219, 154, 165; */\n--color-btn-primary-text: #fcece9;\n--color-btn-primary-bg: rgba(var(--custom-primary-default), 0.85);\n--color-btn-primary-border: rgba(var(--custom-primary-default), 0.5);\n--color-btn-primary-hover-bg: rgba(var(--custom-primary-default), 0.7);\n--color-btn-primary-hover-border: rgba(var(--custom-primary-default), 0.35);\n--color-btn-primary-selected-bg: rgba(var(--custom-primary-default), 0.5);\n--color-btn-primary-disabled-text: #fcece9;\n--color-btn-primary-disabled-bg: var(--color-btn-primary-bg);\n--color-btn-primary-disabled-border: var(--color-btn-primary-border);\n--color-fg-default: #fcece9;\n--color-fg-muted: #a4908c;\n--color-canvas-default: hsl(309 5% 15% / 1);\n--color-canvas-inset: hsl(8 5% 12% / 1);\n--color-canvas-subtle: rgb(75 59 92);\n--color-border-default: rgba(0, 0, 0, 0);\n--color-accent-fg: rgba(var(--custom-primary-default), 0.7);\n}\n\nmain .pagination-loader-container {\nbackground-image: url(https://github.com/images/modules/pulls/progressive-disclosure-line-dark.svg)\n}\n\nmain .gsc-loading-image {\nbackground-image: url(https://github.githubassets.com/images/mona-loading-dark.gif)\n}\n</code></pre> <p>\u7136\u540e\uff0c\u9700\u8981\u5728\u4e4b\u524d\u8bbe\u7f6egiscus\u65f6\u4f7f\u7528\u7684 <code>comments.html</code> \u4e2d\uff0c\u5c06css\u6587\u4ef6\u6dfb\u52a0\u5230\u4e24\u5904\u8bbe\u7f6e\u4e3b\u9898\u7684\u4ee3\u7801\u4e2d</p> <pre><code>      var theme = palette.color.scheme === \"sunset-glow-dark\"\n        ? \"https://cdn.jsdelivr.net/gh/RonaldLN/MyPamphlet-Blog@main/docs/stylesheets/giscus_sunset_glow_dark.css\"\n        : \"https://cdn.jsdelivr.net/gh/RonaldLN/MyPamphlet-Blog@main/docs/stylesheets/giscus_sunset_glow.css\"\n</code></pre> <p>\u4ee5\u53ca</p> <pre><code>{% if page.meta.comments %}\n  ...\n  &lt;script src=\"https://giscus.app/client.js\"\n        ...\n        data-theme=\"https://cdn.jsdelivr.net/gh/RonaldLN/MyPamphlet-Blog@main/docs/stylesheets/giscus_sunset_glow.css\"\n        ...\n        async&gt;\n  &lt;/script&gt;\n...\n{% endif %}\n</code></pre> <p>\u8fd9\u91cc\u662f\u4f7f\u7528\u4e86 jsdelivr \u7f51\u7ad9 \u6765\u5bf9github\u4ed3\u5e93\u4e2d\u7684\u6587\u4ef6\u8fdb\u884c cdn \u52a0\u901f(\u4e0d\u9700\u8981\u6ce8\u518c\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528)\uff0c\u4f7f\u7528\u65b9\u6cd5\u53ef\u4ee5\u53c2\u8003\u7f51\u7ad9\u7684\u8bf4\u660e\u6587\u6863</p> <p>Documentation - jsDelivr</p>"},{"location":"zh/markdown%E7%9B%B8%E5%85%B3/mkdocs%28material%29/#36","title":"36","text":"<p>\u8bbe\u7f6e\u53f3\u4fa7 toc \u76ee\u5f55\u81ea\u52a8\u5c55\u5f00\u6298\u53e0</p> <p>\u8be6\u7ec6\u5c1d\u8bd5/\u8bd5\u9519\u8fc7\u7a0b\u7ec6\u8282\u53c2\u8003 \u8c03\u6574 mkdocs-material \u7f51\u9875\u5916\u89c2\u8fc7\u7a0b\u8bb0\u5f55</p> <p>\u4e3b\u8981\u662f\u53c2\u8003\u4e86 \u9e64\u7fd4\u4e07\u91cc\u7684\u7b14\u8bb0\u672c (tonycrane.cc) \u4f5c\u8005\u4ed3\u5e93\u4e2d\u7684\u8bbe\u7f6e\uff0c</p> <p>\u5c06\u4ed3\u5e93\u4e2d\u7684 <code>docs/css/fold_toc.css</code> \u548c <code>docs/js/toc.js</code> \u4e0b\u8f7d\u5230 <code>docs/javascripts/toc.js</code> \u548c <code>docs/stylesheets/fold_toc.css</code> \u4e2d(\u4e5f\u53ef\u4ee5\u653e\u7f6e\u5728\u5176\u4ed6\u8def\u5f84\uff0c\u5728\u4e4b\u540e\u7684\u8bbe\u7f6e\u4e2d\u76f8\u5e94\u4fee\u6539\u5373\u53ef)</p> <p>\u7136\u540e\u5728 <code>overrides/main.html</code> (\u5982\u679c\u6ca1\u6709\u521b\u5efa\u5373\u53ef)\u4e2d\u8986\u5199 <code>site_nav</code> \u5757(\u53ef\u53c2\u8003\u5b98\u65b9\u6587\u6863 Overriding blocks)\uff0c\u5bfc\u5165\u8fd9\u4e24\u4e2a\u6587\u4ef6\u5373\u53ef</p> <pre><code>{% extends \"base.html\" %}\n\n{% block site_nav %}\n  &lt;!-- Add scripts that need to run before here --&gt;\n  {{ super() }}\n  &lt;!-- Add scripts that need to run afterwards here --&gt;\n  {% if page.toc and not \"toc.integrate\" in features %}\n    &lt;script src=\"https://cdn.jsdelivr.net/gh/RonaldLN/MyPamphlet@main/docs/javascripts/toc.js\" defer&gt;&lt;/script&gt;\n    &lt;link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/gh/RonaldLN/MyPamphlet@main/docs/stylesheets/fold_toc.css\"&gt;\n  {% endif %}\n{% endblock %}\n</code></pre>"},{"location":"zh/markdown%E7%9B%B8%E5%85%B3/mkdocs%28material%29/#37","title":"37","text":"<p>\u66f4\u6539 blog index\u9875\u9762\u4e2d \u6bcf\u7bc7\u535a\u5ba2\u7684\u6458\u5f55 excerpt \u90e8\u5206\u7684\u6837\u5f0f</p> <p>\u57fa\u4e8e\u5b98\u65b9\u6587\u6863\u4e2d\u7684 Setup and theme structure \uff0c\u8bbe\u7f6e <code>overrides/partials/post.html</code> \uff0c</p> <p>\u56e0\u4e3a <code>partials/post.html</code> \u5904\u7684\u6ce8\u91ca\u5199\u7740 <code># Blog post excerpt</code> \uff0c\u8bf4\u660e\u8fd9\u4e2a\u662f\u8bbe\u7f6e\u6bcf\u7bc7\u535a\u5ba2\u7684\u6458\u5f55 excerpt \u7684\u6837\u5f0f\u7684</p> <p>\u7136\u540e\u7531\u4e8e\u6211\u4e4b\u524d\u7684\u7ecf\u9a8c\uff0c\u7528\u9664\u4e86 <code>main.html</code> \u4e4b\u5916\u7684\u5176\u4ed6\u6587\u4ef6\u8fdb\u884c\u8986\u5199\u65f6\uff0c\u90fd\u4e0d\u80fd\u4f7f\u7528 <code>{{ super() }}</code> \u6765\u83b7\u53d6\u9ed8\u8ba4\u7684\u4ee3\u7801( <code>main.html</code> \u4e3b\u8981\u662f\u62ff\u6765\u8986\u5199\u5757 block \u7684\uff0c\u53c2\u8003 Overriding blocks)\uff0c</p> <p>\u6240\u4ee5\u6211\u67e5\u770b\u5b98\u65b9\u6587\u6863\u7684\u4ed3\u5e93\u4e2d\u662f\u5426\u6709\u5bf9\u5e94\u7684\u6a21\u677f\uff0c\u7136\u540e\u53d1\u73b0 <code>material/templates/</code> \u4e2d\u6709\u6a21\u677f\uff0c\u4e8e\u662f\u590d\u5236 <code>post.html</code> \u7684\u4ee3\u7801</p> <p>mkdocs-material/material/templates/partials/post.html at master \u00b7 squidfunk/mkdocs-material (github.com) </p> <p>\u7136\u540e\u53bb\u751f\u6210\u7684\u9875\u9762\u4e2d\u67e5\u770b\u8981\u4fee\u6539\u7684\u5730\u65b9\u7684\u5bf9\u5e94\u6e90\u4ee3\u7801\uff0c</p> <p></p> <p>\u518d\u5728 <code>post.html</code> \u4e2d\u627e\u5230\u76f8\u5e94\u7684\u4ee3\u7801\u90e8\u5206</p> <pre><code>&lt;div class=\"md-post__content md-typeset\"&gt;\n  {{ post.content }}\n  &lt;nav class=\"md-post__action\"&gt;\n    &lt;a href=\"{{ post.url | url }}\"&gt;\n      {{ lang.t(\"blog.continue\") }}\n    &lt;/a&gt;\n  &lt;/nav&gt;\n&lt;/div&gt;\n</code></pre> <p>\u7ecf\u8fc7\u51e0\u6b21\u5c1d\u8bd5\u540e\uff0c\u6700\u540e\u6211\u4fee\u6539\u4e3a\u4e86</p> <pre><code>&lt;div class=\"md-post__content md-typeset\"&gt;\n  {{ post.content }}\n  &lt;nav class=\"md-post__action\"&gt;\n    &lt;a href=\"{{ post.url | url }}\"&gt;\n      ...\n      &lt;br /&gt;\n      {{ lang.t(\"blog.continue\") }}\n    &lt;/a&gt;\n    &lt;hr&gt;\n  &lt;/nav&gt;\n&lt;/div&gt;\n</code></pre> post.html <pre><code>{#-\n  This file was automatically generated - do not edit\n-#}\n&lt;article class=\"md-post md-post--excerpt\"&gt;\n  &lt;header class=\"md-post__header\"&gt;\n    {% if post.authors %}\n      &lt;nav class=\"md-post__authors md-typeset\"&gt;\n        {% for author in post.authors %}\n          &lt;span class=\"md-author\"&gt;\n            &lt;img src=\"{{ author.avatar }}\" alt=\"{{ author.name }}\"&gt;\n          &lt;/span&gt;\n        {% endfor %}\n      &lt;/nav&gt;\n    {% endif %}\n    &lt;div class=\"md-post__meta md-meta\"&gt;\n      &lt;ul class=\"md-meta__list\"&gt;\n        &lt;li class=\"md-meta__item\"&gt;\n          &lt;time datetime=\"{{ post.config.date.created }}\"&gt;\n            {{- post.config.date.created | date -}}\n          &lt;/time&gt;\n          {#- Collapse whitespace -#}\n        &lt;/li&gt;\n        {% if post.categories %}\n          &lt;li class=\"md-meta__item\"&gt;\n            {{ lang.t(\"blog.categories.in\") }}\n            {% for category in post.categories %}\n              &lt;a href=\"{{ category.url | url }}\" class=\"md-meta__link\"&gt;\n                {{- category.title -}}\n              &lt;/a&gt;\n              {%- if loop.revindex &gt; 1 %}, {% endif -%}\n            {% endfor -%}\n          &lt;/li&gt;\n        {% endif %}\n        {% if post.config.readtime %}\n          {% set time = post.config.readtime %}\n          &lt;li class=\"md-meta__item\"&gt;\n            {% if time == 1 %}\n              {{ lang.t(\"readtime.one\") }}\n            {% else %}\n              {{ lang.t(\"readtime.other\") | replace(\"#\", time) }}\n            {% endif %}\n          &lt;/li&gt;\n        {% endif %}\n      &lt;/ul&gt;\n      {% if post.config.draft %}\n        &lt;span class=\"md-draft\"&gt;\n          {{ lang.t(\"blog.draft\") }}\n        &lt;/span&gt;\n      {% endif %}\n    &lt;/div&gt;\n  &lt;/header&gt;\n  &lt;div class=\"md-post__content md-typeset\"&gt;\n    {{ post.content }}\n    &lt;nav class=\"md-post__action\"&gt;\n      &lt;a href=\"{{ post.url | url }}\"&gt;\n        ...\n        &lt;br /&gt;\n        {{ lang.t(\"blog.continue\") }}\n      &lt;/a&gt;\n      &lt;hr&gt;\n    &lt;/nav&gt;\n  &lt;/div&gt;\n&lt;/article&gt;\n</code></pre> <p>\u6700\u540e\u6548\u679c</p> \u4fee\u6539\u540e\u4fee\u6539\u524d <p></p> <p></p>"},{"location":"zh/markdown%E7%9B%B8%E5%85%B3/mkdocs%28material%29/#38","title":"38","text":"<p>\u7ed9\u5355\u4e2a\u9875\u9762\u9690\u85cf\u53f3\u4fa7\u76ee\u5f55\u680f\u6216\u8005\u5de6\u4fa7\u5bfc\u822a\u680f</p> <p>Hiding the sidebars</p> <pre><code>---\nhide:\n  - navigation\n  - toc\n---\n\n# Page title\n...\n</code></pre>"},{"location":"zh/markdown%E7%9B%B8%E5%85%B3/mkdocs%28material%29/#39","title":"39","text":"<p>\u5982\u679c\u4f7f\u7528html\u4e2d\u7684\u6807\u9898 <code>&lt;h1&gt;</code> <code>&lt;h2&gt;</code> <code>&lt;h3&gt;</code> <code>&lt;h4&gt;</code> <code>&lt;h5&gt;</code> <code>&lt;h6&gt;</code> \uff0c\u5982</p> <pre><code>...\n\n&lt;h1&gt;My Title&lt;/h1&gt;\n\n...\n</code></pre> <p>\u90a3\u4e48\u5728\u751f\u6210\u7684\u7f51\u9875\u7684\u53f3\u4fa7\u76ee\u5f55\u4e2d\uff0c\u8fd9\u6837\u7684\u6807\u9898\u4e0d\u4f1a\u51fa\u73b0\u5728\u76ee\u5f55\u91cc\u3002</p> <p>\u4f46\u8fd9\u6837\u7684\u5199\u6cd5\u91ccmarkdown\u8bed\u6cd5(\u5982\u52a0\u7c97 \u884c\u5185\u4ee3\u7801\u7b49)\u65e0\u6cd5\u4f7f\u7528</p>"},{"location":"zh/markdown%E7%9B%B8%E5%85%B3/mkdocs%28material%29/#40","title":"40","text":"<p>\u4ee3\u7801\u5757\u7684\u884c\u53f7\u7684\u9ed8\u8ba4\u5b57\u4f53\u5927\u5c0f\u662f <code>.85em</code> \uff0c\u5982\u679c\u4fee\u6539\u4e86\u4ee3\u7801\u5757\u7684\u5b57\u4f53\u5927\u5c0f\uff0c\u5e76\u9700\u8981\u663e\u793a\u884c\u53f7\uff0c\u884c\u53f7\u7684\u914d\u7f6e\u4e5f\u9700\u8981\u4e00\u5e76\u4fee\u6539</p> docs/stylesheets/custom.css<pre><code>/* \u4fee\u6539\u4ee3\u7801\u5757\u884c\u53f7(\u6570\u5b57)\u7684\u5b57\u4f53\u5927\u5c0f */\n.highlighttable .linenos {\n  /* font-size: 0.93em; */\n  font-size: .65rem;\n}\n</code></pre>"},{"location":"zh/markdown%E7%9B%B8%E5%85%B3/mkdocs%28material%29/#41","title":"41","text":"<p>\u7c7b\u4f3c\u4e8e\u56fe\u50cf\u5ef6\u8fdf\u52a0\u8f7d\u7684\u65b9\u5f0f\uff0c\u53ef\u4ee5\u5728\u56fe\u50cf\u4e4b\u540e\u7684\u52a0 <code>{}</code> \u5e76\u5728\u5176\u4e2d\u6dfb\u52a0 <code>style=\"zoom:n%\"</code> \u6765\u8c03\u6574\u56fe\u50cf\u7f29\u653e\u6bd4\u4f8b</p> <p>\u793a\u4f8b</p> <pre><code>![xxx](.../xxx.png){ loading=lazy style=\"zoom:33%\" }\n</code></pre>"},{"location":"zh/markdown%E7%9B%B8%E5%85%B3/mkdocs%28material%29/#42","title":"42","text":"<p>\u53ef\u4ee5\u501f\u52a9mkdocs-awesome-nav\u63d2\u4ef6\u6765(\u90e8\u5206)\u8986\u76d6\u5bfc\u822a\u4e2d\u6587\u4ef6\u5939\u7684\u6807\u9898\uff0c\u4f8b\u5982\uff1a</p> .nav.yml<pre><code>nav:\n    - index.md\n    - \u6a21\u5757: modules\n    - \"*\"\n</code></pre> <p>\u53c2\u8003\u5b98\u65b9\u6587\u6863</p> <p>Custom Navigation - Awesome Nav for MkDocs</p> \u4fee\u6539\u524d\u4fee\u6539\u540e <p></p> <p></p> <p>\u4ece\u8fd9\u4e2aissue\u4e2d</p> <p>Question about the automatic navigation menu \u00b7 squidfunk/mkdocs-material \u00b7 Discussion #4684</p> <p>sennewood\u7684\u56de\u590d\u4e2d\u5f97\u77e5\u4e86\u8fd9\u4e2a\u63d2\u4ef6</p>"},{"location":"zh/python%E7%9B%B8%E5%85%B3/matplotlib/","title":"Matplotlib","text":"<p> \u7ea6 950 \u4e2a\u5b57  90 \u884c\u4ee3\u7801  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 4 \u5206\u949f</p>"},{"location":"zh/python%E7%9B%B8%E5%85%B3/matplotlib/#1","title":"1","text":"<p>\u901a\u8fc7 <code>figure(num)</code> \u65b9\u6cd5\u521b\u5efa\u591a\u4e2a\u7a97\u53e3\uff0c\u5e76\u4e14\u53ef\u4ee5\u901a\u8fc7\u53c2\u6570 <code>figsize=(width, height)</code> \u8bbe\u7f6e\u7a97\u53e3\u7684\u5927\u5c0f</p> <p>\u4e14\uff0c\u8bbe\u7f6e\u56fe\u4f8b( <code>legned()</code> )\u3001\u5750\u6807\u8f74\u6807\u7b7e\u548c\u6807\u9898( <code>title(\"text\")</code> )\u7684\u51fd\u6570\u53ea\u5bf9\u4ee3\u7801\u4e2d\u6700\u8fd1\u7684\u7a97\u53e3\u6709\u6548</p>"},{"location":"zh/python%E7%9B%B8%E5%85%B3/matplotlib/#2","title":"2","text":"<p>\u4fdd\u5b58\u56fe\u50cf\u7684\u65b9\u6cd5</p> <pre><code>from matplotlib import pyplot as plt\n</code></pre> <p><code>plt.savefig()</code> \u53ef\u4ee5\u628a\u56fe\u50cf\u4fdd\u5b58\u6210\u56fe\u7247\uff0c\u4f46\u662f\u4f1a\u628a\u4e4b\u524d\u6dfb\u52a0\u8fc7\u7684\u6570\u636e\u90fd\u653e\u5728\u4e00\u4e2a\u56fe\u91cc\u9762</p> <p>\u6211\u5c31\u6bcf\u6b21\u8f93\u51fa\u6210\u6587\u4ef6\u540e\u6e05\u9664\u6570\u636e</p> <pre><code>plt.savefig(path + '.png')\nplt.clf()\n</code></pre>"},{"location":"zh/python%E7%9B%B8%E5%85%B3/matplotlib/#3","title":"3","text":"<pre><code>import matplotlib\n\nfig = matplotlib.pyplot.figure()\n</code></pre> <p>\u76f4\u63a5\u4f7f\u7528\u4f1a\u62a5\u9519</p> <pre><code>AttributeError: module 'matplotlib' has no attribute 'pyplot'\n</code></pre> <p>\u9700\u8981\u5355\u72ec\u8fdb\u884c\u5bfc\u5165</p> <pre><code>import matplotlib.pyplot as plt\n</code></pre> <p>\u4ee3\u7801\u4e2d\u8fdb\u884c\u76f8\u5e94\u7684\u4fee\u6539\u5c31\u53ef\u4ee5\u6b63\u5e38\u4f7f\u7528</p> chat log <p>user: </p> <p>matplotlib\u600e\u4e48\u6253\u5370\u4e24\u5f20\u56fe\uff1f</p> <p>chatgpt: </p> <p>\u8981\u5728 Matplotlib \u4e2d\u6253\u5370\u4e24\u5f20\u56fe\uff0c\u53ef\u4ee5\u4f7f\u7528 <code>plt.subplot()</code> \u51fd\u6570\u6216 <code>plt.subplots()</code> \u51fd\u6570\u6765\u521b\u5efa\u5b50\u56fe\u3002\u4e0b\u9762\u662f\u4f7f\u7528 <code>plt.subplot()</code> \u51fd\u6570\u6253\u5370\u4e24\u5f20\u56fe\u7684\u793a\u4f8b\u4ee3\u7801\uff1a</p> <pre><code>import matplotlib.pyplot as plt\nimport numpy as np\n\n# \u521b\u5efa\u6570\u636e\nx = np.linspace(0, 2 * np.pi, 100)\ny1 = np.sin(x)\ny2 = np.cos(x)\n\n# \u7ed8\u5236\u7b2c\u4e00\u5f20\u56fe\nplt.subplot(2, 1, 1)\nplt.plot(x, y1)\nplt.title('Sin')\n\n# \u7ed8\u5236\u7b2c\u4e8c\u5f20\u56fe\nplt.subplot(2, 1, 2)\nplt.plot(x, y2)\nplt.title('Cos')\n\n# \u663e\u793a\u56fe\u50cf\nplt.show()\n</code></pre> <p>\u5728\u4e0a\u9762\u7684\u4ee3\u7801\u4e2d\uff0c<code>plt.subplot(2, 1, 1)</code> \u521b\u5efa\u4e86\u4e00\u4e2a 2 \u884c 1 \u5217\u7684\u5b50\u56fe\u7f51\u683c\uff0c\u5e76\u5c06\u5f53\u524d\u7684 Axes \u5bf9\u8c61\u8bbe\u7f6e\u4e3a\u7b2c\u4e00\u4e2a\u5b50\u56fe\u3002\u7136\u540e\uff0c\u6211\u4eec\u4f7f\u7528 <code>plt.plot()</code> \u51fd\u6570\u7ed8\u5236\u7b2c\u4e00\u4e2a\u56fe\uff0c\u5e76\u4f7f\u7528 <code>plt.title()</code> \u51fd\u6570\u6dfb\u52a0\u6807\u9898\u3002\u63a5\u4e0b\u6765\uff0c<code>plt.subplot(2, 1, 2)</code> \u8bbe\u7f6e\u5f53\u524d\u7684 Axes \u5bf9\u8c61\u4e3a\u7b2c\u4e8c\u4e2a\u5b50\u56fe\uff0c\u5e76\u7ed8\u5236\u7b2c\u4e8c\u4e2a\u56fe\u3002\u6700\u540e\uff0c\u6211\u4eec\u8c03\u7528 <code>plt.show()</code> \u51fd\u6570\u663e\u793a\u56fe\u50cf\u3002</p> <p>\u5982\u679c\u4f60\u60f3\u8981\u66f4\u7075\u6d3b\u5730\u63a7\u5236\u5b50\u56fe\u7684\u5e03\u5c40\uff0c\u53ef\u4ee5\u4f7f\u7528 <code>plt.subplots()</code> \u51fd\u6570\u3002\u4e0b\u9762\u662f\u4f7f\u7528 <code>plt.subplots()</code> \u51fd\u6570\u6253\u5370\u4e24\u5f20\u56fe\u7684\u793a\u4f8b\u4ee3\u7801\uff1a</p> <pre><code>import matplotlib.pyplot as plt\nimport numpy as np\n\n# \u521b\u5efa\u6570\u636e\nx = np.linspace(0, 2 * np.pi, 100)\ny1 = np.sin(x)\ny2 = np.cos(x)\n\n# \u521b\u5efa\u5b50\u56fe\nfig, axs = plt.subplots(2, 1, figsize=(6, 6))\n\n# \u7ed8\u5236\u7b2c\u4e00\u5f20\u56fe\naxs[0].plot(x, y1)\naxs[0].set_title('Sin')\n\n# \u7ed8\u5236\u7b2c\u4e8c\u5f20\u56fe\naxs[1].plot(x, y2)\naxs[1].set_title('Cos')\n\n# \u8c03\u6574\u5b50\u56fe\u4e4b\u95f4\u7684\u95f4\u8ddd\nfig.tight_layout()\n\n# \u663e\u793a\u56fe\u50cf\nplt.show()\n</code></pre> <p>\u5728\u4e0a\u9762\u7684\u4ee3\u7801\u4e2d\uff0c<code>plt.subplots(2, 1, figsize=(6, 6))</code> \u521b\u5efa\u4e86\u4e00\u4e2a 2 \u884c 1 \u5217\u7684\u5b50\u56fe\u7f51\u683c\uff0c\u5e76\u5c06\u8fd4\u56de\u7684 Figure \u5bf9\u8c61\u548c Axes \u5bf9\u8c61\u5b58\u50a8\u5728\u53d8\u91cf <code>fig</code> \u548c <code>axs</code> \u4e2d\u3002\u7136\u540e\uff0c\u6211\u4eec\u4f7f\u7528 <code>axs[0].plot()</code> \u548c <code>axs[1].plot()</code> \u51fd\u6570\u5206\u522b\u5728\u7b2c\u4e00\u4e2a\u548c\u7b2c\u4e8c\u4e2a\u5b50\u56fe\u4e2d\u7ed8\u5236\u56fe\u50cf\uff0c\u5e76\u4f7f\u7528 <code>axs[0].set_title()</code> \u548c <code>axs[1].set_title()</code> \u51fd\u6570\u6dfb\u52a0\u6807\u9898\u3002\u6700\u540e\uff0c\u6211\u4eec\u4f7f\u7528 <code>fig.tight_layout()</code> \u51fd\u6570\u8c03\u6574\u5b50\u56fe\u4e4b\u95f4\u7684\u95f4\u8ddd\uff0c\u5e76\u8c03\u7528 <code>plt.show()</code> \u51fd\u6570\u663e\u793a\u56fe\u50cf\u3002</p> <p>user: </p> <p>\u5982\u4f55\u6253\u5f00figure2?</p> <p>chatgpt: </p> <p>\u5982\u679c\u4f60\u60f3\u8981\u6253\u5f00 Matplotlib \u4e2d\u7684\u7b2c\u4e8c\u4e2a Figure \u7a97\u53e3\uff0c\u53ef\u4ee5\u4f7f\u7528 <code>plt.figure()</code> \u51fd\u6570\u521b\u5efa\u4e00\u4e2a\u65b0\u7684 Figure \u5bf9\u8c61\uff0c\u5e76\u5728\u8c03\u7528 <code>plt.show()</code> \u51fd\u6570\u4e4b\u524d\u8c03\u7528 <code>plt.figure()</code> \u51fd\u6570\u3002</p> <p>\u4e0b\u9762\u662f\u4e00\u4e2a\u7b80\u5355\u7684\u793a\u4f8b\u4ee3\u7801\uff0c\u6f14\u793a\u5982\u4f55\u6253\u5f00\u7b2c\u4e8c\u4e2a Figure \u7a97\u53e3\uff1a</p> <pre><code>import matplotlib.pyplot as plt\nimport numpy as np\n\n# \u521b\u5efa\u6570\u636e\nx = np.linspace(0, 2 * np.pi, 100)\ny1 = np.sin(x)\ny2 = np.cos(x)\n\n# \u521b\u5efa\u7b2c\u4e00\u4e2a\u56fe\u5f62\u7a97\u53e3\nplt.figure(1)\nplt.plot(x, y1)\nplt.title('Sin')\n\n# \u521b\u5efa\u7b2c\u4e8c\u4e2a\u56fe\u5f62\u7a97\u53e3\nplt.figure(2)\nplt.plot(x, y2)\nplt.title('Cos')\n\n# \u663e\u793a\u56fe\u50cf\nplt.show()\n</code></pre> <p>\u5728\u4e0a\u9762\u7684\u4ee3\u7801\u4e2d\uff0c\u6211\u4eec\u9996\u5148\u5728 <code>plt.figure(1)</code> \u4e2d\u521b\u5efa\u7b2c\u4e00\u4e2a\u56fe\u5f62\u7a97\u53e3\uff0c\u5e76\u5728\u5176\u4e2d\u7ed8\u5236\u4e86\u4e00\u4e2a\u6b63\u5f26\u51fd\u6570\u56fe\u50cf\u3002\u7136\u540e\uff0c\u6211\u4eec\u5728 <code>plt.figure(2)</code> \u4e2d\u521b\u5efa\u4e86\u7b2c\u4e8c\u4e2a\u56fe\u5f62\u7a97\u53e3\uff0c\u5e76\u5728\u5176\u4e2d\u7ed8\u5236\u4e86\u4f59\u5f26\u51fd\u6570\u56fe\u50cf\u3002\u6700\u540e\uff0c\u6211\u4eec\u8c03\u7528 <code>plt.show()</code> \u51fd\u6570\u6765\u663e\u793a\u8fd9\u4e24\u4e2a\u56fe\u5f62\u7a97\u53e3\u3002</p> <p>\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u6bcf\u6b21\u8c03\u7528 <code>plt.figure()</code> \u51fd\u6570\u90fd\u4f1a\u521b\u5efa\u4e00\u4e2a\u65b0\u7684 Figure \u5bf9\u8c61\uff0c\u5e76\u5c06\u5176\u8bbe\u4e3a\u5f53\u524d Figure \u5bf9\u8c61\u3002\u56e0\u6b64\uff0c\u5982\u679c\u4f60\u9700\u8981\u5728\u591a\u4e2a Figure \u7a97\u53e3\u4e2d\u7ed8\u5236\u4e0d\u540c\u7684\u56fe\u5f62\uff0c\u8bf7\u786e\u4fdd\u5728\u6bcf\u4e2a Figure \u7a97\u53e3\u4e2d\u4f7f\u7528\u4e0d\u540c\u7684 Figure \u5bf9\u8c61\u3002</p> <p>user: </p> <p>\u5982\u4f55\u8bbe\u7f6e\u56fe\u5f62\u7a97\u53e3\u7684\u5927\u5c0f\uff0c\u6bd4\u5982\u663e\u793a\u66f4\u957f\u7684x\u8f74</p> <p>chatgpt: </p> <p>\u8981\u8bbe\u7f6e Matplotlib \u4e2d\u56fe\u5f62\u7a97\u53e3\u7684\u5927\u5c0f\uff0c\u53ef\u4ee5\u4f7f\u7528 <code>plt.figure()</code> \u51fd\u6570\u7684 <code>figsize</code> \u53c2\u6570\u3002<code>figsize</code> \u53c2\u6570\u63a5\u53d7\u4e00\u4e2a\u5143\u7ec4\uff0c\u7528\u4e8e\u6307\u5b9a\u56fe\u5f62\u7a97\u53e3\u7684\u5bbd\u5ea6\u548c\u9ad8\u5ea6\uff0c\u5355\u4f4d\u4e3a\u82f1\u5bf8\u3002</p> <p>\u4f8b\u5982\uff0c\u5982\u679c\u4f60\u60f3\u8981\u663e\u793a\u66f4\u957f\u7684 x \u8f74\uff0c\u53ef\u4ee5\u901a\u8fc7\u589e\u52a0\u56fe\u5f62\u7a97\u53e3\u7684\u5bbd\u5ea6\u6765\u5b9e\u73b0\u3002\u4e0b\u9762\u662f\u4e00\u4e2a\u793a\u4f8b\u4ee3\u7801\uff0c\u6f14\u793a\u5982\u4f55\u8bbe\u7f6e\u56fe\u5f62\u7a97\u53e3\u7684\u5927\u5c0f\uff1a</p> <pre><code>import matplotlib.pyplot as plt\nimport numpy as np\n\n# \u521b\u5efa\u6570\u636e\nx = np.linspace(0, 2 * np.pi, 100)\ny = np.sin(x)\n\n# \u521b\u5efa\u56fe\u5f62\u7a97\u53e3\uff0c\u5e76\u8bbe\u7f6e\u5927\u5c0f\nplt.figure(figsize=(8, 4))\n\n# \u7ed8\u5236\u56fe\u50cf\nplt.plot(x, y)\nplt.xlabel('X')\nplt.ylabel('Y')\nplt.title('Sin')\n\n# \u663e\u793a\u56fe\u50cf\nplt.show()\n</code></pre> <p>\u5728\u4e0a\u9762\u7684\u4ee3\u7801\u4e2d\uff0c\u6211\u4eec\u4f7f\u7528 <code>plt.figure(figsize=(8, 4))</code> \u51fd\u6570\u521b\u5efa\u4e00\u4e2a\u5927\u5c0f\u4e3a 8x4 \u82f1\u5bf8\u7684\u56fe\u5f62\u7a97\u53e3\uff0c\u7136\u540e\u5728\u5176\u4e2d\u7ed8\u5236\u4e86\u4e00\u4e2a\u6b63\u5f26\u51fd\u6570\u56fe\u50cf\u3002\u901a\u8fc7\u589e\u52a0\u56fe\u5f62\u7a97\u53e3\u7684\u5bbd\u5ea6\uff0cx \u8f74\u7684\u957f\u5ea6\u4e5f\u968f\u4e4b\u589e\u52a0\u3002</p> <p>\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u56fe\u5f62\u7a97\u53e3\u7684\u5927\u5c0f\u53ef\u80fd\u56e0\u64cd\u4f5c\u7cfb\u7edf\u548c\u663e\u793a\u5668\u800c\u5f02\uff0c\u56e0\u6b64\u4f60\u53ef\u80fd\u9700\u8981\u6839\u636e\u5b9e\u9645\u60c5\u51b5\u8c03\u6574\u7a97\u53e3\u5927\u5c0f\u3002</p>"},{"location":"zh/python%E7%9B%B8%E5%85%B3/mediapipe/","title":"MediaPipe","text":"<p> \u7ea6 134 \u4e2a\u5b57  3 \u884c\u4ee3\u7801 </p>"},{"location":"zh/python%E7%9B%B8%E5%85%B3/mediapipe/#1","title":"1","text":"<p>\u4e00\u5f00\u59cb\u5b89\u88c5mediapipe\u65f6</p> <pre><code>pip install mediapipe\n</code></pre> <p>\u663e\u793a\u4e86\u5982\u4e0b\u62a5\u9519</p> <pre><code>ERROR: Could not find a version that satisfies the requirement mediapipe (from versions: none)\nERROR: No matching distribution found for mediapipe\n</code></pre> <p>\u7136\u540egoogle\u641c\u7d22\u4fe1\u606f\uff0c\u5728github issues\u4e0a\u7684\u8fd9\u4e2a\u56de\u7b54\u4e0a\u770b\u5230\u4e86\u5b98\u65b9\u6587\u6863\u4e2d\u5bf9\u8fd9\u4e2a\u60c5\u51b5\u7684\u8bf4\u660e\uff0c</p> <p>mediapipe/docs/getting_started/troubleshooting.md at master \u00b7 google/mediapipe (github.com)</p> <p>\u7136\u540e\u53d1\u73b0\u662f\u7531\u4e8e\u6700\u5f00\u59cb\u5b89\u88c5\u7684python\u662f32\u4f4d\u7684\u7248\u672c\uff0c\u6240\u4ee5\u91cd\u65b0\u53bb\u5b89\u88c5\u4e8664\u4f4d\u7684python (python-3.10.11-amd64.exe)</p> <p>Please note that MediaPipe Python PyPI officially supports the 64-bit version of Python 3.7 to 3.10 on the following OS:</p> <ul> <li>x86_64 Linux</li> <li>x86_64 macOS 10.15+</li> <li>amd64 Windows</li> </ul> <p>\u6362\u621064\u4f4d\u7684python\u4e4b\u540e\u5c31\u53ef\u4ee5\u6b63\u5e38 <code>pip install mediapipe</code> \u4e86</p>"},{"location":"zh/python%E7%9B%B8%E5%85%B3/numpy/","title":"NumPy","text":"<p> \u7ea6 138 \u4e2a\u5b57 </p>"},{"location":"zh/python%E7%9B%B8%E5%85%B3/numpy/#1","title":"1","text":"<p>\u4e00\u4e2a10\u5206\u949f\u7684numpy\u5165\u95e8\u6559\u7a0b_\u54d4\u54e9\u54d4\u54e9_bilibili</p>"},{"location":"zh/python%E7%9B%B8%E5%85%B3/numpy/#2","title":"2","text":"<p>\u5148\u8fdb\u89c6\u89c9</p> <p>numpy\u6559\u7a0b07---ndarray\u7684\u4fdd\u5b58\u4e0e\u52a0\u8f7d_ndarray\u4fdd\u5b58-CSDN\u535a\u5ba2</p> <p><code>ndarray</code> \u7c7b\u7684\u8f93\u51fa\u548c\u8bfb\u53d6\uff0c\u53ef\u4ee5\u7528 <code>np</code> \u7c7b\u7684\u65b9\u6cd5\u8f93\u51fa\u548c\u52a0\u8f7d\uff0c\u6709\u4e24\u79cd\u8f93\u51fa\u5f62\u5f0f</p> <ul> <li> <p>\u4e8c\u8fdb\u5236\u683c\u5f0f(\u8f93\u51fa\u6210 <code>.npy</code> \u6587\u4ef6)</p> <p>\u4f7f\u7528 <code>np.save(\"file\", array)</code> \u65b9\u6cd5\uff0c <code>\"file\"</code> \u662f\u76ee\u6807\u6587\u4ef6\u540d\uff0c\u5982\u679c\u4e0d\u52a0\u540e\u7f00\uff0c\u4f1a\u81ea\u52a8\u6dfb\u52a0 <code>.npy</code> \u540e\u7f00\uff0c<code>array</code> \u662f <code>ndarray</code> \u5b9e\u4f8b</p> </li> <li> <p>\u6587\u672c\u683c\u5f0f</p> <p>\u4f7f\u7528 <code>np.savetxt(\"fname\", array)</code> \u65b9\u6cd5\uff0c<code>\"fname\"</code> \u9700\u8981\u586b\u5199\u5b8c\u6574\u7684\u6587\u4ef6\u540d\uff0c<code>array</code> \u662f <code>ndarray</code> \u5b9e\u4f8b</p> </li> </ul>"},{"location":"zh/python%E7%9B%B8%E5%85%B3/openpyxl%28%E7%94%A8%E4%BA%8Eexcel%29/","title":"OpenPyXL","text":"<p> \u7ea6 620 \u4e2a\u5b57  271 \u884c\u4ee3\u7801  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 5 \u5206\u949f</p>"},{"location":"zh/python%E7%9B%B8%E5%85%B3/openpyxl%28%E7%94%A8%E4%BA%8Eexcel%29/#1","title":"1","text":"<p>2023\u6570\u6a21\u56fd\u8d5b</p> <p>\u8bfb\u53d6\u548c\u5199\u5165\u7684\u51fd\u6570</p> <pre><code>import openpyxl\n\n\n# \u5b9a\u4e49\u4e00\u4e2a\u51fd\u6570\uff0c\u4ece Excel \u6587\u4ef6\u4e2d\u83b7\u53d6\u6570\u636e\u5e76\u5b58\u50a8\u5230\u5217\u8868\u4e2d\ndef get_data_from_excel(file_name, sheet_name):\n    # \u521b\u5efa\u4e00\u4e2a\u7a7a\u5217\u8868\u6765\u5b58\u50a8\u6570\u636e\n    data_list = []\n    # \u6253\u5f00 Excel \u6587\u4ef6\n    wb = openpyxl.load_workbook(file_name)\n    # \u83b7\u53d6\u5de5\u4f5c\u8868\n    sheet = wb[sheet_name]\n    # \u83b7\u53d6\u6700\u5927\u884c\u6570\n    max_row = sheet.max_row\n    # \u83b7\u53d6\u6700\u5927\u5217\u6570\n    max_column = sheet.max_column\n    # \u4f7f\u7528\u5faa\u73af\u4ece Excel \u6587\u4ef6\u4e2d\u83b7\u53d6\u6570\u636e\n    for i in range(2, max_row + 1):\n        # \u521b\u5efa\u4e00\u4e2a\u7a7a\u5217\u8868\u6765\u5b58\u50a8\u6bcf\u884c\u7684\u6570\u636e\n        sub_list = []\n        for j in range(1, max_column + 1):\n            # \u83b7\u53d6\u6bcf\u4e2a\u5355\u5143\u683c\u7684\u6570\u636e\n            cell = sheet.cell(row=i, column=j)\n            # \u5c06\u6570\u636e\u6dfb\u52a0\u5230\u5b50\u5217\u8868\u4e2d\n            sub_list.append(cell.value)\n        # \u5c06\u5b50\u5217\u8868\u6dfb\u52a0\u5230\u6570\u636e\u5217\u8868\u4e2d\n        data_list.append(sub_list)\n    # \u8fd4\u56de\u6570\u636e\u5217\u8868\n    return data_list\n\n\n# \u5b9a\u4e49\u4e00\u4e2a\u51fd\u6570\uff0c\u5c06\u6570\u636e\u5199\u5165 Excel \u6587\u4ef6\u4e2d\ndef write_data_to_excel(file_name, sheet_name, data_list):\n    # \u6253\u5f00 Excel \u6587\u4ef6\n    wb = openpyxl.load_workbook(file_name)\n    # \u5982\u679c\u5de5\u4f5c\u8868\u4e0d\u5b58\u5728\uff0c\u5219\u521b\u5efa\u5b83\n    if sheet_name not in wb.sheetnames:\n        wb.create_sheet(sheet_name)\n    # \u83b7\u53d6\u5de5\u4f5c\u8868\n    sheet = wb[sheet_name]\n    # \u6839\u636e\u6570\u636e\u7684\u5927\u5c0f\u83b7\u53d6\u6700\u5927\u884c\u6570\u548c\u5217\u6570\n    max_row = len(data_list)\n    max_column = len(data_list[0])\n    # \u4f7f\u7528\u5faa\u73af\u5c06\u6570\u636e\u5199\u5165 Excel \u6587\u4ef6\u4e2d\n    for i in range(2, max_row + 2):\n        for j in range(1, max_column + 1):\n            # \u83b7\u53d6\u6bcf\u4e2a\u5355\u5143\u683c\u7684\u6570\u636e\n            cell = sheet.cell(row=i, column=j)\n            # \u5c06\u6570\u636e\u5199\u5165\u5355\u5143\u683c\n            cell.value = data_list[i - 2][j - 1]\n    # \u4fdd\u5b58 Excel \u6587\u4ef6\n    wb.save(file_name)\n</code></pre> <ul> <li>\u6ce8\u610f\uff1a\u5199\u5165\u7684\u51fd\u6570\u9700\u8981\u76ee\u6807\u6587\u4ef6\u5df2\u7ecf\u521b\u5efa\u597d/\u5df2\u7ecf\u5b58\u5728</li> <li>\u8be5\u5199\u5165\u51fd\u6570\u5c06list\u5217\u8868\u5199\u5165excel\u8868\u683c\u65f6\uff0c\u4f1a\u7a7a\u51fa\u7b2c\u4e00\u884c(\u53ef\u4ee5\u7528\u4e8e\u586b\u5199\u680f\u76ee\u540d\u79f0)</li> </ul> chat log <p>user:</p> <pre><code>import openpyxl\n\n\n# define a function to get the data from an Excel file to a list\ndef get_data(file_name, sheet_name):\n    # create an empty list to store the data\n    data_list = []\n    # open the Excel file\n    wb = openpyxl.load_workbook(file_name)\n    # get the sheet\n    sheet = wb[sheet_name]\n    # get the max row\n    max_row = sheet.max_row\n    # get the max column\n    max_column = sheet.max_column\n    # use a for loop to get the data from the Excel file\n    for i in range(2, max_row + 1):\n        # create an empty list to store the data of each row\n        sub_list = []\n        for j in range(1, max_column + 1):\n            # get the data of each cell\n            cell = sheet.cell(row=i, column=j)\n            # add the data to the sub list\n            sub_list.append(cell.value)\n        # add the sub list to the data list\n        data_list.append(sub_list)\n    # return the data list\n    return data_list\n\n\ndata = get_data(\"data.xlsx\", \"Sheet1\")\n# print(data)\nnew_data = []\nfor line in data:\n    if line[1] == 'A':\n        line[2] /= 0.6\n        line[3] /= 0.6\n    elif line[1] == 'B':\n        line[2] /= 0.66\n        line[3] /= 0.66\n    else:\n        line[2] /= 0.72\n        line[3] /= 0.72\n    new_data += [line]\n\n# print(new_data)\n\n\n# define a function to write the data to an Excel file\ndef write_data(file_name, sheet_name, data_list):\n    # open the Excel file\n    wb = openpyxl.load_workbook(file_name)\n    # get the sheet\n    sheet = wb[sheet_name]\n    # get the max row\n    max_row = sheet.max_row\n    # get the max column\n    max_column = sheet.max_column\n    # use a for loop to write the data to the Excel file\n    for i in range(2, max_row + 1):\n        for j in range(1, max_column + 1):\n            # get the data of each cell\n            cell = sheet.cell(row=i, column=j)\n            # write the data to the cell\n            cell.value = data_list[i - 2][j - 1]\n    # save the Excel file\n    wb.save(file_name)\n\n\nwrite_data(\"data.xlsx\", \"Sheet2\", new_data)\n</code></pre> <p>My code did not successfully write the data to the Excel file. Can you help me see what the error is and how to modify it?</p> <p>chatgpt:</p> <p>Based on the code you provided, there are a couple of issues that might be causing the problem you are encountering when trying to write data to an Excel file:</p> <ol> <li>The \"Sheet2\" sheet does not exist in the Excel file.</li> </ol> <p>If the sheet you are trying to write to does not exist in the Excel file, you will need to create it first before you can write data to it. You can do this using the <code>create_sheet()</code> method of the workbook object. For example:</p> <pre><code>wb.create_sheet(\"Sheet2\")\n</code></pre> <ol> <li>The range of cells to write to is incorrect.</li> </ol> <p>In the <code>write_data()</code> function, the range of cells to write to is determined based on the maximum number of rows and columns in the sheet. However, if the size of the data you are trying to write is smaller than the size of the sheet, you will end up overwriting some cells with empty values. To avoid this, you should use the actual size of the data to determine the range of cells to write to. You can do this by using the <code>len()</code> function to get the number of rows in the data list. For example:</p> <pre><code>max_row = len(data_list)\nmax_column = len(data_list[0])\n</code></pre> <p>Here's the modified code with these changes:</p> <pre><code>import openpyxl\n\n\n# define a function to get the data from an Excel file to a list\ndef get_data(file_name, sheet_name):\n    # create an empty list to store the data\n    data_list = []\n    # open the Excel file\n    wb = openpyxl.load_workbook(file_name)\n    # get the sheet\n    sheet = wb[sheet_name]\n    # get the max row\n    max_row = sheet.max_row\n    # get the max column\n    max_column = sheet.max_column\n    # use a for loop to get the data from the Excel file\n    for i in range(2, max_row + 1):\n        # create an empty list to store the data of each row\n        sub_list = []\n        for j in range(1, max_column + 1):\n            # get the data of each cell\n            cell = sheet.cell(row=i, column=j)\n            # add the data to the sub list\n            sub_list.append(cell.value)\n        # add the sub list to the data list\n        data_list.append(sub_list)\n    # return the data list\n    return data_list\n\n\ndata = get_data(\"data.xlsx\", \"Sheet1\")\n# print(data)\nnew_data = []\nfor line in data:\n    if line[1] == 'A':\n        line[2] /= 0.6\n        line[3] /= 0.6\n    elif line[1] == 'B':\n        line[2] /= 0.66\n        line[3] /= 0.66\n    else:\n        line[2] /= 0.72\n        line[3] /= 0.72\n    new_data += [line]\n\n# print(new_data)\n\n\n# define a function to write the data to an Excel file\ndef write_data(file_name, sheet_name, data_list):\n    # open the Excel file\n    wb = openpyxl.load_workbook(file_name)\n    # create the sheet if it doesn't exist\n    if sheet_name not in wb.sheetnames:\n        wb.create_sheet(sheet_name)\n    # get the sheet\n    sheet = wb[sheet_name]\n    # get the max row and column based on the size of the data\n    max_row = len(data_list)\n    max_column = len(data_list[0])\n    # use a for loop to write the data to the Excel file\n    for i in range(2, max_row + 2):\n        for j in range(1, max_column + 1):\n            # get the data of each cell\n            cell = sheet.cell(row=i, column=j)\n            # write the data to the cell\n            cell.value = data_list[i - 2][j - 1]\n    # save the Excel file\n    wb.save(file_name)\n\n\nwrite_data(\"data.xlsx\", \"Sheet2\", new_data)\n</code></pre> <p>With these changes, the code should now write the data to the \"Sheet2\" sheet in the \"data.xlsx\" file.</p> <p>user:</p> <p>\u4f60\u80fd\u7528\u4e2d\u6587\u518d\u8f93\u51fa\u4e00\u904d\u5417\uff1f</p> <p>chatgpt:</p> <p>\u5f53\u4f60\u5c1d\u8bd5\u5411 Excel \u6587\u4ef6\u5199\u5165\u6570\u636e\u65f6\uff0c\u4ee3\u7801\u53ef\u80fd\u51fa\u73b0\u4e00\u4e9b\u95ee\u9898\u3002\u6839\u636e\u4f60\u63d0\u4f9b\u7684\u4ee3\u7801\uff0c\u53ef\u80fd\u4f1a\u51fa\u73b0\u4ee5\u4e0b\u95ee\u9898\uff1a</p> <ol> <li>Excel \u6587\u4ef6\u4e2d\u4e0d\u5b58\u5728 \"Sheet2\" \u5de5\u4f5c\u8868\u3002</li> </ol> <p>\u5982\u679c\u4f60\u5c1d\u8bd5\u5199\u5165\u7684\u5de5\u4f5c\u8868\u5728 Excel \u6587\u4ef6\u4e2d\u4e0d\u5b58\u5728\uff0c\u4f60\u9700\u8981\u5148\u521b\u5efa\u5b83\u624d\u80fd\u5411\u5176\u5199\u5165\u6570\u636e\u3002\u4f60\u53ef\u4ee5\u4f7f\u7528\u5de5\u4f5c\u7c3f\u5bf9\u8c61\u7684 <code>create_sheet()</code> \u65b9\u6cd5\u6765\u521b\u5efa\u5de5\u4f5c\u8868\u3002\u4f8b\u5982\uff1a</p> <pre><code>wb.create_sheet(\"Sheet2\")\n</code></pre> <ol> <li>\u8981\u5199\u5165\u7684\u5355\u5143\u683c\u8303\u56f4\u4e0d\u6b63\u786e\u3002</li> </ol> <p>\u5728 <code>write_data()</code> \u51fd\u6570\u4e2d\uff0c\u8981\u5199\u5165\u7684\u5355\u5143\u683c\u8303\u56f4\u662f\u57fa\u4e8e\u5de5\u4f5c\u8868\u7684\u6700\u5927\u884c\u6570\u548c\u5217\u6570\u6765\u786e\u5b9a\u7684\u3002\u4f46\u662f\uff0c\u5982\u679c\u4f60\u8981\u5199\u5165\u7684\u6570\u636e\u5927\u5c0f\u5c0f\u4e8e\u5de5\u4f5c\u8868\u7684\u5927\u5c0f\uff0c\u4f60\u5c06\u4f1a\u8986\u76d6\u4e00\u4e9b\u5355\u5143\u683c\uff0c\u4f7f\u5b83\u4eec\u7684\u503c\u4e3a\u7a7a\u3002\u4e3a\u4e86\u907f\u514d\u8fd9\u79cd\u60c5\u51b5\uff0c\u4f60\u5e94\u8be5\u4f7f\u7528\u5b9e\u9645\u6570\u636e\u7684\u5927\u5c0f\u6765\u786e\u5b9a\u8981\u5199\u5165\u7684\u5355\u5143\u683c\u8303\u56f4\u3002\u4f60\u53ef\u4ee5\u4f7f\u7528 <code>len()</code> \u51fd\u6570\u83b7\u53d6\u6570\u636e\u5217\u8868\u4e2d\u7684\u884c\u6570\u3002\u4f8b\u5982\uff1a</p> <pre><code>max_row = len(data_list)\nmax_column = len(data_list[0])\n</code></pre> <p>\u4ee5\u4e0b\u662f\u4fee\u6539\u540e\u7684\u4ee3\u7801\uff0c\u5176\u4e2d\u5305\u542b\u8fd9\u4e9b\u66f4\u6539\uff1a</p> <pre><code>import openpyxl\n\n\n# \u5b9a\u4e49\u4e00\u4e2a\u51fd\u6570\uff0c\u4ece Excel \u6587\u4ef6\u4e2d\u83b7\u53d6\u6570\u636e\u5e76\u5b58\u50a8\u5230\u5217\u8868\u4e2d\ndef get_data(file_name, sheet_name):\n    # \u521b\u5efa\u4e00\u4e2a\u7a7a\u5217\u8868\u6765\u5b58\u50a8\u6570\u636e\n    data_list = []\n    # \u6253\u5f00 Excel \u6587\u4ef6\n    wb = openpyxl.load_workbook(file_name)\n    # \u83b7\u53d6\u5de5\u4f5c\u8868\n    sheet = wb[sheet_name]\n    # \u83b7\u53d6\u6700\u5927\u884c\u6570\n    max_row = sheet.max_row\n    # \u83b7\u53d6\u6700\u5927\u5217\u6570\n    max_column = sheet.max_column\n    # \u4f7f\u7528\u5faa\u73af\u4ece Excel \u6587\u4ef6\u4e2d\u83b7\u53d6\u6570\u636e\n    for i in range(2, max_row + 1):\n        # \u521b\u5efa\u4e00\u4e2a\u7a7a\u5217\u8868\u6765\u5b58\u50a8\u6bcf\u884c\u7684\u6570\u636e\n        sub_list = []\n        for j in range(1, max_column + 1):\n            # \u83b7\u53d6\u6bcf\u4e2a\u5355\u5143\u683c\u7684\u6570\u636e\n            cell = sheet.cell(row=i, column=j)\n            # \u5c06\u6570\u636e\u6dfb\u52a0\u5230\u5b50\u5217\u8868\u4e2d\n            sub_list.append(cell.value)\n        # \u5c06\u5b50\u5217\u8868\u6dfb\u52a0\u5230\u6570\u636e\u5217\u8868\u4e2d\n        data_list.append(sub_list)\n    # \u8fd4\u56de\u6570\u636e\u5217\u8868\n    return data_list\n\n\ndata = get_data(\"data.xlsx\", \"Sheet1\")\n# print(data)\nnew_data = []\nfor line in data:\n    if line[1] == 'A':\n        line[2] /= 0.6\n        line[3] /= 0.6\n    elif line[1] == 'B':\n        line[2] /= 0.66\n        line[3] /= 0.66\n    else:\n        line[2] /= 0.72\n        line[3] /= 0.72\n    new_data += [line]\n\n# print(new_data)\n\n\n# \u5b9a\u4e49\u4e00\u4e2a\u51fd\u6570\uff0c\u5c06\u6570\u636e\u5199\u5165 Excel \u6587\u4ef6\u4e2d\ndef write_data(file_name, sheet_name, data_list):\n    # \u6253\u5f00 Excel \u6587\u4ef6\n    wb = openpyxl.load_workbook(file_name)\n    # \u5982\u679c\u5de5\u4f5c\u8868\u4e0d\u5b58\u5728\uff0c\u5219\u521b\u5efa\u5b83\n    if sheet_name not in wb.sheetnames:\n        wb.create_sheet(sheet_name)\n    # \u83b7\u53d6\u5de5\u4f5c\u8868\n    sheet = wb[sheet_name]\n    # \u6839\u636e\u6570\u636e\u7684\u5927\u5c0f\u83b7\u53d6\u6700\u5927\u884c\u6570\u548c\u5217\u6570\n    max_row = len(data_list)\n    max_column = len(data_list[0])\n    # \u4f7f\u7528\u5faa\u73af\u5c06\u6570\u636e\u5199\u5165 Excel \u6587\u4ef6\u4e2d\n    for i in range(2, max_row + 2):\n        for j in range(1, max_column + 1):\n            # \u83b7\u53d6\u6bcf\u4e2a\u5355\u5143\u683c\u7684\u6570\u636e\n            cell = sheet.cell(row=i, column=j)\n            # \u5c06\u6570\u636e\u5199\u5165\u5355\u5143\u683c\n            cell.value = data_list[i - 2][j - 1]\n    # \u4fdd\u5b58 Excel \u6587\u4ef6\n    wb.save(file_name)\n\n\nwrite_data(\"data.xlsx\", \"Sheet2\", new_data)\n</code></pre> <p>\u7ecf\u8fc7\u8fd9\u4e9b\u66f4\u6539\uff0c\u4ee3\u7801\u73b0\u5728\u5e94\u8be5\u80fd\u591f\u5c06\u6570\u636e\u5199\u5165\u5230 \"data.xlsx\" \u6587\u4ef6\u4e2d\u7684 \"Sheet2\" \u5de5\u4f5c\u8868\u4e2d\u3002</p>"},{"location":"zh/python%E7%9B%B8%E5%85%B3/python%E8%AF%AD%E8%A8%80/","title":"Python \u8bed\u8a00","text":"<p> \u7ea6 575 \u4e2a\u5b57  87 \u884c\u4ee3\u7801  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 3 \u5206\u949f</p> <p>Info</p> <p>\u6b64\u5904\u7528\u4e8e\u8bb0\u5f55\u6211\u81ea\u5df1\u53d1\u73b0\u7684python\u4e2d\u7684(\u6211\u4e4b\u524d\u4e0d\u77e5\u9053\u7684)\u64cd\u4f5c</p>"},{"location":"zh/python%E7%9B%B8%E5%85%B3/python%E8%AF%AD%E8%A8%80/#1","title":"1","text":"<p>2023\u6570\u6a21\u56fd\u8d5b</p> <p>\u5728\u5b57\u5178\u4e2d\u76f4\u63a5\u67e5\u8be2\u3001\u53d6\u51fa\u7684\u662f key \u7684\u503c</p> <p>1</p> <p><code>in</code> \u8bed\u53e5\u53ef\u4ee5\u5224\u65ad \u67d0\u4e2a key \u662f\u5426\u5728\u67d0\u4e2a\u5b57\u5178\u4e2d\uff0c\u5982</p> <pre><code># \u4ece\u9644\u5f552\u7684Excel\u8868\u683c\u4e2d\u8bfb\u53d6\u6570\u636e\ndatas2 = get_data(\"2.xlsx\", \"Sheet1\")\n# \u521b\u5efa\u4e00\u4e2a\u5b57\u5178\u6765\u5b58\u50a8\u9500\u91cf\u6570\u636e\uff0c\u5b57\u5178\u7684\u952e\u662f\u4ea7\u54c1\u7f16\u53f7\uff0c\u503c\u662f\u5305\u542b\u9500\u552e\u5b63\u5ea6\u6570\u636e\u7684\u5d4c\u5957\u5b57\u5178\nxiaoliang = {}\n# \u904d\u5386\u9644\u5f552\u4e2d\u7684\u6570\u636e\nfor data in datas2:\n    # \u5982\u679c\u4ea7\u54c1\u7f16\u53f7\u4e0d\u5728\u5b57\u5178\u4e2d\uff0c\u6dfb\u52a0\u4e00\u4e2a\u65b0\u7684\u952e\u503c\u5bf9\n    if data[2] not in xiaoliang:\n        # \u9500\u552e\u6570\u636e\u5b57\u5178\u7684\u952e\u662f\u5e74\u4efd\u548c\u5b63\u5ea6\u7684\u7ec4\u5408\uff0c\u521d\u59cb\u503c\u4e3a0\n        xiaoliang[data[2]] = {y * 100 + s: 0 for y in range(2020, 2024) for s in range(1, 5)}\n    # \u66f4\u65b0\u9500\u552e\u6570\u636e\u5b57\u5178\uff0c\u6839\u636e\u9500\u552e\u65e5\u671f\u83b7\u53d6\u5b63\u5ea6\u5e76\u5c06\u9500\u552e\u6570\u91cf\u7d2f\u52a0\u5230\u76f8\u5e94\u7684\u5b63\u5ea6\n    xiaoliang[data[2]][get_season(data[0])] += data[3]\n</code></pre> <p>\u5176\u4e2d</p> <pre><code>    if data[2] not in xiaoliang:\n        ...\n</code></pre> <p>\u80fd\u5224\u65ad\u5b57\u5178xiaoliang\u662f\u5426\u5df2\u7ecf\u5b58\u5728\u4e3a <code>data[2]</code> \u7684\u952e(\u6ca1\u6709\u53ef\u4ee5\u8fdb\u884c\u521d\u59cb\u5316\u7b49\u64cd\u4f5c)</p> <p>2</p> <p><code>for</code> \u8bed\u53e5(\u5faa\u73af\u4ee5\u53ca\u5217\u8868\u63a8\u5bfc\u5f0f)\u76f4\u63a5\u7528\u4e8e\u5b57\u5178\u53d6\u51fa\u7684\u662f key\uff0c</p> <pre><code>for xl in xiaoliang:\n    new_xl = [round(xiaoliang[xl][x], 3) for x in xiaoliang[xl]]\n    xiaoliang[xl] = new_xl\n</code></pre> <p>\u5982\u679c\u9700\u8981\u53d6\u51fa value \u5219\u53ef\u4ee5\u4f7f\u7528\u5b57\u5178\u7684 <code>.item()</code> (\u53d6\u51fakey\u548cvalue) \u6216 <code>.values()</code> (\u53ea\u53d6\u51favalue) \u65b9\u6cd5\uff1a</p> <pre><code># \u5b9a\u4e49\u4e00\u4e2a\u51fd\u6570\uff0c\u5c06dict\u8f6c\u6362\u6210list\ndef dict_to_list(dict1):\n    list1 = []\n    for key, value in dict1.items():\n        list1.append([key, value])\n    return list1\n</code></pre> <pre><code>for value in xxx.values():\n    ...\n</code></pre>"},{"location":"zh/python%E7%9B%B8%E5%85%B3/python%E8%AF%AD%E8%A8%80/#3","title":"3","text":"<p>2023\u6570\u6a21\u56fd\u8d5b</p> <p>\u5b57\u5178\u7684 <code>.values()</code> \u65b9\u6cd5\uff0c\u8fd4\u56de\u7684\u662f\u4e00\u4e2a dict_values \u7c7b\u578b\uff0c\u5982\u679c\u9700\u8981\u7684\u662f\u5217\u8868\uff0c\u5219\u9700\u8981\u7c7b\u578b\u8f6c\u6362\uff1a</p> <pre><code>&gt;&gt;&gt; d = {\"key\": 0}\n&gt;&gt;&gt; d.values()\ndict_values([0])\n&gt;&gt;&gt; list(d.values())\n[0]\n</code></pre>"},{"location":"zh/python%E7%9B%B8%E5%85%B3/python%E8%AF%AD%E8%A8%80/#4","title":"4","text":"<p>2023\u6570\u6a21\u56fd\u8d5b</p> <p>\u5b57\u5178\u4e0d\u80fd\u5207\u7247</p>"},{"location":"zh/python%E7%9B%B8%E5%85%B3/python%E8%AF%AD%E8%A8%80/#5","title":"5","text":"<p>2023\u6570\u6a21\u56fd\u8d5b</p> <p>Note</p> <p>json\u6587\u4ef6\u8bfb\u53d6\u901f\u5ea6\u5f88\u5feb\uff0c\u6211\u8ba4\u4e3a\u5f88\u9002\u5408\u7528\u4e8e\u5904\u7406\u6570\u636e</p> <p>\u8bfb\u53d6\u548c\u5199\u5165json\u6587\u4ef6\u7684\u51fd\u6570</p> <pre><code>import json\n\n\n# \u5b9a\u4e49\u4e00\u4e2a\u51fd\u6570\uff0c\u5c06dict\u5b58\u5230\u6307\u5b9a\u7684json\u6587\u4ef6\u4e2d\ndef write_data(file_name, data):\n    # \u6253\u5f00json\u6587\u4ef6\n    with open(file_name, \"w\", encoding=\"utf-8\") as f:\n        # \u5c06\u6570\u636e\u5199\u5165json\u6587\u4ef6\u4e2d\n        json.dump(data, f, ensure_ascii=False, indent=4)\n\n\n# \u5b9a\u4e49\u4e00\u4e2a\u51fd\u6570\uff0c\u4ecejson\u6587\u4ef6\u4e2d\u8bfb\u53d6\u6570\u636e\ndef read_data(file_name):\n    # \u6253\u5f00json\u6587\u4ef6\n    with open(file_name, \"r\", encoding=\"utf-8\") as f:\n        # \u8bfb\u53d6json\u6587\u4ef6\u4e2d\u7684\u6570\u636e\n        data = json.load(f)\n        # \u8fd4\u56de\u6570\u636e\n        return data\n</code></pre> <ul> <li>\u5199\u5165\u51fd\u6570\u5982\u679c\u76ee\u6807\u6587\u4ef6\u4e0d\u5b58\u5728\uff0c\u4f1a\u81ea\u52a8\u65b0\u5efa\u4e00\u4e2a\u5bf9\u5e94\u7684\u6587\u4ef6</li> <li>\u5199\u5165\u51fd\u6570\u9700\u8981\u4f20\u5165\u4e00\u4e2a\u5b57\u5178\uff0c(\u5982\u679c\u60f3\u5b58\u50a8\u5217\u8868\u7c7b\u578b\u7684\u6570\u636e\uff0c\u53ef\u4ee5\u5728\u5217\u8868\u5916\u5957\u4e00\u4e2a\u53ea\u542b\u4e00\u4e2a\u952e\u7684\u5b57\u5178)</li> </ul>"},{"location":"zh/python%E7%9B%B8%E5%85%B3/python%E8%AF%AD%E8%A8%80/#6","title":"6","text":"<p>2023\u6570\u6a21\u56fd\u8d5b</p> <p>\u5bf9\u5c0f\u6570\u56db\u820d\u4e94\u5165 \u4f7f\u7528 <code>round()</code> \u51fd\u6570\uff0c\u5982</p> <pre><code># \u5c06\u7ed3\u679c\u6570\u636e\u7684\u5c0f\u6570\u4f4d\u6570\u4fdd\u7559\u4e09\u4f4d\nfor _, value in data_res.items():\n    for i in range(12):\n        value[i] = round(value[i], 3)\n</code></pre> <p>\u7b2c\u4e00\u4e2a\u53c2\u6570\u65f6\u8981\u820d\u5165\u7684\u503c\uff0c\u7b2c\u4e8c\u4e2a\u53c2\u6570\u662f\u8981\u4fdd\u7559\u7684\u5c0f\u6570\u4f4d\u6570</p>"},{"location":"zh/python%E7%9B%B8%E5%85%B3/python%E8%AF%AD%E8%A8%80/#7","title":"7","text":"<p>2023\u6570\u6a21\u56fd\u8d5b</p> <p>datetime\u7c7b\u578b</p> <ul> <li> <p>datetime\u53ef\u4ee5\u76f4\u63a5\u83b7\u53d6 \u5e74\u3001\u6708\u3001\u65e5 \u7b49\u7684\u6570\u636e</p> <pre><code># \u5b9a\u4e49\u4e00\u4e2a\u51fd\u6570\uff0c\u4f20\u5165datetime\uff0c\u5224\u65ad\u5728\u54ea\u4e00\u5e74\u7684\u54ea\u4e2a\u5b63\u5ea6\u4e2d\ndef get_season(date):\n    season = 0\n    if date.month in [1, 2, 3]:\n        season = 1\n    elif date.month in [4, 5, 6]:\n        season = 2\n    elif date.month in [7, 8, 9]:\n        season = 3\n    elif date.month in [10, 11, 12]:\n        season = 4\n    return int(date.year * 100 + season)\n</code></pre> </li> <li> <p>datetime\u53ef\u4ee5\u7c7b\u578b\u8f6c\u6362\u6210str\uff0c\u4f1a\u8f6c\u6210\u5f62\u5982 <code>\"2023-09-11 18:40:22.834683\"</code> \u7684\u5b57\u7b26\u4e32</p> <pre><code>&gt;&gt;&gt; import datetime\n&gt;&gt;&gt; now = datetime.datetime.now()\n&gt;&gt;&gt; now\ndatetime.datetime(2023, 9, 11, 18, 40, 22, 834683)\n&gt;&gt;&gt; str(now)\n'2023-09-11 18:40:22.834683'\n</code></pre> </li> </ul>"},{"location":"zh/python%E7%9B%B8%E5%85%B3/python%E8%AF%AD%E8%A8%80/#8","title":"8","text":"<p>2023\u6570\u6a21\u56fd\u8d5b</p> <p>\u5c06\u5217\u8868\u5199\u5165csv\u6587\u4ef6\u7684\u51fd\u6570</p> <pre><code># \u5b9a\u4e49\u4e00\u4e2a\u51fd\u6570\uff0c\u5c06list\u5b58\u5165csv\u6587\u4ef6\ndef write_data_to_csv(file_name, data_list):\n    # \u6253\u5f00csv\u6587\u4ef6\n    with open(file_name, \"w\", encoding=\"gbk\", newline=\"\") as f:\n        # \u521b\u5efa\u4e00\u4e2acsv\u5199\u5165\u5668\n        writer = csv.writer(f)\n        # \u5c06\u6570\u636e\u5199\u5165csv\u6587\u4ef6\u4e2d\n        writer.writerows(data_list)\n</code></pre> <p><code>encoding</code> \u53c2\u6570\u662f\u7f16\u7801\u683c\u5f0f\uff0c\u9009\u62e9 <code>\"gbk\"</code> excel\u80fd\u6b63\u5e38\u6253\u5f00\uff0c\u9009\u62e9 <code>\"utf-8\"</code> excel\u597d\u50cf\u4f1a\u663e\u793a\u4e71\u7801</p>"},{"location":"zh/python%E7%9B%B8%E5%85%B3/python%E8%AF%AD%E8%A8%80/#9","title":"9","text":"<p>\u547d\u4ee4\u884c\u4e2d\u7684python\u7684\u9000\u51fa\uff1a</p> <ul> <li>Linux\u7cfb\u7edf\u4e0b(\u53ef\u80fdMacOS\u7cfb\u7edf\u4e0b\u4e5f\u662f)\uff0c\u662f Ctrl+D</li> <li>Windows\u7cfb\u7edf\u4e0b\uff0c\u5219\u662f Ctrl+D \u7136\u540e Enter</li> </ul>"},{"location":"zh/python%E7%9B%B8%E5%85%B3/python%E8%AF%AD%E8%A8%80/#10","title":"10","text":"<p>\u590d\u73b0\u4ee3\u7801</p> <p>\u5076\u7136\u4ece</p> <pre><code>cache_dir = kwargs.pop(\"cache_dir\", None)\n</code></pre> <p>\u53d1\u73b0\u4e00\u4e2a\u5b57\u5178\u7684 <code>.pop()</code> \u65b9\u6cd5\u7684\u7528\u6cd5\uff0c</p> <pre><code>def pop(self, k, d=None): # real signature unknown; restored from __doc__\n    \"\"\"\n    D.pop(k[,d]) -&gt; v, remove specified key and return the corresponding value.\n    \n    If key is not found, default is returned if given, otherwise KeyError is raised\n    \"\"\"\n    pass\n</code></pre> <p>If key is not found, default is returned if given, otherwise KeyError is raised</p> <p>\u7b2c\u4e8c\u4e2a\u53c2\u6570\u7684\u4f4d\u7f6e\u662f\u9ed8\u8ba4\u8fd4\u56de\u503c\uff0c\u5373\u5982\u679c\u6ca1\u6709\u67d0\u4e2akey\u5bf9\u5e94\u7684\u503c\uff0c\u90a3\u4e48\u5c31\u8fd4\u56de\u8fd9\u4e2a\u9ed8\u8ba4\u7684\u503c\uff0c\u5426\u5219\u4f1a\u5f15\u8d77 <code>KeyError</code></p>"},{"location":"zh/python%E7%9B%B8%E5%85%B3/python%E8%AF%AD%E8%A8%80/#11","title":"11","text":"<p>\u5982\u679c\u8981\u5728\u51fd\u6570\u5185\u90e8\u4f7f\u7528\u5168\u5c40\u53d8\u91cf\uff0c\u4f7f\u7528 <code>global</code> \u5173\u952e\u5b57\uff0c\u8ddf <code>nonlocal</code> \u7c7b\u4f3c</p>"},{"location":"zh/python%E7%9B%B8%E5%85%B3/scipy/","title":"SciPy","text":"<p> \u7ea6 3554 \u4e2a\u5b57  386 \u884c\u4ee3\u7801  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 17 \u5206\u949f</p>"},{"location":"zh/python%E7%9B%B8%E5%85%B3/scipy/#1","title":"1","text":"<p>\u5b8c\u6210\u793a\u4f8b</p> <pre><code>import numpy as np\nfrom scipy.integrate import odeint\nimport matplotlib.pyplot as plt\n\nm1 = 4866\nm2 = 2433\nk1 = 31557.298\nk2 = 80000\nk3 = 10000\nk4 = 656.3516\nF = 6250\nw = 1.4005\nm_c = 1335.535\n\n\n# \u5b9a\u4e49\u4e8c\u5143\u5fae\u5206\u65b9\u7a0b\u51fd\u6570\ndef f(y, x, m1, m2, k1, k2, k3, k4, F, w, m_c):\n    # return [y[2], y[3], (-k1 * y[0] - k2 * (y[0] - y[1]) - k3 * (y[2] - y[3]) ** 1.5 - k4 * y[2] + F * np.cos(w * x)) / (m1 + m_c),\n    #         (k2 * (y[0] - y[1]) + k3 * (y[2] - y[3]) ** 1.5) / m2]\n    sign = np.sign(y[2] - y[3])\n    return [y[2], y[3],\n            (-k1 * y[0] - k2 * (y[0] - y[1]) - k3 * sign * abs(y[2] - y[3]) ** 1.5 - k4 * y[2] + F * np.cos(w * x)) / (\n                        m1 + m_c),\n            (k2 * (y[0] - y[1]) + k3 * sign * abs(y[2] - y[3]) ** 1.5) / m2]\n\n# \u521d\u59cb\u6761\u4ef6\ny0 = [0, 0, 0, 0]\n\n# \u81ea\u53d8\u91cf\u8303\u56f4\nx = np.linspace(0, 5, 1000)\n\n# \u6c42\u89e3\u5fae\u5206\u65b9\u7a0b\u7ec4\nsol = odeint(f, y0, x, args=(m1, m2, k1, k2, k3, k4, F, w, m_c))\n\n# \u5206\u522b\u63d0\u53d6y1\u548cy2\u7684\u503c\ny1 = sol[:, 0]\ny2 = sol[:, 1]\ny3 = sol[:, 2]\ny4 = sol[:, 3]\n\n# \u7ed8\u5236\u51fd\u6570\u56fe\u50cf\nplt.plot(x, y1, label='x1')\nplt.plot(x, y2, label='x2')\nplt.plot(x, y3, label='x3')\nplt.plot(x, y4, label='x4')\n\n# \u6dfb\u52a0\u56fe\u4f8b\u3001\u5750\u6807\u8f74\u6807\u7b7e\u548c\u6807\u9898\nplt.legend()\nplt.xlabel('t')\nplt.ylabel('x')\nplt.title('Solution of a System of Differential Equations')\n\n# \u663e\u793a\u56fe\u50cf\nplt.show()\n</code></pre>"},{"location":"zh/python%E7%9B%B8%E5%85%B3/scipy/#2","title":"2","text":"<p><code>np.linspace(0, 5, 1000)</code> </p> <pre><code>@array_function_dispatch(_linspace_dispatcher)\ndef linspace(start, stop, num=50, ...):\n    ...\n</code></pre> <p>\u7b2c\u4e00\u3001\u4e8c\u4e2a\u53c2\u6570\u662f\u8d77\u59cb\u548c\u7ed3\u675f\uff0c\u7b2c\u4e09\u4e2a\u53c2\u6570\u662f\u5206\u5272\u70b9\u7684\u6570\u91cf\uff08\u8d8a\u591a\u70b9\u8d8a\u5bc6\uff0c\u66f2\u7ebf\u8d8a\u5e73\u6ed1\uff09\uff0c\u9ed8\u8ba450</p> chat log <p>user: </p> <p>\u4f60\u77e5\u9053scipy\u5417\uff1f</p> <p>chatgpt: </p> <p>\u662f\u7684\uff0c\u6211\u77e5\u9053Scipy\u3002Scipy\u662f\u4e00\u4e2a\u7528\u4e8e\u6570\u5b66\u3001\u79d1\u5b66\u548c\u5de5\u7a0b\u8ba1\u7b97\u7684Python\u5e93\u3002\u5b83\u5efa\u7acb\u5728NumPy\u5e93\u7684\u57fa\u7840\u4e0a\uff0c\u63d0\u4f9b\u4e86\u8bb8\u591a\u7528\u4e8e\u4fe1\u53f7\u5904\u7406\u3001\u4f18\u5316\u3001\u7edf\u8ba1\u5206\u6790\u3001\u7ebf\u6027\u4ee3\u6570\u548c\u6570\u503c\u79ef\u5206\u7b49\u65b9\u9762\u7684\u51fd\u6570\u548c\u5de5\u5177\u3002Scipy\u8fd8\u5305\u62ec\u4e86\u4e00\u4e9b\u7279\u6b8a\u51fd\u6570\u3001\u5085\u91cc\u53f6\u53d8\u6362\u3001\u4fe1\u53f7\u6ee4\u6ce2\u5668\u3001\u6700\u4f18\u5316\u5668\u3001\u7ebf\u6027\u4ee3\u6570\u5de5\u5177\u548c\u968f\u673a\u6570\u751f\u6210\u5668\u7b49\u529f\u80fd\u3002Scipy\u662fPython\u79d1\u5b66\u8ba1\u7b97\u5e93\u7684\u4e00\u4e2a\u5f3a\u5927\u800c\u5e7f\u6cdb\u4f7f\u7528\u7684\u7ec4\u4ef6\uff0c\u5176\u7075\u6d3b\u6027\u548c\u6613\u7528\u6027\u4f7f\u5176\u6210\u4e3a\u79d1\u5b66\u5bb6\u3001\u5de5\u7a0b\u5e08\u548c\u7814\u7a76\u4eba\u5458\u7684\u9996\u9009\u4e4b\u4e00\u3002</p> <p>user: </p> <p>\u600e\u4e48\u4f7f\u7528scipy\u4f60\u77e5\u9053\u5417\uff1f</p> <p>chatgpt: </p> <p>\u662f\u7684\uff0c\u6211\u53ef\u4ee5\u7ed9\u60a8\u63d0\u4f9b\u4f7f\u7528Scipy\u7684\u57fa\u672c\u6b65\u9aa4\uff1a</p> <ol> <li> <p>\u5b89\u88c5Scipy\u5e93\uff1a\u5728\u60a8\u7684Python\u73af\u5883\u4e2d\u4f7f\u7528pip\u547d\u4ee4\u6765\u5b89\u88c5Scipy\u5e93\u3002\u4f8b\u5982\u5728\u547d\u4ee4\u63d0\u793a\u7b26\u4e2d\u8f93\u5165\uff1a<code>pip install scipy</code>\u3002</p> </li> <li> <p>\u5bfc\u5165Scipy\u6a21\u5757\uff1a\u5728Python\u4ee3\u7801\u4e2d\u5bfc\u5165Scipy\u6a21\u5757\u3002\u4f8b\u5982\uff1a<code>import scipy</code>\u3002</p> </li> <li> <p>\u4f7f\u7528Scipy\u51fd\u6570\uff1a\u4f7f\u7528Scipy\u63d0\u4f9b\u7684\u51fd\u6570\u6765\u8fdb\u884c\u6570\u5b66\u3001\u79d1\u5b66\u548c\u5de5\u7a0b\u8ba1\u7b97\u3002\u4f8b\u5982\uff0c\u8981\u8fdb\u884c\u7ebf\u6027\u4ee3\u6570\u8ba1\u7b97\uff0c\u53ef\u4ee5\u4f7f\u7528Scipy\u4e2d\u7684<code>linalg</code>\u6a21\u5757\uff0c\u5982\u4e0b\u6240\u793a\uff1a</p> </li> </ol> <pre><code>import scipy.linalg as la\n\n# \u521b\u5efa\u4e00\u4e2a2x2\u7684\u77e9\u9635\nA = np.array([[1, 2], [3, 4]])\n\n# \u8ba1\u7b97\u77e9\u9635\u7684\u884c\u5217\u5f0f\ndet_A = la.det(A)\n\n# \u8ba1\u7b97\u77e9\u9635\u7684\u9006\ninv_A = la.inv(A)\n</code></pre> <p>\u9664\u4e86\u7ebf\u6027\u4ee3\u6570\uff0cScipy\u8fd8\u63d0\u4f9b\u4e86\u8bb8\u591a\u5176\u4ed6\u6a21\u5757\u548c\u51fd\u6570\uff0c\u4f8b\u5982\uff1a</p> <ul> <li><code>scipy.optimize</code>\uff1a\u63d0\u4f9b\u4e86\u4f18\u5316\u7b97\u6cd5\uff0c\u7528\u4e8e\u5bfb\u627e\u51fd\u6570\u7684\u6700\u5c0f\u503c\u6216\u6700\u5927\u503c\u3002</li> <li><code>scipy.integrate</code>\uff1a\u63d0\u4f9b\u4e86\u6570\u503c\u79ef\u5206\u51fd\u6570\u3002</li> <li><code>scipy.stats</code>\uff1a\u63d0\u4f9b\u4e86\u7edf\u8ba1\u5206\u6790\u51fd\u6570\uff0c\u7528\u4e8e\u751f\u6210\u548c\u64cd\u4f5c\u6982\u7387\u5206\u5e03\u3002</li> <li><code>scipy.signal</code>\uff1a\u63d0\u4f9b\u4e86\u4fe1\u53f7\u5904\u7406\u51fd\u6570\uff0c\u4f8b\u5982\u6ee4\u6ce2\u5668\u548c\u5085\u91cc\u53f6\u53d8\u6362\u7b49\u3002</li> </ul> <p>Scipy\u5e93\u7684\u4f7f\u7528\u975e\u5e38\u5e7f\u6cdb\uff0c\u5982\u679c\u60a8\u9700\u8981\u8fdb\u884c\u7279\u5b9a\u7684\u6570\u5b66\u3001\u79d1\u5b66\u6216\u5de5\u7a0b\u8ba1\u7b97\uff0c\u53ef\u4ee5\u5148\u770b\u770bScipy\u5e93\u662f\u5426\u63d0\u4f9b\u4e86\u76f8\u5173\u7684\u51fd\u6570\u548c\u5de5\u5177\u3002</p> <p>user: </p> <p>\u90a3\u4f60\u77e5\u9053\u5982\u4f55\u4f7f\u7528scipy\u89e3\u4e8c\u5143\u5fae\u5206\u65b9\u7a0b\u7ec4\u5417\uff1f</p> <p>chatgpt: </p> <p>\u662f\u7684\uff0c\u4f7f\u7528Scipy\u53ef\u4ee5\u89e3\u4e8c\u5143\u5fae\u5206\u65b9\u7a0b\u7ec4\u3002\u4e0b\u9762\u662f\u4e00\u4e2a\u7b80\u5355\u7684\u4f8b\u5b50\uff0c\u5c55\u793a\u4e86\u5982\u4f55\u4f7f\u7528Scipy\u89e3\u4e8c\u5143\u5fae\u5206\u65b9\u7a0b\u7ec4\uff1a</p> <p>\u5047\u8bbe\u6211\u4eec\u8981\u89e3\u51b3\u4ee5\u4e0b\u4e8c\u5143\u5fae\u5206\u65b9\u7a0b\u7ec4\uff1a</p> <p>y1' = -2y1 + y2 y2' = y1 - 2y2</p> <p>\u5176\u4e2dy1\u548cy2\u662f\u5173\u4e8e\u81ea\u53d8\u91cfx\u7684\u51fd\u6570\u3002\u4e3a\u4e86\u89e3\u51b3\u8fd9\u4e2a\u65b9\u7a0b\u7ec4\uff0c\u6211\u4eec\u9700\u8981\u5c06\u5b83\u8f6c\u6362\u4e3a\u77e9\u9635\u5f62\u5f0f\uff1a</p> <p>[d/dx(y1)]   [-2  1]   [y1] [d/dx(y2)] = [ 1 -2] * [y2]</p> <p>\u7136\u540e\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528Scipy\u7684<code>odeint</code>\u51fd\u6570\u6765\u89e3\u51b3\u8be5\u65b9\u7a0b\u7ec4\u3002<code>odeint</code>\u51fd\u6570\u53ef\u4ee5\u7528\u6765\u89e3\u51b3\u4e00\u822c\u5f62\u5f0f\u7684\u5e38\u5fae\u5206\u65b9\u7a0b\u7ec4\u3002\u4ee5\u4e0b\u662f\u4e00\u4e2a\u4f7f\u7528<code>odeint</code>\u51fd\u6570\u6765\u89e3\u51b3\u4e0a\u8ff0\u4e8c\u5143\u5fae\u5206\u65b9\u7a0b\u7ec4\u7684\u793a\u4f8b\u4ee3\u7801\uff1a</p> <pre><code>import numpy as np\nfrom scipy.integrate import odeint\n\n# \u5b9a\u4e49\u4e8c\u5143\u5fae\u5206\u65b9\u7a0b\u51fd\u6570\ndef f(y, x):\n    return [-2*y[0] + y[1], y[0] - 2*y[1]]\n\n# \u521d\u59cb\u6761\u4ef6\ny0 = [1, 0]\n\n# \u81ea\u53d8\u91cf\u8303\u56f4\nx = np.linspace(0, 10, 100)\n\n# \u6c42\u89e3\u5fae\u5206\u65b9\u7a0b\u7ec4\nsol = odeint(f, y0, x)\n\n# \u5206\u522b\u63d0\u53d6y1\u548cy2\u7684\u503c\ny1 = sol[:, 0]\ny2 = sol[:, 1]\n</code></pre> <p>\u5728\u8fd9\u4e2a\u793a\u4f8b\u4e2d\uff0c\u6211\u4eec\u9996\u5148\u5b9a\u4e49\u4e86\u4e00\u4e2a\u51fd\u6570f\u6765\u8868\u793a\u4e8c\u5143\u5fae\u5206\u65b9\u7a0b\u7ec4\u3002\u7136\u540e\uff0c\u6211\u4eec\u6307\u5b9a\u4e86\u521d\u59cb\u6761\u4ef6y0\u548c\u81ea\u53d8\u91cf\u8303\u56f4x\uff0c\u5e76\u4f7f\u7528<code>odeint</code>\u51fd\u6570\u6765\u6c42\u89e3\u5fae\u5206\u65b9\u7a0b\u7ec4\u3002\u6700\u540e\uff0c\u6211\u4eec\u63d0\u53d6\u4e86y1\u548cy2\u7684\u503c\uff0c\u5e76\u5c06\u5b83\u4eec\u5b58\u50a8\u5728y1\u548cy2\u6570\u7ec4\u4e2d\u3002</p> <p>\u8bf7\u6ce8\u610f\uff0c<code>odeint</code>\u51fd\u6570\u7684\u7b2c\u4e00\u4e2a\u53c2\u6570\u662f\u8868\u793a\u5fae\u5206\u65b9\u7a0b\u7ec4\u7684\u51fd\u6570\u540d\uff0c\u7b2c\u4e8c\u4e2a\u53c2\u6570\u662f\u521d\u59cb\u6761\u4ef6\uff0c\u7b2c\u4e09\u4e2a\u53c2\u6570\u662f\u81ea\u53d8\u91cf\u8303\u56f4\u3002\u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c\u6211\u4eec\u4f7f\u7528<code>numpy.linspace</code>\u51fd\u6570\u6765\u751f\u6210\u81ea\u53d8\u91cf\u8303\u56f4x\u3002</p> <p>user: </p> <p>\u5982\u4f55\u6253\u5370y1 y2\u6210\u51fd\u6570\u56fe\u50cf\uff1f</p> <p>chatgpt: </p> <p>\u8981\u5c06y1\u548cy2\u6253\u5370\u6210\u51fd\u6570\u56fe\u50cf\uff0c\u6211\u4eec\u9700\u8981\u4f7f\u7528Matplotlib\u5e93\u3002Matplotlib\u662f\u4e00\u4e2aPython\u5e93\uff0c\u53ef\u7528\u4e8e\u7ed8\u5236\u5404\u79cd\u7c7b\u578b\u7684\u56fe\u5f62\uff0c\u5305\u62ec\u7ebf\u56fe\u3001\u6563\u70b9\u56fe\u3001\u6761\u5f62\u56fe\u3001\u997c\u56fe\u7b49\u7b49\u3002</p> <p>\u4ee5\u4e0b\u662f\u4e00\u4e2a\u793a\u4f8b\u4ee3\u7801\uff0c\u5c55\u793a\u4e86\u5982\u4f55\u4f7f\u7528Matplotlib\u5e93\u7ed8\u5236y1\u548cy2\u7684\u51fd\u6570\u56fe\u50cf\uff1a</p> <pre><code>import numpy as np\nfrom scipy.integrate import odeint\nimport matplotlib.pyplot as plt\n\n# \u5b9a\u4e49\u4e8c\u5143\u5fae\u5206\u65b9\u7a0b\u51fd\u6570\ndef f(y, x):\n    return [-2*y[0] + y[1], y[0] - 2*y[1]]\n\n# \u521d\u59cb\u6761\u4ef6\ny0 = [1, 0]\n\n# \u81ea\u53d8\u91cf\u8303\u56f4\nx = np.linspace(0, 10, 100)\n\n# \u6c42\u89e3\u5fae\u5206\u65b9\u7a0b\u7ec4\nsol = odeint(f, y0, x)\n\n# \u5206\u522b\u63d0\u53d6y1\u548cy2\u7684\u503c\ny1 = sol[:, 0]\ny2 = sol[:, 1]\n\n# \u7ed8\u5236\u51fd\u6570\u56fe\u50cf\nplt.plot(x, y1, label='y1')\nplt.plot(x, y2, label='y2')\n\n# \u6dfb\u52a0\u56fe\u4f8b\u3001\u5750\u6807\u8f74\u6807\u7b7e\u548c\u6807\u9898\nplt.legend()\nplt.xlabel('x')\nplt.ylabel('y')\nplt.title('Solution of a System of Differential Equations')\n\n# \u663e\u793a\u56fe\u50cf\nplt.show()\n</code></pre> <p>\u5728\u8fd9\u4e2a\u793a\u4f8b\u4e2d\uff0c\u6211\u4eec\u9996\u5148\u6c42\u89e3\u4e86\u5fae\u5206\u65b9\u7a0b\u7ec4\uff0c\u5e76\u63d0\u53d6\u4e86y1\u548cy2\u7684\u503c\u3002\u7136\u540e\uff0c\u6211\u4eec\u4f7f\u7528Matplotlib\u7684<code>plot</code>\u51fd\u6570\u7ed8\u5236\u4e86y1\u548cy2\u7684\u51fd\u6570\u56fe\u50cf\uff0c\u5e76\u4f7f\u7528<code>legend</code>\u51fd\u6570\u6dfb\u52a0\u4e86\u56fe\u4f8b\u3002\u6700\u540e\uff0c\u6211\u4eec\u4f7f\u7528<code>xlabel</code>\u3001<code>ylabel</code>\u548c<code>title</code>\u51fd\u6570\u6dfb\u52a0\u4e86\u5750\u6807\u8f74\u6807\u7b7e\u548c\u6807\u9898\uff0c\u5e76\u4f7f\u7528<code>show</code>\u51fd\u6570\u663e\u793a\u4e86\u56fe\u50cf\u3002</p> <p>\u8fd9\u4e2a\u4ee3\u7801\u4f1a\u751f\u6210\u4e00\u4e2a\u5305\u542by1\u548cy2\u51fd\u6570\u56fe\u50cf\u7684\u7a97\u53e3\u3002\u60a8\u53ef\u4ee5\u901a\u8fc7\u8c03\u6574x\u8303\u56f4\u3001\u521d\u59cb\u6761\u4ef6\u548c\u5fae\u5206\u65b9\u7a0b\u51fd\u6570\u6765\u751f\u6210\u4e0d\u540c\u7684\u56fe\u50cf\u3002</p> <p>user: </p> <p>\u7cfb\u6570\u6d6e\u70b9\u6570\u65f6\uff0c\u62a5\u9519\u4e86\uff0c TypeError: unsupported operand type(s) for *: 'function' and 'float' \u5e94\u8be5\u5982\u4f55\u89e3\u51b3\uff1f</p> <p>chatgpt: </p> <p>\u8fd9\u4e2a\u9519\u8bef\u901a\u5e38\u662f\u7531\u4e8e\u53c2\u6570\u7c7b\u578b\u4e0d\u5339\u914d\u5f15\u8d77\u7684\u3002\u5177\u4f53\u5730\u8bf4\uff0c\u5728\u60a8\u7684\u4ee3\u7801\u4e2d\uff0c\u60a8\u53ef\u80fd\u5728\u4f7f\u7528<code>odeint</code>\u51fd\u6570\u65f6\u5c06\u4e00\u4e2a\u51fd\u6570\u5bf9\u8c61\u4e0e\u4e00\u4e2a\u6d6e\u70b9\u6570\u76f8\u4e58\uff0c\u4ece\u800c\u5bfc\u81f4\u4e86\u8fd9\u4e2a\u9519\u8bef\u3002</p> <p>\u8981\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u60a8\u53ef\u4ee5\u68c0\u67e5\u60a8\u7684\u4ee3\u7801\uff0c\u786e\u4fdd\u60a8\u6ca1\u6709\u5728\u4f7f\u7528<code>odeint</code>\u51fd\u6570\u65f6\u5c06\u51fd\u6570\u5bf9\u8c61\u4e0e\u6d6e\u70b9\u6570\u76f8\u4e58\u3002\u53e6\u5916\uff0c\u60a8\u53ef\u4ee5\u5c1d\u8bd5\u5c06\u6240\u6709\u7684\u7cfb\u6570\u90fd\u663e\u5f0f\u5730\u8f6c\u6362\u4e3a\u6d6e\u70b9\u6570\uff0c\u4ee5\u786e\u4fdd<code>odeint</code>\u51fd\u6570\u63a5\u6536\u5230\u7684\u53c2\u6570\u7c7b\u578b\u90fd\u662f\u4e00\u81f4\u7684\u3002</p> <p>\u4ee5\u4e0b\u662f\u4e00\u4e2a\u4fee\u590d\u8fd9\u4e2a\u95ee\u9898\u7684\u793a\u4f8b\u4ee3\u7801\uff1a</p> <pre><code>import numpy as np\nfrom scipy.integrate import odeint\n\n# \u5b9a\u4e49\u4e8c\u5143\u5fae\u5206\u65b9\u7a0b\u51fd\u6570\ndef f(y, x, a, b, c, d):\n    return [-a*y[0] + b*y[1], c*y[0] - d*y[1]]\n\n# \u521d\u59cb\u6761\u4ef6\ny0 = [1, 0]\n\n# \u81ea\u53d8\u91cf\u8303\u56f4\nx = np.linspace(0, 10, 100)\n\n# \u5b9a\u4e49\u53c2\u6570\na = 1.0\nb = 2.0\nc = 3.0\nd = 4.0\n\n# \u6c42\u89e3\u5fae\u5206\u65b9\u7a0b\u7ec4\nsol = odeint(f, y0, x, args=(a, b, c, d))\n\n# \u5206\u522b\u63d0\u53d6y1\u548cy2\u7684\u503c\ny1 = sol[:, 0]\ny2 = sol[:, 1]\n</code></pre> <p>\u5728\u8fd9\u4e2a\u793a\u4f8b\u4e2d\uff0c\u6211\u4eec\u9996\u5148\u5c06\u6240\u6709\u7684\u7cfb\u6570\u90fd\u663e\u5f0f\u5730\u8f6c\u6362\u4e3a\u6d6e\u70b9\u6570\u3002\u7136\u540e\uff0c\u6211\u4eec\u5c06\u8fd9\u4e9b\u7cfb\u6570\u4f5c\u4e3a\u53c2\u6570\u4f20\u9012\u7ed9\u4e8c\u5143\u5fae\u5206\u65b9\u7a0b\u51fd\u6570f\uff0c\u5e76\u5728\u8c03\u7528<code>odeint</code>\u51fd\u6570\u65f6\u5c06\u8fd9\u4e9b\u53c2\u6570\u4f5c\u4e3a\u9644\u52a0\u53c2\u6570\u4f20\u9012\u3002\u6700\u540e\uff0c\u6211\u4eec\u6c42\u89e3\u5fae\u5206\u65b9\u7a0b\u7ec4\uff0c\u5e76\u63d0\u53d6\u4e86y1\u548cy2\u7684\u503c\u3002</p> <p>\u8bf7\u6ce8\u610f\uff0c\u6211\u4eec\u5c06\u53c2\u6570\u5217\u8868<code>(a, b, c, d)</code>\u4f5c\u4e3a<code>odeint</code>\u51fd\u6570\u7684<code>args</code>\u53c2\u6570\u4f20\u9012\u3002\u8fd9\u662f\u56e0\u4e3a\uff0c<code>odeint</code>\u51fd\u6570\u9700\u8981\u63a5\u6536\u4e00\u4e2a\u51fd\u6570\u548c\u4e00\u4e2a\u521d\u59cb\u6761\u4ef6\uff0c\u5e76\u53ef\u9009\u5730\u63a5\u6536\u4e00\u4e9b\u9644\u52a0\u7684\u53c2\u6570\u3002\u8fd9\u4e9b\u9644\u52a0\u53c2\u6570\u5fc5\u987b\u4f5c\u4e3a\u4e00\u4e2a\u5143\u7ec4\u4f20\u9012\u7ed9<code>args</code>\u53c2\u6570\uff0c\u4ee5\u4fbf\u5728\u6c42\u89e3\u5fae\u5206\u65b9\u7a0b\u7ec4\u65f6\u4f7f\u7528\u3002</p> <p>user: </p> <p>\u90a3\u4e48scipy\u5982\u4f55\u6c42\u89e3\u4e09\u5143\u4e8c\u9636\u5fae\u5206\u65b9\u7a0b\uff1f</p> <p>chatgpt: </p> <p>Scipy\u5e93\u4e2d\u6ca1\u6709\u76f4\u63a5\u6c42\u89e3\u4e09\u5143\u4e8c\u9636\u5fae\u5206\u65b9\u7a0b\u7684\u51fd\u6570\uff0c\u4f46\u53ef\u4ee5\u4f7f\u7528<code>odeint</code>\u51fd\u6570\u6765\u6c42\u89e3\u3002\u4e3a\u4e86\u4f7f\u7528<code>odeint</code>\u51fd\u6570\u6c42\u89e3\u4e09\u5143\u4e8c\u9636\u5fae\u5206\u65b9\u7a0b\uff0c\u9700\u8981\u5c06\u5176\u8f6c\u5316\u4e3a\u4e00\u4e2a\u516d\u5143\u4e00\u9636\u5fae\u5206\u65b9\u7a0b\u7ec4\u3002</p> <p>\u4f8b\u5982\uff0c\u5047\u8bbe\u6211\u4eec\u8981\u6c42\u89e3\u4ee5\u4e0b\u4e09\u5143\u4e8c\u9636\u5fae\u5206\u65b9\u7a0b\u7ec4\uff1a</p> <p>x''(t) + 2y'(t) + 3z(t) = 0 y''(t) + 3x(t) + 4z'(t) = 0 z''(t) + x(t) + 2*y(t) = 0</p> <p>\u6211\u4eec\u53ef\u4ee5\u5c06\u5b83\u8f6c\u5316\u4e3a\u4ee5\u4e0b\u516d\u5143\u4e00\u9636\u5fae\u5206\u65b9\u7a0b\u7ec4\uff1a</p> <p>x'(t) = v_x(t) v_x'(t) = -2v_y(t) - 3z(t) y'(t) = v_y(t) v_y'(t) = -3x(t) - 4v_z(t) z'(t) = v_z(t) v_z'(t) = -x(t) - 2*y(t)</p> <p>\u5176\u4e2d\uff0cx(t)\u3001y(t)\u548cz(t)\u662f\u5f85\u6c42\u89e3\u7684\u51fd\u6570\uff0cv_x(t)\u3001v_y(t)\u548cv_z(t)\u662f\u5b83\u4eec\u7684\u5bfc\u6570\u3002</p> <p>\u6211\u4eec\u53ef\u4ee5\u5c06\u8fd9\u4e2a\u516d\u5143\u4e00\u9636\u5fae\u5206\u65b9\u7a0b\u7ec4\u4f5c\u4e3a<code>odeint</code>\u51fd\u6570\u7684\u8f93\u5165\uff0c\u5e76\u4f7f\u7528\u521d\u59cb\u6761\u4ef6\u6c42\u89e3\u5b83\u3002\u4ee5\u4e0b\u662f\u4e00\u4e2a\u4f7f\u7528<code>odeint</code>\u51fd\u6570\u6c42\u89e3\u4e0a\u8ff0\u4e09\u5143\u4e8c\u9636\u5fae\u5206\u65b9\u7a0b\u7684\u793a\u4f8b\u4ee3\u7801\uff1a</p> <pre><code>import numpy as np\nfrom scipy.integrate import odeint\n\n# \u5b9a\u4e49\u516d\u5143\u4e00\u9636\u5fae\u5206\u65b9\u7a0b\u51fd\u6570\ndef f(y, t):\n    x, vx, y, vy, z, vz = y\n    return [vx, -2*vy - 3*z, vy, -3*x - 4*vz, vz, -x - 2*y]\n\n# \u521d\u59cb\u6761\u4ef6\ny0 = [1, 0, 1, 0, 1, 0]\n\n# \u81ea\u53d8\u91cf\u8303\u56f4\nt = np.linspace(0, 10, 100)\n\n# \u6c42\u89e3\u5fae\u5206\u65b9\u7a0b\u7ec4\nsol = odeint(f, y0, t)\n\n# \u5206\u522b\u63d0\u53d6x, y, z \u7684\u503c\nx = sol[:, 0]\ny = sol[:, 2]\nz = sol[:, 4]\n</code></pre> <p>\u5728\u8fd9\u4e2a\u793a\u4f8b\u4e2d\uff0c\u6211\u4eec\u5b9a\u4e49\u4e86\u4e00\u4e2a\u51fd\u6570f\u6765\u8868\u793a\u516d\u5143\u4e00\u9636\u5fae\u5206\u65b9\u7a0b\u7ec4\uff0c\u5e76\u6307\u5b9a\u4e86\u521d\u59cb\u6761\u4ef6y0\u548c\u81ea\u53d8\u91cf\u8303\u56f4t\u3002\u7136\u540e\uff0c\u6211\u4eec\u4f7f\u7528<code>odeint</code>\u51fd\u6570\u6c42\u89e3\u5fae\u5206\u65b9\u7a0b\u7ec4\uff0c\u5e76\u63d0\u53d6\u4e86x\u3001y\u548cz\u7684\u503c\u3002</p> <p>\u8bf7\u6ce8\u610f\uff0c\u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c\u6211\u4eec\u5c06\u521d\u59cb\u6761\u4ef6y0\u4f5c\u4e3a\u4e00\u4e2a\u516d\u5143\u5217\u8868\u4f20\u9012\u7ed9<code>odeint</code>\u51fd\u6570\u3002\u5728\u51fd\u6570f\u4e2d\uff0c\u6211\u4eec\u4f7f\u7528y\u5217\u8868\u6765\u8868\u793a\u516d\u4e2a\u51fd\u6570\u548c\u5b83\u4eec\u7684\u5bfc\u6570\u3002</p> <p>user: </p> <p>\u5982\u4f55\u6253\u5370\u6210\u56fe\u50cf\uff1f</p> <p>chatgpt: </p> <p>\u8981\u5c06\u6c42\u89e3\u7684\u4e09\u5143\u4e8c\u9636\u5fae\u5206\u65b9\u7a0b\u7684\u7ed3\u679c\u6253\u5370\u6210\u56fe\u50cf\uff0c\u53ef\u4ee5\u4f7f\u7528Matplotlib\u5e93\u3002Matplotlib\u662f\u4e00\u4e2aPython\u5e93\uff0c\u53ef\u7528\u4e8e\u7ed8\u5236\u5404\u79cd\u7c7b\u578b\u7684\u56fe\u5f62\uff0c\u5305\u62ec\u7ebf\u56fe\u3001\u6563\u70b9\u56fe\u3001\u6761\u5f62\u56fe\u3001\u997c\u56fe\u7b49\u7b49\u3002</p> <p>\u4ee5\u4e0b\u662f\u4e00\u4e2a\u793a\u4f8b\u4ee3\u7801\uff0c\u5c55\u793a\u4e86\u5982\u4f55\u4f7f\u7528Matplotlib\u5e93\u7ed8\u5236x\u3001y\u548cz\u7684\u51fd\u6570\u56fe\u50cf\uff1a</p> <pre><code>import numpy as np\nfrom scipy.integrate import odeint\nimport matplotlib.pyplot as plt\n\n# \u5b9a\u4e49\u516d\u5143\u4e00\u9636\u5fae\u5206\u65b9\u7a0b\u51fd\u6570\ndef f(y, t):\n    x, vx, y, vy, z, vz = y\n    return [vx, -2*vy - 3*z, vy, -3*x - 4*vz, vz, -x - 2*y]\n\n# \u521d\u59cb\u6761\u4ef6\ny0 = [1, 0, 1, 0, 1, 0]\n\n# \u81ea\u53d8\u91cf\u8303\u56f4\nt = np.linspace(0, 10, 100)\n\n# \u6c42\u89e3\u5fae\u5206\u65b9\u7a0b\u7ec4\nsol = odeint(f, y0, t)\n\n# \u5206\u522b\u63d0\u53d6x, y, z\u7684\u503c\nx = sol[:, 0]\ny = sol[:, 2]\nz = sol[:, 4]\n\n# \u7ed8\u5236\u51fd\u6570\u56fe\u50cf\nplt.plot(t, x, label='x')\nplt.plot(t, y, label='y')\nplt.plot(t, z, label='z')\n\n# \u6dfb\u52a0\u56fe\u4f8b\u3001\u5750\u6807\u8f74\u6807\u7b7e\u548c\u6807\u9898\nplt.legend()\nplt.xlabel('t')\nplt.ylabel('f(t)')\nplt.title('Solution of a System of Differential Equations')\n\n# \u663e\u793a\u56fe\u50cf\nplt.show()\n</code></pre> <p>\u5728\u8fd9\u4e2a\u793a\u4f8b\u4e2d\uff0c\u6211\u4eec\u9996\u5148\u6c42\u89e3\u4e86\u5fae\u5206\u65b9\u7a0b\u7ec4\uff0c\u5e76\u63d0\u53d6\u4e86x\u3001y\u548cz\u7684\u503c\u3002\u7136\u540e\uff0c\u6211\u4eec\u4f7f\u7528Matplotlib\u7684<code>plot</code>\u51fd\u6570\u7ed8\u5236\u4e86x\u3001y\u548cz\u7684\u51fd\u6570\u56fe\u50cf\uff0c\u5e76\u4f7f\u7528<code>legend</code>\u51fd\u6570\u6dfb\u52a0\u4e86\u56fe\u4f8b\u3002\u6700\u540e\uff0c\u6211\u4eec\u4f7f\u7528<code>xlabel</code>\u3001<code>ylabel</code>\u548c<code>title</code>\u51fd\u6570\u6dfb\u52a0\u4e86\u5750\u6807\u8f74\u6807\u7b7e\u548c\u6807\u9898\uff0c\u5e76\u4f7f\u7528<code>show</code>\u51fd\u6570\u663e\u793a\u4e86\u56fe\u50cf\u3002</p> <p>\u8fd9\u4e2a\u4ee3\u7801\u4f1a\u751f\u6210\u4e00\u4e2a\u5305\u542bx\u3001y\u548cz\u51fd\u6570\u56fe\u50cf\u7684\u7a97\u53e3\u3002\u60a8\u53ef\u4ee5\u901a\u8fc7\u8c03\u6574\u81ea\u53d8\u91cf\u8303\u56f4\u3001\u521d\u59cb\u6761\u4ef6\u548c\u5fae\u5206\u65b9\u7a0b\u51fd\u6570\u6765\u751f\u6210\u4e0d\u540c\u7684\u56fe\u50cf\u3002</p> <p>user: </p> <p>\u80fd\u4e0d\u80fd\u6253\u5370\u62103d\u7684\u56fe\u50cf\uff1f</p> <p>chatgpt: </p> <p>\u662f\u7684\uff0c\u53ef\u4ee5\u4f7f\u7528Matplotlib\u5e93\u4e2d\u7684mplot3d\u6a21\u5757\u5c06\u4e09\u5143\u4e8c\u9636\u5fae\u5206\u65b9\u7a0b\u7684\u6c42\u89e3\u7ed3\u679c\u6253\u5370\u62103D\u56fe\u50cf\u3002</p> <p>\u4ee5\u4e0b\u662f\u4e00\u4e2a\u793a\u4f8b\u4ee3\u7801\uff0c\u5c55\u793a\u4e86\u5982\u4f55\u4f7f\u7528Matplotlib\u7684mplot3d\u6a21\u5757\u7ed8\u5236x\u3001y\u548cz\u76843D\u56fe\u50cf\uff1a</p> <pre><code>import numpy as np\nfrom scipy.integrate import odeint\nimport matplotlib.pyplot as plt\nfrom mpl_toolkits.mplot3d import Axes3D\n\n# \u5b9a\u4e49\u516d\u5143\u4e00\u9636\u5fae\u5206\u65b9\u7a0b\u51fd\u6570\ndef f(y, t):\n    x, vx, y, vy, z, vz = y\n    return [vx, -2*vy - 3*z, vy, -3*x - 4*vz, vz, -x - 2*y]\n\n# \u521d\u59cb\u6761\u4ef6\ny0 = [1, 0, 1, 0, 1, 0]\n\n# \u81ea\u53d8\u91cf\u8303\u56f4\nt = np.linspace(0, 10, 100)\n\n# \u6c42\u89e3\u5fae\u5206\u65b9\u7a0b\u7ec4\nsol = odeint(f, y0, t)\n\n# \u5206\u522b\u63d0\u53d6x, y, z\u7684\u503c\nx = sol[:, 0]\ny = sol[:, 2]\nz = sol[:, 4]\n\n# \u7ed8\u52363D\u56fe\u50cf\nfig = plt.figure()\nax = fig.add_subplot(111, projection='3d')\nax.plot(x, y, z)\n\n# \u6dfb\u52a0\u5750\u6807\u8f74\u6807\u7b7e\u548c\u6807\u9898\nax.set_xlabel('x')\nax.set_ylabel('y')\nax.set_zlabel('z')\nplt.title('Solution of a System of Differential Equations')\n\n# \u663e\u793a\u56fe\u50cf\nplt.show()\n</code></pre> <p>\u5728\u8fd9\u4e2a\u793a\u4f8b\u4e2d\uff0c\u6211\u4eec\u9996\u5148\u6c42\u89e3\u4e86\u5fae\u5206\u65b9\u7a0b\u7ec4\uff0c\u5e76\u63d0\u53d6\u4e86x\u3001y\u548cz\u7684\u503c\u3002\u7136\u540e\uff0c\u6211\u4eec\u4f7f\u7528Matplotlib\u7684mplot3d\u6a21\u5757\u4e2d\u7684<code>Axes3D</code>\u7c7b\u521b\u5efa\u4e00\u4e2a3D\u5750\u6807\u7cfb\uff0c\u5e76\u4f7f\u7528<code>plot</code>\u51fd\u6570\u7ed8\u5236\u4e86x\u3001y\u548cz\u76843D\u56fe\u50cf\u3002\u6700\u540e\uff0c\u6211\u4eec\u4f7f\u7528<code>set_xlabel</code>\u3001<code>set_ylabel</code>\u548c<code>set_zlabel</code>\u51fd\u6570\u6dfb\u52a0\u4e86\u5750\u6807\u8f74\u6807\u7b7e\uff0c\u5e76\u4f7f\u7528<code>title</code>\u51fd\u6570\u6dfb\u52a0\u4e86\u6807\u9898\u3002</p> <p>\u8fd9\u4e2a\u4ee3\u7801\u4f1a\u751f\u6210\u4e00\u4e2a\u5305\u542bx\u3001y\u548cz\u51fd\u6570\u76843D\u56fe\u50cf\u7684\u7a97\u53e3\u3002\u60a8\u53ef\u4ee5\u901a\u8fc7\u8c03\u6574\u81ea\u53d8\u91cf\u8303\u56f4\u3001\u521d\u59cb\u6761\u4ef6\u548c\u5fae\u5206\u65b9\u7a0b\u51fd\u6570\u6765\u751f\u6210\u4e0d\u540c\u7684\u56fe\u50cf\u3002</p> <p>user: </p> <p>\u90a3scipy\u80fd\u4e0d\u80fd\u89e3\u4e09\u5143\u975e\u7ebf\u6027\u5fae\u5206\u65b9\u7a0b\uff1f</p> <p>chatgpt: </p> <p>Scipy\u5e93\u4e2d\u7684<code>odeint</code>\u51fd\u6570\u53ef\u4ee5\u7528\u4e8e\u6c42\u89e3\u4e09\u5143\u975e\u7ebf\u6027\u5fae\u5206\u65b9\u7a0b\u3002</p> <p>\u5bf9\u4e8e\u4e09\u5143\u975e\u7ebf\u6027\u5fae\u5206\u65b9\u7a0b\uff0c\u53ef\u4ee5\u5c06\u5176\u8f6c\u5316\u4e3a\u4e00\u4e2a\u516d\u5143\u4e00\u9636\u5fae\u5206\u65b9\u7a0b\u7ec4\uff0c\u5e76\u5c06\u5176\u4f5c\u4e3a<code>odeint</code>\u51fd\u6570\u7684\u8f93\u5165\u3002\u5177\u4f53\u6765\u8bf4\uff0c\u5982\u679c\u6211\u4eec\u6709\u4ee5\u4e0b\u4e09\u5143\u975e\u7ebf\u6027\u5fae\u5206\u65b9\u7a0b\uff1a</p> <p>x''(t) = -x(t) * y(t) * z(t) y''(t) = -y(t) * z(t) * x(t) z''(t) = -z(t) * x(t) * y(t)</p> <p>\u6211\u4eec\u53ef\u4ee5\u5c06\u5176\u8f6c\u5316\u4e3a\u4ee5\u4e0b\u516d\u5143\u4e00\u9636\u5fae\u5206\u65b9\u7a0b\u7ec4\uff1a</p> <p>x'(t) = v_x(t) v_x'(t) = -x(t) * y(t) * z(t) y'(t) = v_y(t) v_y'(t) = -y(t) * z(t) * x(t) z'(t) = v_z(t) v_z'(t) = -z(t) * x(t) * y(t)</p> <p>\u5176\u4e2d\uff0cx(t)\u3001y(t)\u548cz(t)\u662f\u5f85\u6c42\u89e3\u7684\u51fd\u6570\uff0cv_x(t)\u3001v_y(t)\u548cv_z(t)\u662f\u5b83\u4eec\u7684\u5bfc\u6570\u3002</p> <p>\u4ee5\u4e0b\u662f\u4e00\u4e2a\u4f7f\u7528<code>odeint</code>\u51fd\u6570\u6c42\u89e3\u4e0a\u8ff0\u4e09\u5143\u975e\u7ebf\u6027\u5fae\u5206\u65b9\u7a0b\u7684\u793a\u4f8b\u4ee3\u7801\uff1a</p> <pre><code>import numpy as np\nfrom scipy.integrate import odeint\n\n# \u5b9a\u4e49\u516d\u5143\u4e00\u9636\u5fae\u5206\u65b9\u7a0b\u51fd\u6570\ndef f(y, t):\n    x, vx, y, vy, z, vz = y\n    return [vx, -x*y*z, vy, -y*z*x, vz, -z*x*y]\n\n# \u521d\u59cb\u6761\u4ef6\ny0 = [1, 0, 1, 0, 1, 0]\n\n# \u81ea\u53d8\u91cf\u8303\u56f4\nt = np.linspace(0, 10, 100)\n\n# \u6c42\u89e3\u5fae\u5206\u65b9\u7a0b\u7ec4\nsol = odeint(f, y0, t)\n\n# \u5206\u522b\u63d0\u53d6x, y, z \u7684\u503c\nx = sol[:, 0]\ny = sol[:, 2]\nz = sol[:, 4]\n</code></pre> <p>\u5728\u8fd9\u4e2a\u793a\u4f8b\u4e2d\uff0c\u6211\u4eec\u5b9a\u4e49\u4e86\u4e00\u4e2a\u51fd\u6570f\u6765\u8868\u793a\u516d\u5143\u4e00\u9636\u5fae\u5206\u65b9\u7a0b\u7ec4\uff0c\u5e76\u6307\u5b9a\u4e86\u521d\u59cb\u6761\u4ef6y0\u548c\u81ea\u53d8\u91cf\u8303\u56f4t\u3002\u7136\u540e\uff0c\u6211\u4eec\u4f7f\u7528<code>odeint</code>\u51fd\u6570\u6c42\u89e3\u5fae\u5206\u65b9\u7a0b\u7ec4\uff0c\u5e76\u63d0\u53d6\u4e86x\u3001y\u548cz\u7684\u503c\u3002</p> <p>\u8bf7\u6ce8\u610f\uff0c\u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c\u6211\u4eec\u5c06\u521d\u59cb\u6761\u4ef6y0\u4f5c\u4e3a\u4e00\u4e2a\u516d\u5143\u5217\u8868\u4f20\u9012\u7ed9<code>odeint</code>\u51fd\u6570\u3002\u5728\u51fd\u6570f\u4e2d\uff0c\u6211\u4eec\u4f7f\u7528y\u5217\u8868\u6765\u8868\u793a\u516d\u4e2a\u51fd\u6570\u548c\u5b83\u4eec\u7684\u5bfc\u6570\u3002</p> <p>\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u5bf9\u4e8e\u975e\u7ebf\u6027\u5fae\u5206\u65b9\u7a0b\uff0c\u6c42\u89e3\u53ef\u80fd\u4f1a\u6bd4\u8f83\u56f0\u96be\uff0c\u9700\u8981\u9009\u62e9\u5408\u9002\u7684\u65b9\u6cd5\u548c\u53c2\u6570\u6765\u6c42\u89e3\u3002\u5982\u679c\u9047\u5230\u6c42\u89e3\u56f0\u96be\u7684\u60c5\u51b5\uff0c\u53ef\u4ee5\u5c1d\u8bd5\u4f7f\u7528\u5176\u4ed6\u6570\u503c\u6c42\u89e3\u65b9\u6cd5\uff0c\u6216\u8005\u624b\u52a8\u8c03\u6574<code>odeint</code>\u51fd\u6570\u7684\u53c2\u6570\u6765\u63d0\u9ad8\u6c42\u89e3\u6548\u679c\u3002</p> <p>user: </p> <p><pre><code>RuntimeWarning: invalid value encountered in scalar power\n(k2 * (y[0] - y[1]) + k3 * (y[2] - y[3]) ** 1.5) / m2]\n</code></pre> \u8fd9\u4e2a\u62a5\u9519\u5e94\u8be5\u5982\u4f55\u89e3\u51b3\uff1f \u5b8c\u6574\u4ee3\u7801\u5982\u4e0b\uff1a <pre><code>import numpy as np\nfrom scipy import *\nfrom scipy.integrate import odeint\nimport matplotlib.pyplot as plt\nfrom math import *\n\nm1 = 4.866\nm2 = 2433\nk1 = 31557.298\nk2 = 80000\nk3 = 10000\nk4 = 656.3516\nF = 6250\nw = 1.4005\nm_c = 1335.535\n\n\n# \u5b9a\u4e49\u4e8c\u5143\u5fae\u5206\u65b9\u7a0b\u51fd\u6570\ndef f(y, x, m1, m2, k1, k2, k3, k4, F, w, m_c):\n    return [y[2], y[3], (-k1 * y[0] - k2 * (y[0] - y[1]) - k3 * (y[2] - y[3]) ** 1.5 - k4 * y[2] + F * np.cos(w * x)) / (m1 + m_c),\n            (k2 * (y[0] - y[1]) + k3 * (y[2] - y[3]) ** 1.5) / m2]\n\n\n# \u521d\u59cb\u6761\u4ef6\ny0 = [0, 0, 0, 0]\n\n# \u81ea\u53d8\u91cf\u8303\u56f4\nx = np.linspace(0, 5, 1000)\n\n# \u6c42\u89e3\u5fae\u5206\u65b9\u7a0b\u7ec4\nsol = odeint(f, y0, x, args=(m1, m2, k1, k2, k3, k4, F, w, m_c))\n\n# \u5206\u522b\u63d0\u53d6y1\u548cy2\u7684\u503c\ny1 = sol[:, 0]\ny2 = sol[:, 1]\ny3 = sol[:, 2]\ny4 = sol[:, 3]\n\n# \u7ed8\u5236\u51fd\u6570\u56fe\u50cf\nplt.plot(x, y1, label='y1')\nplt.plot(x, y2, label='y2')\nplt.plot(x, y3, label='y3')\nplt.plot(x, y4, label='y4')\n\n# \u6dfb\u52a0\u56fe\u4f8b\u3001\u5750\u6807\u8f74\u6807\u7b7e\u548c\u6807\u9898\nplt.legend()\nplt.xlabel('x')\nplt.ylabel('y')\nplt.title('Solution of a System of Differential Equations')\n\n# \u663e\u793a\u56fe\u50cf\nplt.show()\n</code></pre></p> <p>chatgpt: </p> <p>\u8fd9\u4e2a\u62a5\u9519\u662f\u56e0\u4e3a\u5728\u6c42\u89e3\u5fae\u5206\u65b9\u7a0b\u7ec4\u65f6\uff0c\u51fa\u73b0\u4e86\u975e\u6cd5\u503c\u3002\u5177\u4f53\u6765\u8bf4\uff0c\u5728\u51fd\u6570f\u4e2d\u7684\u7b2c\u56db\u4e2a\u65b9\u7a0b\u4e2d\uff0c\u5f53\u5206\u6bcdm2\u4e3a0\u65f6\uff0c\u4f1a\u53d1\u751f\u9664\u96f6\u9519\u8bef\uff0c\u8fdb\u800c\u5bfc\u81f4\u9519\u8bef\u7684\u8ba1\u7b97\u7ed3\u679c\u3002</p> <p>\u4e3a\u4e86\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u53ef\u4ee5\u5728\u51fd\u6570f\u4e2d\u5bf9\u5206\u6bcdm2\u8fdb\u884c\u5224\u65ad\uff0c\u5982\u679cm2\u4e3a0\uff0c\u5219\u5c06y[3]\u7684\u5bfc\u6570\u8bbe\u4e3a0\u3002\u8fd9\u6837\u53ef\u4ee5\u907f\u514d\u9664\u96f6\u9519\u8bef\uff0c\u5e76\u4fdd\u8bc1\u6c42\u89e3\u7ed3\u679c\u7684\u6b63\u786e\u6027\u3002\u4fee\u6539\u540e\u7684\u4ee3\u7801\u5982\u4e0b\uff1a</p> <pre><code># \u5b9a\u4e49\u4e8c\u5143\u5fae\u5206\u65b9\u7a0b\u51fd\u6570\ndef f(y, x, m1, m2, k1, k2, k3, k4, F, w, m_c):\n    if m2 == 0:\n        dydt = [y[2], y[3], (-k1 * y[0] - k2 * (y[0] - y[1]) - k3 * (y[2] - y[3]) ** 1.5 - k4 * y[2] + F * np.cos(w * x)) / (m1 + m_c), 0]\n    else:\n        dydt = [y[2], y[3], (-k1 * y[0] - k2 * (y[0] - y[1]) - k3 * (y[2] - y[3]) ** 1.5 - k4 * y[2] + F * np.cos(w * x)) / (m1 + m_c),\n                (k2 * (y[0] - y[1]) + k3 * (y[2] - y[3]) ** 1.5) / m2]\n    return dydt\n</code></pre> <p>\u5728\u4fee\u6539\u540e\u7684\u4ee3\u7801\u4e2d\uff0c\u6211\u4eec\u9996\u5148\u5bf9m2\u8fdb\u884c\u5224\u65ad\uff0c\u5982\u679cm2\u4e3a0\uff0c\u5219\u5c06y[3]\u7684\u5bfc\u6570\u8bbe\u4e3a0\uff0c\u5426\u5219\u6309\u539f\u6765\u7684\u65b9\u5f0f\u8ba1\u7b97y[3]\u7684\u5bfc\u6570\u3002\u8fd9\u6837\u53ef\u4ee5\u907f\u514d\u9664\u96f6\u9519\u8bef\uff0c\u5e76\u4fdd\u8bc1\u6c42\u89e3\u7ed3\u679c\u7684\u6b63\u786e\u6027\u3002</p> <p>\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u5728\u5b9e\u9645\u5e94\u7528\u4e2d\uff0c\u51fa\u73b0\u975e\u6cd5\u503c\u7684\u539f\u56e0\u53ef\u80fd\u4e0d\u4ec5\u4ec5\u662f\u9664\u96f6\u9519\u8bef\uff0c\u8fd8\u53ef\u80fd\u5305\u62ec\u5176\u4ed6\u60c5\u51b5\u3002\u56e0\u6b64\uff0c\u5728\u7f16\u5199\u7a0b\u5e8f\u65f6\uff0c\u9700\u8981\u5bf9\u53ef\u80fd\u51fa\u73b0\u7684\u975e\u6cd5\u503c\u8fdb\u884c\u5145\u5206\u7684\u5224\u65ad\u548c\u5904\u7406\uff0c\u4ee5\u4fdd\u8bc1\u7a0b\u5e8f\u7684\u6b63\u786e\u6027\u548c\u7a33\u5b9a\u6027\u3002</p> <p>user: </p> <p><pre><code>RuntimeWarning: invalid value encountered in scalar power\n(k2 * (y[0] - y[1]) + k3 * (y[2] - y[3]) ** 1.5) / m2]\n</code></pre> How should this error be resolved? The complete code is as follows: <pre><code>import numpy as np\nfrom scipy import *\nfrom scipy.integrate import odeint\nimport matplotlib.pyplot as plt\nfrom math import *\n\nm1 = 4.866\nm2 = 2433\nk1 = 31557.298\nk2 = 80000\nk3 = 10000\nk4 = 656.3516\nF = 6250\nw = 1.4005\nm_c = 1335.535\n\n\n# \u5b9a\u4e49\u4e8c\u5143\u5fae\u5206\u65b9\u7a0b\u51fd\u6570\ndef f(y, x, m1, m2, k1, k2, k3, k4, F, w, m_c):\n    return [y[2], y[3], (-k1 * y[0] - k2 * (y[0] - y[1]) - k3 * (y[2] - y[3]) ** 1.5 - k4 * y[2] + F * np.cos(w * x)) / (m1 + m_c),\n            (k2 * (y[0] - y[1]) + k3 * (y[2] - y[3]) ** 1.5) / m2]\n\n\n# \u521d\u59cb\u6761\u4ef6\ny0 = [0, 0, 0, 0]\n\n# \u81ea\u53d8\u91cf\u8303\u56f4\nx = np.linspace(0, 5, 1000)\n\n# \u6c42\u89e3\u5fae\u5206\u65b9\u7a0b\u7ec4\nsol = odeint(f, y0, x, args=(m1, m2, k1, k2, k3, k4, F, w, m_c))\n\n# \u5206\u522b\u63d0\u53d6y1\u548cy2\u7684\u503c\ny1 = sol[:, 0]\ny2 = sol[:, 1]\ny3 = sol[:, 2]\ny4 = sol[:, 3]\n\n# \u7ed8\u5236\u51fd\u6570\u56fe\u50cf\nplt.plot(x, y1, label='y1')\nplt.plot(x, y2, label='y2')\nplt.plot(x, y3, label='y3')\nplt.plot(x, y4, label='y4')\n\n# \u6dfb\u52a0\u56fe\u4f8b\u3001\u5750\u6807\u8f74\u6807\u7b7e\u548c\u6807\u9898\nplt.legend()\nplt.xlabel('x')\nplt.ylabel('y')\nplt.title('Solution of a System of Differential Equations')\n\n# \u663e\u793a\u56fe\u50cf\nplt.show()\n</code></pre></p> <p>chatgpt: </p> <p>This error occurs because an invalid value was encountered during the calculation of a scalar power operation. Specifically, in the fourth equation of the function <code>f</code>, when <code>(y[2] - y[3])</code> is negative, the power of <code>1.5</code> results in an imaginary number, which is not a valid value for a real scalar. This leads to the <code>RuntimeWarning</code> error.</p> <p>To fix this error, you can use the <code>numpy.sign</code> function to get the sign of the quantity <code>(y[2] - y[3])</code>, and then multiply it with the absolute value of this quantity raised to the power of <code>1.5</code>. The resulting expression will always be real and prevent this error from occurring. Here's the modified code:</p> <pre><code># Define the system of differential equations\ndef f(y, x, m1, m2, k1, k2, k3, k4, F, w, m_c):\n    sign = np.sign(y[2] - y[3])\n    return [y[2], y[3], (-k1 * y[0] - k2 * (y[0] - y[1]) - k3 * sign * abs(y[2] - y[3]) ** 1.5 - k4 * y[2] + F * np.cos(w * x)) / (m1 + m_c),\n            (k2 * (y[0] - y[1]) + k3 * sign * abs(y[2] - y[3]) ** 1.5) / m2]\n</code></pre> <p>In this modified code, we first compute the sign of <code>(y[2] - y[3])</code> using <code>numpy.sign</code>. We then use this sign to multiply the absolute value of <code>(y[2] - y[3])</code> raised to the power of <code>1.5</code>. This ensures that the expression is always real, regardless of the sign of <code>(y[2] - y[3])</code>, and resolves the <code>RuntimeWarning</code> error.</p> <p>Note that this error can occur in other situations where a scalar power operation results in an invalid value, so it's always a good idea to check for such cases and handle them appropriately to avoid errors.</p> <p>user: </p> <p>\u4f60\u80fd\u7528\u4e2d\u6587\u518d\u8f93\u51fa\u4e00\u904d\u5417\uff1f</p> <p>chatgpt: </p> <p>\u8fd9\u4e2a\u9519\u8bef\u662f\u56e0\u4e3a\u5728\u8ba1\u7b97\u6807\u91cf\u4e58\u65b9\u65f6\u51fa\u73b0\u4e86\u975e\u6cd5\u503c\u3002\u5177\u4f53\u6765\u8bf4\uff0c\u5728\u51fd\u6570f\u7684\u7b2c\u56db\u4e2a\u65b9\u7a0b\u4e2d\uff0c\u5f53<code>(y[2] - y[3])</code>\u4e3a\u8d1f\u6570\u65f6\uff0c\u5c061.5\u6b21\u5e42\u5e94\u7528\u4e8e\u8be5\u8d1f\u6570\u4f1a\u5bfc\u81f4\u865a\u6570\uff0c\u8fd9\u4e0d\u662f\u6807\u91cf\u7684\u6709\u6548\u503c\uff0c\u56e0\u6b64\u4f1a\u51fa\u73b0<code>RuntimeWarning</code>\u9519\u8bef\u3002</p> <p>\u4e3a\u4e86\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u53ef\u4ee5\u4f7f\u7528<code>numpy.sign</code>\u51fd\u6570\u83b7\u53d6<code>(y[2] - y[3])</code>\u7684\u7b26\u53f7\uff0c\u5e76\u5c06\u5176\u4e0e\u7edd\u5bf9\u503c\u76841.5\u6b21\u5e42\u76f8\u4e58\uff0c\u53ef\u4ee5\u786e\u4fdd\u8ba1\u7b97\u7ed3\u679c\u603b\u662f\u5b9e\u6570\uff0c\u4ece\u800c\u907f\u514d\u51fa\u73b0\u9519\u8bef\u3002\u4ee5\u4e0b\u662f\u4fee\u6539\u540e\u7684\u4ee3\u7801\uff1a</p> <pre><code># \u5b9a\u4e49\u4e8c\u5143\u5fae\u5206\u65b9\u7a0b\u51fd\u6570\ndef f(y, x, m1, m2, k1, k2, k3, k4, F, w, m_c):\n    sign = np.sign(y[2] - y[3])\n    return [y[2], y[3], (-k1 * y[0] - k2 * (y[0] - y[1]) - k3 * sign * abs(y[2] - y[3]) ** 1.5 - k4 * y[2] + F * np.cos(w * x)) / (m1 + m_c),\n            (k2 * (y[0] - y[1]) + k3 * sign * abs(y[2] - y[3]) ** 1.5) / m2]\n</code></pre> <p>\u5728\u4fee\u6539\u540e\u7684\u4ee3\u7801\u4e2d\uff0c\u6211\u4eec\u9996\u5148\u4f7f\u7528<code>numpy.sign</code>\u83b7\u53d6<code>(y[2] - y[3])</code>\u7684\u7b26\u53f7\uff0c\u7136\u540e\u5c06\u5176\u4e0e\u7edd\u5bf9\u503c\u76841.5\u6b21\u5e42\u76f8\u4e58\u3002\u8fd9\u5c06\u786e\u4fdd\u8ba1\u7b97\u7ed3\u679c\u603b\u662f\u5b9e\u6570\uff0c\u5e76\u907f\u514d\u51fa\u73b0<code>RuntimeWarning</code>\u9519\u8bef\u3002</p> <p>\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u8fd9\u79cd\u9519\u8bef\u53ef\u80fd\u4f1a\u5728\u5176\u4ed6\u60c5\u51b5\u4e0b\u51fa\u73b0\uff0c\u56e0\u6b64\uff0c\u5728\u7f16\u5199\u7a0b\u5e8f\u65f6\uff0c\u9700\u8981\u68c0\u67e5\u8fd9\u4e9b\u60c5\u51b5\u5e76\u8fdb\u884c\u9002\u5f53\u7684\u5904\u7406\uff0c\u4ee5\u907f\u514d\u51fa\u73b0\u9519\u8bef\u3002</p>"},{"location":"zh/python%E7%9B%B8%E5%85%B3/sympy/","title":"SymPy","text":"<p> \u7ea6 2559 \u4e2a\u5b57  88 \u884c\u4ee3\u7801  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 10 \u5206\u949f</p>"},{"location":"zh/python%E7%9B%B8%E5%85%B3/sympy/#1","title":"1","text":"<p>Quick examples \u00b7 sympy/sympy Wiki (github.com)</p>"},{"location":"zh/python%E7%9B%B8%E5%85%B3/sympy/#2","title":"2","text":"<p><code>diff()</code>\u51fd\u6570\u7528\u6765\u6c42\u5bfc\uff0c\u7528\u6cd5 <code>diff(func, x, n)</code> \uff0cfunc\u662f\u8981\u6c42\u5bfc\u7684\u51fd\u6570\uff0cx\u662f\u8981\u5bf9\u5176\u6c42\u5bfc\u7684\u53d8\u91cf\uff0cn\u662f\u53ef\u9009\u7684\uff0c\u8868\u793a\u6c42n\u9636\u5bfc\u6570\uff0c\u9ed8\u8ba4\u4e3a1\u9636\u5bfc\u6570\u3002(\u6216 <code>diff(func, x, x, x, ...)</code>)</p> <pre><code>from sympy import symbols, diff\n\n# \u5b9a\u4e49\u4e8c\u5143\u51fd\u6570\nx, y = symbols('x y')\nf = x**2 + 2*x*y + y**2\n\n# \u5bf9x\u6c42\u504f\u5bfc\u6570\ndf_dx = diff(f, x)\nprint(\"\u5bf9x\u6c42\u504f\u5bfc\u6570\uff1a\", df_dx)\n\n# \u5bf9y\u6c42\u504f\u5bfc\u6570\ndf_dy = diff(f, y)\nprint(\"\u5bf9y\u6c42\u504f\u5bfc\u6570\uff1a\", df_dy)\n</code></pre> <p><code>.diff()</code>\u65b9\u6cd5\u4e5f\u53ef\u4ee5\u7528\u6765\u6c42\u5bfc\uff0c\u7528\u6cd5<code>func.diff(x, n)</code> (x\u4e3a\u6c42\u5bfc\u7684\u53d8\u91cf\uff0cn\u4e3a\u9636\u6570)\u6216<code>func.diff(x, x, x, ...)</code> (\u4f9d\u6b21\u6c42\u5bfc\u7684\u53d8\u91cf)\uff0c\u5219\u5bf9 \\(f(x)\\) \u6c42\u4e09\u9636\u5bfc\u4e3a</p> <pre><code>f(x).diff(x, 3)\n</code></pre> <p>\u6216</p> <pre><code>f(x).diff(x, x, x)\n</code></pre>"},{"location":"zh/python%E7%9B%B8%E5%85%B3/sympy/#3","title":"3","text":"<p><code>Derivative</code>\u7c7b\u6784\u9020\u65b9\u6cd5\u4e0e <code>diff()</code>\u51fd\u6570\u8f83\u4e3a\u7c7b\u4f3c\uff0c\u4f7f\u7528\u65b9\u6cd5\u4e5f\u4e3a <code>Derivative(func, x, n)</code> \u6216 <code>Derivative(func, x, x, x, ...)</code>\uff0c\u4f46\u5982\u679c\u51fd\u6570 <code>func</code> \u4e3a\u4e00\u4e2a\u5177\u4f53\u7684\u51fd\u6570\u65f6\uff0c\u524d\u8005\u4e0d\u8f93\u51fa\u6c42\u5bfc\u7684\u7ed3\u679c\uff0c\u800c\u8f93\u51fa\u6c42\u5bfc\u7684\u8868\u8fbe\u5f0f\uff0c\u540e\u8005\u8f93\u51fa\u5bfc\u51fd\u6570\uff0c\u5982</p> <pre><code>g = x ** 2 + 2 * x + 1\nwrite_latex_md(latex(Derivative(g, x, x)))\nwrite_latex_md(latex(diff(g, x, x)))\n</code></pre> <p>\u7ed3\u679c\u5206\u522b\u4e3a $$ \\frac{d^{2}}{d x^{2}} \\left(x^{2} + 2 x + 1\\right) $$</p> <p>\u548c</p> <p>$$ 2 $$ \u800c\u4f7f\u7528 <code>.doit()</code> \u65b9\u6cd5\u50cf\u540e\u8005\u4e00\u6837\u53ef\u4ee5\u8f93\u51fa\u5bfc\u51fd\u6570</p>"},{"location":"zh/python%E7%9B%B8%E5%85%B3/sympy/#4","title":"4","text":"<p>\u4f7f\u7528 <code>Rational</code> \u7c7b\u53ef\u4ee5\u8868\u793a\u5206\u6570\uff0c\u5982</p> <pre><code>Rational(3,2)*pi\n</code></pre> <p>\u8f93\u51fa\u4e3a $$ \\frac{3 \\pi}{2} $$ \u82e5\u5199\u6210</p> <pre><code>3 / 2 * pi\n</code></pre> <p>\u5219\u8f93\u51fa\u4e3a $$ 1.5\\pi $$</p>"},{"location":"zh/python%E7%9B%B8%E5%85%B3/sympy/#5","title":"5","text":"<p><code>symbols.()</code> </p> <pre><code>x, y, z = symbols('x,y,z')\na, b, c = symbols('a b c')\n\n&gt;&gt;&gt; symbols('x:10')\n(x0, x1, x2, x3, x4, x5, x6, x7, x8, x9)\n\n&gt;&gt;&gt; symbols('x5:10')\n(x5, x6, x7, x8, x9)\n&gt;&gt;&gt; symbols('x5(:2)')\n(x50, x51)\n\n&gt;&gt;&gt; symbols('x5:10,y:5')\n(x5, x6, x7, x8, x9, y0, y1, y2, y3, y4)\n\n&gt;&gt;&gt; symbols(('x5:10', 'y:5'))\n((x5, x6, x7, x8, x9), (y0, y1, y2, y3, y4))\n</code></pre>"},{"location":"zh/python%E7%9B%B8%E5%85%B3/sympy/#6","title":"6","text":"<p>\u8981\u8ba9sympy\u663e\u793a\u56fe\u50cf\uff0c\u9700\u8981\u5b89\u88c5matplotlib\u5305</p> <pre><code>pip install matplotlib\n</code></pre>"},{"location":"zh/python%E7%9B%B8%E5%85%B3/sympy/#7","title":"7","text":"<p>2023\u6570\u6a21\u56fd\u8d5b</p> <p>\u5982\u679c\u9700\u8981\u5728\u51fd\u6570\u6216\u65b9\u7a0b\u4e2d\u6dfb\u52a0\u5bf9\u6570\u51fd\u6570\uff0c\u9700\u8981\u4f7f\u7528sympy\u5305\u91cc\u7684 <code>log(x, y)</code> \u51fd\u6570(x\u4e3a\u771f\u6570\uff0cy\u4e3a\u5e95\u6570)</p> <p>(\u5982\u679c\u5728\u5bfc\u5165sympy\u5305\u65f6\uff0c\u4f7f\u7528 <code>from sympy import *</code> \u5219\u53ef\u80fd\u4f1a\u4f7f\u5f97 python \u7684 math \u91cc\u7684\u6c42\u5bf9\u6570\u7684\u51fd\u6570\u88ab\u8986\u76d6)</p> chat log <p>user: </p> <p>sympy\u600e\u4e48\u4f7f\u7528?</p> <p>bing: </p> <p>SymPy \u662f\u4e00\u6b3e\u7528\u4e8e\u7b26\u53f7\u8ba1\u7b97\u7684 Python \u5e93\uff0c\u53ef\u4ee5\u8fdb\u884c\u7b26\u53f7\u8ba1\u7b97\u3001\u7b26\u53f7\u4ee3\u6570\u3001\u5fae\u79ef\u5206\u3001\u65b9\u7a0b\u5f0f\u6c42\u89e3\u3001\u6570\u503c\u8ba1\u7b97\u7b49\u64cd\u4f5c\u3002\u4ee5\u4e0b\u662f SymPy \u5e93\u7684\u57fa\u672c\u4f7f\u7528\u65b9\u6cd5\uff1a </p> <ol> <li>\u5b89\u88c5 SymPy \u5e93; \u5728\u547d\u4ee4\u884c\u4e2d\u8f93\u5165 pip install sympy\uff0c\u5373\u53ef\u5b89\u88c5 SymPy \u5e93\u3002\u5982\u679c\u5df2\u7ecf\u5b89\u88c5\u4e86 Anaconda\uff0c\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528 conda install sympy \u547d\u4ee4\u5b89\u88c5\u3002 </li> <li>\u5bfc\u5165 SymPy \u5e93; \u5728 Python \u4ee3\u7801\u4e2d\u5bfc\u5165 SymPy \u5e93\uff0c\u5982\u4e0b\u6240\u793a\uff1a <pre><code>from sympy import *\n</code></pre></li> <li>\u4f7f\u7528 SymPy \u5e93; \u4f8b\u5982\uff0c\u8981\u6c42\u89e3\u65b9\u7a0b\u5f0f x^2 + 2x + 1 = 0\uff0c\u53ef\u4ee5\u4f7f\u7528\u4ee5\u4e0b\u4ee3\u7801\uff1a <pre><code>from sympy import *\nx = symbols('x')\nsolve(x**2 + 2*x + 1, x)\n</code></pre> \u8fd9\u5c06\u8fd4\u56de [-1]\uff0c\u5373\u65b9\u7a0b\u5f0f\u7684\u89e3\u4e3a -1\u3002</li> </ol> <p>\u5e0c\u671b\u8fd9\u80fd\u5e2e\u5230\u4f60\uff01</p> <p>user: </p> <p>Rational\u51fd\u6570\u6709\u4ec0\u4e48\u4f5c\u7528\uff1f</p> <p>bing: </p> <p>\u6709\u7406\u51fd\u6570\u662f\u4efb\u4f55\u53ef\u4ee5\u7531\u6709\u7406\u5206\u5f0f\u5b9a\u4e49\u7684\u51fd\u6570\uff0c\u5176\u4e2d\u6709\u7406\u5206\u5f0f\u662f\u4e00\u79cd\u4ee3\u6570\u5206\u5f0f\uff0c\u5176\u5206\u5b50\u548c\u5206\u6bcd\u90fd\u662f\u591a\u9879\u5f0f\u3002\u591a\u9879\u5f0f\u7684\u7cfb\u6570\u4e0d\u5fc5\u662f\u6709\u7406\u6570\uff1b\u5b83\u4eec\u53ef\u4ee5\u5728\u4efb\u4f55\u57dfK\u4e2d\u53d6\u503c<sup>1</sup>\u3002</p> <p>\u6709\u7406\u51fd\u6570\u5728\u6570\u5b66\u4e2d\u6709\u5e7f\u6cdb\u7684\u5e94\u7528\uff0c\u4f8b\u5982\u5728\u5fae\u79ef\u5206\u4e2d\uff0c\u6709\u7406\u51fd\u6570\u662f\u4e00\u7c7b\u53ef\u4ee5\u88ab\u79ef\u5206\u7684\u51fd\u6570\u3002\u5728\u4ee3\u6570\u51e0\u4f55\u4e2d\uff0c\u6709\u7406\u51fd\u6570\u662f\u4e00\u7c7b\u53ef\u4ee5\u88ab\u5b9a\u4e49\u5728\u4ee3\u6570\u7c07\u4e0a\u7684\u51fd\u6570\u3002<sup>1</sup></p> <p>\u5e0c\u671b\u8fd9\u80fd\u56de\u7b54\u4f60\u7684\u95ee\u9898\uff01</p> <p>user: </p> <p>sympy\u4e2d\u7684 rational\u6709\u4ec0\u4e48\u4f5c\u7528\uff1f</p> <p>bing: </p> <p>\u5728SymPy\u4e2d\uff0cRational\u51fd\u6570\u662f\u7528\u4e8e\u5904\u7406\u6709\u7406\u6570\u7684\u51fd\u6570\u3002\u6709\u7406\u6570\u662f\u53ef\u4ee5\u8868\u793a\u4e3a\u4e24\u4e2a\u6574\u6570\uff08\u5206\u5b50p\u548c\u975e\u96f6\u5206\u6bcdq\uff09\u7684\u5546\u6216\u5206\u6570p/q\u7684\u4efb\u4f55\u6570\u5b57\u3002Rational\u51fd\u6570\u53ef\u4ee5\u5c06\u6d6e\u70b9\u6570\u8f6c\u6362\u4e3a\u6709\u7406\u6570\u5f62\u5f0f\uff0c\u4e5f\u53ef\u4ee5\u68c0\u67e5\u5143\u7d20\u662f\u5426\u4e3a\u6709\u7406\u6570\uff0c\u8fd4\u56de\u5e03\u5c14\u503cTrue\u6216False<sup>1</sup> <sup>2</sup> <sup>3</sup>.</p> <p>\u5e0c\u671b\u8fd9\u80fd\u56de\u7b54\u4f60\u7684\u95ee\u9898\uff01</p> <p>user: </p> <p>\u5982\u4f55\u5728py\u6587\u4ef6\u4e2d\u8c03\u7528\u67d0\u4e2a\u8f6f\u4ef6\u6253\u5f00\u67d0\u4e2a\u6587\u4ef6\uff1f</p> <p>bing: </p> <p>\u4f60\u53ef\u4ee5\u4f7f\u7528Python\u7684subprocess\u6a21\u5757\u6765\u8c03\u7528\u5176\u4ed6\u8f6f\u4ef6\u3002\u4f8b\u5982\uff0c\u5982\u679c\u4f60\u60f3\u5728Windows\u4e0a\u4f7f\u7528\u8bb0\u4e8b\u672c\u6253\u5f00\u4e00\u4e2a\u6587\u4ef6\uff0c\u4f60\u53ef\u4ee5\u4f7f\u7528\u4ee5\u4e0b\u4ee3\u7801\uff1a</p> <pre><code>import subprocess\nsubprocess.Popen(['notepad.exe', 'file.txt'])\n</code></pre> <p>\u8fd9\u5c06\u6253\u5f00\u8bb0\u4e8b\u672c\u5e76\u6253\u5f00\u540d\u4e3afile.txt\u7684\u6587\u4ef6\u3002<sup>1</sup> <sup>2</sup> <sup>3</sup></p> <p>\u5e0c\u671b\u8fd9\u80fd\u56de\u7b54\u4f60\u7684\u95ee\u9898\uff01</p> <p>user: </p> <p>\u5982\u679c\u6211\u60f3\u4f7f\u7528\u5176\u4ed6\u8f6f\u4ef6\u5462\uff0c\u6bd4\u5982vs code</p> <p>bing: </p> <p>\u4f60\u53ef\u4ee5\u4f7f\u7528Python\u7684subprocess\u6a21\u5757\u6765\u8c03\u7528\u5176\u4ed6\u8f6f\u4ef6\u3002\u4f8b\u5982\uff0c\u5982\u679c\u4f60\u60f3\u5728Windows\u4e0a\u4f7f\u7528VS Code\u6253\u5f00\u4e00\u4e2a\u6587\u4ef6\uff0c\u4f60\u53ef\u4ee5\u4f7f\u7528\u4ee5\u4e0b\u4ee3\u7801\uff1a</p> <pre><code>import subprocess\nsubprocess.Popen(['code', 'file.txt'])\n</code></pre> <p>\u8fd9\u5c06\u6253\u5f00VS Code\u5e76\u6253\u5f00\u540d\u4e3afile.txt\u7684\u6587\u4ef6\u3002<sup>1</sup> <sup>2</sup> <sup>3</sup></p> <p>\u5e0c\u671b\u8fd9\u80fd\u56de\u7b54\u4f60\u7684\u95ee\u9898\uff01</p> <p>user: </p> <p>diff\u51fd\u6570\u600e\u4e48\u7528\uff1f</p> <p>bing: </p> <p>\u5728Python\u4e2d\uff0cdiff\u51fd\u6570\u53ef\u4ee5\u6709\u4e0d\u540c\u7684\u542b\u4e49\uff0c\u5177\u4f53\u53d6\u51b3\u4e8e\u4f60\u4f7f\u7528\u7684\u5e93\u3002\u4f8b\u5982\uff0c\u5982\u679c\u4f60\u4f7f\u7528\u7684\u662fPython\u7684set\u5e93\uff0c\u90a3\u4e48difference()\u65b9\u6cd5\u53ef\u4ee5\u7528\u4e8e\u8fd4\u56de\u96c6\u5408\u7684\u5dee\u96c6\uff0c\u5373\u8fd4\u56de\u7684\u96c6\u5408\u5143\u7d20\u5305\u542b\u5728\u7b2c\u4e00\u4e2a\u96c6\u5408\u4e2d\uff0c\u4f46\u4e0d\u5305\u542b\u5728\u7b2c\u4e8c\u4e2a\u96c6\u5408\u4e2d\u3002</p> <p>user: </p> <p>sympy\u7684diff\u51fd\u6570\u600e\u4e48\u7528\uff1f</p> <p>bing: </p> <p>\u5728Python\u4e2d\uff0c\u4f60\u53ef\u4ee5\u4f7f\u7528sympy\u5e93\u4e2d\u7684diff()\u51fd\u6570\u6765\u6c42\u5bfc\u6570\u3002diff()\u51fd\u6570\u7684\u57fa\u672c\u7528\u6cd5\u662f\uff1adiff(func,x,n)\uff0c\u5176\u4e2d\uff0cfunc\u662f\u8981\u6c42\u5bfc\u7684\u51fd\u6570\uff0cx\u662f\u8981\u5bf9\u5176\u6c42\u5bfc\u7684\u53d8\u91cf\uff0cn\u662f\u53ef\u9009\u7684\uff0c\u8868\u793a\u6c42n\u9636\u5bfc\u6570\uff0c\u9ed8\u8ba4\u4e3a1\u9636\u5bfc\u6570\u3002<sup>1</sup> <sup>2</sup> <sup>3</sup></p> <p>\u4f8b\u5982\uff0c\u5982\u679c\u4f60\u60f3\u5bf9\u4e00\u4e2a\u4e8c\u5143\u51fd\u6570\u6c42\u504f\u5bfc\u6570\uff0c\u4f60\u53ef\u4ee5\u4f7f\u7528\u4ee5\u4e0b\u4ee3\u7801\uff1a<sup>4</sup></p> <pre><code>from sympy import symbols, diff\n\n# \u5b9a\u4e49\u4e8c\u5143\u51fd\u6570\nx, y = symbols('x y')\nf = x**2 + 2*x*y + y**2\n\n# \u5bf9x\u6c42\u504f\u5bfc\u6570\ndf_dx = diff(f, x)\nprint(\"\u5bf9x\u6c42\u504f\u5bfc\u6570\uff1a\", df_dx)\n\n# \u5bf9y\u6c42\u504f\u5bfc\u6570\ndf_dy = diff(f, y)\nprint(\"\u5bf9y\u6c42\u504f\u5bfc\u6570\uff1a\", df_dy)\n</code></pre> <p>\u5e0c\u671b\u8fd9\u80fd\u56de\u7b54\u4f60\u7684\u95ee\u9898\uff01</p> <p>user: </p> <p><pre><code>from sympy import *\nf(x).diff(x, x)\n</code></pre> \u662f\u4ec0\u4e48\u610f\u601d</p> <p>bing: </p> <p>\u8fd9\u6bb5\u4ee3\u7801\u7684\u610f\u601d\u662f\uff1a\u5b9a\u4e49\u4e00\u4e2a\u51fd\u6570f(x)\uff0c\u7136\u540e\u5bf9\u8fd9\u4e2a\u51fd\u6570\u8fde\u7eed\u6c42\u4e24\u6b21\u5bfc\u6570\u3002</p> <p>\u5176\u4e2d\uff0cf(x).diff(x, x)\u8868\u793a\u5bf9f(x)\u8fd9\u4e2a\u51fd\u6570\u8fdb\u884c\u4e24\u6b21\u6c42\u5bfc\uff0c\u5373\u6c42\u4e8c\u9636\u5bfc\u6570\u3002</p> <p>\u5e0c\u671b\u8fd9\u80fd\u56de\u7b54\u4f60\u7684\u95ee\u9898\uff01</p> <p>user: </p> <p>\u90a3\u4e48\u5982\u679c\u6c42f(x)\u4e09\u9636\u5bfc\uff0c\u5e94\u8be5\u5982\u4f55\u5199\uff1f</p> <p>bing: </p> <p>\u5982\u679c\u8981\u6c42f(x)\u7684\u4e09\u9636\u5bfc\u6570\uff0c\u4f60\u53ef\u4ee5\u4f7f\u7528\u4ee5\u4e0b\u4ee3\u7801\uff1a</p> <pre><code>from sympy import *\nf(x).diff(x, 3)\n</code></pre> <p>\u5176\u4e2d\uff0cdiff()\u51fd\u6570\u7684\u7b2c\u4e8c\u4e2a\u53c2\u6570\u8868\u793a\u8981\u6c42\u7684\u5bfc\u6570\u9636\u6570\uff0c\u8fd9\u91cc\u662f3\uff0c\u5373\u6c42\u4e09\u9636\u5bfc\u6570\u3002</p> <p>\u5e0c\u671b\u8fd9\u80fd\u56de\u7b54\u4f60\u7684\u95ee\u9898\uff01</p> <p>user: </p> <p>\u90a3\u4e48\u4e8c\u9636\u5bfc\u6570\u4e3a\u4ec0\u4e48\u662ff(x).diff(x,x)</p> <p>bing: </p> <p>\u5728Python\u4e2d\uff0c\u4f60\u53ef\u4ee5\u4f7f\u7528sympy\u5e93\u4e2d\u7684diff()\u51fd\u6570\u6765\u6c42\u5bfc\u6570\u3002diff()\u51fd\u6570\u7684\u57fa\u672c\u7528\u6cd5\u662f\uff1adiff(func,x,n)\uff0c\u5176\u4e2d\uff0cfunc\u662f\u8981\u6c42\u5bfc\u7684\u51fd\u6570\uff0cx\u662f\u8981\u5bf9\u5176\u6c42\u5bfc\u7684\u53d8\u91cf\uff0cn\u662f\u53ef\u9009\u7684\uff0c\u8868\u793a\u6c42n\u9636\u5bfc\u6570\uff0c\u9ed8\u8ba4\u4e3a1\u9636\u5bfc\u6570\u3002</p> <p>\u56e0\u6b64\uff0cf(x).diff(x,x)\u8868\u793a\u5bf9f(x)\u8fd9\u4e2a\u51fd\u6570\u8fdb\u884c\u4e24\u6b21\u6c42\u5bfc\uff0c\u5373\u6c42\u4e8c\u9636\u5bfc\u6570\u3002</p> <p>\u5e0c\u671b\u8fd9\u80fd\u56de\u7b54\u4f60\u7684\u95ee\u9898\uff01</p> <p>user: </p> <p>\u90a3\u4e48 sympy Derivative\u51fd\u6570\u662f\u4ec0\u4e48\u610f\u601d\uff1f</p> <p>bing: </p> <p>\u5728Python\u4e2d\uff0c\u4f60\u53ef\u4ee5\u4f7f\u7528sympy\u5e93\u4e2d\u7684Derivative()\u51fd\u6570\u6765\u6c42\u5bfc\u6570\u3002Derivative()\u51fd\u6570\u7684\u57fa\u672c\u7528\u6cd5\u662f\uff1aDerivative(func,x)\uff0c\u5176\u4e2d\uff0cfunc\u662f\u8981\u6c42\u5bfc\u7684\u51fd\u6570\uff0cx\u662f\u8981\u5bf9\u5176\u6c42\u5bfc\u7684\u53d8\u91cf\u3002</p> <p>\u4e0ediff()\u51fd\u6570\u4e0d\u540c\u7684\u662f\uff0cDerivative()\u51fd\u6570\u8fd4\u56de\u4e00\u4e2a\u672a\u8bc4\u4f30\u7684\u5bfc\u6570\uff0c\u800c\u4e0d\u662f\u5df2\u7ecf\u8ba1\u7b97\u51fa\u6765\u7684\u5bfc\u6570\u3002\u5982\u679c\u8981\u8ba1\u7b97\u8fd9\u4e2a\u5bfc\u6570\uff0c\u4f60\u53ef\u4ee5\u4f7f\u7528doit()\u65b9\u6cd5\u3002</p> <p>\u4f8b\u5982\uff0c\u5982\u679c\u4f60\u60f3\u5bf9\u4e00\u4e2a\u51fd\u6570f(x)\u6c42\u4e00\u9636\u5bfc\u6570\uff0c\u4f60\u53ef\u4ee5\u4f7f\u7528\u4ee5\u4e0b\u4ee3\u7801\uff1a<sup>1</sup></p> <pre><code>from sympy import symbols, Derivative\n\n# \u5b9a\u4e49\u51fd\u6570\nx = symbols('x')\nf = x**2 + 2*x + 1\n\n# \u5bf9x\u6c42\u4e00\u9636\u5bfc\u6570\ndf_dx = Derivative(f, x).doit()\nprint(\"\u5bf9x\u6c42\u4e00\u9636\u5bfc\u6570\uff1a\", df_dx)\n</code></pre> <p>\u5e0c\u671b\u8fd9\u80fd\u56de\u7b54\u4f60\u7684\u95ee\u9898\uff01</p> <p>user: </p> <p>\u5982\u4f55\u4f7f\u7528sympy\u6c42\u89e3\u5fae\u5206\u65b9\u7a0b\u7ec4\uff1f</p> <p>bing: </p> <p>\u5728Python\u4e2d\uff0c\u4f60\u53ef\u4ee5\u4f7f\u7528sympy\u5e93\u4e2d\u7684dsolve()\u51fd\u6570\u6765\u6c42\u89e3\u5fae\u5206\u65b9\u7a0b\u7ec4\u3002dsolve()\u51fd\u6570\u7684\u57fa\u672c\u7528\u6cd5\u662f\uff1adsolve(equations)\uff0c\u5176\u4e2d\uff0cequations\u662f\u5fae\u5206\u65b9\u7a0b\u7ec4\u3002</p> <p>\u4f8b\u5982\uff0c\u5982\u679c\u4f60\u60f3\u6c42\u89e3\u4e00\u4e2a\u4e8c\u9636\u5fae\u5206\u65b9\u7a0b\u7ec4y'' + y = 0\uff0c\u4f60\u53ef\u4ee5\u4f7f\u7528\u4ee5\u4e0b\u4ee3\u7801\uff1a<sup>1</sup></p> <pre><code>from sympy import symbols, Function, dsolve\n\n# \u5b9a\u4e49\u51fd\u6570\nx = symbols('x')\ny = Function('y')(x)\n\n# \u6c42\u89e3\u5fae\u5206\u65b9\u7a0b\u7ec4\ndsolve(y.diff(x, x) + y, y)\n</code></pre> <p>\u5e0c\u671b\u8fd9\u80fd\u56de\u7b54\u4f60\u7684\u95ee\u9898\uff01</p> <p>user: </p> <p>\u5982\u4f55\u4f7f\u7528 sympy \u6c42\u89e3 \u4e8c\u5143\u4e8c\u9636\u7ebf\u6027\u5fae\u5206\u65b9\u7a0b\u7ec4</p> <p>bing: </p> <p>\u5728Python\u4e2d\uff0c\u4f60\u53ef\u4ee5\u4f7f\u7528sympy\u5e93\u4e2d\u7684dsolve()\u51fd\u6570\u6765\u6c42\u89e3\u5fae\u5206\u65b9\u7a0b\u7ec4\u3002dsolve()\u51fd\u6570\u7684\u57fa\u672c\u7528\u6cd5\u662f\uff1adsolve(equations)\uff0c\u5176\u4e2d\uff0cequations\u662f\u5fae\u5206\u65b9\u7a0b\u7ec4\u3002</p> <p>\u4f8b\u5982\uff0c\u5982\u679c\u4f60\u60f3\u6c42\u89e3\u4e00\u4e2a\u4e8c\u5143\u4e8c\u9636\u7ebf\u6027\u5fae\u5206\u65b9\u7a0b\u7ec4\uff0c\u4f60\u53ef\u4ee5\u4f7f\u7528\u4ee5\u4e0b\u4ee3\u7801\uff1a</p> <pre><code>from sympy import symbols, Function, dsolve\n\n# \u5b9a\u4e49\u51fd\u6570\nx = symbols('x')\ny1 = Function('y1')(x)\ny2 = Function('y2')(x)\n\n# \u6c42\u89e3\u5fae\u5206\u65b9\u7a0b\u7ec4\ndsolve((y1.diff(x, x) + y1 + y2.diff(x), y2.diff(x, x) + y2 - y1), (y1, y2))\n</code></pre> <p>\u5e0c\u671b\u8fd9\u80fd\u56de\u7b54\u4f60\u7684\u95ee\u9898\uff01</p>"},{"location":"zh/yolo/yolov5/","title":"YOLOv5","text":"<p> \u7ea6 176 \u4e2a\u5b57  50 \u884c\u4ee3\u7801  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 1 \u5206\u949f</p>"},{"location":"zh/yolo/yolov5/#1","title":"1","text":"<p>\u5b89\u88c5gpu\u7248\u672c\u7684torch\u548ctorchvision</p> <p>Previous PyTorch Versions | PyTorch</p> <p>\u627e <code>Wheel</code></p> <p>\u4f8b</p> <p>v1.12.1</p> <p>Conda</p> <p>...</p> <p>Wheel</p> <p>OSX</p> <pre><code>pip install torch==1.12.1 torchvision==0.13.1 torchaudio==0.12.1\n</code></pre> <p>Linux and Windows</p> <pre><code># ROCM 5.1.1 (Linux only)\npip install torch==1.12.1+rocm5.1.1 torchvision==0.13.1+rocm5.1.1 torchaudio==0.12.1 --extra-index-url  https://download.pytorch.org/whl/rocm5.1.1\n# CUDA 11.6\npip install torch==1.12.1+cu116 torchvision==0.13.1+cu116 torchaudio==0.12.1 --extra-index-url https://download.pytorch.org/whl/cu116\n# CUDA 11.3\npip install torch==1.12.1+cu113 torchvision==0.13.1+cu113 torchaudio==0.12.1 --extra-index-url https://download.pytorch.org/whl/cu113\n# CUDA 10.2\npip install torch==1.12.1+cu102 torchvision==0.13.1+cu102 torchaudio==0.12.1 --extra-index-url https://download.pytorch.org/whl/cu102\n# CPU only\npip install torch==1.12.1+cpu torchvision==0.13.1+cpu torchaudio==0.12.1 --extra-index-url https://download.pytorch.org/whl/cpu\n</code></pre>"},{"location":"zh/yolo/yolov5/#2","title":"2","text":"<pre><code>ImportError: urllib3 v2.0 only supports OpenSSL 1.1.1+, currently the 'ssl' module is compiled with 'OpenSSL 1.0.2u  20 Dec 2019'. See: https://github.com/urllib3/urllib3/issues/2168\n</code></pre> <p>yolov5\u4e0d\u8981\u6c42<code>urllib3</code> \u7248\u672c\uff0c\u5219\u964d\u4f4e <code>urllib3</code> \u7684\u7248\u672c</p> <p>urllib3 v2.0 only supports OpenSSL 1.1.1+, currently the 'ssl' module is compile - \u6398\u91d1</p> <p>\u67e5\u8be2\u53ef\u5b89\u88c5\u7684 <code>urlib3</code> \u7248\u672c\uff1a</p> <pre><code>pip install urllib3==\n</code></pre> <p>\u5b89\u88c5</p> <pre><code>pip install urllib3==1.x\n</code></pre> <p>(8\u6761\u6d88\u606f) openssl \u9ed8\u8ba4\u7248\u672c\u95ee\u9898\uff08Anaconda\u76f8\u5173\uff09_anaconda openssl_wjh_test\u7684\u535a\u5ba2-CSDN\u535a\u5ba2</p> <p>\u5c1d\u8bd5\u66f4\u6539 <code>openssl</code> \u4f46\u6ca1\u7528</p>"},{"location":"zh/yolo/yolov5/#3","title":"3","text":"<p>Quickstart - Ultralytics YOLOv8 Docs</p> <p>\u4e3b\u76ee\u5f55\u4e0b\u521b\u5efa <code>test.py</code> \u6587\u4ef6\uff1a</p> <pre><code>import torch\n\n# Model\nmodel = torch.hub.load(\"ultralytics/yolov5\", \"yolov5s\")  # or yolov5n - yolov5x6, custom\n\n# Images\nimg = \"zidane.jpg\"  # or file, Path, PIL, OpenCV, numpy, list\n\n# Inference\nresults = model(img)\n\n# Results\nresults.show()  # or .show(), .save(), .crop(), .pandas(), etc.\n</code></pre> <pre><code>import torch\n\n# Model\nmodel = torch.hub.load(\"ultralytics/yolov5\", \"yolov5s\")  # or yolov5n - yolov5x6, custom\n\n# Images\nimg = \"https://ultralytics.com/images/zidane.jpg\"  # or file, Path, PIL, OpenCV, numpy, list\n\n# Inference\nresults = model(img)\n\n# Results\nresults.print()  # or .show(), .save(), .crop(), .pandas(), etc.\n</code></pre> <p>\u6307\u5357\u4e2d\u7684\u539f\u59cb\u7684\u4ee3\u7801 <code>https://ultralytics.com/images/zidane.jpg</code> \u9700\u8981\u68af\u5b50\u52a0\u8f7d\uff0c\u63d0\u524d\u4e0b\u8f7d\uff0c</p> <p></p> <p></p> <p>\u6216\u81ea\u5b9a\u4e49\u4e00\u4e2a\u56fe\u7247</p> <p>\u5c06 <code>results.print()</code> \u6539\u6210 <code>results.show()</code></p> <p>\u53ef\u5148\u4e0b\u8f7d\u9884\u8bad\u7ec3\u6a21\u578b\uff1a</p> <pre><code>https://github.com/ultralytics/yolov5/releases/download/vx.x/yolov5n.pt\n</code></pre> <pre><code>https://github.com/ultralytics/yolov5/releases/download/vx.x/yolov5s.pt\n</code></pre> <pre><code>https://github.com/ultralytics/yolov5/releases/download/vx.x/yolov5m.pt\n</code></pre> <pre><code>https://github.com/ultralytics/yolov5/releases/download/vx.x/yolov5l.pt\n</code></pre> <pre><code>https://github.com/ultralytics/yolov5/releases/download/vx.x/yolov5x.pt\n</code></pre>"},{"location":"zh/yolo/yolov5/#4","title":"4","text":"<p>coco \u6570\u636e\u96c6\u7684\u56fe\u7247\u53ef\u4ee5\u5728COCO - Ultralytics YOLOv8 Docs\u91cc\u627e\u5230</p> <pre><code># Download data\n  urls = ['http://images.cocodataset.org/zips/train2017.zip',  # 19G, 118k images\n          'http://images.cocodataset.org/zips/val2017.zip',  # 1G, 5k images\n          'http://images.cocodataset.org/zips/test2017.zip']  # 7G, 41k images (optional)\n  download(urls, dir=dir / 'images', threads=3)\n</code></pre>"},{"location":"zh/yolo/yolov7/","title":"YOLOv7","text":"<p> \u7ea6 146 \u4e2a\u5b57  4 \u884c\u4ee3\u7801  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 1 \u5206\u949f</p>"},{"location":"zh/yolo/yolov7/#1","title":"1","text":"<p>(7\u6761\u6d88\u606f) YOLOv7\u4fdd\u59c6\u7ea7\u6559\u7a0b\uff08\u4e2a\u4eba\u8e29\u5751\u65e0\u6570\uff09----\u8bad\u7ec3\u81ea\u5df1\u7684\u6570\u636e\u96c6_yolov7\u4ee3\u7801\u4e0b\u8f7d_AmbitionToFree\u7684\u535a\u5ba2-CSDN\u535a\u5ba2</p>"},{"location":"zh/yolo/yolov7/#2","title":"2","text":"<p>detect.py\u6743\u91cd\u5728github\u5b98\u7f51<code>Testing</code>\u4e0b\u4e0b\u8f7d</p> <p>(8\u6761\u6d88\u606f) YOLOv7\uff08\u76ee\u6807\u68c0\u6d4b\uff09\u5165\u95e8\u6559\u7a0b\u8be6\u89e3---\u68c0\u6d4b\uff0c\u63a8\u7406\uff0c\u8bad\u7ec3_yolov\u76ee\u6807\u68c0\u6d4b_\u87ba\u4e1d\u5de5\u4eba\u7684\u535a\u5ba2-CSDN\u535a\u5ba2</p> <p>\u53ef\u4ee5\u5728<code>detect.py</code>\u4e2d\u4fee\u6539</p> <pre><code>    parser.add_argument('--weights', nargs='+', type=str, default='weights/yolov7.pt', help='model.pt path(s)')\n    # parser.add_argument('--weights', nargs='+', type=str, default='yolov7.pt', help='model.pt path(s)')\n</code></pre> <p>\u6216\u76f4\u63a5\u547d\u4ee4\u884c\u8fd0\u884c\u6307\u4ee4</p> <pre><code>python detect.py --weights weights/yolov7.pt --source inference/images \n</code></pre>"},{"location":"zh/yolo/yolov7/#3","title":"3","text":"<p><code>split.py</code>\u6587\u4ef6\u653e\u5728yolov7\u6839\u76ee\u5f55\u4e0b</p>"},{"location":"zh/yolo/yolov7/#4","title":"4","text":"<p>gpu\u53ea\u6709\u4e00\u4e2a\u5c31\u53ea\u7528<code>0</code></p>"},{"location":"zh/yolo/yolov7/#5","title":"5","text":"<p>[WinError 1455] \u9875\u9762\u6587\u4ef6\u592a\u5c0f\uff0c\u65e0\u6cd5\u5b8c\u6210\u64cd\u4f5c\u3002</p> <p>(8\u6761\u6d88\u606f) \u591a\u79cd\u65b9\u6cd5\u5f7b\u5e95\u89e3\u51b3pycharm\u4e2d: OSError: [WinError 1455] \u9875\u9762\u6587\u4ef6\u592a\u5c0f\uff0c\u65e0\u6cd5\u5b8c\u6210\u64cd\u4f5c \u7684\u95ee\u9898_pycharm\u8fd0\u884c\u51fa\u73b0oserror_\u5b64\u67d2\u300c\u4e00\u8d77\u5b66\u8ba1\u7b97\u673a\u300d\u7684\u535a\u5ba2-CSDN\u535a\u5ba2]</p> <p>[(8\u6761\u6d88\u606f) YOLOV7:OSError: WinError 1455] \u9875\u9762\u6587\u4ef6\u592a\u5c0f\uff0c\u65e0\u6cd5\u5b8c\u6210\u64cd\u4f5c\u7684 \u6700\u7ec8\u89e3\u51b3\u65b9\u6848_oserror: [winerror 1455] \u9875\u9762\u6587\u4ef6\u592a\u5c0f,\u65e0\u6cd5\u5b8c\u6210\u64cd\u4f5c_\u6211\u8ffd\u9010\u843d\u65e5\u4e0d\u4f11\uff0c\u5374\u4e0d\u77e5\u4f60\u5728\u7b49\u6211\u56de\u5934\u7684\u535a\u5ba2-CSDN\u535a\u5ba2</p> <p>\u4ee5\u53ca\uff0c\u8c03\u6574<code>--batch-size</code>\u5927\u5c0f\uff0c</p> <pre><code>python train.py --weights weights/yolov7_training.pt --cfg cfg/training/yolov7-Helmet.yaml --data data/Helmet.yaml --device 0 --batch-size 2\n</code></pre>"},{"location":"zh/yolo/yolov8/","title":"YOLOv8","text":"<p> \u7ea6 849 \u4e2a\u5b57  175 \u884c\u4ee3\u7801  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 5 \u5206\u949f</p> <p>yolov8\u5b98\u65b9github\u4ed3\u5e93</p> <p>ultralytics/README.zh-CN.md at main \u00b7 ultralytics/ultralytics \u00b7 GitHub</p> <p>yolov8\u5b98\u65b9\u4f7f\u7528\u6587\u6863</p> <p>Home - Ultralytics YOLOv8 Docs</p>"},{"location":"zh/yolo/yolov8/#1","title":"1","text":"<p>(Windows)RuntimeError\u89e3\u51b3\u65b9\u6848</p> <p>Windows\u4f7f\u7528PyTorch\u9047\u5230RuntimeError: Unable to find a valid cuDNN algorithm to run convolution\u7684\u89e3\u51b3\u65b9\u6848 - \u77e5\u4e4e (zhihu.com)</p>"},{"location":"zh/yolo/yolov8/#2","title":"2","text":"<pre><code>RuntimeError: Dataset 'data\\Helmet.yaml' error  \nDataset 'data\\Helmet.yaml' images not found , missing paths ['C:\\\\Users\\\\Administrator\\\\datasets\\\\data\\\\datasets\\\\Helmet\\\\val_list.txt']\nNote dataset download directory is 'C:\\Users\\Administrator\\datasets'. You can update this in 'C:\\Users\\Administrator\\AppData\\Roaming\\Ultralytics\\settings.yaml'\n</code></pre> <p>\u4fee\u6539\uff0c</p> <p>\u53ef\u4ee5\u6539\u6210\u76f8\u5bf9\u8def\u5f84</p> <pre><code>datasets_dir: ..\\\n</code></pre>"},{"location":"zh/yolo/yolov8/#3","title":"3","text":"<pre><code>RuntimeError: \n            Attempt to start a new process before the current process\n            has finished its bootstrapping phase.\n            This probably means that you are on Windows and you have\n            forgotten to use the proper idiom in the main module:\n                if __name__ == '__main__':\n                    freeze_support()\n                    ...\n            The \"freeze_support()\" line can be omitted if the program\n            is not going to be frozen to produce a Windows executable.\n</code></pre> <p>\u64cd\u4f5c\uff1a</p> <pre><code>model = YOLO(\"yolov8n.pt\")  # \u52a0\u8f7d\u9884\u8bad\u7ec3\u6a21\u578b\uff08\u5efa\u8bae\u7528\u4e8e\u8bad\u7ec3\uff09\n\nif __name__ == '__main__': # \u6dfb\u52a0__main__\n    # \u4f7f\u7528\u6a21\u578b\n    model.train(data=\"data/Helmet.yaml\", epochs=3, batch=2[, name=\"Name\"])  # \u8bad\u7ec3\u6a21\u578b\n</code></pre> <p>python - YOLOv8 : RuntimeError: An attempt has been made to start a new process before the current process has finished its bootstrapping phase - Stack Overflow</p>"},{"location":"zh/yolo/yolov8/#4","title":"4","text":"<p>MemoryError \u8c03\u6574 <code>batch=</code></p> <p>About Memory Error while Training yolov8x-seg \u00b7 Issue #2916 \u00b7 ultralytics/ultralytics (github.com)</p>"},{"location":"zh/yolo/yolov8/#5","title":"5","text":"<p>\u9875\u9762\u5927\u5c0f\u4e0d\u591f\uff1a</p> <p>python - How to efficiently run multiple Pytorch Processes / Models at once ? Traceback: The paging file is too small for this operation to complete - Stack Overflow</p> <pre><code>OSError: [WinError 1455] The paging file is too small for this operation to complete. Error loading \"...\\cusolver64_xx.dll    ...\\cudnn_adv_infer64_8.dll\" or one of its dependencies.\n</code></pre> <p>\u65b0\u5efa\u6587\u4ef6 <code>fixNvPe.py</code></p> <p>Python Script to disable ASLR and make nv fatbins read-only to reduce memory commit (github.com)</p> fixNvPe.py <pre><code># Simple script to disable ASLR and make .nv_fatb sections read-only\n# Requires: pefile  ( python -m pip install pefile )\n# Usage:  fixNvPe.py --input path/to/*.dll\n\nimport argparse\nimport pefile\nimport glob\nimport os\nimport shutil\n\ndef main(args):\n    failures = []\n    for file in glob.glob( args.input, recursive=args.recursive ):\n        print(f\"\\n---\\nChecking {file}...\")\n        pe = pefile.PE(file, fast_load=True)\n        nvbSect = [ section for section in pe.sections if section.Name.decode().startswith(\".nv_fatb\")]\n        if len(nvbSect) == 1:\n            sect = nvbSect[0]\n            size = sect.Misc_VirtualSize\n            aslr = pe.OPTIONAL_HEADER.IMAGE_DLLCHARACTERISTICS_DYNAMIC_BASE\n            writable = 0 != ( sect.Characteristics &amp; pefile.SECTION_CHARACTERISTICS['IMAGE_SCN_MEM_WRITE'] )\n            print(f\"Found NV FatBin! Size: {size/1024/1024:0.2f}MB  ASLR: {aslr}  Writable: {writable}\")\n            if (writable or aslr) and size &gt; 0:\n                print(\"- Modifying DLL\")\n                if args.backup:\n                    bakFile = f\"{file}_bak\"\n                    print(f\"- Backing up [{file}] -&gt; [{bakFile}]\")\n                    if os.path.exists( bakFile ):\n                        print( f\"- Warning: Backup file already exists ({bakFile}), not modifying file! Delete the 'bak' to allow modification\")\n                        failures.append( file )\n                        continue\n                    try:\n                        shutil.copy2( file, bakFile)\n                    except Exception as e:\n                        print( f\"- Failed to create backup! [{str(e)}], not modifying file!\")\n                        failures.append( file )\n                        continue\n                # Disable ASLR for DLL, and disable writing for section\n                pe.OPTIONAL_HEADER.DllCharacteristics &amp;= ~pefile.DLL_CHARACTERISTICS['IMAGE_DLLCHARACTERISTICS_DYNAMIC_BASE']\n                sect.Characteristics = sect.Characteristics &amp; ~pefile.SECTION_CHARACTERISTICS['IMAGE_SCN_MEM_WRITE']\n                try:\n                    newFile = f\"{file}_mod\"\n                    print( f\"- Writing modified DLL to [{newFile}]\")\n                    pe.write( newFile )\n                    pe.close()\n                    print( f\"- Moving modified DLL to [{file}]\")\n                    os.remove( file )\n                    shutil.move( newFile, file )\n                except Exception as e:\n                    print( f\"- Failed to write modified DLL! [{str(e)}]\")\n                    failures.append( file )\n                    continue\n\n    print(\"\\n\\nDone!\")\n    if len(failures) &gt; 0:\n        print(\"***WARNING**** These files needed modification but failed: \")\n        for failure in failures:\n            print( f\" - {failure}\")\n\n\n\n\n\n\n\ndef parseArgs():\n    parser = argparse.ArgumentParser( description=\"Disable ASLR and make .nv_fatb sections read-only\", formatter_class=argparse.ArgumentDefaultsHelpFormatter )\n    parser.add_argument('--input', help=\"Glob to parse\", default=\"*.dll\")\n    parser.add_argument('--backup', help=\"Backup modified files\", default=True, required=False)\n    parser.add_argument('--recursive', '-r', default=False, action='store_true', help=\"Recurse into subdirectories\")\n\n    return parser.parse_args()\n\n\n###############################\n# program entry point\n#\nif __name__ == \"__main__\":\n    args = parseArgs()\n    main( args )\n</code></pre> <p>\u65e0\u4f9d\u8d56\u5b89\u88c5\u4f9d\u8d56</p> <pre><code>python -m pip install pefile\n</code></pre> <p>\u8fd0\u884c\u547d\u4ee4\u884c</p> <pre><code>python fixNvPe.py --input=E:\\Programs\\Anaconda3\\envs\\yolov7\\lib\\site-packages\\torch\\lib\\*.dll\n</code></pre>"},{"location":"zh/yolo/yolov8/#6","title":"6","text":"<p>\u7528\u547d\u4ee4\u884c\u68c0\u6d4b</p> <pre><code>yolo predict model=yolov8n.pt source='bus.jpg'\n</code></pre> <p>\u4ee3\u7801\u5728\uff1a</p> <p>Python - Ultralytics YOLOv8 Docs</p> <ul> <li>\u8c03\u7528\u76f8\u673a <code>source=\"0\"</code></li> <li>\u68c0\u6d4b\u6574\u4e2a\u6587\u4ef6\u5939\u7684\u56fe\u7247/\u89c6\u9891\uff0c<code>source=\".../folder\"</code></li> <li>\u68c0\u6d4b\u5355\u4e2a\u56fe\u7247/\u89c6\u9891\uff08\u53ef\u4ee5\u76f4\u63a5\u5199\u8def\u5f84\uff0c\u6216\u8005\u7528\u7c7b\u52a0\u8f7d\uff0c\u4e09\u79cd\u65b9\u6cd5\uff09</li> </ul> <ul> <li><code>show=</code>\u5c55\u793a\u56fe\u7247</li> <li><code>save=</code>\u4fdd\u5b58\u56fe\u7247(\u5230runs/detect/[predictxx]\u6587\u4ef6\u5939\u4e2d)</li> <li><code>name=</code>\u4fdd\u5b58\u7684\u6587\u4ef6\u5939\u7684\u540d\u79f0</li> </ul> <pre><code>from ultralytics import YOLO\nfrom PIL import Image\nimport cv2\n\nmodel = YOLO(\"model.pt\")\n# accepts all formats - image/dir/Path/URL/video/PIL/ndarray. 0 for webcam\nresults = model.predict(source=\"0\")\nresults = model.predict(source=\"folder\", show=True) # Display preds. Accepts all YOLO predict arguments\n\n# from PIL\nim1 = Image.open(\"bus.jpg\")\nresults = model.predict(source=im1, save=True)  # save plotted images\n\n# from ndarray\nim2 = cv2.imread(\"bus.jpg\")\nresults = model.predict(source=im2, save=True, save_txt=True)  # save predictions as labels\n\n# from list of PIL/ndarray\nresults = model.predict(source=[im1, im2])\n</code></pre> <p>\u652f\u6301\u7684\u6587\u4ef6\u7c7b\u578b</p> <p>Predict - Ultralytics YOLOv8 Docs</p> <p>\u53c2\u6570\u7684\u4f5c\u7528</p> <p>Predict - Ultralytics YOLOv8 Docs</p>"},{"location":"zh/yolo/yolov8/#7","title":"7","text":"<p><code>.yaml</code>\u6587\u4ef6\u91cc\u9762\u7684\u6807\u7b7e\u8981\u4e0e<code>labels.txt</code>\u91cc\u9762\u7684\u987a\u5e8f\u4e00\u81f4</p>"},{"location":"zh/yolo/yolov8/#8","title":"8","text":"<p>v8 <code>.yaml</code> \u6587\u4ef6\u793a\u4f8b\uff1a</p> <pre><code># Train/val/test sets as 1) dir: path/to/imgs, 2) file: path/to/imgs.txt, or 3) list: [path/to/imgs1, path/to/imgs2, ..]\npath: ../datasets/coco8  # dataset root dir\ntrain: images/train  # train images (relative to 'path') 4 images\nval: images/val  # val images (relative to 'path') 4 images\ntest:  # test images (optional)\n\n# Classes (80 COCO classes)\nnames:\n  0: person\n  1: bicycle\n  2: car\n  ...\n  77: teddy bear\n  78: hair drier\n  79: toothbrush\n</code></pre> <p>Object Detection Datasets Overview - Ultralytics YOLOv8 Docs</p> <p>\u5176\u4e2d <code>train:</code> <code>val:</code> \u4e4b\u540e\u7684\u5185\u5bb9\u6709\u4e09\u79cd\u5199\u6cd5\uff0c</p> <ol> <li>\u6587\u4ef6\u5939\u8def\u5f84</li> <li>txt\u6587\u4ef6\u8def\u5f84\uff0ctxt\u6587\u4ef6\u5185\u4e3a\u5404\u4e2a\u56fe\u7247\u7684\u8def\u5f84</li> <li>\u5217\u8868\u5f62\u5f0f\u7684\u56fe\u7247\u8def\u5f84</li> </ol>"},{"location":"zh/yolo/yolov8/#9","title":"9","text":"<p>\u5982\u679cdetect\u65f6\u4f7f\u7528\u67d0\u4e2apt\u6a21\u578b\u62a5\u9519\uff0c\u6709\u53ef\u80fd\u662f\u56e0\u4e3a \u8bad\u7ec3\u8be5\u6a21\u578b\u65f6\u4f7f\u7528\u7684ultralytics\u7248\u672c \u6bd4 \u672c\u673a\u5b89\u88c5\u7684\u7248\u672c \u65b0\uff0c\u4f7f\u7528\u4e86\u65e7\u7248\u672c <code>requirements.txt</code> \u4e2d\u672a\u5b89\u88c5\u7684\u5305\uff0c\u56e0\u6b64\u66f4\u65b0ultralytics\u5305\u5373\u53ef</p>"},{"location":"zh/yolo/yolov8/#10","title":"10","text":"<p>train\u65f6\u8981\u4fee\u6539batch\uff0c\u4fee\u6539 <code>batch</code> \u53c2\u6570\uff1a <code>batch=x</code></p> <p>\u9ed8\u8ba4\u4e3a16\uff0c-1\u4e3a\u81ea\u52a8\u8c03\u6574</p> <p>Configuration - Ultralytics YOLOv8 Docs</p>"},{"location":"zh/yolo/yolov8/#11","title":"11","text":"<pre><code>...\n  File \"E:\\Anaconda3\\envs\\Pytorch\\Lib\\site-packages\\ultralytics\\engine\\trainer.py\", line 537, in save_metrics\n    with open(self.csv, 'a') as f:\n         ^^^^^^^^^^^^^^^^^^^\nPermissionError: [Errno 13] Permission denied: 'run\\\\detect\\\\data1st2\\\\results.csv'\n\n\u8fdb\u7a0b\u5df2\u7ed3\u675f\uff0c\u9000\u51fa\u4ee3\u7801\u4e3a 1\n</code></pre> <p>\u4e0d\u77e5\u4ec0\u4e48\u539f\u56e0\uff0c\u62a5\u9519\u539f\u56e0\u5e94\u8be5\u662f <code>result.csv</code> \u6587\u4ef6\u88ab\u6253\u5f00\u88ab\u5360\u7528\uff0c\u4f46\u6211\u5e76\u6ca1\u6709\u6253\u5f00\u8fd9\u4e2a\u6587\u4ef6\u3002</p> <p>\u91cd\u65b0\u518d\u8fd0\u884c\u7a0b\u5e8f\u5373\u53ef</p> <p>Training fails when results.csv file is open \u00b7 Issue #862 \u00b7 ultralytics/ultralytics (github.com)</p>"},{"location":"zh/yolo/yolov8/#12","title":"12","text":"<pre><code>...\n  File \"E:\\Anaconda3\\envs\\Pytorch\\Lib\\site-packages\\ultralytics\\utils\\tal.py\", line 152, in get_box_metrics\n    bbox_scores[mask_gt] = pd_scores[ind[0], :, ind[1]][mask_gt]  # b, max_num_obj, h*w\n                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^\nRuntimeError: CUDA error: device-side assert triggered\nCUDA kernel errors might be asynchronously reported ar some other API call, so the stacktrace below might be incorrect.\nFor debugging consider passing CUDA_LAUNCH_BLOCKING=1.\nCompile with `TORCH_USE_CUDA_DSA` to enable device-side assertions.\n\n\n\u8fdb\u7a0b\u5df2\u7ed3\u675f\uff0c\u9000\u51fa\u4ee3\u7801\u4e3a 1\n</code></pre> <p>...</p> <p>\u5927\u591a\u6570\u60c5\u51b5\u4e0b\uff0cCUDA\u8fd0\u884c\u65f6\u9519\u8bef\u53ef\u80fd\u662f\u67d0\u4e9b\u7d22\u5f15\u4e0d\u5339\u914d\u7684\u539f\u56e0\uff0c\u4f8b\u5982\u60a8\u5c1d\u8bd5\u5728\u5177\u6709 10 \u4e2a\u6807\u7b7e\u7684\u6570\u636e\u96c6\u4e0a\u8bad\u7ec3\u5177\u670915\u4e2a\u8f93\u51fa\u8282\u70b9\u7684\u7f51\u7edc\u3002\u8fd9\u4e2a CUDA \u9519\u8bef\u7684\u4e8b\u60c5\u662f\uff0c\u4e00\u65e6\u4f60\u6536\u5230\u8fd9\u4e2a\u9519\u8bef\u4e00\u6b21\uff0c\u4f60\u5c31\u4f1a\u5728\u4f7f\u7528 torch.tensors \u6267\u884c\u7684\u6bcf\u4e2a\u64cd\u4f5c\u4e2d\u6536\u5230\u5b83\u3002\u8fd9\u4f1a\u5f3a\u5236\u60a8\u91cd\u65b0\u542f\u52a8\u7b14\u8bb0\u672c\u3002</p> <p>...</p> <p>\u800c\u540e\u7ecf\u8fc7\u68c0\u67e5\u53d1\u73b0\uff0c\u662f\u7531\u4e8e <code>labels.txt</code> \u6587\u4ef6\u4e2d\u53ea\u670911\u4e2a\u6807\u7b7e\uff0c\u800c\u6807\u7b7e\u6587\u4ef6\u4e2d\u6709 <code>11</code> (\u7b2c12\u4e2a\u6807\u7b7e)</p> <p>python - Pytorch fails with CUDA error: device-side assert triggered on Colab - Stack Overflow</p>"},{"location":"zh/yolo/yolov8/#13","title":"13","text":"<p>\u6062\u590d/\u7ee7\u7eed\u4e4b\u524d\u7684\u8bad\u7ec3</p> <p>Train - Ultralytics YOLOv8 Docs</p> <p>(\u53ef\u4ee5\u65b0\u5efa\u4e00\u4e2a <code>resume_train.py</code> \u6587\u4ef6)</p> <pre><code>from ultralytics import YOLO\n\n# Load a model\nmodel = YOLO('path/to/last.pt')  # load a partially trained model\n\n# Resume training\nresults = model.train(resume=True)\n</code></pre> <pre><code>from ultralytics import YOLO\n\nif __name__ == '__main__':\n    # Load a model\n    model = YOLO('runs/detect/data1st9/weights/last.pt')  # load a partially trained model\n\n    # Resume training\n    results = model.train(resume=True)\n</code></pre>"},{"location":"zh/yolo/yolov8/#14","title":"14","text":"<pre><code>NotImplementedError: Could not run 'torchvision::nms' with arguments from the 'CPU' backend. This could be because the operator doesn't exist for this backend, or was omitted during the selective/custom build process (if using custom build). If you are a Facebook employee using PyTorch on mobile, please visit https://fburl.com/ptmfixes for possible resolutions. 'torchvision::nms' is only available for these backends: [CUDA, Meta, QuantizedCUDA, BackendSelect, Python, FuncTorchDynamicLayerBackMode, Functionalize, Named, Conjugate, Negative, ZeroTensor, ADInplaceOrView, AutogradOther, AutogradCPU, AutogradCUDA, AutogradXLA, AutogradMPS, AutogradXPU, AutogradHPU, AutogradLazy, AutogradMeta, Tracer, AutocastCPU, AutocastXPU, AutocastCUDA, AutocastPrivateUse1, FuncTorchBatched, BatchedNestedTensor, FuncTorchVmapMode, Batched, VmapMode, FuncTorchGradWrapper, PythonTLSSnapshot, FuncTorchDynamicLayerFrontMode, PreDispatch, PythonDispatcher].\n</code></pre> <p>python - Getting \"NotImplementedError: Could not run 'torchvision::nms' with arguments from CUDA backend\" despite having all necessary libraries and imports - Stack Overflow</p> <p>\u6839\u636e\u6700\u9ad8\u8d5e\u56de\u7b54\uff0c\u5378\u8f7d\u91cd\u88c5torch torchvision torchaudio\uff0c\u518d\u6b21\u8fd0\u884c\u65e0\u62a5\u9519</p>"},{"location":"zh/yolo/yolov8/#15","title":"15","text":"<pre><code>results = model(source=...)\n</code></pre> <p>\u9884\u6d4b\u540e\u8fd4\u56de\u7684\u7ed3\u679c\uff0c\u662f\u4e00\u4e2a\u5217\u8868\uff0c\u91cc\u9762\u7684\u5143\u7d20\u7684\u7c7b\u578b\u662f <code>ultralytics.engine.results.Results</code> (\u5217\u8868\u5e94\u8be5\u662f\u5bf9\u5e94\u591a\u5f20/\u5e27\u56fe\u50cf\u7684\u8bc6\u522b\u7ed3\u679c)\uff0c</p> <p>\u6bcf\u4e2a <code>Results</code> \u7c7b\u4e2d\uff0c</p> <ul> <li> <p><code>names</code> \u5c5e\u6027\u662f\u4ee5\u7c7b\u522b\u5e8f\u53f7\u548c\u7c7b\u522b\u540d\u5b57\u4e3a\u952e\u503c\u5bf9\u7684\u5b57\u5178\uff0c\u5982</p> <pre><code>{0: 'sunglass', 1: 'hat', 2: 'jacket', 3: 'shirt', 4: 'pants', 5: 'shorts', 6: 'skirt', 7: 'dress', 8: 'bag', 9: 'shoe'}\n</code></pre> </li> <li> <p><code>boxes</code> \u5c5e\u6027\u4e3a <code>ultralytics.engine.results.Boxes</code> \u7c7b\uff0c\u8bb0\u5f55\u7740\u8bc6\u522b\u7684\u7ed3\u679c\uff0c</p> <p><code>Boxes</code> \u7c7b\u4e2d\u7684 <code>cls</code> \u5c5e\u6027\uff0c\u8bb0\u5f55\u7740\u4ece\u56fe\u50cf\u4e0a\u8bc6\u522b\u51fa\u7684\u6bcf\u4e2a\u7269\u54c1\u5bf9\u5e94\u7684\u7c7b\u522b\uff0c\u7c7b\u578b\u662f <code>torch.Tensor</code> \uff0c\u53ef\u4ee5\u901a\u8fc7 <code>.tolist()</code> \u65b9\u6cd5\u628a\u5b83\u8f6c\u6362\u6210\u5217\u8868\uff0c\u5982</p> <pre><code>[4.0, 4.0, 9.0, 2.0, 3.0, 9.0, 9.0, 9.0, 4.0, 9.0, 8.0, 9.0]\n</code></pre> </li> </ul>"},{"location":"zh/%E7%B3%BB%E7%BB%9F%26%E7%8E%AF%E5%A2%83/anaconda/","title":"Anaconda","text":"<p> \u7ea6 337 \u4e2a\u5b57  47 \u884c\u4ee3\u7801  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 2 \u5206\u949f</p>"},{"location":"zh/%E7%B3%BB%E7%BB%9F%26%E7%8E%AF%E5%A2%83/anaconda/#1","title":"1","text":"<p>Anaconda \u6362\u6e90</p> <p>\u6362\u6e90\u5317\u5916</p> <ul> <li> <p>Windows \u5728\u7528\u6237\u4e3b\u76ee\u5f55\u6267\u884c <code>conda config --set show_channel_urls yes</code> \u751f\u6210 <code>.condarc</code> \u6587\u4ef6</p> </li> <li> <p>linux \u4e3b\u76ee\u5f55\u4e0b\u5df2\u6709 <code>.condarc</code> \u6587\u4ef6</p> </li> </ul> <p>\u4fee\u6539 <code>.condarc</code> \u6587\u4ef6\uff1a</p> <pre><code>channels:\n  - defaults\nshow_channel_urls: true\ndefault_channels:\n  - https://mirrors.bfsu.edu.cn/anaconda/pkgs/main\n  - https://mirrors.bfsu.edu.cn/anaconda/pkgs/r\n  - https://mirrors.bfsu.edu.cn/anaconda/pkgs/msys2\ncustom_channels:\n  conda-forge: https://mirrors.bfsu.edu.cn/anaconda/cloud\n  msys2: https://mirrors.bfsu.edu.cn/anaconda/cloud\n  bioconda: https://mirrors.bfsu.edu.cn/anaconda/cloud\n  menpo: https://mirrors.bfsu.edu.cn/anaconda/cloud\n  pytorch: https://mirrors.bfsu.edu.cn/anaconda/cloud\n  pytorch-lts: https://mirrors.bfsu.edu.cn/anaconda/cloud\n  simpleitk: https://mirrors.bfsu.edu.cn/anaconda/cloud\n  deepmodeling: https://mirrors.bfsu.edu.cn/anaconda/cloud/\n</code></pre> <p>anaconda | \u955c\u50cf\u7ad9\u4f7f\u7528\u5e2e\u52a9 | \u5317\u4eac\u5916\u56fd\u8bed\u5927\u5b66\u5f00\u6e90\u8f6f\u4ef6\u955c\u50cf\u7ad9 | BFSU Open Source Mirror</p>"},{"location":"zh/%E7%B3%BB%E7%BB%9F%26%E7%8E%AF%E5%A2%83/anaconda/#2","title":"2","text":"<p>\u67e5\u770b\u5df2\u6709\u73af\u5883</p> <pre><code>conda info -e\n</code></pre> <p>\u6216</p> <pre><code>conda env list\n</code></pre>"},{"location":"zh/%E7%B3%BB%E7%BB%9F%26%E7%8E%AF%E5%A2%83/anaconda/#3","title":"3","text":"<p>Conda\u4f7f\u7528\u6307\u5357 - \u77e5\u4e4e (zhihu.com)</p> <p>\u521b\u5efaconda\u73af\u5883\uff0c<code>python=3.x</code>\u6307\u5b9apython\u7248\u672c</p> <pre><code>conda create [ -n | --name ] xxx python=3.x\n</code></pre> <p>\u4ece\u5df2\u6709\u73af\u5883\u514b\u9686\u4e00\u4e2a\u65b0\u7684\u73af\u5883</p> <pre><code>conda create -n xxx --clone env\n</code></pre> <pre><code>activate env # \u6fc0\u6d3benv\u73af\u5883\n\nconda deactivate # \u9000\u51faenv\u73af\u5883\n</code></pre> <p>\u5220\u9664\u5df2\u6709\u73af\u5883</p> <pre><code>conda remove -n env --all\n</code></pre>"},{"location":"zh/%E7%B3%BB%E7%BB%9F%26%E7%8E%AF%E5%A2%83/anaconda/#4","title":"4","text":"<p>pycharm \u627e\u4e0d\u5230 conda \u53ef\u6267\u884c\u6587\u4ef6\uff1a</p> <ol> <li>Conda \u53ef\u6267\u884c\u6587\u4ef6\uff1a<code>...\\Anaconda3\\Scripts\\conda.exe</code></li> <li>\u52a0\u8f7d\u73af\u5883</li> </ol>"},{"location":"zh/%E7%B3%BB%E7%BB%9F%26%E7%8E%AF%E5%A2%83/anaconda/#5","title":"5","text":"<p>\u5728 git bash \u4e2d\u4f7f\u7528 conda \u73af\u5883</p> <p>\u76f4\u63a5\u6267\u884c <code>conda activate</code> \u7684\u547d\u4ee4\u4f1a\u663e\u793a</p> <pre><code>$ conda activate\n\nCommandNotFoundError: Your shell has not been properly configured to use 'conda activate'.\nIf using 'conda activate' from a batch script, change your\ninvocation to 'CALL conda.bat activate'.\n\nTo initialize your shell, run\n\n    $ conda init &lt;SHELL_NAME&gt;\n\nCurrently supported shells are:\n  - bash\n  - cmd.exe\n  - fish\n  - tcsh\n  - xonsh\n  - zsh\n  - powershell\n\nSee 'conda init --help' for more information and options.\n\nIMPORTANT: You may need to close and restart your shell after running 'conda init'.\n</code></pre> <p>\u89e3\u51b3\u7684\u529e\u6cd5\u662f</p> <p>Conda environment fails to activate with Git Bash \u00b7 Issue #19534 \u00b7 microsoft/vscode-python (github.com)</p> <p><code>source</code> anaconda3 \u5b89\u88c5\u8def\u5f84\u4e0b\u7684 <code>/Scripts/activate</code></p> <pre><code>source /e/Programs/Anaconda3/Scripts/activate\n</code></pre> <p>\u7136\u540e\u5c31\u4f1a\u542f\u52a8 anaconda \u7684 base \u73af\u5883\uff0c\u8fd9\u65f6 <code>conda activate xxx</code> \u5c31\u6709\u7528\u4e86</p>"},{"location":"zh/%E7%B3%BB%E7%BB%9F%26%E7%8E%AF%E5%A2%83/anaconda/#6","title":"6","text":"<p>\u5982\u679c anaconda \u6216 miniconda \u5b89\u88c5\u597d\u4e4b\u540e\uff0c(windows)\u5728\u7ec8\u7aef\u4e0a\u8fd0\u884c <code>conda</code> \u547d\u4ee4\u65f6\uff0c\u663e\u793a\u627e\u4e0d\u5230\u547d\u4ee4\u6216\u8005 <code>conda</code> \u4e0d\u662f\u547d\u4ee4\u4e4b\u7c7b\u7684\u9519\u8bef\u4fe1\u606f\uff0c</p> <p>\u53c2\u8003\u8fd9\u7bc7\u6587\u7ae0</p> <p>\u89e3\u51b3Windows\u5b89\u88c5Anaconda\u6216Miniconda\u547d\u4ee4\u884c\u7a97\u53e3\u63d0\u793a\u201c'conda' \u4e0d\u662f\u5185\u90e8\u6216\u5916\u90e8\u547d\u4ee4\uff0c\u4e5f\u4e0d\u662f\u53ef\u8fd0\u884c\u7684\u7a0b\u5e8f \u6216\u6279\u5904\u7406\u6587\u4ef6\u3002\u201d - \u77e5\u4e4e (zhihu.com)</p> <p>\u5c06 anaconda \u6216 miniconda \u5b89\u88c5\u76ee\u5f55\u4e0b\u7684 <code>Scripts</code> \u6587\u4ef6\u5939\u6dfb\u52a0\u5230\u73af\u5883\u53d8\u91cf\u4e2d\uff0c\u5e76\u91cd\u542f\u5373\u53ef(\u6216\u8005\u6ce8\u9500\u518d\u767b\u9646)</p>"},{"location":"zh/%E7%B3%BB%E7%BB%9F%26%E7%8E%AF%E5%A2%83/cuda%20cudnn%E5%AE%89%E8%A3%85/","title":"CUDA cuDNN \u5b89\u88c5","text":"<p> \u7ea6 516 \u4e2a\u5b57  29 \u884c\u4ee3\u7801  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 2 \u5206\u949f</p>"},{"location":"zh/%E7%B3%BB%E7%BB%9F%26%E7%8E%AF%E5%A2%83/cuda%20cudnn%E5%AE%89%E8%A3%85/#1","title":"1","text":"<p>(7\u6761\u6d88\u606f) YOLOv7\u4fdd\u59c6\u7ea7\u6559\u7a0b\uff01\uff08\u4e2a\u4eba\u8e29\u5751\u65e0\u6570\uff09----\u73af\u5883\u914d\u7f6e_yolov7\u73af\u5883\u642d\u5efa_AmbitionToFree\u7684\u535a\u5ba2-CSDN\u535a\u5ba2</p> <p>\u7b2c\u4e00\u6b21\u5b89\u88c5\u65f6\uff0c\u672a\u77e5\u539f\u56e0\u9ed1\u5c4f\uff0c\u5f3a\u5236\u5173\u673a\u91cd\u542f\u4e4b\u540e\uff0c\u518d\u6b21\u5b89\u88c5\u6210\u529f</p> <p>(7\u6761\u6d88\u606f) CUDA\u5b89\u88c5\u548c\u68c0\u6d4b\u3010\u5168\u3011\uff08nvcc\u547d\u4ee4\u627e\u4e0d\u5230\u7684\u89e3\u51b3\u529e\u6cd5\uff09_windows nvcc -v \u63d0\u793a\u672a\u627e\u5230\u547d\u4ee4_\u53ef\u9760\u7684\u8c46\u5305\u87f9\u540c\u5fd7\u7684\u535a\u5ba2-CSDN\u535a\u5ba2</p> <p>\u5b89\u88c5\u540e\u91cd\u65b0\u5f00\u542f\u65b0\u7684cmd\uff0c\u624d\u6709nvcc\u547d\u4ee4</p>"},{"location":"zh/%E7%B3%BB%E7%BB%9F%26%E7%8E%AF%E5%A2%83/cuda%20cudnn%E5%AE%89%E8%A3%85/#2","title":"2","text":"<p>ubuntu \u5b89\u88c5 cuda</p> <p>(8\u6761\u6d88\u606f) \u3010CUDA\u3011Ubuntu\u7cfb\u7edf\u5982\u4f55\u5b89\u88c5CUDA\u4fdd\u59c6\u7ea7\u6559\u7a0b(2022\u5e74\u6700\u65b0)_ubuntu cuda\u5b89\u88c5\u6559\u7a0b_\u81ea\u7267\u541b\u7684\u535a\u5ba2-CSDN\u535a\u5ba2</p> <p>(8\u6761\u6d88\u606f) Ubuntu\u5b89\u88c5cuda\u4e0ecudnn\uff0c\u4eb2\u6d4b\u53ef\u7528_ubuntu\u5b89\u88c5cuda\u548ccudnn_JulyLi2019\u7684\u535a\u5ba2-CSDN\u535a\u5ba2</p>"},{"location":"zh/%E7%B3%BB%E7%BB%9F%26%E7%8E%AF%E5%A2%83/cuda%20cudnn%E5%AE%89%E8%A3%85/#3","title":"3","text":"<p>Existing package manager installation of the driver found. It is strongly recommended that you remove this before continuing.</p> <p></p> <p>Upon starting, we may be greeted with a warning stating that an existing package manager installation of the graphics driver was found. Unless you have a version of the graphics driver lower than required from this page, you can choose to continue.</p> <p>Get CUDA the right way.. (One that won\u2019t break anything when you\u2026 | by Thameem Abbas | Medium</p>"},{"location":"zh/%E7%B3%BB%E7%BB%9F%26%E7%8E%AF%E5%A2%83/cuda%20cudnn%E5%AE%89%E8%A3%85/#4","title":"4","text":"<p>\u89e3\u51b3\u5b89\u88c5cuda\u540e\uff0cnvcc\u627e\u4e0d\u5230\u547d\u4ee4</p> <p>(8\u6761\u6d88\u606f) \u89e3\u51b3nvcc\u627e\u4e0d\u5230\u7684\u95ee\u9898\uff08Ubuntu16.04 CUDA 8.0\uff09_rtygbwwwerr\u7684\u535a\u5ba2-CSDN\u535a\u5ba2</p> <p>\u4fee\u6539<code>~/.bashrc</code>\u6587\u4ef6\u540e\uff0c\u66f4\u65b0\u7cfb\u7edf\u73af\u5883\uff1a</p> <pre><code>source ~/.bashrc\nsudo ldconfig\n</code></pre>"},{"location":"zh/%E7%B3%BB%E7%BB%9F%26%E7%8E%AF%E5%A2%83/cuda%20cudnn%E5%AE%89%E8%A3%85/#5","title":"5","text":"<p>\u5b89\u88c5 cudnn</p> <p>(8\u6761\u6d88\u606f) \u57fa\u4e8eubuntu\u5b89\u88c5cuda,cuDNN_ubuntu\u5b89\u88c5cuda\u548ccudnn_xyzxyz576\u7684\u535a\u5ba2-CSDN\u535a\u5ba2</p> <p>Installation Guide - NVIDIA Docs</p>"},{"location":"zh/%E7%B3%BB%E7%BB%9F%26%E7%8E%AF%E5%A2%83/cuda%20cudnn%E5%AE%89%E8%A3%85/#6","title":"6","text":"<pre><code>dpkg-deb: \u9519\u8bef: 'cudnn-local-repo-ubuntu1804-8.9.2.26_1.0-1_amd64.deb' is not a Debian format archive\n</code></pre> <p>(8\u6761\u6d88\u606f) \u9519\u8bef: \u2018containerd.io_1.4.9-1_amd64.deb\u2018 is not a Debian format archive_sun007700\u7684\u535a\u5ba2-CSDN\u535a\u5ba2</p> <p>\u5b89\u88c5\u5305\u6ca1\u4e0b\u8f7d\u597d</p>"},{"location":"zh/%E7%B3%BB%E7%BB%9F%26%E7%8E%AF%E5%A2%83/cuda%20cudnn%E5%AE%89%E8%A3%85/#7","title":"7","text":"<pre><code>E: \u672a\u627e\u5230\u201clibcudnn8\u201d\u7684\u201c8.9.2.26-1+cuda11.3\u201d\u7248\u672c\n</code></pre> <p>E: Version '8.3.1.22-1+cuda10.2' for 'libcudnn8' was not found - Deep Learning (Training &amp; Inference) / cuDNN - NVIDIA Developer Forums</p> <pre><code>chrysophyt\n22 \u5e74 4 \u6708\n\n*I already did\n$ sudo apt-get update\n, it just wont work.\n\nIn the end I went to the cudnn archive and download older version\nhttps://developer.nvidia.com/rdp/cudnn-archive 280\n</code></pre> <pre><code>dishant.daredevil\n22 \u5e74 4 \u6708\n\nThis might do the job.\nAfter step -\nsudo apt-key add /var/cudnn-local-repo-*/7fa2af80.pub\nYou will have the directory /var/cudnn-local-repo-ubuntu2004-8.4.0.27 (with your ubuntu version and cudnn downloaded)\nInside this directory, you will be having three .deb files.\njust do for all the deb files-\nsudo gdebi xxx.deb\nwhich will install cudnn. ;)\n</code></pre> <p>\u91c7\u53d6\u65e7\u7248\u672c\u5b89\u88c5</p> <p>\u65e7\u7248\u672c\u662fruntime\uff0cdev\uff0csample\uff0c\u4e09\u4e2a\u5206\u5f00</p> <p>\u5982\u8fd9\u4e2a\uff1a(8\u6761\u6d88\u606f) Ubuntu\u5b89\u88c5cuda\u4e0ecudnn\uff0c\u4eb2\u6d4b\u53ef\u7528_ubuntu\u5b89\u88c5cuda\u548ccudnn_JulyLi2019\u7684\u535a\u5ba2-CSDN\u535a\u5ba2</p>"},{"location":"zh/%E7%B3%BB%E7%BB%9F%26%E7%8E%AF%E5%A2%83/cuda%20cudnn%E5%AE%89%E8%A3%85/#8","title":"8","text":"<p>To verify that cuDNN is installed and is running properly, compile the <code>mnistCUDNN</code> sample located in the <code>/usr/src/cudnn_samples_v8</code> directory in the Debian file.</p> <ul> <li>1  Copy the cuDNN samples to a writable path.</li> </ul> <pre><code>cp -r /usr/src/cudnn_samples_v8/ $HOME\n</code></pre> <ul> <li>2  Go to the writable path.</li> </ul> <pre><code>cd  $HOME/cudnn_samples_v8/mnistCUDNN\n</code></pre> <ul> <li>3  Compile the <code>mnistCUDNN</code>sample.</li> </ul> <pre><code>make clean &amp;&amp; make\n</code></pre> <ul> <li>4  Run the <code>mnistCUDNN</code> sample.</li> </ul> <pre><code>./mnistCUDNN  \n</code></pre> <p>If cuDNN is properly installed and running on your Linux system, you will see a message similar to the following:</p> <pre><code>Test passed!\n</code></pre>"},{"location":"zh/%E7%B3%BB%E7%BB%9F%26%E7%8E%AF%E5%A2%83/jupyter%20notebook/","title":"Jupyter Notebook","text":"<p> \u7ea6 33 \u4e2a\u5b57 </p>"},{"location":"zh/%E7%B3%BB%E7%BB%9F%26%E7%8E%AF%E5%A2%83/jupyter%20notebook/#1","title":"1","text":"<p>vscode notebook\u5feb\u6377\u952e</p> <p>VSCode - Jupyter\u5feb\u6377\u952e - \u7ecd\u8363 - \u535a\u5ba2\u56ed (cnblogs.com)</p> <p>\u6587\u7ae0\u4e2d\u672a\u63d0\u5230\u7684</p> <p>Esc \u9000\u51fa\u7f16\u8f91\u6a21\u5f0f</p>"},{"location":"zh/%E7%B3%BB%E7%BB%9F%26%E7%8E%AF%E5%A2%83/nodejs/","title":"Node.js","text":"<p> \u7ea6 18 \u4e2a\u5b57  1 \u884c\u4ee3\u7801 </p>"},{"location":"zh/%E7%B3%BB%E7%BB%9F%26%E7%8E%AF%E5%A2%83/nodejs/#1","title":"1","text":"<p>npm \u6362\u6e90</p> <p>NPM \u5982\u4f55\u6362\u6e90\uff1f - \u77e5\u4e4e (zhihu.com)</p> <p>\u6362\u6210\u6dd8\u5b9d\u6e90</p> <pre><code>npm config set registry https://registry.npmmirror.com/\n</code></pre>"},{"location":"zh/%E7%B3%BB%E7%BB%9F%26%E7%8E%AF%E5%A2%83/pip/","title":"pip","text":"<p> \u7ea6 291 \u4e2a\u5b57  12 \u884c\u4ee3\u7801  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 1 \u5206\u949f</p>"},{"location":"zh/%E7%B3%BB%E7%BB%9F%26%E7%8E%AF%E5%A2%83/pip/#1","title":"1","text":"<p>pip\u6362\u6e90\u5317\u5916</p> <p>pypi | \u955c\u50cf\u7ad9\u4f7f\u7528\u5e2e\u52a9 | \u5317\u4eac\u5916\u56fd\u8bed\u5927\u5b66\u5f00\u6e90\u8f6f\u4ef6\u955c\u50cf\u7ad9 | BFSU Open Source Mirror</p> <p>\u4e34\u65f6\u4f7f\u7528</p> <pre><code>pip install -i https://mirrors.bfsu.edu.cn/pypi/web/simple some-package\n</code></pre> <p>\u6ce8\u610f\uff0c<code>simple</code> \u4e0d\u80fd\u5c11, \u662f <code>https</code> \u800c\u4e0d\u662f <code>http</code></p> <p>\u8bbe\u4e3a\u9ed8\u8ba4</p> <p>\u5347\u7ea7 pip \u5230\u6700\u65b0\u7684\u7248\u672c (&gt;=10.0.0) \u540e\u8fdb\u884c\u914d\u7f6e\uff1a</p> <pre><code>python -m pip install --upgrade pip\npip config set global.index-url https://mirrors.bfsu.edu.cn/pypi/web/simple\n</code></pre>"},{"location":"zh/%E7%B3%BB%E7%BB%9F%26%E7%8E%AF%E5%A2%83/pip/#2","title":"2","text":"<p>pip \u5347\u7ea7\u67d0\u4e2a\u5305</p> <pre><code>pip install [-U | --updrade] xxx\n</code></pre>"},{"location":"zh/%E7%B3%BB%E7%BB%9F%26%E7%8E%AF%E5%A2%83/pip/#3","title":"3","text":"<p>\u5b89\u88c5\u67d0\u4e2a\u7248\u672c\u7684\u5305</p> <pre><code>pip install xxx==x.x.x\n</code></pre>"},{"location":"zh/%E7%B3%BB%E7%BB%9F%26%E7%8E%AF%E5%A2%83/pip/#4","title":"4","text":"<p>pip \u5b89\u88c5\u67d0\u4e2a\u672c\u5730\u7684 \u5305 / <code>.whl</code> \u6587\u4ef6\uff0c\u76f4\u63a5 <code>pip install xxx.whl</code> \u5373\u53ef</p> <pre><code>pip install xxx.whl\n</code></pre>"},{"location":"zh/%E7%B3%BB%E7%BB%9F%26%E7%8E%AF%E5%A2%83/pip/#5","title":"5","text":"<p>Python\u67e5\u770b\u7b2c\u4e09\u65b9\u5e93\u3001\u5305\u7684\u6240\u6709\u53ef\u7528\u7248\u672c\uff0c\u5386\u53f2\u7248\u672c_python 2.7 pip\u67e5\u8be2\u53ef\u7528\u5e93\u7248\u672c-CSDN\u535a\u5ba2</p> <p>\u5982\u679c\u60f3\u67e5\u8be2\u8981\u5b89\u88c5\u7684\u5305\u6240\u6709\u53ef\u4ee5\u5b89\u88c5\u7684\u7248\u672c</p> <p>\u53ef\u4ee5\u8fd9\u6837</p> <pre><code>pip install xxx==\n</code></pre> <p>\u6216\u8005\u7b49\u53f7\u540e\u53ef\u4ee5\u5199\u4efb\u4f55\u4e0d\u662f\u5bf9\u5e94\u7248\u672c\u53f7\u7684\u4e1c\u897f\uff0c\u7136\u540e\u5c31\u4f1a\u8fd4\u56de\u7c7b\u4f3c\u4e8e\u8fd9\u6837\u7684\u4fe1\u606f</p> <pre><code>&gt;pip install numpy==tst\nLooking in indexes: https://mirrors.bfsu.edu.cn/pypi/web/simple/\nERROR: Could not find a version that satisfies the requirement numpy==tst (from versions: 1.3.0, 1.4.1, 1.5.0, 1.5.1, 1.6.0, 1.6.1, 1.6.2, 1.7.0, 1.7.1, 1.7.2, 1.8.0, 1.8.1, 1.8.2, 1.9.0, 1.9.1, 1.9.2, 1.9.3, 1.10.0.post2, 1.10.1, 1.10.2, 1.10.4, 1.11.0, 1.11.1, 1.11.2, 1.11.3, 1.12.0, 1.12.1, 1.13.0, 1.13.1, 1.13.3, 1.14.0, 1.14.1, 1.14.2, 1.14.3, 1.14.4, 1.14.5, 1.14.6, 1.15.0, 1.15.1, 1.15.2, 1.15.3, 1.15.4, 1.16.0, 1.16.1, 1.16.2, 1.16.3, 1.16.4, 1.16.5, 1.16.6, 1.17.0, 1.17.1, 1.17.2, 1.17.3, 1.17.4, 1.17.5, 1.18.0, 1.18.1, 1.18.2, 1.18.3, 1.18.4, 1.18.5, 1.19.0, 1.19.1, 1.19.2, 1.19.3, 1.19.4, 1.19.5, 1.20.0, 1.20.1, 1.20.2, 1.20.3, 1.21.0, 1.21.1, 1.21.2, 1.21.3, 1.21.4, 1.21.5, 1.21.6, 1.22.0, 1.22.1, 1.22.2, 1.22.3, 1.22.4, 1.23.0rc1, 1.23.0rc2, 1.23.0rc3, 1.23.0, 1.23.1, 1.23.2, 1.23.3, 1.23.4, 1.23.5, 1.24.0rc1, 1.24.0rc2, 1.24.0, 1.24.1, 1.24.2, 1.24.3, 1.24.4, 1.25.0rc1, 1.25.0, 1.25.1, 1.25.2, 1.26.0b1, 1.26.0rc1, 1.26.0)\nERROR: No matching distribution found for numpy==tst\n</code></pre>"},{"location":"zh/%E7%B3%BB%E7%BB%9F%26%E7%8E%AF%E5%A2%83/pip/#6","title":"6","text":"<p>\u5148\u8fdb\u89c6\u89c9</p> <p>\u53ef\u4ee5\u901a\u8fc7\u6dfb\u52a0 <code>--no-deps</code> \u9009\u9879\u6765\u5ffd\u7565\u5305\u7684\u4f9d\u8d56\u7684\u5b89\u88c5\u6765\u76f4\u63a5\u5b89\u88c5</p> <pre><code>pip install xxx --nodeps\n</code></pre>"},{"location":"zh/%E7%B3%BB%E7%BB%9F%26%E7%8E%AF%E5%A2%83/pip/#7","title":"7","text":"<p>\u5982\u679c\u5728\u9879\u76ee\u4e2d\u521b\u5efa\u4e86python\u865a\u62df\u73af\u5883 <code>.venv</code> \uff0c\u90a3\u4e48(\u5728\u7ec8\u7aef\u4e2d)\u6fc0\u6d3b\u8fd9\u4e2a\u73af\u5883\u7684\u65b9\u6cd5\u662f\uff0c\u5728\u7ec8\u7aef\u8fd0\u884c <code>.venv/Scripts/activate</code> \u6587\u4ef6</p> <pre><code>.venv/Scripts/activate\n</code></pre> <p>\u53c2\u8003\uff1aPython\u865a\u62df\u73af\u5883\uff08Python venv\uff09\u7684\u521b\u5efa\u3001\u6fc0\u6d3b\u3001\u9000\u51fa\u53ca\u5220\u9664_python .ven-CSDN\u535a\u5ba2</p>"},{"location":"zh/%E7%B3%BB%E7%BB%9F%26%E7%8E%AF%E5%A2%83/powershell/","title":"PowerShell","text":"<p> \u7ea6 18 \u4e2a\u5b57  1 \u884c\u4ee3\u7801 </p>"},{"location":"zh/%E7%B3%BB%E7%BB%9F%26%E7%8E%AF%E5%A2%83/powershell/#1","title":"1","text":"<p>\u5728powershell\u4e2d\u5b89\u88c5/\u5347\u7ea7powershell</p> <pre><code>winget install Microsoft.PowerShell\n</code></pre> <p>Update powershell to the latest revision - Stack Overflow</p>"},{"location":"zh/%E7%B3%BB%E7%BB%9F%26%E7%8E%AF%E5%A2%83/ros/","title":"ROS","text":"<p> \u7ea6 244 \u4e2a\u5b57  27 \u884c\u4ee3\u7801  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 1 \u5206\u949f</p>"},{"location":"zh/%E7%B3%BB%E7%BB%9F%26%E7%8E%AF%E5%A2%83/ros/#1","title":"1","text":"<p>\u7531\u4e8eros\u9700\u8981\u4f7f\u7528\u7684\u662fubuntu\u7cfb\u7edf\u81ea\u5e26\u7684python\uff0c\u800c\u6211\u7684ubuntu\u7cfb\u7edf\u4e4b\u524d\u88c5\u4e86anaconda\uff0c\u6240\u4ee5\u5728 <code>rosrun</code> \u81ea\u5df1\u7f16\u5199\u7684\u5305\u65f6\uff0c\u4f1a\u663e\u793a <code>No module named 'rospkg'</code> \uff1a</p> <pre><code>Traceback (most recent call last):\n  File \"/home/ronald/catkin_ws/src/beginner_tutorials/scripts/talker.py\", line 3, in &lt;module&gt;\n    import rospy\n  File \"/opt/ros/melodic/lib/python2.7/dist-packages/rospy/__init__.py\", line 49, in &lt;module&gt;\n    from .client import spin, myargv, init_node, \\\n  File \"/opt/ros/melodic/lib/python2.7/dist-packages/rospy/client.py\", line 52, in &lt;module&gt;\n    import roslib\n  File \"/opt/ros/melodic/lib/python2.7/dist-packages/roslib/__init__.py\", line 50, in &lt;module&gt;\n    from roslib.launcher import load_manifest  # noqa: F401\n  File \"/opt/ros/melodic/lib/python2.7/dist-packages/roslib/launcher.py\", line 42, in &lt;module&gt;\n    import rospkg\nModuleNotFoundError: No module named 'rospkg'\n</code></pre> <p>\u8be2\u95ee\u8001\u5e08\uff0c\u8001\u5e08\u8bf4\u8fd9\u662f\u7531\u4e8e\u4f7f\u7528\u4e86 anaconda \u7684 python \uff0c\u5e94\u8be5\u8981\u4f7f\u7528\u7cfb\u7edf\u81ea\u5e26\u7684python2(\u8001\u5e08\u8bf4\u8fd9\u662f\u4e00\u4e2a\u7ecf\u5178\u7684anaconda\u548cros\u51b2\u7a81\u7684\u95ee\u9898)\uff0c\u6240\u4ee5\u8001\u5e08\u7684\u505a\u6cd5\u662f</p> <p>\u6253\u5f00 <code>~/.bashrc</code> \u6587\u4ef6\uff0c\u5c06</p> <pre><code># &gt;&gt;&gt; conda initialize &gt;&gt;&gt;\n# !! Contents within this block are managed by 'conda init' !!\n__conda_setup=\"$('/home/ronald/anaconda3/bin/conda' 'shell.bash' 'hook' 2&gt; /dev/null)\"\nif [ $? -eq 0 ]; then\n    eval \"$__conda_setup\"\nelse\n    if [ -f \"/home/ronald/anaconda3/etc/profile.d/conda.sh\" ]; then\n        . \"/home/ronald/anaconda3/etc/profile.d/conda.sh\"\n    else\n        export PATH=\"/home/ronald/anaconda3/bin:$PATH\"\n    fi\nfi\nunset __conda_setup\n# &lt;&lt;&lt; conda initialize &lt;&lt;&lt;\n</code></pre> <p>\u6ce8\u91ca\u6389</p> <p>\u4ece\u800c\u7ec8\u7aef\u4e2d\u4f7f\u7528\u7684python\u5c31\u53d8\u6210\u4e86ubuntu18\u81ea\u5e26\u7684python2.7</p> <p></p> <p>\u4f46\u662f\u6211\u53d1\u73b0\u76f4\u63a5\u6267\u884c <code>conda deactivate</code> \u7684\u547d\u4ee4\u4e5f\u53ef\u4ee5\u9000\u51fa anaconda \u7684 base \u73af\u5883</p> <p></p> <p>\u4f46\u662f\u53d1\u73b0\u8fd8\u662f\u663e\u793a <code>No module named 'rospkg'</code> \uff0c</p> <p>\u7136\u540e\u6211\u7a81\u7136\u60f3\u5230\u53ef\u80fd\u662f\u7531\u4e8e\u81ea\u5df1\u5199\u7684python\u6587\u4ef6\u4e2d\u7b2c\u4e00\u884c</p> <pre><code>#! /usr/bin/env python3\n</code></pre> <p>\u4e2d\u7684 <code>python3</code> \u7684\u95ee\u9898\uff0c\u6240\u4ee5\u6211\u5c1d\u8bd5\u5c06\u5176\u6539\u6210 <code>python2</code> \u6700\u540e\u53d1\u73b0\u80fd\u591f\u6210\u529f <code>rosrun</code> \u4e86</p> <p>\u5728\u4e4b\u540e\u4e00\u6b21\u6d4b\u8bd5\u4e2d\uff0c\u8fd8\u53d1\u73b0\u4e86\uff0c\u5c06 <code>python3</code> \u6539\u6210 <code>python2</code> \u4e4b\u540e\uff0c\u5373\u4f7f\u4f7f\u7528anaconda\u7684python3\uff0c\u4e5f\u80fd <code>rosrun</code> </p>"},{"location":"zh/%E7%B3%BB%E7%BB%9F%26%E7%8E%AF%E5%A2%83/ubuntu/","title":"Ubuntu","text":"<p> \u7ea6 975 \u4e2a\u5b57  52 \u884c\u4ee3\u7801  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 4 \u5206\u949f</p>"},{"location":"zh/%E7%B3%BB%E7%BB%9F%26%E7%8E%AF%E5%A2%83/ubuntu/#1","title":"1","text":"<p>\u5728\u5ba2\u6237\u673a\u4e2d\u88c5\u8f7d\u865a\u62dfCD\u9a71\u52a8\u5668\uff0c\u542f\u52a8\u7ec8\u7aef\uff0c\u4f7f\u7528tar\u89e3\u538b\u7f29\u5b89\u88c5\u7a0b\u5e8f\uff0c\u7136\u540e\u6267\u884c <code>vmware-install.pl</code> \u5b89\u88c5 VMware Tools\u3002</p>"},{"location":"zh/%E7%B3%BB%E7%BB%9F%26%E7%8E%AF%E5%A2%83/ubuntu/#2","title":"2","text":"<p>\u5b89\u88c5ubuntu</p> <ul> <li> <p>(8\u6761\u6d88\u606f) \u53cc\u7cfb\u7edf\u4e0bUbuntu18.04(Linux)\u5b89\u88c5\u8d85\u8be6\u7ec6\u56fe\u6587\u6559\u7a0b_\u6ca1\u6709\u7075\u9b42\u7684\u5de5\u5177\u4eba\u7684\u535a\u5ba2-CSDN\u535a\u5ba2</p> <p>\u6839\u636e 3.\u5236\u4f5c\u88c5\u673a\u7cfb\u7edfU\u76d8 \u5236\u4f5c\u542f\u52a8\u76d8</p> </li> <li> <p></p> </li> <li> <p></p> <p>\u6b63\u5e38\u5b89\u88c5</p> </li> <li> <p></p> <p>\u9009\u62e9 <code>\u5176\u4ed6\u9009\u9879</code> \u624d\u80fd\u81ea\u5df1\u5206\u533a</p> </li> <li> <p></p> <p></p> <p></p> <p></p> <p></p> <p></p> <ul> <li> <p>\u5206\u4e09\u4e2a\u533a\u5c31\u591f\u4e86\uff1a</p> EFI\u7cfb\u7edf\u5206\u533a 300MB --- \u4ea4\u6362\u7a7a\u95f4 \u5185\u5b58\u591a\u5927\u5c31\u591a\u5927 --- \u6839\u76ee\u5f55\u5206\u533a (\u6302\u8f7d\u70b9\uff1a<code>/</code>) \u5269\u4f59\u7a7a\u95f4 Ext4\u65e5\u5fd7\u6587\u4ef6\u7cfb\u7edf <p>\uff08\u82e5\u6709\u9009\u9879\uff09\u5747\u9009\u4e3b\u5206\u533a\u3001\u7a7a\u95f4\u8d77\u59cb\u4f4d\u7f6e</p> </li> <li> <p><code>\u5b89\u88c5\u5f15\u5bfc\u5668\u7684\u8bbe\u5907</code> / <code>Device for boot loader installation</code> \u9009\u8ddfEFI\u76f8\u540c\u7684\u786c\u76d8\uff0c</p> <p>\u5373\u5982\u679c\u5206\u533a\u90fd\u5728\u540c\u4e00\u4e2a\u786c\u76d8\u4e0a\u5c31\u9009\u90a3\u4e00\u4e2a</p> </li> </ul> </li> <li> <p>\u540e\u7eed\u6309\u7167\u5f15\u5bfc\u64cd\u4f5c\u5c31\u884c</p> </li> </ul>"},{"location":"zh/%E7%B3%BB%E7%BB%9F%26%E7%8E%AF%E5%A2%83/ubuntu/#3","title":"3","text":"<p>ubuntu | \u955c\u50cf\u7ad9\u4f7f\u7528\u5e2e\u52a9 | \u5317\u4eac\u5916\u56fd\u8bed\u5927\u5b66\u5f00\u6e90\u8f6f\u4ef6\u955c\u50cf\u7ad9 | BFSU Open Source Mirror</p> <p>\u6362\u5317\u5916\u6e90</p> <p>18.04\u53ef\u4ee5\u76f4\u63a5\u5728\u8f6f\u4ef6\u4e0e\u66f4\u65b0\u4e2d\u9009\u62e9\u5317\u5916\u6e90</p> <p>\u4fee\u6539<code>/etc/apt/sources.list</code>\u6587\u4ef6 ( \u5148\u5c06\u7cfb\u7edf\u81ea\u5e26\u7684\u8be5\u6587\u4ef6\u505a\u4e2a\u5907\u4efd<code>source.list.save</code>\uff0c\u5c06\u8be5\u6587\u4ef6\u66ff\u6362\u4e3a\u4e0b\u9762\u5185\u5bb9\uff0c\u5373\u53ef\u4f7f\u7528\u9009\u62e9\u7684\u8f6f\u4ef6\u6e90\u955c\u50cf\u3002)\uff1a</p> <ul> <li> <p>18.04</p> <pre><code># \u9ed8\u8ba4\u6ce8\u91ca\u4e86\u6e90\u7801\u955c\u50cf\u4ee5\u63d0\u9ad8 apt update \u901f\u5ea6\uff0c\u5982\u6709\u9700\u8981\u53ef\u81ea\u884c\u53d6\u6d88\u6ce8\u91ca\ndeb https://mirrors.bfsu.edu.cn/ubuntu/ bionic main restricted universe multiverse\n# deb-src https://mirrors.bfsu.edu.cn/ubuntu/ bionic main restricted universe multiverse\ndeb https://mirrors.bfsu.edu.cn/ubuntu/ bionic-updates main restricted universe multiverse\n# deb-src https://mirrors.bfsu.edu.cn/ubuntu/ bionic-updates main restricted universe multiverse\ndeb https://mirrors.bfsu.edu.cn/ubuntu/ bionic-backports main restricted universe multiverse\n# deb-src https://mirrors.bfsu.edu.cn/ubuntu/ bionic-backports main restricted universe multiverse\n\n# deb https://mirrors.bfsu.edu.cn/ubuntu/ bionic-security main restricted universe multiverse\n# # deb-src https://mirrors.bfsu.edu.cn/ubuntu/ bionic-security main restricted universe multiverse\n\ndeb http://security.ubuntu.com/ubuntu/ bionic-security main restricted universe multiverse\n# deb-src http://security.ubuntu.com/ubuntu/ bionic-security main restricted universe multiverse\n\n# \u9884\u53d1\u5e03\u8f6f\u4ef6\u6e90\uff0c\u4e0d\u5efa\u8bae\u542f\u7528\n# deb https://mirrors.bfsu.edu.cn/ubuntu/ bionic-proposed main restricted universe multiverse\n# # deb-src https://mirrors.bfsu.edu.cn/ubuntu/ bionic-proposed main restricted universe multiverse\n</code></pre> </li> <li> <p>20.04</p> <pre><code># \u9ed8\u8ba4\u6ce8\u91ca\u4e86\u6e90\u7801\u955c\u50cf\u4ee5\u63d0\u9ad8 apt update \u901f\u5ea6\uff0c\u5982\u6709\u9700\u8981\u53ef\u81ea\u884c\u53d6\u6d88\u6ce8\u91ca\ndeb https://mirrors.bfsu.edu.cn/ubuntu/ focal main restricted universe multiverse\n# deb-src https://mirrors.bfsu.edu.cn/ubuntu/ focal main restricted universe multiverse\ndeb https://mirrors.bfsu.edu.cn/ubuntu/ focal-updates main restricted universe multiverse\n# deb-src https://mirrors.bfsu.edu.cn/ubuntu/ focal-updates main restricted universe multiverse\ndeb https://mirrors.bfsu.edu.cn/ubuntu/ focal-backports main restricted universe multiverse\n# deb-src https://mirrors.bfsu.edu.cn/ubuntu/ focal-backports main restricted universe multiverse\n\n# deb https://mirrors.bfsu.edu.cn/ubuntu/ focal-security main restricted universe multiverse\n# # deb-src https://mirrors.bfsu.edu.cn/ubuntu/ focal-security main restricted universe multiverse\n\ndeb http://security.ubuntu.com/ubuntu/ focal-security main restricted universe multiverse\n# deb-src http://security.ubuntu.com/ubuntu/ focal-security main restricted universe multiverse\n\n# \u9884\u53d1\u5e03\u8f6f\u4ef6\u6e90\uff0c\u4e0d\u5efa\u8bae\u542f\u7528\n# deb https://mirrors.bfsu.edu.cn/ubuntu/ focal-proposed main restricted universe multiverse\n# # deb-src https://mirrors.bfsu.edu.cn/ubuntu/ focal-proposed main restricted universe multiverse\n</code></pre> </li> </ul>"},{"location":"zh/%E7%B3%BB%E7%BB%9F%26%E7%8E%AF%E5%A2%83/ubuntu/#4","title":"4","text":"<p>\u8bed\u8a00\u6539\u4e3a\u4e2d\u6587\uff1a</p> <p></p> <ol> <li>\u8bbe\u7f6e\uff0c\u533a\u57df\u548c\u8bed\u8a00\uff0c<code>\u7ba1\u7406\u5df2\u5b89\u88c5\u7684\u8bed\u8a00</code>\uff0c</li> <li><code>\u6dfb\u52a0\u6216\u5220\u9664\u8bed\u8a00...</code>\uff0c</li> <li><code>\u4e2d\u6587\u7b80\u4f53</code>\uff08\u52fe\u9009\uff09\uff0c<code>\u5e94\u7528</code></li> </ol> <p>\u5c06\u8f93\u5165\u6cd5\u6362\u6210\u62fc\u97f3\uff08\u6216\u4e94\u7b14\uff09\u8f93\u5165\uff1a</p> <p></p> <p></p> <ol> <li>\u8bbe\u7f6e\uff0c\u533a\u57df\u548c\u8bed\u8a00\uff0c<code>+</code>(\u8f93\u5165\u6e90\u5904)\uff0c</li> <li><code>\u6c49\u8bed</code></li> <li>\u9009\u4e2d<code>\u6c49\u8bed (Intelligent Pinyin)</code>(\u6216\u5176\u4ed6)\uff0c<code>\u6dfb\u52a0</code></li> </ol> <p>\uff08\u5c06\u5176\u4f59\u8f93\u5165\u6e90\u53ef\u5220\u9664\uff09</p>"},{"location":"zh/%E7%B3%BB%E7%BB%9F%26%E7%8E%AF%E5%A2%83/ubuntu/#5","title":"5","text":"<p>\u5b89\u88c5cmake</p> <p>(8\u6761\u6d88\u606f) ubuntu\u5b89\u88c5cmake\u7684\u4e09\u79cd\u65b9\u6cd5\uff08\u8d85\u65b9\u4fbf\uff01\uff09_Man_1man\u7684\u535a\u5ba2-CSDN\u535a\u5ba2</p> <p>\u4f7f\u7528\u7b2c\u4e8c\u79cd\u65b9\u6cd5\uff0c\u5e76\u4e14\u5728Download | CMake\u91cc\u9009\u62e9<code>Source distributions:</code>\u4e0b\u7684\u538b\u7f29\u5305\u4e0b\u8f7d</p>"},{"location":"zh/%E7%B3%BB%E7%BB%9F%26%E7%8E%AF%E5%A2%83/ubuntu/#6","title":"6","text":"<p>\u5b89\u88c5clion\u3001pycharm\u7b49\uff1a</p> <p>\u5b89\u88c5\u5230\u4e3b\u76ee\u5f55\u4e2d\uff08\u5efa\u8bae\uff09</p> <ol> <li> <p>\u79fb\u52a8\u538b\u7f29\u5305\u5230\u4e3b\u76ee\u5f55\uff0c\u5e76\u76f4\u63a5\u89e3\u538b</p> <pre><code>tar -zxvf xxx.tar.gz\n</code></pre> </li> <li> <p>\u8fdb\u5165 <code>xxx/bin</code> \u6587\u4ef6\u5939\uff0c\u8fd0\u884c <code>xxx.sh</code>\u6587\u4ef6</p> <pre><code>sh xxx.sh \n</code></pre> </li> <li> <p></p> <p>\u5de6\u4e0b\u89d2\u8bbe\u7f6e\u56fe\u6807\uff0c<code>Create Desktop Entry...</code>\uff0c</p> <p>\u5728\u5168\u90e8\u5e94\u7528\u7a0b\u5e8f\u4e2d\u4f1a\u51fa\u73b0ide\u7684\u56fe\u6807/\u5feb\u6377\u65b9\u5f0f</p> </li> <li> <p>\uff08\u53ef\u9009\uff09\u5173\u95ed\u539f\u672c\u6253\u5361\u7684ide\uff0c\u4ece\u5168\u90e8\u5e94\u7528\u7a0b\u5e8f\u4e2d\u91cd\u65b0\u6253\u5361\uff0c\u5728\u4efb\u52a1\u680f\u4e2d\u53f3\u952e\uff0c\u6dfb\u52a0\u5230\u6536\u85cf\u5939</p> </li> </ol>"},{"location":"zh/%E7%B3%BB%E7%BB%9F%26%E7%8E%AF%E5%A2%83/ubuntu/#7","title":"7","text":"<p>\u78c1\u76d8\u6269\u5bb9\uff1a</p> <p>Ubuntu\u7a7a\u95f4\u4e0d\u8db3\uff0c\u5982\u4f55\u6269\u5bb9 - \u77e5\u4e4e (zhihu.com)</p>"},{"location":"zh/%E7%B3%BB%E7%BB%9F%26%E7%8E%AF%E5%A2%83/ubuntu/#8","title":"8","text":"<p>\u5b89\u88c5\u5e76\u4f7f\u7528 <code>clash for windows</code> linux \u7aef</p> <p>Linux/ubuntu\u4e0b\u5b9e\u73b0\u79d1\u5b66\u4e0a\u7f51\u4f7f\u7528 clash for windows \u8be6\u7ec6\u6b65\u9aa4|\u7ffb\u5899|vpn|v2ray (cfmem.com)</p> <p>(Linux\u7aef\u6ca1\u6709 <code>System proxy</code>\u9009\u9879)</p> <p>\u8bbe\u7f6e\uff0c<code>\u7f51\u7edc</code>\uff0c<code>\u7f51\u7edc\u4ee3\u7406</code>\uff0c<code>\u624b\u52a8</code>\uff0c\u586b\u5199<code>HTTP\u4ee3\u7406</code>\u548c<code>HTTPS\u4ee3\u7406</code>(\u5de6<code>127.0.0.1</code>\uff0c\u53f3<code>7890</code>)</p> <p></p> <p>\u53ef\u8bbe\u7f6e\u5f00\u673a\u542f\u52a8 <code>start with linux</code> \u548c\u9759\u9ed8\u5f00\u542f(\u4e0d\u5e94\u7528\u754c\u9762\uff0c\u53ea\u540e\u53f0\u8fd0\u884c) <code>silent start</code></p>"},{"location":"zh/%E7%B3%BB%E7%BB%9F%26%E7%8E%AF%E5%A2%83/ubuntu/#9","title":"9","text":"<p>\u5148\u8fdb\u89c6\u89c9</p> <p>Ubuntu \u4e0b\uff0c\u5982\u679c\u8981\u5728 <code>.sh</code> \u811a\u672c\u4e2d\u4f7f\u7528 <code>sudo</code> \u547d\u4ee4\uff0c\u53ef\u4ee5\u4f7f\u7528 <code>echo</code> \u6765\u81ea\u52a8\u8f93\u5165\u5bc6\u7801\uff0c\u5982</p> <pre><code>echo \"1111\" | sudo -S bash ./scripts/install_udev_rules.sh\necho \"1111\" | sudo -S udevadm control --reload-rules &amp;&amp; echo \"1111\" | sudo -S udevadm trigger\n</code></pre>"},{"location":"zh/%E7%B3%BB%E7%BB%9F%26%E7%8E%AF%E5%A2%83/ubuntu/#10","title":"10","text":"<p>ubuntu \u5b89\u88c5\u65b0\u7248\u672c\u7684 python</p> <p>\u7531\u4e8e yolov8 \u597d\u50cf\u8981\u6c42 3.8 \u4ee5\u4e0a\u7684 python \uff0c\u800c ubuntu18.04 \u81ea\u5e26\u7684 python3 \u662f 3.6.9 \u7684\uff0c\u8fd0\u884c\u547d\u4ee4</p> <pre><code>sudo apt install python3\n</code></pre> <p>\u8fd8\u663e\u793a</p> <pre><code>python3 \u5df2\u7ecf\u662f\u6700\u65b0\u7248 (3.6.7-1~18.04)\u3002\n</code></pre> <p>Ubuntu 18.04 Python 3.9 \u6e90\u7801\u7f16\u8bd1\u5b89\u88c5_ubuntu18.04\u6e90\u7801\u5b89\u88c5python-CSDN\u535a\u5ba2</p> <p>\u6309\u7167\u8fd9\u7bc7\u6587\u7ae0\uff0c\u5148\u4e0b\u8f7d <code>.tgz</code> \u6587\u4ef6</p> <p>\u53ef\u4ee5\u5728 \u534e\u4e3a\u6e90 \u4e2d\u4e0b\u8f7d</p> <p>Index of python-local (huaweicloud.com)</p> <p>\u7136\u540e</p> <pre><code>tar -tvf Python-3.10.13.tgz\ntar -zxvf Python-3.10.13.tgz\ncd Python-3.10.13\n./configure\nsudo make install\n</code></pre> <p><code>make</code> \u597d\u4e4b\u540e\uff0c\u867d\u7136\u4f1a\u663e\u793a</p> <pre><code>WARNING: Running pip as the 'root' user can result in broken permissions and conflicting behaviour with the system package manager. It is recommended to use a virtual environment instead: https://pip.pypa.io/warnings/venv\n</code></pre> <p>\u4f46\u5176\u5b9e\u5df2\u7ecf\u5b89\u88c5\u597d\u4e86\uff0c</p> <p>\u6b64\u65f6\u8fd0\u884c <code>python3</code> \u4ecd\u4f1a\u8fd0\u884c\u81ea\u5e26\u7684 python3.6.9\uff0c</p> <p>\u8fd0\u884c\u65b0\u5b89\u88c5\u7684 python3.10.13 \u9700\u8981\u8fd0\u884c</p> <pre><code>python3.10\n</code></pre> <p>\u7684\u547d\u4ee4\uff0c</p> <p>pip \u4e5f\u662f\u7c7b\u4f3c</p> <pre><code>pip3.10\n</code></pre> <p>\u5b89\u88c5\u5b8c\u4e4b\u540e\u8fd8\u8bb0\u5f97\u9700\u8981\u6362\u6e90</p>"},{"location":"zh/%E7%B3%BB%E7%BB%9F%26%E7%8E%AF%E5%A2%83/ubuntu/#11","title":"11","text":"<pre><code>ImportError: No module named '_ctypes'\n</code></pre> <p>\u65b0\u88c5\u7684 python3.10 \u5728\u88c5\u597d\u73af\u5883\u4e4b\u540e\u5c1d\u8bd5\u8fd0\u884c yolov8 \uff0c\u7136\u540e\u663e\u793a\u4e86\u4e0a\u9762\u7684\u62a5\u9519\u4fe1\u606f\uff0c\u5728\u7f51\u4e0a\u67e5\u4e86\u4e00\u4e0b\uff0c\u8fd9\u597d\u50cf\u662f python \u5185\u7f6e\u7684\u6a21\u5757\uff0c\u6240\u4ee5\u6211\u8ba4\u4e3a\u662f python \u5728\u5b89\u88c5\u65f6\u6ca1\u5b89\u88c5\u597d\uff0c</p> <p>\u7136\u540e\u53c2\u8003\u8fd9\u7bc7\u8ba8\u8bba</p> <p>python - Python3: ImportError: No module named '_ctypes' when using Value from module multiprocessing - Stack Overflow</p> <p>\u7684\u8fd9\u4e2a\u56de\u7b54\uff0c\u5b89\u88c5\u4e00\u4e0b <code>libffi-dev</code> \u5c31\u53ef\u4ee5</p> <pre><code>sudo apt install libffi-dev\n</code></pre> <p>\u4f46\u662f\u6211\u5b89\u88c5\u597d\u4e4b\u540e\u8fd0\u884c\u8fd8\u662f\u6709\u8fd9\u4e2a\u62a5\u9519\uff0c\u7136\u540e\u6211\u91cd\u65b0\u8fd0\u884c\u547d\u4ee4</p> <pre><code>./configure\nsudo make install\n</code></pre> <p>\u91cd\u65b0\u5b89\u88c5\u4e86\u4e00\u4e0b python3.10 \uff0c\u518d\u6b21\u53bb\u8fd0\u884c yolov8 \uff0c\u8fd9\u4e2a\u62a5\u9519\u4fe1\u606f\u6d88\u5931\u4e86</p>"},{"location":"zh/%E7%B3%BB%E7%BB%9F%26%E7%8E%AF%E5%A2%83/vim/","title":"Vim","text":"<p> \u7ea6 955 \u4e2a\u5b57  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 3 \u5206\u949f</p>"},{"location":"zh/%E7%B3%BB%E7%BB%9F%26%E7%8E%AF%E5%A2%83/vim/#1","title":"1","text":"<p>\u6700\u5f3aVim\u65b0\u624b\u6307\u5357\uff0c\u624b\u628a\u624b\u6559\u4f60\u6253\u9020\u53ea\u5c5e\u4e8e\u81ea\u5df1\u7684\u4ee3\u7801\u7f16\u8f91\u5668\uff01_\u54d4\u54e9\u54d4\u54e9_bilibili</p> <p>\u4e09\u4e2a\u4e3b\u8981(\u5e38\u7528)\u6a21\u5f0f\uff1a</p> <ul> <li>\u666e\u901a\u6a21\u5f0f(\u9ed8\u8ba4\u6a21\u5f0f)</li> <li>\u8f93\u5165\u6a21\u5f0f</li> <li>\u547d\u4ee4\u884c\u6a21\u5f0f</li> </ul> <p>\u666e\u901a\u6a21\u5f0f\u8fdb\u5165\u8f93\u5165\u6a21\u5f0f\uff0c\u6309 <code>i</code> \u952e\uff0c\u4ece\u8f93\u5165\u6a21\u5f0f\u9000\u51fa\uff0c\u6309 <code>Esc</code> \u952e</p> <p>\u5176\u4ed6\u8fdb\u5165\u8f93\u5165\u6a21\u5f0f\u7684\u65b9\u5f0f</p> <p>(9\u6761\u6d88\u606f) vim \u6587\u672c\u7f16\u8f91\u5668\u7684\u8f93\u5165\u6a21\u5f0f i\u3001a\u3001o\u3001 s\u3001 I\u3001 A\u3001 O\u3001 S \u533a\u522b_vim s\u662f\u4ec0\u4e48_\u4e91\u5c71\u5c0f\u5c0f\u5b50\u7684\u535a\u5ba2-CSDN\u535a\u5ba2</p> <p>\u666e\u901a\u6a21\u5f0f\u8fdb\u5165\u547d\u4ee4\u884c\u6a21\u5f0f\uff0c\u6309 <code>:</code> \u952e\uff0c\u9000\u51fa\u547d\u4ee4\u884c\u6a21\u5f0f\uff0c\u6309 <code>Esc</code> \u952e</p> <p>\u547d\u4ee4\u884c\u6a21\u5f0f\u5e38\u7528\u547d\u4ee4\uff1a</p> <ul> <li>\u6b63\u5e38\u9000\u51fa\uff1a</li> </ul> <ul> <li><code>:q</code></li> </ul> <p>\u6216</p> <ul> <li><code>:quit</code></li> </ul> <p>( <code>q</code> \u4e3a <code>quit</code> \u7684\u7f29\u5199)</p> <ul> <li>\u4fdd\u5b58\uff1a</li> </ul> <ul> <li><code>:w</code></li> </ul> <p>\u4fdd\u5b58\u5e76\u9000\u51fa\uff1a</p> <ul> <li><code>:wq</code></li> </ul> <ul> <li>\u67e5\u770b\u5e2e\u52a9\uff1a</li> </ul> <ul> <li><code>:h</code></li> </ul> <p>\u6216</p> <ul> <li><code>:help</code></li> </ul> <p>\u4f8b\u5982\uff0c\u67e5\u770b\u9000\u51fa\u7684\u9009\u9879\uff1a</p> <p><code>:h :q</code></p> <p>\u666e\u901a\u6a21\u5f0f\u5e38\u7528\u64cd\u4f5c\uff1a</p> <ul> <li>\u79fb\u52a8</li> </ul> <ul> <li>\u8f93\u5165 \u6570\u5b57\u952e + H J K L\uff0c\u5411\u5bf9\u5e94\u65b9\u5411\u79fb\u52a8x\u683c/\u884c\uff0c\u5982 4+J \u5411\u4e0b\u79fb\u52a84\u884c</li> <li>W (\u5bf9\u5e94word) \u79fb\u52a8\u5230\u4e0b\u4e00\u4e2a\u5355\u8bcd\u7684\u9996\u5b57\u6bcd\uff0cB (beginning) \u79fb\u52a8\u5230\u672c\u5355\u8bcd(\u6216\u4e0a\u4e00\u4e2a\u5355\u8bcd)\u7684\u9996\u5b57\u6bcd</li> <li>F (find)  + \u4e00\u4e2a\u5b57\u6bcd\uff0c\u8df3\u8f6c\u5230\u4e0b\u4e00\u4e2a\u6700\u8fd1\u7684\u5bf9\u5e94\u5b57\u6bcd\uff0c\u5982 F+T \u8df3\u8f6c\u5230\u4e0b\u4e00\u4e2a\u6700\u8fd1\u7684 <code>t</code> </li> <li>Ctrl+U (PgUp) Ctrl+D (PgDn)\uff0c\u5411\u4e0a\u5411\u4e0b\u7ffb\u9875</li> <li>G+G \u79fb\u52a8\u5230\u6587\u672c\u5f00\u5934\uff0cShift+G \u79fb\u52a8\u5230\u6587\u672c\u672b\u5c3e</li> </ul> <ul> <li>\u7f16\u8f91</li> </ul> <ul> <li>\u6309 Y \u952e\u590d\u5236(yank\uff0c\u62c9)\uff0c\u53ef\u548c\u5176\u4ed6\u7ec4\u5408\uff0c\u5982\uff1a<ul> <li>Y+A+W (yank + all + word)\u590d\u5236\u5149\u6807\u6240\u5728\u7684\u6574\u4e2a\u5355\u8bcd</li> <li>Y+W \u6216 Y+B (\u542b\u5f53\u524d\u5149\u6807\u5b57\u6bcd)\u590d\u5236\u5230\u5f53\u524d\u5355\u8bcd\u7684\u5c3e/\u9996\u5b57\u6bcd</li> <li>Y+5+H \u6216 Y+5+L (\u542b\u5f53\u524d\u5149\u6807\u5b57\u6bcd)\u5411\u5de6/\u53f3\u590d\u52365\u683c\u7684\u6587\u672c\uff0c\u5982\u679c\u4e0d\u8f93\u6570\u5b57\u952e\u5219\u53ea\u590d\u5236\u5f53\u524d\u683c\u7684\u5b57\u6bcd</li> <li>Y+3+J \u6216 Y+3+K (\u542b\u5f53\u524d\u884c)\u5411\u4e0b/\u4e0a\u590d\u52363\u884c\u7684\u6587\u672c\uff0c\u5982\u679c\u4e0d\u8f93\u6570\u5b57\u952e\u5219\u53ea\u590d\u5236\u5f53\u524d\u884c</li> <li>Y+F+H \u590d\u5236\u5230\u4e0b\u4e00\u4e2a\u6700\u8fd1\u7684 <code>h</code> \u4e4b\u95f4\u7684\u6587\u672c</li> </ul> </li> <li>\u6309 P \u952e(paste)\u5728\u5149\u6807\u53f3\u4fa7\u7c98\u8d34</li> <li>U \u952e(undo)\u64a4\u9500</li> <li>C \u952e(change)\u4fee\u6539\uff0c\u9009\u4e2d\u90e8\u5206\u5185\u5bb9\u5220\u9664(\u526a\u5207)\u5e76\u8fdb\u5165\u8f93\u5165\u6a21\u5f0f\uff0c\u9009\u4e2d\u65b9\u6cd5\u4e0e \u590d\u5236 \u64cd\u4f5c\u7c7b\u4f3c\uff1a<ul> <li>C+A+W (change all word) \u5220\u9664\u5f53\u524d\u5355\u8bcd\u5e76\u8fdb\u5165\u8f93\u5165\u6a21\u5f0f\uff0c......</li> </ul> </li> </ul>"},{"location":"zh/%E7%B3%BB%E7%BB%9F%26%E7%8E%AF%E5%A2%83/vim/#2","title":"2","text":"<p>\u53ef\u53c2\u8003\u7684\u4f7f\u7528\u624b\u518c</p> <p>oeasy-vim-tutorial/markdown/01-49420-\u5b58\u6d3b\u4e0b\u6765.sy.md at main \u00b7 overmind1980/oeasy-vim-tutorial (github.com)</p>"},{"location":"zh/%E7%B3%BB%E7%BB%9F%26%E7%8E%AF%E5%A2%83/vim/#3","title":"3","text":"<p>Ctrl+C \u4e5f\u53ef\u4ee5\u4ece\u63d2\u5165\u6a21\u5f0f\u9000\u51fa\u5230\u666e\u901a\u6a21\u5f0f</p> <p>\u53e6\u5b58\u4e3a\u547d\u4ee4\u4e3a <code>:sav[eas] {\u6587\u4ef6\u540d}</code> </p> <p><code>:w</code> \u547d\u4ee4\u7684\u4f7f\u7528\u6280\u5de7\uff1a</p> <ul> <li>\u6253\u5f00\u5df2\u6709\u6587\u4ef6\u8fdb\u884c\u7f16\u8f91\uff0c\u76f4\u63a5\u8f93\u5165 <code>:w</code> \u547d\u4ee4\u7b49\u4e8e\u4fdd\u5b58</li> <li>\u5982\u679c\u5728\u547d\u4ee4\u884c\u4e2d\u76f4\u63a5\u8f93\u5165 <code>vim</code> \u8fdb\u884c\u7f16\u8f91(\u6253\u5f00\u4e00\u4e2a\u4e34\u65f6\u6587\u4ef6\u8fdb\u884c\u7f16\u8f91)\uff0c <code>:w</code> \u53ef\u4ee5\u6709\u4e24\u4e2a\u7528\u5904\uff1a<ol> <li><code>:w {\u6587\u4ef6\u540d}</code> \u5c06\u8f93\u5165\u5185\u5bb9\u5b58\u50a8\u4e3a\u67d0\u4e2a\u65b0\u6587\u4ef6(\u5982\u679c\u4e3a\u5df2\u6709\u6587\u4ef6\u4f1a\u63d0\u793a\u5df2\u5b58\u5728\uff0c\u5982\u679c\u8981\u5f3a\u884c\u8986\u76d6\u53ef\u4ee5\u52a0\u4e0a <code>!</code> )</li> <li><code>:w &gt;&gt; {\u6587\u4ef6\u540d}</code> \u5c06\u8f93\u5165\u5185\u5bb9\u8ffd\u52a0\u5230\u5df2\u5b58\u5728\u6587\u4ef6\u7684\u672b\u5c3e( <code>&gt;&gt;</code> \u8868\u793a\u8ffd\u52a0)</li> </ol> </li> </ul> <p>Shift+I \u548c Shift+A \u5206\u522b\u4e3a\u5728\u884c\u9996/\u672b\u63d2\u5165\uff0cO \u548c Shift+O \u5206\u522b\u4e3a\u5728\u5f53\u524d\u884c\u4e4b\u4e0b/\u4e0a\u63d2\u5165\u65b0\u884c\u5e76\u8f93\u5165</p> <p>. \u4e3a\u91cd\u590d\u6700\u65b0\u7684\u64cd\u4f5c\uff0cU \u548c Ctrl+R \u5206\u522b\u548c\u64a4\u9500/\u6062\u590d\u64a4\u9500</p> <p>\u63d2\u5165\u6a21\u5f0f\u4e0b\u6309 Ctrl+O \u952e\u53ef\u4ee5\u8fdb\u5165 \u63d2\u5165\u666e\u901a\u6a21\u5f0f \uff0c\u8fdb\u884c\u4e00\u6b21\u666e\u901a\u7684\u547d\u4ee4\u7136\u540e\u56de\u5230\u63d2\u5165\u6a21\u5f0f</p> <p>Shift+4 \u548c Shift+6 \u5206\u522b\u4e3a\u8df3\u5230\u884c\u672b/\u9996</p> <p>E \u952e\u662f\u5230\u5355\u8bcd\u5c3e\u5b57\u6bcd\uff0cShift \u952e \u52a0 W E B \u53ef\u4ee5\u8df3\u5927\u8bcd(\u53ea\u6309\u7a7a\u683c\u6362\u884c\u7b97\u8bcd)</p> <p>F \u548c Shift+F \u5206\u522b\u4e3a\u5411\u540e/\u524d\u67e5\u627e\u5b57\u6bcd\uff0c\u67e5\u627e\u540e\u6309 , \u53ef\u4ee5\u53cd\u65b9\u5411\u67e5\u627e/\u79fb\u52a8</p> <p>\u9ed8\u8ba4\u914d\u7f6e\u4e0b vim \u4e2d ; \u952e\u662f\u76f4\u63a5\u6620\u5c04 : \u952e\u7684(\u5373\u5982\u679c\u8981\u8fdb\u5165\u547d\u4ee4\u884c\u53ef\u4ee5\u76f4\u63a5\u6309 ; \u800c\u4e0d\u9700\u8981\u6309 Shift )</p> <p>Shift+= \u548c - \u5206\u522b\u4e3a\u8df3\u5230\u4e0b/\u4e0a\u4e00\u884c\u9996</p> <p>\u4e24\u4e2a\u4f7f\u7528\u6280\u5de7\uff1a</p> <ol> <li>G+G+=+Shift+G \u53ef\u4ee5\u5168\u6587\u81ea\u52a8(\u8c03\u6574)\u7f29\u8fdb</li> <li>\u6570\u5b57 \u52a0 Shift+G \u53ef\u4ee5\u8df3\u8f6c\u5230\u6307\u5b9a\u884c\u53f7(\u5bf9\u4e8e\u62a5\u9519\u975e\u5e38\u6709\u7528)</li> </ol>"},{"location":"","title":"Welcome to My Pamphlet","text":"<p> \u7ea6 4 \u4e2a\u5b57 </p> <p></p>"},{"location":"blog/","title":"Blog","text":"<p> \u7ea6 5 \u4e2a\u5b57 </p> <p>Enter the Blog</p>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part1/","title":"CS61A Part 1","text":"<p> \u7ea6 19148 \u4e2a\u5b57  1099 \u884c\u4ee3\u7801  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 78 \u5206\u949f</p> <p>Info</p> <p>CS 61A Fall 2020 (berkeley.edu)</p> <p>Tip</p> <p>\u505a\u5b8c\u7684\u4f5c\u4e1a\u7684\u4ee3\u7801:</p> <ul> <li>https://github.com/RonaldLN/CS-61A-Fall-2020</li> <li>https://gitee.com/ronald-luo/CS-61A-Fall-2020</li> </ul> \u76ee\u5f55 Part 1 Part 2 Part 3 Lab 00 Lecture 18 Objects Lecture 31 Declarative Programming Lecture 2 Functions Lecture 18 Q&amp;A Lecture 32 Tables Lecture 2 Q&amp;A HW 04 Lecture 32 Q&amp;A HW 01 Lecture 19 Inheritance Lab 12 Homework 1 Hints Lecture 19 Q&amp;A Lecture 33 Aggregation Lecture 3 Control Lab 07 Lecture 33 Q&amp;A Lecture 3 Q&amp;A Project Ants Lecture 34 Database Lecture 4 Higher-Order Functions Lecture 20 Representation Lecture 34 Q&amp;A Project Hog Lecture 20 Q&amp;A HW 09 Lecture 5 Environments Lecture 21 Composition Lecture 35 Tail Calls Lecture 6 Design HW 05 Lab 13 Lecture 6 Q&amp;A Lecture 22 Efficiency Lecture 36 Macros Lecture 7 Function Examples Lab 08 Lab 14 Lecture 7 Q&amp;A Lecture 23 Decomposition Lecture 36 Q&amp;A HW 02 Lecture 23 Q&amp;A Lecture 37 Final Examples Lecture 10 Containers Lecture 24 Data Example Lecture 37 Q&amp;A Lecture 10 Q&amp;A Lecture 24 Q&amp;A Lecture 38 Conclusion Lab 04 Lab 09 Lecture 11 Data Abstraction Lecture 25 Users Lecture 11 Q&amp;A Lecture 25 Q&amp;A Project Cats Lecture 26 Ethical AI &amp; Data Lecture 12 Trees Lecture 27 Scheme Lecture 12 Q&amp;A Lecture 27  Q&amp;A Lab 05 Lab 10 Lecture 13 Q&amp;A HW 06 Lecture 14 Circuits Lecture 28 Exception Lecture 14 Q&amp;A Lecture 28 Q&amp;A Lecture 15 Mutable Values Lecture 29 Calculater Lecture 15 Q&amp;A Lecture 29 Q&amp;A HW 03 HW 07 Homework 3 Hints Lab 11 Lecture 16 Mutable Functions Project Scheme Lecture 16 Q&amp;A Lab 06 Lecture 17 Iterations Lecture 17 Q&amp;A"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part1/#lab-00","title":"Lab 00","text":""},{"location":"Notes%20of%20Courses/CS61A/CS61A_part1/#1","title":"1","text":"<p>\u8fd0\u884chw\u6216\u8005lab\u4efb\u52a1\u7684\u5bf9\u5e94\u547d\u4ee4\u65f6\uff0c\u90fd\u52a0\u4e0a <code>--local</code> \uff0c\u5c31\u53ea\u5728\u672c\u5730\u8fd0\u884c\uff0c\u4e0d\u4f1a\u4e0a\u4f20\u7136\u540e\u8981\u6c42\u8f93\u5165\u90ae\u7bb1\uff0c\u5982</p> <pre><code>python ok [-q xxx] [-u] --local\n</code></pre>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part1/#lecture-2-functions","title":"Lecture 2 Functions","text":""},{"location":"Notes%20of%20Courses/CS61A/CS61A_part1/#1_1","title":"1","text":"<p>\u53d8\u91cf\u53ef\u4ee5 \u201c\u6307\u5411\u201d \u4e00\u4e2a\u51fd\u6570</p> <p></p>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part1/#2","title":"2","text":"<p>cs61a\u4e2d\u4f7f\u7528\u7684\u53ef\u4ee5\u663e\u793apython\u7a0b\u5e8f\u4e2d environment \u3001 frame \u7b49\u4fe1\u606f\u7684\u5728\u7ebf\u7f51\u7ad9\uff1a</p> <p>Online Python Tutor - Composing Programs - Python 3</p> <p>John DeNero \u7f16\u5199\u7684cs61a\u7684\u914d\u5957\u82f1\u6587\u539f\u7248\u6559\u6750\uff1a</p> <p>Composing Programs</p> <p>\u5728github\u4e0a\u53d1\u73b0\u7684\u5176\u5bf9\u5e94\u4ed3\u5e93\uff1a</p> <p>DestructHub/composing-programs: Annotation and code about SICP Python (github.com)</p> <p>github\u4e0a\u53d1\u73b0\u7684\u975e\u5b98\u65b9\u7684\u8fd8\u5728\u7ffb\u8bd1(23/7/21\u53d1\u73b0)\u7684\u4e2d\u6587\u7248\u7684\u4ed3\u5e93\uff1a</p> <p>csfive/composing-programs-zh: \ud83d\udea7 CS61A \u6559\u6750\u300aComposing Programs\u300b\u5373\u300a\u8ba1\u7b97\u673a\u7a0b\u5e8f\u7684\u6784\u9020\u4e0e\u89e3\u91ca\u300bPython \u7248\u672c\u7684\u4e2d\u6587\u7ffb\u8bd1 (github.com)</p> <p>\u5176\u5bf9\u5e94\u7f51\u9875\uff1a</p> <p>CSfive | CSfive</p>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part1/#3","title":"3","text":"<p>\u8c03\u7528\u51fd\u6570\u65f6\uff0c\u4f1a\u521b\u5efa\u4e00\u4e2a\u65b0\u7684frame\uff0c\u4e14frame\u7684\u540d\u5b57\u4e3a\u51fd\u6570\u672c\u8eab\u7684\u540d\u5b57(\u5373\u521b\u5efa\u65f6\u7684\u540d\u5b57 (\u5982\u679c\u662flambda\u533f\u540d\u51fd\u6570\u5219 \u6ca1\u6709\u540d\u5b57/\u540d\u5b57\u4e3alambda))\uff0c</p> <p></p> <p>\u5373\u5982\u679c\u7528\u67d0\u4e2a\u53d8\u91cf\u6307\u5411\u4e86\u51fd\u6570\uff0c\u5728\u7528\u53d8\u91cf\u8c03\u7528\u51fd\u6570\u7684\u65f6\uff0c\u521b\u5efa\u7684frame\u540d\u5b57\u4ecd\u4e3a\u539f\u51fd\u6570\u540d</p> <p></p>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part1/#4","title":"4","text":"<p>python\u4e2d\uff0c\u8d4b\u503c\u53ef\u4ee5\u540c\u65f6\u5bf9\u4e24\u4e2a\u53d8\u91cf\u8fdb\u884c\uff0c\u4f1a\u4f7f\u4ea4\u6362\u53d8\u91cf\u7684\u503c\u7b49\u64cd\u4f5c\u66f4\u65b9\u4fbf\uff0c\u5982</p> <pre><code>a, b = b, a\n</code></pre>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part1/#lecture-2-qa","title":"Lecture 2 Q&amp;A","text":""},{"location":"Notes%20of%20Courses/CS61A/CS61A_part1/#1_2","title":"1","text":"<p>\u5728\u54ea\u4e2aframe\u4e2d\u5b9a\u4e49(define)\u7684\u51fd\u6570\uff0c\u5176parent\u5c31\u662f\u54ea\u4e2aframe\uff0c\u9664\u4e86Global frame\u5176\u4ed6\u90fd\u6709parent</p>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part1/#hw-01","title":"HW 01","text":""},{"location":"Notes%20of%20Courses/CS61A/CS61A_part1/#1_3","title":"1","text":"<p>Q3\uff0c\u53ef\u4ee5\u7528\u603b\u7684\u51cf\u53bb\u6700\u5927\u7684\uff0c\u5f97\u5230\u6700\u5c0f\u7684\u4e24\u4e2a</p> code <pre><code>def two_of_three(x, y, z):\n    return x * x + y * y + z * z - max(x, y, z) ** 2\n</code></pre>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part1/#2_1","title":"2","text":"<p>Q5</p> <pre><code>def with_if_function():\n    \"\"\"\n    &gt;&gt;&gt; result = with_if_function()\n    42\n    47\n    &gt;&gt;&gt; print(result)\n    None\n    \"\"\"\n    return if_function(cond(), true_func(), false_func())\n</code></pre> <p>\u7531\u4e8e\u5728 <code>return</code> \u8bed\u53e5\u4e2d\uff0c\u586b\u5165\u7684\u65f6\u8c03\u7528\u7684\u51fd\u6570( <code>true_func()</code> \u548c <code>false_func()</code> )\uff0c\u8fd0\u884c\u7684\u987a\u5e8f\u662f \u5148\u8fdb\u884c <code>true_func()</code> \u548c <code>false_func()</code> \u4e24\u4e2a\u51fd\u6570\u7684\u8c03\u7528\uff0c\u518d\u5c06\u4ed6\u4eec\u7684\u8fd4\u56de\u503c\u4f20\u9012\u7ed9 <code>if_function()</code> \u4e2d\uff0c\u6240\u4ee5(\u7531\u4e8e\u4e24\u4e2a\u51fd\u6570\u88ab\u8c03\u7528\u4e86) 42\u548c47\u90fd\u4f1a\u8f93\u51fa</p> <pre><code>def with_if_statement():\n    \"\"\"\n    &gt;&gt;&gt; result = with_if_statement()\n    47\n    &gt;&gt;&gt; print(result)\n    None\n    \"\"\"\n    if cond():\n        return true_func()\n    else:\n        return false_func()\n</code></pre> <p>\u800c\u5728\u8fd9\u4e2a\u51fd\u6570\u4e2d\uff0c\u5219\u53ea\u4f1a\u8c03\u7528 <code>true_func()</code> \u548c <code>false_func()</code> \u5176\u4e2d\u4e00\u4e2a\u51fd\u6570\uff0c\u56e0\u6b64\u53ea\u4f1a\u8f93\u51fa\u4e00\u4e2a\u6570\u5b57</p> code <pre><code>def if_function(condition, true_result, false_result):\n    \"\"\"Return true_result if condition is a true value, and\n    false_result otherwise.\n\n    &gt;&gt;&gt; if_function(True, 2, 3)\n    2\n    &gt;&gt;&gt; if_function(False, 2, 3)\n    3\n    &gt;&gt;&gt; if_function(3==2, 3+2, 3-2)\n    1\n    &gt;&gt;&gt; if_function(3&gt;2, 3+2, 3-2)\n    5\n    \"\"\"\n    if condition:\n        return true_result\n    else:\n        return false_result\n\n\ndef with_if_statement():\n    \"\"\"\n    &gt;&gt;&gt; result = with_if_statement()\n    47\n    &gt;&gt;&gt; print(result)\n    None\n    \"\"\"\n    if cond():\n        return true_func()\n    else:\n        return false_func()\n\n\ndef with_if_function():\n    \"\"\"\n    &gt;&gt;&gt; result = with_if_function()\n    42\n    47\n    &gt;&gt;&gt; print(result)\n    None\n    \"\"\"\n    return if_function(cond(), true_func(), false_func())\n\n\ndef cond():\n    \"*** YOUR CODE HERE ***\"\n    return False\n\ndef true_func():\n    \"*** YOUR CODE HERE ***\"\n    print(42)\n\n\ndef false_func():\n    \"*** YOUR CODE HERE ***\"\n    print(47)\n</code></pre>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part1/#homework-1-hints","title":"Homework 1 Hints","text":""},{"location":"Notes%20of%20Courses/CS61A/CS61A_part1/#1_4","title":"1","text":"<p>Q3 \u7684\u4e24\u79cd\u601d\u8def\uff1a</p> <ol> <li>\u5168\u90e8\u7684\u7ed3\u679c\u53d6\u6700\u5c0f</li> <li>\u5168\u90e8\u5e73\u65b9\u548c\u51cf\u53bb\u6700\u5927\u5e73\u65b9</li> </ol> <p></p>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part1/#lecture-3-control","title":"Lecture 3 Control","text":""},{"location":"Notes%20of%20Courses/CS61A/CS61A_part1/#1_5","title":"1","text":"<p><code>print()</code> \u53ef\u4ee5\u4f20\u5165\u591a\u4e2a\u53c2\u6570\uff0c\u6253\u5370\u65f6\u6bcf\u4e2a\u53c2\u6570\u4e4b\u95f4\u4f1a\u7a7a\u4e00\u4e2a\u7a7a\u683c</p>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part1/#2_2","title":"2","text":"<ul> <li> <p>\u5728 a\u51fd\u6570 \u53c2\u6570\u8c03\u7528\u7684\u4f4d\u7f6e\u586b\u5165 \u88ab\u8c03\u7528\u7684b\u51fd\u6570 \uff0c\u5b9e\u9645\u4e0a\u4f7f\u5148\u8fd0\u884c b\u51fd\u6570 \uff0c\u518d\u5c06b\u7684\u8fd4\u56de\u503c\u4f20\u5165 a\u51fd\u6570</p> </li> <li> <p><code>print()</code> \u7684\u8fd4\u56de\u503c\u662f <code>None</code> </p> </li> </ul> <p>\u8865\u5145\uff1a</p> <p></p>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part1/#3_1","title":"3","text":"<p>Quote</p> <p>An environment is a sequence of frames.</p> <ul> <li>The global frame alone</li> <li>A local, then the global frame</li> </ul> <p></p> <p></p> <p>\u53d8\u91cf\u540d\u5728\u67e5\u627e\u5bf9\u5e94\u7684\u503c\u7684\u65f6\u5019\uff0c\u4f1a\u4ece\u5f53\u524d\u7684 frame \u4f9d\u6b21\u5411\u4e0a(parent frame) \u67e5\u627e\u503c\uff0c\u5e76\u7ed1\u5b9a\u6700\u65e9\u627e\u5230\u7684\u503c\uff0c\u5982\u56fe\u4e2d\u7684 <code>square</code> \u5148\u5728f1\u4e2d\u67e5\u627e(\u5982\u679cf1\u6ca1\u6709\u518d\u5728Global frame\u4e2d\u67e5\u627e)\uff0c\u5e76\u7ed1\u5b9a\u4e864 (\u5982\u679cf1\u4e2d\u6ca1\u6709 <code>square</code> \u5bf9\u5e94\u7684\u503c\uff0c\u5219\u4f1a\u7ed1\u5b9a\u5230global frame\u4e2d\u7684func square)</p> <p>\u6b64\u5916\uff0c</p> <p>\u56fe\u4e2d\u4e5f\u53ef\u4ee5\u53d1\u73b0\uff0cframe\u7684parent\u662f\u6839\u636e\u4ee3\u7801\u7684\u7ed3\u6784\u6765\u786e\u5b9a\u7684\uff0c\u800c\u4e0d\u662f\u6839\u636e\u8c03\u7528\u7684\u5173\u7cfb\u6765\u786e\u5b9a\u7684\uff0c\u5982 \u7b2c\u4e00\u5f20\u56fe\u4e2d <code>square(square(3))</code> \u91cc\u9762\u548c\u5916\u9762\u7684 <code>square</code> \u7684 parent \u90fd\u662f global frame</p> <p>\u8ddf Lecture 2 Q&amp;A \u4e2d\u4e00\u6837</p>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part1/#4_1","title":"4","text":"<ul> <li> <p><code>bash     python -i xxx.py</code></p> <p>\u53ef\u4ee5\u5c06 <code>xxx.py</code> \u6587\u4ef6\u4e2d\u7684\u4ee3\u7801\u5f15\u5165\u547d\u4ee4\u884c\u6216\u8005\u7ec8\u7aef</p> </li> <li> <p>\u547d\u4ee4\u884c/\u7ec8\u7aef\u4e2d\u4f7f\u7528python\u65f6\uff0cCtrl+D <code>^D</code> \u53ef\u4ee5\u6e05\u7a7a\u754c\u9762</p> </li> </ul> <p></p> <ul> <li> <p><code>bash     python -m doctest [-v] xxx.py</code></p> <p>\u53ef\u4ee5\u8fd0\u884c <code>xxx.py</code> \u4e2d\u51fd\u6570\u8bf4\u660e\u8bed\u53e5\u90e8\u5206\u7684\u4ee3\u7801(\u7528\u4e8e\u6d4b\u8bd5\u51fd\u6570\u80fd\u5426\u8f93\u5165\u6b63\u786e\u9884\u671f\u7ed3\u679c)\uff0c\u5982\u679c\u62a5\u9519\u4f1a\u663e\u793a\u51fa\u62a5\u9519\u4fe1\u606f\uff0c\u5982\u679c\u4e0d\u62a5\u9519\u5219\u4e0d\u663e\u793a\u4fe1\u606f \u800c\u6b63\u5e38\u663e\u793a\u4e0b\u4e00\u884c(\u5982\u679c\u6b7b\u5faa\u73af\u5c31\u4e00\u76f4\u4e0d\u663e\u793a\u4e0b\u4e00\u884c)\uff0c</p> <p><code>-v</code> \u9009\u9879\u662f\u4e0d\u62a5\u9519\u4e5f\u80fd\u663e\u793a\u6bcf\u4e2a\u8f93\u5165\u7684\u6d4b\u8bd5\u7ed3\u679c\uff0c\u5982\u4e0a\u56fe</p> </li> </ul>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part1/#5","title":"5","text":"<p>\u771f\u503c\u4e3a\u5047\u7684\u503c\uff1a <code>False</code> , <code>0</code> , <code>''</code> , <code>None</code> \u7b49\u7b49</p> <p>\u5176\u4f59\u5176\u4ed6\u503c\u57fa\u672c\u4e0a\u90fd\u4e3a\u771f</p>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part1/#6","title":"6","text":"<p>\u8001\u5e08\u5199\u5206\u89e3\u8d28\u56e0\u6570\u7684\u601d\u8def\u503c\u5f97\u5b66\u4e60\uff1a</p> <p>\u5c06\u95ee\u9898\u5206\u89e3\u6210\u4e24\u6b65\uff1a</p> <ol> <li>\u4e00\u4e2a\u6570\u7684\u6700\u5c0f\u56e0\u6570(\u56e0\u4e3a\u8981\u6c42\u8981\u5347\u5e8f)</li> <li>\u518d\u5faa\u73af\u627e\u6700\u5c0f\u56e0\u6570\uff0c\u4ece\u800c\u83b7\u5f97\u5347\u5e8f\u7684\u5206\u89e3\u8d28\u56e0\u6570</li> </ol> <p>\u5e76\u4e14\u5c06\u627e\u6700\u5c0f\u7684\u56e0\u6570\u8fd9\u4e2a\u529f\u80fd\u5355\u72ec\u5199\u6210\u4e00\u4e2a\u51fd\u6570\uff0c\u8fd9\u6837\u770b\u8d77\u6765\u5c31\u5f88\u6e05\u6670</p> <pre><code>def prime_factors(n):\n    \"\"\"Print the prime factors of n in non-decreasing order.\n\n    &gt;&gt;&gt; prime_factors(8)\n    2\n    2\n    2\n    &gt;&gt;&gt; prime_factors(9)\n    3\n    3\n    &gt;&gt;&gt; prime_factors(10)\n    2\n    5\n    &gt;&gt;&gt; prime_factors(11)\n    11\n    &gt;&gt;&gt; prime_factors(12)\n    2\n    2\n    3\n    &gt;&gt;&gt; prime_factors(858)\n    2\n    3\n    11\n    13\n    \"\"\"\n    while n &gt; 1:\n        k = smallest_prime_factor(n)\n        n = n // k\n        print(k)\n\ndef smallest_prime_factor(n):\n    \"\"\"Return the smallest k &gt; 1 that evenly divides n.\"\"\"\n    k = 2\n    while n % k != 0:\n        k = k + 1\n    return k\n</code></pre>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part1/#lecture-3-qa","title":"Lecture 3 Q&amp;A","text":""},{"location":"Notes%20of%20Courses/CS61A/CS61A_part1/#1_6","title":"1","text":"<p>\u7531\u4e8e\u540c\u4e00\u4e2a\u51fd\u6570\u5185\u7684\u540c\u4e00\u4e2a\u53d8\u91cf\u540d\u5fc5\u987b\u6307\u5411\u540c\u4e00\u4e2a\u6846\u67b6\u4e0b\u7684\u4e1c\u897f\uff0c\u6240\u4ee5</p> <pre><code>x = 2\n\ndef f():\n    print(x)\n    x = 3\n    print(x)\n\nf()\n</code></pre> <p><code>x = 3</code> \u8fd9\u884c\u5df2\u7ecf\u5bf9local\u6846\u67b6\u4e0b\u7684x\u8d4b\u503c\uff0c\u6240\u4ee5 f \u51fd\u6570\u5185\u7684x\u5c31\u90fd\u53ea\u80fd\u7ed1\u5b9alocal\u6846\u67b6\u4e0b\u7684\u503c\uff0c\u4e0d\u80fd\u7ed1\u5b9a\u6bcd\u6846\u67b6\u4e0b\u7684\u503c</p> <p>\u800c\u7b2c\u4e00\u4e2a <code>print(x)</code> \u5728\u6267\u884c\u65f6\uff0c(local\u6846\u67b6\u4e0b\u7684)\u53d8\u91cfx\u8fd8\u5e76\u672a\u8d4b\u503c\uff0c\u6240\u4ee5\u4f1a\u62a5\u9519\uff0c</p> <p>\u5982\u679c\u53bb\u6389 <code>x = 3</code> \u90a3\u4e48\u7a0b\u5e8f\u5c31\u4e0d\u4f1a\u62a5\u9519</p> <p>Lecture 16\u4e2d\u4e5f\u8bf4\u5230\u4e86\u8fd9\u4e00\u70b9</p>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part1/#lecture-4-higher-order-functions","title":"Lecture 4 Higher-Order Functions","text":""},{"location":"Notes%20of%20Courses/CS61A/CS61A_part1/#1_7","title":"1","text":"<p>John\u63d0\u5230\u8bbe\u8ba1\u51fd\u6570\u65f6\u9700\u8981\u6ce8\u610f\u7684\u51e0\u70b9</p> <ul> <li>Give each function exactly one job</li> <li>Don't repeat yourself (DRY). Implement a process just once, but execute it many times.</li> <li>Define functions generally.</li> </ul> <ul> <li>\u786e\u4fdd\u6bcf\u4e2a\u51fd\u6570\u53ea\u505a\u4e00\u4e2a\u4e8b\u60c5\u3002</li> <li>\u907f\u514d\u91cd\u590d\u4ee3\u7801\uff08\u9075\u5faaDRY\u539f\u5219\uff09\u3002\u5c06\u4e00\u4e2a\u8fc7\u7a0b\u5b9e\u73b0\u4e00\u6b21\uff0c\u7136\u540e\u591a\u6b21\u6267\u884c\u5b83\u3002</li> <li>\u5b9a\u4e49\u901a\u7528\u7684\u51fd\u6570\u3002</li> </ul>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part1/#2_3","title":"2","text":"<p><code>assert</code> \u8bed\u53e5\uff0c\u5982\u679c <code>assert</code> \u4e4b\u540e\u8868\u8fbe\u5f0f\u7684\u503c\u4e3a\u5047\uff0c\u90a3\u4e48\u5c31\u4f1a\u62a5\u9519\uff0c\u5e76\u663e\u793a\u5bf9\u5e94\u7684\u4fe1\u606f\uff0c\u5982\u4e0a\u56fe</p>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part1/#3_2","title":"3","text":"<p>John\u6f14\u793a <code>def</code> \u521b\u5efa\u51fa\u6765\u7684\u51fd\u6570\u6709\u56fa\u6709\u7684\u540d\u5b57\uff0c\u800c <code>lambda</code> \u521b\u5efa\u51fa\u6765\u7684\u51fd\u6570\u6ca1\u6709</p> <p></p> <p></p>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part1/#4_2","title":"4","text":"<p><code>if</code> \u8bed\u53e5\u53ea\u4f1a\u6267\u884c <code>if</code> \u6216\u8005 <code>else</code> \u8bed\u53e5\u4e2d\u7684\u4e00\u4e2a\uff0c\u800c\u53e6\u4e00\u4e2a\u4e0d\u4f1a\u88ab\u6267\u884c\uff0c</p> <p>\u800c\u5982\u679c\u50cf\u4e0a\u56fe\u4e00\u6837\u5b9a\u4e49\u4e00\u4e2a\u7c7b\u4f3c\u4e8e <code>if</code> \u8bed\u53e5\u7684\u51fd\u6570\uff0c\u5e76\u628a\u8868\u8fbe\u5f0f\u653e\u5728\u53c2\u6570\u4e2d\uff0c\u90a3\u4e48\u4e24\u4e2a\u8868\u8fbe\u5f0f\u90fd\u4f1a\u88ab==\u6267\u884c==\uff0c\u800c\u4f20\u5165\u7684\u662f\u8868\u8fbe\u5f0f\u7684\u7ed3\u679c/\u5bf9\u5e94\u7684\u503c</p>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part1/#5_1","title":"5","text":"<p><code>and</code> \u548c <code>or</code> \u8bed\u53e5\uff0c</p> <p><code>and</code> / <code>or</code> \u8bed\u53e5\u4e2d\uff0c\u5982\u679c\u9760\u524d\u7684\u8868\u8fbe\u5f0f\u7ed3\u679c\u8ba1\u7b97\u4e3a\u5047/\u771f\uff0c\u90a3\u4e48\u5c31\u4f1a\u8fd4\u56de\u8fd9\u4e2a\u7ed3\u679c\uff0c\u800c\u9760\u540e\u7684\u8868\u8fbe\u5f0f\u5c31\u4e0d\u518d\u4f1a\u6267\u884c\uff0c\u800c\u5982\u679c\u6240\u6709\u8868\u8fbe\u5f0f\u5168\u5bf9\u5e94\u4e3a\u771f/\u5047\uff0c\u90a3\u4e48\u5c31\u4f1a\u8fd4\u56de\u6700\u540e\u8868\u8fbe\u5f0f\u7684\u7ed3\u679c</p>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part1/#6_1","title":"6","text":"<p><code>... if ... else ...</code> \u8bed\u53e5(\u611f\u89c9\u5f88\u50cfc\u8bed\u8a00\u4e2d\u7684\u4e09\u76ee\u8fd0\u7b97\u7b26)\uff0c</p> <p>\u5224\u65ad\u6761\u4ef6\u5728\u4e2d\u95f4\uff0c\u4e3a\u771f\u5c31\u6267\u884c\u5de6\u8fb9\u7684\u8868\u8fbe\u5f0f\u5e76\u8fd4\u56de\uff0c\u4e3a\u5047\u5c31\u662f\u53f3\u8fb9</p>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part1/#project-hog","title":"Project Hog","text":""},{"location":"Notes%20of%20Courses/CS61A/CS61A_part1/#1_8","title":"1","text":"<p>Problem 7\uff0c\u8fd9\u9898\u9700\u8981\u5b9e\u73b0 <code>announce_highest</code> \u51fd\u6570\uff0c\u8fd4\u56de\u4e00\u4e2a\u51fd\u6570\uff0c</p> <p>\u8fd9\u9898\u53ef\u4ee5\u53c2\u8003\u5df2\u7ecf\u5b9e\u73b0\u597d\u7684 <code>annouce_lead_changes</code> \u51fd\u6570\uff0c\u4ee3\u7801\u7684\u7ed3\u6784\u548c\u8fd9\u4e2a\u51fd\u6570\u5927\u81f4\u76f8\u540c</p> code <pre><code>def announce_highest(who, last_score=0, running_high=0):\n    assert who == 0 or who == 1, 'The who argument should indicate a player.'\n    # BEGIN PROBLEM 7\n    \"*** YOUR CODE HERE ***\"\n    def say(score0, score1):\n        gain = (score0 if not who else score1) - last_score\n        if gain &gt; running_high:\n            print(gain, \"point(s)! The most yet for Player\", who)\n        return announce_highest(who, last_score + gain, gain if gain &gt; running_high else running_high)\n    return say\n    # END PROBLEM 7\n</code></pre>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part1/#2_4","title":"2","text":"<p>Problem 8\u4e2d\u63d0\u5230\uff0c\u53ef\u4ee5\u4f7f\u7528 <code>*args</code> \u6765\u4f20\u5165\u548c\u4f7f\u7528\u4e0d\u5b9a\u4e2a\u6570\u7684\u53c2\u6570</p> <p>Instead of listing formal parameters for a function, you can write <code>*args</code> . To call another function using exactly those arguments, you call it again with <code>*args</code> . For example,</p> <pre><code>&gt;&gt;&gt; def printed(f):\n...     def print_and_return(*args):\n...         result = f(*args)\n...         print('Result:', result)\n...         return result\n...     return print_and_return\n&gt;&gt;&gt; printed_pow = printed(pow)\n&gt;&gt;&gt; printed_pow(2, 8)\nResult: 256\n256\n&gt;&gt;&gt; printed_abs = printed(abs)\n&gt;&gt;&gt; printed_abs(-10)\nResult: 10\n10\n</code></pre> code <pre><code>def make_averaged(original_function, trials_count=1000):\n    # BEGIN PROBLEM 8\n    \"*** YOUR CODE HERE ***\"\n    def averaged(*args):\n        i = 0\n        sum = 0\n        while i &lt; trials_count:\n            sum += original_function(*args)\n            i += 1\n        return sum / trials_count\n    return averaged\n    # END PROBLEM 8\n</code></pre>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part1/#3_3","title":"3","text":"<p>Problem 9\u4e2d\u9700\u8981\u4f7f\u7528Problem 8\u4e2d\u5b9e\u73b0\u7684 <code>make_averaged</code> \u6765 \u907f\u514d\u4ee3\u7801\u7684\u91cd\u590d</p> code <pre><code>def max_scoring_num_rolls(dice=six_sided, trials_count=1000):\n    # BEGIN PROBLEM 9\n    \"*** YOUR CODE HERE ***\"\n    best_nums_rolls = 0\n    max_average_score = 0\n    averaged_roll_dice = make_averaged(roll_dice, trials_count)\n    i = 1\n    while i &lt;= 10:\n        average_score = averaged_roll_dice(i, dice)\n        if average_score &gt; max_average_score:\n            max_average_score = average_score\n            best_nums_rolls = i\n        i += 1\n    return best_nums_rolls\n    # END PROBLEM 9\n</code></pre>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part1/#lecture-5-environments","title":"Lecture 5 Environments","text":""},{"location":"Notes%20of%20Courses/CS61A/CS61A_part1/#1_9","title":"1","text":"<p>John\u63d0\u5230\u6846\u67b6 frame</p> <ul> <li>Every user-defined function has a parent frame (often global)</li> <li>The parent of a function is the frame in which it was defined</li> <li>Every local frame has a parent frame (often global)</li> <li>The parent of a frame is the parent of the function called</li> </ul> <ul> <li>\u6bcf\u4e2a\u81ea\u5b9a\u4e49\u51fd\u6570\u90fd\u6709\u4e00\u4e2a\u6bcd\u6846\u67b6(\u901a\u5e38\u662f\u5168\u5c40\u6846\u67b6)</li> <li>\u51fd\u6570\u7684\u7236\u7ea7\u5c31\u662f\u5b83\u88ab\u5b9a\u4e49\u65f6\u6240\u5904\u7684\u6846\u67b6</li> <li>\u6bcf\u4e2a\u672c\u5730\u6846\u67b6\u90fd\u6709\u4e00\u4e2a\u6bcd\u6846\u67b6(\u901a\u5e38\u662f\u5168\u5c40\u6846\u67b6)</li> <li>\u6846\u67b6\u7684\u7236\u7ea7\u662f\u88ab\u8c03\u7528\u51fd\u6570\u7684\u7236\u7ea7</li> </ul>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part1/#lecture-6-design","title":"Lecture 6 Design","text":""},{"location":"Notes%20of%20Courses/CS61A/CS61A_part1/#1_10","title":"1","text":"<p>John\u63d0\u5230\u5982\u4f55\u5bf9\u51fd\u6570\u4ee5\u53ca\u53d8\u91cf\u547d\u540d\uff0c\u5206\u522b\u4e3e\u51fa\u4e86\u6b63\u53cd\u4f8b</p> <p></p> <p>John\u6307\u51fa\u4e86\u4ec0\u4e48\u6837\u7684\u4e1c\u897f\u503c\u5f97\u53bb\u547d\u540d\uff0c\u4ee5\u53ca\u547d\u540d\u65f6(\u66f4\u591a\u7684)\u4e00\u4e9b\u6ce8\u610f\u70b9</p>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part1/#lecture-6-qa","title":"Lecture 6 Q&amp;A","text":""},{"location":"Notes%20of%20Courses/CS61A/CS61A_part1/#1_11","title":"1","text":"<p>John\u5728\u6f14\u793a\u65f6\u4f7f\u7528\u4e86 <code>round</code> \u8fd9\u4e2a\u51fd\u6570\uff0c\u4f5c\u7528\u662f\u80fd\u56db\u820d\u4e94\u5165\u53d6\u6574/\u53bb\u6389\u5269\u4f59\u7684\u4f4d\u6570\uff0c</p> <p>\u7b2c\u4e00\u4e2a\u53c2\u6570\u4f20\u5165\u9700\u8981\u53d6\u6574\u7684\u6570\uff0c\u7b2c\u4e8c\u4e2a\u53c2\u6570\u8868\u793a\u53d6\u5230\u7b2c\u51e0\u4f4d\u5c0f\u6570\uff0c\u4f8b\u5982</p> <pre><code>&gt;&gt;&gt; 1/3\n0.3333333333333333\n&gt;&gt;&gt; round(1/3, 4)\n0.3333\n&gt;&gt;&gt; 2/3\n0.6666666666666666\n&gt;&gt;&gt; round(2/3, 5)\n0.66667\n</code></pre>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part1/#lecture-7-function-examples","title":"Lecture 7 Function Examples","text":""},{"location":"Notes%20of%20Courses/CS61A/CS61A_part1/#1_12","title":"1","text":"<p>\u51fd\u6570\u4fee\u9970\u7b26 Function Decorator</p> <p></p> <p>\u5982\u679c\u5728\u67d0\u4e2a\u51fd\u6570\u5b9a\u4e49\u65f6\uff0c <code>@</code> \u53e6\u4e00\u4e2a\u5df2\u6709\u7684\u51fd\u6570\uff0c\u5c31\u4f1a\u628a\u8fd9\u4e2a\u51fd\u6570\u540d\u5bf9\u5e94\u7684\u53d8\u91cf\u7ed1\u5b9a\u6210\u88ab <code>@</code> \u7684\u51fd\u6570\u4f20\u5165\u8fd9\u4e2a\u51fd\u6570\u540e\u7684\u8fd4\u56de\u503c\uff0c</p> <p>\u4f8b\u5982\u4e0b\u56fe\u4e2dJohn\u7684demo\u6f14\u793a</p> <p></p>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part1/#lecture-7-qa","title":"Lecture 7 Q&amp;A","text":""},{"location":"Notes%20of%20Courses/CS61A/CS61A_part1/#1_13","title":"1","text":"<p>\u6709\u4eba\u63d0\u95ee18\u79cb\u5b63\u7b2c\u4e00\u6b21\u671f\u4e2d\u8003\u8bd5\u7684\u7b2c6\u9898\u7684a\u9898</p> <p>Quote</p> <p>This Again?</p> <p>Definitions. A repeatable integer function takes an integer argument and returns a repeatable integer function.</p> <p>(a) (6 pt) Implement <code>repeat</code> , which is a repeatable integer function that detects repeated arguments. As a side effect of repeated calls, it prints each argument that has been used before in a sequence of repeated calls. Therefore, if an argument appears n times, it is printed n \u2212 1 times in total, each time other than the first. The <code>detector</code> function is part of the implementation of <code>repeat</code> ; you must determine how it is used.</p> <p>Important: You may not use a list, set, or any other data type not covered yet in the course. </p> <pre><code>def repeat(k):\n    \"\"\"When called repeatedly, print each repeated argument.\n\n    &gt;&gt;&gt; f = repeat(1)(7)(7)(3)(4)(2)(5)(1)(6)(5)(1) \n    7\n    1\n    5\n    1\n    \"\"\" \n    return _____________________________________________________________________________(k) \n\ndef detector(f): \n    def g(i): \n        if ________________________________________________________________________________: \n            _______________________________________________________________________________ \n        return ____________________________________________________________________________ \n    return g\n</code></pre> <p>\u5c1d\u8bd5\u81ea\u5df1\u505a\u4e86\u4e00\u4e0b\uff0c</p> <p>\u7531\u4e8e <code>detector</code> \u7684\u53c2\u6570\u662f <code>f</code> \uff0c\u6240\u4ee5\u60f3\u5230\u5e94\u8be5\u662f\u901a\u8fc7\u8fd9\u4e2a\u51fd\u6570 <code>f</code> \u6765\u8bb0\u5f55 <code>repeat</code> \u4f20\u5165\u8fc7\u7684\u53c2\u6570\uff0c</p> <p>\u800c\u6bcf\u6b21\u8c03\u7528 <code>g</code> \u65f6\uff0c\u5e94\u8be5\u662f\u8fd4\u56de\u4e00\u4e2a\u65b0\u7684 <code>g</code> (\u8fd9\u6837\u624d\u80fd\u91cd\u590d\u8c03\u7528)\uff0c\u6240\u4ee5 <code>g</code> \u6700\u540e <code>return</code> \u65f6\u5e94\u8be5\u8981\u8c03\u7528 <code>detector</code> \u6765\u66f4\u65b0\u8bb0\u5f55\u7684\u4fe1\u606f\uff0c\u90a3\u4e48 <code>g</code> \u4e2d\u5927\u6982\u5c31\u53ef\u4ee5\u5f97\u5230</p> <pre><code>def g(i):\n    if f(i):\n        print(i)\n    return detector(...)\n</code></pre> <p>\u800c <code>repeat</code> \u4e2d\uff0c\u5e94\u8be5\u662f\u6700\u521d\u59cb\u7684\u72b6\u6001\uff0c\u6240\u4ee5\u5e94\u8be5\u7ed9 <code>detector</code> \u4f20\u5165\u6ca1\u6709\u4fe1\u606f\u7684\u51fd\u6570 <code>lambda x: False</code> \uff0c\u56e0\u6b64 <code>g</code> \u4e2d\u8981\u7ed9 <code>detector</code> \u4f20\u5165\u7684\u51fd\u6570\u5c31\u662f\u9700\u8981\u6dfb\u52a0\u5f53\u524d\u7684 <code>i</code> \u5c31\u884c\u4e86</p> code <pre><code>def repeat(k):\n    return detector(lambda x: False)(k) \n\ndef detector(f): \n    def g(i): \n        if f(i): \n            print(i) \n        return detector(lambda x: x == i or f(x)) \n    return g\n</code></pre>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part1/#hw-02","title":"HW 02","text":""},{"location":"Notes%20of%20Courses/CS61A/CS61A_part1/#1_14","title":"1","text":"<p>Q2\u8fd9\u9898\uff0c\u4e00\u5f00\u59cb\u81ea\u5df1\u505a\u7684\u65f6\u5019\u6ca1\u6709\u505a\u51fa\u6765\uff0c\u5c1d\u8bd5\u4e86\u5f88\u591a\u6b21\u90fd\u6ca1\u80fd\u6210\u529f\uff0c</p> <p>\u4e8e\u662f\u5c31\u53bb\u770b\u4e86\u63d0\u793a\u89c6\u9891\uff0c\u7136\u540e\u52a9\u6559\u8001\u5e08\u8bf4\u9053\uff0c\u53ef\u4ee5\u5199\u4e00\u4e2a <code>helper</code> \u51fd\u6570\u6765\u8ffd\u8e2a\u9700\u8981\u7684\u4fe1\u606f</p> <p></p> <p>\u4e8e\u662f\u770b\u5230\u8fd9\u91cc\u6211\u5927\u6982\u5c31\u6709\u601d\u8def\u4e86\uff0c\u6700\u540e\u5c31\u5b8c\u6210\u4e86</p> code <pre><code>def pingpong(n):\n    \"*** YOUR CODE HERE ***\"\n    def helper(index, pingpong_num, direction):\n        if index == n:\n            return pingpong_num + direction\n        else:\n            return helper(index + 1, pingpong_num + direction, direction * (-1 if index % 8 == 0 or num_eights(index) else 1))\n    return helper(1, 0, 1)\n</code></pre>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part1/#2_5","title":"2","text":"<p>Q4\u8fd9\u9898\uff0c\u611f\u89c9\u548c\u7b2c9\u8282Tree Recursion\u8bfe\u4e0a\u6700\u540e\u5c55\u793a\u7684\u4f8b\u5b50\u5f88\u50cf\uff0c</p> <p></p> <p>\u4f46\u662f\u4e00\u5f00\u59cb\u4e5f\u662f\u6ca1\u505a\u51fa\u8fd9\u9898\uff0c\u4e4b\u540e\u53d1\u73b0\u9700\u8981\u5199\u4e00\u4e2a <code>helper</code> \u51fd\u6570\u6765\u8f85\u52a9\u8bb0\u5f55\u4fe1\u606f\uff0c\u6700\u540e\u4eff\u7167\u4e0a\u56fe\u4f8b\u5b50\u7684\u5927\u81f4\u7ed3\u6784\u5c31\u5199\u51fa\u6765\u4e86</p> code <pre><code>def count_coins(total):\n    \"*** YOUR CODE HERE ***\"\n    def helper(index, largest_coin):\n        if index == total:\n            return 1\n        elif index &gt; total:\n            return 0\n        elif largest_coin == None:\n            return 0\n        else:\n            return helper(index + largest_coin, largest_coin) + helper(index, next_largest_coin(largest_coin))\n    return helper(0, 1)\n</code></pre>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part1/#3_4","title":"3","text":"<p>Q5\u8fd9\u9898\u6ca1\u6709\u60f3\u51fa\u6765\uff0c\u6700\u540e\u662f\u5728\u7f51\u4e0a\u627e\u5230\u4e86\u5dee\u4e0d\u591a\u7684( <code>lambda</code> \u51fd\u6570\u9012\u5f52\u7684)\u4ee3\u7801\uff0c</p> <pre><code>def make_anonymous_factorial():\n    return (lambda f: lambda n: f(f, n))(lambda f, i: 1 if i == 0 else i * f(f, i - 1))\n</code></pre> <p>\u540e\u6765\u518d\u56de\u6765\u770b\u8fd9\u4e2a\u4ee3\u7801\uff0c\u5927\u6982\u80fd\u7406\u89e3\u4e3a\u4ec0\u4e48\u8981\u8fd9\u4e48\u505a\u4e86\uff0c\u7531\u4e8e\u9012\u5f52\u9700\u8981\u8c03\u7528\u81ea\u5df1\uff0c\u6240\u4ee5\u5728 <code>lambda</code> \u51fd\u6570\u4e2d\u53ea\u80fd\u501f\u52a9\u5916\u90e8\uff0c\u901a\u8fc7\u53c2\u6570\u628a\u81ea\u5df1\u4f20\u8fdb\u6765(\u901a\u8fc7\u53c2\u6570\u6765\u4f20\u9012\u4fe1\u606f\u6bd4\u8f83\u5e38\u89c1)\uff0c\u6240\u4ee5\u6838\u5fc3\u90e8\u5206\u5c31\u5199\u6210\u4e86</p> <pre><code>(lambda f, i: 1 if i == 0 else i * f(f, i - 1))\n</code></pre> <p>\u5269\u4e0b\u7684\u90e8\u5206\u5c31\u662f\u53bb\u5f00\u59cb\u9012\u5f52\u7684\u8fc7\u7a0b\u3002</p> <p>\u5728\u7b2c12\u8282\u7684Q&amp;A\u4e2d\u4e5f\u6709\u4eba\u95ee\u5230\u4e86\u8fd9\u4e00\u9898\uff0cJohn\u4e5f\u8fdb\u884c\u4e86\u89e3\u7b54</p>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part1/#lecture-10-containers","title":"Lecture 10 Containers","text":""},{"location":"Notes%20of%20Courses/CS61A/CS61A_part1/#1_15","title":"1","text":"<p><code>exec()</code> \u51fd\u6570\u53ef\u4ee5\u6267\u884c\u5b57\u7b26\u4e32\u4e2d\u7684\u8bed\u53e5\uff0c\u5982</p> <pre><code>exec(\"curry = lambda f: lambda x: lambda y: f(x, y)\")\n</code></pre> <p>\u53ef\u4ee5\u8ba9 <code>curry</code> \u53d8\u91cf\u6307\u5411\u4e00\u4e2a\u533f\u540d\u51fd\u6570</p> <p></p>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part1/#2_6","title":"2","text":"<p>\u4f8b</p> <pre><code>for _ in range(3):\n    ...\n</code></pre> <p>\u53ef\u4ee5\u7528 <code>_</code> \u53d8\u91cf\u8868\u793a <code>for</code> \u5faa\u73af\u4e2d\u6267\u884c\u7684\u8bed\u53e5\u4e0e\u8fed\u4ee3\u7684\u53d8\u91cf\u65e0\u5173</p>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part1/#3_5","title":"3","text":"<p>string\u5b57\u7b26\u4e32\u7684\u5143\u7d20\u4e5f\u662f\u5b57\u7b26\u4e32\uff0clist\u7684\u5143\u7d20\u5c31\u662f\u5143\u7d20\uff0c\u5373\u6709</p> <pre><code>&gt;&gt;&gt; str = \"hello\"\n&gt;&gt;&gt; str[3][0][0]\n'l'\n</code></pre>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part1/#4_3","title":"4","text":"<p>\u8bb0\u5fc6\u6280\u5de7 \u201c\u4e0b\u6807\u201d \u5bf9\u5e94\u5143\u7d20\u4e4b\u524d\uff0c</p> <p>\u5bf9\u6709\u5e8f\u7ed3\u6784\u5207\u7247\u4e5f\u9002\u7528\uff0c\u5176\u4e2d\u7684\u8d1f\u6570\u4e5f\u9002\u7528\uff0c\u5982</p> <pre><code>&gt;&gt;&gt; l = list(range(5))\n&gt;&gt;&gt; l\n[0, 1, 2, 3, 4]\n&gt;&gt;&gt; l[1:-1]\n[1, 2, 3]\n</code></pre>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part1/#5_2","title":"5","text":"<p>\u5217\u8868\u63a8\u5bfc\u5f0f(list comprehension)\u53ef\u4ee5\u7528 <code>if</code> \uff1a</p> <pre><code>&gt;&gt;&gt; l2 = [x for x in [0, 1, 2, 5, 6] if x % 3 == 0]\n&gt;&gt;&gt; l2\n[0, 6]\n</code></pre>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part1/#6_2","title":"6","text":"<p>\u5982\u679c\u5217\u8868\u6709\u5b50\u5217\u8868\uff0c\u4e14\u5143\u7d20\u4e2a\u6570\u90fd\u56fa\u5b9a\uff0c\u90a3\u4e48 <code>for</code> \u53ef\u4ee5\u76f4\u63a5\u83b7\u53d6\u5b50\u5217\u8868\u7684\u5143\u7d20/unpack\u5b50\u5217\u8868\uff0c\u5982\u5b50\u5217\u8868\u90fd\u542b\u4e24\u4e2a\u5143\u7d20\uff1a</p> <p></p>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part1/#lecture-10-qa","title":"Lecture 10 Q&amp;A","text":""},{"location":"Notes%20of%20Courses/CS61A/CS61A_part1/#1_16","title":"1","text":"<p>\u9012\u589e\u7684\u9012\u5f52\u5199\u9636\u4e58\uff1a</p> <pre><code>def fact(n):\n    return fact_helper(n, 1, 1)\n\ndef fact_helper(n, k, result):\n    \"\"\"Computes k * (k + 1) * (k + 2) * ... * n\n    by accumulating the result\n    \"\"\"\n    if n == k:\n        return k * result\n    else:\n        return fact_helper(n, k + 1, k * result)\n</code></pre> <p></p> <p>or</p> <pre><code>def fact(n, k=1, result=1):\n    \"\"\"Computes k * (k + 1) * (k + 2) * ... * n\n    by accumulating the result\n    \"\"\"\n    if n == k:\n        return k * result\n    else:\n        return fact(n, k + 1, k * result)\n</code></pre> <p>\u8fd9\u79cd(\u9012\u589e\u7684\u9012\u5f52)\u66f4\u50cf\u5faa\u73af\u8bed\u53e5</p> <p>(\u4e5f\u53ef\u4ee5\u5c06helper\u5199\u5165\u51fd\u6570\u5185\u90e8)</p> <pre><code>def fact(n):\n    def helper(k, result):\n        if k == n:\n            return k * result\n        else:\n            return helper(k + 1, k * result)\n    return helper(1, 1)\n</code></pre> <p>or</p> <pre><code>def fact(n):\n    def helper(k):\n        if k == n:\n            return k\n        else:\n            return k * helper(k + 1)\n    return helper(1)\n</code></pre>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part1/#lab-04","title":"Lab 04","text":"<p>lab04\u4e2d\u7684Q4-Q6 \u5728\u638c\u63e1\u4e86 \u5047\u60f3\u51fd\u6570\u80fd\u8fd4\u56de\u6240\u9700\u8981\u8fd4\u56de\u7684\u4e1c\u897f(\u5373\u5047\u60f3\u8fd4\u56de\u7684\u4e1c\u897f\u662f\u5df2\u77e5\u7684) \u7684\u8bc0\u7a8d(\u5728lecture12\u4e2d)\u4e4b\u540e\uff0c\u505a\u7684\u5f88\u987a\u7545\u3002</p> <ol> <li>\u5148\u5047\u60f3\u51fd\u6570\u80fd\u8fd4\u56de\u6240\u9700\u7684\u4e1c\u897f/\u503c</li> <li>\u518d\u60f3\u5982\u4f55\u628a\u60c5\u51b5\u5206\u89e3\u6210\u53e6\u4e00\u4e2a\u6216\u51e0\u4e2a\u5dee\u4e0d\u591a(\u5f62\u5f0f\u4e00\u6837)\u4f46\u7b80\u5355\u4e86\u4e00\u70b9\u7684\u60c5\u51b5(\u6709\u70b9\u7c7b\u4f3c\u4e8e\u52a8\u6001\u89c4\u5212\u7684\u627e\u9012\u63a8\u5f0f)\uff0c\u5982Q4\u4e2d\u4e00\u822c\u60c5\u51b5\u53ef\u4ee5\u5206\u6210\u4e24\u4e2a\u884c/\u5217\u51cf\u4e00\u7684\u60c5\u51b5(\u5373\u5411\u4e0a\u6216\u5411\u53f3\u8d70\u4e00\u6b65)</li> <li>\u518d\u60f3 \u201c\u57fa\u672c\u60c5\u51b5\u201d (\u6700\u7b80\u5355/\u7279\u6b8a\u7684\u60c5\u51b5(\u4f5c\u4e3a\u9012\u5f52\u7684\u7ec8\u6b62\u60c5\u51b5))</li> <li>\u6700\u540e\u8c03\u6574\u4e00\u822c\u60c5\u51b5\u7684\u8fd4\u56de\u7684\u503c</li> </ol> code <p>Q4</p> <pre><code>def paths(m, n):\n    \"\"\"Return the number of paths from one corner of an\n    M by N grid to the opposite corner.\n\n    &gt;&gt;&gt; paths(2, 2)\n    2\n    &gt;&gt;&gt; paths(5, 7)\n    210\n    &gt;&gt;&gt; paths(117, 1)\n    1\n    &gt;&gt;&gt; paths(1, 157)\n    1\n    \"\"\"\n    \"*** YOUR CODE HERE ***\"\n    if m == 1 or n == 1:\n        return 1\n    else:\n        return paths(m - 1, n) + paths(m, n - 1)\n</code></pre> <p>Q5</p> <pre><code>def max_subseq(n, t):\n    \"\"\"\n    Return the maximum subsequence of length at most t that can be found in the given number n.\n    For example, for n = 20125 and t = 3, we have that the subsequences are\n        2\n        0\n        1\n        2\n        5\n        20\n        21\n        22\n        25\n        01\n        02\n        05\n        12\n        15\n        25\n        201\n        202\n        205\n        212\n        215\n        225\n        012\n        015\n        025\n        125\n    and of these, the maxumum number is 225, so our answer is 225.\n\n    &gt;&gt;&gt; max_subseq(20125, 3)\n    225\n    &gt;&gt;&gt; max_subseq(20125, 5)\n    20125\n    &gt;&gt;&gt; max_subseq(20125, 6) # note that 20125 == 020125\n    20125\n    &gt;&gt;&gt; max_subseq(12345, 3)\n    345\n    &gt;&gt;&gt; max_subseq(12345, 0) # 0 is of length 0\n    0\n    &gt;&gt;&gt; max_subseq(12345, 1)\n    5\n    \"\"\"\n    \"*** YOUR CODE HERE ***\"\n    if t == 0:\n        return 0\n    elif n &lt; 10:\n        return n\n    else:\n        return max(max_subseq(n // 10, t - 1) * 10 + n % 10, max_subseq(n // 10, t))\n</code></pre> <p>Q6</p> <pre><code>def add_chars(w1, w2):\n    \"\"\"\n    Return a string containing the characters you need to add to w1 to get w2.\n\n    You may assume that w1 is a subsequence of w2.\n\n    &gt;&gt;&gt; add_chars(\"owl\", \"howl\")\n    'h'\n    &gt;&gt;&gt; add_chars(\"want\", \"wanton\")\n    'on'\n    &gt;&gt;&gt; add_chars(\"rat\", \"radiate\")\n    'diae'\n    &gt;&gt;&gt; add_chars(\"a\", \"prepare\")\n    'prepre'\n    &gt;&gt;&gt; add_chars(\"resin\", \"recursion\")\n    'curo'\n    &gt;&gt;&gt; add_chars(\"fin\", \"effusion\")\n    'efuso'\n    &gt;&gt;&gt; add_chars(\"coy\", \"cacophony\")\n    'acphon'\n    &gt;&gt;&gt; from construct_check import check\n    &gt;&gt;&gt; # ban iteration and sets\n    &gt;&gt;&gt; check(LAB_SOURCE_FILE, 'add_chars',\n    ...       ['For', 'While', 'Set', 'SetComp']) # Must use recursion\n    True\n    \"\"\"\n    \"*** YOUR CODE HERE ***\"\n    if not w1:\n        return w2\n    elif w1[0] == w2[0]:\n        return add_chars(w1[1:], w2[1:])\n    else:\n        return w2[0] + add_chars(w1, w2[1:])\n</code></pre>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part1/#lecture-11-data-abstraction","title":"Lecture 11 Data Abstraction","text":""},{"location":"Notes%20of%20Courses/CS61A/CS61A_part1/#1_17","title":"1","text":"<p>\"Unpacking\" a list</p> <p></p>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part1/#2_7","title":"2","text":"<p>\u62bd\u8c61\u601d\u60f3</p> <p></p> <p></p> <p>... you should know that when you're writing one part of a large program, that it should use the level abstraction appropriate to what you're trying to do,</p> <p>and the higher you stay up, without crossing of these boundaries, the easier it will be to change your program</p> <p>\u8981 \u5411\u4e0b\u89e3\u6784\uff0c\u548c \u5411\u4e0a\u62bd\u8c61</p>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part1/#3_6","title":"3","text":"<p>\u5b57\u5178\u53ef\u4ee5\u901a\u8fc7\u7279\u5b9a\u7684\u5217\u8868\u6784\u9020( \u4e8c\u5143\u5143\u7ec4 \u7ec4\u6210\u7684\u5217\u8868)</p>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part1/#4_4","title":"4","text":"<p>\u5b57\u5178\u4e5f\u6709\u63a8\u5bfc\u5f0f</p> <p></p>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part1/#lecture-11-qa","title":"Lecture 11 Q&amp;A","text":""},{"location":"Notes%20of%20Courses/CS61A/CS61A_part1/#1_18","title":"1","text":"<p>\u62bd\u8c61\u53ef\u4ee5\u4f7f\u5f97\u4fee\u6539\u67d0\u4e00\u5c42(layer)\u4ee3\u7801\u65f6\u5e26\u6765\u7684\u51b2\u51fb/\u5f71\u54cd\u88ab\u9694\u79bb(isolate the impact)\uff0c\u6709\u65f6\u53ef\u4ee5\u4f7f\u5f97\u4fee\u6539\u6240\u4ea7\u751f\u7684\u5f71\u54cd\u53ea\u5728\u8fd9\u4e00\u5c42\u4e0a\u3002</p> <p>\u51b2\u51fb\u88ab\u9694\u79bb\u7684\u4f8b\u5b50\uff1apython dictionary\u7684\u5e95\u5c42\u4ee3\u7801\u7ecf\u5e38\u6539\u53d8\uff0c\u4f46\u5e76\u4e0d\u5f71\u54cdpython\u4e2d\u7684\u4f7f\u7528</p>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part1/#2_8","title":"2","text":"<p>\u6dfb\u52a0\u5224\u65ad\u529f\u80fd\u53ef\u4ee5\u8fd9\u6837\u8bbe\u8ba1</p> <p></p>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part1/#project-cats","title":"Project Cats","text":"<p>Info</p> <p>\u9700\u8981\u4e86\u89e3 Lec 12 Trees \u4e2d\u7684\u6570\u636e\u62bd\u8c61(data abstraction)\u90e8\u5206\u7684\u5185\u5bb9</p>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part1/#1_19","title":"1","text":"<p>Problem 5 \u4e2d\u4f7f\u7528 <code>min()</code> (\u5e8f\u5217\u805a\u5408\u51fd\u6570)\u4f1a\u5f88\u65b9\u4fbf\uff0c</p> <p>\u4f46\u8981\u6ce8\u610f \u4f7f\u7528 <code>key</code> \u53c2\u6570\u4f20\u5165\u5224\u65ad\u51fd\u6570\u65f6\uff0c\u9700\u8981\u5199\u4e0a <code>key=</code> </p>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part1/#2_9","title":"2","text":"<p>Problem 9 \u4e2d\u5c1d\u8bd5\u4e86\u5217\u8868\u63a8\u5bfc\u5f0f\u7684\u5d4c\u5957\u4f7f\u7528</p> <pre><code>def time_per_word(times_per_player, words):\n    \"\"\"Given timing data, return a game data abstraction, which contains a list\n    of words and the amount of time each player took to type each word.\n\n    Arguments:\n        times_per_player: A list of lists of timestamps including the time\n                          the player started typing, followed by the time\n                          the player finished typing each word.\n        words: a list of words, in the order they are typed.\n    \"\"\"\n    # BEGIN PROBLEM 9\n    \"*** YOUR CODE HERE ***\"\n    times = [[timestamp[i + 1] - timestamp[i] for i in range(len(timestamp) - 1)] for timestamp in times_per_player]\n    return game(words, times)\n    # END PROBLEM 9\n</code></pre>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part1/#3_7","title":"3","text":"<p>Problem 10 \u4e2d\u5982\u679c\u8981\u628a\u4e00\u4e2astring\u52a0\u5165(\u4f7f\u7528 <code>+</code> \u8fd0\u7b97\u7b26)\u5230list\u4e2d\uff0c\u4e0d\u80fd\u76f4\u63a5\u52a0string (\u5426\u5219\u4f1a\u628a\u53ea\u542b\u6709\u5355\u4e2a\u5b57\u6bcd\u7684string\u4f5c\u4e3a\u5143\u7d20\u52a0\u5165\u5230\u5217\u8868\u4e2d)\uff0c\u5e94\u8be5 <code>+ [str]</code> \u6216 <code>+= [str]</code> (\u521b\u5efa\u4e00\u4e2a\u542b\u8be5\u5b57\u7b26\u4e32\u7684\u5217\u8868)</p>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part1/#4_5","title":"4","text":"<p>Problem 6</p> <p>\u770b\u4e86hint\u89c6\u9891\u540e\uff0c\u5c06\u539f\u672c\u9700\u8981\u501f\u52a9\u5185\u90e8helper\u51fd\u6570\u7684\u5199\u6cd5\u6539\u6210\u4e86\u4e0d\u9700\u8981helper\u7684\uff0c\u5173\u952e\u4e4b\u5904\u5728\u4e8e \u60f3\u5230\u4e86limit\u53ef\u4ee5\u7528\u4e8e\u8ba1\u6570(\u62ff\u6765\u51cf)</p> <pre><code>def shifty_shifts(start, goal, limit):\n    \"\"\"A diff function for autocorrect that determines how many letters\n    in START need to be substituted to create GOAL, then adds the difference in\n    their lengths.\n    \"\"\"\n    # BEGIN PROBLEM 6\n    # assert False, 'Remove this line'\n    # def helper(start, goal, count):\n    #     if count &gt; limit:\n    #         return count\n    #     # elif not start:\n    #     #     return count + len(goal)\n    #     # elif not goal:\n    #     #     return count + len(start)\n    #     elif not start or not goal:\n    #         return count + len(start + goal)\n    #     else:\n    #         return helper(start[1:], goal[1:], count if start[0] == goal[0] else count + 1)\n    # return helper(start, goal, 0)\n\n    # if limit == 0:\n    #     return 1\n    if limit &lt; 0:\n        return 0\n    elif not start or not goal:\n        return len(start + goal)\n    elif start[0] == goal[0]:\n        return shifty_shifts(start[1:], goal[1:], limit)\n    else:\n        return 1 + shifty_shifts(start[1:], goal[1:], limit - 1)\n    # END PROBLEM 6\n</code></pre> <p>\u4e0b\u56fe\u6709\u4e00\u70b9\u542f\u53d1\u4f5c\u7528(\u5bf9problem 7\u5982\u4f55\u627e\u5230\u964d\u89e3\u7684\u65b9\u6cd5\u4e5f\u6709\u4e00\u5b9a\u5e2e\u52a9)</p> <p></p>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part1/#5_3","title":"5","text":"<p>Problem 7</p> <p>\u7531\u63d0\u793a\u89c6\u9891\u4e2dproblem 6\u4e2d\u7684\uff0c\u52a9\u6559\u964d\u89e3 \u66ff\u6362 \u64cd\u4f5c\u7684\u65b9\u6cd5\u5982\u4e0b\uff1a</p> <pre><code>#   \"range\", \"rungs\"  2\n#    \"ange\",  \"ungs\"  2\n#     \"nge\",   \"ngs\"  1\n#      \"ge\",    \"gs\"  1\n#       \"e\",     \"s\"  1\n#        \"\",      \"\"  0\n</code></pre> <p></p> <p>\u5373\u964d\u89e3\u7684\u5173\u952e\u4e00\u6b65\u4e3a\uff1a</p> <pre><code>#   \"range\", \"rungs\"  1 + x\n#    \"ange\",  \"ungs\"  1 + x\n#     \"nge\",   \"ngs\"  x\n#       ...,     ...  ...\n</code></pre> <p>\u90a3\u4e48\uff0c\u7c7b\u4f3c\u7684\uff0c \u6dfb\u52a0 \u64cd\u4f5c\u7684\u964d\u89e3\uff0c\u62ff <code>cats</code> \u4f5c\u4e3astart \u4ee5\u53ca <code>scat</code> \u4f5c\u4e3agoal \u4e3e\u4f8b\uff0c\u53ef\u7406\u89e3\u4e3a\uff1a</p> <p>cats\u5728\u5f00\u5934\u6dfb\u52a0\u4e00\u4e2as\uff0c\u53d8\u6210scats (\u6dfb\u52a0\u7684\u5b57\u6bcd\u4e00\u5b9a\u662fgoal\u7684\u7b2c\u4e00\u4e2a\u5b57\u6bcd)\uff0c</p> <p>\u90a3\u4e48\u9700\u8981\u5224\u65ad\u7684\u90e8\u5206\uff0c\u5c31\u4ece cats \u3001 scat\uff0c\u53d8\u6210\u4e86 s cats \u3001 s cat</p> <p>\u5219\u964d\u89e3\u7684\u5173\u952e\u4e00\u6b65\u5c31\u5e94\u8be5\u662f\uff1a</p> <pre><code>#       ...,     ...  ...\n#    \"cats\",  \"scat\"  1 + x\n#    \"cats\",   \"cat\"  x\n#       ...,     ...  ...\n</code></pre> <p>\u5219\u540c\u7406\uff0c\u5220\u9664 \u64cd\u4f5c\u7684\u964d\u89e3\uff0c\u62ff ckiteus \u3001 kittens \u4e3e\u4f8b\uff0c</p> <p>\u64cd\u4f5c\u524d\u540e\uff0c\u9700\u8981\u5224\u65ad\u7684\u90e8\u5206\uff0c\u4ece ckiteus \u3001 kittens\uff0c\u53d8\u6210\u4e86 kiteus \u3001 kittens</p> <p>\u5219\u964d\u89e3\u7684\u5173\u952e\u4e00\u6b65\u5c31\u5e94\u8be5\u662f\uff1a</p> <pre><code>#          ...,        ...  ...\n#    \"ckiteus\",  \"kittens\"  1 + x\n#     \"kiteus\",  \"kittens\"  x\n#          ...,        ...  ...\n</code></pre> <p>\u5219\u6700\u540e\u6839\u636e\u6a21\u677f\u4fee\u6539\u7684\u4ee3\u7801\u4e3a\uff1a</p> <pre><code>def pawssible_patches(start, goal, limit):\n    \"\"\"A diff function that computes the edit distance from START to GOAL.\"\"\"\n    # assert False, 'Remove this line'\n\n    if limit &lt; 0: # Fill in the condition\n        # BEGIN\n        \"*** YOUR CODE HERE ***\"\n        return 0\n        # END\n\n    elif not start or not goal: # Feel free to remove or add additional cases\n        # BEGIN\n        \"*** YOUR CODE HERE ***\"\n        return len(start + goal)\n        # END\n\n    elif start[0] == goal[0]:\n        return pawssible_patches(start[1:], goal[1:], limit)\n    else:\n        add_diff = 1 + pawssible_patches(start, goal[1:], limit - 1) # ... # Fill in these lines\n        remove_diff = 1 + pawssible_patches(start[1:], goal, limit - 1) # ...\n        substitute_diff = 1 + pawssible_patches(start[1:], goal[1:], limit - 1) # ...\n        # BEGIN\n        \"*** YOUR CODE HERE ***\"\n        return min(add_diff, remove_diff, substitute_diff)\n        # END\n</code></pre> <p>\u6700\u540e\u53d1\u73b0\u601d\u8def\u4e0e\u52a9\u6559\u63d0\u793a\u7684\u4e00\u6837</p> <p></p> <p>Quote</p> <p>...(\"ats\" and \"cats\") we see thats adding one letter to the front, is actually the exact same as just chopping off letter from the front of the second word. so what do I mean by that, this is what I mean, I mean if I add one letter to the front, I might as well just be taking off one letter from the back, so instead of adding C to this word I can just say, well I'm just going to take off the first letter of whatever this word is, because I know that, if I add that letter to this word, then I know that it's going to be the correct letter, so I don't even need to add it, I can just go ahead and chop off the letter from the second word, and I know that it'll be okay. right, so doing comparing cats and cats, is the exact same thing as comparing ats and ats, there will be no more difference. so that's the add example right there...</p> <p>...the last is the substitute example(\"hello\" and \"mello\"). so this should be pretty familiar from our previous problem. remember for the previous problem we just took out the first letter of both, so it said that if they were different, then we're just gonna take them all out, and say that we had one edit distance, we had one substitution needed. and so you see that, substituting the first letter to an M to make it match the second, is the exact same thing as just taking out both letters. we don't care what they are, we see that they're different, we're just gonna take out both and call it a day. and so we see that we end with ello and ello, and then we're done...</p>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part1/#6_3","title":"6","text":"<p>\u5b57\u5178\u53ef\u4ee5\u8fd9\u6837\u5199\uff0c\u66f4\u6e05\u6670</p> <pre><code>report = {\n    \"id\": user_id,\n    \"progress\": progress,\n}\n</code></pre> <p>(\u6700\u540e\u4e00\u4e2a\u9017\u53f7\u6709\u6ca1\u6709\u4e0d\u5f71\u54cd)</p> <p></p>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part1/#7","title":"7","text":"<p>\u4e00\u4e2a\u5c0f\u53d1\u73b0</p> <p><code>...</code> \u53ef\u4ee5\u8d4b\u503c\u7ed9\u53d8\u91cf\uff0c\u5982</p> <pre><code>a = \n</code></pre> <p>\u4f1a\u62a5\u9519\uff0c</p> <p>\u800c</p> <pre><code>a = ...\n</code></pre> <p>\u5219\u4e0d\u4f1a\u62a5\u9519</p>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part1/#lecture-12-trees","title":"Lecture 12 Trees","text":""},{"location":"Notes%20of%20Courses/CS61A/CS61A_part1/#1_20","title":"1","text":"<p><code>[...]</code> \u4e2d\u62ec\u53f7/\u65b9\u62ec\u53f7(square brackets)\u4e2d\u7684\u5185\u5bb9\u8868\u793a\u4e3a\u53ef\u9009\u7684(optional)</p>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part1/#2_10","title":"2","text":"<p>\u5e8f\u5217\u805a\u5408\u51fd\u6570(Sequence Aggregation)</p> <p></p> <p><code>sum()</code> \u51fd\u6570\uff0c\u53ef\u4ee5\u7528\u4e8e\u9664\u5b57\u7b26\u4e32\u4ee5\u5916\u7684\u5e8f\u8868\uff0c\u5c06\u5e8f\u8868\u4e2d\u7684\u5143\u7d20\u4ee5\u5176\u5bf9\u5e94\u7684 <code>+</code> \u6cd5\u6c42\u548c\u5e76\u8fd4\u56de(\u9ed8\u8ba4\u521d\u59cb\u503c\u4e3a0\uff0c\u5982\u679c\u662f\u5176\u4ed6\u7c7b\u578b\uff0c\u9700\u8981\u8bbe\u7f6e\u521d\u59cb\u503c\uff0c\u5982\u5217\u8868\u9700\u8981\u4f20\u5165\u7a7a\u5217\u8868 <code>[]</code> \u5ea7\u4f4d <code>start</code> \u53c2\u6570)</p> <p></p> <p><code>max()</code> \u51fd\u6570\uff0c\u53ef\u4ee5\u8fd4\u56de\u6700\u5927\u503c\uff0c\u6216\u8005\u662f\u4f7fkey\u51fd\u6570\u8fd4\u56de\u503c\u6700\u5927\u7684\u503c(\u81ea\u53d8\u91cf)</p> <p></p> <p>\u5bf9\u5e94\u7684\u8fd8\u6709 <code>min()</code> \u548c <code>any()</code></p>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part1/#3_8","title":"3","text":"<p>\u6811\u62bd\u8c61(Tree Abstaction)\u7684\u5b9e\u73b0</p> <p></p>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part1/#4_6","title":"4","text":"<p>\u9012\u5f52\u5728\u6811\u4e2d\u7684\u8fd0\u7528\uff0c</p> <p>\u8981\u76f4\u63a5\u5047\u60f3\u51fd\u6570\u80fd\u8fd4\u56de\u6240\u9700\u8981\u8fd4\u56de\u7684\u4e1c\u897f(\u5373\u5047\u60f3\u8fd4\u56de\u7684\u4e1c\u897f\u662f\u5df2\u77e5\u7684)\uff0c\u7136\u540e\u76f4\u63a5\u5728\u51fd\u6570\u5185\u90e8\u53bb\u76f4\u63a5\u4f7f\u7528\u8fd9\u4e2a\u8fd4\u56de\u7684\u4e1c\u897f\uff0c</p> <p>\u5e76\u4e14\u9700\u8981\u8bb0\u4f4f\u6811\u7684\u5b69\u5b50\u4e5f\u662f\u6811\u3002</p> <p>\u4f8b\u5982</p> <pre><code>def count_leaves(t):\n    \"\"\"Count the leaves of a tree.\"\"\"\n    if is_leaf(t):\n        return 1\n    else:\n        branch_counts = [count_leaves(b) for b in branches(t)]\n        return sum(branch_counts)\n</code></pre> <p>Hint: \u5047\u60f3\u8be5\u51fd\u6570\u4e00\u5b9a\u80fd\u8fd4\u56de\u6811\u7684\u53f6\u5b50\u6570(\u5373\u5047\u60f3\u5df2\u77e5\u5b50\u6811\u53f6\u5b50\u6570)\uff0c\u7136\u540e\u5bf9\u5b50\u6811\u7684\u53f6\u5b50\u6570\u548c\u5373\u5f97\u5230\u672c\u6811\u7684\u53f6\u5b50\u6570</p> <pre><code>def leaves(tree):\n    \"\"\"Return a list containing the leaves labels of tree.\n\n    &gt;&gt;&gt; leaves(fib_tree(5))\n    [1, 0, 1, 0, 1, 1, 0, 1]\n    \"\"\"\n    if is_leaf(tree):\n        return [label(tree)]\n    else:\n        return sum([leaves(b) for b in branches(tree)], [])\n</code></pre> <p>Hint: \u5047\u60f3\u8be5\u51fd\u6570\u80fd\u8fd4\u56de \u4e00\u4e2a\u542b \u6811\u7684\u6240\u6709\u53f6\u5b50\u7684\u503c/\u6807\u7b7e \u7684list </p> <pre><code>def increment_leaves(t):\n    \"\"\"Return a tree like t but with leaf labels incremented.\"\"\"\n    if is_leaf(t):\n        return tree(label(t) + 1)\n    else:\n        bs = [increment_leaves(b) for b in branches(t)]\n        return tree(label(t), bs)\n</code></pre> <pre><code>def increment(t):\n    \"\"\"Return a tree like t but with all labels incremented\"\"\"\n    return tree(label(t) + 1, [increment(b) for b in branches(t)])\n</code></pre> <p>Hint: \u5047\u60f3\u80fd\u8fd4\u56de\u4e00\u4e2a ... \u7684\u6811</p> <pre><code>def fib_tree(n):\n    if n &lt;= 1:\n        return tree(n)\n    else:\n        left, right = fib_tree(n - 2), fib_tree(n - 1)\n        return tree(label(left) + label(right), [left, right])\n</code></pre> <p>Hint\u540c\u4e0a</p>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part1/#5_4","title":"5","text":"<p>\u8fd8\u6709\u53e6\u4e00\u79cd\u4e0d\u4f7f\u7528\u51fd\u6570\u672c\u8eab\u8fd4\u56de\u7684\u503c\u7684\u9012\u5f52\u51fd\u6570</p> <p></p> <pre><code>def fact(n):\n    return fact_times(n, 1)\n\ndef fact_times(n, k):\n    \"\"\"Return k * n * (n - 1) * ... * 1\"\"\"\n    if n == 0:\n        return k\n    else:\n        return fact_times(n - 1, k * n)\n</code></pre> <p></p> <p>(\u6253\u5370\u6bcf\u4e2a\u53f6\u5b50(\u4ece\u6839\u5f00\u59cb)\u7684\u8def\u5f84)</p> <pre><code>def print_sums(t, so_far):\n    so_far = so_far + label(t)\n    if is_leaf(t):\n        print(so_far)\n    else:\n        for b in branches(t):\n            print_sums(b, so_far)\n</code></pre> <p>\u5e94\u8be5\u662f\u5c06\u8981\u8fed\u4ee3\u7684\u53d8\u91cf\u4f5c\u4e3a\u53c2\u6570\u4f20\u5165\u51fd\u6570\u4e2d</p>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part1/#lecture-12-qa","title":"Lecture 12 Q&amp;A","text":""},{"location":"Notes%20of%20Courses/CS61A/CS61A_part1/#1_21","title":"1","text":"<p>11:06</p> <p>\u5173\u4e8elab04 Q6</p> <p>Quote</p> <p>...by the way this is this is sort of a classic recursion problem, where you can see, you know, you think about the problem as what if i have a, you know, just there's one letter in each, and those match, what do i do, right, and then what do you do otherwise. it's, it's that classic recursion where you, you sort of simplify the problem to the simplest possible cases. the base case, one of them is empty, and then here there's there's sort of like two base cases almost, not quite because that second one is a recursion but it's that really really simple case, and then you build in the complexity after that. um, so that i, that's what's sort of really cool about these recursive solutions...</p> <p>...\u987a\u4fbf\u8bf4\u4e00\u53e5\uff0c\u8fd9\u662f\u4e00\u4e2a\u7ecf\u5178\u7684\u9012\u5f52\u95ee\u9898\uff0c\u4f60\u53ef\u4ee5\u770b\u5230\uff0c\u4f60\u77e5\u9053\uff0c\u4f60\u8ba4\u4e3a\u8fd9\u4e2a\u95ee\u9898\u662f\uff0c\u5982\u679c\u6211\u6709\u4e00\u4e2a\uff0c\u4f60\u77e5\u9053\u7684\uff0c\u6bcf\u4e2a\u53ea\u6709\u4e00\u4e2a\u5b57\u6bcd\uff0c\u8fd9\u4e9b\u5339\u914d\uff0c\u6211\u8be5\u600e\u4e48\u505a\uff0c\u5bf9\u5427\uff0c\u7136\u540e\u4f60\u8be5\u600e\u4e48\u505a\u3002\u8fd9\u662f\u4e00\u4e2a\u7ecf\u5178\u7684\u9012\u5f52\uff0c\u4f60\u53ef\u4ee5\u5c06\u95ee\u9898\u7b80\u5316\u4e3a\u6700\u7b80\u5355\u7684\u60c5\u51b5\u3002\u57fa\u672c\u60c5\u51b5\uff0c\u5176\u4e2d\u4e00\u4e2a\u662f\u7a7a\u7684\uff0c\u7136\u540e\u8fd9\u91cc\u51e0\u4e4e\u6709\u4e24\u4e2a\u57fa\u672c\u60c5\u51b5\uff0c\u4e0d\u5b8c\u5168\u662f\u56e0\u4e3a\u7b2c\u4e8c\u4e2a\u662f\u9012\u5f52\uff0c\u4f46\u8fd9\u662f\u4e00\u4e2a\u975e\u5e38\u7b80\u5355\u7684\u60c5\u51b5\uff0c\u7136\u540e\u4f60\u6784\u5efa\u590d\u6742\u5ea6\u3002\u55ef\uff0c\u6240\u4ee5\u6211\uff0c\u8fd9\u5c31\u662f\u8fd9\u4e9b\u9012\u5f52\u89e3\u51b3\u65b9\u6848\u771f\u6b63\u9177\u7684\u5730\u65b9...</p>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part1/#2_11","title":"2","text":"<p>18:16</p> <p>\u5173\u4e8ehw02 Q5\uff0c\u533f\u540d\u51fd\u6570\u7684\u9012\u5f52</p> <p>Quote</p> <p>John:</p> <pre><code>lambda n: 1 if n == 1 else n * fact(n - 1)\n</code></pre> <p>...uh how would we give this thing a different name, well, instead of assigning we could have it be fact, </p> <pre><code>lambda fact: lambda n: 1 if n == 1 else n * fact(n - 1)\n</code></pre> <p>but then, how would we like, pass that in, i guess instead of putting it here, maybe, maybe the best place to put it is here,</p> <pre><code>lambda n, fact: 1 if n == 1 else n * fact(n - 1)\n</code></pre> <p>so, basically in order to run this, we need an n and we need factorial. i'll just let that sink in, if factorial is not already defined, then somebody needs to pass it in, in order for us to call it. i'm gonna need a little bit more space than this i'm afraid. now, that we have a function that takes n and factorial. we need to be a little bit careful, we want this to be our factorial function, but it takes two arguments, and here we're calling it with only one argument, so that seems like a mismatch. what should be the second argument every time we call fact, well it should be the same function again, that's kind of how we get that recursive structure,</p> <pre><code>lambda n, fact: 1 if n == 1 else n * fact(n - 1, fact)\n</code></pre> <p>is that every time we call this thing that takes in a number and the function that we're going to call recursively, it needs to be called on a new number and the function that we're going to call recursively. so we've actually made some progress even though all we've done is kind of like move a name in here, and uh, pass it around. the last part is that we need to figure out, how to write a function, that takes only n, and somehow uh, calls this one instead,</p> <pre><code>lambda n: (lambda n, fact: 1 if n == 1 else n * fact(n - 1, fact))\n</code></pre> <p>and that's actually not so bad, this says, uh, give me a function, and call that function, on both n and itself.</p> <pre><code>lambda n: (lambda f: f(n, f))(lambda n, fact: 1 if n == 1 else n * fact(n - 1, fact))\n</code></pre> <p>so if i have a function, and i call it on n and itself, where n comes from here, now i just need to know which function i'm supposed to be calling on n in itself. and the answer is, this guy (<code>(lambda n, fact: 1 if n == 1 else n * fact(n - 1, fact))</code>).</p> <pre><code>g = lambda n: (lambda f: f(n, f))(lambda n, fact: 1 if n == 1 else n * fact(n - 1, fact))\n</code></pre> <p>so let's see what g does now. g computes n factorial, if we really wanted to get rid of that assignment statement, </p> <pre><code>print((lambda n: (lambda f: f(n, f))(lambda n, fact: 1 if n == 1 else n * fact(n - 1, fact)))(4))\n</code></pre> <p>then we could compute four factorial this way, by taking this function and calling it on four, and then, hopefully, if everything went right, we will have printed four factorial, or five factorial, or whatever. so, what was the key moments in figuring this out, one was, if we can't have fact defined already, then we have to pass it in as an argument, and the second was, if we have a function that takes two arguments, and we really want a function that takes one argument, then we should write a function that takes one argument, and calls the function that takes two arguments. and, then, the last part really is kind of a trick, which is to say like if you had a function and an argument, you would then call the function on the argument in itself, this is basically how you create recursion, without using assignment statements is this little part right here...</p> <p> </p> <p>Hany:</p> <p>...i i think john's right here. by the way, look there's a couple of things that you've seen before, essentially there's the helper function in here. you have a function that, uh, only takes one parameter and, you really need to pass two, so you put a helper function in, that's basically what you have here with the lambda. um, you've got sort of the notion of recursion and then there's just that little trick there, um, which you see with, uh, this, uh, lambda f of f of nf. so don't, don't get too worried if you didn't see that obvi, it obvious, i don't think it's at all obvious actually.</p> <p> </p> <p>John:</p> <p>one thing that's exciting about this while it's not obvious at all, is that it allows you to create iteration out of just functions, like of course there's no assignment here, there's also no while statement or for statement here. but we are doing something repetitively, and, so, um, this is kind of, uh, this idea right here, is a building block for the claim, that once you can define functions you can kind of write any program that you want, you can perform any computation, and you might wonder was that really true, like don't i need a while statement or a for statement. it turns out technically you don't, that does not mean we should get rid of while statements and for statements, they're a lot more readable than this i think, but, um, they're not strictly necessary in order to perform interesting computations.</p> <p> </p> <p>Hany:</p> <p>yes, and some in the chat just pointed out scheme and lisp is this is sort of the premise of these functional programming languages, that don't have looping, explicit looping constructs as you do everything, with these types of constructs, and it's a little bit mind-bending, but, it turns out it's expressive enough...</p> <p>John:</p> <pre><code>lambda n: 1 if n == 1 else n * fact(n - 1)\n</code></pre> <p>...\u5443\uff0c\u6211\u4eec\u600e\u4e48\u7ed9\u8fd9\u4e2a\u4e1c\u897f\u53d6\u4e00\u4e2a\u4e0d\u540c\u7684\u540d\u5b57\u5462\uff0c\u597d\u5427\uff0c\u4e0e\u5176\u6307\u5b9a\uff0c\u6211\u4eec\u53ef\u4ee5\u8ba9\u5b83\u6210\u4e3afact\uff0c</p> <pre><code>lambda fact: lambda n: 1 if n == 1 else n * fact(n - 1)\n</code></pre> <p>\u4f46\u662f\uff0c\u6211\u4eec\u4f1a\u600e\u4e48\u60f3\uff0c\u628a\u5b83\u4f20\u8fdb\u6765\uff0c\u6211\u60f3\u4e0e\u5176\u628a\u5b83\u653e\u5728\u8fd9\u91cc\uff0c\u4e5f\u8bb8\uff0c\u4e5f\u8bb8\u6700\u597d\u7684\u5730\u65b9\u653e\u5728\u8fd9\u91cc\uff0c</p> <pre><code>lambda n, fact: 1 if n == 1 else n * fact(n - 1)\n</code></pre> <p>\u6240\u4ee5\uff0c\u57fa\u672c\u4e0a\uff0c\u4e3a\u4e86\u8fd0\u884c\u8fd9\u4e2a\uff0c\u6211\u4eec\u9700\u8981\u4e00\u4e2an\uff0c\u6211\u4eec\u9700\u8981fact\u3002\u6211\u4f1a\u8ba9\u5b83\u6c89\u4e0b\u53bb\uff0c\u5982\u679cfact\u8fd8\u6ca1\u6709\u5b9a\u4e49\uff0c\u90a3\u4e48\u9700\u8981\u6709\u4eba\u628a\u5b83\u4f20\u8fdb\u6765\uff0c\u8fd9\u6837\u6211\u4eec\u624d\u80fd\u8c03\u7528\u5b83\u3002\u6050\u6015\u6211\u9700\u8981\u66f4\u591a\u7684\u7a7a\u95f4\u3002\u73b0\u5728\uff0c\u6211\u4eec\u6709\u4e00\u4e2a\u51fd\u6570\uff0c\u5b83\u53d6n\u548cfact\u3002\u6211\u4eec\u9700\u8981\u5c0f\u5fc3\u4e00\u70b9\uff0c\u6211\u4eec\u5e0c\u671b\u8fd9\u662f\u6211\u4eec\u7684\u9636\u4e58\u51fd\u6570\uff0c\u4f46\u5b83\u9700\u8981\u4e24\u4e2a\u53c2\u6570\uff0c\u800c\u8fd9\u91cc\u6211\u4eec\u53ea\u7528\u4e00\u4e2a\u53c2\u6570\u6765\u8c03\u7528\u5b83\uff0c\u6240\u4ee5\u8fd9\u770b\u8d77\u6765\u4e0d\u5339\u914d\u3002\u6bcf\u6b21\u6211\u4eec\u8c03\u7528fact\u65f6\uff0c\u7b2c\u4e8c\u4e2a\u53c2\u6570\u5e94\u8be5\u662f\u4ec0\u4e48\uff0c\u5b83\u5e94\u8be5\u662f\u540c\u4e00\u4e2a\u51fd\u6570\uff0c\u8fd9\u5c31\u662f\u6211\u4eec\u5f97\u5230\u9012\u5f52\u7ed3\u6784\u7684\u65b9\u5f0f\uff0c</p> <pre><code>lambda n, fact: 1 if n == 1 else n * fact(n - 1, fact)\n</code></pre> <p>\u6bcf\u6b21\u6211\u4eec\u8c03\u7528\u8fd9\u4e2a\u5305\u542b\u4e00\u4e2a\u6570\u5b57\u548c\u6211\u4eec\u8981\u9012\u5f52\u8c03\u7528\u7684\u51fd\u6570\u7684\u4e1c\u897f\u65f6\uff0c\u90fd\u9700\u8981\u5bf9\u4e00\u4e2a\u65b0\u7684\u6570\u5b57\u548c\u6211\u4eec\u5c06\u9012\u5f52\u8c03\u7528\u7684\u529f\u80fd\u8fdb\u884c\u8c03\u7528\u3002\u6240\u4ee5\u6211\u4eec\u5b9e\u9645\u4e0a\u5df2\u7ecf\u53d6\u5f97\u4e86\u4e00\u4e9b\u8fdb\u5c55\uff0c\u5c3d\u7ba1\u6211\u4eec\u6240\u505a\u7684\u53ea\u662f\u628a\u4e00\u4e2a\u540d\u5b57\u79fb\u5230\u8fd9\u91cc\uff0c\u7136\u540e\u628a\u5b83\u4f20\u6765\u4f20\u53bb\u3002\u6700\u540e\u4e00\u90e8\u5206\u662f\uff0c\u6211\u4eec\u9700\u8981\u5f04\u6e05\u695a\uff0c\u5982\u4f55\u7f16\u5199\u4e00\u4e2a\u53ea\u9700\u8981n\u7684\u51fd\u6570\uff0c\u5e76\u4ee5\u67d0\u79cd\u65b9\u5f0f\u8c03\u7528\u8fd9\u4e2a\u51fd\u6570\uff0c</p> <pre><code>lambda n: (lambda n, fact: 1 if n == 1 else n * fact(n - 1, fact))\n</code></pre> <p>\u8fd9\u5176\u5b9e\u8fd8\u4e0d\u9519\uff0c\u8fd9\u8bf4\uff0c\u7ed9\u6211\u4e00\u4e2a\u51fd\u6570\uff0c\u5e76\u8c03\u7528\u8fd9\u4e2a\u51fd\u6570\uff0c\u5bf9n\u548c\u5b83\u672c\u8eab\u3002</p> <pre><code>lambda n: (lambda f: f(n, f))(lambda n, fact: 1 if n == 1 else n * fact(n - 1, fact))\n</code></pre> <p>\u5982\u679c\u6211\u6709\u4e00\u4e2a\u51fd\u6570\uff0c\u6211\u5728n\u548c\u5b83\u672c\u8eab\u4e0a\u8c03\u7528\u5b83\uff0cn\u6765\u81ea\u8fd9\u91cc\uff0c\u73b0\u5728\u6211\u53ea\u9700\u8981\u77e5\u9053\u6211\u5e94\u8be5\u5728n\u672c\u8eab\u4e0a\u8c03\u7528\u54ea\u4e2a\u51fd\u6570\u3002\u7b54\u6848\u662f\uff0c\u8fd9\u5bb6\u4f19 (<code>(lambda n, fact: 1 if n == 1 else n * fact(n - 1, fact))</code>)\u3002</p> <pre><code>g = lambda n: (lambda f: f(n, f))(lambda n, fact: 1 if n == 1 else n * fact(n - 1, fact))\n</code></pre> <p>\u8ba9\u6211\u4eec\u770b\u770bg\u73b0\u5728\u505a\u4ec0\u4e48\u3002g\u8ba1\u7b97n\u9636\u4e58\uff0c\u5982\u679c\u6211\u4eec\u771f\u7684\u60f3\u53bb\u6389\u8d4b\u503c\u8bed\u53e5\uff0c</p> <pre><code>print((lambda n: (lambda f: f(n, f))(lambda n, fact: 1 if n == 1 else n * fact(n - 1, fact)))(4))\n</code></pre> <p>\u7136\u540e\u6211\u4eec\u53ef\u4ee5\u7528\u8fd9\u79cd\u65b9\u5f0f\u8ba1\u7b974\u7684\u9636\u4e58\uff0c\u901a\u8fc7\u53d6\u8fd9\u4e2a\u51fd\u6570\u5e76\u57284\u4e0a\u8c03\u7528\u5b83\uff0c\u7136\u540e\uff0c\u5982\u679c\u4e00\u5207\u987a\u5229\uff0c\u6211\u4eec\u5c06\u6253\u5370\u51fa4\u7684\u9636\u4e58\uff0c\u62165\u7684\u9636\u4e58\uff0c\u6216\u5176\u4ed6\u4ec0\u4e48\u3002\u90a3\u4e48\uff0c\u5f04\u6e05\u695a\u8fd9\u4e00\u70b9\u7684\u5173\u952e\u65f6\u523b\u662f\u4ec0\u4e48\uff0c\u4e00\u4e2a\u662f\uff0c\u5982\u679c\u6211\u4eec\u8fd8\u4e0d\u80fd\u5b9a\u4e49fact\uff0c\u90a3\u4e48\u6211\u4eec\u5fc5\u987b\u5c06\u5176\u4f5c\u4e3a\u4e00\u4e2a\u53c2\u6570\u4f20\u9012\uff0c\u7b2c\u4e8c\u4e2a\u662f\uff0c\u6211\u4eec\u6709\u4e00\u4e2a\u63a5\u53d7\u4e24\u4e2a\u53c2\u6570\u7684\u51fd\u6570\uff0c\u6211\u4eec\u771f\u7684\u60f3\u8981\u4e00\u4e2a\u63a5\u53d7\u4e00\u4e2a\u53c2\u6570\u7684\u51fd\u5f0f\uff0c\u90a3\u4e48\u6211\u4eec\u5e94\u8be5\u5199\u4e00\u4e2a\u63a5\u53d7\u4e86\u4e00\u4e2a\u53c2\u6570\uff0c\u5e76\u8c03\u7528\u63a5\u53d7\u4e24\u4e2a\u53d8\u91cf\u7684\u51fd\u6570\u3002\u7136\u540e\uff0c\u6700\u540e\u4e00\u90e8\u5206\u5b9e\u9645\u4e0a\u662f\u4e00\u79cd\u6280\u5de7\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u5982\u679c\u4f60\u6709\u4e00\u4e2a\u51fd\u6570\u548c\u4e00\u4e2a\u53c2\u6570\uff0c\u4f60\u4f1a\u5728\u53c2\u6570\u672c\u8eab\u4e0a\u8c03\u7528\u51fd\u6570\uff0c\u8fd9\u57fa\u672c\u4e0a\u5c31\u662f\u4f60\u521b\u5efa\u9012\u5f52\u7684\u65b9\u6cd5\uff0c\u800c\u4e0d\u4f7f\u7528\u8d4b\u503c\u8bed\u53e5\uff0c\u8fd9\u5c31\u662f\u8fd9\u4e2a\u5c0f\u90e8\u5206...</p> <p> </p> <p>Hany:</p> <p>...\u6211\u89c9\u5f97\u7ea6\u7ff0\u662f\u5bf9\u7684\u3002\u987a\u4fbf\u8bf4\u4e00\u4e0b\uff0c\u8fd9\u91cc\u6709\u4f60\u4ee5\u524d\u89c1\u5230\u8fc7\u4e00\u4e9b\u4e1c\u897f\uff0c\u6700\u57fa\u672c\u5730 \u8fd9\u91cc\u6709helper\u51fd\u6570\u3002\u4f60\u6709\u4e00\u4e2a\u51fd\u6570\uff0c\u5443\uff0c\u53ea\u63a5\u53d7\u4e00\u4e2a\u53c2\u6570\uff0c\u4f60\u9700\u8981\u4f20\u9012\u4e24\u4e2a\uff0c\u6240\u4ee5\u4f60\u5728\u91cc\u9762\u653e\u4e86\u4e00\u4e2a\u8f85\u52a9\u51fd\u6570\uff0c\u8fd9\u57fa\u672c\u4e0a\u5c31\u662flambda\u3002\u55ef\uff0c\u4f60\u5df2\u7ecf\u6709\u4e86\u9012\u5f52\u7684\u6982\u5ff5\uff0c\u7136\u540e\u6709\u4e00\u4e2a\u5c0f\u6280\u5de7\uff0c\u4f60\u53ef\u4ee5\u770b\u5230\uff0c\u8fd9\u4e2a\uff0c\u8fd9\u4e2a\uff0clambda f of f of nf\u3002\u6240\u4ee5\u4e0d\u8981\uff0c\u4e0d\u8981\u592a\u62c5\u5fc3\uff0c\u5982\u679c\u4f60\u6ca1\u6709\u6e05\u695a\u5730\u770b\u5230\uff0c\u6211\u8ba4\u4e3a\u5b83\u5b9e\u9645\u4e0a\u4e00\u70b9\u4e5f\u4e0d\u660e\u663e\u3002</p> <p> </p> <p>John:</p> <p>\u867d\u7136\u8fd9\u4e00\u70b9\u5e76\u4e0d\u660e\u663e\uff0c\u4f46\u6709\u4e00\u70b9\u4ee4\u4eba\u5174\u594b\uff0c\u90a3\u5c31\u662f\u5b83\u5141\u8bb8\u4f60\u4ec5\u4ece\u51fd\u6570\u4e2d\u521b\u5efa\u8fed\u4ee3\uff0c\u5f53\u7136\u8fd9\u91cc\u6ca1\u6709\u8d4b\u503c\uff0c\u8fd9\u91cc\u4e5f\u6ca1\u6709while\u8bed\u53e5\u6216for\u8bed\u53e5\u3002\u4f46\u6211\u4eec\u5728\u91cd\u590d\u5730\u505a\u4e00\u4e9b\u4e8b\u60c5\uff0c\u8fd9\u662f\u4e00\u79cd\uff0c\u55ef\uff0c\u8fd9\u4e2a\u60f3\u6cd5\uff0c\u662f\u8fd9\u4e2a\u4e3b\u5f20\u7684\u4e00\u4e2a\u6784\u5efa\u5757\uff0c\u4e00\u65e6\u4f60\u5b9a\u4e49\u4e86\u51fd\u6570\uff0c\u4f60\u5c31\u53ef\u4ee5\u7f16\u5199\u4efb\u4f55\u4f60\u60f3\u8981\u7684\u7a0b\u5e8f\uff0c\u4f60\u53ef\u4ee5\u6267\u884c\u4efb\u4f55\u8ba1\u7b97\uff0c\u4f60\u53ef\u80fd\u4f1a\u60f3\uff0c\u8fd9\u771f\u7684\u662f\u771f\u7684\u5417\uff0c\u6bd4\u5982\u6211\u4e0d\u9700\u8981while\u8bed\u53e5\u6216for\u8bed\u53e5\u3002\u4e8b\u5b9e\u8bc1\u660e\uff0c\u4ece\u6280\u672f\u4e0a\u8bb2\uff0c\u4f60\u6ca1\u6709\uff0c\u8fd9\u5e76\u4e0d\u610f\u5473\u7740\u6211\u4eec\u5e94\u8be5\u53bb\u6389while\u8bed\u53e5\uff0c\u5bf9\u4e8e\u8bed\u53e5\uff0c\u5b83\u4eec\u6bd4\u8fd9\u66f4\u53ef\u8bfb\uff0c\u4f46\u662f\uff0c\u55ef\uff0c\u4e3a\u4e86\u6267\u884c\u6709\u8da3\u7684\u8ba1\u7b97\uff0c\u5b83\u4eec\u5e76\u4e0d\u662f\u4e25\u683c\u5fc5\u8981\u7684\u3002</p> <p> </p> <p>Hany:</p> <p>\u662f\u7684\uff0c\u804a\u5929\u4e2d\u7684\u4e00\u4e9b\u4eba\u521a\u521a\u6307\u51fascheme\u548clisp\uff0c\u8fd9\u662f\u8fd9\u4e9b\u51fd\u6570\u5f0f\u7f16\u7a0b\u8bed\u8a00\u7684\u524d\u63d0\uff0c\u5b83\u4eec\u5728\u505a\u4efb\u4f55\u4e8b\u60c5\u65f6\u90fd\u6ca1\u6709\u5faa\u73af\u3001\u663e\u5f0f\u7684\u5faa\u73af\u7ed3\u6784\uff0c\u6709\u8fd9\u4e9b\u7c7b\u578b\u7684\u7ed3\u6784\uff0c\u8fd9\u6709\u70b9\u8ba9\u4eba\u8d39\u89e3\uff0c\u4f46\u4e8b\u5b9e\u8bc1\u660e\u5b83\u8db3\u591f\u6709\u8868\u8fbe\u529b...</p> <p>\u6211\u7684\u7406\u89e3\u662f\uff0c\u533f\u540d\u51fd\u6570\u7684\u9012\u5f52\uff0c\u7531\u4e8e\u65e0\u6cd5\u58f0\u660e\u53d8\u91cf\u548c\u7ed9\u53d8\u91cf\u8d4b\u503c\uff0c\u6240\u4ee5\u9700\u8981\u5c06\u51fd\u6570\u4f5c\u4e3a\u53c2\u6570\u4f20\u5165\u533f\u540d\u51fd\u6570\uff0c\u7136\u540e\u518d\u5728\u5185\u90e8\u8c03\u7528\uff0c\u800c\u7531\u4e8e\u6b64\u65f6\u533f\u540d\u51fd\u6570\u6d4b\u53c2\u6570\u4e2d\u6709\u4e00\u4e2a\u51fd\u6570\u53c2\u6570\uff0c\u6240\u4ee5\u5728\u8c03\u7528\u4ee5\u53c2\u6570\u4f20\u5165\u7684\u51fd\u6570\u65f6\uff0c\u53c2\u6570\u4e5f\u8981\u4e0e\u81ea\u8eab\u76f8\u5339\u914d(\u5373\u52a0\u4e0a\u8be5\u51fd\u6570\u81ea\u8eab)\uff0c\u5982</p> <pre><code>lambda n, f: 1 if n == 1 else f(n, f)\n</code></pre> <p>\u4e0b\u4e00\u6b65\u6211\u7684\u7406\u89e3\u662f\uff0c\u7531\u4e8e\u9700\u8981\u53bb\u8c03\u7528\u533f\u540d\u51fd\u6570\u81ea\u8eab\uff0c\u800c\u53c8\u4e0d\u80fd\u8d4b\u503c\uff0c\u90a3\u4e48\u5c31\u667a\u80fd\u5c06\u51fd\u6570\u4f5c\u4e3a\u53c2\u6570\u4f20\u5165\u53e6\u4e00\u4e2a\u51fd\u6570\uff0c\u518d\u5728\u540e\u8005\u5185\u90e8\u8c03\u7528\u524d\u8005\uff0c\u5373</p> <pre><code>(lambda f: f(n, f))(lambda n, f: 1 if n == 1 else f(n, f))\n</code></pre> <p>\u6700\u540e\uff0c\u7531\u4e8en\u662f\u6700\u7ec8\u60f3\u8981\u8bbe\u7f6e\u7684\u53c2\u6570\uff0c\u6240\u4ee5\u5728\u6700\u5916\u9762\u6700\u540e\u5305\u4e0a\u4e00\u5c42</p> <pre><code>lambda n: (lambda f: f(n, f))(lambda n, f: 1 if n == 1 else f(n, f))\n</code></pre>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part1/#3_9","title":"3","text":"<p>23:52</p> <p>\u5173\u4e8electure 12\u6700\u540e\u63d0\u53ca\u7684\u9012\u5f52\u51fd\u6570\u7684\u6784\u5efa\u65b9\u5f0f</p> <p>Quote</p> <p></p> <pre><code>def fact(n):\n    if n == 0:\n        return 1\n    else:\n        return n * fact(n - 1)\n\ndef fact_times(n, k):\n    \"\"\"Return k times n factorial\n              k *     n * (n-1) * ... * 1\n    \"\"\"\n    if n == 0:\n        return k\n    else:\n        return fact_times(n - 1, k * n)\n</code></pre> <p>John:</p> <p>...yeah, so the reason we did something a little bit different here, was so that we could show an example, of a recursive function, that just called itself, without doing anything with it, so there kind of wasn't anything outside of the call, everything happened inside the call, where we subtracted one from n and we multiplied k by n. but we didn't like add anything or multiply anything afterwards, which was different than the original version of factorial, which did multiply the result of the recursive call by n. the original one looked like this, right, it was like if n equals zero return one, else return n times fact n minus one. so here we make the recursive call and then we like do some work afterwards, and that means the recursive call doesn't really know where it came from. it doesn't know anything about which factorial result you're constructing, whereas this one does. at the end, when you hit the base case, you have computed k times n factorial for whatever n in k you started with, and that is now named k, which is a little confusing, but that's how it goes sometimes with recursion. but the point is that the whole answer is, uh, built up by the time you hit the base case, at which point you just have to return return return return, all the work is done.</p> <p> </p> <p>Hany:</p> <p>and notice, by the way, in that first one that's not true, as you're doing recursion, there is a delayed gratification of the evaluation of that product, so when you hit the base case in the first fact, you then have to go back and now multiply all those numbers between n and one. yeah because you built an expression, whereas in the fact times, you basically have an assignment operator, it's that you're, you're just using the parameters as the assignment operator, and so when you hit that base case, done, i've got the answer. so, so you're right, of course, we could have done it differently, we didn't have to do it this way, but you see that the structurally the recursion is subtly different here, and it turns out this has a real implication too by the way, downstream, and i think, i think we'll eventually do that, right john.</p> <p> </p> <p>John:</p> <p>yeah so this is called, uh, tail recursion, and this is not, and we'll talk about this later when we talk about interpreters. um, so the goal here wasn't to implement fact times, it was actually to re-implement fact. but in order to re-implement fact you'd have to have a helper function, that's what fact times is. that keeps track of two arguments instead of one. the thing you're trying to compute the factorial of, and the result the answer of computing n.</p> <p>John\uff1a</p> <p>...\u662f\u7684\uff0c\u6211\u4eec\u5728\u8fd9\u91cc\u505a\u4e86\u4e00\u4e9b\u4e0d\u540c\u7684\u4e8b\u60c5\uff0c\u662f\u4e3a\u4e86\u5c55\u793a\u4e00\u4e2a\u9012\u5f52\u51fd\u6570\u7684\u793a\u4f8b\uff0c\u5b83\u53ea\u662f\u8c03\u7528\u4e86\u81ea\u5df1\uff0c\u800c\u6ca1\u6709\u5bf9\u5b83\u505a\u4efb\u4f55\u4e8b\u60c5\uff0c\u6240\u4ee5\u5728\u8c03\u7528\u4e4b\u5916\u51e0\u4e4e\u6ca1\u6709\u4ec0\u4e48\u4e1c\u897f\uff0c\u6240\u6709\u4e8b\u60c5\u90fd\u53d1\u751f\u5728\u8c03\u7528\u5185\u90e8\uff0c\u6211\u4eec\u4ecen\u4e2d\u51cf\u53bb\u4e861\u5e76\u5c06k\u4e58\u4ee5n\u3002\u4f46\u662f\u6211\u4eec\u6ca1\u6709\u6dfb\u52a0\u6216\u4e58\u4ee5\u4efb\u4f55\u5176\u4ed6\u4e1c\u897f\uff0c\u8fd9\u4e0e\u9636\u4e58\u7684\u539f\u59cb\u7248\u672c\u4e0d\u540c\uff0c\u539f\u59cb\u7248\u672c\u901a\u8fc7\u4e58\u4ee5\u9012\u5f52\u8c03\u7528\u7684\u7ed3\u679c\u6765\u8ba1\u7b97\u3002\u539f\u59cb\u7248\u672c\u770b\u8d77\u6765\u50cf\u8fd9\u6837\uff0c\u5982\u679cn\u7b49\u4e8e\u96f6\uff0c\u5219\u8fd4\u56de1\uff0c\u5426\u5219\u8fd4\u56den\u4e58\u4ee5fact\uff08n-1\uff09\u3002\u6240\u4ee5\u5728\u8fd9\u91cc\uff0c\u6211\u4eec\u8fdb\u884c\u9012\u5f52\u8c03\u7528\uff0c\u7136\u540e\u5728\u4e4b\u540e\u8fdb\u884c\u4e00\u4e9b\u5de5\u4f5c\uff0c\u8fd9\u610f\u5473\u7740\u9012\u5f52\u8c03\u7528\u4e0d\u77e5\u9053\u5b83\u6765\u81ea\u54ea\u91cc\u3002\u5b83\u4e0d\u77e5\u9053\u4f60\u6b63\u5728\u6784\u5efa\u54ea\u4e2a\u9636\u4e58\u7ed3\u679c\uff0c\u800c\u8fd9\u4e2a\u7248\u672c\u77e5\u9053\u3002\u6700\u540e\uff0c\u5f53\u4f60\u5230\u8fbe\u57fa\u672c\u60c5\u51b5\u65f6\uff0c\u4f60\u5df2\u7ecf\u8ba1\u7b97\u51fa\u4e86\u5bf9\u4e8e\u4efb\u4f55\u4ee5k\u4e3an\u5f00\u59cb\u7684n\uff0ck\u4e58\u4ee5n\u7684\u9636\u4e58\uff0c\u73b0\u5728\u5b83\u88ab\u547d\u540d\u4e3ak\uff0c\u8fd9\u6709\u70b9\u4ee4\u4eba\u56f0\u60d1\uff0c\u4f46\u6709\u65f6\u5c31\u662f\u8fd9\u6837\u9012\u5f52\u3002\u4f46\u662f\u91cd\u70b9\u662f\u6574\u4e2a\u7b54\u6848\u5728\u8fbe\u5230\u57fa\u672c\u60c5\u51b5\u65f6\u5c31\u5df2\u7ecf\u6784\u5efa\u5b8c\u6210\uff0c\u6b64\u65f6\u4f60\u53ea\u9700\u8981\u8fd4\u56de\uff0c\u8fd4\u56de\uff0c\u8fd4\u56de\uff0c\u6240\u6709\u7684\u5de5\u4f5c\u90fd\u5df2\u5b8c\u6210\u3002</p> <p> </p> <p>Hany\uff1a</p> <p>\u987a\u4fbf\u63d0\u4e00\u4e0b\uff0c\u5728\u7b2c\u4e00\u4e2a\u51fd\u6570\u4e2d\uff0c\u5f53\u4f60\u8fdb\u884c\u9012\u5f52\u65f6\uff0c\u6709\u4e00\u4e2a\u4e58\u79ef\u7684\u8bc4\u4f30\u5ef6\u8fdf\uff0c\u6240\u4ee5\u5f53\u4f60\u5728\u7b2c\u4e00\u4e2afact\u4e2d\u8fbe\u5230\u57fa\u672c\u60c5\u51b5\u65f6\uff0c\u4f60\u9700\u8981\u56de\u53bb\u73b0\u5728\u4e58\u4ee5n\u548c1\u4e4b\u95f4\u7684\u6240\u6709\u6570\u5b57\u3002\u662f\u7684\uff0c\u56e0\u4e3a\u4f60\u6784\u5efa\u4e86\u4e00\u4e2a\u8868\u8fbe\u5f0f\uff0c\u800c \u5728fact times\u4e2d\uff0c\u4f60\u57fa\u672c\u4e0a\u6709\u4e00\u4e2a\u8d4b\u503c\u8fd0\u7b97\u7b26\uff0c\u4f60\u53ea\u662f \u5c06\u53c2\u6570\u7528\u4f5c\u8d4b\u503c\u8fd0\u7b97\u7b26\uff0c\u6240\u4ee5\u5f53\u4f60 \u5230\u8fbe\u57fa\u672c\u60c5\u51b5\u65f6\uff0c\u5b8c\u6210\u4e86\uff0c\u6211\u5f97\u5230\u4e86\u7b54\u6848\u3002\u6240\u4ee5\uff0c\u5f53\u7136\uff0c\u4f60\u662f\u5bf9\u7684\uff0c\u6211\u4eec\u672c\u6765\u53ef\u4ee5\u7528\u4e0d\u540c\u7684\u65b9\u5f0f\u505a\u8fd9\u4e2a\uff0c\u4f46\u4f60\u53ef\u4ee5\u770b\u5230\uff0c\u9012\u5f52\u7684\u7ed3\u6784\u5728\u8fd9\u91cc\u662f\u5fae\u5999\u4e0d\u540c\u7684\uff0c\u8fd9\u5728\u4e0b\u6e38\u4e5f\u6709\u5b9e\u9645\u5f71\u54cd\uff0c\u6211\u8ba4\u4e3a\u6211\u4eec\u6700\u7ec8\u4f1a\u505a\uff0c\u5bf9\u5427\uff0cJohn\u3002</p> <p> </p> <p>John\uff1a</p> <p>\u662f\u7684\uff0c\u6240\u4ee5 \u8fd9\u88ab\u79f0\u4e3a\u5c3e\u9012\u5f52\uff0c\u800c\u8fd9\u4e0d\u662f\u5c3e\u9012\u5f52\uff0c\u6211\u4eec\u5c06\u5728\u8ba8\u8bba\u89e3\u91ca\u5668\u65f6\u518d\u8c08\u8bba\u8fd9\u4e2a\u95ee\u9898\u3002\u6240\u4ee5\u8fd9\u91cc\u7684\u76ee\u6807\u4e0d\u662f\u5b9e\u73b0fact times\uff0c\u800c\u662f\u91cd\u65b0\u5b9e\u73b0fact\u3002\u4f46\u662f \u4e3a\u4e86\u91cd\u65b0\u5b9e\u73b0fact\uff0c\u60a8\u5fc5\u987b\u6709\u4e00\u4e2a\u8f85\u52a9\u51fd\u6570\uff0c\u5373fact times\u3002\u4e0e\u4e00\u4e2a\u53c2\u6570\u4e0d\u540c\uff0c\u5b83\u4fdd\u7559\u4e86\u8981\u8ba1\u7b97\u9636\u4e58\u7684\u5143\u7d20\u548c\u8ba1\u7b97n\u7ed3\u679c\u7684\u7b54\u6848\u8fd9\u4e24\u4e2a\u53c2\u6570\u3002</p>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part1/#lab-05","title":"Lab 05","text":""},{"location":"Notes%20of%20Courses/CS61A/CS61A_part1/#1_22","title":"1","text":"<p>Q6 \u4e2d\uff0c\u501f\u9274\u4e86 <code>lab05.py</code> \u6587\u4ef6\u5e95\u90e8 <code>Tree ADT</code> \u4e2d\u6700\u540e\u4e00\u4e2a\u51fd\u6570 <code>copy_tree()</code> \u7684\u51fd\u6570\u6784\u9020\u601d\u8def</p> <pre><code>def copy_tree(t):\n    \"\"\"Returns a copy of t. Only for testing purposes.\n\n    &gt;&gt;&gt; t = tree(5)\n    &gt;&gt;&gt; copy = copy_tree(t)\n    &gt;&gt;&gt; t = tree(6)\n    &gt;&gt;&gt; print_tree(copy)\n    5\n    \"\"\"\n    return tree(label(t), [copy_tree(b) for b in branches(t)])\n</code></pre> <p>\u7531\u4e8eQ6\u4e2d\u662f\u9700\u8981\u8fd4\u56de\u4e00\u4e2a\u65b0\u7684\u6811\uff0c\u6240\u4ee5\u76f4\u63a5\u7528\u6811\u7684\u6784\u9020\u51fd\u6570\u6839\u636e\u539f\u6811\u53bb\u9012\u5f52\u5730(\u53c2\u8003 <code>copy_tree()</code> )\u6784\u9020\u4e00\u4e2a\u65b0\u6811</p> <p>(\u5148\u6784\u5efa\u597d\u57fa\u672c\u7684\u9012\u5f52\uff0c\u518d\u8003\u8651\u57fa\u672c\u60c5\u51b5(basic situation)\u4e0b\u5982\u4f55\u5904\u7406)</p> <p>1</p> <pre><code>def sprout_leaves(t, leaves):\n    return tree(label(t), [... sprout_leaves(branch, leaves) for branch in branches(t)])\n</code></pre> <p>2</p> <pre><code>def sprout_leaves(t, leaves):\n    return tree(label(t), [... if is_leaf(branch) else sprout_leaves(branch, leaves) for branch in branches(t)])\n</code></pre> <p>3</p> <pre><code>def sprout_leaves(t, leaves):\n    return tree(label(t), [tree(label(branch), [...]) if is_leaf(branch) else sprout_leaves(branch, leaves) for branch in branches(t)])\n</code></pre> <p>4</p> <pre><code>def sprout_leaves(t, leaves):\n    return tree(label(t), [tree(label(branch), [tree(leaf) for leaf in leaves]) if is_leaf(branch) else sprout_leaves(branch, leaves) for branch in branches(t)])\n</code></pre>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part1/#2_12","title":"2","text":"<p>Q9</p> <p>(\u53ef\u4ee5\u5229\u7528\u4e0b\u6807\u6765\u6784\u5efa\u63a8\u5bfc\u5f0f)</p> <p>Quote</p> <p>Hint: To write this as a single comprehension, you may find the expression <code>k%2</code>, which evaluates to 0 on even numbers and 1 on odd numbers, to be useful. Consider how you can use the 0 or 1 returned by <code>k%2</code> to alternatively access the beginning and the middle of the list.</p> code <pre><code>def riffle(deck):\n    \"\"\"Produces a single, perfect riffle shuffle of DECK, consisting of\n    DECK[0], DECK[M], DECK[1], DECK[M+1], ... where M is position of the\n    second half of the deck.  Assume that len(DECK) is even.\n    &gt;&gt;&gt; riffle([3, 4, 5, 6])\n    [3, 5, 4, 6]\n    &gt;&gt;&gt; riffle(range(20))\n    [0, 10, 1, 11, 2, 12, 3, 13, 4, 14, 5, 15, 6, 16, 7, 17, 8, 18, 9, 19]\n    \"\"\"\n    \"*** YOUR CODE HERE ***\"\n    return [deck[i // 2] if i % 2 == 0 else deck[(len(deck) + i) // 2] for i in range(len(deck))]\n</code></pre>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part1/#3_10","title":"3","text":"<p>\u5728 Lecture 14 Q&amp;A \u4e2d John \u6709\u63d0\u5230\u6b64\u9898\u7684\u89e3\u6cd5\uff0c\u5728\u770b\u4e86\u4e00\u90e8\u5206(\u4f7f\u7528\u4e0b\u6807\u7684\u65b9\u6cd5)\u4e4b\u540e\uff0c\u7528\u5217\u8868\u63a8\u5bfc\u5f0f\u5199\u51fa\u4e86\u4e00\u4e2a\u53ef\u7528\u7684\u65b9\u6cd5(\u7ed3\u6784\u6709\u70b9\u7c7b\u4f3c\u4e8eQ6)\uff1a</p> <pre><code>def add_trees(t1, t2):\n    return tree(label(t1) + label(t2), [add_trees(branches(t1)[i] if i &lt; len(branches(t1)) else tree(0), branches(t2)[i] if i &lt; len(branches(t2)) else tree(0)) for i in range(max(len(branches(t1)), len(branches(t2))))])\n</code></pre>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part1/#4_7","title":"4","text":"<p>Q11\u4e2d</p> <pre><code>def build_successors_table(tokens):\n    \"\"\"Return a dictionary: keys are words; values are lists of successors.\n\n    &gt;&gt;&gt; text = ['We', 'came', 'to', 'investigate', ',', 'catch', 'bad', 'guys', 'and', 'to', 'eat', 'pie', '.']\n    &gt;&gt;&gt; table = build_successors_table(text)\n    &gt;&gt;&gt; sorted(table)\n    [',', '.', 'We', 'and', 'bad', 'came', 'catch', 'eat', 'guys', 'investigate', 'pie', 'to']\n    &gt;&gt;&gt; table['to']\n    ['investigate', 'eat']\n    &gt;&gt;&gt; table['pie']\n    ['.']\n    &gt;&gt;&gt; table['.']\n    ['We']\n    \"\"\"\n    table = {}\n    prev = '.'\n    for word in tokens:\n        if prev not in table:\n            \"*** YOUR CODE HERE ***\"\n        \"*** YOUR CODE HERE ***\"\n        prev = word\n    return table\n</code></pre> <p>\u4e2d\u7684 <code>sorted()</code> \u51fd\u6570\u5982\u679c\u4ee5\u5b57\u5178\u4e3a\u4f20\u5165\u53c2\u6570\uff0c\u8f93\u51fa\u7684 \u5e94\u8be5 \u662f\u4e00\u4e2a\u542b\u6709\u6240\u6709key\u5e76\u4e14\u6392\u5e8f\u597d\u7684\u5217\u8868</p>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part1/#lecture-13-qa","title":"Lecture 13 Q&amp;A","text":""},{"location":"Notes%20of%20Courses/CS61A/CS61A_part1/#1_23","title":"1","text":"<p>John\u5173\u4e8e <code>min()</code> \u548c <code>max()</code> \u7684 <code>key</code> \u53c2\u6570\u7684\u4e00\u4e9b\u89e3\u91ca\u548c\u8bf4\u660e</p> <p>Quote</p> <p>...what's going on with the min function and its optional argument called key. sometimes what you want is to find the smallest number among a list, and min will do that for you. but sometimes what you want is to find a particular number that's extreme in another way, like it's not the smallest, it's not the largest, but it's the closest to five or it's the, it's the thing that when you square it is closest to 24, or you know you could imagine any kind of description, where there's like a some value, that would do this the best, and min allows you to find that element for any possible condition, and that's the point of that key function. so the way you do it is that, you start out with your same set of values, of which one is the one that you're looking for, and then you provide a function, and this function is going to be called on every single one of these values, and yeah, let's use that example of, uh, the square is as close as possible to 24. i don't know why you would want this, but maybe you would for some reason.</p> <pre><code>&gt;&gt;&gt; min([3, 2, 5, 6], key=lambda x: abs(x * x - 24))\n</code></pre> <p>so what's going to happen here, is that it's going to square, and then subtract 24 from each of these, and then take the absolute value in order to get some measurement of how close is the square of this x to 24. and it tells us 5 is among these numbers the one that when you square it gets you pretty close to 24. in fact there's like an important property about this computation that's not shown, which is that 5 squared minus 24 is 1, and there's no 1 in this output, that's all hidden. what is happening is that, that 1 is computed along with the result of, squaring 3 and subtracting 24, and squaring 6 and subtracting 24. so it's done it for all of them, and then it has found the one, for which the result of calling this function is the smallest. why the smallest, because it's min. so in this way you can use min in order to find the, kind of extreme value for any notion of extreme that you want, but you always get one of these values. and if there's a tie, then you'll get an arbitrary one i think. you get the first one but i'm not actually sure...</p> <p>...min\u51fd\u6570\u53ca\u5176\u540d\u4e3akey\u7684\u53ef\u9009\u53c2\u6570\u53d1\u751f\u4e86\u4ec0\u4e48\u3002\u6709\u65f6\uff0c\u4f60\u60f3\u8981\u7684\u662f\u5728\u4e00\u4e2a\u5217\u8868\u4e2d\u627e\u5230\u6700\u5c0f\u7684\u6570\u5b57\uff0cmin\u4f1a\u4e3a\u4f60\u505a\u5230\u8fd9\u4e00\u70b9\u3002\u6709\u65f6\uff0c\u4f60\u60f3\u8981\u7684\u662f\u627e\u5230\u4e00\u4e2a\u4ee5\u53e6\u4e00\u79cd\u65b9\u5f0f\u6781\u7aef\u7684\u7279\u5b9a\u6570\u5b57\uff0c\u6bd4\u5982\u5b83\u4e0d\u662f\u6700\u5c0f\u7684\uff0c\u4e5f\u4e0d\u662f\u6700\u5927\u7684\uff0c\u4f46\u5b83\u6700\u63a5\u8fd15\uff0c\u6216\u8005\u5b83\u662f\uff0c\u5f53\u4f60\u628a\u5b83\u5e73\u65b9\u65f6\uff0c\u5b83\u6700\u63a5\u8fd124\uff0c\u6216\u8005\u4f60\u77e5\u9053\u4f60\u53ef\u4ee5\u60f3\u8c61\u4efb\u4f55\u4e00\u79cd\u63cf\u8ff0\uff0c\u5176\u4e2d\u6709\u4e00\u4e2a\u503c\uff0c\u8fd9\u5c06\u662f\u6700\u597d\u7684\uff0cmin\u5141\u8bb8\u4f60\u627e\u5230\u4efb\u4f55\u53ef\u80fd\u6761\u4ef6\u4e0b\u7684\u5143\u7d20\uff0c\u8fd9\u5c31\u662f\u5173\u952e\u51fd\u6570\u7684\u610f\u4e49\u6240\u5728\u3002\u8fd9\u6837\u505a\u7684\u65b9\u6cd5\u662f\uff0c\u4f60\u4ece\u4e00\u7ec4\u76f8\u540c\u7684\u503c\u5f00\u59cb\uff0c\u5176\u4e2d\u4e00\u4e2a\u662f\u4f60\u6b63\u5728\u5bfb\u627e\u7684\u503c\uff0c\u7136\u540e\u4f60\u63d0\u4f9b\u4e00\u4e2a\u51fd\u6570\uff0c\u8fd9\u4e2a\u51fd\u6570\u5c06\u5bf9\u8fd9\u4e9b\u503c\u4e2d\u7684\u6bcf\u4e00\u4e2a\u8c03\u7528\uff0c\u662f\u7684\uff0c\u8ba9\u6211\u4eec\u7528\u8fd9\u4e2a\u4f8b\u5b50\uff0c\u5443\uff0c\u5e73\u65b9\u5c3d\u53ef\u80fd\u63a5\u8fd124\u3002\u6211\u4e0d\u77e5\u9053\u4f60\u4e3a\u4ec0\u4e48\u60f3\u8981\u8fd9\u4e2a\uff0c\u4f46\u4e5f\u8bb8\u51fa\u4e8e\u67d0\u79cd\u539f\u56e0\u4f60\u4f1a\u60f3\u8981\u3002</p> <pre><code>&gt;&gt;&gt; min([3, 2, 5, 6], key=lambda x: abs(x * x - 24))\n</code></pre> <p>\u8fd9\u91cc\u8981\u505a\u7684\u662f\uff0c\u5b83\u8981\u5e73\u65b9\uff0c\u7136\u540e\u4ece\u6bcf\u4e00\u4e2a\u4e2d\u51cf\u53bb24\uff0c\u7136\u540e\u53d6\u7edd\u5bf9\u503c\uff0c\u5f97\u5230x\u548c24\u7684\u5e73\u65b9\u6709\u591a\u63a5\u8fd1\u3002\u5b83\u544a\u8bc9\u6211\u4eec\uff0c5\u662f\u8fd9\u4e9b\u6570\u5b57\u4e2d\u7684\u4e00\u4e2a\uff0c\u5f53\u4f60\u5e73\u65b9\u65f6\uff0c\u5b83\u4f1a\u975e\u5e38\u63a5\u8fd124\u4e8b\u5b9e\u4e0a\uff0c\u8fd9\u4e2a\u8ba1\u7b97\u6709\u4e00\u4e2a\u91cd\u8981\u7684\u6027\u8d28\u6ca1\u6709\u663e\u793a\uff0c\u90a3\u5c31\u662f5\u7684\u5e73\u65b9\u51cf\u53bb24\u662f1\uff0c\u800c\u8fd9\u4e2a\u8f93\u51fa\u4e2d\u6ca1\u67091\uff0c\u8fd9\u90fd\u662f\u9690\u85cf\u7684\u3002\u73b0\u5728\u7684\u60c5\u51b5\u662f\uff0c1\u4e0e\u5e73\u65b93\u548c\u51cf\u6cd524\u3001\u5e73\u65b96\u548c\u51cf\u6cd524\u7684\u7ed3\u679c\u4e00\u8d77\u8ba1\u7b97\u3002\u56e0\u6b64\uff0c\u5b83\u5bf9\u6240\u6709\u8fd9\u4e9b\u51fd\u6570\u90fd\u8fdb\u884c\u4e86\u5904\u7406\uff0c\u7136\u540e\u627e\u5230\u4e86\u4e00\u4e2a\u51fd\u6570\uff0c\u8c03\u7528\u8be5\u51fd\u6570\u7684\u7ed3\u679c\u662f\u6700\u5c0f\u7684\u3002\u4e3a\u4ec0\u4e48\u662f\u6700\u5c0f\u7684\uff0c\u56e0\u4e3a\u5b83\u662f\u6700\u5c0f\u7684\u3002\u901a\u8fc7\u8fd9\u79cd\u65b9\u5f0f\uff0c\u4f60\u53ef\u4ee5\u4f7f\u7528min\u6765\u627e\u5230\uff0c\u4efb\u4f55\u4f60\u60f3\u8981\u7684\u6781\u503c\u6982\u5ff5\u7684\u6781\u503c\uff0c\u4f46\u4f60\u603b\u662f\u5f97\u5230\u5176\u4e2d\u4e00\u4e2a\u503c\u3002\u5982\u679c\u6253\u6210\u5e73\u624b\uff0c\u6211\u60f3\u4f60\u4f1a\u5f97\u5230\u4e00\u4e2a\u4efb\u610f\u7684\u5e73\u624b\u3002\u4f60\u5f97\u5230\u4e86\u7b2c\u4e00\u4e2a\uff0c\u4f46\u6211\u5b9e\u9645\u4e0a\u4e0d\u786e\u5b9a...</p>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part1/#2_13","title":"2","text":"<p>\u4e24\u4e2a\u5217\u8868\u5728\u6bd4\u8f83\u5927\u5c0f\u65f6\uff0c\u4f1a\u6bd4\u8f83\u7b2c\u4e00\u4e2a\u5143\u7d20\u7684\u5927\u5c0f( <code>min()</code> \u51fd\u6570\u4e5f\u7c7b\u4f3c)\uff0c</p> <p>\u6d4b\u8bd5\u4e86\u4e00\u4e0b\uff0c\u5e94\u8be5\u662f\u50cf\u5b57\u7b26\u4e32\u4e00\u6837\u7684\u89c4\u5219\uff0c\u5373\u524d\u4e00\u4e2a\u5143\u7d20\u80fd\u6bd4\u8f83\u51fa\u5c31\u6309\u7167\u8be5\u7ed3\u679c\uff0c\u82e5\u76f8\u7b49\u5219\u6bd4\u8f83\u4e0b\u4e00\u4e2a\u5143\u7d20...</p> <pre><code>&gt;&gt;&gt; [3, 4, 5] &gt; [3, 3]\nTrue\n&gt;&gt;&gt; [3, 4, 5] &gt; [4, 3]\nFalse\n&gt;&gt;&gt; [3, 4, 5] &gt; [3, 4]\nTrue\n&gt;&gt;&gt; [3, 4, 5] &gt; [3, 5]\nFalse\n</code></pre>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part1/#lecture-14-circuits","title":"Lecture 14 Circuits","text":""},{"location":"Notes%20of%20Courses/CS61A/CS61A_part1/#1_24","title":"1","text":"<p>Hany\u8bb2\u8bbe\u8ba1\u7535\u8def(Design Circuits)\u7684\u5185\u5bb9\u4e2d\uff0c\u6784\u5efa\u547d\u9898\u903b\u8f91\u516c\u5f0f\u7684\u601d\u8def(step 1-3)\u503c\u5f97\u5b66\u4e60</p> <ol> <li>step 1. build truth-table for all possible input/output values</li> <li>step 2. build sub-expressions with and/not for each output column</li> <li>step 3. combine, two at a time, sub-expressions with an or</li> <li>step 4. draw circuit diagram</li> </ol> <p></p> <ol> <li>\u5148\u6839\u636e\u771f\u503c\u8868\u5199\u51fa\u5b50\u8868\u8fbe\u5f0f</li> <li>\u518d\u5c06\u5b50\u8868\u8fbe\u5f0f\u6790\u53d6(or)\u5230\u4e00\u8d77</li> </ol> a b c d 0 0 0 0 0 1 1 0 1 0 1 0 1 1 0 1 <p>\u4e0a\u9762\u771f\u503c\u8868\u4e2d\u9ad8\u4eae\u7684c\u76841\u7684\u8f93\u51fa\u503c\uff0c\u9700\u8981\u7684\u5b50\u8868\u8fbe\u5f0f\u5e94\u4e3a <code>c = a' \u00b7 b</code> (\u975ea\u4e14b)</p> a b c d 0 0 0 0 0 1 1 0 1 0 1 0 1 1 0 1 <p>\u540c\u7406\uff0c\u8fd9\u4e2a\u9ad8\u4eae\u7684\u8f93\u51fa\u503c\uff0c\u5bf9\u5e94\u7684\u5b50\u8868\u8fbe\u5f0f\u5e94\u4e3a <code>c = a \u00b7 b'</code> </p> <p>\u6700\u540e\uff0c\u518d\u6790\u53d6\u4e24\u4e2a\u5b50\u8868\u8fbe\u5f0f\uff0c\u5373\u5f97\u5230</p> <p><code>c = (a' \u00b7 b) + (a \u00b7 b')</code> </p>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part1/#2_14","title":"2","text":"<p>\u4e8c\u8fdb\u5236\u6570\u7684\u52a0\u6cd5\u9700\u8981\u6784\u5efa\u51fa\u67093\u4e2a\u8f93\u5165\u503c\u548c2\u4e2a\u8f93\u51fa\u503c\u7684\u7535\u8def</p> <p></p> <p></p>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part1/#3_11","title":"3","text":"<p>...okay, remember how the sub expressions work, you treat each output column separately, the d and the e. output column are completely independent of each other. we're going to identify wherever there's a one, and then here here here and here. we're going to build a sub expression using only and and not, and then we're going to combine those sub expressions using the or operator. and then once we have the final expression, of course we're going to draw some circuitry... </p> <p>\u611f\u89c9\u6709\u70b9\u7c7b\u4f3c\u4e0e\u5199\u51fa\u4e3b\u6790\u53d6\u8303\u5f0f</p>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part1/#4_8","title":"4","text":"<p>\u5199\u547d\u9898\u903b\u8f91\u516c\u5f0f\u7684\u6280\u5de7\uff1a</p> <ol> <li>\u53d8\u5143\u591a\u7684\u65f6\u5019\u53ef\u4ee5\u591a\u4e2a\u53d8\u5143\u5408\u6210\u4e00\u7ec4\uff0c\u7136\u540e\u7ed3\u5408\u8868\u683c\u5c55\u793a\u771f\u503c</li> <li>\u5199\u5b50\u8868\u8fbe\u5f0f\u65f6\u7684\u6280\u5de7\uff0c\u5982\u7531\u4e0a\u56fe\u7070\u8272\u533a\u57df\uff0c\u53ef\u4ee5\u53d1\u73b0\u4e0ea\u7684\u53d6\u503c\u65e0\u5173\uff0c\u6545\u53ef\u4ee5\u5199\u51fa\u5b50\u8868\u8fbe\u5f0f <code>b\u00b7c\u00b7d'</code></li> </ol>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part1/#lecture-14-qa","title":"Lecture 14 Q&amp;A","text":""},{"location":"Notes%20of%20Courses/CS61A/CS61A_part1/#1_25","title":"1","text":"<p>Lab 05 \u7684 Q10</p> <p>\u4e0d\u4f7f\u7528 built-in zip function:</p> <p></p> <p>John\u7684\u65b9\u6cd5\u6211\u8ba4\u4e3a\u5173\u952e\u4e4b\u5904\u5728\u4e8e\uff0c\u7528\u4e0b\u6807\u53bb\u8054\u7cfb\u4e24\u9897\u6811\u5bf9\u5e94\u7684\u6811\u679d/\u5206\u652f</p> <pre><code>def add_trees(t1, t2):\n    result_label = label(t1) + label(t2)\n    result_branches = []\n    i = 0\n    while i &lt; min(len(branches(t1)), len(branches(t1))):\n        b1, b2 = branches(t1)[i], branches(t2)[i]\n        new_branch = add_trees(b1, b2)\n        result_branches = result_branches + [new_branch]\n        i = i + 1\n    result_branches = result_branches + branches(t1)[i:]\n    result_branches = result_branches + branches(t2)[i:]\n    return tree(result_label, result_branches)\n</code></pre> <p>\u4f7f\u7528 built-in zip function:</p> <p></p> <p><code>zip()</code> \u53ef\u4ee5\u5c06\u591a\u4e2a\u5e8f\u5217\u4e2d\u7684\u5143\u7d20\u540c\u65f6\u63d0\u53d6\u51fa\u6765\uff0c\u6bd4\u5982\uff0ca\u5217\u8868\u67095\u4e2a\u5143\u7d20\uff0cb\u5217\u8868\u67098\u4e2a\u5143\u7d20\uff0c\u5219 \u5c06\u4e24\u8005\u8f93\u5165\u5230 <code>zip()</code> \u4e2d\uff0c\u4f1a\u5f97\u5230\u4e00\u4e2a\u542b\u6709a\u5217\u8868\u5168\u90e8\u5143\u7d20\u548cb\u5217\u8868\u524d5\u4e2a\u5143\u7d20\u7684\u5e8f\u5217\uff0c\u5e8f\u5217\u4e2d\u6bcf\u4e2a\u5143\u7d20\u4e3aa b\u5217\u8868\u4e2d\u4e0b\u6807\u5bf9\u5e94\u7684\u5143\u7d20(\u50cf\u4e0a\u56fe\u4e2d\u7684\u4e00\u6837)</p> <p>\u91cd\u8981\u7684\u662f\u53ef\u4ee5\u4f7f\u7528 \u5e8f\u5217\u63a8\u5bfc\u5f0f\uff0c\u6216\u8005 <code>for</code> \u8bed\u53e5(\u5229\u7528 <code>zip()</code> )\u5c06\u591a\u4e2a\u5e8f\u5217\u4e2d\u7684\u5143\u7d20\u4e00\u8d77\u63d0\u53d6\u51fa\u6765\uff0c\u5982</p> <pre><code>&gt;&gt;&gt; l1 = [1, 2, 3]\n&gt;&gt;&gt; l2 = [\"a\", \"b\", \"c\"]\n&gt;&gt;&gt; [[x, y] for x, y in zip(l1, l2)]\n[[1, 'a'], [2, 'b'], [3, 'c']]\n</code></pre> <p>\u90a3\u4e48\u4f7f\u7528 <code>zip</code> \u7684\u4ee3\u7801\u53ef\u4ee5\u5199\u6210\uff1a</p> <pre><code>def add_trees(t1, t2):\n    result_label = label(t1) + label(t2)\n    result_branches = [add_trees(b1, b2) for b1, b2 in zip(branches(t1), branches(t2))]\n    result_branches += branches(t1)[len(result_branches):] + branches(t2)[len(result_branches):]\n    return tree(result_label, result_branches)\n</code></pre>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part1/#lecture-15-mutable-values","title":"Lecture 15 Mutable Values","text":""},{"location":"Notes%20of%20Courses/CS61A/CS61A_part1/#1_26","title":"1","text":"<p>Quote</p> <p>...so objects represent information, they consist of data and behavior bundled together to create abstractions. objects can represent things, but also properties of things, or interactions, or processes, they're an extremely general concept, anything that has attributes can be represented as an object. a type of object is called a class, classes are first class values in python, they can be passed in as arguments to functions. and objects are the heart of object oriented programming, which is an approached programming, that allows us to organize large programs using a central metaphor, that a large program is just one big thing, it's a bunch of individual objects, communicating with each other by sending messages back and forth.</p> <p>...\u6240\u4ee5\u5bf9\u8c61\u8868\u793a\u4fe1\u606f\uff0c\u5b83\u4eec\u7531\u6346\u7ed1\u5728\u4e00\u8d77\u7684\u6570\u636e\u548c\u884c\u4e3a\u7ec4\u6210\uff0c\u4ee5\u521b\u5efa\u62bd\u8c61\u3002\u5bf9\u8c61\u53ef\u4ee5\u8868\u793a\u4e8b\u7269\uff0c\u4e5f\u53ef\u4ee5\u8868\u793a\u4e8b\u7269\u7684\u5c5e\u6027\u3001\u4ea4\u4e92\u6216\u8fc7\u7a0b\uff0c\u5b83\u4eec\u662f\u4e00\u4e2a\u975e\u5e38\u901a\u7528\u7684\u6982\u5ff5\uff0c\u4efb\u4f55\u5177\u6709\u5c5e\u6027\u7684\u4e1c\u897f\u90fd\u53ef\u4ee5\u8868\u793a\u4e3a\u5bf9\u8c61\u3002\u4e00\u79cd\u7c7b\u578b\u7684\u5bf9\u8c61\u88ab\u79f0\u4e3a\u7c7b\uff0c\u7c7b\u662fpython\u4e2d\u7684\u7b2c\u4e00\u4e2a\u7c7b\u503c\uff0c\u5b83\u4eec\u53ef\u4ee5\u4f5c\u4e3a\u53c2\u6570\u4f20\u9012\u7ed9\u51fd\u6570\u3002\u5bf9\u8c61\u662f\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b\u7684\u6838\u5fc3\uff0c\u8fd9\u662f\u4e00\u79cd\u63a5\u8fd1\u7f16\u7a0b\uff0c\u5b83\u5141\u8bb8\u6211\u4eec\u4f7f\u7528\u4e00\u4e2a\u4e2d\u5fc3\u9690\u55bb\u6765\u7ec4\u7ec7\u5927\u578b\u7a0b\u5e8f\uff0c\u5927\u578b\u7a0b\u5e8f\u53ea\u662f\u4e00\u4ef6\u5927\u4e8b\uff0c\u5b83\u662f\u4e00\u5806\u5355\u72ec\u7684\u5bf9\u8c61\uff0c\u901a\u8fc7\u6765\u56de\u53d1\u9001\u6d88\u606f\u6765\u76f8\u4e92\u901a\u4fe1\u3002</p>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part1/#2_15","title":"2","text":"<p><code>str</code> \u7684\u51e0\u4e2a\u65b9\u6cd5(\u6bcf\u79cd\u6570\u636e\u7c7b\u578b\u4e0b\u7684\u6570\u636e\u90fd\u662f\u4e00\u4e2a\u5bf9\u8c61\uff0c\u5982 <code>int</code> \u3001 <code>str</code> )</p> <p></p>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part1/#3_12","title":"3","text":"<p>\u6211\u8ba4\u4e3a\u8fd9\u662f\u4e00\u4e2a\u9002\u5408\u8bb0\u5fc6\u7684ascii\u7801\u8868</p> <p></p> <p>\u8fd9\u662f16\u8fdb\u5236\u7684ascii\u7801\u8868\uff1a</p> <pre><code>&gt;&gt;&gt; a = 'A'\n&gt;&gt;&gt; ord(a)\n65\n&gt;&gt;&gt; hex(ord(a))\n'0x41'\n</code></pre>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part1/#4_9","title":"4","text":"<ul> <li>\u4e00\u4e9b <code>list</code> \u7684\u65b9\u6cd5 </li> <li> <p>\u5217\u8868\u53ef\u4ee5\u540c\u65f6\u4fee\u6539\u591a\u4e2a\u503c\uff0c\u5982\u56fe\u4e2d <code>suit[0:2] = ['heart', 'diamond']</code></p> </li> <li> <p>\u5982\u679c\u5c06\u503c\u4e3a\u4e00\u4e2a\u5217\u8868\u7684\u53d8\u91cf\u8d4b\u503c\u7ed9\u53e6\u4e00\u4e2a\u53d8\u91cf\uff0c\u90a3\u4e48\u4e24\u4e2a\u53d8\u91cf\u5176\u5b9e\u4e0a\u90fd\u6307\u5411\u540c\u4e00\u4e2a\u5217\u8868\u5bf9\u8c61\uff0c\u901a\u8fc7\u4e8c\u8005\u4e4b\u4e00\u8fdb\u884c\u6539\u52a8\uff0c\u90fd\u662f\u5bf9\u5bf9\u8c61\u672c\u8eab\u6539\u52a8(\u663e\u793a\u53e6\u5916\u4e00\u4e2a\u53d8\u91cf\u7684\u503c\u65f6\u4f1a\u53d1\u73b0\u4e5f\u6539\u53d8\u4e86)</p> </li> </ul> <p></p> <p>\u4ece\u73af\u5883\u56fe\u4e2d\u4e5f\u53ef\u4ee5\u770b\u5230\uff0c\u4e24\u4e2a\u53d8\u91cf\u6307\u5411\u7684\u65f6\u901a\u8fc7\u4e00\u4e2a\u5217\u8868\uff0c\u4fee\u6539\u90fd\u662f\u5bf9\u4e8e\u5217\u8868\u5bf9\u8c61\u672c\u8eab\u8fdb\u884c\u4fee\u6539</p>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part1/#5_5","title":"5","text":"<p>\u6240\u6709\u6307\u5411\u540c\u4e00\u4e2a\u5bf9\u8c61\u7684\u53d8\u91cf(\u7684\u503c\uff0c\u5373\u6307\u5411\u7684\u5bf9\u8c61)\u90fd\u4f1a\u88ab\u4e00\u4e2a\u6539\u53d8(mutation)\u5f71\u54cd</p> <p>\u5e76\u4e14\uff0c\u53ea\u6709\u53ef\u53d8\u7684\u7c7b\u578b\u624d\u80fd\u8fd9\u6837\uff1alist \u548c dictionary</p> <p>All name thar refer to the same object are affected by a mutation</p> <p>Only objects of mutable types can change: lists &amp; dictionaries</p>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part1/#6_4","title":"6","text":"<p>\u53ef\u4ee5\u4f7f\u7528\u5217\u8868\u5207\u7247\u53bb\u6765 \u589e\u6dfb \u6216 \u5220\u51cf \u6216 \u66ff\u6362 \u5217\u8868\u4e2d\u7684\u5143\u7d20</p> <pre><code>&gt;&gt;&gt; list = [1, 2]\n&gt;&gt;&gt; list[4:6] = [4, 5]\n&gt;&gt;&gt; list\n[1, 2, 4, 5]\n&gt;&gt;&gt; list[3:] = [6, 7, 8]\n&gt;&gt;&gt; list\n[1, 2, 4, 6, 7, 8]\n&gt;&gt;&gt; list[2:] = []\n&gt;&gt;&gt; list\n[1, 2]\n</code></pre>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part1/#7_1","title":"7","text":"<ul> <li>\u88ab\u9017\u53f7\u5206\u9694\u7684\u51e0\u4e2a\u6570\u636e\u4e5f\u4f1a\u88ab\u8ba4\u4e3a\u5143\u7ec4(tuple) (\u53ef\u8ba4\u4e3a\u662f\u7701\u7565\u4e86\u62ec\u53f7\u7684\u5143\u7ec4)</li> <li>\u7528\u4e00\u4e2a\u5217\u8868\u6765\u8c03\u7528 tuple \u7684\u6784\u9020\u51fd\u6570\uff0c\u4f1a\u5f97\u5230\u542b\u6709\u76f8\u540c\u987a\u5e8f\u7684\u76f8\u540c\u5143\u7d20\u7684\u5143\u7ec4</li> <li>\u9017\u53f7 <code>,</code> \u53ef\u4ee5\u4f4d\u4e8e\u5143\u7ec4\u7684\u6700\u540e(\u5e94\u8be5\u4e5f\u53ef\u4ee5\u4f4d\u4e8e\u5217\u8868\u548c\u5b57\u5178\u7684\u6700\u540e\uff0c\u4e4b\u524d\u6709\u8bd5\u8fc7)</li> <li>\u7b2c\u4e09\u70b9\u548c\u7b2c\u4e00\u70b9\u7ed3\u5408\u8d77\u6765\u53ef\u4ee5\u5f97\u5230\uff1a<code>2,</code> \u548c <code>2</code> \u662f\u4e0d\u4e00\u6837\u7684(\u524d\u8005\u662f\u4e00\u4e2a\u5143\u7d20\uff0c\u540e\u8005\u662f\u4e00\u4e2a\u6574\u6570)</li> </ul>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part1/#8","title":"8","text":"<p>\u5143\u7ec4\u80fd\u4f5c\u4e3a\u5b57\u5178\u7684 key:</p> <pre><code>&gt;&gt;&gt; {(1, 2): 3}\n{(1, 2): 3}\n</code></pre> <p>\u4f46\u5143\u7ec4\u4e2d\u4e5f\u4e0d\u80fd\u542b\u6709\u5217\u8868:</p> <pre><code>&gt;&gt;&gt; {(1, [2]): 3}\nTraceback (most recent call last):\n  File \"&lt;stdin&gt;\", line 1, in &lt;module&gt;\nTypeError: unhashable type: 'list'\n</code></pre>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part1/#9","title":"9","text":"<ul> <li>\u53ef\u53d8\u5bf9\u8c61\u53ef\u4ee5\u901a\u8fc7 \u5bf9\u8c61\u7a81\u53d8(Object mutation) \u6765\u6539\u53d8\u503c\uff0c\u4e5f\u53ef\u4ee5\u901a\u8fc7 Name change \u6765\u6539\u53d8(\u5e94\u8be5\u662f\u76f4\u63a5\u6539\u53d8\u6307\u5411\u7684\u5bf9\u8c61)\uff0c\u800c\u4e0d\u53ef\u53d8\u5bf9\u8c61(\u5982\u5143\u7ec4\u7b49)\u53ea\u80fd\u901a\u8fc7 Name change \u6765\u6539\u53d8</li> <li>\u5982\u679c\u4e0d\u53ef\u53d8\u5bf9\u8c61\u542b\u6709\u53ef\u53d8\u5bf9\u8c61\u7684\u5143\u7d20\uff0c\u8fd9\u4e2a\u53ef\u53d8\u5bf9\u8c61\u53ef\u4ee5\u6539\u53d8(\u4e2a\u4eba\u8ba4\u4e3a\uff0c\u53ef\u4ee5\u7c7b\u6bd4\u6210c\u4e2d\u7684\u6307\u9488\u5e38\u91cf\uff0c\u6307\u9488\u672c\u8eab\u4e0d\u6539\u53d8\uff0c\u4f46\u6307\u5411\u7684\u503c\u80fd\u6539\u53d8)</li> </ul>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part1/#10","title":"10","text":"<p>\u6052\u7b49\u8fd0\u7b97\u7b26(Identity Operators) <code>is</code></p> <p>\u7528\u4e8e\u5224\u65ad\u4e24\u4e2a\u53d8\u91cf\u662f\u5426\u6307\u5411\u540c\u4e00\u4e2a\u5bf9\u8c61</p> <p></p> <p></p>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part1/#11","title":"11","text":"<p>\u540c\u4e00\u4e2a\u51fd\u6570\u7684\u9ed8\u8ba4\u53c2\u6570\u662f\u540c\u4e00\u4e2a\u5bf9\u8c61\uff0c\u5373\u4f7f\u591a\u6b21\u8c03\u7528\u51fd\u6570\uff0c\u4f7f\u7528\u9ed8\u8ba4\u53c2\u6570\u65f6\u4f7f\u7528\u7684\u90fd\u662f\u540c\u4e00\u4e2a\u5bf9\u8c61</p> <p>\u56e0\u6b64\u5982\u679c\u662f\u53ef\u53d8\u5bf9\u8c61\u7c7b\u578b\uff0c\u8981\u6ce8\u610f==\u4fee\u6539\u8fd9\u4e2a\u5bf9\u8c61\u4f1a\u5bfc\u81f4\u4e4b\u540e\u8c03\u7528\u51fd\u6570\u65f6(\u5982\u679c\u4f7f\u7528\u7684\u8bdd)\u9ed8\u8ba4\u53c2\u6570\u4f1a\u4e0e\u4e4b\u524d\u4e0d\u4e00\u6837</p>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part1/#12","title":"12","text":"<p>list\u7684\u5404\u79cd\u8fd0\u7b97</p> <ul> <li> <p><code>.append()</code> \u65b9\u6cd5\uff0c\u5c06\u4f20\u5165\u7684\u53c2\u6570\u6dfb\u52a0\u9053\u5217\u8868\u5c3e\u90e8(\u5982\u679c\u4f20\u5165\u7684\u662f\u4e00\u4e2a\u5217\u8868\uff0c\u5c31\u5c06\u8be5\u5217\u8868(\u540c\u4e00\u5bf9\u8c61)\u5b58\u5165\u5c3e\u90e8)</p> <p></p> </li> <li> <p><code>.extend()</code> \u65b9\u6cd5\uff0c\u5e94\u8be5\u662f\u4f20\u5165\u4e00\u4e2a\u5217\u8868(\u5143\u7ec4\u6216\u8bb8\u4e5f\u53ef\u4ee5\uff1f(\u8bd5\u4e86\uff0c\u53ef\u4ee5))\uff0c\u5c06\u5217\u8868\u4e2d\u7684\u5143\u7d20\u4f9d\u6b21\u6dfb\u52a0\u5230\u539f\u5217\u8868\u5c3e\u90e8</p> <p></p> </li> <li> <p>\u52a0\u6cd5 \u548c \u5207\u7247 \uff0c\u4e24\u8005\u90fd\u4f1a\u521b\u5efa\u51fa\u4e00\u4e2a\u65b0\u7684\u5217\u8868\uff0c\u56e0\u6b64\u4e0b\u56fe\u4e2d <code>a[1] = 9</code> \u5e76\u6ca1\u6709\u4f7f \u5217\u8868s \u7684\u5143\u7d20\u6539\u53d8\uff0c\u4f46\u7531\u4e8e \u5217\u8868a \u7684\u7b2c\u4e09\u4e2a\u5143\u7d20\u662f\u5217\u8868\uff0c\u540c\u65f6\u4e5f\u662f \u5217\u8868b \u7684\u7b2c\u4e8c\u4e2a\u5143\u7d20\uff0c\u56e0\u6b64\u901a\u8fc7 \u5217\u8868b \u4fee\u6539\u65f6\uff0c\u4e5f\u4f1a\u8ba9\u539f\u672c\u7684 \u5217\u8868t \u6539\u53d8</p> <p></p> </li> <li> <p><code>list()</code> \u5217\u8868\u7684\u6784\u9020\u65b9\u6cd5\uff0c\u53ef\u4ee5\u4f20\u5165\u4e00\u4e2a\u5217\u8868(\u5143\u7ec4\u548c <code>range()</code> \u4e5f\u53ef\u4ee5)\uff0c(\u5982\u679c\u4f20\u5165\u7684\u662f\u4e00\u4e2a\u5217\u8868)\u4f1a\u6784\u5efa\u51fa\u4e00\u4e2a\u4e0e\u539f\u5217\u8868\u4e00\u6837\u7684\u65b0\u5217\u8868</p> <p></p> </li> <li> <p>\u5217\u8868\u5207\u7247\u7684\u8d4b\u503c\uff0c\u53ef\u4ee5\u5bf9\u5217\u8868\u8fdb\u884c \u6dfb\u52a0(\u6dfb\u7684\u6bd4\u5220\u7684\u591a) / \u66ff\u6362(\u6dfb\u7684\u5220\u7684\u4e00\u6837\u591a) / \u5220\u51cf(\u6dfb\u7684\u6bd4\u5220\u7684\u5c11) \u64cd\u4f5c\uff0c\u5982\u4e0b\u56fe\u4e2d</p> <ul> <li><code>s[0:0] = t</code> \u5c06t\u4e2d\u5143\u7d20\u52a0\u5230(\u585e\u5165)s\u7684\u5934\u90e8(0\u53f7\u4f4d\u7f6e)</li> <li><code>s[3:] = t</code> \u5c064\u53f7\u5143\u7d20\u5220\u53bb\uff0c\u5e76\u5728\u8be5\u4f4d\u7f6e \u585e\u5165 t\u4e2d\u7684\u5143\u7d20</li> </ul> <p></p> </li> <li> <ul> <li><code>.pop()</code> \u65b9\u6cd5\uff0c\u4ece\u5217\u8868\u4e2d\u62ff\u51fa\u5e76\u8fd4\u56de\u6700\u540e\u4e00\u4e2a\u5143\u7d20</li> <li><code>.remove()</code> \u65b9\u6cd5\uff0c\u4f20\u5165\u4e00\u4e2a\u53c2\u6570\uff0c\u5728\u5217\u8868\u4e2d\u5220\u53bb\u7b2c\u4e00\u4e2a\u8ddf\u4f20\u5165\u53c2\u6570\u76f8\u540c\u7684\u5143\u7d20</li> <li>\u7528\u5207\u7247\u8d4b\u503c\u7684\u65b9\u6cd5\u53bb\u5220\u9664\u5217\u8868\u4e2d\u7684\u5143\u7d20</li> </ul> <p></p> </li> </ul>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part1/#13","title":"13","text":"<pre><code>t = [1, 2, 3]\nt[1:3] = [t]\nt.extend(t)\n</code></pre> <p>\u6700\u7ec8\u5f97\u5230 <code>t = [1, [...], 1, [...]]</code> \u7684\u7ed3\u679c\u7684\u539f\u56e0\uff0c\u4e2a\u4eba\u7684\u7406\u89e3\uff1a\u7531\u4e0a\u56fe\u4e2d\u7684\u73af\u5883\u56fe\u53ef\u4ee5\u770b\u5230\uff0c\u5217\u8868\u4e2d\u4f1a\u6709 \u65e0\u7a77\u5faa\u73af\u7684\u6307\u5411 \u4f1a\u4e00\u76f4\u540e\u6307\u5411\u524d\u518d\u4ece\u524d\u8d70\u5230\u540e\uff0c\u56e0\u6b64\u4f1a\u5f97\u5230 <code>...</code> \u7684\u4e1c\u897f</p>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part1/#lecture-15-qa","title":"Lecture 15 Q&amp;A","text":""},{"location":"Notes%20of%20Courses/CS61A/CS61A_part1/#1_27","title":"1","text":"<p>\u5207\u7247\u8d4b\u503c\u9700\u8981\u662f\u4e00\u4e2a\u5217\u8868(\u53ef\u80fd\u5143\u7ec4\u6216\u8005\u5b57\u7b26\u4e32 \u6216\u5176\u4ed6\u5bb9\u5668(container)\u4e5f\u884c\uff1f)\uff0c\u5982\u4e0a\u56fe\u4e2d <code>s[0:0] = 5</code> \u4f1a\u62a5\u9519\uff0c\u5e94\u8be5\u5199\u6210 <code>s[0:0] = [5]</code></p>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part1/#2_16","title":"2","text":"<p>(\u53ef\u4ee5\u4f5c\u4e3a\u4e0a\u4e00\u70b9\u7684\u8865\u5145)</p> <p>Quote</p> <p>good question. so why isn't it that t becomes an element of s, and the reason is that's just how slice assignment works. it's that it takes a container full of elements and it doesn't put that whole container in s, instead of puts the elements of that container in s.</p> <p>\u597d\u95ee\u9898\u3002\u4e3a\u4ec0\u4e48t\u4e0d\u6210\u4e3as\u7684\u4e00\u4e2a\u5143\u7d20\uff0c\u539f\u56e0\u662f\u5207\u7247\u8d4b\u503c\u5c31\u662f\u8fd9\u6837\u5de5\u4f5c\u7684\u3002\u5b83\u53d6\u4e00\u4e2a\u88c5\u6ee1\u5143\u7d20\u7684\u5bb9\u5668\uff0c\u4e0d\u662f\u5c06\u6574\u4e2a\u5bb9\u5668\u653e\u5728s\u4e2d\uff0c\u800c\u662f\u5c06\u8be5\u5bb9\u5668\u7684\u5143\u7d20\u653e\u5728s\u3002</p>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part1/#3_13","title":"3","text":"<p>\u4e0b\u6807\u9009\u62e9(selector)\u4e0d\u4f1a\u6539\u53d8\u5217\u8868\u7684\u957f\u5ea6</p> <p>\u800c\u5207\u7247\u8d4b\u503c\u4f1a\u6539\u53d8\u5217\u8868\u7684\u957f\u5ea6</p> <p>Quote</p> <p>...there's only t and this used to be three elements long, it's still three elements long, element assignment never changes the length of the list, it just changes what's in it. slice assignment is different, it changes the length of the list, it replaces an existing slice with some new elements.</p> <p>...\u53ea\u6709t\uff0c\u5b83\u8fc7\u53bb\u6709\u4e09\u4e2a\u5143\u7d20\u957f\uff0c\u73b0\u5728\u4ecd\u7136\u6709\u4e09\u4e2a\u5143\u4ef6\u957f\uff0c\u5143\u7d20\u8d4b\u503c\u6c38\u8fdc\u4e0d\u4f1a\u6539\u53d8\u5217\u8868\u7684\u957f\u5ea6\uff0c\u5b83\u53ea\u662f\u6539\u53d8\u5176\u4e2d\u7684\u5185\u5bb9\u3002\u5207\u7247\u8d4b\u503c\u4e0d\u540c\uff0c\u5b83\u6539\u53d8\u4e86\u5217\u8868\u7684\u957f\u5ea6\u3002\u5b83\u7528\u4e00\u4e9b\u65b0\u5143\u7d20\u66ff\u6362\u4e86\u73b0\u6709\u7684\u5207\u7247\u3002</p>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part1/#4_10","title":"4","text":"<p>Hany\u5173\u4e8e\u5207\u7247\u7684\u6bd4\u55bb</p> <p>Quote</p> <p>...what you're going to do, is think about it this way, so on the left hand side with the slicing you say, grab those elements, throw them out, and then take whatever's on the right hand side, and shove them into the position, so they can be longer, shorter, it doesn't matter.</p> <p>...\u4f60\u8981\u505a\u7684\u662f\u8fd9\u6837\u60f3\uff0c\u6240\u4ee5\u5728\u5207\u7247\u7684\u5de6\u624b\u8fb9\uff0c\u6293\u4f4f\u8fd9\u4e9b\u5143\u7d20\uff0c\u628a\u5b83\u4eec\u6254\u51fa\u53bb\uff0c\u7136\u540e\u62ff\u8d70\u53f3\u624b\u8fb9\u7684\u4efb\u4f55\u4e1c\u897f\uff0c\u628a\u5b83\u4eec\u63a8\u5230\u8fd9\u4e2a\u4f4d\u7f6e\uff0c\u8fd9\u6837\u5b83\u4eec\u5c31\u53ef\u4ee5\u66f4\u957f\u3001\u66f4\u77ed\uff0c\u8fd9\u65e0\u5173\u7d27\u8981\u3002</p>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part1/#5_6","title":"5","text":"<p>\u5173\u4e8e\u5143\u7ec4tuple\u5b58\u5728\u548c\u88ab\u4f7f\u7528\u7684\u539f\u56e0</p> <p>Quote</p> <p>John:</p> <p>...but the more common reason is that, people are designing their programs so that they don't have to think about mutation back, when you could just describe every function by its domain range and behavior, life was easier. i'm not saying it was easy, there were plenty of like tricky recursion problems and stuff like that, but at least you knew that, if you called a function, the only thing you really have to worry about is what does it return, not what does it change. and if you use tuples everywhere, since they can't be changed, you kind of don't have to think about what does it change, you just have to think about what it returns, whereas if you're using lists everywhere, if you're not careful, the consequence of calling a function will be not only that it changes something, or that it returns something but also that it changes something, and that's like twice as many things to keep track of when you're writing a big program, and trying to understand how all the parts work, so that's like the main reason to have some immutable version of a sequence, is just to like make sure you write programs in such a way, that nothing can change anything else, except by passing in arguments and returning them.</p> <p> </p> <p>Hany:</p> <p>it's it's called side effects, the thing that's scary when you call a function is there some side effect, that it that goes beyond just what was passed and what was returned it modified a list, and i, how did i, how do i know that, that how do i control that, and so the tuples are nice...so the tools are nice, because it's essentially like you're locking your data, right, it's giving you data security yeah.</p> <p>John:</p> <p>...\u4f46\u66f4\u5e38\u89c1\u7684\u539f\u56e0\u662f\uff0c\u4eba\u4eec\u6b63\u5728\u8bbe\u8ba1\u4ed6\u4eec\u7684\u7a0b\u5e8f\uff0c\u8fd9\u6837\u4ed6\u4eec\u5c31\u4e0d\u5fc5\u518d\u8003\u8651\u7a81\u53d8\u4e86\uff0c\u5f53\u4f60\u53ef\u4ee5\u901a\u8fc7\u6bcf\u4e2a\u51fd\u6570\u7684\u57df\u8303\u56f4\u548c\u884c\u4e3a\u6765\u63cf\u8ff0\u5b83\u65f6\uff0c\u751f\u6d3b\u5c31\u66f4\u5bb9\u6613\u4e86\u3002\u6211\u5e76\u4e0d\u662f\u8bf4\u8fd9\u5f88\u5bb9\u6613\uff0c\u6709\u5f88\u591a\u7c7b\u4f3c\u68d8\u624b\u7684\u9012\u5f52\u95ee\u9898\u548c\u7c7b\u4f3c\u7684\u4e1c\u897f\uff0c\u4f46\u81f3\u5c11\u4f60\u77e5\u9053\uff0c\u5982\u679c\u4f60\u8c03\u7528\u4e00\u4e2a\u51fd\u6570\uff0c\u4f60\u771f\u6b63\u9700\u8981\u62c5\u5fc3\u7684\u662f\u5b83\u4f1a\u8fd4\u56de\u4ec0\u4e48\uff0c\u800c\u4e0d\u662f\u6539\u53d8\u4ec0\u4e48\u3002\u5982\u679c\u4f60\u5728\u4efb\u4f55\u5730\u65b9\u90fd\u4f7f\u7528\u5143\u7ec4\uff0c\u56e0\u4e3a\u5b83\u4eec\u662f\u4e0d\u53ef\u66f4\u6539\u7684\uff0c\u4f60\u4e0d\u5fc5\u8003\u8651\u5b83\u4f1a\u6539\u53d8\u4ec0\u4e48\uff0c\u4f60\u53ea\u9700\u8981\u8003\u8651\u5b83\u4f1a\u8fd4\u56de\u4ec0\u4e48\uff0c\u800c\u5982\u679c\u4f60\u5728\u6240\u6709\u5730\u65b9\u90fd\u4f7f\u7528\u5217\u8868\uff0c\u5982\u679c\u4f60\u4e0d\u5c0f\u5fc3\uff0c\u8c03\u7528\u4e00\u4e2a\u51fd\u6570\u7684\u540e\u679c\u4e0d\u4ec5\u662f\u5b83\u4f1a\u6539\u53d8\u4e00\u4e9b\u4e1c\u897f\uff0c\u6216\u8005\u5b83\u4f1a\u8fd4\u56de\u4e00\u4e9b\u4e1c\u897f\uff0c\u5f53\u4f60\u5728\u5199\u4e00\u4e2a\u5927\u7a0b\u5e8f\uff0c\u5e76\u8bd5\u56fe\u4e86\u89e3\u6240\u6709\u90e8\u5206\u662f\u5982\u4f55\u5de5\u4f5c\u7684\u65f6\u5019\uff0c\u8fd9\u5c31\u50cf\u662f\u9700\u8981\u8ddf\u8e2a\u7684\u4e8b\u60c5\u7684\u4e24\u500d\uff0c\u6240\u4ee5\u8fd9\u5c31\u50cf\u662f\u62e5\u6709\u4e00\u4e2a\u4e0d\u53ef\u53d8\u7248\u672c\u7684\u5e8f\u5217\u7684\u4e3b\u8981\u539f\u56e0\uff0c\u5c31\u662f\u8981\u786e\u4fdd\u4f60\u4ee5\u8fd9\u6837\u7684\u65b9\u5f0f\u5199\u7a0b\u5e8f\uff0c\u9664\u4e86\u4f20\u9012\u53c2\u6570\u5e76\u8fd4\u56de\u5b83\u4eec\u4e4b\u5916\uff0c\u6ca1\u6709\u4ec0\u4e48\u80fd\u6539\u53d8\u5176\u4ed6\u4efb\u4f55\u4e8b\u60c5\u3002</p> <p> </p> <p>Hany:</p> <p>\u5b83\u88ab\u79f0\u4e3a\u526f\u4f5c\u7528\uff0c\u5f53\u4f60\u8c03\u7528\u4e00\u4e2a\u51fd\u6570\u65f6\uff0c\u53ef\u6015\u7684\u662f\u6709\u4e00\u4e9b\u526f\u4f5c\u7528\uff0c\u5b83\u8d85\u51fa\u4e86\u4f20\u9012\u548c\u8fd4\u56de\u7684\u5185\u5bb9\uff0c\u5b83\u4fee\u6539\u4e86\u4e00\u4e2a\u5217\u8868\uff0c\u6211\uff0c\u6211\u662f\u600e\u4e48\u77e5\u9053\u7684\uff0c\u6211\u662f\u5982\u4f55\u63a7\u5236\u7684\uff0c\u6240\u4ee5\u5143\u7ec4\u5f88\u597d...\u6240\u4ee5\u8fd9\u4e9b\u5de5\u5177\u5f88\u597d\uff0c\u56e0\u4e3a\u5b83\u672c\u8d28\u4e0a\u5c31\u50cf\u4f60\u5728\u9501\u5b9a\u4f60\u7684\u6570\u636e\uff0c\u5bf9\u5427\uff0c\u5b83\u7ed9\u4e86\u4f60\u6570\u636e\u5b89\u5168\u6027\u3002</p>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part1/#6_5","title":"6","text":"<p>Hany\u548cJohn\u5173\u4e8e \u7c7b(Class) \u548c \u5bf9\u8c61(Object) \u7684\u533a\u522b\u7684\u89e3\u91ca</p> <p>(\u5c06 \u7c7b \u6bd4\u4f5c \u84dd\u56fe \uff0c\u5c06 \u5bf9\u8c61 \u6bd4\u4f5c \u4f9d\u636e\u84dd\u56fe\u4fee\u5efa\u597d\u7684\u5177\u4f53\u7684\u623f\u5b50)</p> <p>Quote</p> <p>Hany:</p> <p>so the question is what is the difference between a class and an object. the class is, so here's how i think about it, think about a blueprint for a house, is the class, and the house is the thing you build from the blueprint. okay so i can have a class date, um that is the sort of the definition of the data i'm storing, and the functionality of it, and then i can instantiate, i can create as many of those objects as i want, so they're essentially realizations of the thing that you've created, so the class is, just it's sort of like a definition, nothing exists, and then when you create an object, well now i can sort of do things with it. so there's a class of type list, and then i can define lists, i can define one list, two lists, 50 lists whatever i want, yeah.</p> <p> </p> <p>John:</p> <p>yeah, and that analogy is nice because you can live in a house, but you can't live in a blueprint, like if you just have the class, you can't really do anything with it, until you construct one of the things that it describes, build the house and then you can go live.</p> <p> </p> <p>Hany:</p> <p>and you can go live in it, right. and it's sort of like a function definition, right, you define a function, but doesn't do anything, it's just a definition, it just hangs out in the global frame somewhere, but then when you call it, ah now we're actually doing something.</p> <p>Hany:</p> <p>\u6240\u4ee5\u95ee\u9898\u662f\u7c7b\u548c\u5bf9\u8c61\u4e4b\u95f4\u7684\u533a\u522b\u662f\u4ec0\u4e48\u3002\u8bfe\u5802\u662f\u8fd9\u6837\u7684\uff0c\u6240\u4ee5\u6211\u662f\u8fd9\u6837\u60f3\u7684 \u60f3\u60f3\u623f\u5b50\u7684\u84dd\u56fe\uff0c\u5b83\u5c31\u662f\u9636\u7ea7\uff0c\u623f\u5b50\u5c31\u662f\u4f60\u6839\u636e\u84dd\u56fe\u5efa\u9020\u7684\u4e1c\u897f\u3002\u597d\u7684\uff0c\u6211\u53ef\u4ee5\u6709\u4e00\u4e2a\u7c7b\u7684\u65e5\u671f\uff0c\u55ef\uff0c\u8fd9\u662f\u6211\u5b58\u50a8\u7684\u6570\u636e\u7684\u5b9a\u4e49\uff0c\u4ee5\u53ca\u5b83\u7684\u529f\u80fd\uff0c\u7136\u540e\u6211\u53ef\u4ee5\u5b9e\u4f8b\u5316\uff0c\u6211\u53ef\u4ee5\u521b\u5efa\u6211\u60f3\u8981\u7684\u4efb\u610f\u591a\u7684\u5bf9\u8c61\uff0c\u6240\u4ee5\u5b83\u4eec\u672c\u8d28\u4e0a\u662f\u4f60\u521b\u5efa\u7684\u4e1c\u897f\u7684\u5b9e\u73b0\uff0c\u6240\u4ee5\u7c7b\u662f\uff0c\u5b83\u6709\u70b9\u50cf\u4e00\u4e2a\u5b9a\u4e49\uff0c\u4ec0\u4e48\u90fd\u4e0d\u5b58\u5728\uff0c\u7136\u540e\u5f53\u4f60\u521b\u5efa\u4e00\u4e2a\u5bf9\u8c61\u65f6\uff0c\u73b0\u5728\u6211\u53ef\u4ee5\u7528\u5b83\u505a\u4e00\u4e9b\u4e8b\u60c5\u4e86\uff0c\u6240\u4ee5\u6709\u4e00\u7c7b\u7c7b\u578b\u5217\u8868\uff0c\u7136\u540e\u6211\u53ef\u4ee5\u5b9a\u4e49\u5217\u8868\uff0c\u6211\u53ef\u4ee5\u5b9a\u4e49\u4e00\u4e2a\u5217\u8868\uff0c\u4e24\u4e2a\u5217\u8868\uff0c50\u4e2a\u5217\u8868\uff0c\u6211\u60f3\u8981\u7684\uff0c\u662f\u7684\u3002</p> <p> </p> <p>John:</p> <p>\u662f\u7684\uff0c\u8fd9\u4e2a\u6bd4\u55bb\u5f88\u597d\uff0c\u56e0\u4e3a\u4f60\u53ef\u4ee5\u4f4f\u5728\u623f\u5b50\u91cc\uff0c\u4f46\u4f60\u4e0d\u80fd\u4f4f\u5728\u84dd\u56fe\u91cc\uff0c\u5c31\u50cf\u4f60\u53ea\u6709\u8bfe\uff0c\u4f60\u771f\u7684\u4e0d\u80fd\u7528\u5b83\u505a\u4efb\u4f55\u4e8b\u60c5\uff0c\u76f4\u5230\u4f60\u5efa\u9020\u4e86\u5b83\u63cf\u8ff0\u7684\u4e1c\u897f\u4e4b\u4e00\uff0c\u5efa\u9020\u4e86\u623f\u5b50\uff0c\u7136\u540e\u4f60\u5c31\u53ef\u4ee5\u751f\u6d3b\u4e86\u3002</p> <p> </p> <p>Hany:</p> <p>\u4f60\u53ef\u4ee5\u4f4f\u5728\u91cc\u9762\uff0c\u5bf9\u5427\u3002\u8fd9\u6709\u70b9\u50cf\u51fd\u6570\u5b9a\u4e49\uff0c\u5bf9\u5427\uff0c\u4f60\u5b9a\u4e49\u4e86\u4e00\u4e2a\u51fd\u6570\uff0c\u4f46\u4ec0\u4e48\u90fd\u4e0d\u505a\uff0c\u5b83\u53ea\u662f\u4e00\u4e2a\u5b9a\u4e49\uff0c\u5b83\u53ea\u662f\u6302\u5728\u5168\u5c40\u6846\u67b6\u7684\u67d0\u4e2a\u5730\u65b9\uff0c\u4f46\u5f53\u4f60\u8c03\u7528\u5b83\u65f6\uff0c\u554a\uff0c\u73b0\u5728\u6211\u4eec\u5b9e\u9645\u4e0a\u5728\u505a\u4e00\u4e9b\u4e8b\u60c5\u3002</p>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part1/#hw-03","title":"HW 03","text":""},{"location":"Notes%20of%20Courses/CS61A/CS61A_part1/#1_28","title":"1","text":"<p>\u51cf\u5c11\u9012\u5f52\u4e2d\u7684\u5197\u4f59\u90e8\u5206</p> <p>Quote</p> <p>Arms-length recursion (sidenote)</p> <p>Before we get started, a quick comment on recursion with tree data structures. Consider the following function.</p> <pre><code>def min_depth(t):\n    \"\"\"A simple function to return the distance between t's root and its closest leaf\"\"\"\n    if is_leaf(t):\n        return 0 # Base case---the distance between a node and itself is zero\n    h = float('inf') # Python's version of infinity\n    for b in branches(t):\n        if is_leaf(b): return 1 # !!!\n        h = min(h, 1 + min_depth(b))\n    return h\n</code></pre> <p>The line flagged with <code>!!!</code> is an \"arms-length\" recursion violation. Although our code works correctly when it is present, by performing this check we are doing work that should be done by the next level of recursion\u2014we already have an if-statement that handles any inputs to <code>min_depth</code> that are leaves, so we should not include this line to eliminate redundancy in our code.</p> <pre><code>def min_depth(t):\n    \"\"\"A simple function to return the distance between t's root and its closest leaf\"\"\"\n    if is_leaf(t):\n        return 0\n    h = float('inf')\n    for b in branches(t):\n        # Still works fine!\n        h = min(h, 1 + min_depth(b))\n    return h\n</code></pre> <p>Arms-length recursion is not only redundant but often complicates our code and obscures the functionality of recursive functions, making writing recursive functions much more difficult. We always want our recursive case to be handling one and only one recursive level.</p> <p>\u81c2\u957f\u9012\u5f52 (\u65c1\u6ce8)</p> <p>\u5728\u6211\u4eec\u5f00\u59cb\u4e4b\u524d\uff0c\u5148\u7b80\u8981\u4ecb\u7ecd\u4e00\u4e0b\u6811\u6570\u636e\u7ed3\u6784\u7684\u9012\u5f52\u3002\u8003\u8651\u4ee5\u4e0b\u51fd\u6570\u3002</p> <pre><code>def min_depth(t):\n    \"\"\"A simple function to return the distance between t's root and its closest leaf\"\"\"\n    if is_leaf(t):\n        return 0 # Base case---the distance between a node and itself is zero\n    h = float('inf') # Python's version of infinity\n    for b in branches(t):\n        if is_leaf(b): return 1 # !!!\n        h = min(h, 1 + min_depth(b))\n    return h\n</code></pre> <p>\u8be5\u884c\u6807\u8bb0\u4e3a <code>!!!</code> \u662f\u4e00\u79cd\u201c\u81c2\u957f\u201d\u9012\u5f52\u51b2\u7a81\u3002\u5c3d\u7ba1\u6211\u4eec\u7684\u4ee3\u7801\u5728\u5b58\u5728\u65f6\u53ef\u4ee5\u6b63\u5e38\u5de5\u4f5c\uff0c\u4f46\u901a\u8fc7\u6267\u884c\u6b64\u68c0\u67e5\uff0c\u6211\u4eec\u6b63\u5728\u505a\u4e0b\u4e00\u7ea7\u9012\u5f52\u5e94\u8be5\u505a\u7684\u5de5\u4f5c\u2014\u2014\u6211\u4eec\u5df2\u7ecf\u6709\u4e86\u4e00\u4e2aif\u8bed\u53e5\uff0c\u5b83\u5904\u7406 <code>min_depth</code> \u7684\u4efb\u4f55\u53f6\u5b50\u8f93\u5165\uff0c\u6240\u4ee5\u6211\u4eec\u4e0d\u5e94\u8be5\u5305\u62ec\u8fd9\u4e00\u884c\u6765\u6d88\u9664\u4ee3\u7801\u4e2d\u7684\u5197\u4f59\u3002</p> <pre><code>def min_depth(t):\n    \"\"\"A simple function to return the distance between t's root and its closest leaf\"\"\"\n    if is_leaf(t):\n        return 0\n    h = float('inf')\n    for b in branches(t):\n        # Still works fine!\n        h = min(h, 1 + min_depth(b))\n    return h\n</code></pre> <p>\u81c2\u957f\u9012\u5f52\u4e0d\u4ec5\u662f\u591a\u4f59\u7684\uff0c\u800c\u4e14\u7ecf\u5e38\u4f7f\u6211\u4eec\u7684\u4ee3\u7801\u590d\u6742\u5316\uff0c\u5e76\u6a21\u7cca\u9012\u5f52\u51fd\u6570\u7684\u529f\u80fd\uff0c\u4f7f\u7f16\u5199\u9012\u5f52\u51fd\u6570\u53d8\u5f97\u66f4\u52a0\u56f0\u96be\u3002\u6211\u4eec\u603b\u662f\u5e0c\u671b\u6211\u4eec\u7684\u9012\u5f52\u60c5\u51b5\u662f\u5904\u7406\u4e00\u4e2a\u5e76\u4e14\u53ea\u6709\u4e00\u4e2a\u9012\u5f52\u7ea7\u522b\u3002</p>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part1/#2_17","title":"2","text":"<p>Q2 \u4e2d\u6211\u5c06\u8ba1\u7b97\u529b\u77e9\u7684\u4ee3\u7801\u72ec\u7acb\u6210\u4e86\u4e00\u4e2a\u51fd\u6570</p> <pre><code>def balanced(m):\n    ...\n    def torque(s):\n        assert is_arm(s), \"must call torque on a arm\"\n        return length(s) * total_weight(end(s))\n    ...\n</code></pre> code <pre><code>def balanced(m):\n    \"\"\"Return whether m is balanced.\n\n    &gt;&gt;&gt; t, u, v = examples()\n    &gt;&gt;&gt; balanced(t)\n    True\n    &gt;&gt;&gt; balanced(v)\n    True\n    &gt;&gt;&gt; w = mobile(arm(3, t), arm(2, u))\n    &gt;&gt;&gt; balanced(w)\n    False\n    &gt;&gt;&gt; balanced(mobile(arm(1, v), arm(1, w)))\n    False\n    &gt;&gt;&gt; balanced(mobile(arm(1, w), arm(1, v)))\n    False\n    &gt;&gt;&gt; from construct_check import check\n    &gt;&gt;&gt; # checking for abstraction barrier violations by banning indexing\n    &gt;&gt;&gt; check(HW_SOURCE_FILE, 'balanced', ['Index'])\n    True\n    \"\"\"\n    \"*** YOUR CODE HERE ***\"\n    def torque(s):\n        assert is_arm(s), \"must call torque on a arm\"\n        return length(s) * total_weight(end(s))\n\n    if is_planet(m):\n        return True\n    else:\n        if torque(left(m)) != torque(right(m)):\n            return False\n        else:\n            return balanced(end(left(m))) and balanced(end(right(m)))\n</code></pre>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part1/#3_14","title":"3","text":"<p>Q5\u4e2d\uff0c\u4f7f\u7528\u6784\u9020\u4e00\u4e2ahelper\u51fd\u6570\u6765\u4f20\u9012\u7ed3\u679c\u5217\u8868</p> <pre><code>def preorder(t):\n    ...\n    def preorder_helper(t, res):\n        res += [label(t)]\n        for branch in branches(t):\n            res += preorder_helper(branch, [])\n        return res\n    ...\n</code></pre> code <pre><code>def preorder(t):\n    \"\"\"Return a list of the entries in this tree in the order that they\n    would be visited by a preorder traversal (see problem description).\n\n    &gt;&gt;&gt; numbers = tree(1, [tree(2), tree(3, [tree(4), tree(5)]), tree(6, [tree(7)])])\n    &gt;&gt;&gt; preorder(numbers)\n    [1, 2, 3, 4, 5, 6, 7]\n    &gt;&gt;&gt; preorder(tree(2, [tree(4, [tree(6)])]))\n    [2, 4, 6]\n    \"\"\"\n    \"*** YOUR CODE HERE ***\"\n    def preorder_helper(t, res):\n        res += [label(t)]\n        # if is_leaf(t):\n        #     return res\n        # else:\n        #     for branch in branches(t):\n        #         res += preorder_helper(branch, res)\n        #     return res\n\n        for branch in branches(t):\n            res += preorder_helper(branch, [])\n        return res\n    return preorder_helper(t, [])\n</code></pre>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part1/#4_11","title":"4","text":"<p>Q6</p> <p>(\u5c45\u7136\u80fd\u53ea\u7528\u4e00\u884c)</p> <pre><code>def has_path(t, word):\n    assert len(word) &gt; 0, 'no path for empty word.'\n    \"*** YOUR CODE HERE ***\"\n    return word[0] == label(t) and True if len(word) == 1 else True in [has_path(b, word[1:]) for b in branches(t)]\n</code></pre>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part1/#5_7","title":"5","text":"<p>Q8</p> <p>\u9898\u76ee\u662f\u9700\u8981\u6c42x\u548cy\u7684\u5dee\u503c\u7684\u8303\u56f4</p> <p>\u65b9\u6cd5\u5c31\u662f\u5c06y\u53d6\u8d1f\u6570\uff0c\u4e0a/\u4e0b\u754c\u7684\u8d1f\u503c\u4f5c\u4e3a\u65b0\u4e0b/\u4e0a\u754c\uff0c\u7136\u540e\u4f7f\u7528\u4e4b\u524d\u7684\u52a0\u6cd5\u51fd\u6570</p> <p>(\u7531\u4e8e\u6ca1\u7406\u89e3\u9898\u76ee\u610f\u601d\u88ab\u5361\u4e86\u5f88\u4e45...)</p> <pre><code>def sub_interval(x, y):\n    \"\"\"Return the interval that contains the difference between any value in x\n    and any value in y.\"\"\"\n    \"*** YOUR CODE HERE ***\"\n    return add_interval(x, interval(-upper_bound(y), -lower_bound(y)))\n</code></pre>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part1/#homework-3-hints","title":"Homework 3 Hints","text":""},{"location":"Notes%20of%20Courses/CS61A/CS61A_part1/#1_29","title":"1","text":"<p>\u52a9\u6559\u5728\u63d0\u793aQ5\u65f6\uff0c\u4e5f\u8bf4\u5230\u4e86\uff0c\u8981\u5047\u8bbe/\u5047\u60f3\u9012\u5f52\u80fd\u8fd4\u56de\u6b63\u786e\u7684\u7ed3\u679c</p> <p>Quote</p> <p>so when we look at this problem. we see that the preordering of any tree always starts at the root, so it makes sense to make this our starting point, we want to add the current label to our pre ordering. so we want to maintain a list of the pre order, and we want to add our current label to the first element in our pre ordering. after we do that, we want to go through all of our children, so remember that we always go down the left most child, all the way to the right most child, in order. so we do pre order of this child, and then we do pre order of this left child, and then we do pre order the right child. so it makes sense to recurs down each child from left most to right most. and think about what you want to do with the recursive result, remember that by the cursive leap of faith, we, remember that the pre ordering of any child, is assumed to return the correct value. so think about what you expect the pre ordering of any child to be, and think about what you want to do with our result, and just a hint, that the call of pre order on any child is going to return a list, because pre ordering returns a list, based on the numbers there. so think about what you want to do the recursive result, and then maybe appending them or extending them, you want to return the pre ordering. so first you add the current label, then you add the results from each pre order on each child, and then we return the pre ordering of all of them. after you do all of this think about your base case, is there a base case you need to handle, maybe when the tree is a leaf, or maybe something similar to that. and I think that's enough for this problem good luck.</p> <p>\u5728\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u65f6\uff0c\u6211\u4eec\u53ef\u4ee5\u770b\u5230\uff0c\u4efb\u4f55\u6811\u7684\u524d\u5e8f\u904d\u5386\u59cb\u7ec8\u4ece\u6839\u8282\u70b9\u5f00\u59cb\uff0c\u56e0\u6b64\u5c06\u6839\u8282\u70b9\u4f5c\u4e3a\u6211\u4eec\u7684\u8d77\u59cb\u70b9\u662f\u6709\u610f\u4e49\u7684\u3002\u6211\u4eec\u5e0c\u671b\u5c06\u5f53\u524d\u8282\u70b9\u7684\u6807\u7b7e\u6dfb\u52a0\u5230\u6211\u4eec\u7684\u524d\u5e8f\u904d\u5386\u5217\u8868\u4e2d\uff0c\u6240\u4ee5\u6211\u4eec\u9700\u8981\u7ef4\u62a4\u4e00\u4e2a\u524d\u5e8f\u904d\u5386\u7684\u5217\u8868\uff0c\u5e76\u5c06\u5f53\u524d\u8282\u70b9\u7684\u6807\u7b7e\u6dfb\u52a0\u5230\u524d\u5e8f\u904d\u5386\u5217\u8868\u7684\u7b2c\u4e00\u4e2a\u4f4d\u7f6e\u3002\u5728\u8fd9\u4e4b\u540e\uff0c\u6211\u4eec\u9700\u8981\u904d\u5386\u6240\u6709\u7684\u5b50\u8282\u70b9\u3002\u8bf7\u8bb0\u4f4f\uff0c\u6211\u4eec\u603b\u662f\u4ece\u6700\u5de6\u8fb9\u7684\u5b50\u8282\u70b9\u5f00\u59cb\uff0c\u4e00\u76f4\u904d\u5386\u5230\u6700\u53f3\u8fb9\u7684\u5b50\u8282\u70b9\uff0c\u6309\u987a\u5e8f\u8fdb\u884c\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u9996\u5148\u5bf9\u6700\u5de6\u8fb9\u7684\u5b50\u8282\u70b9\u8fdb\u884c\u524d\u5e8f\u904d\u5386\uff0c\u7136\u540e\u5bf9\u5de6\u5b50\u8282\u70b9\u8fdb\u884c\u524d\u5e8f\u904d\u5386\uff0c\u63a5\u7740\u5bf9\u53f3\u5b50\u8282\u70b9\u8fdb\u884c\u524d\u5e8f\u904d\u5386\u3002\u8fd9\u6837\uff0c\u4ece\u6700\u5de6\u8fb9\u5230\u6700\u53f3\u8fb9\u7684\u5b50\u8282\u70b9\u9012\u5f52\u8c03\u7528\u662f\u6709\u610f\u4e49\u7684\u3002\u63a5\u4e0b\u6765\uff0c\u8003\u8651\u5982\u4f55\u5904\u7406\u9012\u5f52\u7ed3\u679c\u3002\u8bf7\u8bb0\u4f4f\uff0c\u6309\u7167\u9012\u5f52\u7684\u201c\u8df3\u8dc3\u4fe1\u4ef0\u201d\uff0c\u6211\u4eec\u5047\u5b9a\u4efb\u4f55\u5b50\u8282\u70b9\u7684\u524d\u5e8f\u904d\u5386\u90fd\u8fd4\u56de\u4e86\u6b63\u786e\u7684\u503c\u3002\u56e0\u6b64\uff0c\u9700\u8981\u601d\u8003\u5bf9\u9012\u5f52\u7ed3\u679c\u8981\u505a\u4ec0\u4e48\uff0c\u8bb0\u4f4f\u8c03\u7528\u5b50\u8282\u70b9\u7684\u524d\u5e8f\u904d\u5386\u4f1a\u8fd4\u56de\u4e00\u4e2a\u5217\u8868\uff0c\u6839\u636e\u8fd9\u4e00\u70b9\u601d\u8003\u5982\u4f55\u5904\u7406\u9012\u5f52\u7ed3\u679c\u3002\u4e00\u79cd\u53ef\u80fd\u7684\u65b9\u5f0f\u662f\u5c06\u5b83\u4eec\u6dfb\u52a0\u6216\u6269\u5c55\u5230\u5f53\u524d\u524d\u5e8f\u904d\u5386\u5217\u8868\u4e2d\u3002\u6700\u7ec8\uff0c\u6211\u4eec\u9700\u8981\u8fd4\u56de\u524d\u5e8f\u904d\u5386\u7684\u7ed3\u679c\u3002\u5177\u4f53\u6765\u8bf4\uff0c\u64cd\u4f5c\u987a\u5e8f\u662f\uff1a\u9996\u5148\u6dfb\u52a0\u5f53\u524d\u6807\u7b7e\uff0c\u7136\u540e\u6dfb\u52a0\u6bcf\u4e2a\u5b50\u8282\u70b9\u7684\u524d\u5e8f\u904d\u5386\u7ed3\u679c\uff0c\u6700\u540e\u8fd4\u56de\u6240\u6709\u5b50\u8282\u70b9\u7684\u524d\u5e8f\u904d\u5386\u7ed3\u679c\u3002\u5728\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u65f6\uff0c\u8fd8\u9700\u8981\u8003\u8651\u57fa\u672c\u60c5\u51b5\u3002\u662f\u5426\u6709\u9700\u8981\u5904\u7406\u7684\u57fa\u672c\u60c5\u51b5\uff0c\u4f8b\u5982\u5f53\u6811\u662f\u53f6\u5b50\u8282\u70b9\u65f6\uff0c\u6216\u8005\u7c7b\u4f3c\u60c5\u51b5\u3002\u5728\u8003\u8651\u5b8c\u6240\u6709\u8fd9\u4e9b\u65b9\u9762\u540e\uff0c\u5c31\u53ef\u4ee5\u7740\u624b\u89e3\u51b3\u95ee\u9898\u4e86\u3002\u795d\u4f60\u597d\u8fd0\uff01</p>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part1/#lecture-16-mutable-functions","title":"Lecture 16 Mutable Functions","text":""},{"location":"Notes%20of%20Courses/CS61A/CS61A_part1/#1_30","title":"1","text":"<p>\u51fd\u6570\u4e2d\u7684\u8d4b\u503c\u8bed\u53e5\uff0c\u53ea\u80fd\u5f71\u54cd\u5230\u51fd\u6570\u6240\u5728\u7684frame\uff0c\u4e0d\u80fd\u5f71\u54cd\u5230\u6bcd\u6846\u67b6\u91cc\u7684\u53d8\u91cf</p>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part1/#2_18","title":"2","text":"<p><code>nonlocal</code> \u8bed\u53e5</p> <p>\u611f\u89c9\u662f\u80fd\u5728\u4e00\u4e2a\u51fd\u6570\u4e2d\u58f0\u660e\u8981\u4f7f\u7528 \u975e\u5f53\u524d\u6846\u67b6\u5185\u7684\u53d8\u91cf(\u540d)\uff0c\u4ece\u800c\u4e4b\u540e\u5728\u4f7f\u7528\u7684\u65f6\u5019\uff0c\u5c31\u4e0d\u4f1a\u5728\u5f53\u524d\u7684\u6846\u67b6\u5185\u521b\u5efa\u8fd9\u4e2a\u53d8\u91cf\uff0c\u800c\u662f\u5728\u4e0a\u7ea7\u6846\u67b6\u4e2d\u5bfb\u627e</p>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part1/#3_15","title":"3","text":"<p>\u5728\u51fd\u6570\u4f53\u4e2d\uff0c\u540d\u79f0\u7684\u6240\u6709\u5b9e\u4f8b\u90fd\u5fc5\u987b\u5f15\u7528\u540c\u4e00\u6846\u67b6</p> <p>\u6240\u4ee5\u4e0d\u80fd\u50cf\u56fe\u91cc\u9762\u4e00\u6837\uff0c\u4e00\u5f00\u59cb\u4f7f\u7528\u4e86\u6bcd\u6846\u67b6\u4e2d\u7684\u503c--\u7ed1\u5b9a\u4e86\u6bcd\u6846\u67b6\u4e2d\u7684\u53d8\u91cf\uff0c\u800c\u540e\u53c8\u5728\u672a\u4f7f\u7528 <code>nonlocal</code> \u8bed\u53e5\u7684\u60c5\u51b5\u4e0b\uff0c\u8fdb\u884c\u8d4b\u503c</p>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part1/#4_12","title":"4","text":"<p>\u53e6\u4e00\u79cd\u5b9e\u73b0\u4f7f\u7528\u5e76\u66f4\u6539\u6bcd\u6846\u67b6\u4e2d\u7684\u6570\u636e\u5e76\u4e14\u4e0d\u4f7f\u7528 <code>nonlocal</code> \u8bed\u53e5\u7684\u65b9\u6cd5</p> <p></p> <p>\u5728\u6bcd\u6846\u67b6\u4e2d\u4f7f\u7528\u53ef\u6539\u53d8\u7684\u6570\u636e\u7c7b\u578b\uff0c\u5982\u5217\u8868\u6216\u5b57\u5178\uff0c\u7136\u540e\u5728\u5b50\u51fd\u6570\u4e2d\u5bf9\u5176\u7684\u5143\u7d20\u8fdb\u884c\u66f4\u6539\uff0c\u4ee5\u8fbe\u5230\u9700\u6c42</p>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part1/#5_8","title":"5","text":"<p>\u53c2\u8003\u900f\u660e\u5ea6 (Referential Transparency)</p> <p></p> <p>\u8fd9\u4e2a\u6982\u5ff5\u597d\u50cf\u662f\u6307\uff0c\u5982\u679c\u8868\u8fbe\u5f0f\u662f\u53c2\u8003\u900f\u660e(referentially transparent)\u7684\uff0c\u90a3\u4e48\u5728\u76f4\u63a5\u7528\u4e0e\u8fd4\u56de\u503c\u76f8\u540c\u7684\u503c\u66ff\u6362\u8868\u8fbe\u5f0f\u4e2d\u7684\u51fd\u6570\u540e\uff0c\u80fd\u5f97\u5230\u548c\u539f\u6765\u4e00\u6837\u7684\u7ed3\u679c\uff0c\u5373\u4e0d\u6539\u53d8\u7a0b\u5e8f\u7684\u610f\u4e49(not change the meaning of a program)</p> <p>\u800c\u7a81\u53d8(mutation)\u53ef\u80fd\u4f1a\u7834\u574f\u8868\u8fbe\u5f0f\u7684\u53c2\u8003\u900f\u660e\uff0c\u56e0\u4e3a\u7a81\u53d8\u53ef\u4ee5\u6539\u53d8\u73af\u5883(\u4e2d\u7684\u5c5e\u6027/\u503c)\uff0c</p> <p>\u6bd4\u5982</p> <pre><code>def f(x):\n    x = 4\n    def g(y):\n        def h(z):\n            nonlocal x\n            x = x + 1\n            return x + y + z\n        return h\n    return g\na = f(1)\nb = a(2)\ntotal = b(3) + b(4)\n</code></pre> <p>\u8fd0\u884c\u51fa\u6765\uff0c<code>total</code> \u7ed3\u679c\u662f22(10+12)</p> <p>\u4f46\u5982\u679c\u5c06 <code>b(3)</code> \u66ff\u6362\u6210 <code>10</code></p> <pre><code>def f(x):\n    x = 4\n    def g(y):\n        def h(z):\n            nonlocal x\n            x = x + 1\n            return x + y + z\n        return h\n    return g\na = f(1)\nb = a(2)\ntotal = 10 + b(4)\n</code></pre> <p><code>total</code> \u7ed3\u679c\u5c31\u53d8\u6210\u4e8621(10+11)</p> <p>\u8fd9\u662f\u7531\u4e8e\uff0c\u524d\u8005 <code>b(3)</code> \u5728\u8c03\u7528 <code>h</code> \u51fd\u6570\u7684\u65f6\u5019\uff0c\u6539\u52a8\u4e86\u6bcd\u6846\u67b6\u4e2d\u7684 <code>x</code> \u7684\u503c\uff0c\u4f7f\u5f97\u4e24\u5904\u4ee3\u7801\u4e2d <code>b(4)</code> \u5728\u8c03\u7528 <code>h</code> \u51fd\u6570\u65f6\uff0c\u4f7f\u7528\u7684\u503c\u4e0d\u4e00\u6837\uff0c\u56e0\u6b64<code>total</code> \u7ed3\u679c\u5c31\u4e0d\u4e00\u6837</p>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part1/#6_6","title":"6","text":"<p>\u8fd9\u8282\u8bfe\u6700\u540e\uff0c\u6559\u6388\u63d0\u5230\u7684\u4e00\u9898</p> <p></p> <p>\u6559\u6388\u63d0\u5230\uff0c\u5728\u5f00\u59cb\u505a\u8fd9\u9898\u65f6\uff0c\u53ef\u4ee5\u5bfb\u627ebase cases\u662f\u4ec0\u4e48\uff0c</p> <p>\u7136\u540e\u4ece\u8f93\u5165\u793a\u4f8b\u4e2d\u53ef\u4ee5\u5f97\u5230\uff0cbase case\u662f\u5f53\u5176\u4e2d\u4e00\u4e2a\u4e3a\u96f6\u7684\u65f6\u5019</p> <p>\u5f00\u59cb\u5199\u4ee3\u7801\u65f6\uff0c\u6211\u662f\u5148\u6ce8\u610f\u5230\u6700\u540e\u7684 <code>return</code> \u7684\u8bed\u53e5\u7684\u5f62\u5f0f\uff0c\u518d\u8054\u60f3\u5230\u6559\u6388\u8bf4\u5230\u7684 tree recursion \uff0c\u6240\u4ee5\u6211\u611f\u89c9\u62ec\u53f7\u5916\u5e94\u8be5\u662f\u4e00\u4e2a <code>min</code> \uff0c\u7136\u540e\u62ec\u53f7\u91cc\u9762\u662f\u6bd4\u8f83\u4e24\u79cd\u9012\u5f52\u8fd4\u56de\u7684\u503c\u54ea\u4e2a\u66f4\u5c0f\uff0c\u6240\u4ee5\u6211\u5c31\u6682\u4e14\u586b\u4e0a\uff1a</p> <pre><code>def combo(a, b):\n    if a == 0 or b == 0:\n        return a + b\n    elif ...:\n        return combo(...)\n    return min(combo(a // 10, b) * 10 + a % 10, combo(a, b // 10) * 10 + b % 10)\n</code></pre> <p>\u4f46\u662f <code>elif</code> \u4e4b\u540e\u586b\u4ec0\u4e48\u4e00\u76f4\u6ca1\u60f3\u5230\uff0c(\u56e0\u4e3a\u4e0d\u77e5\u9053\u6709\u76f8\u540c\u6570\u5b57\u8fd8\u6709\u4e0d\u540c\u7684\u6570\u5b57\u8981\u600e\u4e48\u5206\u5272\u600e\u4e48\u5904\u7406\uff0c\u4ee5\u53caa\u53ea\u5269\u4e00\u79cd\u6570\u5b57\u7684\u60c5\u51b5\u4e0b\uff0c\u600e\u4e48\u5224\u65ad\u653e\u5728b\u524d\u9762\u8fd8\u662f\u540e\u9762\uff0c\u611f\u89c9\u8981\u5206\u975e\u5e38\u591a\u79cd\u60c5\u51b5\u7279\u522b\u590d\u6742\uff0c\u4e4b\u540e\u53d1\u73b0\u5176\u5b9e\u60c5\u51b5\u5f88\u7b80\u5355...)</p> <p>\u76f4\u5230\u4e09\u5929\u4e4b\u540e</p> <p>\u5f00\u59cb\u7ee7\u7eed\u601d\u8003\u8fd9\u9898\u65f6\uff0c\u6211\u5f00\u59cb\u601d\u8003\u5230\u8fbe base case \u7684\u6700\u540e\u4e00\u79cd\u60c5\u51b5\uff0c\u5373 a \u662f\u4e2a\u4e00\u4f4d\u6570\uff0c\u800c b \u662f 321\uff0c\u60f3\u5230\u5982\u679ca\u548cb\u67d0\u4e2a\u6570\u4f4d\u76f8\u540c\uff0c\u90a3\u4e48\u53ef\u4ee5\u60f3\u5feb\u901f\u6392\u5e8f\u4e00\u6837\u5c06b\u5206\u6210\u4e24\u8fb9\u53bb\u9012\u5f52(\u4f46\u662f\u597d\u50cf\u5bf9\u6570\u5b57\u5206\u5272\u5f88\u96be\u64cd\u4f5c\u8d77\u6765)\uff0c\u7136\u540e\u7531\u5206\u5272\u5c31\u8fdb\u4e00\u6b65\u5f00\u59cb\u60f3a\u548cb\u7684\u6700\u540e\u4e00\u4f4d\u53bb\u6bd4\u8f83(\u5c06b\u5206\u5272\u6210\u524d\u9762\u548c\u6700\u540e\u4e00\u4f4d)\uff0c\u90a3\u4e48(\u8981\u4f7f\u5f97\u7ed3\u679c\u6700\u5c0f)\u5e94\u8be5\u662f\u5c06\u5927\u7684\u90a3\u4e2a\u653e\u5728\u6700\u540e\uff0c\u6240\u4ee5\u5f00\u59cb\u5c1d\u8bd5\u7f16\u5199\u4ee3\u7801</p> <p>\u4f46\u662f\u53d1\u73b0 <code>elif</code> \u540e\u586b\u4e0d\u4e0a\u4e1c\u897f\uff0c\u6240\u4ee5\u6253\u7b97\u5148\u4e0d\u6309\u5b83\u63d0\u4f9b\u7684\u7ed3\u6784\u81ea\u5df1\u5199\uff1a</p> <pre><code>def combo(a, b):\n    if a == 0 or b == 0:\n        return a + b\n    else:\n        if a % 10 &lt; b % 10:\n            ...\n        else:\n            ...\n    # elif ...:\n    #     return combo(...)\n    # return min(combo(a // 10, b) * 10 + a % 10, combo(a, b // 10) * 10 + b % 10)\n</code></pre> <p>\u7136\u540e\u53d1\u73b0 <code>...</code> \u5904\u7684\u4ee3\u7801\u5c31\u662f\u6700\u540e <code>return</code> \u4e2d\u4e4b\u524d\u5199\u7684\u4ee3\u7801\uff0c\u5e76\u4e14\u80fd\u5b9e\u73b0\u5bf9\u5e94\u7684\u5904\u7406\u529f\u80fd\uff0c\u6240\u4ee5 <code>elif</code> \u540e\u5e94\u8be5\u8003\u8651\u7684\u662fa b\u6700\u540e\u4e00\u4f4d\u76f8\u540c\u7684\u60c5\u51b5\uff0c\u6545</p> <pre><code>def combo(a, b):\n    \"\"\"Return the smallest integer with all of the digits of a and b (in order).\n\n    &gt;&gt;&gt; combo(531, 432)    # 45312 contains both _531_ and 4_3_2.\n    45312\n    &gt;&gt;&gt; combo(531, 4321)   # 45321 contains both _531_ and 4_321.\n    45321\n    &gt;&gt;&gt; combo(1234, 9123)  # 91234 contains both _1234 and 9123_.\n    91234\n    &gt;&gt;&gt; combo(0, 321)      # The number 0 has no digits, so 0 is not in the result.\n    321\n    \"\"\"\n    if a == 0 or b == 0:\n        return a + b\n    elif a % 10 == b % 10:\n        return combo(a // 10, b // 10) * 10 + a % 10\n    return min(combo(a // 10, b) * 10 + a % 10, combo(a, b // 10) * 10 + b % 10)\n</code></pre> <p>\u7136\u540e\u534a\u4fe1\u534a\u7591\u5730\u8fdb\u884c\u4e86\u6d4b\u8bd5\uff0c\u53d1\u73b0\u8fd9\u7adf\u7136\u5c31\u662f\u7b54\u6848</p> <p>\u6700\u540e\u603b\u7ed3\u53cd\u601d\u4e86\u4e00\u4e0b\uff0c\u9012\u5f52\u8fd8\u662f\u5f97\u7262\u8bb0\u8981\u5047\u8bbe\u51fd\u6570\u80fd\u8fd4\u56de\u6240\u9700\u8981\u7684\u4e1c\u897f(\u6211\u611f\u89c9\u8fd9\u6837\u53ef\u80fd\u5c31\u66f4\u597d\u80fd\u60f3\u5230\u5206\u5272\u51fa\u6700\u540e\u4e00\u4f4d)</p>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part1/#lecture-16-qa","title":"Lecture 16 Q&amp;A","text":""},{"location":"Notes%20of%20Courses/CS61A/CS61A_part1/#1_31","title":"1","text":"<p>\u5217\u8868\u7684 <code>+=</code> \u548c <code>=</code> \u7684\u4e00\u4e9b\u533a\u522b\uff0c</p> <p>\u56fe\u4e2d\u5de6\u4fa7\uff0c<code>a = a + b</code> \u53ef\u4ee5\u7406\u89e3\u6210\uff0c\u5148\u662f <code>a + b</code> \u5f97\u5230\u4e00\u4e2a\u65b0\u7684\u5217\u8868\uff0c\u7136\u540e\u5c06\u53d8\u91cf\u540d <code>a</code> \u7ed1\u5b9a\u5230\u8fd9\u4e2a\u65b0\u7684\u5217\u8868\u4e0a\uff0c\u6240\u4ee5 <code>c</code> \u7ed1\u5b9a\u7684\u539f\u5217\u8868\u6ca1\u6709\u88ab\u6539\u53d8</p> <p>\u800c\u53f3\u4fa7\uff0c<code>a += b</code> \u53ef\u4ee5\u7c7b\u6bd4\u6210 <code>a.extend(b)</code> \uff0c\u662f\u5bf9 <code>a</code> \u6307\u5411\u7684\u5217\u8868\u672c\u8eab\u8fdb\u884c\u4e86\u4fee\u6539\uff0c\u6240\u4ee5\u901a\u8fc7 <code>c</code> \u4e5f\u80fd\u770b\u5230\u5217\u8868\u6539\u53d8\u4e86</p>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part1/#lab-06","title":"Lab 06","text":""},{"location":"Notes%20of%20Courses/CS61A/CS61A_part1/#1_32","title":"1","text":"<p>Q4\uff0c\u6211\u91c7\u7528\u5148\u53d6\u51fa\u548c <code>entry</code> \u76f8\u540c\u7684\u5143\u7d20\u7684\u4e0b\u6807\u5b58\u5728\u4e00\u4e2a\u5217\u8868\u4e2d\uff0c\u518d\u5c06\u8fd9\u4e9b\u4e0b\u6807\u5e94\u7528\u5230 <code>insert</code> \u65b9\u6cd5\u4e0a</p> <pre><code>def insert_items(lst, entry, elem):\n    entries_indices = [i for i in range(len(lst)) if lst[i] == entry]\n    for index in entries_indices:\n        lst.insert(index, elem)\n    return lst\n</code></pre> <p>\u4f46\u662f\u53d1\u73b0\u6709\u4e24\u4e2a\u5730\u65b9\u9700\u8981\u4fee\u6b63\uff1a</p> <ul> <li> <p>\u63d2\u5165\u65f6\uff0c\u7531\u4e8e\u662f\u5728\u76f8\u5e94\u7684\u5143\u7d20\u4e4b\u540e\u63d2\u5165\uff0c\u6240\u4ee5 <code>index</code> \u9700\u8981\u6539\u6210 <code>index + 1</code> </p> </li> <li> <p>\u7531\u4e8e\u5982\u679c\u6309\u7167\u4ece\u524d\u5230\u540e\u63d2\u5165\u65b0\u7684\u5143\u7d20\uff0c\u90a3\u4e48\u5728\u524d\u9762\u63d2\u5165\u65f6\uff0c\u4f1a\u5f15\u8d77\u540e\u9762\u7684\u5143\u7d20\u7684\u4e0b\u6807\u7684\u6539\u53d8\uff0c\u6240\u4ee5\u6211\u6539\u6210\u4ece\u540e\u5f80\u524d\u63d2\u5165\uff0c\u5373\u628a\u5b58\u50a8\u4e0b\u6807\u7684\u5217\u8868\u987a\u5e8f\u53cd\u8fc7\u6765</p> <pre><code>    entries_indices = entries_indices[::-1]\n</code></pre> </li> </ul> code <pre><code>def insert_items(lst, entry, elem):\n    \"\"\"\n    &gt;&gt;&gt; test_lst = [1, 5, 8, 5, 2, 3]\n    &gt;&gt;&gt; new_lst = insert_items(test_lst, 5, 7)\n    &gt;&gt;&gt; new_lst\n    [1, 5, 7, 8, 5, 7, 2, 3]\n    &gt;&gt;&gt; large_lst = [1, 4, 8]\n    &gt;&gt;&gt; large_lst2 = insert_items(large_lst, 4, 4)\n    &gt;&gt;&gt; large_lst2\n    [1, 4, 4, 8]\n    &gt;&gt;&gt; large_lst3 = insert_items(large_lst2, 4, 6)\n    &gt;&gt;&gt; large_lst3\n    [1, 4, 6, 4, 6, 8]\n    &gt;&gt;&gt; large_lst3 is large_lst\n    True\n    \"\"\"\n    \"*** YOUR CODE HERE ***\"\n    entries_indices = [i for i in range(len(lst)) if lst[i] == entry]\n    entries_indices = entries_indices[::-1]\n    for index in entries_indices:\n        lst.insert(index + 1, elem)\n    return lst\n</code></pre>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part1/#lecture-17-iterations","title":"Lecture 17 Iterations","text":""},{"location":"Notes%20of%20Courses/CS61A/CS61A_part1/#1_33","title":"1","text":"<ul> <li> <p><code>iter()</code> \u4f20\u5165\u4e00\u4e2a\u53ef\u4ee5\u8fed\u4ee3\u7684\u6570\u636e(\u6bd4\u5982\u5217\u8868)\uff0c\u7136\u540e\u8fd4\u56de\u4e00\u4e2a\u5bf9\u5e94\u7684\u8fed\u4ee3\u5668(\u6211\u611f\u89c9\u5e94\u8be5\u662f\u4e00\u4e2a <code>iter</code> \u7c7b\u578b\u7684\u6784\u9020\u51fd\u6570)\uff0c\u5e76\u4e14\u8fed\u4ee3\u5668\u7684\u521d\u59cb\u7684\u4f4d\u7f6e\u4f4d\u4e8e\u6570\u636e(\u5982\u5217\u8868)\u7684\u8d77\u59cb\u7aef(\u7b2c\u4e00\u4e2a\u5143\u7d20\u4e4b\u524d)\uff0c\u5e76\u4e14\u5982\u679c\u4e24\u6b21\u5bf9\u540c\u4e00\u4e2a\u5217\u8868\u8c03\u7528 <code>iter()</code> \u51fd\u6570\uff0c\u8fd4\u56de\u7684\u662f\u4e24\u4e2a\u4e0d\u540c\u7684\u8fed\u4ee3\u5668\uff0c\u5373</p> <pre><code>&gt;&gt;&gt; s = [3, 4, 5]\n&gt;&gt;&gt; t = iter(s)\n&gt;&gt;&gt; next(t)\n3\n&gt;&gt;&gt; next(t)\n4\n&gt;&gt;&gt; u = iter(s)\n&gt;&gt;&gt; next(u)\n3\n&gt;&gt;&gt; next(t)\n5\n&gt;&gt;&gt; next(u)\n4\n</code></pre> </li> <li> <p><code>next()</code> \u4f20\u5165\u4e00\u4e2a\u8fed\u4ee3\u5668(\u4f20\u5165\u53ef\u8fed\u4ee3\u6570\u636e\u4f1a\u62a5\u9519)\uff0c\u8fd4\u56de\u8fed\u4ee3\u5668\u7684\u540e\u4e00\u4e2a\u5143\u7d20\uff0c\u5e76\u5411\u524d\u79fb\u52a8\u4e00\u4e2a\u4f4d\u7f6e\uff0c\u5373\u4e0b\u6b21\u518d\u8c03\u7528 <code>next()</code> \u5e76\u4f20\u5165\u540c\u4e00\u4e2a\u8fed\u4ee3\u5668\uff0c\u8fd4\u56de\u7684\u4f1a\u662f\u53e6\u4e00\u4e2a\u5143\u7d20</p> </li> </ul>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part1/#2_19","title":"2","text":"<p>\u5982\u679c\u7528 <code>list()</code> \u53bb\u4f20\u5165\u4e00\u4e2a\u8fed\u4ee3\u5668\uff0c\u90a3\u4e48\u4f1a\u8fd4\u56de\u4e00\u4e2a\u5217\u8868\u5305\u542b\u8fed\u4ee3\u5668\u4e4b\u540e\u7684\u6240\u6709\u5143\u7d20\uff0c\u4e0d\u5305\u542b\u4e4b\u524d\u7684\uff0c\u5e76\u4e14\u4f1a\u5c06\u8fed\u4ee3\u5668\u7684\u4f4d\u7f6e\u79fb\u52a8\u5230\u5217\u8868\u7684\u672b\u7aef</p> <pre><code>&gt;&gt;&gt; s = [[1, 2], 3, 4, 5]\n&gt;&gt;&gt; s\n[[1, 2], 3, 4, 5]\n&gt;&gt;&gt; t = iter(s)\n&gt;&gt;&gt; next(t)\n[1, 2]\n&gt;&gt;&gt; next(t)\n3\n&gt;&gt;&gt; list(t)\n[4, 5]\n&gt;&gt;&gt; next(t)\nTraceback (most recent call last):\n  File \"&lt;stdin&gt;\", line 1, in &lt;module&gt;\nStopIteration\n</code></pre>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part1/#3_16","title":"3","text":"<p>A dictionary, its keys, its values, and its items are all iterable values</p> <p><code>dict.keys</code> <code>dict.values</code> <code>dict.items</code> \u90fd\u662f\u53ef\u4ee5\u8fed\u4ee3\u7684\u5bf9\u8c61</p> <ul> <li>\u5982\u679c\u5bf9 <code>iter()</code> \u76f4\u63a5\u4f20\u5165\u4e00\u4e2a\u5b57\u5178\uff0c\u8fd4\u56de\u7684\u8fed\u4ee3\u5668\u5bf9\u5e94\u7684\u662fkeys\u7684\u8fed\u4ee3\u5668</li> <li>\u5bf9 <code>next()</code> \u4f20\u5165 <code>dict.items</code> \u5bf9\u5e94\u7684\u8fed\u4ee3\u5668\uff0c\u8fd4\u56de\u7684\u662f\u7531\u5b57\u5178\u7684key\u548c\u5bf9\u5e94\u7684value\u7ec4\u6210\u7684\u4e8c\u5143\u5143\u7ec4</li> </ul> <pre><code>&gt;&gt;&gt; d = {'one': 1, 'two': 2, 'three': 3}\n&gt;&gt;&gt; d['zero'] = 0\n&gt;&gt;&gt; k = iter(d.keys())  # or iter(d)\n&gt;&gt;&gt; next(k)\n'one'\n&gt;&gt;&gt; next(k)\n'two'\n&gt;&gt;&gt; next(k)\n'three'\n&gt;&gt;&gt; next(k)\n'zero'\n&gt;&gt;&gt; v = iter(d.values())\n&gt;&gt;&gt; next(v)\n1\n&gt;&gt;&gt; next(v)\n2\n&gt;&gt;&gt; next(v)\n3\n&gt;&gt;&gt; next(v)\n0\n&gt;&gt;&gt; i = iter(d.items())\n&gt;&gt;&gt; next(i)\n('one', 1)\n&gt;&gt;&gt; next(i)\n('two', 2)\n&gt;&gt;&gt; next(i)\n('three', 3)\n&gt;&gt;&gt; next(i)\n('zero', 0)\n</code></pre>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part1/#4_13","title":"4","text":"<p>\u5982\u679c\u6539\u53d8\u4e00\u4e2a\u5b57\u5178\u7684\u5927\u5c0f(\u7ecf\u8fc7\u6d4b\u8bd5\uff0c\u7ed9\u5b57\u5178\u6dfb\u52a0\u5143\u7d20\uff0c\u4e0d\u4f1a\u4f7f\u5f97\u4e4b\u524d\u6784\u5efa\u7684\u8fed\u4ee3\u5668\u5931\u6548)\uff0c\u6bd4\u5982\u6dfb\u52a0\u4e00\u7ec4\u65b0\u7684\u952e\u503c\u5bf9\uff0c\u6216\u8005\u5220\u53bb\uff0c\u4f1a\u4f7f\u5f97\u4e4b\u524d\u6784\u5efa\u7684\u8fed\u4ee3\u5668\u4e0d\u80fd\u4f7f\u7528(keys, values, items\u90fd\u4e0d\u80fd)</p> <pre><code>&gt;&gt;&gt; d = {'one': 1, 'two': 2}\n&gt;&gt;&gt; k = iter(d)\n&gt;&gt;&gt; next(k)\n'one'\n&gt;&gt;&gt; d['zero'] = 0\n&gt;&gt;&gt; next(k)\nTraceback (most recent call last):\n  File \"&lt;stdin&gt;\", line 1, in &lt;module&gt;\nRuntimeError: dictionary changed size during iteration\n&gt;&gt;&gt; d\n{'one': 1, 'two': 2, 'zero': 0}\n&gt;&gt;&gt; k = iter(d)\n&gt;&gt;&gt; next(k)\n'one'\n&gt;&gt;&gt; next(k)\n'two'\n&gt;&gt;&gt; d['zero'] = 5\n&gt;&gt;&gt; next(k)\n'zero'\n</code></pre> <p>\u800c\u5982\u679c\u53ea\u662f\u4fee\u6539\u5df2\u5b58\u5728\u7684\u952e\u503c\u5bf9\u7684\u503c\uff0c\u4e0d\u4f1a\u4f7f\u5f97\u4e4b\u524d\u6784\u5efa\u7684\u8fed\u4ee3\u5668\u5931\u6548(values, items\u5bf9\u5e94\u7684\u8fed\u4ee3\u5668\u5728\u4fee\u6539\u4e86\u5b57\u5178\u4e4b\u540e\u8fde\u63a5\u7684\u4f1a\u662f\u4fee\u6539\u4e4b\u540e\u7684\u503c)</p>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part1/#5_9","title":"5","text":"<p><code>for</code> \u8bed\u53e5\u4e5f\u53ef\u4ee5\u4f7f\u7528\u8fed\u4ee3\u5668\uff0c\u4f46\u53ea\u662f\u4ece\u8fed\u4ee3\u5668\u5f53\u524d\u7684\u4f4d\u7f6e\u5f00\u59cb\uff0c\u5e76\u4e14\u4f1a\u5c06\u8fed\u4ee3\u5668\u7684\u4f4d\u7f6e\u79fb\u52a8\u5230\u6700\u540e\uff0c(\u611f\u89c9\u8ddf\u7b2c\u4e8c\u70b9\u5f88\u76f8\u50cf)</p> <pre><code>&gt;&gt;&gt; r = range(3, 6)\n&gt;&gt;&gt; ri = iter(r)\n&gt;&gt;&gt; next(ri)\n3\n&gt;&gt;&gt; for i in ri:\n...     print(i)\n...\n4\n5\n&gt;&gt;&gt; for i in ri:\n...     print(i)\n...\n&gt;&gt;&gt; next(ri)\nTraceback (most recent call last):\n  File \"&lt;stdin&gt;\", line 1, in &lt;module&gt;\nStopIteration\n</code></pre>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part1/#6_7","title":"6","text":"<p>\u4e00\u4e9b\u4f1a\u8fd4\u56de\u8fed\u4ee3\u5668\u7684 built-in functions</p> <p>\u4e0a\u56fe\u4e2d\u7684 <code>iterable</code> \u4e5f\u5305\u62ec\u8fed\u4ee3\u5668\uff0c\u6240\u4ee5\u8fed\u4ee3\u5668\u4e5f\u7b97\u4f5c\u53ef\u8fed\u4ee3\u5bf9\u8c61</p> <p>John\u7684\u51e0\u4e2aDemo</p> <ol> <li> <p>\u8fd9\u662f\u4e00\u4e2a\u7b80\u5355\u5c55\u793a\u7684\u5229\u7528 <code>map</code> \u6765\u83b7\u53d6 \u4e00\u4e2a\u5c06\u4f20\u5165\u51fd\u6570\u5957\u7528\u5728\u8fed\u4ee3\u51fa\u6765\u7684\u6570\u636e\u7684\u8fed\u4ee3\u5668 \u7684\u4f8b\u5b50</p> <pre><code>&gt;&gt;&gt; bcd = ['b', 'c', 'd']\n&gt;&gt;&gt; [x.upper() for x in bcd]\n['B', 'C', 'D']\n&gt;&gt;&gt; map(lambda x: x.upper(), bcd)\n&lt;map object at 0x000002597B19F730&gt;\n&gt;&gt;&gt; m = map(lambda x: x.upper(), bcd)\n&gt;&gt;&gt; next(m)\n'B'\n&gt;&gt;&gt; next(m)\n'C'\n&gt;&gt;&gt; next(m)\n'D'\n&gt;&gt;&gt; next(m)\nTraceback (most recent call last):\n  File \"&lt;stdin&gt;\", line 1, in &lt;module&gt;\nStopIteration\n&gt;&gt;&gt;\n</code></pre> </li> <li> <p>\u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c\u53ef\u4ee5\u6ce8\u610f\u5230\uff0cmap\u8fd4\u56de\u7684\u8fed\u4ee3\u5668\uff0c\u5e76\u4e0d\u662f\u76f4\u63a5\u628a \u4f20\u5165\u7684\u51fd\u6570\u5bf9\u53ef\u8fed\u4ee3\u5bf9\u8c61\u7684\u6bcf\u4e2a\u6570\u636e\u7684\u8fd4\u56de\u503c\u5b58\u5728\u8fed\u4ee3\u5668\u4e2d\uff0c\u800c\u662f\u5c06\u53ef\u8fed\u4ee3\u5bf9\u8c61\u548c\u4f20\u5165\u7684\u51fd\u6570\u7ed1\u5b9a\u5728\u540c\u4e00\u4e2a\u8fed\u4ee3\u5668\u91cc\uff0c\u5728\u8fed\u4ee3\u65f6\u5c31\u7528==\u8fed\u4ee3\u5668\u8fed\u4ee3\u8fd4\u56de\u7684\u6570\u636e==\u53bb\u8c03\u7528\u51fd\u6570(\u6240\u4ee5\u624d\u4f1a\u8fd0\u884c <code>print</code> \u51fd\u6570\uff0c\u5373\u6253\u5370\u51fa\u4e1c\u897f)</p> <pre><code>def double(x):\n    print('**', x, '=&gt;', 2 * x, '**')\n    return 2 * x\n</code></pre> <pre><code>&gt;&gt;&gt; m = map(double, [3, 5, 7])\n&gt;&gt;&gt; next(m)\n** 3 =&gt; 6 **\n6\n&gt;&gt;&gt; next(m)\n** 5 =&gt; 10 **\n10\n&gt;&gt;&gt; next(m)\n** 7 =&gt; 14 **\n14\n&gt;&gt;&gt;\n</code></pre> </li> <li> <p>\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c\u5c55\u793a\u4e86 <code>filter</code> \uff0c\u548c <code>map</code> \u5f88\u7c7b\u4f3c\uff0c\u4e5f\u662f\u5c06\u8fed\u4ee3\u5bf9\u8c61\u548c\u51fd\u6570\u7ed1\u5b9a\u5230\u4e00\u8d77(\u800c\u4e0d\u662f\u76f4\u63a5\u53d6\u76ee\u6807\u7684\u8fd4\u56de\u503c\uff0c\u4e5f\u6ca1\u6709\u4fdd\u5b58\u8fed\u4ee3\u5bf9\u8c61\u7684\u503c)\uff0c\u6240\u4ee5\u5728\u8fed\u4ee3 <code>filter</code> \u8fd4\u56de\u7684\u8fed\u4ee3\u5668==\u65f6\uff0c\u662f==\u5148\u8fed\u4ee3\u5b83\u7684\u8fed\u4ee3\u5bf9\u8c61\uff0c\u518d\u5c06\u8fed\u4ee3\u8fd4\u56de\u503c\u653e\u5165\u51fd\u6570\u5224\u65ad(\u4e0d\u7b26\u5408\u5c31\u7ee7\u7eed\u8fed\u4ee3)(\u6240\u4ee5 <code>double</code> \u5185\u90e8\u7684print\u8bed\u53e5\u624d\u4f1a\u6267\u884c)\uff0c\u7136\u540e\u8fd4\u56de\u7b26\u5408(\u5224\u65ad)\u51fd\u6570\u7684\u503c\u3002\u4ece\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\u53ef\u4ee5\u5f88\u6e05\u6670\u5730\u770b\u5230\u8fd9\u4e00\u70b9</p> <pre><code>&gt;&gt;&gt; m = map(double, range(3, 7))\n&gt;&gt;&gt; f = lambda y: y &gt;= 10\n&gt;&gt;&gt; t = filter(f, m)\n&gt;&gt;&gt; next(t)\n** 3 =&gt; 6 **\n** 4 =&gt; 8 **\n** 5 =&gt; 10 **\n10\n&gt;&gt;&gt; next(t)\n** 6 =&gt; 12 **\n12\n&gt;&gt;&gt; list(t)\n[]\n&gt;&gt;&gt; list(filter(f, map(double, range(3, 7))))\n** 3 =&gt; 6 **\n** 4 =&gt; 8 **\n** 5 =&gt; 10 **\n** 6 =&gt; 12 **\n[10, 12]\n&gt;&gt;&gt;\n</code></pre> </li> <li> <p>\u8fd9\u4e2a\u4f8b\u5b50\u5c55\u73b0\u4e86 <code>reversed</code> \u8fd4\u56de\u7684\u662f\u4e00\u4e2a\u8fed\u4ee3\u5668(\u6240\u4ee5\u4e0d\u4f1a\u7b49\u4e8e\u539f\u6765\u7684\u5217\u8868)</p> <pre><code>&gt;&gt;&gt; t = [1, 2, 3, 2, 1]\n&gt;&gt;&gt; t\n[1, 2, 3, 2, 1]\n&gt;&gt;&gt; reversed(t)\n&lt;list_reverseiterator object at 0x000002597B1D12D0&gt;\n&gt;&gt;&gt; reversed(t) == t\nFalse\n&gt;&gt;&gt; list(reversed(t))\n[1, 2, 3, 2, 1]\n&gt;&gt;&gt; list(reversed(t)) == t\nTrue\n&gt;&gt;&gt;\n</code></pre> </li> <li> <p>\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c\u5b57\u5178\u952e\u503c\u5bf9\u7684\u987a\u5e8f\u548cJohn\u7684demo\u6709\u70b9\u4e0d\u4e00\u6837\uff0c\u5e94\u8be5\u662f\u7531\u4e8epython\u7248\u672c\u4e0d\u540c\u7684\u539f\u56e0</p> <pre><code>&gt;&gt;&gt; d = {'a': 1, 'b': 2}\n&gt;&gt;&gt; d\n{'a': 1, 'b': 2}\n&gt;&gt;&gt; items = iter(d.items())\n&gt;&gt;&gt; next(items)\n('a', 1)\n&gt;&gt;&gt; next(items)\n('b', 2)\n&gt;&gt;&gt; items = zip(d.keys(), d.values())\n&gt;&gt;&gt; next(items)\n('a', 1)\n&gt;&gt;&gt; next(items)\n('b', 2)\n&gt;&gt;&gt;\n</code></pre> <p></p> </li> </ol>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part1/#7_2","title":"7","text":"<p>\u751f\u6210\u5668\u548c\u751f\u6210\u5668\u51fd\u6570 Generators and Generator Functions</p> <p>\u4f7f\u7528 <code>yield</code> \u800c\u4e0d\u662f <code>return</code> \u5173\u952e\u5b57\u6765\u8fd4\u56de\u503c\u7684\u51fd\u6570\uff0c\u5c31\u662f\u751f\u6210\u5668\u51fd\u6570\uff0c\u800c\u751f\u6210\u5668\u51fd\u6570\u4f1a\u8fd4\u56de\u4e00\u4e2a\u751f\u6210\u5668\uff0c\u751f\u6210\u5668\u662f\u4e00\u4e2a\u8fed\u4ee3\u5668\uff0c\u8fed\u4ee3\u65f6\u4f1a\u6309\u7167\u51fd\u6570\u4e2d <code>yield</code> \u8bed\u53e5\u7684\u987a\u5e8f\u6765\u8fd4\u56de\u503c\uff0c\u53c2\u8003\u4e0a\u56fe</p> <p>John\u7684\u4e00\u4e2ademo</p> <pre><code>def evens(start, end):\n    even = start + (start % 2)\n    while even &lt; end:\n        yield even\n        even += 2\n</code></pre> <pre><code>&gt;&gt;&gt; t = evens(2, 10)\n&gt;&gt;&gt; t\n&lt;generator object evens at 0x000002597B170580&gt;\n&gt;&gt;&gt; next(t)\n2\n&gt;&gt;&gt; next(t)\n4\n&gt;&gt;&gt; next(t)\n6\n&gt;&gt;&gt; next(t)\n8\n&gt;&gt;&gt; next(t)\nTraceback (most recent call last):\n  File \"&lt;stdin&gt;\", line 1, in &lt;module&gt;\nStopIteration\n&gt;&gt;&gt; list(evens(1, 10))\n[2, 4, 6, 8]\n&gt;&gt;&gt;\n</code></pre> <p>John\u7684\u89e3\u91ca\u662f\uff0c\u5f53\u4e00\u4e2a Generator Function \u88ab\u8c03\u7528\u65f6\uff0c\u51fd\u6570\u91cc\u9762\u7684\u8bed\u53e5\u4e0d\u4f1a\u88ab\u7acb\u5373\u6267\u884c\uff0c\u800c\u662f\u76f4\u63a5\u8fd4\u56de\u4e00\u4e2a Generator \uff0c\u800c\u5728 generator \u6bcf\u6b21\u8fed\u4ee3\u65f6\uff0c\u51fd\u6570\u5185\u7684\u8bed\u53e5\u624d\u4f1a\u88ab\u6267\u884c\uff0c\u4e14\u53ea\u6267\u884c\u5230\u4e0b\u4e00\u4e2a <code>yield</code> \u5904\u5c31\u6682\u505c\u6267\u884c\uff0c\u5e76\u8fd4\u56de\u503c</p>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part1/#8_1","title":"8","text":"<p><code>yield from</code> \u8bed\u53e5\uff0c\u540e\u9762\u53ef\u4ee5\u662f \u8fed\u4ee3\u5668 \u6216\u8005 \u53ef\u8fed\u4ee3\u5bf9\u8c61 (\u5982\u679c\u662f\u8fed\u4ee3\u5668\u4f30\u8ba1\u4f1a\u4fee\u6539\u8fed\u4ee3\u5668\u7684\u4f4d\u7f6e)</p> <p>\u4e0a\u56fe\u4e2d\u8fd8\u5c55\u793a\u4e86\u751f\u6210\u5668\u51fd\u6570\u7684\u4e00\u79cd\u7c7b\u4f3c\u4e8e\u9012\u5f52\u7684\u5199\u6cd5</p> <pre><code>def countdown(k):\n    if k &gt; 0:\n        yield k\n        for x in countdown(k - 1):\n            yield x\n</code></pre> <p>\u66f4\u7b80\u6d01\u7684\u5199\u6cd5\u5c31\u662f</p> <pre><code>def countdown(k):\n    if k &gt; 0:\n        yield k\n        yield from countdown(k - 1)\n</code></pre>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part1/#9_1","title":"9","text":"<p>John\u7684\u4e00\u4e2a\u795e\u5947\u7684\u751f\u6210\u5668\u51fd\u6570\u7684demo\uff0c\u611f\u89c9\u5f88\u50cf\u9012\u5f52\u7684\u611f\u89c9\uff0c\u5e76\u4e14\u591a\u4e2a\u751f\u6210\u5668\u51fd\u6570\u7ec4\u5408\u4f7f\u7528\u53ef\u4ee5\u4ea7\u751f\u795e\u5947\u7684\u6548\u679c</p>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part1/#lecture-17-qa","title":"Lecture 17 Q&amp;A","text":""},{"location":"Notes%20of%20Courses/CS61A/CS61A_part1/#1_34","title":"1","text":"<p>John \u5173\u4e8e\u8fed\u4ee3\u5668\u7684\u89e3\u91ca</p> <p>Quote</p> <p>yeah good question, so if an iterator is not a list, what is it. um, there are lots of different kinds of, uh, iterators, so you know it more by its behavior than its, like what it's constituted of. an iterator is something that you can call next on, and get more elements. in the case of a list, the iterator for a list, is more than just a list, it's kind of a reference to the list along with a position in that list that tells you where you are, so that if you call the next thing the iterator advances, meaning that if you called next again you'd get something else than you did the first time. so in that sense, it's, it has different behavior than a list, because it's both a list and like a marker for where you are. but list iterators are not the only kind of iterators, you could have an iterator through the labels in a tree, you could have an iterator through the prefixes in a string, you could have an iterator kind of through anything, and it's just a description of something that lets you go through multiple elements in some order by calling next on the iterator and getting the next value, and you can do that over and over again. so it's quite an abstract thing as opposed to, feeling quite as concrete as for example a list.</p> <p>\u597d\u95ee\u9898\uff0c\u5982\u679c\u8fed\u4ee3\u5668\u4e0d\u662f\u4e00\u4e2a\u5217\u8868\uff0c\u5b83\u662f\u4ec0\u4e48\u3002\u55ef\uff0c\u6709\u5f88\u591a\u4e0d\u540c\u7c7b\u578b\u7684\u8fed\u4ee3\u5668\uff0c\u6240\u4ee5\u4f60\u66f4\u591a\u5730\u901a\u8fc7\u5b83\u7684\u884c\u4e3a\u800c\u4e0d\u662f\u5b83\u7684\u884c\u4e3a\u6765\u4e86\u89e3\u5b83\uff0c\u6bd4\u5982\u5b83\u662f\u7531\u4ec0\u4e48\u7ec4\u6210\u7684\u3002\u8fed\u4ee3\u5668\u662f\u60a8\u63a5\u4e0b\u6765\u53ef\u4ee5\u8c03\u7528\u5e76\u83b7\u53d6\u66f4\u591a\u5143\u7d20\u7684\u4e1c\u897f\u3002\u5728\u5217\u8868\u7684\u60c5\u51b5\u4e0b\uff0c\u5217\u8868\u7684\u8fed\u4ee3\u5668\u4e0d\u4ec5\u4ec5\u662f\u4e00\u4e2a\u5217\u8868\uff0c\u5b83\u662f\u5bf9\u5217\u8868\u7684\u5f15\u7528\uff0c\u4ee5\u53ca\u5217\u8868\u4e2d\u7684\u4e00\u4e2a\u4f4d\u7f6e\uff0c\u544a\u8bc9\u4f60\u5728\u54ea\u91cc\uff0c\u6240\u4ee5\u5982\u679c\u4f60\u8c03\u7528\u4e0b\u4e00\u4e2a\u4e1c\u897f\uff0c\u8fed\u4ee3\u5668\u4f1a\u524d\u8fdb\uff0c\u8fd9\u610f\u5473\u7740\u5982\u679c\u4f60\u518d\u6b21\u8c03\u7528next\uff0c\u4f60\u4f1a\u5f97\u5230\u6bd4\u7b2c\u4e00\u6b21\u4e0d\u540c\u7684\u4e1c\u897f\u3002\u4ece\u8fd9\u4e2a\u610f\u4e49\u4e0a\u8bf4\uff0c\u5b83\u7684\u884c\u4e3a\u4e0e\u5217\u8868\u4e0d\u540c\uff0c\u56e0\u4e3a\u5b83\u65e2\u662f\u4e00\u4e2a\u5217\u8868\uff0c\u53c8\u50cf\u662f\u4e00\u4e2a\u4f60\u6240\u5728\u4f4d\u7f6e\u7684\u6807\u8bb0\u3002\u4f46\u5217\u8868\u8fed\u4ee3\u5668\u5e76\u4e0d\u662f\u552f\u4e00\u4e00\u79cd\u8fed\u4ee3\u5668\uff0c\u4f60\u53ef\u4ee5\u901a\u8fc7\u6811\u4e2d\u7684\u6807\u7b7e\u6709\u4e00\u4e2a\u8fed\u4ee3\u5668\u3002\u4f60\u53ef\u4ee5\u901a\u8fc7\u5b57\u7b26\u4e32\u4e2d\u7684\u524d\u7f00\u6709\u4e00\u4e2a\u8fed\u4ee3\u5668\u3002\u4f60\u4e5f\u53ef\u4ee5\u901a\u8fc7\u4efb\u4f55\u4e1c\u897f\u6709\u4e00\u4e2aiterator\u3002\u5b83\u53ea\u662f\u4e00\u4e2a\u4e1c\u897f\u7684\u63cf\u8ff0\uff0c\u8ba9\u4f60\u901a\u8fc7\u5728\u8fed\u4ee3\u5668\u4e0a\u8c03\u7528next\u5e76\u83b7\u5f97\u4e0b\u4e00\u4e2a\u503c\u6765\u6309\u67d0\u79cd\u987a\u5e8f\u904d\u5386\u591a\u4e2a\u5143\u7d20\uff0c\u4f60\u53ef\u4ee5\u4e00\u6b21\u53c8\u4e00\u6b21\u5730\u8fd9\u6837\u505a\u3002\u6240\u4ee5\u8fd9\u662f\u4e00\u4ef6\u975e\u5e38\u62bd\u8c61\u7684\u4e8b\u60c5\uff0c\u800c\u4e0d\u662f\u50cf\u5217\u8868\u4e00\u6837\u5177\u4f53\u3002</p>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part1/#2_20","title":"2","text":"<p>John\u5c55\u793a\u4e86\u4e00\u79cd\u4e0d\u4f7f\u7528 <code>yield</code> \u5173\u952e\u5b57\u4e5f\u53ef\u4ee5\u5b9e\u73b0\u76f8\u540c\u529f\u80fd\u7684\u5199\u6cd5\uff1a</p> <pre><code>def prefixes(s):\n    result = []\n    if s:\n        for x in prefixes(s[:-1]):\n            result.append(x)\n    return result\n\nprint(list(prefixes('doges')))\n</code></pre> <p>\u539f\u672c\u7684\u4f7f\u7528 <code>yield</code> \u7684\u5199\u6cd5</p> <pre><code>def prefixes(s):\n    if s:\n        for x in prefixes(s[:-1]):\n            yield x\n        yield s\n\nprint(list(prefixes('doges')))\n</code></pre>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part1/#3_17","title":"3","text":"<p>John \u548c Hany \u89e3\u91ca\u5173\u4e8e\u8fed\u4ee3\u5668\u6bcf\u6b21\u8fed\u4ee3\u65f6\u5c31\u4f1a\u88ab\u66f4\u6539\u7684\u7279\u70b9(\u4e00\u6b21\u6027\u4f7f\u7528\u7684\u7279\u70b9)</p> <p>Quote</p> <pre><code>s = [1, 2, 3]\nt = iter(s)\n\nlen(list(t)) #-&gt; returns 3\nlen(list(t)) #-&gt; returns 0?\n</code></pre> <p>John:</p> <p>yeah good question, so the questions about this example and why is it the case that when you get the length of, uh, the result of listing out the contents of an iterator twice you get a different thing each time, first time you got three things, next time you got zero things. this isn't something having to do with len, this is having to do with how list interacts with an iterator. when you call list on an iterator, you end up building a list of all the contents of that iterator, but the iterator is used up as a side effect of calling list on it. so, if i have an iterator over these values, um, i can get one thing out of it, but then if i get another thing i get a different thing. list is kind of like calling next over and over again, and putting all the results in a list. so as soon as you call list on t, you're going to get everything that's left over in the iterator, that hasn't been used up or returned already. so we've already seen the one, we've seen the two, therefore calling list on t will just show us the three. and now t is used up, i can't get the next thing in t, because we're already at the end, and so if i try to list everything that's left and t, i'll get an empty list. so your version was start with this, get all the contents of that, which is a list containing one two and three. if i do this, i'm changing t. this is, uh, every time you get elements from an iterator, you're changing that iterator, which means you can't really use it again. so if you get the length of this you get three, you get the length of this you get zero.</p> <p> </p> <p>Hany:</p> <p>so think of these iterators as one use disposable operators, once you've gone through the list, either next next next next, or the list of it is you're essentially enumerating the list, it's gone. right, so by the way you could have implemented this yourself, you could have written a function that every time you access an element, the next element, you delete that element from the list, that's essentially what's going on here. yeah. and so once you, it's a funny thing about iterators by the way, is that once you look at the list, it's, it's sort of like, uh, what is it, it's like snapchat, right, the image comes in, you look at it, and then it vanishes, it's gone.</p> <p> </p> <p>John:</p> <p>that is beautiful.</p> <p> </p> <p>Hany:</p> <p>yeah, you got to be impressed by somebody my age, making a snapchat reference, that's, that's i think you know, you have a little credit for that.</p> <p> </p> <p>John:</p> <p>perfect snapchat analogy.</p> <pre><code>s = [1, 2, 3]\nt = iter(s)\n\nlen(list(t)) #-&gt; returns 3\nlen(list(t)) #-&gt; returns 0?\n</code></pre> <p>John:</p> <p>\u662f\u7684\uff0c\u8fd9\u662f\u4e00\u4e2a\u5f88\u597d\u7684\u95ee\u9898\u3002\u5173\u4e8e\u8fd9\u4e2a\u793a\u4f8b\u7684\u95ee\u9898\u662f\uff0c\u4e3a\u4ec0\u4e48\u5728\u4e24\u6b21\u83b7\u53d6\u8fed\u4ee3\u5668\u7684\u5185\u5bb9\u7684\u957f\u5ea6\u65f6\uff0c\u6bcf\u6b21\u90fd\u4f1a\u5f97\u5230\u4e0d\u540c\u7684\u7ed3\u679c\uff1f\u7b2c\u4e00\u6b21\u5f97\u5230\u4e09\u4e2a\u5143\u7d20\uff0c\u4e0b\u4e00\u6b21\u5374\u5f97\u5230\u96f6\u4e2a\u5143\u7d20\uff1f\u8fd9\u4e0e <code>len</code> \u51fd\u6570\u65e0\u5173\uff0c\u800c\u4e0e <code>list</code> \u5982\u4f55\u4e0e\u8fed\u4ee3\u5668\u4ea4\u4e92\u6709\u5173\u3002\u5f53\u4f60\u5728\u8fed\u4ee3\u5668\u4e0a\u8c03\u7528 <code>list</code> \u65f6\uff0c\u4f60\u5b9e\u9645\u4e0a\u6b63\u5728\u6784\u5efa\u4e00\u4e2a\u5305\u542b\u8be5\u8fed\u4ee3\u5668\u7684\u6240\u6709\u5185\u5bb9\u7684\u5217\u8868\uff0c\u4f46\u8c03\u7528 <code>list</code> \u4f1a\u6d88\u8017\u8fed\u4ee3\u5668\uff0c\u8fd9\u662f\u4e00\u4e2a\u526f\u4f5c\u7528\u3002\u56e0\u6b64\uff0c\u5982\u679c\u6211\u6709\u4e00\u4e2a\u8fed\u4ee3\u5668\u904d\u5386\u8fd9\u4e9b\u503c\uff0c\u6211\u53ef\u4ee5\u4ece\u4e2d\u83b7\u53d6\u4e00\u4e2a\u5143\u7d20\uff0c\u4f46\u5982\u679c\u6211\u518d\u6b21\u83b7\u53d6\u4e00\u4e2a\u5143\u7d20\uff0c\u6211\u5c06\u5f97\u5230\u4e0d\u540c\u7684\u7ed3\u679c\u3002 <code>list</code> \u5c31\u50cf\u4e00\u6b21\u53c8\u4e00\u6b21\u5730\u8c03\u7528 <code>next</code> \uff0c\u7136\u540e\u5c06\u6240\u6709\u7ed3\u679c\u653e\u5165\u5217\u8868\u4e2d\u3002\u56e0\u6b64\uff0c\u4e00\u65e6\u5728 <code>t</code> \u4e0a\u8c03\u7528 <code>list</code> \uff0c\u4f60\u5c06\u83b7\u5f97\u8fed\u4ee3\u5668\u4e2d\u5269\u4f59\u7684\u6240\u6709\u5185\u5bb9\uff0c\u8fd9\u4e9b\u5185\u5bb9\u5c1a\u672a\u88ab\u4f7f\u7528\u6216\u8fd4\u56de\u3002\u6240\u4ee5\u6211\u4eec\u5df2\u7ecf\u770b\u5230\u4e861\u548c2\uff0c\u56e0\u6b64\u5728 <code>t</code> \u4e0a\u8c03\u7528 <code>list</code> \u5c06\u53ea\u663e\u793a3\u3002\u73b0\u5728 <code>t</code> \u5df2\u7ecf\u88ab\u7528\u5b8c\u4e86\uff0c\u6211\u65e0\u6cd5\u518d\u83b7\u53d6 <code>t</code> \u4e2d\u7684\u4e0b\u4e00\u4e2a\u5143\u7d20\uff0c\u56e0\u4e3a\u6211\u4eec\u5df2\u7ecf\u5230\u8fbe\u672b\u5c3e\uff0c\u6240\u4ee5\u5982\u679c\u6211\u5c1d\u8bd5\u5217\u51fa <code>t</code> \u4e2d\u5269\u4e0b\u7684\u6240\u6709\u5185\u5bb9\uff0c\u6211\u5c06\u5f97\u5230\u4e00\u4e2a\u7a7a\u5217\u8868\u3002\u6240\u4ee5\u4f60\u7684\u7248\u672c\u662f\u4ece\u8fd9\u4e2a\u5f00\u59cb\uff0c\u83b7\u53d6\u4e86\u5305\u542b1\u30012\u548c3\u7684\u5217\u8868\u3002\u5982\u679c\u6211\u505a\u8fd9\u4e2a\uff0c\u6211\u5c31\u6539\u53d8\u4e86 <code>t</code> \u3002\u6bcf\u5f53\u4ece\u8fed\u4ee3\u5668\u4e2d\u83b7\u53d6\u5143\u7d20\u65f6\uff0c\u4f60\u90fd\u4f1a\u6539\u53d8\u8be5\u8fed\u4ee3\u5668\uff0c\u8fd9\u610f\u5473\u7740\u4f60\u4e0d\u80fd\u518d\u6b21\u4f7f\u7528\u5b83\u3002\u56e0\u6b64\uff0c\u5982\u679c\u4f60\u83b7\u53d6\u8fd9\u4e2a\u7684\u957f\u5ea6\uff0c\u4f60\u4f1a\u5f97\u52303\uff0c\u5982\u679c\u4f60\u83b7\u53d6\u8fd9\u4e2a\u7684\u957f\u5ea6\uff0c\u4f60\u4f1a\u5f97\u52300\u3002</p> <p> </p> <p>Hany:</p> <p>\u6240\u4ee5\u628a\u8fd9\u4e9b\u8fed\u4ee3\u5668\u770b\u4f5c\u662f\u4e00\u6b21\u6027\u7684\u64cd\u4f5c\u7b26\uff0c\u4e00\u65e6\u4f60\u904d\u5386\u4e86\u5217\u8868\uff0c\u65e0\u8bba\u662f\u901a\u8fc7\u8fde\u7eed\u8c03\u7528 <code>next</code> \u8fd8\u662f\u901a\u8fc7\u8c03\u7528 <code>list</code> \uff0c\u5b83\u4eec\u90fd\u6d88\u5931\u4e86\u3002\u5bf9\uff0c\u987a\u4fbf\u8bf4\u4e00\u53e5\uff0c\u4f60\u5176\u5b9e\u53ef\u4ee5\u81ea\u5df1\u5b9e\u73b0\u8fd9\u4e2a\uff0c\u4f60\u53ef\u4ee5\u7f16\u5199\u4e00\u4e2a\u51fd\u6570\uff0c\u6bcf\u6b21\u8bbf\u95ee\u4e00\u4e2a\u5143\u7d20\uff0c\u90fd\u4ece\u5217\u8868\u4e2d\u5220\u9664\u90a3\u4e2a\u5143\u7d20\uff0c\u8fd9\u672c\u8d28\u4e0a\u5c31\u662f\u8fd9\u91cc\u53d1\u751f\u7684\u4e8b\u60c5\u3002\u662f\u7684\uff0c\u6240\u4ee5\u4e00\u65e6\u4f60\u770b\u8fc7\u5217\u8868\uff0c\u8fd9\u6709\u70b9\u50cf Snapchat\uff0c\u5bf9\u5427\uff1f\u56fe\u50cf\u8fdb\u6765\uff0c\u4f60\u770b\u4e86\u4e00\u773c\uff0c\u7136\u540e\u5b83\u5c31\u6d88\u5931\u4e86\uff0c\u6ca1\u6709\u4e86\u3002</p> <p> </p> <p>John:</p> <p>\u8fd9\u592a\u7cbe\u5f69\u4e86\u3002</p> <p> </p> <p>Hany:</p> <p>\u662f\u7684\uff0c\u4f60\u5f97\u5bf9\u6211\u8fd9\u4e2a\u5e74\u9f84\u7684\u4eba\u80fd\u591f\u63d0\u5230 Snapchat \u611f\u5230\u5370\u8c61\u6df1\u523b\uff0c\u6211\u60f3\u4f60\u5e94\u8be5\u7ed9\u6211\u70b9\u4fe1\u7528\u3002</p> <p> </p> <p>John:</p> <p>\u5b8c\u7f8e\u7684 Snapchat \u6bd4\u55bb\u3002</p>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part2/","title":"CS61A Part 2","text":"<p> \u7ea6 22492 \u4e2a\u5b57  3213 \u884c\u4ee3\u7801  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 115 \u5206\u949f</p> \u76ee\u5f55 <ul> <li>Lecture 18 Objects</li> <li>Lecture 18 Q&amp;A</li> <li>HW 04</li> <li>Lecture 19 Inheritance</li> <li>Lecture 19 Q&amp;A</li> <li>Lab 07</li> <li>Project Ants</li> <li>Lecture 20 Representation</li> <li>Lecture 20 Q&amp;A</li> <li>Lecture 21 Composition</li> <li>HW 05</li> <li>Lecture 22 Efficiency</li> <li>Lab 08</li> <li>Lecture 23 Decomposition</li> <li>Lecture 23 Q&amp;A</li> <li>Lecture 24 Data Example</li> <li>Lecture 24 Q&amp;A</li> <li>Lab 09</li> <li>Lecture 25 Users</li> <li>Lecture 25 Q&amp;A</li> <li>Lecture 26 Ethical AI &amp; Data</li> <li>Lecture 27 Scheme</li> <li>Lecture 27  Q&amp;A</li> <li>Lab 10</li> <li>HW 06</li> <li>Lecture 28 Exception</li> <li>Lecture 28 Q&amp;A</li> <li>Lecture 29 Calculater</li> <li>Lecture 29 Q&amp;A</li> <li>HW 07</li> <li>Lab 11</li> <li>Project Scheme</li> </ul>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part2/#lecture-18-objects","title":"Lecture 18 Objects","text":""},{"location":"Notes%20of%20Courses/CS61A/CS61A_part2/#1","title":"1","text":"<p>\u5173\u4e8e class \u548c object \u4e4b\u95f4\u7684\u5173\u7cfb\u7684\u5f62\u5bb9</p> <p>Quote</p> <p>\u5173\u4e8e class \u548c object \u7684\u89e3\u91ca\uff1a</p> <ul> <li>class: A class combines (and abstracts) data and functions</li> <li>object: An object is an instantiation of a class</li> </ul>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part2/#2","title":"2","text":"<p>\u7c7b\u5185\u7684\u65b9\u6cd5\u5728\u7f16\u5199\u662f\uff0c\u7b2c\u4e00\u4e2a\u53c2\u6570\u987b\u662f <code>self</code> \uff0c</p> <p>\u4f46\u7c7b\u5185\u65b9\u6cd5\u5728\u88ab\u8c03\u7528\u7684\u65f6\u5019\uff0c\u4e0d\u9700\u8981\u4f20\u5165 <code>self</code> \u7684\u503c\uff0c\u6216\u8005\u8bf4 <code>self</code> \u5c31\u662f\u8c03\u7528\u65b9\u6cd5\u7684\u5b9e\u4f8b\uff0c\u6240\u4ee5\u53ea\u9700\u8981\u4f20\u5165\u4e4b\u540e\u7684\u53c2\u6570</p>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part2/#3","title":"3","text":"<p>python\u6709\u5185\u7f6e\u51fd\u6570\u53ef\u4ee5\u67e5\u8be2/\u8bbf\u95ee\u7c7b\u7684\u5b9e\u4f8b\u7684\u5c5e\u6027(attribute)\uff0c\u6216\u8005\u662f\u7c7b\u7684\u5c5e\u6027 (\u7c7b\u5185\u7684\u65b9\u6cd5\u7b97\u4f5c\u662f\u7c7b\u672c\u8eab\u7684\u5c5e\u6027\uff0c\u800c\u4e0d\u662f\u5177\u4f53\u5b9e\u4f8b\u7684\u5c5e\u6027)</p> <p><code>getattr()</code> \u53ef\u4ee5\u8bbf\u95ee\u5c5e\u6027\uff0c\u83b7\u53d6\u5bf9\u5e94\u7684\u503c</p> <p><code>hasatrr()</code> \u53ef\u4ee5\u770b\u662f\u5426\u6709\u67d0\u4e2a\u5c5e\u6027</p> <p>\u51fd\u6570\u7684\u7b2c\u4e00\u4e2a\u53c2\u6570\u9700\u8981\u4f20\u5165\u5b9e\u4f8b\uff0c\u7b2c\u4e8c\u4e2a\u53c2\u6570\u9700\u8981\u4f20\u5165\u8981\u67e5\u8be2\u7684\u5c5e\u6027\u7684\u5c5e\u6027\u540d(\u4ee5\u5b57\u7b26\u4e32\u4f20\u5165)</p>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part2/#4","title":"4","text":"<p>\u5982\u4e0a\u56fe\uff0c<code>\u7c7b\u540d.\u65b9\u6cd5\u540d</code> \u662f\u4e00\u4e2a\u51fd\u6570\uff0c\u5e76\u4e14 <code>self</code> \u53c2\u6570\u9700\u8981\u4f20\u5165\u4e1c\u897f\uff0c\u800c <code>\u5bf9\u8c61.\u65b9\u6cd5\u540d</code> \u662f\u4e00\u4e2a\u65b9\u6cd5\uff0c<code>self</code> \u4e0d\u7528\u4f20</p>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part2/#5","title":"5","text":"<p>\u7c7b\u5c5e\u6027</p> <p>\u5982\u4e0a\u56fe\uff0c\u5728\u7c7b\u4e2d\u8d4b\u503c\u7684\u53d8\u91cf\uff0c(\u5e94\u8be5)\u5c31\u662f\u7c7b\u7684\u5c5e\u6027(\u7c7b\u5185\u7684\u65b9\u6cd5\u4e5f\u7b97\u662f\u7c7b\u7684\u5c5e\u6027\uff0c\u7b2c3\u70b9\u6709\u63d0\u5230\u8fc7)\uff0c</p> <p>\u7c7b\u5c5e\u6027\u4e0d\u662f\u5bf9\u8c61/\u5b9e\u4f8b\u7684\u4e00\u90e8\u5206\uff0c\u800c\u662f\u7c7b\u7684\u4e00\u90e8\u5206\u3002\u6bcf\u6b21\u901a\u8fc7\u5bf9\u8c61\u6765\u8bbf\u95ee\u7c7b\u5c5e\u6027\uff0c\u8bbf\u95ee\u7684\u662f\u7c7b\u4e2d\u7684\u5c5e\u6027\uff0c\u800c\u901a\u8fc7 <code>\u5bf9\u8c61.\u5c5e\u6027\u540d</code> \u8d4b\u503c/\u66f4\u6539\u5c5e\u6027\uff0c\u5176\u5b9e\u662f\u5728\u5bf9\u8c61\u4e2d\u521b\u5efa/\u66f4\u6539\u5bf9\u5e94\u7684\u5c5e\u6027(\u6240\u4ee5\u901a\u8fc7\u5bf9\u8c61\u4fee\u6539\u201c\u7c7b\u5c5e\u6027\u201d\u4e0d\u4f1a\u66f4\u6539\u5b9e\u9645\u7684\u7c7b\u5c5e\u6027)</p>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part2/#lecture-18-qa","title":"Lecture 18 Q&amp;A","text":""},{"location":"Notes%20of%20Courses/CS61A/CS61A_part2/#1_1","title":"1","text":"<p>\u7c7b\u5c5e\u6027\u9664\u4e86\u53ef\u4ee5\u5728\u7c7b\u5185\u5b9a\u4e49\uff0c\u4e5f\u53ef\u4ee5\u5728\u7c7b\u4ee5\u5916\uff0c\u901a\u8fc7 <code>\u7c7b\u540d.\u5c5e\u6027\u540d</code> \u7684\u5f62\u5f0f\u8d4b\u503c\u53bb\u5b9a\u4e49\uff0c\u5982</p> <pre><code>class Account:\n    ...\n\nAccount.interest = 0.03\n</code></pre> <pre><code>&gt;&gt;&gt; Account.interest  0.03\n&gt;&gt;&gt; a = Account('John')\n&gt;&gt;&gt; a.interest\n0.03\n&gt;&gt;&gt; a.interest = 0.05\n&gt;&gt;&gt; a.interest\n0.05\n&gt;&gt;&gt; b = Account('Hany')\n&gt;&gt;&gt; b.interest\n0.03\n&gt;&gt;&gt; a.interest\n0.05\n&gt;&gt;&gt; a.interest = Account.interest\n&gt;&gt;&gt; a.interest\n0.03\n&gt;&gt;&gt; Account.interest = 0.04\n&gt;&gt;&gt; a.interest\n0.03\n&gt;&gt;&gt;\n</code></pre> <p>John\u7684\u8fd9\u6bb5\u4ee3\u7801\u6f14\u793a\uff0c\u663e\u793a\u4e86\u901a\u8fc7\u5bf9\u8c61\u6765\u4fee\u6539\u201c\u7c7b\u5c5e\u6027\u201d(\u6307\u76f8\u540c\u7684\u540d\u5b57)\u65f6\uff0c\u5176\u5b9e\u662f\u4fee\u6539\u7684\u662f\u5177\u4f53\u5bf9\u8c61\u4e2d\u7684\u5c5e\u6027</p> <p>\u7c7b\u548c\u5bf9\u8c61\u4e24\u8005\u5404\u81ea\u7684\u4fee\u6539\u90fd\u4e0d\u4f1a\u5f71\u54cd\u5230\u5bf9\u65b9\u7684\u5c5e\u6027</p> <p><code>del</code> \u8bed\u53e5\uff0c\u7ecf\u8fc7\u6d4b\u8bd5\uff0c\u662f\u53ef\u4ee5\u5c06\u5bf9\u8c61\u4e2d\u5df2\u6709\u7684\u5c5e\u6027\u6e05\u9664\u6389\uff0c\u4ece\u800c\u518d\u6b21\u8bbf\u95ee\u76f8\u540c\u7684\u5c5e\u6027\u540d\u65f6\uff0c\u83b7\u53d6\u5230\u7684\u662f\u7c7b\u5c5e\u6027\u7684\u503c</p> <pre><code>&gt;&gt;&gt; class Account:\n...     def __init__(self):\n...         return\n...\n&gt;&gt;&gt; Account.interest = 5\n&gt;&gt;&gt; p1 = Account()\n&gt;&gt;&gt; p1.interest\n5\n&gt;&gt;&gt; del p1.interest\nTraceback (most recent call last):\n  File \"&lt;stdin&gt;\", line 1, in &lt;module&gt;\nAttributeError: interest\n&gt;&gt;&gt; p1.interest += 2\n&gt;&gt;&gt; p1.interest\n7\n&gt;&gt;&gt; Account.interest\n5\n&gt;&gt;&gt; del p1.interest\n&gt;&gt;&gt; p1.interest\n5\n&gt;&gt;&gt; del p1.interest\nTraceback (most recent call last):\n  File \"&lt;stdin&gt;\", line 1, in &lt;module&gt;\nAttributeError: interest\n&gt;&gt;&gt;\n</code></pre>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part2/#2_1","title":"2","text":"<p><code>del</code> \u4e5f\u53ef\u4ee5\u5220\u9664\u5217\u8868\u4e2d\u7684\u5143\u7d20\uff0c</p> <p>\u4f46\u662fJohn\u8bf4 <code>del</code> \u4e0d\u5e38\u7528</p>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part2/#hw-04","title":"HW 04","text":""},{"location":"Notes%20of%20Courses/CS61A/CS61A_part2/#1_2","title":"1","text":"<p>Q4</p> <p>Info</p> <p>Hint: If you had the permutations of all the elements in <code>seq</code> not including the first element, how could you use that to generate the permutations of the full <code>seq</code>?</p> <p>\u8fd9\u4e2a\u63d0\u793a\u5f88\u6709\u7528\uff1a\u8003\u8651\u6bcf\u6b21\u62bd\u53bb\u5176\u4e2d\u4e00\u4e2a\u5143\u7d20\u7684\u60c5\u51b5\uff0c\u7136\u540e\u4f9d\u6b21\u9012\u5f52...</p> <p>\u4e00\u5f00\u59cb\u611f\u89c9\u80fd\u7528\u63a8\u5bfc\u5f0f\u5199\u6210\u4e00\u884c</p> <pre><code>def permutations(seq):\n    yield from [[seq[i]] + p for p in permutations(seq[:i] + seq[i + 1:]) for i in range(len(seq))]\n</code></pre> <p>\u7136\u540e\u53d1\u73b0\uff0c<code>i</code> \u53ea\u5bf9 <code>permutations(seq[:i] + seq[i + 1:])</code> \u751f\u6548\uff0c<code>[seq[i]]</code> \u4e2d <code>i</code> \u663e\u793a\u672a\u5b9a\u4e49</p> <p>\u7136\u540e\u6539\u6210</p> <pre><code>def permutations(seq):\n    for i in range(len(seq))\n        yield from [[seq[i]] + p for p in permutations(seq[:i] + seq[i + 1:])]\n</code></pre> <p>\u7136\u540e\u5728\u6d4b\u8bd5\u6587\u6863\u7684\u4e00\u4e2a\u6d4b\u8bd5\u7528\u4f8b\u4e2d\uff0c\u7528 <code>next()</code> \u4f7f\u7528\u51fd\u6570\u8fd4\u56de\u7684\u751f\u6210\u5668\uff0c\u663e\u793a <code>StopIteration</code> \uff0c</p> <p>\u601d\u8003\u4e86\u5f88\u4e45\uff0c\u53d1\u73b0\u662f\u56e0\u4e3a\uff0c\u9012\u5f52\u5230\u4e86\u6700\u540e\uff0c <code>permutations(seq[:i] + seq[i + 1:])</code> \u4f20\u5165\u7684\u662f\u7a7a\u5217\u8868\uff0c\u90a3\u4e48\u5c31\u4e0d\u80fd\u89e3\u538b\u51fa <code>p</code> \uff0c\u90a3\u4e48\u63a8\u5bfc\u5f0f\u7684\u7ed3\u679c\u5c31\u4f1a\u662f\u7a7a\u7684\u5217\u8868\uff0c\u518d\u4e00\u5c42\u5c42\u8fd4\u56de\uff0c\u6240\u4ee5\u6700\u540e\u6574\u4f53\u7684\u51fd\u6570\u8fd4\u56de\u7684\u751f\u6210\u5668\u4e2d\u6ca1\u6709\u53ef\u4ee5\u8fed\u4ee3\u7684\u5143\u7d20</p> <p>\u6240\u4ee5\u9700\u8981\u8bbe\u7f6e base case \uff0c(\u4e00\u5f00\u59cb\u4ee5\u4e3a\u4e0d\u9700\u8981\u8bbe\u7f6e\uff0c\u6216\u8005\u8bf4\u4ee5\u4e3a\u7a7a\u5217\u8868\u5c31\u53ef\u4ee5\u4f5c\u4e3a base case)</p> <pre><code>def permutations(seq):\n    if len(seq) == 1:\n        yield seq\n    else:\n        yield from [[seq[i]] + p for p in permutations(seq[:i] + seq[i + 1:])]\n</code></pre> <p>\u7136\u540e\u53d1\u73b0\uff0c\u6d4b\u8bd5\u6587\u6863\u4e2d\uff0c\u6709\u4e00\u4e2a\u4f20\u5165\u4e86\u5143\u7ec4\uff0c\u6240\u4ee5\u6211\u7a0d\u52a0\u4e86\u4fee\u6539</p> <pre><code>def permutations(seq):\n    seq = list(seq)\n    if len(seq) == 1:\n        yield seq\n    else:\n        yield from [[seq[i]] + p for p in permutations(seq[:i] + seq[i + 1:])]\n</code></pre> <p>\u540e\u9762\u53d1\u73b0\uff0c\u5176\u5b9e\u8fd9\u6837\u6539\u4e5f\u53ef\u4ee5\uff1a</p> <pre><code>def permutations(seq):\n    if len(seq) == 1:\n        yield [seq[0]]\n    else:\n        yield from [[seq[i]] + p for p in permutations(seq[:i] + seq[i + 1:])]\n</code></pre> <p>\u5728\u601d\u7d22\u5230\u5e95\u4e00\u884c\u8bed\u53e5\u5b9e\u73b0\u529f\u80fd\u662f\u5426\u53ef\u884c\u65f6\uff0c\u60f3\u5230\u4e86 <code>sum()</code> \u51fd\u6570\uff0c\u60f3\u5230\u53ef\u4ee5\u7528\u5b83\u6765\u628a\u7ed3\u679c\u5408\u5e76\u5728\u4e00\u4e2a\u5217\u8868\u4e2d</p> <pre><code>def permutations(seq):\n    yield from sum([[... for p in permutations(seq[:i] + seq[i + 1:])] for i in range(len(seq))], start=[])\n</code></pre> <p>\u7136\u540e\u60f3\u5230\u53ef\u4ee5\u628a base case \u653e\u5728 <code>sum</code> \u51fd\u6570\u5916\u9762</p> <pre><code>def permutations(seq):\n    yield from [[seq[0]]] if len(seq) == 1 else sum([[[seq[i]] + p for p in permutations(seq[:i] + seq[i + 1:])] for i in range(len(seq))], start=[])    \n</code></pre> code <pre><code>def permutations(seq):\n    \"\"\"Generates all permutations of the given sequence. Each permutation is a\n    list of the elements in SEQ in a different order. The permutations may be\n    yielded in any order.\n\n    &gt;&gt;&gt; perms = permutations([100])\n    &gt;&gt;&gt; type(perms)\n    &lt;class 'generator'&gt;\n    &gt;&gt;&gt; next(perms)\n    [100]\n    &gt;&gt;&gt; try: #this piece of code prints \"No more permutations!\" if calling next would cause an error\n    ...     next(perms)\n    ... except StopIteration:\n    ...     print('No more permutations!')\n    No more permutations!\n    &gt;&gt;&gt; sorted(permutations([1, 2, 3])) # Returns a sorted list containing elements of the generator\n    [[1, 2, 3], [1, 3, 2], [2, 1, 3], [2, 3, 1], [3, 1, 2], [3, 2, 1]]\n    &gt;&gt;&gt; sorted(permutations((10, 20, 30)))\n    [[10, 20, 30], [10, 30, 20], [20, 10, 30], [20, 30, 10], [30, 10, 20], [30, 20, 10]]\n    &gt;&gt;&gt; sorted(permutations(\"ab\"))\n    [['a', 'b'], ['b', 'a']]\n    \"\"\"\n    \"*** YOUR CODE HERE ***\"\n    # seq = list(seq)\n    # if len(seq) == 1:\n    #     yield seq\n    # else:\n    #     for i in range(len(seq)):\n    #         yield from [[seq[i]] + p for p in permutations(seq[:i] + seq[i + 1:])]\n    yield from [[seq[0]]] if len(seq) == 1 else sum([[[seq[i]] + p for p in permutations(seq[:i] + seq[i + 1:])] for i in range(len(seq))], start=[])\n</code></pre>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part2/#2_2","title":"2","text":"<p>Q5</p> <p>Use <code>type(value) == str</code> to test if some <code>value</code> is a string</p> <p>\u53ef\u4ee5\u4f7f\u7528 <code>type(value) == str</code> \u6765\u5224\u65ad\u4e00\u4e2a\u4e1c\u897f\u662f\u5426\u662f\u5b57\u7b26\u4e32</p> <p>\u611f\u89c9\u6211\u6700\u540e\u7b54\u6848\u4e2d\u7684\u8fd9\u4e00\u884c\u662f\u5173\u952e\u7684\u5730\u65b9\uff1a</p> <pre><code>def make_joint(with_draw, old_pass, new_pass):\n    def joint(amount, pw_input):\n        ...\n        return withdraw(amount, pw_input)  # key point\n    ...\n    return joint\n</code></pre> code <pre><code>def make_joint(withdraw, old_pass, new_pass):\n    \"\"\"Return a password-protected withdraw function that has joint access to\n    the balance of withdraw.\n\n    &gt;&gt;&gt; w = make_withdraw(100, 'hax0r')\n    &gt;&gt;&gt; w(25, 'hax0r')\n    75\n    &gt;&gt;&gt; make_joint(w, 'my', 'secret')\n    'Incorrect password'\n    &gt;&gt;&gt; j = make_joint(w, 'hax0r', 'secret')\n    &gt;&gt;&gt; w(25, 'secret')\n    'Incorrect password'\n    &gt;&gt;&gt; j(25, 'secret')\n    50\n    &gt;&gt;&gt; j(25, 'hax0r')\n    25\n    &gt;&gt;&gt; j(100, 'secret')\n    'Insufficient funds'\n\n    &gt;&gt;&gt; j2 = make_joint(j, 'secret', 'code')\n    &gt;&gt;&gt; j2(5, 'code')\n    20\n    &gt;&gt;&gt; j2(5, 'secret')\n    15\n    &gt;&gt;&gt; j2(5, 'hax0r')\n    10\n\n    &gt;&gt;&gt; j2(25, 'password')\n    'Incorrect password'\n    &gt;&gt;&gt; j2(5, 'secret')\n    \"Frozen account. Attempts: ['my', 'secret', 'password']\"\n    &gt;&gt;&gt; j(5, 'secret')\n    \"Frozen account. Attempts: ['my', 'secret', 'password']\"\n    &gt;&gt;&gt; w(5, 'hax0r')\n    \"Frozen account. Attempts: ['my', 'secret', 'password']\"\n    &gt;&gt;&gt; make_joint(w, 'hax0r', 'hello')\n    \"Frozen account. Attempts: ['my', 'secret', 'password']\"\n    \"\"\"\n    \"*** YOUR CODE HERE ***\"\n    def joint(amount, pw_input):\n        if pw_input == new_pass:\n            return withdraw(amount, old_pass)\n        else:\n            return withdraw(amount, pw_input)\n    old_result = withdraw(0, old_pass)\n    if type(old_result) == str:\n        return old_result\n    return joint\n</code></pre>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part2/#3_1","title":"3","text":"<p>Q6</p> code <pre><code>def remainders_generator(m):\n    \"\"\"\n    Yields m generators. The ith yielded generator yields natural numbers whose\n    remainder is i when divided by m.\n\n    &gt;&gt;&gt; import types\n    &gt;&gt;&gt; [isinstance(gen, types.GeneratorType) for gen in remainders_generator(5)]\n    [True, True, True, True, True]\n    &gt;&gt;&gt; remainders_four = remainders_generator(4)\n    &gt;&gt;&gt; for i in range(4):\n    ...     print(\"First 3 natural numbers with remainder {0} when divided by 4:\".format(i))\n    ...     gen = next(remainders_four)\n    ...     for _ in range(3):\n    ...         print(next(gen))\n    First 3 natural numbers with remainder 0 when divided by 4:\n    4\n    8\n    12\n    First 3 natural numbers with remainder 1 when divided by 4:\n    1\n    5\n    9\n    First 3 natural numbers with remainder 2 when divided by 4:\n    2\n    6\n    10\n    First 3 natural numbers with remainder 3 when divided by 4:\n    3\n    7\n    11\n    \"\"\"\n    \"*** YOUR CODE HERE ***\"\n    def helper(i):\n        # yield from [n * m + i for n in naturals()]\n        if i != 0:\n            yield i\n        for n in naturals():\n            yield n * m + i\n    yield from [helper(i) for i in range(m)]\n</code></pre>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part2/#lecture-19-inheritance","title":"Lecture 19 Inheritance","text":""},{"location":"Notes%20of%20Courses/CS61A/CS61A_part2/#1_3","title":"1","text":"<p>\u7528 \u70b9\u8868\u8fbe\u5f0f dot expression \u7ed9\u5c5e\u6027\u8d4b\u503c</p> <p>\u5982\u679c\u70b9 <code>.</code> \u5de6\u8fb9\u7684\u5bf9\u8c61\u662f\u5b9e\u4f8b\uff0c\u90a3\u4e48\u8d4b\u503c\u7684\u5c31\u662f\u5b9e\u4f8b\u7684\u5c5e\u6027\uff0c</p> <p>\u800c\u5982\u679c\u70b9 <code>.</code> \u5de6\u8fb9\u7684\u5bf9\u8c61\u662f\u7c7b\uff0c\u90a3\u4e48\u8d4b\u503c\u7684\u5c31\u662f\u7c7b\u7684\u5c5e\u6027</p> <p>\u8fd9\u5c31\u89e3\u91ca\u4e86\u4e0a\u8282\u8bfe Q&amp;A \u4e2d\u7684\u7b2c\u4e00\u70b9</p> <p>\u5e76\u4e14\uff0c\u7531\u4e8e</p> <p>Attribute assignment statement adds or modifies the attribute named ...</p> <p>\u6240\u4ee5\uff0c\u5c5e\u6027\u8d4b\u503c\u5c31\u662f\uff0c\u5982\u679c\u5b9e\u4f8b/\u7c7b\u8fd8\u6ca1\u6709\u5bf9\u5e94\u540d\u5b57\u7684\u5c5e\u6027\uff0c\u90a3\u4e48\u8d4b\u503c\u5c31\u4f1a\u6dfb\u52a0\u4e00\u4e2a\u76f8\u5bf9\u5e94\u7684\u5c5e\u6027\uff0c\u800c\u5982\u679c\u5df2\u7ecf\u5b58\u5728\u5bf9\u5e94\u540d\u5b57\u7684\u5c5e\u6027\uff0c\u90a3\u4e48\u5c31\u4f1a\u4fee\u6539\u8fd9\u4e2a\u5c5e\u6027\u7684\u503c</p>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part2/#2_3","title":"2","text":"<p>\u901a\u8fc7 <code>\u5b9e\u4f8b.\u5c5e\u6027</code> \uff0c\u5b9e\u9645\u4e0a\u662f\u5148\u5728\u5b9e\u4f8b\u4e2d\u5148\u67e5\u770b\u662f\u5426\u6709\u5bf9\u5e94\u7684\u5c5e\u6027\uff0c\u5982\u679c\u6709\u5c31\u8fd4\u56de\uff0c\u5982\u679c\u6ca1\u6709\u5c31\u5230\u7c7b\u4e2d\u53bb\u67e5\u770b\u662f\u5426\u6709\u5bf9\u5e94\u7684\u5c5e\u6027</p> <p></p>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part2/#3_2","title":"3","text":"<p>\u7ee7\u627f\u7684\u8bed\u6cd5\uff1a</p> <pre><code>class &lt;name&gt;(&lt;base class&gt;):\n    &lt;suite&gt;\n</code></pre>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part2/#4_1","title":"4","text":"<p>\u4e00\u4e2a\u4f7f\u7528\u7ee7\u627f\u7684\u4f8b\u5b50\uff0c\u6ca1\u60f3\u5230\u5c45\u7136\u53ef\u4ee5\u8fd9\u6837\u4f7f\u7528\u7236\u7c7b\u7684\u65b9\u6cd5 \u6765\u4fee\u6539\u6210\u4e3a\u81ea\u5df1\u7684\u65b9\u6cd5(\u60ca\u5947\u5730\u53d1\u73b0 <code>self</code> \u53c2\u6570\u539f\u6765\u662f\u8fd9\u4e48\u7528\u7684)</p>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part2/#5_1","title":"5","text":"<p>\u5b50\u7c7b\u4e0e\u7236\u7c7b\u7684\u5c5e\u6027\u7684\u4f7f\u7528\u5173\u7cfb\u611f\u89c9\u4e5f\u662f\u548c\u5b9e\u4f8b\u4e0e\u7c7b\u7684\u5c5e\u6027\u4f7f\u7528\u5173\u7cfb\u5f88\u50cf\uff0c\u5373\u7236\u7c7b\u7684\u5c5e\u6027\u5e76\u6ca1\u6709\u590d\u5236\u5e76\u7ed1\u5b9a\u5230\u5b50\u7c7b\u4e2d\uff0c\u800c\u662f\u5728\u4f7f\u7528\u5c5e\u6027\u65f6\uff0c\u73b0\u5728\u5b50\u7c7b\u4e2d\u67e5\u770b\uff0c\u5982\u679c\u6ca1\u6709\u5c31\u5230\u7236\u7c7b\u4e2d\u67e5\u770b(\u5982\u679c\u7236\u7c7b\u4e2d\u6ca1\u6709\u5c31\u7ee7\u7eed\u5230\u7236\u7c7b\u7684\u7236\u7c7b...)</p>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part2/#6","title":"6","text":"<p>John\u5728demo\u4e2d\u5c55\u793a\u4e86 <code>CheckingAccount</code> \u7684 <code>withdraw</code> \u65b9\u6cd5\u7684\u4e24\u79cd\u5199\u6cd5\uff1a</p> <ul> <li> <p>1</p> <pre><code>class CheckingAccount(Account):\n    ...\n    def withdraw(self, amount):\n        amount = amount + 1\n        if amount &gt; self.balance:\n            return 'Insufficient funds'\n        self.balance = self.balance - amount\n        return self.balance\n</code></pre> </li> <li> <p>2</p> <pre><code>class CheckingAccount(Account):\n    ...\n    withdraw_fee = 1\n    def withdraw(self, amount):\n        return Account.withdraw(self, amount + self.withdraw_fee)\n</code></pre> </li> </ul> <p>\u524d\u8005\u76f8\u6bd4\u4e8e\u540e\u8005\u6709\u4e2a\u7c7b\u4f3c\u4e8e(\u4e4b\u524d\u6570\u636e\u62bd\u8c61\u76f8\u5173\u7684\u8bfe\u7a0b\u4e2d\u63d0\u5230\u7684)\u6253\u7834\u62bd\u8c61\u7684\u754c\u9650\u7684\u95ee\u9898\uff0c\u4f1a\u5b58\u5728\u4e00\u4e2a\u9690\u60a3\uff0c\u5373\u5982\u679c\u5bf9\u7236\u7c7b\u7684\u65b9\u6cd5\u8fdb\u884c\u4fee\u6539\uff0c\u90a3\u4e48\u5b50\u7c7b\u7684\u65b9\u6cd5\u8fd8\u4f1a\u662f\u539f\u6765\u7684\u6837\u5b50\uff0c\u800c\u540e\u8005\u5982\u679c\u7236\u7c7b\u88ab\u4fee\u6539\u4e86\uff0c\u5b50\u7c7b\u4e5f\u4f1a\u8ddf\u7740\u4e00\u8d77\u4fee\u6539</p>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part2/#7","title":"7","text":"<p>\u5173\u4e8e\u8bbe\u8ba1\u7ee7\u627f\u7684\u65f6\u5019John\u7684\u51e0\u4e2a\u5efa\u8bae\uff1a</p> <ul> <li> <p>Don't repeat yourself; use existing implementations.</p> <p>try to avoid copying and pasting code</p> <p>\u8981\u907f\u514d\u76f4\u63a5\u590d\u5236\u4ee3\u7801\uff0c\u800c\u662f\u4f7f\u7528\u5df2\u7ecf\u5b9e\u73b0\u4e86\u7684(\u7236\u7c7b\u7684)\u65b9\u6cd5\u6216\u51fd\u6570</p> </li> <li> <p>Attributes that have been overridden are still accessible via class objects.</p> <p>\u610f\u601d\u5c31\u662f\uff0c\u7236\u7c7b\u4e2d\u88ab\u5b50\u7c7b\u8986\u5199\u4e86\u7684\u5c5e\u6027\uff0c\u53ef\u4ee5\u901a\u8fc7\u7c7b\u540d\u53bb\u8bbf\u95ee</p> </li> <li> <p>Look up attributes on instances whenever possible.</p> <p>\u610f\u601d\u662f\uff0c\u5c3d\u53ef\u80fd\u4f7f\u7528\u5b9e\u4f8b\u7684\u5c5e\u6027(\u503c\u6216\u8005\u65b9\u6cd5)\uff0c(\u800c\u4e0d\u662f\u7c7b\u7684)</p> </li> </ul>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part2/#8","title":"8","text":"<p>Quote</p> <p>Inheritance and Composition</p> <p>Object-oriented programming shines when we adopt the metaphor</p> <ul> <li> <p>Inheritance is best for representing is-a relationships.</p> <p>E.g., a checking account is a specific type of account.</p> <p>So, CheckingAccount inherits from Account.</p> </li> <li> <p>Composition is best for representing has-a relationships.</p> <p>E.g., a bank has a collection of bank accounts it manages.</p> <p>So, A bank has a list of accounts as an attribute.</p> </li> </ul> <p>\u7ee7\u627f\u548c\u6784\u6210 (Inheritance and Composition)</p> <p>\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b(\u7684\u601d\u60f3/\u6982\u5ff5)\u5f88\u9002\u5408\u7c7b\u6bd4\u73b0\u5b9e\u4e2d\u7684\u4e8b\u7269</p> <ul> <li> <p>\u7ee7\u627f\u9002\u5408\u8868\u793a \u662f/\u5c5e\u4e8e \u7684\u5173\u7cfb\uff0c\u6bd4\u5982\uff1a\u652f\u7968\u8d26\u6237\u662f\u94f6\u884c\u8d26\u6237\u7684\u4e00\u79cd</p> <p>\u6240\u4ee5 \u652f\u7968\u8d26\u6237 \u4ece \u94f6\u884c\u8d26\u6237 \u7ee7\u627f</p> </li> <li> <p>\u6784\u6210\u9002\u5408\u8868\u793a \u6709 \u7684\u5173\u7cfb\uff0c\u6bd4\u5982\uff1a\u94f6\u884c\u6709\u5f88\u591a\u94f6\u884c\u8d26\u6237</p> <p>\u6240\u4ee5\uff0c\u94f6\u884c \u6709 \u4e00\u7cfb\u5217 \u94f6\u884c\u8d26\u6237 \u4f5c\u4e3a\u5b83\u7684\u5c5e\u6027</p> </li> </ul>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part2/#9","title":"9","text":"<p>\u5173\u4e8e\u7b2c\u4e00\u4e2a\u8bed\u53e5 <code>&gt;&gt;&gt; C(2).n</code> \u521b\u5efa\u51fa\u7684\u53f3\u4e0b\u89d2\u7684 <code>C</code> \u7c7b\u7684\u5b9e\u4f8b\u4e2d\u4f1a\u5b58\u5728 <code>z</code> \u7684\u7591\u60d1\u548c\u7406\u89e3</p> <p>\u7531\u4e8e\u5728\u521b\u5efa <code>C</code> \u7c7b\u7684\u65f6\u5019\uff0c\u4f1a\u8c03\u7528\u521d\u59cb\u5316\u51fd\u6570 <code>__init__()</code> \uff0c\u800c <code>C</code> \u7c7b\u672c\u8eab\u7c7b\u4e2d\u53c8\u6ca1\u6709\u521d\u59cb\u5316\u51fd\u6570\uff0c\u6240\u4ee5==\u4f1a\u8c03\u7528\u7236\u7c7b\u4e2d\u7684\u521d\u59cb\u5316\u51fd\u6570\uff0c\u6545\u4f1a\u8c03\u7528 <code>B</code> \u4e2d\u7684 <code>__init__()</code> \uff0c\u800c\u503c\u5f97\u6ce8\u610f\u7684\u4e00\u70b9\uff0c\u7531\u4e8e\u662f <code>C</code> \u7684\u5b9e\u4f8b\u8c03\u7528\u521d\u59cb\u5316\u51fd\u6570\uff0c\u6240\u4ee5 ==<code>self</code> \u88ab\u4f20\u5165\u7684\u662f <code>C</code> \u7684\u5b9e\u4f8b\u672c\u8eab\uff0c\u56e0\u6b64 <code>self.z = self.f(y)</code> \u8fd9\u4e00\u884c\u8bed\u53e5\u4e2d\uff0c\u6267\u884c\u7684 <code>f()</code> \u51fd\u6570\u662f <code>C</code> \u7c7b\u4e2d\u7684 <code>f()</code> \u65b9\u6cd5\uff0c\u6240\u4ee5\u6700\u540e\u7684\u7ed3\u679c\u662f\uff0c\u90a3\u4e2a\u5b9e\u4f8b\u4e2d\u4f1a\u5b58\u5728\u4e00\u4e2a \u503c\u4e3a2\u7684 <code>z</code> </p> <p>\u6240\u4ee5\u5bf9\u4e8epython\u4e2d\u7684 <code>self</code> \u53c2\u6570\u6709\u4e86\u65b0\u7684\u8ba4\u77e5\uff0c\u5373\u53ef\u4ee5\u4f7f\u7528\u7236\u7c7b\u7684\u65b9\u6cd5\uff0c\u800c <code>self</code> \u53c2\u6570\u4f20\u5165\u7684\u5374\u662f\u5b50\u7c7b\u7684\u5b9e\u4f8b(\u6240\u4ee5\u8981\u6ce8\u610f\u7531\u4e8e\u662f\u5b50\u7c7b\u7684\u5b9e\u4f8b\uff0c\u6709\u53ef\u80fd <code>self.xxx</code> \u4e4b\u7c7b\u7684self\u7684\u70b9\u8868\u8fbe\u5f0f\u4ee3\u7801\uff0c\u5f97\u5230\u7684\u6548\u679c\u4f1a\u548c\u4e00\u822c\u7684\u7236\u7c7b\u5b9e\u4f8b\u4e0d\u4e00\u6837\uff0c\u6bd4\u5982\u4e0a\u56fe\u4e2d <code>B</code> \u7684\u521d\u59cb\u5316\u51fd\u6570\u5982\u679c\u4f20\u5165\u7684\u662f <code>B</code> \u7c7b\u7684\u5b9e\u4f8b\uff0c\u90a3\u4e48\u5f88\u53ef\u80fd <code>self.f(y)</code> \u8c03\u7528\u7684\u662f <code>A</code> \u7c7b\u4e2d\u7684\u65b9\u6cd5)</p> <p>\u5728\u7b2c\u4e09\u4e2a\u8bed\u53e5\u4e2d\u4e5f\u51fa\u73b0\u4e86\u7c7b\u4f3c\u7684\u60c5\u51b5(\u4f46\u662f\u8fd9\u7b2c\u4e09\u4e2a\u8bed\u53e5\u6781\u5176\u5730\u7ed5)</p> <p><code>b = B(1)</code> \u4e2d\uff0c\u5b9e\u4f8b\u4e2d\u7684 <code>z</code> \u7531\u4e8e\u8c03\u7528\u4e86 <code>A</code> \u4e2d\u7684 <code>f</code> \u65b9\u6cd5\uff0c\u6240\u4ee5\u6307\u5411\u4e86\u53e6\u4e00\u4e2a <code>B</code> \u7c7b\u5b9e\u4f8b\uff0c\u800c\u65b0\u7684\u5b9e\u4f8b\u521d\u59cb\u5316\u51fd\u6570\u4e2d <code>z</code> \u53c8\u6307\u5411\u7684\u662f\u4e00\u4e2a <code>C</code> \u7c7b\u7684\u5b9e\u4f8b\uff0c\u800c <code>C</code> \u7c7b\u5b9e\u4f8b\u5728\u521d\u59cb\u5316\u65f6\uff0c\u53c8\u9700\u8981\u8c03\u7528 <code>B</code> \u7684 <code>__init__()</code> \uff0c\u7136\u540e\u5c31\u8c03\u7528\u4e86 <code>C</code> \u7c7b\u7684 <code>f</code> \u65b9\u6cd5(\u6211\u672c\u6765\u4ee5\u4e3a\u4f1a\u4e00\u76f4 <code>B</code> \u7c7b <code>C</code> \u7c7b\u6765\u56de\u4e00\u76f4\u6307\u4e0b\u53bb)</p>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part2/#10","title":"10","text":"<p>\u4e00\u4e2a\u7c7b\u53ef\u4ee5\u7ee7\u627f\u591a\u4e2a\u7236\u7c7b\uff0c\u5982</p> <pre><code>class AsSeenOnTVAccount(CheckingAccount, SavingsAccount):\n    def __init__(self, account_holder):\n        self.holder = account_holder\n        self.balance = 1\n</code></pre>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part2/#11","title":"11","text":"<p>now it's hard for me to show you why this (multiple inheritance tends to make programs complicated) is the case, so instead I'll just show you an analogy about human inheritance.</p> <p></p> <p>\u5728\u4f7f\u7528\u591a\u91cd\u7ee7\u627f\u7684\u65f6\u5019\uff0c\u9664\u975e\u662f\u771f\u7684\u5f88\u91cd\u8981\u7684\u5173\u7cfb\uff0c\u6216\u8005\u5341\u5206\u5fc5\u987b\uff0c\u5728\u4f7f\u7528\u65f6\u8981\u5f88\u6ce8\u610f\uff0c\u56e0\u4e3a\u591a\u91cd\u7ee7\u627f\u4f1a\u4f7f\u7a0b\u5e8f\u53d8\u5f97\u590d\u6742\uff0c\u867d\u7136\u5f88\u96be\u4e3e\u51fa\u4f8b\u5b50\uff0c\u4f46\u662f\u53ef\u4ee5\u53c2\u8003\u73b0\u5b9e\u4e2d(\u751f\u7269\u4e0a)\u7684\u7ee7\u627f</p>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part2/#lecture-19-qa","title":"Lecture 19 Q&amp;A","text":""},{"location":"Notes%20of%20Courses/CS61A/CS61A_part2/#1_4","title":"1","text":"<p><code>type()</code> \u51fd\u6570\u5982\u679c\u8fd4\u56de\u7c7b\uff0c\u53ef\u4ee5\u901a\u8fc7\u5b83\u7684\u8fd4\u56de\u503c\u6765\u8bbf\u95ee\u7c7b\u5185\u7684\u5c5e\u6027\uff0c\u5982</p> <pre><code>class Account:\n    def __init__(self, account_holder):\n        self.holderr = account_holder\n        self.balance = 0\n        \n    def deposit(self, amount):\n        self.balance = self.balance = amount\n        return self.balance\n</code></pre> <pre><code>&gt;&gt;&gt; a = Account('John')\n&gt;&gt;&gt; type(a).deposit(a, 100)\n100\n</code></pre> <p>\u4f46\u662f Hany \u8bf4\u5e94\u8be5\u907f\u514d\u4f7f\u7528\u8fd9\u79cd\u5199\u6cd5\uff0c\u56e0\u4e3a\u5927\u591a\u6570\u4eba\u4e0d\u4f1a\u600e\u4e48\u5199</p>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part2/#2_4","title":"2","text":"<p>\u6839\u636e John \u7684\u89e3\u91ca\uff0c<code>super()</code> \u7684\u4f5c\u7528\u662f\uff0c\u4e0d\u5728\u672c\u7c7b\u4e2d\u5bfb\u627e <code>.</code> \u4e4b\u540e\u7684\u4e1c\u897f\uff0c\u800c\u662f\u5728\u4e0a\u4e00\u7ea7\u7236\u7c7b\u4e2d\u5bfb\u627e</p> <p>\u5e76\u4e14\u5728\u4f7f\u7528\u7236\u7c7b\u7684\u65b9\u6cd5\u65f6\uff0c\u4f1a\u5c06\u5b9e\u4f8b\u81ea\u52a8\u4f20\u5165 <code>self</code> \u53c2\u6570\uff0c\u548c\u76f4\u63a5 <code>\u7236\u7c7b\u540d.\u65b9\u6cd5</code> \u7684\u4f7f\u7528\u5f62\u5f0f\u7565\u6709\u4e0d\u540c</p>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part2/#3_3","title":"3","text":"<p>\u6709\u591a\u7ee7\u627f\u7684\u7c7b\u5728\u4f7f\u7528\u672c\u7c7b\u4e2d\u6ca1\u6709\u7684\u65b9\u6cd5\u65f6\uff0c\u662f\u5148\u5728\u4e0a\u4e00\u7ea7\u7236\u7c7b\u4e2d\u6309\u987a\u5e8f\u5bfb\u627e\uff0c\u6bd4\u5982\u4e0a\u56fe\uff0c\u5982\u679c\u5728 <code>CheckingAccount</code> \u4e2d\u6ca1\u627e\u5230\u5bf9\u5e94\u7684\u65b9\u6cd5\uff0c\u90a3\u4e48\u4e0d\u4f1a\u5728 <code>CheckingAccount</code> \u7684\u7236\u7c7b( <code>Acount</code> \u7c7b)\u4e2d\u5bfb\u627e\uff0c\u800c\u662f\u5728 <code>SavingAccount</code> \u7c7b\u4e2d\u5bfb\u627e\uff0c\u5982\u679c\u6240\u6709\u7684\u4e0a\u4e00\u7ea7\u7236\u7c7b\u4e2d\u90fd\u6ca1\u627e\u5230\u5bf9\u5e94\u7684\u65b9\u6cd5\uff0c\u90a3\u4e48\u624d\u4f1a\u5728\u4e0a\u4e24\u7ea7\u7236\u7c7b\u4e2d\u5bfb\u627e(\u5373\u7236\u7c7b\u7684\u7236\u7c7b)</p>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part2/#4_2","title":"4","text":"<p>Quote</p> <p>John:</p> <p>well i'd say at the outset that it's often the case that tracing through, uh, tree recursion is not something that humans can tolerate, like it's, it's just really messy sometimes, um, so the right answer is to shift the way in which you approach understanding, uh, implementation to get away from tracing, and instead just treat the recursive calls as abstractions, they do the thing that they're supposed to do, but how they do them is not your problem, and then like you can put it together. but this is not, not like obvious or easy so, um, so maybe we can talk about that with a particular example. so maybe while i read this maybe hany can, uh, say whether that makes sense to him.</p> <p> </p> <p>Hany:</p> <p>i i'll add one more thing to it, so john's absolutely right that tracing tree recursion is very hard, you have to hold a lot in your memory. um, so one way to fix it is as he just said, is to just think differently about it. it's not about tracing, it's about thinking about the fundamental nature of, um, the, the functions and they just do what you want them to do, and the other is to just use toy examples.</p> <p>John\uff1a</p> <p>\u55ef\uff0c\u6211\u9996\u5148\u8981\u8bf4\u7684\u662f\uff0c\u5f80\u5f80\u60c5\u51b5\u662f\uff0c\u8ffd\u8e2a\u6811\u5f62\u9012\u5f52\u5bf9\u4eba\u7c7b\u6765\u8bf4\u662f\u65e0\u6cd5\u5fcd\u53d7\u7684\uff0c\u5c31\u50cf\u6709\u65f6\u5019\u975e\u5e38\u6df7\u4e71\u4e00\u6837\u3002\u6240\u4ee5\u6b63\u786e\u7684\u7b54\u6848\u662f\u6539\u53d8\u4f60\u7406\u89e3\u5b9e\u73b0\u7684\u65b9\u5f0f\uff0c\u6446\u8131\u8ffd\u8e2a\uff0c\u800c\u662f\u5c06\u9012\u5f52\u8c03\u7528\u89c6\u4e3a\u62bd\u8c61\uff0c\u5b83\u4eec\u6267\u884c\u5b83\u4eec\u5e94\u8be5\u6267\u884c\u7684\u4efb\u52a1\uff0c\u4f46\u5b83\u4eec\u5982\u4f55\u6267\u884c\u4e0d\u662f\u4f60\u7684\u95ee\u9898\uff0c\u7136\u540e\u4f60\u53ef\u4ee5\u5c06\u5b83\u4eec\u7ec4\u5408\u8d77\u6765\u3002\u4f46\u8fd9\u5e76\u4e0d\u660e\u663e\u6216\u5bb9\u6613\uff0c\u6240\u4ee5\u4e5f\u8bb8\u6211\u4eec\u53ef\u4ee5\u7528\u4e00\u4e2a\u5177\u4f53\u7684\u4f8b\u5b50\u6765\u8ba8\u8bba\u4e00\u4e0b\u3002\u6240\u4ee5\u4e5f\u8bb8\u5728\u6211\u9605\u8bfb\u8fd9\u4e2a\u7684\u65f6\u5019\uff0cHany\u53ef\u4ee5\u8bf4\u4e00\u4e0b\u8fd9\u662f\u5426\u6709\u610f\u4e49\u3002</p> <p> </p> <p>Hany\uff1a</p> <p>\u6211\u8981\u8865\u5145\u4e00\u70b9\uff0cJohn\u8bf4\u5f97\u5bf9\uff0c\u8ffd\u8e2a\u6811\u5f62\u9012\u5f52\u975e\u5e38\u56f0\u96be\uff0c\u4f60\u5fc5\u987b\u8bb0\u4f4f\u5f88\u591a\u4e1c\u897f\u3002\u6240\u4ee5\u89e3\u51b3\u7684\u4e00\u79cd\u65b9\u6cd5\u5c31\u50cf\u4ed6\u521a\u624d\u8bf4\u7684\u90a3\u6837\uff0c\u53ea\u662f\u4ee5\u4e0d\u540c\u7684\u65b9\u5f0f\u601d\u8003\u3002\u8fd9\u4e0d\u662f\u5173\u4e8e\u8ffd\u8e2a\uff0c\u800c\u662f\u601d\u8003\u51fd\u6570\u7684\u57fa\u672c\u6027\u8d28\uff0c\u5b83\u4eec\u53ea\u662f\u6267\u884c\u4f60\u60f3\u8981\u5b83\u4eec\u6267\u884c\u7684\u4efb\u52a1\uff0c\u53e6\u4e00\u79cd\u65b9\u6cd5\u662f\u4f7f\u7528\u7b80\u5355\u7684\u793a\u4f8b\u3002</p> <p>John \u548c Hany \u8bf4\u5230\u5bf9\u6811\u5f62\u9012\u5f52\u8ffd\u8e2a\u5f88\u96be\uff0c\u6240\u4ee5\u4e0d\u5e94\u8be5\u53bb\u8ffd\u8e2a\u9012\u5f52(\u6211\u8ba4\u4e3a\u8fd9\u91cc\u53ef\u4ee5\u7406\u89e3\u4e3a\uff0c\u5f04\u6e05\u695a\u9012\u5f52\u7684\u6bcf\u4e00\u6b65\u7684\u5177\u4f53\u6548\u679c)\uff0c\u800c\u662f\u6362\u4e00\u79cd\u60f3\u6cd5\u53bb\u601d\u8003(\u5373\u4e4b\u524d\u603b\u7ed3\u7684\u5047\u5b9a\u51fd\u6570\u80fd\u8fd4\u56de\u6b63\u786e/\u6240\u9700\u7684\u503c)</p>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part2/#5_2","title":"5","text":"<p>John \u89e3\u7b54 Lab04 \u4e2d\u7684 Q5 \uff0c</p> <p>\u63d0\u5230\uff0c\u5728\u89e3\u7b54/\u6784\u5efa\u9012\u5f52\u65f6\uff0c\u53ef\u4ee5\u5148\u62ff\u7b80\u5355\u7684\u4f8b\u5b50\u6765\u8fdb\u884c\u601d\u8003\uff0c\u6bd4\u5982 <code>n = 123 ; t = 2</code> (\u800c\u4e0d\u8981\u4e0a\u6765\u5c31\u5c1d\u8bd5\u5f04\u6e05\u695a 5 \u4f4d\u6570)\uff0c\u7136\u540e\u901a\u8fc7\u5206\u6790\u7b80\u5355\u7684\u4f8b\u5b50\uff0c\u601d\u8def\u5c31\u4f1a\u5f88\u6e05\u6670</p>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part2/#lab-07","title":"Lab 07","text":""},{"location":"Notes%20of%20Courses/CS61A/CS61A_part2/#1_5","title":"1","text":"<p>\u5728\u505aQ1\u65f6\uff0c\u672c\u6765\u4f7f\u7528</p> <pre><code>yield from [x * multiplier for x in it]\n</code></pre> <p>\u4f46\u662f\u5f53 <code>it</code> \u662f\u80fd\u65e0\u7a77\u8fed\u4ee3\u7684\u751f\u6210\u5668\u65f6(\u5982\u8981\u6d4b\u8bd5\u7684 <code>naturals()</code> )\uff0c\u5c31\u4f1a\u8d85\u65f6\uff0c</p> <p>\u4f46\u6211\u8be2\u95ee chatgpt \uff0c\u5b83\u63d0\u4f9b\u7684\u4ee3\u7801\u4e0e\u6211\u4e0a\u9762\u7684\u4ee3\u7801\u5f88\u50cf\uff0c\u53ea\u662f\u628a\u5217\u8868\u6362\u6210\u4e86\u5143\u7ec4\uff0c\u7136\u540e\u6d4b\u8bd5\u7adf\u7136\u4e0d\u4f1a\u8d85\u65f6\uff0c</p> <p>\u6240\u4ee5\u4f7f\u7528 <code>yield from</code> \u65f6\u53ef\u4ee5\u4f7f\u7528\u5143\u7ec4\u6765\u907f\u514d\u53ef\u4ee5\u65e0\u7a77\u8fed\u4ee3\u7684\u8fed\u4ee3\u5668\u9020\u6210\u7684\u8d85\u65f6</p> <p>\u4e0b\u9762\u662f\u8be2\u95ee chatgpt \u4e3a\u4ec0\u4e48\u4f1a\u8fd9\u6837\u7684\u539f\u56e0\u7684\u8bb0\u5f55</p> chat log <p>You:</p> <p>Generators also allow us to represent infinite sequences, such as the sequence of natural numbers (1, 2, ...) shown in the function below!</p> <pre><code>def naturals():\n    \"\"\"A generator function that yields the infinite sequence of natural\n    numbers, starting at 1.\n\n    &gt;&gt;&gt; m = naturals()\n    &gt;&gt;&gt; type(m)\n    &lt;class 'generator'&gt;\n    &gt;&gt;&gt; [next(m) for _ in range(10)]\n    [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\n    \"\"\"\n    i = 1\n    while True:\n        yield i\n        i += 1\n</code></pre> <p>Q1: Scale</p> <p>Implement the generator function <code>scale(it, multiplier)</code>, which yields elements of the given iterable <code>it</code>, scaled by <code>multiplier</code>. As an extra challenge, try writing this function using a <code>yield from</code> statement!</p> <pre><code>def scale(it, multiplier):\n    \"\"\"Yield elements of the iterable it scaled by a number multiplier.\n\n    &gt;&gt;&gt; m = scale([1, 5, 2], 5)\n    &gt;&gt;&gt; type(m)\n    &lt;class 'generator'&gt;\n    &gt;&gt;&gt; list(m)\n    [5, 25, 10]\n\n    &gt;&gt;&gt; m = scale(naturals(), 2)\n    &gt;&gt;&gt; [next(m) for _ in range(5)]\n    [2, 4, 6, 8, 10]\n    \"\"\"\n    \"*** YOUR CODE HERE ***\"\n</code></pre> <p> </p> <p>ChatGPT:</p> <p>Certainly! You can implement the <code>scale</code> generator function using a <code>yield from</code> statement. Here's one way to do it:</p> <pre><code>def scale(it, multiplier):\n    \"\"\"Yield elements of the iterable it scaled by a number multiplier.\"\"\"\n    yield from (element * multiplier for element in it)\n\n# Test cases\nm = scale([1, 5, 2], 5)\nprint(type(m))  # &lt;class 'generator'&gt;\nprint(list(m))  # [5, 25, 10]\n\nm = scale(naturals(), 2)\nprint([next(m) for _ in range(5)])  # [2, 4, 6, 8, 10]\n</code></pre> <p>In this implementation, the <code>scale</code> function uses a generator expression with <code>yield from</code> to yield elements of the iterable <code>it</code> scaled by the given <code>multiplier</code>. The generator expression <code>(element * multiplier for element in it)</code> generates scaled elements one by one, and <code>yield from</code> is used to yield each element from this expression.</p> <p> </p> <p>You:</p> <p>why timeout by using list type while not by using tuple type?</p> <p> </p> <p>ChatGPT:</p> <p>If you are experiencing a timeout when using a list type but not when using a tuple type, it might be due to the differences in how lists and tuples are handled in Python. Lists are mutable, meaning their elements can be changed after the list is created, while tuples are immutable, and their elements cannot be changed.</p> <p>When you use a list comprehension with a generator expression and <code>yield from</code>, the entire list needs to be generated in memory before any elements can be yielded. This might be problematic for an infinite generator, as attempting to generate an infinite list in memory can lead to a timeout.</p> <p>On the other hand, when using a tuple, it is immutable. Python can optimize and generate each element of the tuple on-the-fly without needing to create an entire list in memory. This can be more efficient, especially when dealing with infinite sequences.</p> <p>Here's an example to illustrate the difference:</p> <pre><code># Using a list\ndef scale_list(it, multiplier):\n    yield from [x * multiplier for x in it]\n\n# Using a tuple\ndef scale_tuple(it, multiplier):\n    yield from (x * multiplier for x in it)\n\n# Test cases\nm_list = scale_list(naturals(), 2)\n# This may lead to a timeout because it attempts to generate an infinite list in memory.\n# print(list(m_list))\n\nm_tuple = scale_tuple(naturals(), 2)\n# This is more efficient because it generates each element on-the-fly without creating an entire list.\nprint([next(m_tuple) for _ in range(5)])\n</code></pre> <p>In the commented-out line for <code>scale_list</code>, attempting to convert an infinite list to a list object might cause the program to run out of memory or take a very long time, leading to a timeout. Using a tuple can avoid this issue because it doesn't try to create an entire list in memory.</p> <p> </p> <p>You:</p> <p>translate to chinese</p> <p> </p> <p>ChatGPT:</p> <p>\u5982\u679c\u4f60\u5728\u4f7f\u7528\u5217\u8868\u7c7b\u578b\u65f6\u9047\u5230\u8d85\u65f6\u95ee\u9898\uff0c\u4f46\u5728\u4f7f\u7528\u5143\u7ec4\u7c7b\u578b\u65f6\u5374\u6ca1\u6709\uff0c\u8fd9\u53ef\u80fd\u662f\u7531\u4e8e Python \u5904\u7406\u5217\u8868\u548c\u5143\u7ec4\u7684\u65b9\u5f0f\u4e0d\u540c\u3002\u5217\u8868\u662f\u53ef\u53d8\u7684\uff0c\u610f\u5473\u7740\u5b83\u4eec\u7684\u5143\u7d20\u5728\u5217\u8868\u521b\u5efa\u540e\u53ef\u4ee5\u88ab\u4fee\u6539\uff0c\u800c\u5143\u7ec4\u662f\u4e0d\u53ef\u53d8\u7684\uff0c\u5b83\u4eec\u7684\u5143\u7d20\u4e0d\u80fd\u88ab\u4fee\u6539\u3002</p> <p>\u5f53\u4f60\u4f7f\u7528\u5217\u8868\u89e3\u6790\u4e0e\u751f\u6210\u5668\u8868\u8fbe\u5f0f\u4ee5\u53ca <code>yield from</code> \u65f6\uff0c\u5728\u4ea7\u751f\u4efb\u4f55\u5143\u7d20\u4e4b\u524d\u9700\u8981\u5728\u5185\u5b58\u4e2d\u751f\u6210\u6574\u4e2a\u5217\u8868\u3002\u5bf9\u4e8e\u65e0\u9650\u751f\u6210\u5668\uff0c\u5c1d\u8bd5\u5728\u5185\u5b58\u4e2d\u751f\u6210\u65e0\u9650\u5217\u8868\u53ef\u80fd\u5bfc\u81f4\u8d85\u65f6\u3002</p> <p>\u53e6\u4e00\u65b9\u9762\uff0c\u4f7f\u7528\u5143\u7ec4\u662f\u4e0d\u53ef\u53d8\u7684\u3002Python \u53ef\u4ee5\u4f18\u5316\u5e76\u5728\u9700\u8981\u65f6\u5373\u65f6\u751f\u6210\u5143\u7ec4\u7684\u6bcf\u4e2a\u5143\u7d20\uff0c\u800c\u65e0\u9700\u521b\u5efa\u6574\u4e2a\u5217\u8868\u5728\u5185\u5b58\u4e2d\u3002\u8fd9\u53ef\u80fd\u66f4\u6709\u6548\u7387\uff0c\u5c24\u5176\u662f\u5728\u5904\u7406\u65e0\u9650\u5e8f\u5217\u65f6\u3002</p> <p>\u4ee5\u4e0b\u662f\u4e00\u4e2a\u793a\u4f8b\uff0c\u7528\u4ee5\u8bf4\u660e\u8fd9\u79cd\u5dee\u5f02\uff1a</p> <pre><code># \u4f7f\u7528\u5217\u8868\ndef scale_list(it, multiplier):\n    yield from [x * multiplier for x in it]\n\n# \u4f7f\u7528\u5143\u7ec4\ndef scale_tuple(it, multiplier):\n    yield from (x * multiplier for x in it)\n\n# \u6d4b\u8bd5\u6848\u4f8b\nm_list = scale_list(naturals(), 2)\n# \u8fd9\u53ef\u80fd\u5bfc\u81f4\u8d85\u65f6\uff0c\u56e0\u4e3a\u5b83\u8bd5\u56fe\u5728\u5185\u5b58\u4e2d\u751f\u6210\u4e00\u4e2a\u65e0\u9650\u5217\u8868\u3002\n# print(list(m_list))\n\nm_tuple = scale_tuple(naturals(), 2)\n# \u8fd9\u66f4\u52a0\u6709\u6548\uff0c\u56e0\u4e3a\u5b83\u5728\u4e0d\u521b\u5efa\u6574\u4e2a\u5217\u8868\u7684\u60c5\u51b5\u4e0b\u5373\u65f6\u751f\u6210\u6bcf\u4e2a\u5143\u7d20\u3002\nprint([next(m_tuple) for _ in range(5)])\n</code></pre> <p>\u5728\u6ce8\u91ca\u6389\u7684 <code>scale_list</code> \u7684\u884c\u4e2d\uff0c\u8bd5\u56fe\u5c06\u65e0\u9650\u5217\u8868\u8f6c\u6362\u4e3a\u5217\u8868\u5bf9\u8c61\u53ef\u80fd\u5bfc\u81f4\u7a0b\u5e8f\u8017\u5c3d\u5185\u5b58\u6216\u82b1\u8d39\u5f88\u957f\u65f6\u95f4\uff0c\u4ece\u800c\u5bfc\u81f4\u8d85\u65f6\u3002\u4f7f\u7528\u5143\u7ec4\u53ef\u4ee5\u907f\u514d\u8fd9\u4e2a\u95ee\u9898\uff0c\u56e0\u4e3a\u5b83\u4e0d\u4f1a\u5c1d\u8bd5\u5728\u5185\u5b58\u4e2d\u521b\u5efa\u6574\u4e2a\u5217\u8868\u3002</p>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part2/#2_5","title":"2","text":"<p>Q5\u4e2d\uff0c\u6211\u5229\u7528\u5217\u8868\u7684 <code>.pop()</code> \u65b9\u6cd5\u6765\u5b9e\u73b0 <code>Player.play()</code> \u65b9\u6cd5\uff0c</p> <p>\u5728\u4e4b\u524d\u8bfe\u7a0b\u89c6\u9891\u91cc\u4ecb\u7ecd\u5217\u8868\u7684 <code>.pop()</code> \u65b9\u6cd5\u662f\u53ea\u80fd\u79fb\u9664\u5e76\u8fd4\u56de\u5217\u8868\u7684\u6700\u540e\u4e00\u4e2a\u5143\u7d20\uff0c\u4f46\u4e0a\u7f51\u67e5\u8be2\u53d1\u73b0 <code>.pop()</code> \u65b9\u6cd5\u53ea\u662f\u9ed8\u8ba4\u6700\u540e\u4e00\u4e2a\uff0c\u8fd8\u53ef\u4ee5\u4f20\u5165\u4e0b\u6807\u6307\u5b9a\u8981\u79fb\u9664\u5e76\u8fd4\u56de\u7684\u5143\u7d20\uff0c\u4f8b\u5982</p> <pre><code>&gt;&gt;&gt; list = [1, 2, 3, 4, 5]\n&gt;&gt;&gt; list.pop()\n5\n&gt;&gt;&gt; list\n[1, 2, 3, 4]\n&gt;&gt;&gt; list.pop(1)\n2\n&gt;&gt;&gt; list\n[1, 3, 4]\n</code></pre>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part2/#project-ants","title":"Project Ants","text":""},{"location":"Notes%20of%20Courses/CS61A/CS61A_part2/#1_6","title":"1","text":"<p>Problem 4 \u4e2d\uff0c\u6709\u4e00\u70b9\u503c\u5f97\u6ce8\u610f</p> <p>Quote</p> <p>A good way to approach the implementation to <code>ShortThrower</code> and <code>LongThrower</code> is to have it inherit the <code>nearest_bee</code> method from the base <code>ThrowerAnt</code> class. The logic of choosing which bee a thrower ant will attack is essentially the same, except the <code>ShortThrower</code> and <code>LongThrower</code> ants have maximum and minimum ranges, respectively.</p> <p>To implement these behaviors, you will need to modify the <code>nearest_bee</code> method to reference <code>min_range</code> and <code>max_range</code> attributes, and only return a bee that is in range.</p> <p>\u8fd9\u9898\u4e2d\u8981\u6c42\u5b9e\u73b0\u4e24\u4e2a \u8682\u8681\u5c04\u624b \u7684\u5b50\u7c7b\u7684\u5bfb\u627e\u5c04\u51fb\u76ee\u6807\u7684\u65b9\u6cd5\uff0c\u6211\u672c\u6765\u5dee\u70b9\u5c31\u662f\u60f3\u7684\u5728\u539f\u6709\u7684\u4ee3\u7801\u4e0a\u8fdb\u884c\u4fee\u6539\uff0c\u770b\u5230\u4e0a\u9762\u8fd9\u6bb5\u8bdd\uff0c\u6211\u624d\u60f3\u5230\u6709\u66f4\u597d\u7684\u65b9\u6cd5--\u53bb\u4f7f\u7528\u7236\u7c7b\u7684\u65b9\u6cd5\uff0c</p> <p>\u6559\u7a0b\u4e2d\u5efa\u8bae\u7684\u65b9\u6cd5\u662f\uff0c\u5728\u7236\u7c7b\u4e2d\u6dfb\u52a0\u5c5e\u6027\uff0c\u518d\u5728\u5b50\u7c7b\u4e2d(\u6709\u9700\u8981\u7684\u8bdd)\u8fdb\u884c\u8986\u5199</p> <p>\u6700\u540e\u53d1\u73b0\u91c7\u7528\u6559\u7a0b\u4e2d\u7684\u601d\u8def\uff0c\u5c45\u7136\u53ef\u4ee5\u5728\u5b50\u7c7b\u4e2d\u4e0d\u7528\u91cd\u65b0\u5b9e\u73b0\u65b9\u6cd5\uff0c\u76f4\u63a5\u4f7f\u7528\u7236\u7c7b\u4e2d\u7684\u65b9\u6cd5\u5373\u53ef</p> <p>\u6240\u4ee5\u8bf4\uff0c\u80fd\u7528\u7236\u7c7b\u7684\u5c5e\u6027(\u503c\u6216\u8005\u65b9\u6cd5)\uff0c\u5c31\u7528\u7236\u7c7b\u7684\uff0c\u5c3d\u53ef\u80fd\u7684\u4e0d\u8981\u53bb\u91cd\u65b0\u5b9e\u73b0 </p> code <pre><code>class ThrowerAnt(Ant):\n    ...\n    # ADD/OVERRIDE CLASS ATTRIBUTES HERE\n    food_cost = 3\n    min_range = 0\n    max_range = float('inf')\n\n    def nearest_bee(self, beehive):\n        \"\"\"Return the nearest Bee in a Place that is not the HIVE (beehive), connected to\n        the ThrowerAnt's Place by following entrances.\n\n        This method returns None if there is no such Bee (or none in range).\n        \"\"\"\n        # BEGIN Problem 3 and 4\n        # return rANTdom_else_none(self.place.bees) # REPLACE THIS LINE\n        place = self.place\n        dist = 0\n        while place is not beehive:\n            if place.bees and dist &gt;= self.min_range and dist &lt;= self.max_range:\n                return rANTdom_else_none(place.bees)\n            place = place.entrance\n            dist += 1\n        return None\n        # END Problem 3 and 4\n\n    ...\n\nclass ShortThrower(ThrowerAnt):\n    \"\"\"A ThrowerAnt that only throws leaves at Bees at most 3 places away.\"\"\"\n\n    name = 'Short'\n    food_cost = 2\n    # OVERRIDE CLASS ATTRIBUTES HERE\n    # BEGIN Problem 4\n    max_range = 3\n    # implemented = False   # Change to True to view in the GUI\n    implemented = True\n    # END Problem 4\n\nclass LongThrower(ThrowerAnt):\n    \"\"\"A ThrowerAnt that only throws leaves at Bees at least 5 places away.\"\"\"\n\n    name = 'Long'\n    food_cost = 2\n    # OVERRIDE CLASS ATTRIBUTES HERE\n    # BEGIN Problem 4\n    min_range = 5\n    # implemented = False   # Change to True to view in the GUI\n    implemented = True\n    # END Problem 4\n</code></pre>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part2/#2_6","title":"2","text":"<p>Problem 4 \u4e2d\u6709\u4e00\u70b9\u63d0\u793a\uff0c</p> <p>\u53ef\u4ee5\u4f7f\u7528 <code>float('inf')</code> \u6765\u83b7\u5f97\u4e00\u4e2a\u65e0\u7a77\u5927\u7684\u503c</p>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part2/#3_4","title":"3","text":"<p>\u5728 Extra Credit \u4e2d\uff0c</p> <p>Some hints:</p> <p>All instances of the same class share the same class attributes. How can you use this information to tell whether a QueenAnt instance is the true QueenAnt?</p> <p>...</p> <p>\u57fa\u4e8e\u8fd9\u4e00\u70b9\u63d0\u793a\uff0c\u6240\u4ee5\u6211\u91c7\u53d6\u7684\u65b9\u6cd5\u662f\uff0c\u5728 <code>Ant</code> \u7c7b\u4e2d\u8bbe\u7f6e\u4e00\u4e2a\u7c7b\u5c5e\u6027 <code>true_queen = None</code> \u9ed8\u8ba4\u503c\u662f <code>None</code> \uff0c\u5f53\u7b2c\u4e00\u4e2a/\u771f\u8681\u540e\u88ab\u521b\u5efa\u65f6(\u901a\u8fc7\u5224\u65ad <code>true_queen</code> \u662f\u5426\u4e3a <code>None</code> \u6765\u786e\u5b9a\u662f\u5426\u662f\u771f\u8681\u540e)\uff0c <code>true_queen</code> \u5c31\u4f1a\u6307\u5411\u5b83\uff0c\u800c\u4e4b\u540e\u7684\u8681\u540e\u5c31\u53ef\u4ee5\u4f9d\u636e\u8fd9\u4e2a\u5c5e\u6027\u6765\u5224\u65ad\u51fa\u662f\u5047\u8681\u540e(impostor)</p> code <pre><code>class Ant(Insect):\n    ...\n    # ADD CLASS ATTRIBUTES HERE\n    true_queen = None\n\n    ...\n    def remove_from(self, place):\n        if self == self.true_queen:\n            return\n                if place.ant is self:\n            place.ant = None\n        elif place.ant is None:\n            assert False, '{0} is not in {1}'.format(self, place)\n        else:\n            # queen or container (optional) or other situation\n            place.ant.remove_ant(self)\n        Insect.remove_from(self, place)\n\n...\n\n# BEGIN Problem EC\n# class QueenAnt(Ant):  # You should change this line\nclass QueenAnt(ScubaThrower):\n# END Problem EC\n    \"\"\"The Queen of the colony. The game is over if a bee enters her place.\"\"\"\n\n    name = 'Queen'\n    food_cost = 7\n    # OVERRIDE CLASS ATTRIBUTES HERE\n    # BEGIN Problem EC\n    # implemented = False   # Change to True to view in the GUI\n    implemented = True\n    # END Problem EC\n\n    def __init__(self, armor=1):\n        # BEGIN Problem EC\n        \"*** YOUR CODE HERE ***\"\n        ScubaThrower.__init__(self, armor)\n        self.buffed_ants = []\n        if not Ant.true_queen:\n            Ant.true_queen = self\n        # END Problem EC\n\n    def action(self, gamestate):\n        \"\"\"A queen ant throws a leaf, but also doubles the damage of ants\n        in her tunnel.\n\n        Impostor queens do only one thing: reduce their own armor to 0.\n        \"\"\"\n        # BEGIN Problem EC\n        \"*** YOUR CODE HERE ***\"\n        if self is not self.true_queen:\n            Ant.reduce_armor(self, self.armor)\n            return\n        ScubaThrower.action(self, gamestate)\n        place = self.place.exit\n        while place:\n            if place.ant and place.ant not in self.buffed_ants:\n                place.ant.damage *= 2\n                self.buffed_ants += [place.ant]\n            place = place.exit\n        # END Problem EC\n\n    def reduce_armor(self, amount):\n        \"\"\"Reduce armor by AMOUNT, and if the True QueenAnt has no armor\n        remaining, signal the end of the game.\n        \"\"\"\n        # BEGIN Problem EC\n        \"*** YOUR CODE HERE ***\"\n        ScubaThrower.reduce_armor(self, amount)\n        if self == self.true_queen and self.armor &lt;= 0:\n            bees_win()\n        # END Problem EC\n</code></pre>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part2/#4_3","title":"4","text":"<p>Optional Problem 2 \u4e2d</p> <p>Hint: You may find the <code>isinstance</code> function useful for checking if an object is an instance of a given class. For example:</p> <pre><code>    &gt;&gt;&gt; a = Foo()\n    &gt;&gt;&gt; isinstance(a, Foo)\n    True\n</code></pre> <p>\u53ef\u4ee5\u7528 <code>isinstance()</code> \u7684\u51fd\u6570\u6765\u5224\u65ad\u67d0\u4e2a\u5b9e\u4f8b\u662f\u5426\u662f\u67d0\u4e2a\u7c7b</p>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part2/#5_3","title":"5","text":"<p>Optional Problem 2 \u4e2d</p> <p>Note: the constructor of <code>ContainerAnt.__init__</code> is implemented as such</p> <pre><code>    def __init__(self, *args, **kwargs):\n        Ant.__init__(self, *args, **kwargs)\n        self.contained_ant = None\n</code></pre> <p>As we saw in Hog, we have that <code>args</code> is bound to all positional arguments (that is all arguments not passed not with keywords, and <code>kwargs</code> is bound to all the keyword arguments. This ensures that both sets of arguments are passed to the Ant constructor).</p> <p><code>args</code> \u662f\u6240\u6709\u6ca1\u6709 \u5173\u952e\u5b57 (\u6bd4\u5982 <code>key=</code> \u3001 <code>base=</code> \u5c31\u662f\u5173\u952e\u5b57) \u7684\u53c2\u6570\uff0c\u800c <code>kwargs</code> \u662f\u6240\u6709\u6709 \u5173\u952e\u5b57 \u7684\u53c2\u6570</p>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part2/#6_1","title":"6","text":"<p>Optional Problem 2 \u6709\u70b9\u96be\uff0cdebug\u90fddebug\u4e8610\u591a\u6b21\uff0c\u6210\u529f\u5b9e\u73b0\u7684\u4ee3\u7801\u5728\u4e0b\u9762</p> code <pre><code>class Ant(Insect):\n    ...\n\n    def add_to(self, place):\n        if place.ant is None:\n            place.ant = self\n        else:\n            # BEGIN Problem Optional 2\n            # if not (isinstance(self, ContainerAnt) and self.can_contain(place.ant)) and not (isinstance(place.ant, ContainerAnt) and place.ant.can_contain(self)):\n            if isinstance(self, ContainerAnt) and self.can_contain(place.ant):\n                self.contain_ant(place.ant)\n                place.ant = self\n            elif isinstance(place.ant, ContainerAnt) and place.ant.can_contain(self):\n                place.ant.contain_ant(self)\n            else:\n                assert place.ant is None, 'Two ants in {0}'.format(place)\n            # END Problem Optional 2\n        Insect.add_to(self, place)\n\n    ...\n\n...\n\nclass ContainerAnt(Ant):\n    def __init__(self, *args, **kwargs):\n        Ant.__init__(self, *args, **kwargs)\n        self.contained_ant = None\n\n    def can_contain(self, other):\n        # BEGIN Problem Optional 2\n        \"*** YOUR CODE HERE ***\"\n        return not self.contained_ant and not isinstance(other, ContainerAnt)\n        # END Problem Optional 2\n\n    def contain_ant(self, ant):\n        # BEGIN Problem Optional 2\n        \"*** YOUR CODE HERE ***\"\n        if self.can_contain(ant):\n            self.contained_ant = ant\n            # self.place.ant = self\n        # END Problem Optional 2\n\n    def remove_ant(self, ant):\n        if self.contained_ant is not ant:\n            assert False, \"{} does not contain {}\".format(self, ant)\n        self.contained_ant = None\n\n    def remove_from(self, place):\n        # Special handling for container ants (this is optional)\n        if place.ant is self:\n            # Container was removed. Contained ant should remain in the game\n            place.ant = place.ant.contained_ant\n            Insect.remove_from(self, place)\n        else:\n            # default to normal behavior\n            Ant.remove_from(self, place)\n\n    def action(self, gamestate):\n        # BEGIN Optional 2\n        \"*** YOUR CODE HERE ***\"\n        if self.contained_ant:\n            self.contained_ant.action(gamestate)\n        # END Optional 2\n\nclass BodyguardAnt(ContainerAnt):\n    \"\"\"BodyguardAnt provides protection to other Ants.\"\"\"\n\n    name = 'Bodyguard'\n    food_cost = 4\n    # OVERRIDE CLASS ATTRIBUTES HERE\n    # BEGIN Optional 2\n    # implemented = False   # Change to True to view in the GUI\n    implemented = True\n\n    def __init__(self, armor=2):\n        ContainerAnt.__init__(self, armor)\n    # END Optional 2\n</code></pre>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part2/#7_1","title":"7","text":"<p>Optional Problem 4</p> <p>\u8fd9\u9898\u6211\u8ba4\u4e3a\u5f88\u96be(\u770b\u5b8c\u9898\u76ee\u8981\u6c42\u65f6\u5c31\u5df2\u7ecf\u5934\u5927\u4e86)\uff0c\u5e94\u8be5\u7b97\u662f\u6240\u6709\u9898\u76ee\u91cc\u9762\u6700\u96be\u7684\u4e00\u9898\uff0c\u4fee\u4fee\u6539\u6539\u4e86\u5f88\u4e45\u624d\u521d\u6b65\u5199\u5b8c\uff0c\u7136\u540e\u8fd8debug\u4e86\u5f88\u591a\u6b21</p> <p>\u521a\u5f00\u59cb\u65f6\u6ca1\u4ec0\u4e48\u5934\u7eea\uff0c\u6240\u4ee5\u6253\u7b97 \u5728\u6559\u7a0b\u7684\u8981\u6c42(\u4e3b\u8981\u8981\u5b9e\u73b0\u4e09\u4e2a\u51fd\u6570)\u4e2d \u5148\u4ece\u6700\u7b80\u5355\u7684\u95ee\u9898\u5f00\u59cb\u89e3\u51b3(\u6700\u540e\u53d1\u73b0\u8fd9\u5f88\u6709\u7528\uff0c\u56e0\u4e3a\u628a\u7b80\u5355\u7684\u95ee\u9898\u89e3\u51b3\u4e86\uff0c\u6700\u540e\u96be\u7684\u95ee\u9898\u5c31\u53d8\u5f97\u6e05\u6670\u660e\u4e86\u4e86)\uff0c</p> <p><code>make_slow</code> \u548c <code>make_scare</code> \uff0c\u8fd9\u4e24\u4e2a\u57fa\u672c\u4e0a\u5dee\u4e0d\u591a\uff0c\u4ed6\u4eec\u90fd\u662f\u8981\u8fd4\u56de\u4e00\u4e2a\u65b0\u7684\u65b9\u6cd5</p> <pre><code>def make_slow(action, bee):\n    \"\"\"Return a new action method that calls ACTION every other turn.\n\n    action -- An action method of some Bee\n    \"\"\"\n    # BEGIN Problem Optional 4\n    \"*** YOUR CODE HERE ***\"\n    # END Problem Optional 4\n\ndef make_scare(action, bee):\n    \"\"\"Return a new action method that makes the bee go backwards.\n\n    action -- An action method of some Bee\n    \"\"\"\n    # BEGIN Problem Optional 4\n    \"*** YOUR CODE HERE ***\"\n    # END Problem Optional 4\n</code></pre> <p>\u4f46\u6211\u4e00\u5f00\u59cb\u6ca1\u6709\u7406\u89e3 \u8fd4\u56de\u65b9\u6cd5 \u5e94\u8be5\u610f\u5473\u7740\u4ec0\u4e48\uff0c\u7136\u540e\u6ce8\u610f\u5230\u4e86 \u6559\u7a0b\u4e2d\u7684\u63d0\u793a \uff0c\u5373\u5b9e\u4f8b\u7684\u65b9\u6cd5\u662f\u53ef\u4ee5\u901a\u8fc7\u8d4b\u503c\u53bb\u8986\u76d6\u6389\u7684</p> <p>Hint: You will need to rebind a method in one of the functions. Note that when assigning to an instance, the self parameter isn't bound.</p> <pre><code>  class X: pass\n  def f(x): return x ** 3\n  x = X()\n  x.f = f\n  print(x.f(2)) # prints 8\n</code></pre> <p>\u6240\u4ee5\u6211\u8fd9\u65f6\u7684\u60f3\u6cd5\u662f\uff0c\u5728 <code>make_slow</code> \u51fd\u6570\u91cc\u9762\u521b\u5efa\u4e00\u4e2a \u7528\u6765\u5f53\u4f5c\u65b9\u6cd5 \u7684\u51fd\u6570\uff0c\u7136\u540e\u7ed1\u5b9a\u5230 <code>bee</code> \u4e2d\uff0c\u6240\u4ee5</p> <pre><code>def make_slow(action, bee):\n    def new_action(gamestate):\n        if gamestate.time % 2 == 0:\n            action(bee, gamestate)\n    bee.action = new_action\n\n...\n</code></pre> <p>\u4f46\u662f\u7a81\u7136\u611f\u89c9\uff0c\u65b9\u6cd5\u5e94\u8be5\u662f\u6709 <code>self</code> \u53c2\u6570\u7684\uff0c</p> <p>\u4ee5\u53ca \u597d\u50cf\u8981\u6c42\u8bf4\u7684\u662f\u8981\u8fd4\u56de\uff0c\u6240\u4ee5\u6211\u8fd9\u65f6\u8ba4\u4e3a\uff0c\u5e94\u8be5\u8981\u5728\u51fd\u6570\u4e2d\u5c06\u8fd9\u4e2a \u7528\u4f5c\u65b9\u6cd5\u7684\u51fd\u6570 \u8fd4\u56de\uff0c\u7136\u540e\u5728 <code>apply_status</code> \u4e2d\u518d\u5c06\u5b83\u7ed1\u5b9a\u5230\u5bf9\u8c61\u4e2d\uff0c\u6240\u4ee5</p> <pre><code>def make_slow(action, bee):\n    def new_action(self, gamestate):\n        if gamestate.time % 2 == 0:\n            action(self, gamestate)\n    return new_action\n\ndef make_scare(action, bee):\n    def new_action(self, gamestate):\n        bee.direction = self.place if self.place.entrance is gamestate.beehive else self.place.entrance\n        action(self, gamestate)\n    return new_action\n</code></pre> <p><code>.direction</code> \u5c5e\u6027\u662f\u7531\u4e8e\uff0c\u6559\u7a0b\u4e2d\u63d0\u793a\u5230</p> <p>Hint: to make a bee go backwards, consider adding an instance variable indicating its current direction. Where should you change the bee's direction? Once the direction is known, how can you modify the <code>action</code> method of <code>Bee</code> to move appropriately?</p> <p>\u6240\u4ee5\u6211\u5bf9 <code>Bee.action</code> \u8fdb\u884c\u4e86\u4fee\u6539</p> <pre><code>class Bee(Insect):\n    ...\n\n    def action(self, gamestate):\n        \"\"\"A Bee's action stings the Ant that blocks its exit if it is blocked,\n        or moves to the exit of its current place otherwise.\n\n        gamestate -- The GameState, used to access game state information.\n        \"\"\"\n        destination = self.place.exit\n        # Extra credit: Special handling for bee direction\n        # BEGIN EC\n        \"*** YOUR CODE HERE ***\"\n        destination = self.direction\n        # END EC\n        if self.blocked():\n            self.sting(self.place.ant)\n        elif self.armor &gt; 0 and destination is not None:\n            self.move_to(destination)\n</code></pre> <p>\u7136\u540e\u5c31\u5f00\u59cb\u5199 <code>apply_status</code> \u51fd\u6570</p> <p>\u4e00\u5f00\u59cb\u6211\u6ca1\u60f3\u597d\u600e\u4e48\u8bbe\u7f6e \u6301\u7eed\u65f6\u95f4\uff0c\u6240\u4ee5\u5c31\u53ea\u662f\u8fd9\u6837</p> <pre><code>def apply_status(status, bee, length):\n    \"\"\"Apply a status to a BEE that lasts for LENGTH turns.\"\"\"\n    # BEGIN Problem Optional 4\n    \"*** YOUR CODE HERE ***\"\n    bee.action = status(bee.action, bee)\n    # END Problem Optional 4\n</code></pre> <p>\u7136\u540e\u7531\u4e8e \u5269\u4f59\u65f6\u95f4 \u9700\u8981\u88ab\u8bb0\u5f55\u4e0b\u6765\uff0c\u800c\u4e14\u6211\u60f3\u5230\u8c03\u7528\u4e00\u6b21 action \u51fd\u6570\u5c31\u51cf\u5c11\u4e00\u6b21\u5269\u4f59\u65f6\u95f4\uff0c\u6240\u4ee5\u60f3\u5230\u4e86\u5728\u51fd\u6570\u4e2d\u518d\u6784\u5efa\u4e00\u4e2a\u5d4c\u5957\u51fd\u6570\uff0c\u7136\u540e\u4f7f\u7528 <code>nonlocal</code> \u8bed\u53e5\u6765\u51cf\u5c11 <code>length</code> \u7684\u503c\uff0c\u5e76\u4e14\u5728\u5269\u4f59\u65f6\u95f4\u4e3a0\u7684\u65f6\u5019\u628a\u65b9\u6cd5\u6362\u56de\u539f\u672c\u7684\u65b9\u6cd5\uff0c\u6240\u4ee5</p> <pre><code>def apply_status(status, bee, length):\n    old_action = bee.action\n    def new_action(gamestate):\n        nonlocal length\n        length -= 1\n        status(old_action, bee)(self, gamestate)\n        if length == 0:\n            bee.action = old_action\n            bee.direction = None\n    bee.action = new_action\n</code></pre> <p>\u6700\u540e\u6559\u7a0b\u4e2d\u8fd8\u6709\u4e00\u70b9\uff0c\u5c31\u662f \u591a\u72b6\u6001 \u7684\u95ee\u9898\uff0c</p> <p><code>apply_status</code> takes a <code>status</code> (either <code>make_slow</code> or <code>make_scare</code>), a <code>Bee</code>, and a <code>length</code>. The way it works is as so: imagine that a <code>Bee</code> has a bunch of statuses, each of which modifies <code>action</code> in sequence. When a status's length is up, it removes itself from the list. <code>apply_status</code> adds the given status to the end of the list, so that it is applied latest. Note that you don't necessarily need to make a literal list of statuses - it is just helpful to think of statuses in this way.</p> <p>As an example of what \"previous behavior\" means, take the example of a bee that has been slowed twice (say by two separate <code>SlowThrower</code>s). It will have the following behavior:</p> <ul> <li>on time 1, it will do nothing. The outer slow has 2 turns to go, the inner one still has 3 turns</li> <li>on time 2, it moves forward. The outer slow has 1 turn to go, the inner one has 2 turns</li> <li>on time 3, it will do nothing. The outer slow has no turns left, the inner one has 2 turns</li> <li>on time 4, it moves forward. The inner slow has 1 turn left</li> <li>on time 5, it does nothing. The inner slow has no turns left</li> </ul> <p>\u610f\u601d\u662f\u8981\u6c42\uff0c\u5b58\u5728\u591a\u4e2a\u72b6\u6001\u65f6\uff0c\u5269\u4f59\u65f6\u95f4\u4f1a\u4e00\u8d77\u51cf\u5c11\uff0c\u4f46\u662f\u5e94\u7528\u7684\u6548\u679c\u662f\u6309\u4ece\u65e9(\u6700\u5148\u751f\u6548)\u5230\u665a(\u540e\u4ea7\u751f)\u7684\u987a\u5e8f\u5e94\u7528\u7684\uff0c\u5177\u4f53\u53ef\u4ee5\u770b\u6559\u7a0b\u4e2d\u7684\u89e3\u91ca</p> <p>\u7531\u4e8e\u8fd9\u4e2a\u70b9\u6211\u6ca1\u6709\u5f04\u6e05\u695a\u5e94\u8be5\u5982\u4f55\u5b9e\u73b0\uff0c\u4e8e\u662f\u6ca1\u6709\u529e\u6cd5\uff0c\u6211\u53ea\u80fd\u5c1d\u8bd5\u5148\u8fdb\u884c\u6d4b\u8bd5</p> <p>\u6d4b\u8bd5\u51fa\u73b0\u7684\u7b2c\u4e00\u4e2a\u95ee\u9898</p> <pre><code>&gt;&gt;&gt; from ants import *\n&gt;&gt;&gt; beehive, layout = Hive(AssaultPlan()), dry_layout\n&gt;&gt;&gt; dimensions = (1, 9)\n&gt;&gt;&gt; gamestate = GameState(None, beehive, ant_types(), layout, dimensions)\n&gt;&gt;&gt; # Testing Slow\n&gt;&gt;&gt; slow = SlowThrower()\n&gt;&gt;&gt; bee = Bee(3)\n&gt;&gt;&gt; gamestate.places[\"tunnel_0_0\"].add_insect(slow)\n&gt;&gt;&gt; gamestate.places[\"tunnel_0_4\"].add_insect(bee)\n&gt;&gt;&gt; slow.action(gamestate)\n&gt;&gt;&gt; gamestate.time = 1\n&gt;&gt;&gt; bee.action(gamestate)\nTypeError: apply_status.&lt;locals&gt;.new_action() missing 1 required positional argument: 'gamestate'\n\n# Error: expected\n\n# but got\n#     Traceback (most recent call last):\n#       ...\n#     TypeError: apply_status.&lt;locals&gt;.new_action() missing 1 required positional argument: 'gamestate'\n</code></pre> <p>\u662f\u6307 <code>apply_status</code> \u51fd\u6570\u4e2d\u7684\u5d4c\u5957\u51fd\u6570 <code>new_action</code> \u5728\u88ab\u4f7f\u7528\u65f6\uff0c\u7b2c\u4e8c\u4e2a <code>gamestate</code> \u53c2\u6570\u6ca1\u6709\u88ab\u4f20\u5165\u503c(\u4e00\u5f00\u59cb\u6211\u7684\u7406\u89e3\u8fd8\u6709\u4e9b\u504f\u5dee\uff0c\u7ecf\u8fc7\u4e86\u4e00\u4e9b\u6d4b\u8bd5\u548c\u8bd5\u9519\u624d\u6700\u7ec8\u786e\u5b9a\u662f\u8fd9\u4e2a\u539f\u56e0)</p> <p>\u8fd9\u5c31\u610f\u5473\u7740\uff0c <code>bee.action(gamestate)</code> \u5904\uff0c\u5728\u8c03\u7528\u65b0\u7684\u65b9\u6cd5\u65f6\uff0c\u53ea\u4f20\u5165\u4e86\u4e00\u4e2a\u53c2\u6570(\u6240\u4ee5\u7b2c\u4e8c\u4e2a\u53c2\u6570\u6ca1\u6709\u88ab\u4f20\u5165)\uff0c\u6240\u4ee5\u8fd9\u4f3c\u4e4e\u544a\u8bc9\u6211\uff0c\u5728\u7f16\u5199\u65b0\u7684\u65b9\u6cd5\u65f6\uff0c\u5e76\u4e0d\u9700\u8981\u4f7f\u7528 <code>self</code> \u53c2\u6570</p> <p>\u4e3a\u4e86\u6c42\u8bc1\uff0c\u6211\u91cd\u65b0\u53bb\u67e5\u770b\u548c\u7406\u89e3\u6559\u7a0b\u4e2d\u7ed9\u51fa\u7684\u793a\u4f8b</p> <p>Hint: You will need to rebind a method in one of the functions. Note that when assigning to an instance, the self parameter isn't bound.</p> <pre><code>  class X: pass\n  def f(x): return x ** 3\n  x = X()\n  x.f = f\n  print(x.f(2)) # prints 8\n</code></pre> <p>\u5982\u4f55\u53d1\u73b0\uff0c\u8fd9\u91cc\u9762\u7684 \u65b0\u65b9\u6cd5 \u5c31\u662f\u6ca1\u6709 <code>self</code> \u53c2\u6570\uff0c\u5e76\u4e14\u5728\u8c03\u7528\u65f6\uff0c\u8fd9\u4e2a\u5b9e\u4f8b\u4e5f\u6ca1\u6709\u5c06\u81ea\u8eab\u4f5c\u4e3a\u53c2\u6570\u4f20\u5165\u5176\u4e2d(\u8c03\u7528\u81ea\u8eab\u6216\u7236\u7c7b\u7684\u65b9\u6cd5\u65f6\uff0c\u4f1a\u628a\u81ea\u8eab \u9690\u5f0f\u5730 \u4f20\u5165 <code>self</code> \u53c2\u6570)\uff0c\u6240\u4ee5\u5f97\u5230\u7ed3\u8bba\uff0c\u5982\u679c\u4e00\u4e2a\u5728\u7c7b\u5916\u5b9a\u4e49\u7684\u51fd\u6570\uff0c\u88ab\u7ed1\u5b9a\u6210\u4e3a\u4e86\u67d0\u4e2a\u5b9e\u4f8b\u7684\u5c5e\u6027\uff0c\u6216\u8005\u67d0\u79cd\u7a0b\u5ea6\u4e0a\u53ef\u4ee5\u8bf4\u65f6\u6210\u4e3a\u4e86\u8fd9\u4e2a\u5b9e\u4f8b\u7684\u4e00\u4e2a\u65b9\u6cd5\uff0c\u5728\u901a\u8fc7 <code>\u5b9e\u4f8b.\u5c5e\u6027\u540d</code> \u7684\u65b9\u5f0f\u4f7f\u7528\u8fd9\u4e2a\u51fd\u6570/\u65b9\u6cd5\u65f6\uff0c\u662f\u4e0d\u4f1a\u5c06\u5b9e\u4f8b\u4f20\u5165\u51fd\u6570/\u65b9\u6cd5\u7684</p> <p>\u6240\u4ee5\u5bf9\u539f\u6709\u4ee3\u7801\u8fdb\u884c\u4e86\u4fee\u6539</p> <pre><code>def make_slow(action, bee):\n    def new_action(gamestate):\n        if gamestate.time % 2 == 0:\n            action(bee gamestate)\n    return new_action\n\ndef make_scare(action, bee):\n    def new_action(gamestate):\n        bee.direction = bee.place if bee.place.entrance is gamestate.beehive else bee.place.entrance\n        action(bee, gamestate)\n    return new_action\n\ndef apply_status(status, bee, length):\n    old_action = bee.action\n    def new_action(gamestate):\n        nonlocal length\n        length -= 1\n        status(old_action, bee)(gamestate)\n        if length == 0:\n            bee.action = old_action\n            bee.direction = None\n    bee.action = new_action\n</code></pre> <p>\u7136\u540e\u5728\u6d4b\u8bd5\u4fee\u6539\u597d\u7684\u4ee3\u7801\u65f6\uff0c\u53d1\u73b0</p> <pre><code>&gt;&gt;&gt; from ants import *\n&gt;&gt;&gt; beehive, layout = Hive(AssaultPlan()), dry_layout\n&gt;&gt;&gt; dimensions = (1, 9)\n&gt;&gt;&gt; gamestate = GameState(None, beehive, ant_types(), layout, dimensions)\n&gt;&gt;&gt; # Testing Slow\n&gt;&gt;&gt; slow = SlowThrower()\n&gt;&gt;&gt; bee = Bee(3)\n&gt;&gt;&gt; gamestate.places[\"tunnel_0_0\"].add_insect(slow)\n&gt;&gt;&gt; gamestate.places[\"tunnel_0_4\"].add_insect(bee)\n&gt;&gt;&gt; slow.action(gamestate)\n&gt;&gt;&gt; gamestate.time = 1\n&gt;&gt;&gt; bee.action(gamestate)\nTraceback (most recent call last):\n  File \"E:\\Courses\\cs61a\\projects\\ants\\ants.py\", line 606, in new_action\n    action(gamestate)\n  File \"E:\\Courses\\cs61a\\projects\\ants\\ants.py\", line 470, in action\n    destination = self.direction\nAttributeError: 'Bee' object has no attribute 'direction'\n\n# Error: expected\n\n# but got\n#     Traceback (most recent call last):\n#       ...\n#     AttributeError: 'Bee' object has no attribute 'direction'\n</code></pre> <p>\u7531\u4e8e <code>bee.direction</code> \u6ca1\u6709\u521d\u59cb\u503c/\u9ed8\u8ba4\u503c\uff0c\u6240\u4ee5\u6709\u53ef\u80fd\u51fa\u73b0\u5c5e\u6027\u4e0d\u5b58\u5728\u7684\u60c5\u51b5\uff0c\u6240\u4ee5\u8fdb\u884c\u4fee\u6539</p> <pre><code>class Bee(Insect):\n    ...\n    direction = None\n    ...\n\n    def action(self, gamestate):\n        destination = self.place.exit\n        # Extra credit: Special handling for bee direction\n        # BEGIN EC\n        \"*** YOUR CODE HERE ***\"\n        if self.direction:\n            destination = self.direction\n        # END EC\n        if self.blocked():\n            self.sting(self.place.ant)\n        elif self.armor &gt; 0 and destination is not None:\n            self.move_to(destination)\n</code></pre> <p>\u7136\u540e\u53c8\u51fa\u73b0\u4e86\u4e00\u4e2a\u95ee\u9898\uff0c</p> <pre><code>&gt;&gt;&gt; from ants import *\n&gt;&gt;&gt; beehive, layout = Hive(AssaultPlan()), dry_layout\n&gt;&gt;&gt; dimensions = (1, 9)\n&gt;&gt;&gt; gamestate = GameState(None, beehive, ant_types(), layout, dimensions)\n&gt;&gt;&gt; # Testing Slow\n&gt;&gt;&gt; slow = SlowThrower()\n&gt;&gt;&gt; bee = Bee(3)\n&gt;&gt;&gt; gamestate.places[\"tunnel_0_0\"].add_insect(slow)\n&gt;&gt;&gt; gamestate.places[\"tunnel_0_4\"].add_insect(bee)\n&gt;&gt;&gt; slow.action(gamestate)\n&gt;&gt;&gt; gamestate.time = 1\n&gt;&gt;&gt; bee.action(gamestate)\nTraceback (most recent call last):\n  File \"E:\\Courses\\cs61a\\projects\\ants\\ants.py\", line 606, in new_action\n    action(bee, gamestate)\nTypeError: Bee.action() takes 2 positional arguments but 3 were given\n\n# Error: expected\n\n# but got\n#     Traceback (most recent call last):\n#       ...\n#     TypeError: Bee.action() takes 2 positional arguments but 3 were given\n</code></pre> <p><code>bee</code> \u539f\u672c\u7684\u65b9\u6cd5\u4f20\u5165\u4e86\u4e00\u4e2a\u53c2\u6570\uff0c\u6240\u4ee5\u53ef\u4ee5\u53d1\u73b0\uff0c\u5b9e\u4f8b\u7684\u65b9\u6cd5\u672c\u8eab\u5df2\u7ecf\u5c06\u5b9e\u4f8b\u672c\u8eab\u4f20\u5165\u4e86 <code>self</code> \u53c2\u6570\uff0c\u6bd4\u5982 <code>old_action = bee.action</code> \uff0c<code>bee.action</code> \u5df2\u7ecf\u7ed9 <code>Bee.action</code> \u4e2d\u7684 <code>self</code> \u53c2\u6570\u4f20\u5165\u4e86\u81ea\u8eab(\u5373 <code>bee</code> \u5b9e\u4f8b)\uff0c\u800c\u5982\u679c\u4f7f\u7528 <code>old_action</code> \uff0c\u6bd4\u5982 <code>old_action(gs)</code> \uff0c\u90a3\u4e48 <code>gs</code> \u4f1a\u88ab\u4f20\u5165 <code>Bee.action</code> \u7684 <code>gamestate</code> (\u7b2c\u4e8c\u4e2a\u53c2\u6570)\u800c\u4e0d\u662f <code>self</code> </p> <p>\u6240\u4ee5\u8fdb\u884c\u4fee\u6539</p> <pre><code>def make_slow(action, bee):\n    def new_action(gamestate):\n        if gamestate.time % 2 == 0:\n            action(gamestate)\n    return new_action\n\ndef make_scare(action, bee):\n    def new_action(gamestate):\n        bee.direction = bee.place if bee.place.entrance is gamestate.beehive else bee.place.entrance\n        action(gamestate)\n    return new_action\n\ndef apply_status(status, bee, length):\n    old_action = bee.action\n    def new_action(gamestate):\n        nonlocal length\n        length -= 1\n        status(old_action, bee)(gamestate)\n        if length == 0:\n            bee.action = old_action\n            bee.direction = None\n    bee.action = new_action\n</code></pre> <p>\u6d4b\u8bd5\u51fa\u73b0\u7684\u7b2c\u4e8c\u4e2a\u95ee\u9898</p> <pre><code>&gt;&gt;&gt; from ants import *\n&gt;&gt;&gt; beehive, layout = Hive(AssaultPlan()), dry_layout\n&gt;&gt;&gt; dimensions = (1, 9)\n&gt;&gt;&gt; gamestate = GameState(None, beehive, ant_types(), layout, dimensions)\n&gt;&gt;&gt; scare = ScaryThrower()\n&gt;&gt;&gt; bee = Bee(3)\n&gt;&gt;&gt; gamestate.places[\"tunnel_0_0\"].add_insect(scare)\n&gt;&gt;&gt; gamestate.places[\"tunnel_0_1\"].add_insect(bee)\n&gt;&gt;&gt; scare.action(gamestate)\n&gt;&gt;&gt; bee.action(gamestate)\n&gt;&gt;&gt; bee.place.name\n'tunnel_0_2'\n&gt;&gt;&gt; bee.action(gamestate)\n&gt;&gt;&gt; bee.place.name\n'tunnel_0_3'\n&gt;&gt;&gt; #\n&gt;&gt;&gt; # Same bee should not be scared more than once\n&gt;&gt;&gt; scare.action(gamestate)\n&gt;&gt;&gt; bee.action(gamestate)\n&gt;&gt;&gt; bee.place.name\n'tunnel_0_4'\n\n# Error: expected\n#     'tunnel_0_2'\n# but got\n#     'tunnel_0_4'\n</code></pre> <p>\u540c\u4e00\u4e2a\u871c\u8702\u53ea\u80fd\u88ab\u6050\u5413\u4e00\u6b21\uff0c\u6240\u4ee5\u5bf9\u539f\u6709\u4ee3\u7801\u8fdb\u884c\u4fee\u6539</p> <pre><code>class Bee(Insect):\n    ...\n    direction = None\n    has_been_scared = False\n    ...\n\n...\ndef make_scare(action, bee):\n    def new_action(gamestate):\n        if not bee.has_been_scared:\n            bee.direction = bee.place if bee.place.entrance is gamestate.beehive else bee.place.entrance\n        action(gamestate)\n    return new_action\n\ndef apply_status(status, bee, length):\n    old_action = bee.action\n    def new_action(gamestate):\n        nonlocal length\n        length -= 1\n        status(old_action, bee)(gamestate)\n        if length == 0:\n            bee.action = old_action\n            bee.direction = None\n            if status is make_scare:\n                bee.has_been_scared = True\n    bee.action = new_action\n</code></pre> <p>\u6d4b\u8bd5\u51fa\u73b0\u7684\u7b2c\u4e09\u4e2a\u95ee\u9898</p> <pre><code>&gt;&gt;&gt; from ants import *\n&gt;&gt;&gt; beehive, layout = Hive(AssaultPlan()), dry_layout\n&gt;&gt;&gt; dimensions = (1, 9)\n&gt;&gt;&gt; gamestate = GameState(None, beehive, ant_types(), layout, dimensions)\n&gt;&gt;&gt; # Testing long status stack\n&gt;&gt;&gt; scary = ScaryThrower()\n&gt;&gt;&gt; slow = SlowThrower()\n&gt;&gt;&gt; bee = Bee(3)\n&gt;&gt;&gt; gamestate.places[\"tunnel_0_0\"].add_insect(scary)\n&gt;&gt;&gt; gamestate.places[\"tunnel_0_1\"].add_insect(slow)\n&gt;&gt;&gt; gamestate.places[\"tunnel_0_3\"].add_insect(bee)\n&gt;&gt;&gt; scary.action(gamestate) # scare bee once\n&gt;&gt;&gt; gamestate.time = 0\n&gt;&gt;&gt; bee.action(gamestate) # scared\n&gt;&gt;&gt; bee.place.name\n'tunnel_0_4'\n&gt;&gt;&gt; for _ in range(3): # slow bee three times\n...    slow.action(gamestate)\n&gt;&gt;&gt; gamestate.time = 1\n&gt;&gt;&gt; bee.action(gamestate) # scared, but also slowed thrice\n&gt;&gt;&gt; bee.place.name\n'tunnel_0_4'\n&gt;&gt;&gt; gamestate.time = 2\n&gt;&gt;&gt; bee.action(gamestate) # scared and slowed thrice\n&gt;&gt;&gt; bee.place.name\n'tunnel_0_5'\n&gt;&gt;&gt; gamestate.time = 3\n&gt;&gt;&gt; bee.action(gamestate) # slowed thrice\n&gt;&gt;&gt; bee.place.name\n'tunnel_0_4'\n\n# Error: expected\n#     'tunnel_0_5'\n# but got\n#     'tunnel_0_4'\n</code></pre> <p>\u6211\u5224\u65ad\u8fd9\u4e2a\u5c31\u662f\u7531\u4e8e\u6ca1\u6709\u5904\u7406\u591a\u72b6\u6001\u7684\u60c5\u51b5\u800c\u4ea7\u751f\u7684\u95ee\u9898</p> <p>\u7136\u540e\u5f00\u59cb\u89c2\u5bdf\u6d4b\u8bd5\u7684\u4ee3\u7801(\u56e0\u4e3a\u524d\u51e0\u4e2a\u8f93\u51fa\u90fd\u6ca1\u6709\u62a5\u9519)\uff0c\u7ecf\u8fc7\u601d\u8003\u4ee5\u53ca\u68b3\u7406\u4ee3\u7801\u7684\u5177\u4f53\u6d41\u7a0b\uff0c\u6211\u5927\u6982\u660e\u767d\u4e86\u51fa\u73b0\u8fd9\u79cd\u60c5\u51b5\u7684\u539f\u56e0(\u524d\u9762\u8ba1\u4e2d\u60c5\u51b5\u6ca1\u9519\u800c\u540e\u9762\u9519\u4e86)\uff0c\u95ee\u9898\u53ef\u80fd\u662f\u51fa\u5728\uff0c\u591a\u72b6\u6001\u4e0b\uff0c\u6050\u5413\u72b6\u6001\u7ed3\u675f\u65f6\uff0c(\u6211\u5199\u7684\u539f\u672c\u7684\u4ee3\u7801\u4e2d)\u4f1a\u628a\u5b9e\u4f8b\u7684 <code>.action</code> \u65b9\u6cd5\u8d4b\u503c\u6210\u539f\u6765\u7684 <code>action</code> \u65b9\u6cd5\uff0c\u5c31\u5e94\u8be5\u4f1a\u5bfc\u81f4\u67d0\u79cd\u77db\u76fe</p> <p>\u800c\u524d\u9762\u6ca1\u6709\u51fa\u9519\u7684 \u662f\u56e0\u4e3a \u6050\u5413\u4e4b\u540e\u7684\u51cf\u901f\u72b6\u6001\uff0c\u662f\u5c06\u6050\u5413\u540e\u7684\u65b0 <code>action</code> \u65b9\u6cd5\u8bbe\u7f6e\u6210\u4e86\u65e7 <code>action</code> \u65b9\u6cd5\uff0c\u6240\u4ee5\u4f1a\u6709\u79cd\u7c7b\u4f3c\u4e8e hw04 \u7684 Q5 Joint Account \u4e00\u6837\u7684\u611f\u89c9(\u5373\u8054\u5408\u8d26\u6237\u5728\u53d6\u94b1\u65f6\uff0c\u4f1a\u8c03\u7528\u539f\u8d26\u6237\u7684\u65b9\u6cd5\uff0c\u7136\u540e\u5982\u679c\u539f\u8d26\u6237\u4e5f\u662f\u4e00\u4e2a\u8054\u5408\u8d26\u6237\uff0c\u90a3\u4e48\u5c31\u4f1a\u7ee7\u7eed\u8c03\u7528\u539f\u8d26\u6237\u7684\u539f\u8d26\u6237\u7684\u65b9\u6cd5...)\uff0c\u6240\u4ee5\u6211\u7684\u7406\u89e3\u662f\u8fd9\u6837</p> <pre><code>flowchart TD\nsubgraph g1[\" \"]\na1[\"bee\"] ==&gt; b1[\"original action method\"]\nend\nsubgraph g2[\" \"]\na2[\"bee\"] -.- b2[\"original action method\"]\na2 ==&gt; c2[\"action method \\n created by 1st status\"]\nc2 --&gt; b2\nend\nsubgraph g3[\" \"]\na3[\"bee\"] -.- b3[\"original action method\"]\na3 -.- c3[\"action method \\n created by 1st status\"]\na3 ==&gt; d3[\"action method \\n created by 2nd status\"]\nd3 --&gt; c3\nc3 --&gt; b3\nend\nsubgraph g4[\" \"]\na4[\"bee\"] -.- b4[\"original action method\"]\na4 -.- c4[\"action method \\n created by 1st status\"]\na4 -.- d4[\"action method \\n created by 2nd status\"]\na4 ==&gt; e4[\"action method \\n created by 3rd status\"]\ne4 --&gt; d4\nd4 --&gt; c4\nc4 --&gt; b4\nend\ng1 --&gt; g2 --&gt; g3 --&gt; g4 --&gt; ...</code></pre> <p>\u7531\u4e8e\u5728\u72b6\u6001\u5269\u4f59\u65f6\u95f4\u51cf\u4e3a0\u4e4b\u540e\uff0c\u60f3\u4e0d\u5230\u5982\u4f55\u628a <code>old_action</code> \u7ed9\u540e\u9762\u7684 \u65b0action\u65b9\u6cd5</p> <p>\u6240\u4ee5\u5c06\u601d\u8def\u6539\u53d8\u6210\uff0c\u5728\u5269\u4f59\u65f6\u95f4\u51cf\u4e3a0\u4e4b\u540e\uff0c\u4e0d\u7ed3\u675f\u51fd\u6570\uff0c\u800c\u662f\u7ee7\u7eed\u4fdd\u7559\u51fd\u6570\uff0c\u5e76\u4e14\u5269\u4f59\u65f6\u95f4\u51cf\u4e3a0\u4e4b\u540e\u5c31\u76f4\u63a5\u6267\u884c\u539f\u672c\u7684 <code>old_action</code> \u65b9\u6cd5\u5373\u53ef\uff0c\u6240\u4ee5</p> <pre><code>def apply_status(status, bee, length):\n    old_action = bee.action\n    def new_action(gamestate):\n        nonlocal length\n        if length &gt; 0:\n            length -= 1\n            status(old_action, bee)(gamestate)\n            if length == 0:\n                bee.direction = None\n                if status is make_scare:\n                    bee.has_been_scared = True\n        else:\n            old_action(gamestate)\n    bee.action = new_action\n</code></pre> <p>\u6700\u7ec8\u7ec8\u4e8e\u6210\u529f\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898</p> <pre><code>$ python ok -q optional4 --local\n=====================================================================\nAssignment: Project 3: Ants Vs. SomeBees\nOK, version v1.18.1\n=====================================================================\n\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nRunning tests\n\n---------------------------------------------------------------------\nTest summary\n    10 test cases passed! No cases failed.\n</code></pre> code <pre><code>class Bee(Insect):\n    ...\n    # OVERRIDE CLASS ATTRIBUTES HERE\n    ...\n    direction = None\n    has_been_scared = False\n\n\n    ...\n\n    def action(self, gamestate):\n        \"\"\"A Bee's action stings the Ant that blocks its exit if it is blocked,\n        or moves to the exit of its current place otherwise.\n\n        gamestate -- The GameState, used to access game state information.\n        \"\"\"\n        destination = self.place.exit\n        # Extra credit: Special handling for bee direction\n        # BEGIN EC\n        \"*** YOUR CODE HERE ***\"\n        if self.direction:\n            destination = self.direction\n        # END EC\n        if self.blocked():\n            self.sting(self.place.ant)\n        elif self.armor &gt; 0 and destination is not None:\n            self.move_to(destination)\n\n    ...\n\n...\n\n############\n# Statuses #\n############\n\ndef make_slow(action, bee):\n    \"\"\"Return a new action method that calls ACTION every other turn.\n\n    action -- An action method of some Bee\n    \"\"\"\n    # BEGIN Problem Optional 4\n    \"*** YOUR CODE HERE ***\"\n    # def new_action(gamestate):\n    #     if gamestate.time % 2 == 1:\n    #         action(bee, gamestate)\n    def new_action(gamestate):\n        if gamestate.time % 2 == 0:\n            action(gamestate)\n    # bee.action = new_action\n    return new_action\n    # END Problem Optional 4\n\ndef make_scare(action, bee):\n    \"\"\"Return a new action method that makes the bee go backwards.\n\n    action -- An action method of some Bee\n    \"\"\"\n    # BEGIN Problem Optional 4\n    \"*** YOUR CODE HERE ***\"\n    # bee.direction = bee.place.exit\n    # def new_action(gamestate):\n    #     bee.direction = bee.place if bee.place.entrance is gamestate.beehive else bee.place.entrance\n    #     action(bee, gamestate)\n    def new_action(gamestate):\n        if not bee.has_been_scared:\n            bee.direction = bee.place if bee.place.entrance is gamestate.beehive else bee.place.entrance\n        action(gamestate)\n    # bee.action = new_action\n    return new_action\n    # END Problem Optional 4\n\ndef apply_status(status, bee, length):\n    \"\"\"Apply a status to a BEE that lasts for LENGTH turns.\"\"\"\n    # BEGIN Problem Optional 4\n    \"*** YOUR CODE HERE ***\"\n    old_action = bee.action\n    def new_action(gamestate):\n        nonlocal length\n        if length &gt; 0:\n            length -= 1\n            status(old_action, bee)(gamestate)\n            if length == 0:\n                # bee.action = old_action\n                bee.direction = None\n                if status is make_scare:\n                    bee.has_been_scared = True\n        else:\n            old_action(gamestate)\n    # bee.action = status(bee.action, bee)\n    bee.action = new_action\n    # END Problem Optional 4\n\n\nclass SlowThrower(ThrowerAnt):\n    \"\"\"ThrowerAnt that causes Slow on Bees.\"\"\"\n\n    name = 'Slow'\n    food_cost = 4\n    # BEGIN Problem Optional 4\n    # implemented = False   # Change to True to view in the GUI\n    implemented = True\n    # END Problem Optional 4\n\n    def throw_at(self, target):\n        if target:\n            apply_status(make_slow, target, 3)\n\n\nclass ScaryThrower(ThrowerAnt):\n    \"\"\"ThrowerAnt that intimidates Bees, making them back away instead of advancing.\"\"\"\n\n    name = 'Scary'\n    food_cost = 6\n    # BEGIN Problem Optional 4\n    # implemented = False   # Change to True to view in the GUI\n    implemented = True\n    # END Problem Optional 4\n\n    def throw_at(self, target):\n        # BEGIN Problem Optional 4\n        \"*** YOUR CODE HERE ***\"\n        if target:\n            apply_status(make_scare, target, 2)\n        # END Problem Optional 4\n</code></pre>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part2/#lecture-20-representation","title":"Lecture 20 Representation","text":""},{"location":"Notes%20of%20Courses/CS61A/CS61A_part2/#1_7","title":"1","text":"<p><code>repr()</code> \u51fd\u6570\u80fd\u628apython\u8868\u8fbe\u5f0f\u8f6c\u6362\u6210\u5728\u81ea\u7136\u8bed\u8a00\u4e2d\u89c4\u8303\u7684\u5b57\u7b26\u4e32\uff0c</p> <p>\u8fd4\u56de\u7684\u5b57\u7b26\u4e32\u548c\u5728\u7ec8\u7aef\u4e2d\u4f7f\u7528\u4ea4\u4e92\u5f0f\u7684python\uff0c\u8f93\u5165\u8868\u8fbe\u5f0f\u65f6\u663e\u793a\u7684\u7ed3\u679c\u4e00\u6837(\u5373\u5982\u4e0a\u56fe\uff0c<code>12e12</code> \u548c <code>print(repr(12e12))</code> \u663e\u793a\u7684\u4e00\u6837)</p> <p></p> <p><code>str()</code> (\u7c7b)\u53ef\u4ee5\u5c06\u5bf9\u8c61\u8f6c\u6362\u6210(\u5176\u5bf9\u5e94\u7684)\u5b57\u7b26\u4e32(\u611f\u89c9\u6709\u70b9\u7c7b\u4f3c\u4e8e c++ \u4e2d \u5de6\u79fb\u8fd0\u7b97\u7b26 <code>&lt;&lt;</code> \u7684\u91cd\u8f7d)\uff0c\u8fd9\u4e2a\u5b57\u7b26\u4e32\u548c \u4f7f\u7528 <code>print</code> \u51fd\u6570 \u663e\u793a\u7684\u7ed3\u679c\u662f\u76f8\u5e94\u7684(\u6216\u8005\u8bf4\u4f7f\u7528 <code>print</code> \u51fd\u6570\u4f1a\u9690\u5f0f\u5730\u8c03\u7528 <code>__str__</code> \u65b9\u6cd5)</p> <p>\u4e0a\u56fe\u4e2d\u53ef\u4ee5\u770b\u5230 <code>repr()</code> \u548c <code>str()</code> \u7684\u4e0d\u540c\u4e4b\u5904</p>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part2/#2_7","title":"2","text":"<p><code>repr()</code> \u548c <code>str()</code> \u90fd\u662f\u901a\u8fc7\u8c03\u7528\u4f20\u5165\u53c2\u6570\u7684\u65b9\u6cd5\u6765\u5b9e\u73b0\u529f\u80fd</p> <p><code>repr()</code> \u4f1a\u8c03\u7528 <code>__repr__</code> \u65b9\u6cd5\uff0c</p> <pre><code>def repr(x):\n    return type(x).__repr__(x)\n</code></pre> <p>\u4f7f\u7528\u7c7b\u5185\u65b9\u6cd5\u53ef\u4ee5\u907f\u514d\u5728\u5b9e\u4f8b\u4e2d\u4fee\u6539\u4e86\u65b9\u6cd5</p> <p><code>str()</code> \u4f1a\u8c03\u7528 <code>__str__</code> \u65b9\u6cd5</p> <p>\u5982\u679c\u6ca1\u6709 <code>__str__</code> \u65b9\u6cd5\uff0c\u5219\u8c03\u7528 <code>__repr__</code> \u65b9\u6cd5</p> <pre><code>def str(x):\n    t = type(x)\n    if hasattr(t, '__str__'):\n        return t.__str__(x)\n    else:\n        return t.__repr__(x)\n</code></pre>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part2/#3_5","title":"3","text":"<p>\u5982\u679c\u4e00\u4e2a\u7c7b\u6ca1\u6709 <code>__str__</code> \u65b9\u6cd5\uff0c\u5728\u76f4\u63a5\u8c03\u7528 <code>__str__</code> \u65b9\u6cd5\u65f6\uff0c\u4f1a\u6539\u4e3a\u8c03\u7528 <code>__repr__</code> \u65b9\u6cd5</p> <pre><code>class Bear:\n    \"\"\"A Bear.\"\"\"\n    \n    def __repr__(self):\n        return 'Bear()'\n    \noski = Bear()\nprint(oski)\nprint(str(oski))\nprint(repr(oski))\nprint(oski.__str__())\nprint(oski.__repr__())\n</code></pre> <p>\u8fd0\u884c\u4ee5\u4e0a\u4ee3\u7801\uff0c\u4f1a\u663e\u793a</p> <pre><code>Bear()\nBear()\nBear()\nBear()\nBear()\n</code></pre>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part2/#4_4","title":"4","text":"<p>\u5b57\u7b26\u4e32\u53ef\u4ee5\u4f7f\u7528 <code>.format()</code> \u6765\u586b\u5165\u53c2\u6570(\u9700\u8981\u6ce8\u610f\u5e8f\u53f7/\u4e0b\u6807\u4e0e\u4f20\u5165\u987a\u5e8f\u5bf9\u5e94)</p> <pre><code>&gt;&gt;&gt; x = 5\n&gt;&gt;&gt; y = 6\n&gt;&gt;&gt; \"x + y = {0}\".format(x + y)\n'x + y = 11'\n&gt;&gt;&gt; \"x + y = {1}\".format(x + y, y)\n'x + y = 6'\n</code></pre> <p>\u6216\u8005\u4e5f\u53ef\u4ee5\u4f7f\u7528</p> <pre><code>&gt;&gt;&gt; f\"x + y = {x + y}\"\n'x + y = 11'\n</code></pre>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part2/#5_4","title":"5","text":"<p>python\u7684\u4e00\u4e9b\u7279\u6b8a\u65b9\u6cd5\u540d(\u524d\u540e\u90fd\u6709\u4e24\u4e2a\u4e0b\u5212\u7ebf\u7684\u65b9\u6cd5)</p>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part2/#6_2","title":"6","text":"<p><code>__add__</code> \u65b9\u6cd5\u662f\u5b9e\u4f8b\u5728\u52a0\u53f7\u5de6\u8fb9\u65f6\u4f7f\u7528\uff0c <code>__radd__</code> \u65b9\u6cd5\u662f\u5b9e\u4f8b\u5728\u52a0\u53f7\u53f3\u8fb9\u65f6\u4f7f\u7528\uff0c</p> <p>John \u76f4\u63a5\u6dfb\u52a0\u4e86\u4e00\u884c\u4ee3\u7801</p> <pre><code>__radd__ = __add__\n</code></pre>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part2/#lecture-20-qa","title":"Lecture 20 Q&amp;A","text":""},{"location":"Notes%20of%20Courses/CS61A/CS61A_part2/#1_8","title":"1","text":"<p><code>type</code> \u548c <code>isinstance</code> \u7684\u533a\u522b</p> <ul> <li><code>isinstance</code> \u4f1a\u5224\u65ad\u4e00\u4e2a\u5b9e\u4f8b\u662f\u5426\u662f\u67d0\u4e2a\u7c7b\u6216\u5b83\u7684\u5b50\u7c7b\u4eec</li> <li><code>type</code> \u53ea\u4f1a\u8fd4\u56de\u5b9e\u4f8b\u5177\u4f53\u7684\u7c7b</li> </ul>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part2/#2_8","title":"2","text":"<p>John \u4f7f\u7528\u9012\u5f52\u548c <code>yield</code> \u8bed\u53e5\u6765\u5b9e\u73b0\u8f93\u51fa\u6811\u7684\u6240\u6709\u6839\u5230\u53f6\u5b50\u7684\u8def\u5f84\u7684\u65b9\u6cd5</p> <pre><code>def print_all_paths(t):\n    \"\"\"Print all the paths from the root to a leaf.\n\n    &gt;&gt;&gt; t = tree(1, [tree(2, [tree(3), tree(5)]), tree(4)])\n    &gt;&gt;&gt; print_all_paths(t)\n    [1, 2, 3]\n    [1, 2, 5]\n    [1, 4]\n    \"\"\"\n    for path in all_paths(t):\n        print(path)\n\ndef all_paths(t):\n    if is_leaf(t):\n        yield [label(t)]\n    for b in branches(t):\n        for path in all_paths(b):   # path might be [2, 3]\n            yield [label(t)] + path # yielding [1, 2, 3]\n</code></pre>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part2/#lecture-21-composition","title":"Lecture 21 Composition","text":""},{"location":"Notes%20of%20Courses/CS61A/CS61A_part2/#1_9","title":"1","text":"<p>John \u4e3a\u81ea\u5b9a\u4e49\u7684 \u94fe\u8868 Linked List \u7c7b \u7528\u9012\u5f52\u7684\u65b9\u5f0f\u7f16\u5199\u4e86\u7c7b\u4f3c\u4e8epython\u5185\u7f6e\u7684 <code>range</code> <code>map</code> <code>filter</code> \u51fd\u6570</p> <p></p> <pre><code>class Link:\n    empty = ()\n    \n    def __init__(self, first, rest=empty):\n        assert rest is Link.empty or isinstance(rest, Link)\n        self.first = first\n        self.rest = rest\n        \n    def __repr__(self):\n        if self.rest:\n            rest_repr = ', ' + repr(self.rest)\n        else:\n            rest_repr = ''\n        return 'Link()' + repr(self.first) + rest_repr + ')'\n    \n    def __str__(self):\n        string = '&lt;'\n        while self.rest is not Link.empty:\n            string += str(self.first) + ' '\n            slef = self.rest\n        return string + str(self.first) + '&gt;'\n</code></pre> <pre><code>def range_link(start, end):\n    \"\"\"Return a Link containing consecutive integers from start to end.\n\n    &gt;&gt;&gt; range_link(3, 6)\n    Link(e, Link(4, Link(5)))\n    \"\"\"\n    if start &gt;= end:\n        return Link.empty\n    else:\n        return Link(start, range_link(start + 1, end))\n</code></pre> <pre><code>def map_link(f, s):\n    \"\"\"Return a link that contains f(x) for each x in Link s.\n\n    &gt;&gt;&gt; map_link(square, range_link(3, 6))\n    Link(9, Link(16, Link(25)))\n    \"\"\"\n    if s is Link.empty:\n        return s\n    else:\n        return Link(f(s.first), map_link(f, s.rest))\n</code></pre> <pre><code>def filter_link(f, s):\n    \"\"\"Return a Link that contains only the elements x of Link s for which f(x) is a true value.\n\n    &gt;&gt;&gt; filter_link(odd, range_link(3, 6))\n    Link(3, Link(5))\n    \"\"\"\n    if s is Link.empty:\n        return s\n    filtered_rest = filter_link(f, s.rest)\n    if f(s.first):\n        return Link(s.first, filtered_rest)\n    else:\n        return filtered_rest\n</code></pre>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part2/#2_9","title":"2","text":"<p>John \u7528\u9012\u5f52\u7684\u65b9\u5f0f\u5199\u7684 \u81ea\u5b9a\u4e49\u94fe\u8868\u7ed3\u6784 \u7684 <code>add</code> \u51fd\u6570(\u8ba9\u6211\u89c9\u5f97\u770b\u8d77\u6765\u5f88\u7b80\u6d01)</p> <pre><code>def add(s, v):\n    \"\"\"Add v to s, returning modified s.\n\n    &gt;&gt;&gt; s = Link(1, Link(3, Link(5)))\n    &gt;&gt;&gt; add(s, 0)\n    Link(0, Link(1, Link(3, Link(5))))\n    &gt;&gt;&gt; add(s, 3)\n    Link(0, Link(1, Link(3, Link(5))))\n    &gt;&gt;&gt; add(s, 4)\n    Link(0, Link(1, Link(3, Link(4, Link(5)))))\n    &gt;&gt;&gt; add(s, 6)\n    Link(0, Link(1, Link(3, Link(4, Link(5, Link(6))))))\n    \"\"\"\n    assert s is not Link.empty\n    if s.first &gt; v:\n        s.first, s.rest = v, Link(s.first, s.rest)\n    elif s.first &lt; v and empty(s.rest):\n        s.rest = Link(v)\n    elif s.first &lt; v:\n        add(s.rest, v)\n    return s\n</code></pre>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part2/#3_6","title":"3","text":"<p>John \u5c55\u793a\u7684 <code>Tree</code> \u7c7b\u7684\u5b9e\u73b0\u4ee3\u7801</p> <pre><code>class Tree:\n    \"\"\"A tree is a label and a list of branches.\"\"\"\n    def __init__(self, label, branches=[]):\n        self.label = label\n        for branch in branches:\n            assert isinstance(branch, Tree)\n        self.branches = list(branches)\n\n    def __repr__(self):\n        if self.branches:\n            branch_str = ', ' + repr(self.branches)\n        else:\n            branch_str = ''\n        return 'Tree({0}{1})'.format(repr(self.label), branch_str)\n\n    def __str__(self):\n        return '\\n'.join(self.indented())\n\n    def indented(self):\n        lines = []\n        for b in self.branches:\n            for line in b.indented():\n                lines.append('  ' + line)\n        return [str(self.label)] + lines\n\n    def is_leaf(self):\n        return not self.branches\n</code></pre>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part2/#hw-05","title":"HW 05","text":""},{"location":"Notes%20of%20Courses/CS61A/CS61A_part2/#1_10","title":"1","text":"<p>Q5 \u4e2d\uff0c\u672c\u6765\u6211\u4ee5\u4e3a</p> <pre><code>return [t.label].extend([preorder(b) for b in t.branches])\n</code></pre> <p>\u80fd\u5b9e\u73b0\uff0c\u4f46\u662f\u663e\u793a\u6ca1\u6709\u8fd4\u56de\u7684\u503c\uff0c\u7136\u540e\u8fdb\u884c\u6d4b\u8bd5\u53d1\u73b0\uff0c\u5217\u8868\u7684 <code>.append()</code> \u548c <code>.extend()</code> \u65b9\u6cd5\u6ca1\u6709\u8fd4\u56de\u503c</p>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part2/#2_10","title":"2","text":"<p>Q6\uff0c\u6211\u7684\u4e24\u79cd\u5b9e\u73b0\u65b9\u5f0f</p> <ul> <li> <p>\u6309\u7167\u539f\u672c\u63d0\u4f9b\u7684\u6846\u67b6</p> code <pre><code>def path_yielder(t, value):\n    \"*** YOUR CODE HERE ***\"\n\n    if t.label == value:\n        yield [t.label]\n    for b in t.branches:\n        for path in path_yielder(b, value):\n\n            \"*** YOUR CODE HERE ***\"\n            yield [t.label] + path\n</code></pre> </li> <li> <p>\u6211\u6574\u5408\u6210\u4e00\u884c\u4ee3\u7801</p> code <pre><code>def path_yielder(t, value):\n    yield from (([[t.label]] if t.label == value else []) +\n                sum([[[t.label] + path for path in path_yielder(b, value)] for b in t.branches], start=[]))\n</code></pre> </li> </ul>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part2/#3_7","title":"3","text":"<p>Q3\u4e2d\uff0c\u539f\u672c\u6211\u662f\u7528\u9012\u5f52\u7684\u65b9\u5f0f\u6765\u5b9e\u73b0\uff0c\u4f46\u662f\u4f1a\u7a0d\u5fae\u9ebb\u70e6\u4e00\u4e9b\uff0c</p> <pre><code>def store_digits(n):\n    if n // 10 == 0:\n        return Link(n)\n    else:\n        pre_digits = store_digits(n // 10)\n        last_digits = pre_digits\n        while last_digits.rest != Link.empty:\n            last_digits = last_digits.rest\n        last_digits.rest = Link(n % 10)\n        return pre_digits\n</code></pre> <p>\u7136\u540e\u5728\u63d0\u793a\u89c6\u9891\u4e2d\u770b\u5230\u52a9\u6559\u8001\u5e08\u8bf4\u4e00\u822c\u94fe\u8868\u4f1a\u4f7f\u7528\u9012\u5f52\u548c\u8fed\u4ee3\u7684\u65b9\u5f0f\u6765\u5b9e\u73b0\u529f\u80fd\uff0c\u8fd9\u9898\u4f7f\u7528\u8fed\u4ee3\u6bd4\u8f83\u65b9\u4fbf\uff0c\u7136\u540e\u6211\u5c06\u6211\u7684\u4ee3\u7801\u6539\u6210\u4e86\u7528\u8fed\u4ee3\u6765\u5b9e\u73b0</p> code <pre><code>def store_digits(n):\n    link = Link(n % 10)\n    while n // 10:\n        n //= 10\n        link = Link(n % 10, link)\n    return link\n</code></pre>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part2/#lecture-22-efficiency","title":"Lecture 22 Efficiency","text":""},{"location":"Notes%20of%20Courses/CS61A/CS61A_part2/#1_11","title":"1","text":"<p>\u4eceJohn\u7684demo\u6f14\u793a\u4e2d\u53ef\u4ee5\u770b\u5230\uff0c <code>def</code> \u5b9a\u4e49\u51fa\u7684\u51fd\u6570\u4f3c\u4e4e\u4e5f\u53ef\u4ee5\u50cf\u7c7b\u4e00\u6837\u62e5\u6709\u5c5e\u6027 Attribute (\u53ef\u4ee5\u4f7f\u7528 <code>.</code> \u6765\u8bbf\u95ee)</p>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part2/#2_11","title":"2","text":"<p>\u51fd\u6570\u5185\u90e8\u7684\u53d8\u91cf\u5177\u4f53\u6307\u5411\u7684\u5bf9\u8c61 \u53d6\u51b3\u4e8e \u8c03\u7528\u65f6 \u7684\u60c5\u51b5\uff0c</p> <p>\u4f8b\u5982</p> <pre><code>&gt;&gt;&gt; def f(n):\n...     return f(n-1) if n else n\n...\n&gt;&gt;&gt; ori_f = f\n&gt;&gt;&gt; f = 6\n&gt;&gt;&gt; ori_f(4)\nTraceback (most recent call last):\n  File \"&lt;stdin&gt;\", line 1, in &lt;module&gt;\n  File \"&lt;stdin&gt;\", line 2, in f\nTypeError: 'int' object is not callable\n&gt;&gt;&gt;\n</code></pre> <p>\u5728\u5b9a\u4e49\u597d <code>f</code> \u51fd\u6570\u4e4b\u540e\uff0c\u5c06 <code>f</code> \u4fee\u6539\u4e3a <code>6</code> \uff0c\u90a3\u4e48\u4e4b\u540e\u8c03\u7528\u539f\u672c\u7684\u51fd\u6570 <code>f</code> \u65f6\uff0c\u5728\u8fdb\u884c\u9012\u5f52\u8c03\u7528(\u8bbf\u95ee <code>f</code> \u53d8\u91cf)\u65f6\uff0c\u83b7\u53d6\u5230\u7684\u662f\u6574\u578b <code>6</code> \uff0c\u6240\u4ee5\u4f1a\u663e\u793a</p> <pre><code>TypeError: 'int' object is not callable\n</code></pre> <p>\u6240\u4ee5\uff0c\u4e0b\u9762\u56fe\u4e2d John \u6f14\u793a\u7684 demo \u6211\u89c9\u5f97\u5e94\u8be5\u8fd9\u6837\u7406\u89e3</p> <p></p> <pre><code>def fib(n):\n    if n == 0 or n == 1:\n        return n\n    else:\n        return fib(n-2) + fib(n-1)\n\ndef count(f):\n    def counted(n):\n        counted.call_count += 1\n        return f(n)\n    counted.call_count = 0\n    return counted\n\ndef memo(f):\n    cache = {}\n    def memoized(n):\n        if n not in cache:\n            cache[n] = f(n)\n        return cache[n]\n    return memoized\n</code></pre> <ul> <li> <p>\u7b2c\u4e00\u6b65</p> <pre><code>&gt;&gt;&gt; fib = count(fib)\n&gt;&gt;&gt; counted_fib = fib\n</code></pre> <p>\u5c06 <code>fib</code> \u51fd\u6570\u4f20\u5165 <code>count</code> \u51fd\u6570\u4e2d\uff0c\u83b7\u5f97 \u7b2c\u4e00\u4e2a <code>counted</code> (\u4e0e\u4e4b\u540e\u7b2c\u4e8c\u4e2a <code>counted</code> \u4f5c\u533a\u5206)</p> <pre><code>flowchart LR\n\u53d8\u91cf\u540dfib --&gt; \u7b2c\u4e00\u4e2acounted\u51fd\u6570 --\"f\"--&gt; fib\u51fd\u6570\ncounted_fib --&gt; \u7b2c\u4e00\u4e2acounted\u51fd\u6570</code></pre> </li> <li> <p>\u7b2c\u4e8c\u6b65</p> <pre><code>&gt;&gt;&gt; fib = memo(fib)\n</code></pre> <p>\u8fd9\u91cc <code>fib</code> \u6307\u5411\u7684\u662f \u7b2c\u4e00\u4e2a <code>counted</code> \uff0c\u6240\u4ee5\u4f20\u5165 <code>memo</code> \u7684\u662f \u7b2c\u4e00\u4e2a <code>counted</code> \uff0c</p> <p>\u7136\u540e\u83b7\u5f97 <code>memoized</code> \u51fd\u6570</p> <pre><code>flowchart LR\ncounted_fib --&gt; \u7b2c\u4e00\u4e2acounted\u51fd\u6570 --\"f\"--&gt; fib\u51fd\u6570\n\u53d8\u91cf\u540dfib --&gt; memoized\u51fd\u6570 --\"f\"--&gt; \u7b2c\u4e00\u4e2acounted\u51fd\u6570</code></pre> </li> <li> <p>\u7b2c\u4e09\u6b65</p> <pre><code>&gt;&gt;&gt; fib = count(fib)\n</code></pre> <p>\u548c\u521a\u624d\u7c7b\u4f3c\uff0c\u8fd9\u91cc\u662f\u5c06 <code>memoized</code> \u51fd\u6570\u4f20\u5165 <code>count</code> \uff0c\u7136\u540e\u83b7\u5f97 \u7b2c\u4e8c\u4e2a <code>counted</code> \u51fd\u6570</p> <pre><code>flowchart LR\ncounted_fib --&gt; \u7b2c\u4e00\u4e2acounted\u51fd\u6570 --\"f\"--&gt; fib\u51fd\u6570\nmemoized\u51fd\u6570 --\"f\"--&gt; \u7b2c\u4e00\u4e2acounted\u51fd\u6570\n\u53d8\u91cf\u540dfib --&gt; \u7b2c\u4e8c\u4e2acounted\u51fd\u6570 --\"f\"--&gt; memoized\u51fd\u6570</code></pre> </li> <li> <p>\u800c <code>fib</code> \u51fd\u6570\u5185\u90e8\u5728\u9012\u5f52\u65f6\uff0c\u4f1a\u8bbf\u95ee \u53d8\u91cf\u540d <code>fib</code> \uff0c\u6240\u4ee5\u5173\u7cfb\u53ef\u4ee5\u8fdb\u4e00\u6b65\u7406\u89e3\u4e3a</p> <pre><code>flowchart LR\n\u53d8\u91cf\u540dfib --&gt; \u7b2c\u4e8c\u4e2acounted\u51fd\u6570 --\"f\"--&gt; memoized\u51fd\u6570\ncounted_fib --&gt; \u7b2c\u4e00\u4e2acounted\u51fd\u6570 --\"f\"--&gt; fib\u51fd\u6570\nmemoized\u51fd\u6570 --\"f\"--&gt; \u7b2c\u4e00\u4e2acounted\u51fd\u6570\nfib\u51fd\u6570 -.-&gt; \u53d8\u91cf\u540dfib</code></pre> <p>\u6240\u4ee5\uff0c\u6bcf\u6b21\u8c03\u7528(\u539f\u672c\u7684) <code>fib</code> \u51fd\u6570\u65f6\uff0c\u9012\u5f52\u8c03\u7528\u7684\u662f \u7b2c\u4e8c\u4e2a <code>counted</code> \u51fd\u6570\uff0c\u5e76\u4e14\u7531\u4e8e\u662f \u6811\u5f62\u9012\u5f52\uff0c\u6240\u4ee5 \u7b2c\u4e8c\u4e2a <code>counted</code> \u51fd\u6570\u7684 <code>call_count</code> \u5927\u7ea6\u4e3a <code>n</code> (30)\u7684\u4e24\u500d\uff0c</p> <p>\u800c \u7b2c\u4e00\u4e2a <code>counted</code> \u51fd\u6570\uff0c\u53ea\u6709 <code>memoized</code> \u51fd\u6570\u4e2d\u4f20\u5165\u672a\u88ab\u8bb0\u5f55\u7ed3\u679c\u7684 <code>n</code> \u65f6\uff0c\u624d\u4f1a\u88ab\u8c03\u7528\uff0c\u56e0\u6b64 \u7b2c\u4e00\u4e2a <code>counted</code> \u51fd\u6570 \u7684 <code>call_count</code> \u4e3a <code>31</code> \uff0c\u521a\u597d\u5bf9\u5e94 0 \u5230 30</p> </li> </ul>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part2/#3_8","title":"3","text":"<p>John \u7ed9\u51fa\u4e86\u4e00\u79cd\u5229\u7528\u5e73\u65b9\u6765\u52a0\u901f \u5e42\u8fd0\u7b97 \u7684\u65b9\u6cd5\uff1a</p> \\[ b^n = \\begin{cases} 1 &amp; \\mathrm{if} \\ n = 0 \\\\ (b^{\\frac{1}{2}n})^2 &amp; \\mathrm{if} \\ n \\ \\mathrm{is \\ even} \\\\ b \\cdot b^{n-1} &amp; \\mathrm{if} \\ n \\ \\mathrm{is \\ odd} \\\\ \\end{cases} \\] <pre><code>def exp(b, n):\n    if n == 0:\n        return 1\n    elif n % 2 == 0:\n        return square(exp(b, n // 2))\n    else:\n        return b * exp(b, n - 1)\n\ndef square(x):\n    return x * x\n</code></pre>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part2/#4_5","title":"4","text":"<p>John \u5c55\u793a\u4e86\u4e00\u4e0b Jupyter Notebook \u7684\u4f7f\u7528</p> <p>Quote</p> <p>John:</p> <p>...this environment is called a jupiter notebook, you can read about them online. it's a common way that people use in order to execute python code when the output is a graph or a chart.</p> <p>John:</p> <p>...\u8fd9\u4e2a\u73af\u5883\u88ab\u79f0\u4e3aJupyter\u7b14\u8bb0\u672c\uff0c\u4f60\u53ef\u4ee5\u5728\u7f51\u4e0a\u4e86\u89e3\u66f4\u591a\u76f8\u5173\u4fe1\u606f\u3002\u8fd9\u662f\u4eba\u4eec\u5728\u6267\u884c\u8f93\u51fa\u4e3a\u56fe\u8868\u6216\u56fe\u8868\u7684Python\u4ee3\u7801\u65f6\u5e38\u7528\u7684\u4e00\u79cd\u65b9\u5f0f\u3002</p> <p></p> <p></p> <p>\u611f\u89c9\u7528\u6765\u753b\u56fe\u4f1a\u5f88\u65b9\u4fbf</p>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part2/#lab-08","title":"Lab 08","text":""},{"location":"Notes%20of%20Courses/CS61A/CS61A_part2/#1_12","title":"1","text":"<p>Q5 \u7684\u989d\u5916\u6311\u6218 extra challenge\uff0c\u5b9e\u73b0\u68c0\u6d4b\u94fe\u8868\u662f\u5426\u5e26\u6709\u5faa\u73af\uff0c\u4f46\u662f\u53ea\u80fd\u4f7f\u7528\u56fa\u5b9a\u5927\u5c0f\u7684/\u6052\u5b9a\u7684\u7a7a\u95f4</p> <p>\u6211\u4e00\u5f00\u59cb\u6ca1\u60f3\u51fa\u6765\uff0c\u7b2c\u4e8c\u5929\u91cd\u65b0\u601d\u8003\u7684\u65f6\u5019\uff0c\u60f3\u5230\u6709\u5faa\u73af\u5c31\u610f\u5473\u7740\u4f1a\u6765\u5230\u66fe\u7ecf\u6765\u8fc7\u7684\u8282\u70b9\uff0c\u90a3\u4e48\u5c31\u610f\u5473\u7740 \u8fd9\u4e2a\u8282\u70b9\u53ef\u4ee5\u7528\u6bd4\u5f53\u524d\u66f4\u5c11\u7684\u6b65\u6570\u4ece\u94fe\u8868\u5934\u5230\u8fbe\uff0c\u6240\u4ee5\uff0c\u6211\u6253\u7b97\u4f7f\u7528\u6052\u5b9a\u7a7a\u95f4\u6765\u8bb0\u5f55\u5f53\u524d\u8d70\u8fc7\u7684\u6b65\u6570\uff0c</p> <p>\u6700\u540e\u6210\u529f\u5b9e\u73b0\u4e86\u529f\u80fd</p> code <pre><code>def has_cycle_constant(link):\n    head = link\n    count = 0\n    while link.rest:\n        link = link.rest\n        count += 1\n        sublist = head\n        for _ in range(count):\n            if sublist is link:\n                return True\n            sublist = sublist.rest\n    return False\n</code></pre>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part2/#lecture-23-decomposition","title":"Lecture 23 Decomposition","text":""},{"location":"Notes%20of%20Courses/CS61A/CS61A_part2/#1_13","title":"1","text":"<p>\u4e00\u4e2a\u4e4b\u524d\u6ca1\u600e\u4e48\u4f7f\u7528\u8fc7\u7684python\u7684\u6570\u636e\u7c7b\u578b set \uff0c\u5b83\u7684\u7279\u6027</p> <ul> <li>\u53ea\u80fd\u5305\u542b\u4e0d\u540c\u7684\u5143\u7d20\uff0c\u5982\u679c\u521b\u5efa\u65f6\u6709\u591a\u4e2a\u76f8\u540c\u7684\u5143\u7d20\uff0c\u5219\u53ea\u4f1a\u4fdd\u7559\u4e00\u4e2a</li> <li>\u5143\u7d20\u7684\u987a\u5e8f\u662f\u65e0\u5e8f\u7684</li> <li>John\u4ecb\u7ecd\u8bf4\uff0c\u4f7f\u7528 <code>in</code> \u8bed\u53e5\u67e5\u8be2\u67d0\u4e2a\u5143\u7d20\u662f\u5426\u5728\u4e00\u4e2a set \u4e2d\uff0c\u6240\u9700\u7684\u65f6\u95f4\u662f\u5e38\u6570\u7ea7\u7684\uff0c\u4e0d\u4f1a\u968f\u7740 set \u7684\u957f\u5ea6\u589e\u957f(\u50cf\u5217\u8868\u5c31\u4f1a\u968f\u7740\u957f\u5ea6\u589e\u957f\uff0c\u662f\u7ebf\u6027\u7ea7\u7684)</li> <li><code>.union()</code> \u548c <code>.intersection()</code> \u5206\u522b\u662f set \u53d6\u5e76\u96c6\u548c\u4ea4\u96c6\u7684\u65b9\u6cd5\uff0c\u5e76\u4e14 John \u8bf4\u9053\uff0c\u8fd9\u4e24\u4e2a\u65b9\u6cd5\u5e76\u4e0d\u4f1a\u5bf9\u539f\u672c\u7684 set \u8fdb\u884c\u4fee\u6539\uff0c\u800c\u662f\u4f1a\u521b\u5efa\u51fa\u4e00\u4e2a\u65b0\u7684 set</li> </ul>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part2/#lecture-23-qa","title":"Lecture 23 Q&amp;A","text":""},{"location":"Notes%20of%20Courses/CS61A/CS61A_part2/#1_14","title":"1","text":"<p>\u6709\u4eba\u63d0\u95ee\u7684\u4e00\u9053\u8003\u8bd5\u9898\u76ee</p> <p></p> <p>\u6211\u611f\u89c9\u8fd8\u86ee\u6709\u610f\u601d\uff0c\u4e8e\u662f\u6211\u5c31\u6682\u505c\u5c1d\u8bd5\u4e86\u4e00\u4e0b</p> <pre><code>def stable(s, k, n):\n    \"\"\"Return whether all pairs of elements of S within distance K differ by at most N.\n\n    &gt;&gt;&gt; stable([1, 2, 3, 5, 6], 1, 2)  # All adjacent values differ by at most 2.\n    True\n    &gt;&gt;&gt; stable([1, 2, 3, 5, 6], 2, 2)  # abs(5-2) is a difference of 3.\n    False\n    &gt;&gt;&gt; stable([1, 5, 1, 5, 1], 2, 2)  # abs(5-1) is a difference of 4.\n    False\n    \"\"\"\n    for i in range(len(s)):\n        near = range(max(i - k, 0), i)\n        if any([abs(s[j] - s[i]) &gt; n for j in near]):\n            return False\n    return True\n</code></pre> <p>\u8fd0\u884c\u8fdb\u884c\u6d4b\u8bd5\uff0c\u6210\u529f\u901a\u8fc7</p> <pre><code>&gt; python -m doctest -v .\\test.py\nTrying:\n    stable([1, 2, 3, 5, 6], 1, 2)  # All adjacent values differ by at most 2.\nExpecting:\n    True\nok\nTrying:\n    stable([1, 2, 3, 5, 6], 2, 2)  # abs(5-2) is a difference of 3.\nExpecting:\n    False\nok\nTrying:\n    stable([1, 5, 1, 5, 1], 2, 2)  # abs(5-1) is a difference of 4.\nExpecting:\n    False\nok\n1 items had no tests:\n    test\n1 items passed all tests:\n   3 tests in test.stable\n3 tests in 2 items.\n3 passed and 0 failed.\nTest passed.\n</code></pre>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part2/#2_12","title":"2","text":"<p>Quote</p> <pre><code>\"\"\"A: (3 pts) Implement is_power, which takes a positive integer base and a\nnon-negative integer s. It returns whether s is power of base, meaning that there\nis some non-negative integer n such that pow(base, n) equals s.\n\nIMPORTANT: You may not call pow, use the ** operator, or import any function\n(such as math.log). Your solution must be recursive.\n\nCheck the doctests with: python3 -q a\n\"\"\"\ndef is_power(base, s):\n    \"\"\"Return whether s is a power of base.\n\n    &gt;&gt;&gt; is_power(5, 625)  # pow(5, 4) = 5 * 5 * 5 * 5 = 625\n    True\n    &gt;&gt;&gt; is_power(5, 1)    # pow(5, 0) = 1\n    True\n    &gt;&gt;&gt; is_power(5, 5)    # pow(5, 1) = 5\n    True\n    &gt;&gt;&gt; is_power(5, 15)   # 15 is not a power of 5 (it's multiple)\n    False\n    &gt;&gt;&gt; is_power(3, 9)\n    True\n    &gt;&gt;&gt; is_power(3, 8)\n    False\n    &gt;&gt;&gt; is_power(3, 10)\n    False\n    &gt;&gt;&gt; is_power(1, 8)\n    False\n    &gt;&gt;&gt; is_power(2, 0)    # 0 is not a power of any positive base.\n    False\n\n    &gt;&gt;&gt; is_power(4, 16)\n    True\n    &gt;&gt;&gt; is_power(4, 64)\n    True\n    &gt;&gt;&gt; is_power(4, 63)\n    False\n    &gt;&gt;&gt; is_power(4, 65)\n    False\n    &gt;&gt;&gt; is_power(4, 32)\n    False\n    \"\"\"\n    assert base &gt; 0 and s &gt;= 0\n    assert type(base) is int and type(s) is int\n    if ______:\n        return True\n    elif ______:\n        return False\n    else:\n        return ______\n\n\ncurry2 = lambda f: lambda x: lambda y: f(x, y)\n\n\"\"\"B: (5 pts) Implement powers, a generator function which takes positive\nintegers n and k. It yields all integers m that are both powers of k and whose\ndigits appear in order in n.\n\nAssume thar is_power is implemented correctly.\n\nNote: powers may yield its results in any order. The doctests below check what\nis yielded, but not the order. The built-in sorted funcion used in the doctests\ntakes in an iterable object and returns a list containing the elements of the\niterable in non-decreasing order.\n\nCheck the doctests with: python3 ok -q b\"\"\"\ndef powers(n, k):\n    \"\"\"Yield all powers of k whose digits appear in order in n.\n\n    &gt;&gt;&gt; sorted(powers(12345, 5))\n    [1, 5, 25, 125]\n    &gt;&gt;&gt; sorted(powers(54321, 5))  # 25 and 125 are not in order\n    [1, 5]\n    &gt;&gt;&gt; sorted(powers(2493, 3))\n    [3, 9, 243]\n\n    &gt;&gt;&gt; sorted(powers(2493, 2))\n    [2, 4]\n    &gt;&gt;&gt; sorted(powers(164352, 2))\n    [1, 2, 4, 16, 32, 64]\n    \"\"\"\n    def build(seed):\n        \"\"\"Yield all non-negetive integers whose digits appear in order in seed.\n        0 is yielded because 0 has no digits, so all its digits are in seed.\n        \"\"\"\n        if seed == 0:\n            yield 0\n        else:\n            for x in ______:\n                ______\n                ______\n    yield from filter(curry2(______)(______), build(n))\n</code></pre> <p>\u6709\u4eba\u63d0\u95ee\u7684\u4e00\u9053\u9898\u76ee\uff0c\u6211\u6709\u70b9\u60f3\u5c1d\u8bd5\u4e00\u4e0b\uff0c</p> <p>\u672c\u6765\u53ea\u662f\u60f3\u505a\u4e00\u4e0b\u7b2c\u4e8c\u9898/\u7b2c\u4e8c\u90e8\u5206\uff0c\u4f46\u662f\u770b\u9898\u76ee\u8981\u6c42\u597d\u50cf\u7b2c\u4e8c\u9898\u9700\u8981\u7528\u5230\u7b2c\u4e00\u9898\u7684\u51fd\u6570\uff0c\u4e8e\u662f\u5c31\u8fde\u7b2c\u4e00\u9898\u4e00\u8d77\u505a\u5b8c\u4e86\ud83d\ude02</p> <pre><code>def is_power(base, s):\n    \"\"\"Return whether s is a power of base.\n\n    &gt;&gt;&gt; is_power(5, 625)  # pow(5, 4) = 5 * 5 * 5 * 5 = 625\n    True\n    &gt;&gt;&gt; is_power(5, 1)    # pow(5, 0) = 1\n    True\n    &gt;&gt;&gt; is_power(5, 5)    # pow(5, 1) = 5\n    True\n    &gt;&gt;&gt; is_power(5, 15)   # 15 is not a power of 5 (it's multiple)\n    False\n    &gt;&gt;&gt; is_power(3, 9)\n    True\n    &gt;&gt;&gt; is_power(3, 8)\n    False\n    &gt;&gt;&gt; is_power(3, 10)\n    False\n    &gt;&gt;&gt; is_power(1, 8)\n    False\n    &gt;&gt;&gt; is_power(2, 0)    # 0 is not a power of any positive base.\n    False\n\n    &gt;&gt;&gt; is_power(4, 16)\n    True\n    &gt;&gt;&gt; is_power(4, 64)\n    True\n    &gt;&gt;&gt; is_power(4, 63)\n    False\n    &gt;&gt;&gt; is_power(4, 65)\n    False\n    &gt;&gt;&gt; is_power(4, 32)\n    False\n    \"\"\"\n    assert base &gt; 0 and s &gt;= 0\n    assert type(base) is int and type(s) is int\n    if s == 1:\n        return True\n    elif base == 0 or base == 1 or s == 0 or s % base != 0:\n        return False\n    else:\n        return is_power(base, s // base)\n\n\ncurry2 = lambda f: lambda x: lambda y: f(x, y)\n\ndef powers(n, k):\n    \"\"\"Yield all powers of k whose digits appear in order in n.\n\n    &gt;&gt;&gt; sorted(powers(12345, 5))\n    [1, 5, 25, 125]\n    &gt;&gt;&gt; sorted(powers(54321, 5))  # 25 and 125 are not in order\n    [1, 5]\n    &gt;&gt;&gt; sorted(powers(2493, 3))\n    [3, 9, 243]\n\n    &gt;&gt;&gt; sorted(powers(2493, 2))\n    [2, 4]\n    &gt;&gt;&gt; sorted(powers(164352, 2))\n    [1, 2, 4, 16, 32, 64]\n    \"\"\"\n    def build(seed):\n        \"\"\"Yield all non-negetive integers whose digits appear in order in seed.\n        0 is yielded because 0 has no digits, so all its digits are in seed.\n        \"\"\"\n        if seed == 0:\n            yield 0\n        else:\n            for x in build(seed // 10):\n                yield x\n                yield x * 10 + seed % 10\n    yield from filter(curry2(is_power)(k), build(n))\n</code></pre>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part2/#3_9","title":"3","text":"<p>John \u63d0\u5230\u4e86 lab 08 \u7684 Q6 <code>reverse_other</code> \u8fd9\u9898\uff0c\u57fa\u672c\u7684\u601d\u8def\u548c\u4e4b\u524d\u6211\u505a\u7684\u65f6\u5019\u7684\u601d\u8def\u611f\u89c9\u5dee\u4e0d\u591a\uff0c\u4f46\u662f\u5728\u5177\u4f53\u5904\u7406\u4e0a\uff0c\u6211\u89c9\u5f97\u8001\u5e08\u7684\u4e00\u4e9b\u5904\u7406\u503c\u5f97\u5b66\u4e60\uff0c</p> <p>\u9996\u5148\u5c31\u662f\uff0c\u7528\u5230\u4e86\u4e4b\u524d\u7684\u7ec3\u4e60\u4e2d\u4e5f\u6709\u63d0\u5230\u7684 <code>zip</code> \u51fd\u6570\uff0c\u5229\u7528\u4e86 <code>zip</code> \u611f\u89c9\u5c31\u6bd4\u6211\u4e4b\u524d\u7684\u5199\u6cd5\u66f4\u52a0\u7b80\u6d01\uff0c</p> <p>\u7136\u540e\u662f\u5904\u7406 \u9694\u4e00\u5c42\u53cd\u8f6c \u7684\u64cd\u4f5c\u4e0a\uff0c\u662f\u76f4\u63a5\u5728\u5b50\u8282\u70b9\u7684\u5faa\u73af\u4e2d\u518d\u6b21\u5faa\u73af\uff0c\u5c31\u521a\u597d\u80fd\u62ff\u5230 \u5b59\u5b50\u8282\u70b9\uff0c\u6211\u4e4b\u524d\u7684\u505a\u6cd5\u5c31\u7a0d\u5fae\u9ebb\u70e6\uff0c\u8fd8\u9700\u8981\u4e00\u4e2a <code>helper</code> \u51fd\u6570\u6765\u8f85\u52a9\u8ba1\u6570</p> <p></p> <p>John\u53c8\u5c55\u793a\u4e86\u4e0d\u4f7f\u7528 <code>zip</code> \u7684\u5b9e\u73b0\u65b9\u6cd5\uff0c\u800c\u4ed6\u8fd9\u6b21\u5229\u7528\u4e86\u8d1f\u7684\u4e0b\u6807\u6765\u5b9e\u73b0\u7ffb\u8f6c</p> <pre><code>for i in range(len(t.branches)):\n    t.branches[i].label = labels_of_branches[-i - 1]\n    ...\n</code></pre>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part2/#4_6","title":"4","text":"<p>\u6709\u4eba\u63d0\u95ee\uff0c\u5982\u679c\u4e00\u4e2a\u7c7b\u7ee7\u627f\u81ea\u4e24\u4e2a\u4e0d\u540c\u7684\u7c7b\uff0c\u90a3\u4e48\u5b83\u4f7f\u7528 <code>super</code> \u65f6\u4f1a\u600e\u6837</p> <p>Quote</p> <p>John:</p> <p>so if you use super on a class that inherits from two different classes, what have you built, you built something very strange, but basically whay you've built is the same object except for, it's gonna not look up things is its class, it's gonna look at them up in one of the base classes, and which one, well, it looks at them in the order that you inherit, so if have a class that inherits from both b and c, it's gonna look in b first and then it's gonna look at c, to find the corresponding attribute that you're looking at.</p> <p>John:</p> <p>\u5f53\u4f60\u5728\u4e00\u4e2a\u4ece\u4e24\u4e2a\u4e0d\u540c\u7c7b\u7ee7\u627f\u7684\u7c7b\u4e0a\u4f7f\u7528 super \u65f6\uff0c\u4f60\u6784\u5efa\u4e86\u4e00\u4e9b\u975e\u5e38\u5947\u602a\u7684\u4e1c\u897f\uff0c\u4f46\u57fa\u672c\u4e0a\u4f60\u6784\u5efa\u7684\u662f\u76f8\u540c\u7684\u5bf9\u8c61\uff0c\u53ea\u662f\u5b83\u4e0d\u4f1a\u5728\u5176\u7c7b\u4e2d\u67e5\u627e\u5c5e\u6027\uff0c\u800c\u662f\u4f1a\u5728\u5176\u4e2d\u4e00\u4e2a\u57fa\u7c7b\u4e2d\u67e5\u627e\u3002\u800c\u5177\u4f53\u662f\u54ea\u4e00\u4e2a\u57fa\u7c7b\u5462\uff1f\u5b83\u4f1a\u6309\u7167\u4f60\u7ee7\u627f\u7684\u987a\u5e8f\u67e5\u627e\uff0c\u6240\u4ee5\u5982\u679c\u6709\u4e00\u4e2a\u7c7b\u540c\u65f6\u7ee7\u627f\u81ea\u7c7bB\u548c\u7c7bC\uff0c\u5b83\u4f1a\u9996\u5148\u5728B\u4e2d\u67e5\u627e\uff0c\u7136\u540e\u518d\u5728C\u4e2d\u67e5\u627e\u76f8\u5e94\u7684\u5c5e\u6027\u3002</p>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part2/#lecture-24-data-example","title":"Lecture 24 Data Example","text":""},{"location":"Notes%20of%20Courses/CS61A/CS61A_part2/#1_15","title":"1","text":"<p>\u5c1d\u8bd5\u81ea\u5df1\u505a\u4e86\u4e00\u4e0b\u8fd9\u56db\u9898\uff0c\u4e0b\u9762\u662f\u6211\u5199\u7684</p> <pre><code>def indices_of_min_abs(s):\n    \"\"\"\n    &gt;&gt;&gt; indices_of_min_abs([-4, -3, -2, 3, 2, 4])\n    [2, 4]\n    &gt;&gt;&gt; indices_of_min_abs([1, 2, 3, 4, 5])\n    [0]\n    \"\"\"\n    min_abs = min([abs(x) for x in s])\n    return [i for i in range(len(s)) if abs(s[i]) == min_abs]\n\ndef largest_sum_of_adjacency(s):\n    \"\"\"\n    &gt;&gt;&gt; largest_sum_of_adjacency([-4, -3, -2, 3, 2, 4])\n    6\n    &gt;&gt;&gt; largest_sum_of_adjacency([-4, 3, -2, -3, 2, -4])\n    1\n    \"\"\"\n    return max([s[i] + s[i + 1] for i in range(len(s) - 1)])\n\ndef map_digit_to_element(s):\n    \"\"\"\n    &gt;&gt;&gt; map_digit_to_element([5, 8, 13, 21, 34, 55, 89])\n    {1: [21], 3: [13], 4: [34], 5: [5, 55], 8: [8], 9: [89]}\n    \"\"\"\n    result = {}\n    for x in s:\n        d = x % 10\n        if d not in result:\n            result[d] = [x]\n        else:\n            result[d] += [x]\n    return {d: result[d] for d in sorted(result)}\n\ndef every_element_has_equal_value(s):\n    \"\"\"\n    &gt;&gt;&gt; every_element_has_equal_value([-4, -3, -2, 3, 2, 4])\n    False\n    &gt;&gt;&gt; every_element_has_equal_value([4, 3, 2, 3, 2, 4])\n    True\n    \"\"\"\n    for i in range(len(s)):\n        if all([i == j or s[i] != s[j] for j in range(len(s))]):\n            return False\n    return True\n</code></pre> <p>\u5728\u505a\u7b2c\u4e09\u4e2a\u95ee\u9898\u65f6\uff0c\u53d1\u73b0\u4e86\u5982\u679c <code>sorted</code> \u51fd\u6570\u4f20\u5165\u7684\u662f\u4e00\u4e2a\u5b57\u5178\uff0c\u90a3\u4e48\u4f1a\u8fd4\u56de\u4ee5\u952e\u4e3a\u5143\u7d20\u6392\u597d\u5e8f\u7684\u5217\u8868</p>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part2/#2_13","title":"2","text":"<p>John \u7b2c\u4e00\u4e2a\u95ee\u9898\u4e2d\u8fd0\u7528\u4e86 <code>map</code> \u51fd\u6570\u6765\u83b7\u53d6 <code>min_abs</code> \uff0c\u611f\u89c9\u6bd4\u6211\u7684\u4ee3\u7801\u770b\u8d77\u6765\u66f4\u7b80\u6d01\u4e9b</p> <pre><code>min_abs = min(map(abs, s))\n</code></pre> <p>John <code>return</code> \u7684\u90a3\u4e00\u884c\u4ee3\u7801\uff0c\u63d0\u4f9b\u4e86\u4f7f\u7528 <code>filter</code> \u51fd\u6570\u7684\u53e6\u4e00\u79cd\u5199\u6cd5(\u7531\u4e8e <code>filter</code> \u8fd4\u56de\u7684\u662f\u4e00\u4e2a\u8fed\u4ee3\u5668\uff0c\u6240\u4ee5\u9700\u8981\u8f6c\u6362\u6210\u5217\u8868)\uff0c</p> <pre><code>return list(filter(lambda i: abs(s[i]) == min_abs, range(len(s))))\n</code></pre> <p></p> <p>John \u5728\u7b2c\u4e8c\u4e2a\u95ee\u9898\u4e2d\u53c8\u63d0\u4f9b\u4e86\u7b2c\u4e8c\u79cd\u65b9\u6cd5\uff0c\u5229\u7528 <code>zip</code> \u51fd\u6570\uff0c\u5e76\u4e14\u5229\u7528\u5207\u7247\u6765\u83b7\u53d6\u76f8\u90bb\u5143\u7d20(\u611f\u89c9\u592a\u5f3a\u4e86\ud83d\ude32\uff0c\u5b8c\u5168\u6ca1\u60f3\u5230\u80fd\u8fd9\u6837\u7528 <code>zip</code> )</p> <pre><code>return max([a + b for a, b in zip(s[:-1], s[1:])])\n</code></pre> <p></p> <p>\u7b2c\u4e09\u4e2a\u95ee\u9898 John \u7528\u4e86\u8ddf\u6211\u7684\u601d\u8def\u4e0d\u540c\u7684\u53e6\u4e00\u79cd\u601d\u8def\u6765\u5b9e\u73b0</p> <pre><code>return {d: [x for x in s if x % 10 == d] for d in range(10) if any([x % 10 == d for x in s])}\n</code></pre> <p></p> <p>\u7b2c\u56db\u4e2a\u95ee\u9898\uff0cJohn \u4e00\u5f00\u59cb\u7684\u601d\u8def\u611f\u89c9\u611f\u89c9\u548c\u6211\u7684\u5dee\u4e0d\u591a\uff0c\u4f46\u662f\u4e5f\u6bd4\u6211\u7684\u4ee3\u7801\u8981\u7b80\u6d01\uff0c</p> <pre><code>return all([s[i] in s[:i] + s[i + 1:] for i in range(len(s))])\n</code></pre> <p>\u4f46\u662f John \u63d0\u4f9b\u4e86\u7b2c\u4e8c\u79cd\u601d\u8def\uff0c\u5982\u679c\u5217\u8868\u4e2d\u6709\u4e24\u4e2a\u76f8\u540c\u7684\u6570\uff0c\u90a3\u4e48\u610f\u5473\u7740\u8fd9\u4e2a\u6570\u7684\u4e2a\u6570\u5927\u4e8e\u7b49\u4e8e2\uff0c</p> <p></p> <p>\u56e0\u6b64\u53ef\u4ee5\u8fd9\u6837\u5199</p> <pre><code>return all([sum([1 for y in s if y == x]) &gt; 1 for x in s])\n</code></pre> <p>\u800c\u8fdb\u4e00\u6b65\uff0c\u53ef\u4ee5\u501f\u52a9 <code>min</code> \u6765\u5224\u65ad\u6700\u5c0f\u7684\u7ed3\u679c\u5927\u4e8e 1 \u5c31\u53ef\u4ee5\u4e86\uff0c</p> <p>\u800c\u7136\u540e\uff0c\u5217\u8868\u6709\u4e00\u4e2a <code>.count()</code> \u65b9\u6cd5\uff0c\u8ba1\u7b97\u67d0\u4e2a\u5143\u7d20\u7684\u4e2a\u6570\uff0c\u56e0\u6b64\u5f97\u5230(\u5e94\u8be5\u662f)\u6700\u7b80\u6d01\u7684\u5199\u6cd5(\u771f\u7ed9\u6211\u770b\u5f97\u5168\u7a0b\u60ca\u5446\u4e86\ud83d\ude32)</p> <pre><code>return min([s.count(x) for x in s]) &gt; 1\n</code></pre> <p></p>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part2/#3_10","title":"3","text":"<p>\u8fd9\u91cc\u7684\u7b2c\u4e09\u548c\u7b2c\u56db\u4e2a\u95ee\u9898\u611f\u89c9\u6709\u70b9\u610f\u601d\uff0c\u7b2c\u56db\u4e2a\u95ee\u9898\u6211\u4e00\u5f00\u59cb\u60f3\u6ca1\u6709\u60f3\u51fa\u6765\uff0c\u6700\u540e\u770b\u4e86 John \u7684\u7f16\u5199\u624d\u60f3\u660e\u767d</p> <p></p> <pre><code>def merge(s, t):\n    \"\"\"Return a sorted Link with the elements of sorted s &amp; t.\n\n    &gt;&gt;&gt; a = Link(1, Link(5))\n    &gt;&gt;&gt; b = Link(1, Link(4))\n    &gt;&gt;&gt; merge(a, b)\n    Link(1, Link(1, Link(4, Link(5))))\n    &gt;&gt;&gt; a\n    Link(1, Link(5))\n    &gt;&gt;&gt; b\n    Link(1, Link(4))\n    \"\"\"\n    if s is Link.empty:\n        return t\n    elif t is Link.empty:\n        return s\n    elif s.first &lt;= t.first:\n        return Link(s.first, merge(s.rest, t))\n    else:\n        return Link(t.first, merge(s, t.rest))\n\ndef merge_in_place(s, t):\n    \"\"\"Return a sorted Link with the elements of sorted s &amp; t.\n\n    &gt;&gt;&gt; a = Link(1, Link(5))\n    &gt;&gt;&gt; b = Link(1, Link(4))\n    &gt;&gt;&gt; merge(a, b)\n    Link(1, Link(1, Link(4, Link(5))))\n    &gt;&gt;&gt; a\n    Link(1, Link(1, Link(4, Link(5))))\n    &gt;&gt;&gt; b\n    Link(1, Link(4, Link(5)))\n    \"\"\"\n    if s is Link.empty:\n        return t\n    elif t is Link.empty:\n        return s\n    elif s.first &lt;= t.first:\n        # return Link(s.first, merge(s.rest, t))\n        s.rest = merge_in_place(s.rest, t)\n        return s\n    else:\n        # return Link(t.first, merge(s, t.rest))\n        t.rest = merge_in_place(s, t.rest)\n        return t\n</code></pre>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part2/#lecture-24-qa","title":"Lecture 24 Q&amp;A","text":""},{"location":"Notes%20of%20Courses/CS61A/CS61A_part2/#1_16","title":"1","text":"<p>\u63d0\u5230\u768417\u6625(\u7b2c\u4e8c\u6b21\u671f\u4e2d\u6a21\u62df\u8003)\u7684\u4e00\u4e2a\u9898\u76ee</p> <p>Quote</p> <p>Perfect Engine!</p> <p>You are in an apocalyptic society and have been charged with making an n-gen, or a generator that computes all of the n-perfect numbers. However, in this apocalyptic society, built-in AND user-defined Python multiplication is forbidden in any form!</p> <p>You have a blueprint for building a few n-gins from a natural number generator:</p> <pre><code>A 2-gen:\n1 2 3 4 5 6 7 8 9 ...\n1 4 9 16 25 ...\n</code></pre> <pre><code>A 3-gen:\n1 2 3 4 5 6 7 8 9 ...\n1 3 7 12 19 27 ...\n1 8 27 ...\n</code></pre> <p>Hint: Here is how <code>yield from</code> works. When used inside an iterable <code>yield from</code> will issue each element from another iterable as though it was issued from the first iterable. The following code is equivalent:</p> <pre><code>def generator1 ():\n    for item in generator2 ():\n        yield item\n    # do more things in this generator\n</code></pre> <pre><code>def generator1 ():\n    yield from generator2 ()\n    # more things on this generator\n</code></pre> <p>Now its your job to build the perfect n-gen and power society out of the apocalypse! Good luck!</p> <pre><code>def nats():\n    \"\"\"\n    A generator that yields\n    all natural numbers.\n    Might be helpful!\n    \"\"\"\n    curr = 0\n    while True:\n        curr += 1\n        yield curr\n\ndef create_skip(n, gen):\n    if n == 1:\n        yield from ____________\n    curr , skip = ________, ________\n    for elem in ____________:\n        if skip == n:\n            ___________________\n        else:\n            curr = __________________\n            skip = _________________\n            yield _________________\n\ndef perfect_ngen(n):\n    \"\"\"\n    &gt;&gt;&gt; two_gen = perfect_ngen(2)\n    &gt;&gt;&gt; next(two_gen)\n    1\n    &gt;&gt;&gt; next(two_gen)\n    4\n    &gt;&gt;&gt; next(two_gen)\n    9\n    &gt;&gt;&gt; three_gen = perfect_ngen(3)\n    &gt;&gt;&gt; next(three_gen)\n    1\n    &gt;&gt;&gt; next(three_gen)\n    8\n    &gt;&gt;&gt; next(three_gen)\n    27\n    \"\"\"\n    gen = create_skip(____, _______)\n    while _________________:\n        n = _________________\n        gen = create_skip(____, _______)\n    return gen\n</code></pre> <p>\u611f\u89c9\u8fd9\u9898\u6709\u70b9\u597d\u73a9\uff0c\u7528\u5230\u4e86\u4e00\u4e9b\u6570\u5b66\u4e0a\u7684\u7ed3\u8bba\uff0c\u770b\u4e86\u597d\u4e00\u4f1a\u624d\u770b\u61c2\u9898\u76ee\uff0c</p> <p>\u5927\u6982\u662f\uff0c\u8981\u5b9e\u73b0\u4e00\u4e2a\u80fd\u8fd4\u56de \u81ea\u7136\u6570\u7684 n \u6b21\u65b9\u751f\u6210\u5668 \u7684\u51fd\u6570\uff0c\u800c\u4e14\u4e0d\u80fd\u4f7f\u7528\u4e58\u6cd5\uff0c</p> <p>\u4ece\u7ed9\u51fa\u7684\u4e24\u4e2a\u4f8b\u5b50\u770b\uff0c\u8f93\u51fa\u5e73\u65b9\u6570\u5217\u7684\u65b9\u6cd5\u662f\uff0c\u5c06\u81ea\u7136\u6570\u5217\u4e2d\u7684\u5076\u6570(2\u7684\u500d\u6570)\u8df3\u8fc7\uff0c\u518d\u5c06\u6570\u5217\u4e2d\u4e4b\u524d\u7684\u5176\u4ed6\u6570\u52a0\u8d77\u6765\uff0c\u548c\u5c31\u521a\u597d\u662f\u5e73\u65b9\uff0c</p> <p>\u800c\u5bf9\u4e8e\u7acb\u65b9\u6570\u5217\uff0c\u4e0e\u5e73\u65b9\u7c7b\u4f3c\uff0c\u5148\u662f\u5c06\u81ea\u7136\u6570\u5217\u4e2d 3\u7684\u500d\u6570\u8df3\u8fc7\uff0c\u7136\u540e\u5c06\u4e4b\u524d\u7684\u5176\u4ed6\u6570\u52a0\u8d77\u6765\uff0c\u5f97\u5230\u4e00\u4e2a\u6570\u5217\uff0c\u518d\u5c06\u8fd9\u4e2a\u6570\u5217\u518d\u8fdb\u884c\u4e00\u6b21\u540c\u6837\u7684\u64cd\u4f5c(\u5373\u8df3\u8fc7 3\u7684\u500d\u6570\uff0c\u53d6\u4e4b\u524d\u6570\u7684\u548c\uff0c\u770b\u5230\u8fd9\u91cc\u4f1a\u53d1\u73b0 \u81ea\u7136\u6570\u5217\u4e2d\uff0c3\u7684\u500d\u6570\u521a\u597d\u95f4\u9694\u4e3a3\uff0c\u800c\u65b0\u6570\u5217\u4e2d\u521a\u597d\u95f4\u9694\u4e3a2\uff0c\u8fd9\u4e00\u70b9\u4f1a\u5728\u7ed9\u51fa\u7684\u4ee3\u7801\u6846\u67b6\u4e2d\u88ab\u7528\u4e0a)\uff0c\u6700\u540e\u5f97\u5230\u7684\u6570\u5217\u5c31\u662f\u7acb\u65b9\u6570\u5217(\u611f\u89c9\u597d\u795e\u5947\ud83d\ude32)\uff0c</p> <p>\u6240\u4ee5\u6211\u5c31\u5c1d\u8bd5\u4e86\u4e00\u4e0b\u8fd9\u4e2a\u9898\u76ee</p> <pre><code>def nats():\n    \"\"\"\n    A generator that yields\n    all natural numbers.\n    Might be helpful!\n    \"\"\"\n    curr = 0\n    while True:\n        curr += 1\n        yield curr\n\ndef create_skip(n, gen):\n    if n == 1:\n        yield from gen\n    curr , skip = 0, 1\n    for elem in gen:\n        if skip == n:\n            skip = 1\n        else:\n            curr = curr + elem\n            skip = skip + 1\n            yield curr\n\ndef perfect_ngen(n):\n    \"\"\"\n    &gt;&gt;&gt; two_gen = perfect_ngen(2)\n    &gt;&gt;&gt; next(two_gen)\n    1\n    &gt;&gt;&gt; next(two_gen)\n    4\n    &gt;&gt;&gt; next(two_gen)\n    9\n    &gt;&gt;&gt; three_gen = perfect_ngen(3)\n    &gt;&gt;&gt; next(three_gen)\n    1\n    &gt;&gt;&gt; next(three_gen)\n    8\n    &gt;&gt;&gt; next(three_gen)\n    27\n    \"\"\"\n    gen = create_skip(n, nats())\n    while n != 1:\n        n = n - 1\n        gen = create_skip(n, gen)\n    return gen\n</code></pre> <p></p>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part2/#2_14","title":"2","text":"<p>Quote</p> <pre><code>def close(n, smallest=10, d=10):\n    \"\"\" A sequence is near increasing if each element but the last two is smaller than all elements\n    following its subsequent element. That is, element i must be smaller than elements i + 2, i + 3, i + 4 etc.\n    Implement close, which takes a non-negative integer n and returns the largest near increasing sequence\n    of digits within n as an integer. The arguments smallest and d are part of the implementation; you must\n    determine their purpose. The only values you may use are integers and booleans (True and False) (no lists, strings, etc.).\n    Return the longest sequence of near-increasing digits in n.\n    &gt;&gt;&gt; close(123)\n    123\n    &gt;&gt;&gt; close(153)\n    153\n    &gt;&gt;&gt; close(1523)\n    153\n    &gt;&gt;&gt; close(15123)\n    1123\n    &gt;&gt;&gt; close(11111111)\n    11\n    &gt;&gt;&gt; close(985357)\n    557\n    &gt;&gt;&gt; close(14735476)\n    143576\n    &gt;&gt;&gt; close(812348567)\n    1234567\n    &gt;&gt;&gt; close(45671) # with a 1 is 71; without a 1 is 4567\n    4567\n    \"\"\"\n    if n == 0:\n        return 0\n    no = close(n // 10, smallest, d)\n    if smallest &gt; ______:\n        yes = ______\n        return ______(yes, no)\n    return ______\n</code></pre> <p>\u8fd9\u9053\u9898\u6709\u70b9\u96be\u60f3\uff0c\u4e00\u5f00\u59cb\u770b\u5b8c\u4e86 John \u5199\u51fa\u7b54\u6848\u7684\u6574\u4e2a\u8fc7\u7a0b\u4f46\u8fd8\u662f\u6ca1\u60f3\u660e\u767d\uff0c</p> <p>\u7136\u540e John \u6362\u4e86\u4e00\u4e2a\u7b80\u5355\u7684\u4f8b\u5b50\u6765\u8bb2\u89e3\uff0c\u5b9e\u73b0\u83b7\u5f97\u6700\u5927\u7684\u9012\u589e\u5b50\u5e8f\u5217\u51fd\u6570</p> <p></p> <p>Quote</p> <p>John:</p> <p>...let's let's solve a simpler one, more complicated than this, but less complicated than this, let's get rid of this notion of near increasing, and just, uh, look for the longest increasing sequence within n. we would need to keep track of some notion of what's the smallest thing i've done so far, um, so what does this do, return the sequence of digits within n, sorry, the largest sequence of digits within n that is increasing. so how might it work, if i call increasing on here's some digits, let's see what we got we could have two, then four, then seven and eight, that's pretty long try one more, uh we could have three four five six seven, that's pretty long. i didn't check too carefully but it's about right.</p> <pre><code>def increasing(n, smallest=10):\n    \"\"\"Return the largest sequence of digits within n that is increasing.\n\n    &gt;&gt;&gt; increasing(87247861)\n    2478\n    &gt;&gt;&gt; increasing(367456751)\n    34567\n    \"\"\"\n</code></pre> <p>how will we do this one, if n equals zero, return zero. otherwise, if um the last digit of n is less than whatever is the smallest thing i've seen so far, then i might want to include it. so i'm going to just write this as, maybe i'll use n percent 10 in the result, or maybe not.</p> <pre><code>def increasing(n, smallest=10):\n    \"\"\"Return the largest sequence of digits within n that is increasing.\n\n    &gt;&gt;&gt; increasing(87247861)\n    2478\n    &gt;&gt;&gt; increasing(367456751)\n    34567\n    \"\"\"\n    if n == 0:\n        return 0\n    elif n % 10 &lt; smallest:\n        # Maybe I'll use n % 10 in the result or maybe not\n    else:\n</code></pre> <p>if n if the last digit is not allowed because it's bigger, than something that i've already decided i'm going to use, then i just can't use it. so that means the best i can do, is find the biggest increasing number within n divided by 10. okay so now we're going to have this notion of no and yes. no says i ignore n percent ten.</p> <pre><code>def increasing(n, smallest=10):\n    \"\"\"Return the largest sequence of digits within n that is increasing.\n\n    &gt;&gt;&gt; increasing(87247861)\n    2478\n    &gt;&gt;&gt; increasing(367456751)\n    34567\n    \"\"\"\n    if n == 0:\n        return 0\n    elif n % 10 &lt; smallest:\n        # Maybe I'll use n % 10 in the result or maybe not\n        no = increasing(n // 10)\n        yes\n    else:\n        return increasing(n // 10)\n</code></pre> <p>this is the same as that, which is why this had kind of a funny structure, we'll talk about that later. it is important that when you're looking for the smallest thing within, and ignoring the last digit you still respect, how whatever digits you've decided to keep already along the way, so you have to pass in this notion of what's the smallest thing i've already decided to use. and then if you decide to use n percent 10, which is smaller than the smallest, now you can still find more digits, but they're not allowed to just be smaller than the smallest thing you had previously seen, now they have to be smaller than n percent 10. it turns out that this could be simplified, because we know that this is smaller than that, so i could trim this down, and i'd get the same result. but i'm going to leave it like this just so we can compare it with the other thing in a minute. and then here i would say, well, maybe i found the best thing without using this digit.</p> <pre><code>def increasing(n, smallest=10):\n    \"\"\"Return the largest sequence of digits within n that is increasing.\n\n    &gt;&gt;&gt; increasing(87247861)\n    2478\n    &gt;&gt;&gt; increasing(367456751)\n    34567\n    \"\"\"\n    if n == 0:\n        return 0\n    elif n % 10 &lt; smallest:\n        # Maybe I'll use n % 10 in the result or maybe not\n        no = increasing(n // 10, smallest)\n        yes = increasing(n // 10, min(n % 10, smallest)) * 10 + n % 10\n        return max(no, yes)\n    else:\n        return increasing(n // 10, smallest)\n</code></pre> <p>...so uh so what now, if you can understand this, then you can eventually understand this, but i agree that like close is just a much, like a considerably more complicated version of increasing. so i would focus on understanding this first what's going on here. let's just look at the mechanics, we either use one or we don't, in the in the choice where we don't, we just kind of pretend it's not there, and then we either use six or we don't, and in the choice where we don't we just pretend it's not there, and then we either use eight or we don't, in the choice that we do now, we have to make sure that everything else that we choose from here is smaller than eight. so we're going to have eight in the end, but we make a recursive call, that is i want the longest increasing sequence within eight seven two four seven, you know everything that's left over, except for all of the digits there have to be smaller than eight, and that's how i got this number. so if that makes sense then look at the difference between this, and that the difference between this and that is that, like we're just tucking away the most recent digit, and we're gonna include it in this notion of smallest, one step later than we otherwise would. so you're allowed to ignore the five, when you're checking to make sure that one is small enough, because that's just the rules of how this works.</p> <p>John:</p> <p>...\u8ba9\u6211\u4eec\u89e3\u51b3\u4e00\u4e2a\u66f4\u7b80\u5355\u7684\u95ee\u9898\uff0c\u6bd4\u8fd9\u4e2a\u590d\u6742\uff0c\u4f46\u6bd4\u8fd9\u4e2a\u7b80\u5355\uff0c\u8ba9\u6211\u4eec\u6446\u8131\u8fd1\u4f3c\u9012\u589e\u7684\u6982\u5ff5\uff0c\u53ea\u662f\u5bfb\u627en\u4e2d\u6700\u957f\u7684\u9012\u589e\u5e8f\u5217\u3002\u6211\u4eec\u9700\u8981\u4fdd\u6301\u67d0\u79cd\u5173\u4e8e\u5230\u76ee\u524d\u4e3a\u6b62\u6211\u505a\u8fc7\u7684\u6700\u5c0f\u7684\u6982\u5ff5\uff0c\u90a3\u4e48\u8fd9\u4e2a\u51fd\u6570\u662f\u5e72\u4ec0\u4e48\u7684\uff0c\u8fd4\u56den\u4e2d\u9012\u589e\u7684\u6700\u5927\u6570\u5b57\u5e8f\u5217\u3002\u6240\u4ee5\u5b83\u53ef\u80fd\u662f\u600e\u4e48\u5de5\u4f5c\u7684\uff0c\u5982\u679c\u6211\u5728\u8fd9\u91cc\u7684\u4e00\u4e9b\u6570\u5b57\u4e0a\u8c03\u7528increasing\uff0c\u8ba9\u6211\u4eec\u770b\u770b\u6211\u4eec\u5f97\u5230\u4e86\u4ec0\u4e48\uff0c\u6211\u4eec\u53ef\u80fd\u67092\uff0c\u7136\u540e4\uff0c\u7136\u540e7\u548c8\uff0c\u8fd9\u5f88\u957f\uff0c\u518d\u8bd5\u4e00\u6b21\uff0c\u6211\u4eec\u53ef\u80fd\u67093\uff0c4\uff0c5\uff0c6\uff0c7\uff0c\u8fd9\u4e5f\u5f88\u957f\u3002\u6211\u6ca1\u6709\u4ed4\u7ec6\u68c0\u67e5\uff0c\u4f46\u5927\u81f4\u662f\u5bf9\u7684\u3002</p> <pre><code>def increasing(n, smallest=10):\n    \"\"\"Return the largest sequence of digits within n that is increasing.\n\n    &gt;&gt;&gt; increasing(87247861)\n    2478\n    &gt;&gt;&gt; increasing(367456751)\n    34567\n    \"\"\"\n</code></pre> <p>\u6211\u4eec\u8981\u5982\u4f55\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u5982\u679cn\u7b49\u4e8e\u96f6\uff0c\u8fd4\u56de\u96f6\u3002\u5426\u5219\uff0c\u5982\u679cn\u7684\u6700\u540e\u4e00\u4f4d\u6570\u5b57\u5c0f\u4e8e\u5230\u76ee\u524d\u4e3a\u6b62\u6211\u770b\u5230\u7684\u6700\u5c0f\u503c\uff0c\u90a3\u4e48\u6211\u53ef\u80fd\u60f3\u8981\u5305\u542b\u5b83\u3002\u6240\u4ee5\u6211\u5c06\u5199\u6210\u8fd9\u6837\uff0c\u4e5f\u8bb8\u6211\u4f1a\u5728\u7ed3\u679c\u4e2d\u4f7f\u7528n % 10\uff0c\u6216\u8005\u4e5f\u8bb8\u4e0d\u4f1a\u3002</p> <pre><code>def increasing(n, smallest=10):\n    \"\"\"Return the largest sequence of digits within n that is increasing.\n\n    &gt;&gt;&gt; increasing(87247861)\n    2478\n    &gt;&gt;&gt; increasing(367456751)\n    34567\n    \"\"\"\n    if n == 0:\n        return 0\n    elif n % 10 &lt; smallest:\n        # Maybe I'll use n % 10 in the result or maybe not\n    else:\n</code></pre> <p>\u5982\u679cn\u7684\u6700\u540e\u4e00\u4f4d\u4e0d\u5141\u8bb8\uff0c\u56e0\u4e3a\u5b83\u6bd4\u6211\u5df2\u7ecf\u51b3\u5b9a\u8981\u4f7f\u7528\u7684\u67d0\u4e2a\u4e1c\u897f\u8981\u5927\uff0c\u90a3\u4e48\u6211\u5c31\u4e0d\u80fd\u4f7f\u7528\u5b83\u3002\u6240\u4ee5\u8fd9\u610f\u5473\u7740\u6211\u80fd\u505a\u7684\u6700\u597d\u7684\u4e8b\u60c5\u662f\uff0c\u5728n\u9664\u4ee510\u7684\u8303\u56f4\u5185\u627e\u5230\u6700\u5927\u7684\u9012\u589e\u6570\u3002\u597d\u7684\uff0c\u73b0\u5728\u6211\u4eec\u5c06\u6709no\u548cyes\u7684\u6982\u5ff5\u3002no\u8868\u793a\u6211\u5ffd\u7565n\u9664\u4ee510\u7684\u4f59\u6570\u3002</p> <pre><code>def increasing(n, smallest=10):\n    \"\"\"Return the largest sequence of digits within n that is increasing.\n\n    &gt;&gt;&gt; increasing(87247861)\n    2478\n    &gt;&gt;&gt; increasing(367456751)\n    34567\n    \"\"\"\n    if n == 0:\n        return 0\n    elif n % 10 &lt; smallest:\n        # Maybe I'll use n % 10 in the result or maybe not\n        no = increasing(n // 10)\n        yes\n    else:\n        return increasing(n // 10)\n</code></pre> <p>\u8fd9\u4e0e\u90a3\u4e2a\u76f8\u540c\uff0c\u8fd9\u5c31\u662f\u4e3a\u4ec0\u4e48\u8fd9\u4e2a\u6709\u70b9\u5947\u602a\u7684\u7ed3\u6784\uff0c\u6211\u4eec\u7a0d\u540e\u4f1a\u8ba8\u8bba\u7684\u539f\u56e0\u3002\u5728\u67e5\u627e\u6700\u5c0f\u503c\u65f6\uff0c\u5ffd\u7565\u6700\u540e\u4e00\u4f4d\u6570\u5b57\u65f6\uff0c\u4ecd\u7136\u8981\u5c0a\u91cd\u6cbf\u9014\u5df2\u7ecf\u51b3\u5b9a\u8981\u4fdd\u7559\u7684\u4efb\u4f55\u6570\u5b57\u7684\u89c4\u5219\uff0c\u56e0\u6b64\u60a8\u5fc5\u987b\u4f20\u9012\u8fd9\u4e2a\u5df2\u7ecf\u51b3\u5b9a\u4f7f\u7528\u7684\u6700\u5c0f\u503c\u7684\u6982\u5ff5\u3002\u7136\u540e\uff0c\u5982\u679c\u51b3\u5b9a\u4f7f\u7528n % 10\uff0c\u8fd9\u5c0f\u4e8e\u6700\u5c0f\u503c\uff0c\u73b0\u5728\u4ecd\u7136\u53ef\u4ee5\u627e\u5230\u66f4\u591a\u7684\u6570\u5b57\uff0c\u4f46\u5b83\u4eec\u4e0d\u80fd\u4ec5\u4ec5\u5c0f\u4e8e\u4e4b\u524d\u5df2\u7ecf\u770b\u5230\u7684\u6700\u5c0f\u503c\uff0c\u73b0\u5728\u5b83\u4eec\u5fc5\u987b\u5c0f\u4e8en % 10\u3002\u4e8b\u5b9e\u8bc1\u660e\uff0c\u8fd9\u53ef\u4ee5\u7b80\u5316\uff0c\u56e0\u4e3a\u6211\u4eec\u77e5\u9053\u8fd9\u5c0f\u4e8e\u90a3\uff0c\u6240\u4ee5\u6211\u53ef\u4ee5\u7f29\u77ed\u8fd9\u4e2a\uff0c\u7136\u540e\u5f97\u5230\u76f8\u540c\u7684\u7ed3\u679c\u3002\u4f46\u6211\u4f1a\u4fdd\u7559\u5b83\uff0c\u53ea\u662f\u4e3a\u4e86\u5728\u4e00\u5206\u949f\u5185\u4e0e\u53e6\u4e00\u79cd\u60c5\u51b5\u8fdb\u884c\u6bd4\u8f83\u3002\u7136\u540e\u5728\u8fd9\u91cc\u6211\u4f1a\u8bf4\uff0c\u55ef\uff0c\u4e5f\u8bb8\u6211\u5df2\u7ecf\u627e\u5230\u4e86\u4e0d\u4f7f\u7528\u8fd9\u4e2a\u6570\u5b57\u7684\u6700\u597d\u7684\u7ed3\u679c\u3002</p> <pre><code>def increasing(n, smallest=10):\n    \"\"\"Return the largest sequence of digits within n that is increasing.\n\n    &gt;&gt;&gt; increasing(87247861)\n    2478\n    &gt;&gt;&gt; increasing(367456751)\n    34567\n    \"\"\"\n    if n == 0:\n        return 0\n    elif n % 10 &lt; smallest:\n        # Maybe I'll use n % 10 in the result or maybe not\n        no = increasing(n // 10, smallest)\n        yes = increasing(n // 10, min(n % 10, smallest)) * 10 + n % 10\n        return max(no, yes)\n    else:\n        return increasing(n // 10, smallest)\n</code></pre> <p>...\u6240\u4ee5\uff0c\u5982\u679c\u60a8\u80fd\u7406\u89e3\u8fd9\u4e00\u70b9\uff0c\u90a3\u4e48\u6700\u7ec8\u60a8\u5c31\u80fd\u7406\u89e3\u8fd9\u4e00\u70b9\uff0c\u4f46\u6211\u540c\u610fclose\u53ea\u662fincreasing\u7684\u4e00\u4e2a\u66f4\u590d\u6742\u7684\u7248\u672c\u3002\u6240\u4ee5\u6211\u5efa\u8bae\u5148\u7406\u89e3\u8fd9\u4e2a\uff0c\u8fd9\u91cc\u53d1\u751f\u4e86\u4ec0\u4e48\u3002\u8ba9\u6211\u4eec\u53ea\u770b\u770b\u673a\u5236\uff0c\u6211\u4eec\u8981\u4e48\u4f7f\u7528\u6570\u5b571\uff0c\u8981\u4e48\u4e0d\u4f7f\u7528\uff0c\u5728\u6211\u4eec\u4e0d\u4f7f\u7528\u7684\u9009\u62e9\u4e2d\uff0c\u6211\u4eec\u53ea\u662f\u5047\u88c5\u5b83\u4e0d\u5b58\u5728\uff0c\u7136\u540e\u6211\u4eec\u8981\u4e48\u4f7f\u75286\uff0c\u8981\u4e48\u4e0d\u4f7f\u7528\uff0c\u5728\u6211\u4eec\u4e0d\u4f7f\u7528\u7684\u9009\u62e9\u4e2d\uff0c\u6211\u4eec\u53ea\u662f\u5047\u88c5\u5b83\u4e0d\u5b58\u5728\uff0c\u7136\u540e\u6211\u4eec\u8981\u4e48\u4f7f\u75288\uff0c\u8981\u4e48\u4e0d\u4f7f\u7528\uff0c\u5728\u6211\u4eec\u4f7f\u7528\u7684\u9009\u62e9\u4e2d\uff0c\u6211\u4eec\u5fc5\u987b\u786e\u4fdd\u4ece\u8fd9\u91cc\u9009\u62e9\u7684\u5176\u4ed6\u6240\u6709\u4e1c\u897f\u90fd\u5c0f\u4e8e8\u3002\u6240\u4ee5\u6700\u540e\u6211\u4eec\u4f1a\u5f97\u52308\uff0c\u4f46\u662f\u6211\u4eec\u8fdb\u884c\u9012\u5f52\u8c03\u7528\uff0c\u4e5f\u5c31\u662f\u6211\u8981\u627e\u523087247\u4e2d\u6700\u957f\u7684\u9012\u589e\u5e8f\u5217\uff0c\u4f60\u77e5\u9053\u9664\u4e86\u6240\u6709\u7684\u6570\u5b57\u4e4b\u5916\uff0c\u90fd\u5fc5\u987b\u5c0f\u4e8e8\uff0c\u8fd9\u5c31\u662f\u6211\u5f97\u5230\u8fd9\u4e2a\u6570\u5b57\u7684\u65b9\u5f0f\u3002\u6240\u4ee5\u5982\u679c\u8fd9\u6709\u610f\u4e49\uff0c\u7136\u540e\u770b\u770b\u8fd9\u4e2a\u548c\u90a3\u4e2a\u4e4b\u95f4\u7684\u533a\u522b\uff0c\u8fd9\u548c\u90a3\u4e2a\u4e4b\u95f4\u7684\u533a\u522b\u662f\uff0c\u6211\u4eec\u53ea\u662f\u85cf\u8d77\u4e86\u6700\u8fd1\u7684\u6570\u5b57\uff0c\u7136\u540e\u6211\u4eec\u4f1a\u5728\u8fd9\u4e2a\u6700\u5c0f\u503c\u7684\u6982\u5ff5\u4e2d\u5305\u542b\u5b83\uff0c\u6bd4\u6211\u4eec\u672c\u6765\u60f3\u7684\u8981\u665a\u4e00\u6b65\u3002\u6240\u4ee5\u5728\u68c0\u67e51\u662f\u5426\u8db3\u591f\u5c0f\u65f6\uff0c\u60a8\u53ef\u4ee5\u5ffd\u75655\uff0c\u56e0\u4e3a\u8fd9\u53ea\u662f\u8fd9\u4e2a\u5de5\u4f5c\u89c4\u5219\u3002</p> <p>\u6240\u4ee5\uff0c\u5982\u679c\u62ff <code>increasing</code> \u7684\u4f8b\u5b50\u6765\u7406\u89e3\uff0c\u5c31\u662f\u5148\u5224\u65ad <code>n</code> \u7684\u4e2a\u4f4d\u662f\u5426\u6bd4 \u4e4b\u524d(\u4e4b\u524d\u5373\u5f53\u524d\u6570\u4f4d\u53f3\u8fb9\u7684\u6570\u4f4d\uff0c\u53ef\u4ee5\u901a\u8fc7\u9012\u5f52\u7684\u65b9\u5f0f\u6765\u7406\u89e3)\u6d4f\u89c8/\u5224\u65ad\u8fc7\u7684\u4f4d\u6570\u7684\u6700\u5c0f\u503c \u5c0f\uff0c\u5c0f\u5c31\u610f\u5473\u7740\u662f\u53ef\u4ee5\u6784\u6210\u9012\u589e\u5e8f\u5217/\u6ee1\u8db3\u9012\u589e\u6761\u4ef6\u7684\uff0c\u90a3\u4e48\u518d\u5206\u51fa\u662f\u5426\u4f7f\u7528\u8fd9\u4e2a\u4f4d\u6570\u7684\u4e24\u79cd\u60c5\u51b5\uff0c\u5982\u679c\u6253\u7b97\u4f7f\u7528\uff0c\u5c31\u5c06\u6700\u5c0f\u503c\u66f4\u65b0( <code>min(n % 10, smallest)</code> \uff0c\u4f46\u7531\u4e8e <code>elif</code> \u5df2\u7ecf\u5224\u65ad\u8fc7\u4e86\uff0c\u786e\u5b9e\u4e5f\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528 <code>n % 10</code> )\uff0c\u5982\u679c\u4e0d\u6253\u7b97\u4f7f\u7528\u5c31\u4e0d\u6539\u53d8\u6700\u5c0f\u503c\u3002\u800c\u5982\u679c\u4e0d\u6ee1\u8db3\u9012\u589e\u6761\u4ef6\uff0c\u5c31\u521a\u597d\u8ddf\u4e0d\u6253\u7b97\u4f7f\u7528\u7684\u60c5\u51b5\u4e00\u6837\u3002</p> <p>\u7406\u89e3\u4e86 <code>increasing</code> \u518d\u53bb\u7406\u89e3 <code>close</code> \u5c31\u4f1a\u597d\u7406\u89e3\u5f88\u591a\uff0c\u9664\u4e86 <code>d</code> \u51e0\u4e4e\u90fd\u4e00\u6837\uff0c\u800c <code>d</code> \u7684\u4f5c\u7528\u5c31\u662f\u4e3a\u4e86\u8ba9\u4f4d\u6570\u665a\u4f20\u4e00\u4f4d(\u6ee1\u8db3 near increasing \u7684\u8981\u6c42)</p>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part2/#3_11","title":"3","text":"<p>John \u63d0\u5230\u4e86\u4e00\u79cd\u4f7f\u7528 \u540c\u65f6\u8d4b\u503c Simultaneous Assignment \u7684\u7279\u6b8a\u60c5\u51b5\uff0c</p> <p>John \u8bf4\u5230\u5728\u4f7f\u7528\u540c\u65f6\u8d4b\u503c\u65f6\uff0c\u4f1a\u5148\u8ba1\u7b97\u7b49\u53f7\u53f3\u8fb9\u7684\u7ed3\u679c\uff0c\u518d\u6309\u987a\u5e8f\u8d4b\u503c\u7ed9\u5de6\u8fb9\u7684\uff0c\u6240\u4ee5\u5728\u8fd9\u4e00\u884c\u4ee3\u7801\u4e2d</p> <pre><code>L.rest, L = L.rest.rest, L.rest.rest\n</code></pre> <p>\u4f1a\u5148\u5c06 <code>L.rest</code> \u6307\u5411 <code>L.rest.rest</code> \uff0c\u7136\u540e\u518d\u5c06\u53d8\u91cf\u540d <code>L</code> \u6307\u5411 <code>L.rest.rest</code> \uff0c\u6240\u4ee5\u4f1a\u6709\u5982\u4e0b\u56fe\u7684\u6539\u53d8</p> \u524d\u540e <p></p> <p></p> <p>\u5148\u662f\u542b\u6709 <code>1</code> \u7684\u8282\u70b9\u7684 <code>rest</code> \u6307\u5411\u542b\u6709 <code>3</code> \u7684\u8282\u70b9(\u5373 <code>L.rest.rest</code> )\uff0c\u518d\u662f <code>L</code> \u6307\u5411\u542b\u6709 <code>3</code> \u7684\u8282\u70b9</p>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part2/#lab-09","title":"Lab 09","text":""},{"location":"Notes%20of%20Courses/CS61A/CS61A_part2/#1_17","title":"1","text":"<p>Q3\uff0c\u505a\u7684\u65f6\u5019\u60f3\u4e86\u597d\u4e00\u4f1a\uff0c\u505a\u5b8c\u4e4b\u540e\u6211\u611f\u89c9\u86ee\u6709\u610f\u601d\u7684\uff0c</p> <p>\u8fd9\u4e00\u9898\u548c\u4e0a\u4e00\u9898Q2\u5f88\u50cf\uff0c\u4f46\u662f\u9700\u8981\u5224\u65ad\u662f\u5426\u662f(\u975e\u4e25\u683c)\u5347\u5e8f\uff0c\u6240\u4ee5\u63d0\u4f9b\u7684\u6846\u67b6\u662f\u6784\u5efa\u4e00\u4e2a <code>subseq_helper</code> \u51fd\u6570\uff0c\u6765\u8bb0\u5f55\u524d\u4e00\u4e2a\u6570\u7684\u5927\u5c0f\uff0c</p> <ul> <li>\u5982\u679c\u5f53\u524d\u7684\u6570\u6bd4\u524d\u4e00\u4e2a\u6570\u5c0f\uff0c\u5c31\u53ef\u4ee5\u76f4\u63a5\u5ffd\u7565\u8fd9\u4e2a\u6570</li> <li>\u5982\u679c\u5927\u4e8e\u7b49\u4e8e\uff0c\u5c31\u9700\u8981\u5206\u60c5\u51b5\uff0c\u5f53\u524d\u8fd9\u4e2a\u6570\u662f\u5426\u88ab\u4f7f\u7528(\u611f\u89c9\u7b97\u662fQ2\u7684\u5347\u7ea7\u7248)</li> </ul> code <pre><code>def inc_subseqs(s):\n    def subseq_helper(s, prev):\n        if not s:\n            return [[]]\n        elif s[0] &lt; prev:\n            return subseq_helper(s[1:], prev)\n        else:\n            a = subseq_helper(s[1:], s[0])\n            b = subseq_helper(s[1:], prev)\n            return insert_into_all(s[0], a) + b\n    return subseq_helper(s, 0)\n</code></pre>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part2/#2_15","title":"2","text":"<p>Q4 \u8fd9\u9898\u4e5f\u6709\u70b9\u610f\u601d\uff0c\u6211\u60f3\u5230\u7684\u9012\u5f52\u7684\u601d\u8def\u5c31\u662f\uff0c\u628a\u5927\u7684\u6811\u5206\u6210\u4e24\u4e2a\u5c0f\u7684\uff0c</p> <p>\u7136\u540e\u4e00\u5f00\u59cb\u662f\u628a\u4e24\u4e2a\u5c0f\u7684\u52a0\u8d77\u6765\uff0c\u7136\u540e\u9519\u4e86\uff0c\u634b\u4e86\u4e00\u4e0b\uff0c\u53d1\u73b0\u5e94\u8be5\u662f\u628a\u4e24\u4e2a\u5c0f\u7684 \u7ed3\u679c/\u53ef\u80fd \u76f8\u4e58\uff0c\u6700\u540e\u5c31\u5bf9\u4e86</p> code <pre><code>def num_trees(n):\n    if n == 1:\n        return 1\n    return sum([num_trees(i) * num_trees(n - i) for i in range(1, n)])\n</code></pre>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part2/#3_12","title":"3","text":"<p>Q5\uff0c\u6709\u70b9\u96be\u60f3\u611f\u89c9(\u4f46\u662f\u505a\u5b8c\u4ee5\u540e\u611f\u89c9\u8fd9\u9898\u53c8\u4e0d\u662f\u5f88\u590d\u6742\ud83d\ude02)</p> <p>\u4e00\u5f00\u59cb <code>for</code> \u8bed\u53e5\u91cc <code>g</code> \u4e4b\u540e\u6ca1\u5199 <code>()</code> \uff0c\u7136\u540e\u5c31\u53d1\u751f\u4e86\u62a5\u9519\ud83d\ude05</p> <pre><code>Traceback (most recent call last):\n  File \"E:\\Courses\\cs61a\\lab\\lab09\\lab09.py\", line 121, in make_generators_generator\n    for _ in g:\nTypeError: 'function' object is not iterable\n</code></pre> <p>\u4e4b\u540e\u8fd9\u6837\u7c7b\u4f3c\u7684\u8981\u6ce8\u610f</p> code <pre><code>def make_generators_generator(g):\n    def gen(i):\n        for e in g():\n            if i == 0:\n                break\n            yield e\n            i -= 1\n    count = 0\n    for _ in g():\n        count += 1\n        yield gen(count)\n</code></pre>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part2/#4_7","title":"4","text":"<p>Q12\uff0c\u611f\u89c9\u8fd9\u9898\u86ee\u6709\u610f\u601d\uff0c\u5b9a\u4e49\u4e86\u67d0\u79cd\u6a21\u677f(\u53ef\u4ee5\u4ece doctest \u4e2d\u770b\u51fa\u6765)\uff0c\u611f\u89c9\u4e4b\u540e\u8bf4\u4e0d\u5b9a\u80fd\u53c2\u8003</p> <pre><code>def make_to_string(front, mid, back, empty_repr):\n    \"\"\" Returns a function that turns linked lists to strings.\n\n    &gt;&gt;&gt; kevins_to_string = make_to_string(\"[\", \"|-]--&gt;\", \"\", \"[]\")\n    &gt;&gt;&gt; jerrys_to_string = make_to_string(\"(\", \" . \", \")\", \"()\")\n    &gt;&gt;&gt; lst = Link(1, Link(2, Link(3, Link(4))))\n    &gt;&gt;&gt; kevins_to_string(lst)\n    '[1|-]--&gt;[2|-]--&gt;[3|-]--&gt;[4|-]--&gt;[]'\n    &gt;&gt;&gt; kevins_to_string(Link.empty)\n    '[]'\n    &gt;&gt;&gt; jerrys_to_string(lst)\n    '(1 . (2 . (3 . (4 . ()))))'\n    &gt;&gt;&gt; jerrys_to_string(Link.empty)\n    '()'\n    \"\"\"\n    def printer(lnk):\n        if ______________:\n            return _________________________\n        else:\n            return _________________________\n    return printer\n</code></pre> code <pre><code>def make_to_string(front, mid, back, empty_repr):\n    def printer(lnk):\n        if lnk is Link.empty:\n            return empty_repr\n        else:\n            return front + str(lnk.first) + mid + printer(lnk.rest) + back\n    return printer\n</code></pre>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part2/#5_5","title":"5","text":"<p>Q13\uff0c\u7ed9\u7684\u4ee3\u7801\u6846\u67b6\u611f\u89c9\u503c\u5f97\u5b66\u4e60\uff0c\u800c\u4e14\u4e00\u5f00\u59cb\u8fd8\u6ca1\u60f3\u660e\u767d\u8981\u600e\u4e48\u7f16\u5199\ud83d\ude02</p> <pre><code>def prune_small(t, n):\n    while ___________________________:\n        largest = max(_______________, key=____________________)\n        _________________________\n    for __ in _____________:\n        ___________________\n</code></pre> code <pre><code>def prune_small(t, n):\n    while len(t.branches) &gt; n:\n        largest = max([b for b in t.branches], key=lambda t: t.label)\n        t.branches.remove(largest)\n    for b in t.branches:\n        prune_small(b, n)\n</code></pre>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part2/#lecture-25-users","title":"Lecture 25 Users","text":""},{"location":"Notes%20of%20Courses/CS61A/CS61A_part2/#1_18","title":"1","text":"<p>Quote</p> <p>Alan Kay:</p> <p>...We realized that was an incredibly important principle for user interface design. Why spend two weeks trying to read an MS-DOS manual to see how to copy a file or open up an application? What do you get from it? Much better to find a way of designing the user interface so that the person who uses it acts like an intermediate from the first time they sit down, and then they get into a process that is rewarding in itself.</p> <p>Alan Kay:</p> <p>...\u6211\u4eec\u610f\u8bc6\u5230\u8fd9\u662f\u754c\u9762\u8bbe\u8ba1\u4e2d\u975e\u5e38\u91cd\u8981\u7684\u539f\u5219\u3002\u4e3a\u4ec0\u4e48\u8981\u82b1\u4e24\u5468\u7684\u65f6\u95f4\u9605\u8bfbMS-DOS\u624b\u518c\uff0c\u770b\u5982\u4f55\u590d\u5236\u6587\u4ef6\u6216\u6253\u5f00\u5e94\u7528\u7a0b\u5e8f\u5462\uff1f\u4ece\u4e2d\u5f97\u5230\u4e86\u4ec0\u4e48\uff1f\u66f4\u597d\u7684\u65b9\u6cd5\u662f\u8bbe\u8ba1\u7528\u6237\u754c\u9762\uff0c\u4f7f\u4f7f\u7528\u8005\u4ece\u7b2c\u4e00\u6b21\u5750\u4e0b\u6765\u5c31\u50cf\u4e00\u4e2a\u4e2d\u95f4\u4eba\uff0c\u7136\u540e\u4ed6\u4eec\u8fdb\u5165\u4e00\u4e2a\u672c\u8eab\u5c31\u662f\u6709\u76ca\u7684\u8fc7\u7a0b\u3002</p> <p>Alan Kay \u501f\u52a9\u4e00\u4e2a\u5b9e\u9a8c\uff0c</p> <p>\u8ba9\u4e00\u4e2a40\u591a\u5c81\u7684\u5927\u5988\uff0c\u901a\u8fc7\u7b80\u5355\u7684\u8bad\u7ec3\uff0c\u77ed\u65f6\u95f4\u5185\u4e0a\u624b\u7f51\u7403\u7684\u5b9e\u9a8c\uff0c</p> <p>\u5b9e\u9a8c\u8005\u901a\u8fc7\u6559\u4f1a\u8fd9\u4e2a\u5927\u5988\u7f51\u7403\u5bf9\u6253\u548c\u53d1\u7403\u7684\u4e00\u4e9b\u8bc0\u7a8d\uff0c\u800c\u4e0d\u662f\u7cfb\u7edf\u5b66\u4e60\uff0c\u6765\u8ba9\u5979\u5feb\u901f\u4e0a\u624b\u7f51\u7403</p> <p>\u63d0\u5230\u4e86\u7528\u6237\u754c\u9762\u8bbe\u8ba1\u7684\u4e00\u4e2a\u91cd\u8981\u7684\u7406\u5ff5\uff0c\u7528\u6237\u754c\u9762\u5e94\u8be5\u8981\u8bbe\u8ba1\u5f97\u80fd\u8ba9\u7528\u6237\u5feb\u901f\u5b66\u4f1a\u5e76\u4e0a\u624b(\u800c\u4e0d\u662f\u9700\u8981\u82b1\u5927\u91cf\u7684\u65f6\u95f4\u53bb\u67e5\u9605\u8bf4\u660e\u4e66\u6765\u5b66\u4e60)\uff0c\u4f7f\u7528\u6237\u611f\u89c9\u81ea\u5df1\u50cf\u4e00\u4e2a \u4e2d\u7b49\u6c34\u5e73\u7684\u5b66\u751f intermediate \uff0c\u4e8e\u662f\u4e4b\u540e\u7684\u5b66\u4e60\u5c31\u80fd\u5f97\u5230\u79ef\u6781\u7684\u53cd\u9988(\u6240\u4ee5\u5c31\u4f1a\u6709\u5174\u8da3\u53bb\u5b66\u4e60)</p>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part2/#lecture-25-qa","title":"Lecture 25 Q&amp;A","text":""},{"location":"Notes%20of%20Courses/CS61A/CS61A_part2/#1_19","title":"1","text":"<p>\u63d0\u5230\u768420\u6625(\u7b2c\u4e8c\u6b21\u671f\u4e2d\u8003\u8bd5)\u7684\u4e00\u9898</p> <p></p> <p>Quote</p> <pre><code>\"\"\"This question involves plucking the leaves off a tree one by one.\n\nDefinitions:\n\n1) A \"number tree\" is a Tree whose labels are _unique_ positive integers.\n   No repeated labels appear in a number tree.\n\n2) A \"plucking order\" for a number tree t is a sequence of unique positive\n   integers that are all labels of t.\n\n3) A plucking order is \"valid\" if both of these conditions are true:\n   (a) the plucking order contains all labels of t, and\n   (b) in the plucking order contains all labels of t, and\n       the labels of all its descendant nodes. Thus, leaves appear first.\n\nNote: redwood, pine, and cyprus are all kinds of trees.\n\"\"\"\n\n\"\"\"A: (3 pts) Implement order, which takes a number tree called rewood. It returns\na valid plucking order as a list of numbers. If there is more than one valid\nplucking order for redwood, your order function can return any one of them.\n\nIMPORTANT: You do not need to return EVERY valid plucking order; just one.\n\nCheck the doctests with: python3 ok -q a\n\"\"\"\ndef order(redwood):\n    \"\"\"Return a list containing a valid plucking order for the labels of t.\n\n    &gt;&gt;&gt; order(Tree(1, [Tree(2, [Tree(3, [Tree(4)])])]))               # The only valid plucking order.\n    [4, 3, 2, 1]\n    &gt;&gt;&gt; order(Tree(1, [Tree(2), Tree(3)])) in [[2, 3, 1], [3, 2, 1]]  # Therre are 2 valid orders.\n    True\n    &gt;&gt;&gt; o = order(Tree(1, [Tree(2, [Tree(3)]), Tree(4, [Tree(5)])]))  # There are many valid orders,\n    &gt;&gt;&gt; o.index(5) &lt; o.index(4)                                       # but all have 5 before 4,\n    True\n    &gt;&gt;&gt; o.index(3) &lt; o.index(2)                                       # and 3 before 2,\n    True\n    &gt;&gt;&gt; o[4:]                                                         # and 1 at the end.\n    [1]\n\n    &gt;&gt;&gt; order(Tree(7, [Tree(4, [Tree(6)]), Tree(5)])) in [[6, 5, 4, 7], [5, 6, 4, 7], [6, 4, 5, 7]]\n    True\n    \"\"\"\n    plucking_order = []\n    for b in ______:\n        ______\n    return plucking_order + [redwood.label]\n\n\n\"\"\"B: (5 pts) Implement pluck, which takes a number tree called pine and returns\na function that is called repeatedly on the elements of a plucking order. If that\nplucking order is valid, the final call returns 'success!'. Otherwise, if one of\nthe repeated calls is on a number that is not part of a valid plucking order, the\nerror string 'Hey, not valid!' is returned.\n\nSince pine is a number tree and the values passed to plucker form a plucking\norder, you can assume that:\n- The labels of pine are unique,\n- All values k passed to the plucker function are unique for a given pine, and\n- All values k are labels of pine.\n\nCheck the doctests with: python3 ok -q b\n\"\"\"\ndef pluck(pine):\n    \"\"\"Return a function that returns whether a plucking order is valid\n    for a number tree t when called repeatedly on elements of a plucking order.\n\n    Calling the function returned by pluck should not mutate pine.\n\n           +---+\n           | 1 |\n           +---+\n           /   \\----          /                 +---+         +---+\n       | 2 |         | 6 |\n       +---+         +---+\n         |            /          |           /          +---+      +---+ +---+\n       | 3 |      | 7 | | 8 |\n       +---+      +---+ +---+\n        / \\               |\n       /   \\              |\n    +---+ +---+         +---+\n    | 4 | | 5 |         | 9 |\n    +---+ +---+         +---+\n\n    &gt;&gt;&gt; b0 = Tree(2, [Tree(3, [Tree(4), Tree(5)])])\n    &gt;&gt;&gt; b1 = Tree(6, [Tree(7), Tree(8, [Tree(9)])])\n    &gt;&gt;&gt; t = Tree(1, [b0, b1])\n    &gt;&gt;&gt; pluck(t)(9)(8)(7)(6)(5)(4)(3)(2)(1)\n    'success!'\n    &gt;&gt;&gt; pluck(t)(5)(9)(4)(7)(3)(8)(6)(2)(1)\n    'success!'\n    &gt;&gt;&gt; pluck(t)(2)\n    'Hey, not valid!'\n    &gt;&gt;&gt; pluck(t)(5)(9)(7)(6)\n    'Hey, not valid!'\n\n    &gt;&gt;&gt; pluck(b0)(5)(2)\n    'Hey, not valid!'\n    &gt;&gt;&gt; pluck(b0)(4)(5)(3)(2)\n    'success!'\n    \"\"\"\n    def plucker(k):\n        def pluck_one_leaf(cyprus):\n            \"\"\"Return a copy of cyprus without leaf k and check that k is a\n            leaf label, not an interior node label.\n            \"\"\"\n            if ______:\n                ______\n            plucked_branches = []\n            for b in cyprus.branches:\n                skip_this_leaf = ______ and ______\n                if not skip_this_leaf:\n                    plucked_branch_or_error = pluck_one_leaf(b)\n                    if isinstance(plucked_branch_or_error, str):\n                        return plucked_branch_or_error\n                    else:\n                        ______\n            return Tree(______, plucked_branches)\n        nonlocal pine\n        if pine.is_leaf():\n            assert k == pine.label, 'all k must appear in pine'\n            return 'success!'\n        ______\n        if isinstance(pine, str):\n            return pine\n        return plucker\n    return plucker\n</code></pre> <p>\u9700\u8981\u7528\u5230\u7684 \u6811 Tree \u7c7b</p> <pre><code>class Tree:\n    def __init__(self, label, branches=[]):\n        self.label = label\n        for branch in branches:\n            assert isinstance(branch, Tree)\n        self.branches = list(branches)\n        \n    def is_leaf(self):\n        return not self.branches\n</code></pre> <p>\u4e8e\u662f\u5c1d\u8bd5\u5199\u4e86\u4e00\u4e0b\uff0c</p> <p>a\u9898\u5341\u5206\u5730\u7b80\u5355</p> <pre><code>def order(redwood):\n        plucking_order = []\n    for b in redwood.branches:\n        plucking_order += order(b)\n    return plucking_order + [redwood.label]\n</code></pre> <p>b\u9898\u6709\u70b9\u96be\u5ea6\uff0c\u4f46\u662f\u7167\u7740\u6846\u67b6\u53bb\u5206\u6790\u601d\u8003\uff0c\u6700\u7ec8\u4e5f\u4e0d\u96be\u505a\u51fa\u6765</p> <pre><code>def pluck(pine):\n    def plucker(k):\n        def pluck_one_leaf(cyprus):\n            \"\"\"Return a copy of cyprus without leaf k and check that k is a\n            leaf label, not an interior node label.\n            \"\"\"\n            if k == cyprus.label and not cyprus.is_leaf():\n                return \"Hey, not valid!\"\n            plucked_branches = []\n            for b in cyprus.branches:\n                skip_this_leaf = b.is_leaf() and b.label == k\n                if not skip_this_leaf:\n                    plucked_branch_or_error = pluck_one_leaf(b)\n                    if isinstance(plucked_branch_or_error, str):\n                        return plucked_branch_or_error\n                    else:\n                        plucked_branches += [plucked_branch_or_error]\n            return Tree(cyprus.label, plucked_branches)\n        nonlocal pine\n        if pine.is_leaf():\n            assert k == pine.label, 'all k must appear in pine'\n            return 'success!'\n        pine = pluck_one_leaf(pine)\n        if isinstance(pine, str):\n            return pine\n        return plucker\n    return plucker\n</code></pre>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part2/#2_16","title":"2","text":"<p>\u63d0\u5230\u4e8618\u79cb\u7b2c\u4e8c\u6b21\u671f\u4e2d\u8003\u8bd5\u7684\u4e00\u9898</p> <p></p> <p>Quote</p> <p>Trictionary or Treat</p> <p>Definition. A trictionary is a pair of <code>Tree</code> instances <code>k</code> and <code>v</code> that have identical structure: each node in <code>k</code> has a corresponding node in <code>v</code> . The labels in <code>k</code> are called keys. Each key may be the label for multiple nodes in <code>k</code> , and the values for that key are the labels of all the corresponding nodes in <code>v</code> .</p> <p>A lookup function returns one of the values for a key. Specifically, a lookup function for a node in <code>k</code> is a function that takes <code>v</code> as an argument and returns the label for the corresponding node in <code>v</code> .</p> <p>Implement the generator function <code>lookups</code> , which takes a <code>Tree</code> instance <code>k</code> and some <code>key</code> . It yields all lookup functions for nodes in <code>k</code> that have <code>key</code> as their label. The <code>new_lookup</code> function is part of the implementation.</p> <ul> <li> <p><code>k</code> :</p> <pre><code>        5\n      / | \\\n    7   8   5\n  /   / |  / \\\n2    3  4  4  2 \n</code></pre> </li> <li> <p><code>v</code> :</p> <pre><code>        'Go'\n       / | \\\n    'C' 'A' 'L'\n   /   / |  / \\\n'C'  'S' 6  1 'A' \n</code></pre> </li> </ul> key values 2 'C', 'A' 3 'S' 4 6, 1 5 'Go', 'L' 7 'C' 8 'A' <pre><code>k = Tree(5, [Tree(7, [Tree(2)]), Tree(8, [Tree(3), Tree(4)]), Tree(5, [Tree(4), Tree(2)])])\nv = Tree('Go', [Tree('C', [Tree('C')]), Tree('A', [Tree('S'), Tree(6)]), Tree('L', [Tree(1), Tree('A')])])\n\ndef lookups(k, key):\n    \"\"\"Yield one lookup function for each node of k that has the label key.\n\n    &gt;&gt;&gt; [f(v) for f in lookups(k, 2)]\n    ['c', 'A']\n    &gt;&gt;&gt; [f(v) for f in lookups(k, 3)]\n    ['S']\n    &gt;&gt;&gt; [f(v) for f in lookups(k, 6)]\n    []\n    \"\"\"\n    if ______:\n        yield lambda v: ______\n    for i in range(len(k.branches)):\n        ______:\n            yield new_lookup(i, lookup)\n\ndef new_lookup(i, f):\n    def g(v):\n        return ______\n    return g\n</code></pre> <p>\u8fd9\u9898\u6709\u70b9\u96be\u5ea6\uff0c\u9996\u5148\u4f7f\u7406\u89e3\u9898\u76ee\u7684\u610f\u601d\uff0c<code>lookups</code> \u662f\u9700\u8981\u751f\u6210\u80fd\u8fd4\u56de\u5728(\u8f93\u5165\u7684) \u6811 <code>v</code> \u4e2d\u5bf9\u5e94\u4f4d\u7f6e\u7684\u503c\u7684\u51fd\u6570\u3002</p> <p>\u9898\u76ee\u7ed9\u7684\u6846\u67b6\u4e5f\u4e0d\u662f\u5f88\u5bb9\u6613\u770b\u61c2\uff0c\u6211\u5148\u662f\u770b\u5230 <code>yield new_lookup(i, lookup)</code> \u8fd9\u884c(\u770b\u5230 <code>lookup</code> )\uff0c\u6240\u4ee5\u731c\u4e0a\u9762\u4e00\u884c\u662f</p> <pre><code>for lookup in lookups(k.branches[i], key):\n</code></pre> <p>\u8fd9\u4e00\u884c\u5e94\u8be5\u662f\u7528\u6765\u9012\u5f52\uff0c\u6240\u4ee5\u8fdb\u800c\u5c31\u5f88\u5bb9\u6613\u60f3\u5230\u4e0a\u9762\u7684 <code>if</code> \u8bed\u53e5\u662f base case \u5373\u8d70\u5230\u4e86\u53f6\u5b50\u8282\u70b9\uff0c\u4e8e\u662f\uff0c\u5728\u6700\u7b80\u5355\u7684\u60c5\u51b5\u4e0b\uff0c\u5c31\u76f4\u63a5\u5224\u65ad \u6811 <code>k</code> \u7684\u503c\u548c <code>key</code> \u662f\u5426\u76f8\u7b49\u5c31\u884c\u4e86\uff0c\u6240\u4ee5</p> <pre><code>if k.is_leaf() and k.label == key:\n    return lambda v: v.label\n</code></pre> <p>\u6700\u540e\u662f <code>new_lookup</code> \u7684\u90e8\u5206(\u60f3\u4e86\u4e00\u4f1a\u624d\u60f3\u51fa\u6765)\uff0c\u770b\u5230 <code>i</code> \u6240\u4ee5\u60f3\u5230 <code>i</code> \u662f\u7528\u6765\u4f20\u9012\u8def\u5f84\u76f8\u5173\u7684\u4fe1\u606f\u7684(\u91cd\u70b9\u662f\u9700\u8981\u7406\u89e3\u4f20\u5165\u7684 <code>lookup</code> \uff0c\u662f\u5b50\u6811\u7684\u67e5\u627e\u51fd\u6570\uff0c\u6240\u4ee5 <code>new_lookup</code> \u4e2d\u9700\u8981\u7684\u4e5f\u662f\u4f20\u5165\u5bf9\u5e94 <code>v</code> \u7684\u5b50\u6811)\uff0c\u56e0\u6b64</p> <pre><code>return f(v.branches[i])\n</code></pre> <p>\u5b8c\u6574\u4ee3\u7801</p> <pre><code>def lookups(k, key):\n    if k.is_leaf() and k.label == key:\n        yield lambda v: v.label\n    for i in range(len(k.branches)):\n        for lookup in lookups(k.branches[i], key):\n            yield new_lookup(i, lookup)\n        \ndef new_lookup(i, f):\n    def g(v):\n        return f(v.branches[i])\n    return g\n</code></pre> <p>\u770b\u4e86John\u7684\u8bb2\u89e3\uff0c\u53d1\u73b0 <code>if</code> \u90a3\u4e00\u884c\u6b63\u786e\u7b54\u6848\u5e94\u8be5\u6ca1\u6709 <code>k.is_leaf()</code> \uff0c\u4e0a\u9762\u7684\u4ee3\u7801\u80fd\u901a\u8fc7\u53ea\u662f\u56e0\u4e3a\u521a\u597d\u6d4b\u8bd5\u7684\u503c\u90fd\u5728\u53f6\u5b50\u8282\u70b9\uff0c\u6240\u4ee5\u6b63\u786e\u7684\u4ee3\u7801\u5e94\u8be5\u662f</p> <pre><code>def lookups(k, key):\n    if k.label == key:\n        yield lambda v: v.label\n    for i in range(len(k.branches)):\n        for lookup in lookups(k.branches[i], key):\n            yield new_lookup(i, lookup)\n\ndef new_lookup(i, f):\n    def g(v):\n        return f(v.branches[i])\n    return g\n</code></pre> <p></p>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part2/#lecture-26-ethical-ai-data","title":"Lecture 26 Ethical AI &amp; Data","text":""},{"location":"Notes%20of%20Courses/CS61A/CS61A_part2/#1_20","title":"1","text":"<p>Hany \u5728\u4ecb\u7ecd \u76d1\u7763\u5b66\u4e60 supervised learning \u65f6\uff0c\u63d0\u5230\u4e86\u7ebf\u6027\u5904\u7406\u4e8c\u7ef4\u6570\u636e\u4e00\u79cd\u65b9\u6cd5\uff0c\u901a\u8fc7\u627e\u5230\u4e00\u4e2a\u6295\u5f71\u9762(\u7ebf)\uff0c\u4f7f\u5f97\u5728\u6295\u5f71\u9762\u4e0a\uff0c\u540c\u7c7b\u4e4b\u95f4\u8ddd\u79bb\u5c3d\u53ef\u80fd\u5c0f\uff0c\u800c\u5f02\u7c7b\u4e4b\u95f4\u7684\u8ddd\u79bb\u5c3d\u53ef\u80fd\u5927\uff0c\u4e8e\u662f\u901a\u8fc7\u5176\u6cd5\u7ebf\u5c31\u53ef\u4ee5\u83b7\u5f97\u5206\u5272\u7ebf</p>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part2/#2_17","title":"2","text":"<p>Hany\u5728\u8fd9\u8282\u8bfe\u7684\u6700\u540e\u5173\u4e8eAI\u7684\u4f7f\u7528\u7684\u770b\u6cd5\uff0c\u6211\u8ba4\u4e3a\u8bf4\u7684\u5f88\u597d</p> <p>Quote</p> <p>Hany:</p> <p>...We just seem to be stuck at around 65% (accuracy).</p> <p>Okay, I posit I cannot prove, but I posit: I think that this is a fundamentally hard problem, and I am unconvinced that you can actually do better than this. Because think about what you're asking the algorithm to do. You're asking it to predict the future from a relatively small amount of data, and the future, two years in advance, of a fairly complex set of social, economic, personal, and just what is random dumb luck going to happen in somebody's life. And I don't think that's a stretch of imagination to say that this is really hard.</p> <p>So here's a question for you: should we even be doing this? Should we actually be trying to predict whether somebody's going to commit a crime in the future and then incarcerate them if we think that they are, if the accuracy is 65%? What if the accuracy is 75%? What if it's 85%? What if it's you? What if it's somebody you love? Do you want this algorithm being applied to somebody with this kind of error rate? What's an acceptable error rate? Are these things really better than humans? How do you deal with the bias? Nobody has good answers to these things.</p> <p>So here's a question. Now I come back to the title. right? Just because you can do something doesn't mean you should. And as you enter into what is undoubtedly an incredibly exciting time for us in terms of computation and AI and data, and the impact that we can have on the world, we have to start thinking about what are the negative aspects of what we are doing. Should we be trying to make these decisions? And if we do, the answer may be yes, but then are they accurate? Are they fair? Do they disproportionately affect women, people of color, LGBTQ community, people who are not born in this country, people who aren't native speakers, whatever it is? We have to think about the consequences of that.</p> <p>We have spent the last 20 years with the mantra of \"move fast and break things,\" and while lots of good things have come from that, some really bad things have come from this. Bias in algorithms for hiring, bias in algorithms in healthcare, bias in algorithms in the financial sectors, bias in algorithms in the criminal justice system, bias in facial recognition. We've got to tread lightly here. And what that means is you can't come at this after the fact. You can't develop, deploy, and then debug on the fly. This isn't a word processing software. If you have a bug, somebody loses a document. This is the real world where you make a mistake and somebody sits in jail, or somebody doesn't get a home loan, or somebody doesn't get a small business loan, or somebody doesn't get a job or go to the university. We are impacting real people's lives with our algorithms and our data, and if we don't understand these things, we have the potential to do way more harm than we do good.</p> <p>And so the free-for-all of the last two decades, in my opinion, should be over. And I want to emphasize that I am not anti-technology. I'm not saying don't do things. I'm not saying don't innovate. But I'm saying think, think carefully about the consequences of what you are doing and make sure that there is transparency, there is fairness, and there is accuracy in how these technologies are being used. And more generally, making sure that you understand how your technologies can be misused as well because almost all technologies have benefits and drawbacks, and we have to start thinking about those things up front and simply try to mitigate the harm while harnessing the phenomenal power of technology and AI and data.</p> <p>All right, I'm done. I hope you enjoyed this and I hope you learned something from it. We'll see you soon.</p> <p>Hany:</p> <p>...\u6211\u4eec\u4f3c\u4e4e\u5361\u5728\u4e8665%\u5de6\u53f3\uff08\u51c6\u786e\u7387\uff09\u3002</p> <p>\u597d\u7684\uff0c\u6211\u5047\u8bbe\u6211\u4e0d\u80fd\u8bc1\u660e\uff0c\u4f46\u6211\u5047\u8bbe\uff1a\u6211\u8ba4\u4e3a\u8fd9\u662f\u4e00\u4e2a\u57fa\u672c\u4e0a\u7684\u96be\u9898\uff0c\u6211\u4e0d\u76f8\u4fe1\u4f60\u80fd\u505a\u5f97\u6bd4\u8fd9\u66f4\u597d\u3002\u56e0\u4e3a\u60f3\u60f3\u4f60\u8981\u7b97\u6cd5\u505a\u4ec0\u4e48\u3002\u4f60\u8ba9\u5b83\u4ece\u76f8\u5bf9\u8f83\u5c11\u7684\u6570\u636e\u4e2d\u9884\u6d4b\u672a\u6765\uff0c\u672a\u6765\u662f\u4e24\u5e74\u540e\uff0c\u6d89\u53ca\u5230\u4e00\u7ec4\u76f8\u5f53\u590d\u6742\u7684\u793e\u4f1a\u3001\u7ecf\u6d4e\u3001\u4e2a\u4eba\u56e0\u7d20\uff0c\u8fd8\u6709\u5728\u67d0\u4eba\u751f\u6d3b\u4e2d\u4f1a\u53d1\u751f\u7684\u968f\u673a\u8fd0\u6c14\u3002\u6211\u8ba4\u4e3a\u8fd9\u5e76\u4e0d\u662f\u4e00\u79cd\u5938\u5f20\uff0c\u8bf4\u8fd9\u771f\u7684\u5f88\u96be\u3002</p> <p>\u90a3\u4e48\u8fd9\u91cc\u6709\u4e00\u4e2a\u95ee\u9898\u7ed9\u4f60\uff1a\u6211\u4eec\u751a\u81f3\u5e94\u8be5\u8fd9\u6837\u505a\u5417\uff1f\u6211\u4eec\u771f\u7684\u5e94\u8be5\u5c1d\u8bd5\u9884\u6d4b\u67d0\u4eba\u5c06\u6765\u662f\u5426\u4f1a\u72af\u7f6a\uff0c\u7136\u540e\u5982\u679c\u6211\u4eec\u8ba4\u4e3a\u4ed6\u4eec\u4f1a\u72af\u7f6a\u5c31\u76d1\u7981\u4ed6\u4eec\uff0c\u5373\u4f7f\u51c6\u786e\u7387\u662f65%\u5417\uff1f\u5982\u679c\u51c6\u786e\u7387\u662f75%\u600e\u4e48\u529e\uff1f\u5982\u679c\u662f85%\u5462\uff1f\u5982\u679c\u662f\u4f60\u5462\uff1f\u5982\u679c\u662f\u4f60\u7231\u7684\u4eba\u5462\uff1f\u4f60\u5e0c\u671b\u8fd9\u79cd\u7b97\u6cd5\u5e94\u7528\u4e8e\u6709\u8fd9\u79cd\u9519\u8bef\u7387\u7684\u4eba\u5417\uff1f\u4ec0\u4e48\u662f\u53ef\u4ee5\u63a5\u53d7\u7684\u9519\u8bef\u7387\uff1f\u8fd9\u4e9b\u4e1c\u897f\u771f\u7684\u6bd4\u4eba\u7c7b\u66f4\u597d\u5417\uff1f\u5982\u4f55\u5904\u7406\u504f\u89c1\uff1f\u6ca1\u6709\u4eba\u5bf9\u8fd9\u4e9b\u95ee\u9898\u6709\u597d\u7684\u7b54\u6848\u3002</p> <p>\u6240\u4ee5\u8fd9\u91cc\u6709\u4e00\u4e2a\u95ee\u9898\u3002\u73b0\u5728\u6211\u56de\u5230\u6807\u9898\uff0c\u5bf9\u5427\uff1f\u4ec5\u4ec5\u56e0\u4e3a\u4f60\u80fd\u505a\u67d0\u4e8b\u5e76\u4e0d\u610f\u5473\u7740\u4f60\u5e94\u8be5\u8fd9\u6837\u505a\u3002\u5f53\u4f60\u8fdb\u5165\u8ba1\u7b97\u3001\u4eba\u5de5\u667a\u80fd\u548c\u6570\u636e\u65b9\u9762\u65e0\u7591\u662f\u4e00\u4e2a\u975e\u5e38\u6fc0\u52a8\u4eba\u5fc3\u7684\u65f6\u523b\uff0c\u4ee5\u53ca\u6211\u4eec\u53ef\u4ee5\u5bf9\u4e16\u754c\u4ea7\u751f\u7684\u5f71\u54cd\u65f6\uff0c\u6211\u4eec\u5fc5\u987b\u5f00\u59cb\u601d\u8003\u6211\u4eec\u6b63\u5728\u505a\u7684\u4e8b\u60c5\u7684\u8d1f\u9762\u65b9\u9762\u3002\u6211\u4eec\u5e94\u8be5\u5c1d\u8bd5\u505a\u8fd9\u4e9b\u51b3\u5b9a\u5417\uff1f\u5982\u679c\u662f\uff0c\u7b54\u6848\u53ef\u80fd\u662f\u80af\u5b9a\u7684\uff0c\u4f46\u5b83\u4eec\u662f\u5426\u51c6\u786e\uff1f\u662f\u5426\u516c\u5e73\uff1f\u5b83\u4eec\u662f\u5426\u5bf9\u5973\u6027\u3001\u6709\u8272\u4eba\u79cd\u3001LGBTQ\u793e\u533a\u3001\u4e0d\u5728\u8fd9\u4e2a\u56fd\u5bb6\u51fa\u751f\u7684\u4eba\u3001\u4e0d\u662f\u672c\u571f\u8bf4\u8bdd\u8005\u7684\u4eba\u7b49\u4ea7\u751f\u4e0d\u6210\u6bd4\u4f8b\u7684\u5f71\u54cd\uff1f\u6211\u4eec\u5fc5\u987b\u8003\u8651\u8fd9\u4e9b\u540e\u679c\u3002</p> <p>\u5728\u8fc7\u53bb\u768420\u5e74\u91cc\uff0c\u6211\u4eec\u4e00\u76f4\u5949\u884c\u201c\u8fc5\u901f\u884c\u52a8\u5e76\u6253\u7834\u4e00\u5207\u201d\u7684\u53e3\u53f7\uff0c\u867d\u7136\u4ece\u4e2d\u83b7\u5f97\u4e86\u5f88\u591a\u597d\u5904\uff0c\u4f46\u4e5f\u4ece\u4e2d\u4ea7\u751f\u4e86\u4e00\u4e9b\u975e\u5e38\u7cdf\u7cd5\u7684\u4e8b\u60c5\u3002\u5728\u62db\u8058\u7b97\u6cd5\u4e2d\u5b58\u5728\u7684\u504f\u89c1\uff0c\u5728\u533b\u7597\u4fdd\u5065\u9886\u57df\u7684\u7b97\u6cd5\u4e2d\u5b58\u5728\u7684\u504f\u89c1\uff0c\u5728\u91d1\u878d\u9886\u57df\u7684\u7b97\u6cd5\u4e2d\u5b58\u5728\u7684\u504f\u89c1\uff0c\u5728\u5211\u4e8b\u53f8\u6cd5\u7cfb\u7edf\u7684\u7b97\u6cd5\u4e2d\u5b58\u5728\u7684\u504f\u89c1\uff0c\u5728\u9762\u90e8\u8bc6\u522b\u4e2d\u5b58\u5728\u7684\u504f\u89c1\u3002\u6211\u4eec\u5fc5\u987b\u5c0f\u5fc3\u884c\u4e8b\u3002\u8fd9\u610f\u5473\u7740\u4f60\u4e0d\u80fd\u5728\u4e8b\u540e\u5c31\u8fd9\u4e48\u505a\u3002\u4f60\u4e0d\u80fd\u5f00\u53d1\u3001\u90e8\u7f72\uff0c\u7136\u540e\u5728\u98de\u884c\u4e2d\u8c03\u8bd5\u3002\u8fd9\u4e0d\u662f\u6587\u5b57\u5904\u7406\u8f6f\u4ef6\u3002\u5982\u679c\u6709\u4e00\u4e2a\u9519\u8bef\uff0c\u67d0\u4eba\u5c31\u4f1a\u4e22\u5931\u4e00\u4efd\u6587\u4ef6\u3002\u8fd9\u662f\u771f\u5b9e\u7684\u4e16\u754c\uff0c\u4f60\u72af\u4e86\u4e00\u4e2a\u9519\u8bef\uff0c\u6709\u4eba\u5750\u5728\u76d1\u72f1\u91cc\uff0c\u6216\u8005\u6709\u4eba\u6ca1\u6709\u83b7\u5f97\u623f\u5c4b\u8d37\u6b3e\uff0c\u6216\u8005\u6709\u4eba\u6ca1\u6709\u83b7\u5f97\u5c0f\u989d\u8d37\u6b3e\uff0c\u6216\u8005\u6709\u4eba\u6ca1\u6709\u5f97\u5230\u5de5\u4f5c\u6216\u4e0a\u5927\u5b66\u3002\u6211\u4eec\u6b63\u5728\u5f71\u54cd\u771f\u5b9e\u4eba\u4eec\u7684\u751f\u6d3b\uff0c\u7528\u6211\u4eec\u7684\u7b97\u6cd5\u548c\u6570\u636e\uff0c\u5982\u679c\u6211\u4eec\u4e0d\u7406\u89e3\u8fd9\u4e9b\u4e8b\u60c5\uff0c\u6211\u4eec\u53ef\u80fd\u4f1a\u9020\u6210\u6bd4\u505a\u597d\u4e8b\u66f4\u591a\u7684\u4f24\u5bb3\u3002</p> <p>\u56e0\u6b64\uff0c\u5728\u6211\u770b\u6765\uff0c\u8fc7\u53bb20\u5e74\u7684\u653e\u4efb\u6001\u5ea6\u5e94\u8be5\u7ed3\u675f\u4e86\u3002\u6211\u60f3\u5f3a\u8c03\u7684\u662f\uff0c\u6211\u5e76\u4e0d\u662f\u53cd\u5bf9\u6280\u672f\u3002\u6211\u5e76\u4e0d\u662f\u8bf4\u4e0d\u8981\u505a\u4e8b\u60c5\u3002\u6211\u5e76\u4e0d\u662f\u8bf4\u4e0d\u8981\u521b\u65b0\u3002\u4f46\u6211\u8bf4\u7684\u662f\u8981\u8003\u8651\uff0c\u8981\u4ed4\u7ec6\u8003\u8651\u4f60\u6b63\u5728\u505a\u7684\u4e8b\u60c5\u7684\u540e\u679c\uff0c\u5e76\u786e\u4fdd\u5728\u4f7f\u7528\u8fd9\u4e9b\u6280\u672f\u7684\u65b9\u5f0f\u4e0a\u6709\u900f\u660e\u5ea6\u3001\u516c\u5e73\u6027\u548c\u51c6\u786e\u6027\u3002\u66f4\u4e00\u822c\u5730\u8bf4\uff0c\u786e\u4fdd\u4f60\u4e86\u89e3\u4f60\u7684\u6280\u672f\u5982\u4f55\u88ab\u6ee5\u7528\uff0c\u56e0\u4e3a\u51e0\u4e4e\u6240\u6709\u6280\u672f\u90fd\u6709\u5229\u5f0a\uff0c\u6211\u4eec\u5fc5\u987b\u5f00\u59cb\u4ece\u4e00\u5f00\u59cb\u5c31\u8003\u8651\u8fd9\u4e9b\u4e8b\u60c5\uff0c\u5c3d\u529b\u51cf\u8f7b\u4f24\u5bb3\uff0c\u540c\u65f6\u5229\u7528\u6280\u672f\u548c\u4eba\u5de5\u667a\u80fd\u548c\u6570\u636e\u7684\u5de8\u5927\u529b\u91cf\u3002</p> <p>\u597d\u4e86\uff0c\u6211\u8bf4\u5b8c\u4e86\u3002\u5e0c\u671b\u4f60\u559c\u6b22\u8fd9\u4e2a\uff0c\u5e0c\u671b\u4f60\u4ece\u4e2d\u5b66\u5230\u4e86\u4e00\u4e9b\u4e1c\u897f\u3002\u6211\u4eec\u5f88\u5feb\u5c31\u4f1a\u89c1\u9762\u3002</p>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part2/#lecture-27-scheme","title":"Lecture 27 Scheme","text":""},{"location":"Notes%20of%20Courses/CS61A/CS61A_part2/#1_21","title":"1","text":"<p>\u611f\u89c9 scheme \u8fd9\u4e2a\u8868\u8fbe\u5f0f\u6709\u70b9\u50cf\u9006\u6ce2\u5170\u5f0f\ud83d\ude02</p> <p></p> <p>scheme \u8bed\u8a00\u91cc\u7684\u4e00\u4e9b\u7528\u6cd5(\u770bJohn\u7684demo\u5e94\u8be5\u5c31\u53ef\u4ee5\u770b\u61c2\u4e86)</p> <p></p> <p>scheme \u4e2d\u7684\u4e00\u4e9b\u8bed\u53e5</p> <p>John \u8bf4\u5230 scheme \u4f7f\u7528\u7684 \u73af\u5883\u6a21\u578b model of environments \u548c python \u7684\u4e00\u6837</p>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part2/#2_18","title":"2","text":"<p>John \u6f14\u793ascheme\u4e2d\u7684\u5d4c\u5957\u51fd\u6570\u65f6\uff0c\u6784\u9020\u4e86\u4e00\u4e2a\u6c42\u5e73\u65b9\u6839\u7684\u9012\u5f52\u51fd\u6570\uff0c</p> <pre><code>(define (sqrt x)\n  (define (update guess)\n    (if (= (square guess) x)\n        guess\n        (update (average guess (/ x guess)))))\n  (update 1))\n</code></pre> <p>\u7ffb\u8bd1\u6210 python \u5e94\u8be5\u5927\u81f4\u662f\u8fd9\u6837</p> <pre><code>def sqrt(x):\n def update(guess):\n     if guess ^ 2 == x:\n         return guess\n     else:\n         return update((x // guess + guess) // 2)\n return update(1)\n</code></pre> <p>\u5e76\u4e14\u5176\u4e2d\u4f7f\u7528\u4e86 $$ guess = \\frac{x}{guess} + guess $$ \u7684\u8fed\u4ee3\u65b9\u6cd5\uff0c\u611f\u89c9\u5f88\u5389\u5bb3</p> <p>\u8be2\u95ee\u4e86\u540c\u5b66\u4e4b\u540e\uff0c\u53d1\u73b0\u8fd9\u5c31\u662f(\u4ee5\u524d\u5b66\u8fc7\u7684)\u5bf9\u52fe\u51fd\u6570\uff0c\u6700\u540e\u6536\u655b\u4e8e \\(\\sqrt{x}\\) \ud83d\ude02</p>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part2/#3_13","title":"3","text":"<p>scheme\u4e2d\u7684 lambda \u533f\u540d\u51fd\u6570(\u7c7b\u6bd4 python \u4e2d\u7684\u5f88\u597d\u7406\u89e3)</p>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part2/#4_8","title":"4","text":"<p>John \u6f14\u793a\u7528 scheme \u753b \u8c22\u5c14\u5bbe\u65af\u57fa\u4e09\u89d2\u5f62 Sierpinski's Triangle \uff0c</p> <p>\u7528\u9012\u5f52\u7684\u65b9\u5f0f\u753b\uff0c\u6bcf\u4e2a\u5927\u7684\u4e09\u89d2\u5f62(\u7684\u4e09\u6761\u8fb9)\u7531(\u4e09\u4e2a)\u5c0f\u7684\u4e09\u89d2\u5f62\u7ec4\u6210\uff0c\u56e0\u6b64</p> <pre><code>(define (repeat k fn)\n  (fn)\n  (if (&gt; k 1) (repeat (- k 1) fn)))\n(define (tri fn)\n  (repeat 3 (lambda () (fn) (lt 120))))\n(define (sier d k)\n  (tri (lambda () (if (= d 1) (fd k) (leg d k)))))\n(define (leg d k)\n  (sier (- d 1) (/ k 2))\n  (penup) (fd k) (pendown))\n</code></pre> <p>\u4ee3\u7801\u5927\u6982\u662f <code>sier</code> \u548c <code>leg</code> \u76f8\u4e92\u8c03\u7528\u7684\u9012\u5f52\uff0c</p> <p>\u7ffb\u8bd1\u6210 python \u5927\u81f4\u662f\u8fd9\u6837</p> <pre><code>def repeat(k, fn):\n    fn()\n    if k &gt; 1:\n        repeat(k - 1, fn)\n\ndef tri(fn):\n    repeat(3, lambda: fn() and turn_left(120))\n\ndef sier(d, k):\n    tri(lambda: (move_forward(k) if d == 1 else leg(d, k)))\n\ndef leg(d, k):\n    sier(d - 1, k // 2)\n    pen_up()\n    move_forward(k)\n    pen_down()\n</code></pre> <p>\u5176\u4e2d <code>turn_left</code> <code>move_forward</code> <code>pen_up</code> <code>pen_down</code> </p> <p>\u5206\u522b\u5bf9\u5e94 scheme \u4e2d\u7684\u5185\u7f6e\u51fd\u6570 <code>lr</code> <code>fd</code> <code>penup</code> <code>pendown</code></p>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part2/#5_6","title":"5","text":"<p><code>cond</code> \u8bed\u53e5\uff0c\u53ef\u4ee5\u7c7b\u6bd4 <code>if-elif-else</code> \u8bed\u53e5\uff0c\u800c\u4e14\uff0c\u53ef\u4ee5\u7406\u89e3\u4e3a\u8fd9\u4e2a\u8bed\u53e5\u4e5f\u53ef\u4ee5\u8fd4\u56de\u503c\uff0c\u6240\u4ee5\u53ef\u4ee5\u50cf\u56fe\u4e2d\u53f3\u4e0a\u4e00\u6837\u5199</p> <p><code>begin</code> \u8bed\u53e5\uff0c\u5c06\u591a\u4e2a\u8bed\u53e5\u5408\u6210\u4e00\u4e2a( <code>begin</code> )\u8bed\u53e5</p> <p></p> <p><code>let</code> \u53ef\u4ee5\u5728\u5176\u4e2d\u5b9a\u4e49\u4e34\u65f6\u7684\u53d8\u91cf\uff0c\u683c\u5f0f\u662f <code>(let ((a 1) (b 2) ...) (...))</code> \uff0c<code>let</code> \u540e\u7b2c\u4e00\u4e2a\u62ec\u53f7\u5185\u662f\u82e5\u5e72\u4e2a\u5b9a\u4e49\u4e34\u65f6\u53d8\u91cf\u7684 \u5bf9 part \uff0c\u7b2c\u4e8c\u4e2a\u62ec\u53f7\u662f\u8981\u6267\u884c\u7684\u8bed\u53e5\u6216\u8005\u8981\u8fd4\u56de\u7684\u503c</p>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part2/#6_3","title":"6","text":"<p>scheme \u4e2d \u94fe\u8868 list \u76f8\u5173\u5185\u5bb9</p>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part2/#7_2","title":"7","text":"<p>\u5f15\u7528 quotation (\u611f\u89c9\u4f3c\u4e4e\u7406\u89e3\u4e86 c++ \u4e2d\u7684\u5f15\u7528)\uff0c\u53ef\u4ee5\u5c06\u7b26\u53f7\u672c\u8eab\u4f20\u5165\u5230\u8868\u8fbe\u5f0f\u4e2d</p> <p>Special form to indicate that the expression itself is the value.</p> <p>\u8868\u793a\u8868\u8fbe\u5f0f\u672c\u8eab\u5c31\u662f\u503c\u7684\u7279\u6b8a\u5f62\u5f0f\u3002</p> <pre><code>scm&gt; '(+ a b)\n(+ a b)\nscm&gt; '(zero? a)\n(zero? a)\n</code></pre> <p>\u4e5f\u53ef\u4ee5\u662f\u5728\u8868\u8fbe\u5f0f\u524d\u52a0 \u5355\u5f15\u53f7 <code>'</code> \uff0c\u90a3\u4e48\u8868\u8fbe\u5f0f\u4e2d\u7684\u7b26\u53f7\u90fd\u4f1a\u4ee5\u5f15\u7528\u7684\u5f62\u5f0f\u4f7f\u7528</p> <p>John \u7684demo\u6f14\u793a</p> <pre><code>scm&gt; '(1 2)\n(1 2)\nscm&gt; '(1 a)\n(1 a)\nscm&gt; (list 1 'a)\n(1 a)\nscm&gt; (list 1 a)\nTraceback (most recent call last):\n  0     (list 1 a)\n  1     a\nError: unknown identifier: a\n</code></pre> <p>Quote</p> <p>John:</p> <p>When quoting a list, you get a list, but all the expressions within it are quoted as well.</p> <p>...I can't evaluate a until I've define it, but I can refer to a before I've defined it, because it's just a symbol. It could mean something in the future, it just hasn't been defined yet.</p> <p>John:</p> <p>\u5f15\u7528\u5217\u8868\u65f6\uff0c\u4f60\u4f1a\u5f97\u5230\u4e00\u4e2a\u5217\u8868\uff0c\u4f46\u5176\u4e2d\u7684\u6240\u6709\u8868\u8fbe\u5f0f\u4e5f\u4f1a\u88ab\u5f15\u7528\u3002</p> <p>...\u5728\u5b9a\u4e49a\u4e4b\u524d\uff0c\u6211\u65e0\u6cd5\u8bc4\u4f30\u5b83\uff0c\u4f46\u5728\u5b9a\u4e49\u4e4b\u524d\uff0c\u6211\u53ef\u4ee5\u53c2\u8003a\uff0c\u56e0\u4e3a\u5b83\u53ea\u662f\u4e00\u4e2a\u7b26\u53f7\u3002\u5b83\u53ef\u80fd\u5728\u672a\u6765\u6709\u610f\u4e49\uff0c\u53ea\u662f\u8fd8\u6ca1\u6709\u5b9a\u4e49\u3002</p>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part2/#8_1","title":"8","text":"<p>scheme \u7684\u5185\u7f6e\u51fd\u6570 <code>eval</code> \u53ef\u4ee5\u8ba1\u7b97\u5f15\u7528\u5f62\u5f0f\u7684\u8868\u8fbe\u5f0f(\u53ef\u89c1\u4e8e\u4e0a\u56fe) (\u611f\u89c9\u53ef\u4ee5\u7406\u89e3\u4e3a \u53cd\u5411\u5f15\u7528\uff0c\u6216\u8005\u8bf4 \u89e3\u5f15\u7528)</p>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part2/#9_1","title":"9","text":"<p>John \u5173\u4e8e\u7b26\u53f7\u8868\u8fbe\u5f0f\u7684\u6f14\u793a(\u770b\u8d77\u6765\u611f\u89c9\u5f88\u5389\u5bb3\ud83d\ude32)</p> <p></p> <pre><code>(define (fact n)\n  (if (= n 1) 1 (* n (fact (- n 1)))))\n\n(define (fact-exp n)\n  (if (= n 1) 1 (list '* n (fact-exp (- n 1)))))\n</code></pre> <p></p> <pre><code>(define (fib n)\n  (if (&lt;= n 1) n (+ (fib (- n 2)) (fib (- n 1)))))\n\n(define (fib-exp n)\n  (if (&lt;= n 1) n (list '+ (fib-exp (- n 2)) (fib-exp (- n 1)))))\n</code></pre>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part2/#10_1","title":"10","text":"<p>\u51c6\u5f15\u7528 quasiquotation \uff0c\u53ef\u4ee5\u88ab\u4e2d\u65ad\u7684\u5f15\u7528</p> <p>\u53cd\u5f15\u53f7 <code>`</code> \u7684\u5f15\u7528\u6548\u679c\u53ef\u4ee5\u88ab \u9017\u53f7 <code>,</code> \u4e2d\u65ad\uff0c\u5373 <code>,</code> \u540e\u7684\u62ec\u53f7\u4ee5\u53ca\u66f4\u91cc\u9762\u7684\u62ec\u53f7\u53d6\u6d88\u5f15\u7528\u6548\u679c\uff0c\u800c\u5176\u4ed6\u5730\u65b9\u8fd8\u662f\u6709\u5f15\u7528\u6548\u679c</p> <pre><code>scm&gt; `(a ,(+) b)\n(a 0 b)\nscm&gt; `(a (+) b)\n(a (+) b)\n</code></pre>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part2/#11_1","title":"11","text":"<p>John \u5173\u4e8e \u51c6\u5f15\u7528 quasiquotation \u5f15\u7528\u7684\u6f14\u793a\uff0c</p> <p>\u7528\u51c6\u5f15\u7528\u6784\u9020\u4e86\u7c7b\u4f3c\u4e8e <code>while</code> \u7684(\u67d0\u79cd\u7a0b\u5ea6\u4e0a)\u901a\u7528\u7684\u5faa\u73af\u7ed3\u6784(\u7ed9\u6211\u770b\u50bb\u4e86\ud83d\ude32)</p> <p></p> <p>\u5206\u53f7 <code>;</code> \u8868\u793a\u6ce8\u91ca</p> <p>\u6211\u7684\u7406\u89e3\u662f\uff0c\u5982\u679c <code>begin</code> \u4e2d\u7684 <code>condition</code> <code>add-to-total</code> \u7b49\u4e0d\u52a0\u9017\u53f7 <code>,</code> \u7684\u8bdd\uff0c\u8fd4\u56de\u7684\u8868\u8fbe\u5f0f\u4e2d\u4f1a\u76f4\u63a5\u5c31\u662f <code>condition</code> <code>add-to-total</code> \u7b49\u8fd9\u4e9b\u7b26\u53f7\u672c\u8eab\uff0c\u800c\u52a0\u4e86\u9017\u53f7 <code>,</code> \u4e4b\u540e\uff0c\u6700\u540e\u7684\u8868\u8fbe\u5f0f\u5c31\u4f1a\u662f \u5728\u4f7f\u7528 <code>sum-while</code> \u65f6 \u5177\u4f53\u4f20\u5165\u7684\u503c\uff0c\u56e0\u6b64\u5728\u4f7f\u7528 <code>sum-while</code> \u65f6\u5e94\u8be5\u4f20\u5165\u7684\u662f\u5f15\u7528\u5f62\u5f0f\u7684\u8868\u8fbe\u5f0f(\u5373\u5982 John \u6f14\u793a\u7684\u4e00\u6837\uff0c<code>(sum-while 1 '(&lt; (* x x) 50) 'x '(+ x 1))</code> )</p> <pre><code>(define (sum-while initial-x condition       add-to-total update-x)\n  ;     (sum-while 1         '(&lt; (* x x) 50) 'x           '(+ x 1))\n  `(begin\n     (define (f x total)\n       (if ,condition\n         (f ,update-x (+ total ,add-to-total))\n         total))\n     (f ,initial-x 0)))\n</code></pre>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part2/#lecture-27-qa","title":"Lecture 27  Q&amp;A","text":""},{"location":"Notes%20of%20Courses/CS61A/CS61A_part2/#1_22","title":"1","text":"<p>\u6709\u4eba\u5411\u63d0\u95ee\u5230 scheme \u4e2d\u7684 <code>print</code> \u7684\u8fd4\u56de\u503c\u662f\u4ec0\u4e48\uff0c\u4e8e\u662f John \u5f00\u59cb\u6f14\u793a</p> <pre><code>scm&gt; (define s (print 1))\n1\ns\nscm&gt; s\nscm&gt; print(s)\nundefined\n</code></pre> <p>John\u4e4b\u540e\u89e3\u91ca\u9053\uff0cscheme \u4e2d\u7684 <code>undefined</code> \u548c python \u4e2d\u7684 <code>None</code> \u7c7b\u4f3c\uff0c\u4f46\u4e5f\u6709\u533a\u522b\uff0c <code>None</code> \u8fd8\u4f1a\u7528\u4e8e\u4e00\u4e9b\u6bd4\u8f83\uff0c\u4f46 <code>undefined</code> \u57fa\u672c\u4e0a\u4e0d\u4f1a\u88ab\u4f7f\u7528</p> <p>Quote</p> <p>John:</p> <p>Well, we get this special value called \"undefined.\" That's it. It's kind of close to Python's \"None,\" except for here's the rule. This is more of a conventional rule than enforced by the language, but here's the rule: you're never supposed to do anything with the undefined value.</p> <p>Whereas in Python, people use \"None\" for all kinds of stuff. They compare whether something is \"None,\" etc. That basically never shows up in Scheme code. So when you get this undefined value, which happens to exist, the idea is you should never do anything with it. You should never check to see if it's equal to another undefined. You should never check to see how many undefineds there are in a list or something like that. You should just stop.</p> <p>So basically, like this expression is legal, but it's a no-no. You should never take the value of \"print\" and do something else with it.</p> <p>John:</p> <p>\u55ef\uff0c\u6211\u4eec\u6709\u8fd9\u4e2a\u7279\u6b8a\u7684\u503c\u53eb\u505a \"undefined\"\u3002\u5c31\u662f\u8fd9\u6837\uff0c\u5b83\u6709\u70b9\u7c7b\u4f3c\u4e8e Python \u7684 \"None\"\uff0c\u9664\u4e86\u8fd9\u91cc\u6709\u4e00\u4e2a\u89c4\u5219\u3002\u8fd9\u66f4\u50cf\u662f\u4e00\u79cd\u7ea6\u5b9a\u4fd7\u6210\u7684\u89c4\u5219\uff0c\u800c\u4e0d\u662f\u8bed\u8a00\u5f3a\u5236\u7684\uff0c\u4f46\u8fd9\u5c31\u662f\u89c4\u5219\uff1a\u4f60\u6c38\u8fdc\u4e0d\u5e94\u8be5\u5bf9 \"undefined\" \u503c\u505a\u4efb\u4f55\u4e8b\u60c5\u3002</p> <p>\u800c\u5728 Python \u4e2d\uff0c\u4eba\u4eec\u7528 \"None\" \u6765\u5904\u7406\u5404\u79cd\u4e8b\u60c5\u3002\u4ed6\u4eec\u6bd4\u8f83\u67d0\u4e2a\u4e1c\u897f\u662f\u5426\u4e3a \"None\" \u7b49\u7b49\u3002\u8fd9\u57fa\u672c\u4e0a\u5728 Scheme \u4ee3\u7801\u4e2d\u51e0\u4e4e\u4e0d\u4f1a\u51fa\u73b0\u3002\u6240\u4ee5\u5f53\u4f60\u5f97\u5230\u8fd9\u4e2a\u5b58\u5728\u7684 \"undefined\" \u503c\u65f6\uff0c\u7406\u5ff5\u662f\u4f60\u4e0d\u5e94\u8be5\u5bf9\u5b83\u505a\u4efb\u4f55\u4e8b\u60c5\u3002\u4f60\u4e0d\u5e94\u8be5\u68c0\u67e5\u5b83\u662f\u5426\u7b49\u4e8e\u53e6\u4e00\u4e2a \"undefined\"\uff0c\u4f60\u4e0d\u5e94\u8be5\u68c0\u67e5\u5217\u8868\u4e2d\u6709\u591a\u5c11\u4e2a \"undefined\" \u7b49\u7b49\u3002\u4f60\u5e94\u8be5\u505c\u6b62\u3002</p> <p>\u6240\u4ee5\u57fa\u672c\u4e0a\uff0c\u50cf\u8fd9\u4e2a\u8868\u8fbe\u5f0f\u662f\u5408\u6cd5\u7684\uff0c\u4f46\u662f\u662f\u4e0d\u63a8\u8350\u7684\u3002\u4f60\u6c38\u8fdc\u4e0d\u5e94\u8be5\u83b7\u53d6 \"print\" \u7684\u503c\u7136\u540e\u7528\u5b83\u505a\u5176\u4ed6\u4e8b\u60c5\u3002</p>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part2/#2_19","title":"2","text":"<p>\u6709\u4eba\u95ee\u9053 scheme \u4e2d\u6709\u6ca1\u6709\u4e0e python \u4e2d <code>non local</code> \u7c7b\u4f3c\u7684\u64cd\u4f5c\uff0c</p> <p>\u4e8e\u662f John \u6f14\u793a\u4e86\u4f7f\u7528 <code>set!</code> \u7684\u4e00\u79cd\u65b9\u5f0f</p> <pre><code>(define (make-withdraw balance)\n  (define (withdraw amount)\n    (set! balance (- balance amount))\n    balance)\n  withdraw)\n</code></pre>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part2/#3_14","title":"3","text":"<p>John \u63d0\u5230 scheme \u4e2d\u7684 <code>=</code> \u548c <code>equal?</code></p> <p>Quote</p> <p>John:</p> <p>So anyway, there's a bunch of different equals, and no, I don't think you need to know the difference between all of them. But if you want to know, like this ( <code>eq?</code> ), it is like <code>is</code> . This ( <code>=</code> ) is like nothing that exists in Python because it only works for numbers.</p> <p>This ( <code>equal?</code> ) is a lot like the equal sign. Yeah, in Python, I think that just like this will check, okay, so yeah, this ( <code>equal?</code> ) will check whether two things are generally equal, just like in Python, 2 equals 2 is true, and also a list containing 2 and a list containing 2 is true. So, um, yeah, this ( <code>equal?</code> ) is usually the one you want.</p> <p>But if you want to check for \"is\", it looks like that ( <code>eq?</code> ), and this ( <code>=</code> ) is some like weird thing that only works with numbers.</p> <p>John:</p> <p>\u603b\u4e4b\uff0c\u6709\u5f88\u591a\u4e0d\u540c\u7684\u7b49\u53f7\uff0c\u6211\u4e0d\u8ba4\u4e3a\u4f60\u9700\u8981\u4e86\u89e3\u5b83\u4eec\u4e4b\u95f4\u7684\u533a\u522b\u3002\u4f46\u662f\u5982\u679c\u4f60\u60f3\u77e5\u9053\uff0c\u6bd4\u5982\u8fd9\u4e2a( <code>eq?</code> )\uff0c\u5c31\u50cf <code>is</code> \u3002\u8fd9\u4e2a( <code>=</code> )\u5728Python\u4e2d\u5e76\u4e0d\u5b58\u5728\uff0c\u56e0\u4e3a\u5b83\u53ea\u9002\u7528\u4e8e\u6570\u5b57\u3002</p> <p>\u8fd9\u4e2a( <code>equal?</code> )\u5f88\u50cf\u7b49\u53f7\u3002\u662f\u7684\uff0c\u5728Python\u4e2d\uff0c\u6211\u8ba4\u4e3a\u5c31\u50cf\u8fd9\u4e2a\u4f1a\u68c0\u67e5\uff0c\u597d\u7684\uff0c\u6240\u4ee5\u662f\u7684\uff0c\u8fd9\u4e2a( <code>equal?</code> )\u5c06\u68c0\u67e5\u4e24\u4e2a\u4e1c\u897f\u662f\u5426\u5927\u81f4\u76f8\u7b49\uff0c\u5c31\u50cf\u5728Python\u4e2d\uff0c2\u7b49\u4e8e2\u662f\u771f\u7684\uff0c\u8fd8\u6709\u4e00\u4e2a\u5305\u542b2\u7684\u5217\u8868\u548c\u4e00\u4e2a\u5305\u542b2\u7684\u5217\u8868\u4e5f\u662f\u771f\u7684\u3002\u6240\u4ee5\uff0c\u55ef\uff0c\u8fd9\u4e2a( <code>equal?</code> )\u901a\u5e38\u662f\u4f60\u60f3\u8981\u7684\u3002</p> <p>\u4f46\u662f\u5982\u679c\u4f60\u60f3\u68c0\u67e5\u201cis\u201d\uff0c\u5b83\u770b\u8d77\u6765\u50cf\u8fd9\u6837( <code>eq?</code> )\uff0c\u800c\u8fd9\u4e2a( <code>=</code> )\u662f\u4e00\u4e9b\u5947\u602a\u7684\u4e1c\u897f\uff0c\u53ea\u5bf9\u6570\u5b57\u8d77\u4f5c\u7528\u3002</p>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part2/#lab-10","title":"Lab 10","text":""},{"location":"Notes%20of%20Courses/CS61A/CS61A_part2/#1_23","title":"1","text":"<p>\u6307\u5bfc\u7f51\u9875\u4e0a\u6709\u5199\u5982\u4f55\u4f7f\u7528\u63d0\u4f9b\u7684 scheme \u89e3\u91ca\u5668\u4ee5\u53ca\u7f16\u8f91\u5668</p> <p>Quote</p> <p>Scheme</p> <p>Scheme is a famous functional programming language from the 1970s. It is a dialect of Lisp (which stands for LISt Processing). The first observation most people make is the unique syntax, which uses a prefix notation and (often many) nested parentheses (see http://xkcd.com/297/). Scheme features first-class functions and optimized tail-recursion, which were relatively new features at the time.</p> <p>Our course uses a custom version of Scheme (which you will build for Project 4) included in the starter ZIP archive. To start the interpreter, type <code>python3 scheme</code>. To run a Scheme program interactively, type <code>python3 scheme -i &lt;file.scm&gt;</code>. To exit the Scheme interpreter, type <code>(exit)</code>.</p> <p>You may find it useful to try code.cs61a.org/scheme when working through problems, as it can draw environment and box-and-pointer diagrams and it lets you walk your code step-by-step (similar to Python Tutor). Don't forget to submit your code through Ok though!</p> <p>Scheme Editor</p> <p>As you're writing your code, you can debug using the Scheme Editor. In your <code>scheme</code> folder you will find a new editor. To run this editor, run <code>python3 editor</code>. This should pop up a window in your browser; if it does not, please navigate to localhost:31415 and you should see it.</p> <p>Make sure to run <code>python3 ok</code> in a separate tab or window so that the editor keeps running.</p> <p>If you find that your code works in the online editor but not in your own interpreter, it's possible you have a bug in code from an earlier part that you'll have to track down. Every once in a while there's a bug that our tests don't catch, and if you find one you should let us know!</p> <p>\u8fd0\u884c</p> <pre><code>python ./scheme [-i &lt;file.scm&gt;]\n</code></pre> <p>\u6253\u5f00 scheme \u89e3\u91ca\u5668\uff0c\u4ee5\u53ca\u52a0\u8f7d\u6587\u4ef6\u5e76\u6253\u5f00\u3002</p> <p>\u8fd0\u884c</p> <pre><code>python editor\n</code></pre> <p>\u6253\u5f00 scheme \u7f16\u8f91\u5668\uff0c\u5728\u7ebf\u7f16\u8f91\u548c\u6d4b\u8bd5(\u7f51\u5740\u5728 http://127.0.0.1:31415)</p> <p></p>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part2/#2_20","title":"2","text":"<p>Q5\u4e2d\uff0c\u9700\u8981\u5c06 <code>'YOUR-CODE-HERE</code> \u8fd9\u4e00\u884c\u6ce8\u91ca\u6389\u6216\u8005\u5220\u53bb\uff0c\u5426\u5219\u4f1a\u6709\u5982\u4e0b\u62a5\u9519</p> <pre><code>Traceback (most recent call last):\n  0     (define lst (quote your-code-here) 1)\nError: too many operands in form\n</code></pre>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part2/#3_15","title":"3","text":"<p>Q6 \u4e2d\uff0c\u672c\u6765\u4ee5\u4e3a\u5f88\u7b80\u5355\uff0c\u4e00\u5f00\u59cb\u9012\u5f52\u7684 base case \u662f\u7528 <code>(= lst nil)</code> \u6765\u5224\u65ad\uff0c\u4f46\u662f\u62a5\u9519\u4e86</p> <pre><code>Error: operand 0 (()) is not a number\n</code></pre> <p>\u5927\u6982\u5e94\u8be5\u6307\u7684\u662f\uff0c <code>lst</code> \u548c <code>nil</code> \u4e0d\u662f\u6570\uff0c\u6240\u4ee5\u4e0d\u80fd\u7528 <code>=</code> \u6bd4\u8f83\u3002</p> <p>\u6700\u540e\u5728\u5728\u7ebf\u7ec8\u7aef\u89e3\u91ca\u5668\u4e2d\uff0c\u6478\u7d22\u4e86\u597d\u4e00\u4f1a\uff0c\u53d1\u73b0\u4e86\u4e00\u4e2a\u51fd\u6570 <code>length</code> \uff0c\u80fd\u8fd4\u56de\u94fe\u8868\u7684\u957f\u5ea6\uff0c\u4e8e\u662f\u5c06\u5224\u65ad\u6761\u4ef6\u6539\u6210</p> <pre><code>(zero? (length lst))\n</code></pre> <p>\u6700\u7ec8\u89e3\u51b3</p> code <pre><code>(define (remove item lst)\n  'YOUR-CODE-HERE\n  (if (zero? (length lst))\n      nil\n      (if (= item (car lst))\n          (remove item (cdr lst))\n          (cons (car lst) (remove item (cdr lst)))))\n)\n</code></pre> <p>\u4e4b\u540e\u53d1\u73b0\u5176\u5b9e\u8fd8\u53ef\u4ee5\u7528 <code>equal?</code> (\u6216 <code>eq?</code> )\u51fd\u6570\uff0c</p> <pre><code>scm&gt; (equal? () nil)\n#t\nscm&gt; (equal? '() nil)\n#t\n</code></pre> <p>\u5199\u5230 hw07 \u65f6\u53d1\u73b0\uff0c\u5176\u5b9e\u8fd9\u9898\u63d0\u793a\u4e2d\u8bf4\u7684 <code>filter-lst</code> \u51fd\u6570\u5176\u5b9e\u60f3\u8bf4\u7684\u662f <code>filter</code> \uff0c\u4e4b\u524d\u8f93\u5165 <code>filter-lst</code> \u663e\u793a\u6ca1\u6709\u8fd9\u4e2a\u51fd\u6570\uff0c</p> <p>\u7528\u4e0a <code>filter</code> \u51fd\u6570\u7b54\u6848\u5c31\u4f1a\u53d8\u5f97\u975e\u5e38\u7b80\u5355</p> <pre><code>(define (remove item lst)\n  'YOUR-CODE-HERE\n  (filter (lambda (x) (not (= x item))) lst)\n)\n</code></pre>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part2/#hw-06","title":"HW 06","text":""},{"location":"Notes%20of%20Courses/CS61A/CS61A_part2/#1_24","title":"1","text":"<p>Q3\u4e2d\uff0c\u5728\u5904\u7406\u5947\u6570\u60c5\u51b5\u65f6\uff0c\u4e00\u5f00\u59cb\u6211\u5199\u7684\u662f</p> <pre><code>(* x (square (pow x (/ y 2))))\n</code></pre> <p>\u4f46\u662f\u5728\u8dd1\u7b2c\u4e00\u4e2a\u6d4b\u8bd5\u7528\u4f8b\u65f6\uff0c</p> <pre><code>(pow 2 5)\n</code></pre> <p>\u663e\u793a\u9012\u5f52\u6ea2\u51fa\u4e86</p> <pre><code># Error: expected\n#     32\n# but got\n#     Traceback (most recent call last):\n#       ...\n#     RecursionError: maximum recursion depth exceeded in __instancecheck__\n</code></pre> <p>\u731c\u6d4b\u662f\u56e0\u4e3a\u9664\u6cd5\u7684\u95ee\u9898\uff0c\u4e8e\u662f\u53bb\u6d4b\u8bd5\u4e86\u4e00\u4e0b\uff0c\u53d1\u73b0 <code>/</code> \u4e0d\u662f\u6574\u9664</p> <pre><code>scm&gt; (/ 5 2)\n2.5\nscm&gt; (/ 4 2)\n2\n</code></pre> <p>\u4e8e\u662f\u5c06\u57fa\u6570\u60c5\u51b5\u7684\u4ee3\u7801\u4fee\u6539\u6210\u4e86</p> <pre><code>(* x (square (pow x (/ (- y 1) 2))))\n</code></pre> code <pre><code>(define (pow x y)\n  'YOUR-CODE-HERE\n  (if (= y 1)\n      x\n      (if (even? y)\n          (square (pow x (/ y 2)))\n          (* x (square (pow x (/ (- y 1) 2))))))\n)\n</code></pre>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part2/#lecture-28-exception","title":"Lecture 28 Exception","text":""},{"location":"Notes%20of%20Courses/CS61A/CS61A_part2/#1_25","title":"1","text":"<p>\u5728\u8fd0\u884c <code>py</code> \u6587\u4ef6\u65f6\uff0c\u53ef\u4ee5\u4f7f\u7528 <code>-O</code> \u9009\u9879\u6765\u5ffd\u7565 <code>assert</code> \u8bed\u53e5\u6765\u63d0\u9ad8\u7a0b\u5e8f\u6267\u884c\u6548\u7387</p> <pre><code>python -O\n</code></pre> <p></p> <p><code>__debug__</code> \u53ef\u4ee5\u67e5\u770b <code>assert</code> \u8bed\u53e5\u662f\u5426\u4f1a\u88ab\u6267\u884c</p> <pre><code>C:\\Users\\Ronald&gt;python\nPython 3.10.9 (tags/v3.10.9:1dd9be6, Dec  6 2022, 19:43:38) [MSC v.1934 32 bit (Intel)] on win32\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n&gt;&gt;&gt; __debug__\nTrue\n&gt;&gt;&gt; ^Z\n\n\nC:\\Users\\Ronald&gt;python -O\nPython 3.10.9 (tags/v3.10.9:1dd9be6, Dec  6 2022, 19:43:38) [MSC v.1934 32 bit (Intel)] on win32\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n&gt;&gt;&gt; __debug__\nFalse\n&gt;&gt;&gt;\n</code></pre>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part2/#2_21","title":"2","text":"<p>\u5f15\u53d1\u9519\u8bef raise error</p> <p><code>raise</code> \u540e\u7684\u8868\u8fbe\u5f0f\u5fc5\u987b\u662f <code>BaseException</code> \u7684\u5b9e\u4f8b\u6216\u8005\u5b83\u7684\u5b50\u7c7b\uff0c</p> <p>\u5982\u4e0a\u56fe\uff0cJohn \u8fd8\u4ecb\u7ecd\u4e86\u4e2d\u9519\u8bef\u7c7b\u578b</p> <p>John \u7684 demo \u6f14\u793a</p> <p></p>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part2/#3_16","title":"3","text":"<p><code>try</code> \u8bed\u53e5\u7684\u7528\u6cd5\uff0c\u5982\u679c\u5728\u6267\u884c <code>try</code> \u4e4b\u540e\u7684\u4ee3\u7801\u4e2d\u5f15\u8d77\u4e86\u9519\u8bef\uff0c\u5e76\u4e14\u9519\u8bef\u662f <code>except</code> \u540e <code>&lt;exception class&gt;</code> \u7684\u5b50\u7c7b\u65f6\uff0c\u5c31\u4f1a\u6267\u884c <code>except</code> \u4e2d\u7684\u8bed\u53e5(\u5982\u679c\u6ca1\u6709\u5f15\u8d77\u9519\u8bef\u5c31\u4e0d\u4f1a\u6267\u884c)</p> <p>John\u7684demo\u6f14\u793a</p> <p></p>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part2/#4_9","title":"4","text":"<p>John\u63d0\u5230\u4e86\u4e00\u4e2a <code>reduce</code> \u51fd\u6570(python\u6ca1\u5185\u7f6e\uff0cscheme\u5185\u7f6e\u4e86)\uff0c\u5728\u4e4b\u540e\u7684demo\u6f14\u793a\u4e2d\uff0c\u5206\u522b\u7528\u8fed\u4ee3\u548c\u9012\u5f52\u5b9e\u73b0\u4e86 <code>reduce</code></p> <ul> <li> <p>\u8fed\u4ee3</p> <pre><code>def reduce(f, s, initial):\n    \"\"\"Combine elements of s using f starting with initial.\n\n    &gt;&gt;&gt; reduce(mul, [2, 4, 8], 1)\n    64\n    &gt;&gt;&gt; reduce(add, [1, 2, 3, 4], 0)\n    10\n    \"\"\"\n    for x in s:\n        initial = f(initial, x)\n    return initial\n</code></pre> </li> <li> <p>\u9012\u5f52</p> <pre><code>def reduce(f, s, initial):\n    \"\"\"Combine elements of s using f starting with initial.\n\n    &gt;&gt;&gt; reduce(mul, [2, 4, 8], 1)\n    64\n    &gt;&gt;&gt; reduce(add, [1, 2, 3, 4], 0)\n    10\n    \"\"\"\n    if not s:\n        return initial\n    else:\n        first, rest = s[0], s[1:]\n        return reduce(f, rest, f(initial, first))\n</code></pre> </li> </ul>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part2/#lecture-28-qa","title":"Lecture 28 Q&amp;A","text":""},{"location":"Notes%20of%20Courses/CS61A/CS61A_part2/#1_26","title":"1","text":"<p><code>try</code> \u8bed\u53e5\u7ed3\u6784\u4e2d\u7684 <code>finally</code> \u8bed\u53e5\uff0c</p> <p><code>finally</code> \u4e2d\u7684\u4ee3\u7801\u65e0\u8bba <code>try</code> \u4e2d\u662f\u5426\u5f15\u53d1\u9519\u8bef\u6700\u7ec8\u90fd\u4f1a\u88ab\u6267\u884c(\u4ece\u56fe\u4e0a John \u7684\u6f14\u793a\u4e2d\u53ef\u4ee5\u770b\u5230)\uff0c\u6240\u4ee5 <code>finally</code> \u4e2d\u4e00\u822c\u7528\u6765\u91ca\u653e\u8d44\u6e90\u91ca\u653e\u5185\u5b58(\u5982\u5173\u95ed\u5728 <code>try</code> \u4e2d\u52a0\u8f7d\u7684\u6587\u4ef6\uff0c\u6216\u8005\u65ad\u5f00\u7f51\u7edc\u8fde\u63a5)</p>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part2/#2_22","title":"2","text":"<p>\u6709\u4eba\u63d0\u95ee <code>try</code> \u4e2d\u5f15\u53d1\u7684\u9519\u8bef\u662f\u5426\u5b58\u5728\u4e8e <code>global</code> \u6846\u67b6\u4e2d\uff0cJohn \u8fdb\u884c\u6f14\u793a</p> <pre><code>&gt;&gt;&gt; try:\n...     1/0\n... except ZeroDivisionError as n:\n...     print(\"n is\", n)\n...\nn is division by zero\n&gt;&gt;&gt; n\nTraceback (most recent call last):\n  File \"&lt;stdin&gt;\", line 1, in &lt;module&gt;\nNameerror: name 'n' is not defined\n</code></pre> <p>\u968f\u540e John \u53c8\u5c55\u793a\u4e86\u4e00\u4e0b\u9519\u8bef\u5b9e\u4f8b</p> <pre><code>def return_an_error():\n    try:\n        1/0\n    except ZeroDivisionError as n:\n        print(\"n is\", n)\n        return n\n</code></pre> <pre><code>&gt;&gt;&gt; e = return_an_error()\nn is division by zero\n&gt;&gt;&gt; e\nZeroDivisionError('division by zero')\n&gt;&gt;&gt; str(e)\n'division by zero'\n&gt;&gt;&gt; repr(e)\n\"ZeroDivisionError('division by zero')\"\n&gt;&gt;&gt; isinstance(e, Exception)\nTrue\n&gt;&gt;&gt; isinstance(e, ZeroDivisionError)\nTrue\n</code></pre>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part2/#3_17","title":"3","text":"<p>\u6709\u4eba\u63d0\u95ee19\u5e74\u79cb\u5b63\u671f\u672b\u8003\u8bd5\u7684\u8fd9\u4e00\u9898</p> <p>Quote</p> <p>Mull It Over</p> <p>Uh oh! Someone evaluated <code>(define * +)</code> . Now <code>(* 3 2)</code> evaluates to 5 instead of 6! Let's fix it.</p> <p>Important: Answer all questions on this page without calling the built-in multiplication procedure.</p> <p>(a) Implement <code>mulxy</code> , which multiplies integers <code>x</code> and <code>y</code> . Hint: <code>(- 2)</code> evaluates to -2.</p> <pre><code>;; multiply x by y (without using the * operator).\n;; (mulxy 3 4) -&gt; 12           ; 12 = 3 + 3 + 3 + 3\n;; (mulxy (- 3) (- 4)) -&gt; 12   ; 12 = - ( -3 + -3 + -3 + -3 )\n(define (mulxy x y)\n  (cond ((&lt; y 0) (- ______ ))\n        ((= y 0) 0)\n        (else ( ______ x (mulxy x ______)))))\n</code></pre> <p>(b) Implement <code>mul-expr</code> , which takes an expression <code>e</code> that contains only calls to <code>*</code> and numbers. It returns the normal value of <code>e</code> under a Scheme interpreter with an unmodified <code>*</code> operator that multiplies.</p> <p>You may call the <code>mul</code> procedure defined below.</p> <p>Important: Fill each blank with only a single symbol.</p> <pre><code>;; Multiply together a list of numbers.\n;; (mul '(2 3 4 2)) -&gt; 48\n(define (mul s) (reduce mulxy s))\n\n;; Evaluate an expression with only calls to * and numbers.\n;; (mul-expr '(* (* 1 2) (* 3 (* 4 1 1) 2))) -&gt; 48\n(define (mul-expr e)\n  (if (number? e) e\n      (______ (______ ______ (______ e)))))\n</code></pre> <p>(c) Implement <code>*-to-mul</code> , which takes any expression <code>e</code> . It returns an expression like <code>e</code> , but with all calls to <code>*</code> replaced with calls to <code>mul</code> . Note that <code>*</code> takes an arbitrary number of arguments, while <code>mul</code> always takes exactly one argument: a list of numbers. You should account for this difference.</p> <pre><code>;; Convert all calls to * to calls to mul in expression e.\n;; (eval (*-to-mul '(* 1 (+ 2 3) (+ 4 5 (* 6 1))))) -&gt; 75\n(define (*-to-mul e)\n  (if (not (list? e)) e\n      (let ((op ______ ) (rest ______))\n        (if (equal? op '*)\n            (list ______)\n            (cons op rest)))))\n</code></pre> <p>\u6211\u5148\u5c1d\u8bd5\u81ea\u5df1\u505a\u4e86\u4e00\u4e0b\uff0c</p> <p>\u7b2c\u4e00\u9898\u5f88\u7b80\u5355</p> <pre><code>(define (mulxy x y)\n  (cond ((&lt; y 0) (- (mulxy x (- y))))\n        ((= y 0) 0)\n        (else (+ x (mulxy x (- y 1))))))\n</code></pre> <p>\u7b2c\u4e8c\u9898\u7531\u4e8e\u6bcf\u4e00\u4e2a\u7a7a\u53ea\u80fd\u586b\u4e00\u4e2a symbol\uff0c\u60f3\u4e86\u5f88\u4e45\u6ca1\u60f3\u5230\u53ef\u884c\u7684\u586b\u6cd5\uff0c\u611f\u89c9\u5e94\u8be5\u662f\u9700\u8981\u4f7f\u7528\u4e00\u4e9b\u7279\u6b8a\u7684\u51fd\u6570\u3002</p> <p>John \u4f7f\u7528\u4e86scheme\u5185\u7f6e\u7684 <code>map</code> \u51fd\u6570</p> <p></p> <p>scheme \u4e2d\u7684 <code>map</code> \u548c python \u4e2d\u7684 <code>map</code> \u6548\u679c\u5dee\u4e0d\u591a\uff0c\u90fd\u662f\u4f20\u5165\u4e00\u4e2a\u51fd\u6570\u548c\u4e00\u4e2a\u94fe\u8868/\u5e8f\u5217\uff0c\u7136\u540e\u5c06\u51fd\u6570\u5e94\u7528\u5230\u6bcf\u4e00\u4e2a\u5143\u7d20\u4e0a\uff0c</p> <p>\u56e0\u6b64</p> <pre><code>(define (mul-expr e)\n  (if (number? e) e\n      (mul (map mul-expr (cdr e)))))\n</code></pre> <p>\u7b2c\u4e09\u9898\u4e5f\u6bd4\u8f83\u96be\uff0c\u5148\u662f\u6839\u636e\u6211\u7684\u7406\u89e3\u5199\u51fa\u4e86</p> <pre><code>(define (*-to-mul e)\n  (if (not (list? e)) e\n      (let ((op (car e)) (rest (map *-to-mul (cdr e))))\n        (if (equal? op '*)\n            (list ______)\n            (cons op rest)))))\n</code></pre> <p><code>(list ______)</code> \u8fd9\u4e00\u884c\uff0c\u4e00\u5f00\u59cb\u5c1d\u8bd5 <code>(list mul rest)</code> \uff0c\u4f46\u662f\u6d4b\u8bd5\u65f6\u663e\u793a</p> <pre><code>scm&gt; (eval (*-to-mul '(* 1 (+ 2 3) (+ 4 5 (* 6 1)))))\nTraceback (most recent call last):\n  0     (eval (*-to-mul (quote (* 1 (+ 2 3) (+ 4 5 (* 6 1))))))\n  1     ((lambda (s) (reduce mulxy s)) (1 (+ 2 3) (+ 4 5 ((lambda (s) (reduce mulxy s)) (6 1)))))\n  2     (lambda (s) (reduce mulxy s))\nError: malformed list: (lambda (s) (reduce mulxy s))\nscm&gt; (*-to-mul '(* 1 (+ 2 3) (+ 4 5 (* 6 1))))\n((lambda (s) (reduce mulxy s)) (1 (+ 2 3) (+ 4 5 ((lambda (s) (reduce mulxy s)) (6 1)))))\n</code></pre> <p>\u7136\u540e\u6211\u610f\u8bc6\u5230\uff0c\u5e94\u8be5\u628a <code>mul</code> \u6539\u6210 <code>'mul</code> \uff0c\u56e0\u4e3a\u9700\u8981\u8fd4\u56de\u7684\u662f\u4e00\u4e2a\u8868\u8fbe\u5f0f\uff0c\u8868\u8fbe\u5f0f\u4e2d\u7684\u7b26\u53f7\u548c\u51fd\u6570\u5e94\u8be5\u662f\u5f15\u7528\u7684\u5f62\u5f0f\uff0c</p> <p>\u4fee\u6539\u6210 <code>(list 'mul rest)</code> \u4e4b\u540e\uff0c\u6d4b\u8bd5\u663e\u793a</p> <pre><code>scm&gt; (eval (*-to-mul '(* 1 (+ 2 3) (+ 4 5 (* 6 1)))))\nTraceback (most recent call last):\n  0     (eval (*-to-mul (quote (* 1 (+ 2 3) (+ 4 5 (* 6 1))))))\n  1     (mul (1 (+ 2 3) (+ 4 5 (mul (6 1)))))\n  2     (1 (+ 2 3) (+ 4 5 (mul (6 1))))\nError: int is not callable: 1\n</code></pre> <p>\u672c\u6765\u770b\u5230\u4e0a\u9762\u7684</p> <pre><code>;; (mul '(2 3 4 2)) -&gt; 48\n</code></pre> <p>\u5c06\u4ee3\u7801\u5c1d\u8bd5\u6539\u6210\u4e86</p> <pre><code>(list 'mul ('quote rest))\n</code></pre> <p>\u4f46\u662f\u6d4b\u8bd5\u65f6\u663e\u793a</p> <pre><code>Traceback (most recent call last):\n  ...   ...\n  4     (list (quote mul) ((quote quote) rest))\n  5     ((quote quote) rest)\nError: str is not callable: quote\n</code></pre> <p>\u6700\u540e\u60f3\u4e0d\u51fa\u7b54\u6848\u3002</p> <p></p> <p>John \u5229\u7528\u4e00\u4e2a\u4f8b\u5b50\u6765\u8fdb\u884c\u8bb2\u89e3\uff0c</p> <pre><code>(*-to-mul '(* 1 2 (* 3 4)))\n</code></pre> <p>\u5e94\u8be5\u5f97\u5230\u7684\u662f(\u611f\u89c9\u6211\u4e4b\u524d\u505a\u7684\u65f6\u5019\u662f\u6ca1\u60f3\u5230\u8fd9\u4e2a\u5173\u952e\u7684\u5730\u65b9)</p> <pre><code>(mul (list 1 2 (mul (list 3 4))))\n</code></pre> <p>Hany \u671f\u95f4\u95ee\u9053\u4e3a\u4ec0\u4e48\u4e0d\u662f <code>(mul (1 2 (mul (3 4))))</code></p> <p>John \u8bf4 \u56e0\u4e3a <code>1</code> \u4e0d\u662f\u53ef\u8c03\u7528\u7684\uff0c\u5982\u679c\u8fd9\u6837\u5199\u5c31\u4f1a\u8c03\u7528 <code>1</code></p> <p>\u6240\u4ee5\u6700\u540e\u6b63\u786e\u7684\u7b54\u6848\u662f(John \u7684\u4ee3\u7801\u6709\u4e00\u4e9b\u95ee\u9898\uff0c\u9012\u5f52\u5e94\u8be5\u53d1\u751f\u5728\u5b9a\u4e49 <code>rest</code> \u7684\u65f6\u5019(\u5426\u5219\u5982\u679c\u7b2c\u4e00\u4e2a\u662f <code>+</code> \u5c31\u4f1a\u4e0d\u53d1\u751f\u66ff\u6362))</p> <pre><code>(define (*-to-mul e)\n  (if (not (list? e)) e\n      (let ((op (car e)) (rest (map *-to-mul (cdr e))))\n        (if (equal? op '*)\n            (list 'mul (cons 'list rest))\n            (cons op rest)))))\n</code></pre> <p>(\u8fd9\u9898\u662f\u771f\u7684\u96be\u60f3\ud83d\ude31)</p>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part2/#4_10","title":"4","text":"<p>Quote</p> <p>John:</p> <p>You can think of a list as built from a bunch of <code>cons</code> . <code>cons</code> is like the most fundamental operation, and what it does is it just adds one element to the beginning of an existing list.</p> <p>John:</p> <p>\u4f60\u53ef\u4ee5\u5c06\u5217\u8868\u770b\u4f5c\u662f\u7531\u4e00\u5806 <code>cons</code> \u6784\u5efa\u800c\u6210\u7684\u3002 <code>cons</code> \u5c31\u50cf\u662f\u6700\u57fa\u672c\u7684\u64cd\u4f5c\uff0c\u5b83\u7684\u4f5c\u7528\u662f\u5728\u73b0\u6709\u5217\u8868\u7684\u5f00\u5934\u6dfb\u52a0\u4e00\u4e2a\u5143\u7d20\u3002</p> <p>\u6211\u89c9\u5f97 John \u8fd9\u4e2a\u5bf9 <code>cons</code> \u51fd\u6570\u7684\u89e3\u91ca\u5f88\u597d\uff0c\u628a <code>cons</code> \u7406\u89e3\u6210 \u4e00\u4e2a\u5728\u73b0\u6709\u5217\u8868\u5f00\u5934\u63d2\u5165\u65b0\u5143\u7d20\u7684\u51fd\u6570 \u5c31\u66f4\u65b9\u4fbf</p>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part2/#5_7","title":"5","text":"<p>John \u53c8\u63d0\u5230\u4e86scheme\u4e2d\u7684 <code>append</code> \u51fd\u6570\uff0c\u80fd\u5c06\u4e24\u4e2a\u94fe\u8868\u5408\u5e76\u5230\u4e00\u8d77</p>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part2/#lecture-29-calculater","title":"Lecture 29 Calculater","text":""},{"location":"Notes%20of%20Courses/CS61A/CS61A_part2/#1_27","title":"1","text":"<p>John \u8bb2\u89e3 \u89e3\u6790 parse \u4e00\u4e2a\u8bed\u8a00\u7684\u8bed\u53e5\u7684\u8fc7\u7a0b</p> <p></p>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part2/#2_23","title":"2","text":"<p>scheme \u4e2d\u7684\u51cf\u6cd5\u548c\u9664\u6cd5\u7a0d\u5fae\u7279\u6b8a\u4e00\u4e9b\uff0c\u5982\u679c\u53ea\u6709\u4e00\u4e2a\u53c2\u6570\uff0c\u5c31\u76f4\u63a5\u53d6\u76f8\u53cd\u6570\u6216\u8005\u5012\u6570\uff0c\u5982\u679c\u6709\u591a\u4e2a\u53c2\u6570\uff0c\u5c31\u662f\u62ff\u7b2c\u4e00\u4e2a\u53bb\u51cf\u6216\u9664\u4e4b\u540e\u5269\u4f59\u7684\u6570</p>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part2/#3_18","title":"3","text":"<p>\u7528 python \u5b9e\u73b0 scheme \u4e2d(\u9002\u7528\u4e8e\u6570\u5b66\u8fd0\u7b97\u8868\u8fbe\u5f0f\u7684) <code>eval</code> \u51fd\u6570</p> <p></p>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part2/#4_11","title":"4","text":"<p>\u4ea4\u4e92\u5f0f\u89e3\u91ca\u5668 interactive interpreter \u7684\u5de5\u4f5c\u6d41\u7a0b *\u8bfb\u53d6-\u6c42\u503c-\u8f93\u51fa\u5faa\u73af Read-Eval-Print Loop (REPL)* </p> <ul> <li>\u4ece\u7528\u6237\u7684\u6587\u672c\u8f93\u5165\u4e2d\u8bfb\u53d6</li> <li>\u5c06\u6587\u672c \u89e3\u6790 parse \u4e3a\u8868\u8fbe\u5f0f</li> <li>\u8ba1\u7b97\u8868\u8fbe\u5f0f</li> <li>\u5982\u679c\u53d1\u751f\u9519\u8bef\uff0c\u62a5\u544a\u9519\u8bef</li> <li>\u8f93\u51fa\u8868\u8fbe\u5f0f\u8ba1\u7b97\u7ed3\u679c\u7684\u503c\uff0c\u5e76\u91cd\u590d\u4e0a\u8ff0\u8fc7\u7a0b</li> </ul>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part2/#5_8","title":"5","text":"<p>John \u8bf4\u5230 \u4ea4\u4e92\u5f0f\u89e3\u91ca\u5668 interactive interpreter \u4e0d\u80fd\u56e0\u4e3a\u7a0b\u5e8f\u7684\u9519\u8bef\u5c31\u4e2d\u65ad\u6574\u4e2a\u7a0b\u5e8f\uff0c\u6240\u4ee5\u9700\u8981\u8fdb\u884c exception \u7684\u5904\u7406</p> <p>Quote</p> <p>John:</p> <p>...So, an interactive interpreter should print information about each error. So that when those errors occur, the programmer who generated them can figure out what to change in order to get rid of the error. And a well-designed interactive interpreter should never really halt; it should stop evaluating the current expression and print out the arrow, but then give the programmer a chance to revise what they've done. So, the user should have the opportunity to try again in the current environment, instead of having the whole program crash. And that's exactly what happens here.</p> <p>So, as you can see, I'm able to continue entering expressions. The only way I can quit out of this game calculator is by pressing in my system control \"d,\" which says this is the end of the file. Then it will say, \"Calculation is complete,\" and finally, the program will end.</p> <p>Now, how do we control for all this? Well, we put both the parsing and evaluation within a <code>try</code> statement,</p> <pre><code>@main\ndef read_eval_print_loop():\n    \"\"\"Run a read-eval-print loop for Calculator.\"\"\"\n    while True:\n        try:\n            src = buffer_input()\n            while src.more_on_line:\n                expression = scheme_read(src)\n                print(calc_eval(expression))\n        except (SyntaxError, TypeError, ValueError, ZeroDivisionError) as err:\n            print(type(err).__name__ + ':', err)\n        except (KeyboardInterrupt, EOFError):  # &lt;Control&gt;-D, etc.\n            print('Calculation completed.')\n            return\n</code></pre> <p>that knows to look for syntax, type, value, and zero division errors \u2013 all the things that can occur, and just prints those errors out. And then, since this is all embedded within the suite of a <code>while</code> statement, we'll go back and try again. So, the only way to stop is to reach the end of a file or a keyboard interrupt, at which point it will print \"Calculation is complete.\"</p> <p>John:</p> <p>\u56e0\u6b64\uff0c\u4ea4\u4e92\u5f0f\u89e3\u91ca\u5668\u5e94\u8be5\u6253\u5370\u6709\u5173\u6bcf\u4e2a\u9519\u8bef\u7684\u4fe1\u606f\uff0c\u4ee5\u4fbf\u5f53\u8fd9\u4e9b\u9519\u8bef\u53d1\u751f\u65f6\uff0c\u751f\u6210\u5b83\u4eec\u7684\u7a0b\u5e8f\u5458\u80fd\u591f\u5f04\u6e05\u695a\u8981\u66f4\u6539\u4ec0\u4e48\u4ee5\u6d88\u9664\u9519\u8bef\u3002\u4e00\u4e2a\u8bbe\u8ba1\u826f\u597d\u7684\u4ea4\u4e92\u5f0f\u89e3\u91ca\u5668\u5b9e\u9645\u4e0a\u4e0d\u5e94\u8be5\u505c\u6b62\uff1b\u5b83\u5e94\u8be5\u505c\u6b62\u8bc4\u4f30\u5f53\u524d\u8868\u8fbe\u5f0f\u5e76\u6253\u5370\u51fa\u7bad\u5934\uff0c\u7136\u540e\u7ed9\u7a0b\u5e8f\u5458\u4e00\u4e2a\u673a\u4f1a\u6765\u4fee\u6539\u4ed6\u4eec\u6240\u505a\u7684\u4e8b\u60c5\u3002\u56e0\u6b64\uff0c\u7528\u6237\u5e94\u8be5\u6709\u673a\u4f1a\u5728\u5f53\u524d\u73af\u5883\u4e2d\u518d\u6b21\u5c1d\u8bd5\uff0c\u800c\u4e0d\u662f\u4f7f\u6574\u4e2a\u7a0b\u5e8f\u5d29\u6e83\u3002\u8fd9\u6b63\u662f\u8fd9\u91cc\u53d1\u751f\u7684\u60c5\u51b5\u3002</p> <p>\u6240\u4ee5\uff0c\u6b63\u5982\u4f60\u6240\u89c1\uff0c\u6211\u80fd\u591f\u7ee7\u7eed\u8f93\u5165\u8868\u8fbe\u5f0f\u3002\u9000\u51fa\u8fd9\u4e2a\u6e38\u620f\u8ba1\u7b97\u5668\u7684\u552f\u4e00\u65b9\u6cd5\u662f\u6309\u4e0b\u6211\u7684\u7cfb\u7edf\u63a7\u5236 \u201cd\u201d\uff0c\u8fd9\u8868\u793a\u8fd9\u662f\u6587\u4ef6\u7684\u7ed3\u5c3e\u3002\u7136\u540e\u5b83\u5c06\u663e\u793a \u201cCalculation is complete\u201d\uff0c\u6700\u540e\u7a0b\u5e8f\u5c06\u7ed3\u675f\u3002</p> <p>\u73b0\u5728\uff0c\u6211\u4eec\u5982\u4f55\u63a7\u5236\u6240\u6709\u8fd9\u4e9b\u5462\uff1f\u55ef\uff0c\u6211\u4eec\u5c06\u89e3\u6790\u548c\u8bc4\u4f30\u90fd\u653e\u5728\u4e00\u4e2a <code>try</code> \u8bed\u53e5\u4e2d\uff0c </p> <pre><code>@main\ndef read_eval_print_loop():\n    \"\"\"Run a read-eval-print loop for Calculator.\"\"\"\n    while True:\n        try:\n            src = buffer_input()\n            while src.more_on_line:\n                expression = scheme_read(src)\n                print(calc_eval(expression))\n        except (SyntaxError, TypeError, ValueError, ZeroDivisionError) as err:\n            print(type(err).__name__ + ':', err)\n        except (KeyboardInterrupt, EOFError):  # &lt;Control&gt;-D, etc.\n            print('Calculation completed.')\n            return\n</code></pre> <p>\u8be5\u8bed\u53e5\u77e5\u9053\u5982\u4f55\u67e5\u627e\u8bed\u6cd5\u3001\u7c7b\u578b\u3001\u503c\u548c\u96f6\u9664\u9519\u8bef\uff0c\u5373\u6240\u6709\u53ef\u80fd\u53d1\u751f\u7684\u4e8b\u60c5\uff0c\u5e76\u53ea\u662f\u6253\u5370\u51fa\u8fd9\u4e9b\u9519\u8bef\u3002\u7136\u540e\uff0c\u7531\u4e8e\u6240\u6709\u8fd9\u4e9b\u90fd\u5d4c\u5957\u5728\u4e00\u4e2a <code>while</code> \u8bed\u53e5\u7684\u5957\u4ef6\u4e2d\uff0c\u6211\u4eec\u5c06\u56de\u5230\u5e76\u5c1d\u8bd5\u518d\u6b21\u6267\u884c\u3002\u56e0\u6b64\uff0c\u552f\u4e00\u505c\u6b62\u7684\u65b9\u5f0f\u662f\u5230\u8fbe\u6587\u4ef6\u7684\u672b\u5c3e\u6216\u952e\u76d8\u4e2d\u65ad\uff0c\u6b64\u65f6\u5b83\u5c06\u6253\u5370 \u201cCalculation is complete\u201d\u3002</p>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part2/#lecture-29-qa","title":"Lecture 29 Q&amp;A","text":""},{"location":"Notes%20of%20Courses/CS61A/CS61A_part2/#1_28","title":"1","text":"<p>\u6709\u4eba\u63d0\u95ee\u9053(python)\u4ee3\u7801\u4e2d\u7684 <code>@main</code> \u6709\u4ec0\u4e48\u4f5c\u7528\uff0c</p> <p>Quote</p> <p>John:</p> <p>...Yeah, so this main decorator is something that's specific to 61a. It just says if you run the file, this is the function that should be called. So if I run the whole <code>scalc.py</code> file, it's not going to call as scheme list instead, it's going to call <code>read_eval_print_loop</code> .</p> <p>John:</p> <p>...\u662f\u7684\uff0c\u6240\u4ee5\u8fd9\u4e2a\u4e3b\u88c5\u9970\u5668\u662f61a\u7279\u6709\u7684\u4e1c\u897f\u3002\u5b83\u53ea\u662f\u8bf4\uff0c\u5982\u679c\u4f60\u8fd0\u884c\u6587\u4ef6\uff0c\u8fd9\u5c31\u662f\u5e94\u8be5\u8c03\u7528\u7684\u51fd\u6570\u3002\u56e0\u6b64\uff0c\u5982\u679c\u6211\u8fd0\u884c\u6574\u4e2a <code>scalc.py</code> \u6587\u4ef6\uff0c\u5b83\u4e0d\u4f1a\u8c03\u7528scheme-list\uff0c\u800c\u662f\u8c03\u7528 <code>read_eval_print_loop</code> \u3002</p> <p>\u8fd9\u4e2a\u548c</p> <pre><code>if __name__ = '__main__':\n    ...\n</code></pre> <p>\u6709\u70b9\u50cf\uff0c\u4e0d\u8fc7\u5c01\u88c5\u6210\u51fd\u6570\u518d\u52a0\u4e0a <code>@main</code> \u8fd8\u6709\u4e00\u70b9\u597d\u5904\u5c31\u662f\u8fd8\u53ef\u4ee5\u518d\u6b21\u8fdb\u884c\u8c03\u7528</p>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part2/#hw-07","title":"HW 07","text":""},{"location":"Notes%20of%20Courses/CS61A/CS61A_part2/#1_29","title":"1","text":"<p>\u5728 Q1 \u7684\u9898\u76ee\u8bf4\u660e\u4e2d\u63d0\u5230\u4e86 <code>filter</code> \u51fd\u6570\uff0c\u8ddf\u8fd9\u9898\u8981\u5b9e\u73b0\u7684 <code>filter-lst</code> \u7528\u6cd5\u4e00\u6837(\u7528\u4e8e\u94fe\u8868\u4e0a)\uff0c\u4e5f\u662f\u9700\u8981\u4e00\u4e2a \u8c13\u8bcd predicate (\u4f20\u5165\u4e00\u4e2a\u53c2\u6570\u7136\u540e\u8fd4\u56de\u771f\u5047\u7684\u51fd\u6570) \u548c\u4e00\u4e2a\u94fe\u8868\uff0c\u7136\u540e\u5c31\u4f1a\u7b5b\u9009\u51fa\u4e3a\u771f\u7684\u5143\u7d20</p> <pre><code>scm&gt; (define (x y) (&gt; y 1))\nx\nscm&gt; (filter x '(1 2 3 4 5))\n(2 3 4 5)\n</code></pre> <p>\u8fd9\u9898\u8981\u6c42\u5b9e\u73b0\u7684\u51fd\u6570\u53eb\u505a <code>filter-lst</code> \uff0c\u6240\u4ee5\u6709\u53ef\u80fd <code>filter</code> \u51fd\u6570\u8fd8\u53ef\u4ee5\u4f5c\u7528\u4e8e\u5176\u4ed6\u7684\u6570\u636e\u7c7b\u578b</p> code <pre><code>(define (filter-lst fn lst)\n  'YOUR-CODE-HERE\n  (if (eq? lst nil)\n      nil\n      (if (fn (car lst))\n          (cons (car lst) (filter-lst fn (cdr lst)))\n          (filter-lst fn (cdr lst))))\n)\n</code></pre>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part2/#2_24","title":"2","text":"<p>Q4 \u8fd9\u9898\u6709\u70b9\u96be(\u4e3b\u8981\u662f\u4e00\u76f4\u60f3\u7528python\u4e2d\u7684 <code>in</code> \u800cscheme\u4e2d\u7528\u4e0d\u4e86\ud83d\ude05)\uff0c</p> <p>\u6700\u540e\u5199\u51fa\u6765\u4e3b\u8981\u662f\u9898\u76ee\u4e2d\u63d0\u793a\u53ef\u4ee5\u4f7f\u7528\u7b2c\u4e00\u9898\u4e2d\u5b9e\u73b0\u7684 <code>filter-lst</code> \u51fd\u6570\uff0c\u7136\u540e\u6211\u53c8\u731c\u6d4b\u8fd8\u662f\u9700\u8981\u4f7f\u7528\u9012\u5f52\u6765\u5b9e\u73b0\uff0c\u90a3\u4e48\u4f20\u5165 <code>filter-lst</code> \u51fd\u6570\u7684\u94fe\u8868\u5e94\u8be5\u5c31\u662f <code>(cdr lst)</code> \uff0c</p> <p>\u8fdb\u800c\uff0c <code>filter-lst</code> \u7b5b\u51fa\u6765\u7684\u94fe\u8868\u5e94\u8be5\u8fd8\u8981\u9012\u5f52\u5730\u653e\u5165 <code>no-repeats</code> \u4e2d\uff0c\u6700\u540e\u518d\u52a0\u4e0a base case \u5c31\u6210\u529f\u5b9e\u73b0\u4e86</p> code <pre><code>(define (no-repeats lst)\n  'YOUR-CODE-HERE\n  (if (equal? lst nil)\n      nil\n      (cons (car lst)\n            (no-repeats (filter-lst (lambda (x) (not (= x (car lst))))\n                                    (cdr lst)))))\n)\n</code></pre>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part2/#lab-11","title":"Lab 11","text":""},{"location":"Notes%20of%20Courses/CS61A/CS61A_part2/#1_30","title":"1","text":"<p>Q3\u8fd9\u9898\u9700\u8981\u628a\u9898\u76ee\u610f\u601d\u7406\u89e3\u6e05\u695a\uff0c <code>CallExpr</code> \u5b9e\u4f8b\u4e2d\u7684 <code>operator</code> \u548c <code>operands</code> \u76f8\u5f53\u4e8e\u53d8\u91cf\u540d\uff0c\u9700\u8981\u8c03\u7528\u5b83\u4eec\u7684 <code>eval</code> \u65b9\u6cd5\u5e76\u4f20\u5165\u73af\u5883\u6765\u83b7\u53d6\u5bf9\u5e94\u7684\u503c\u6216\u8005\u5b9e\u4f8b\uff0c</p> <p>\u6700\u540e\uff0c\u64cd\u4f5c\u7b26 <code>operator</code> \u9700\u8981\u8c03\u7528 <code>apply</code> \u65b9\u6cd5\u6765\u8fdb\u884c\u4f7f\u7528</p> <p>Hint: Since the operator and operands are all instances of <code>Expr</code>, you can evaluate them by calling their <code>eval</code> methods. Also, you can apply a function (an instance of <code>PrimitiveFunction</code> or <code>LambdaFunction</code>) by calling its <code>apply</code> method, which takes in a list of arguments (<code>Value</code> instances).</p> code <pre><code>class CallExpr(Expr):\n    def eval(self, env):\n        return self.operator.eval(env).apply([operand.eval(env) for operand in self.operands])\n</code></pre>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part2/#2_25","title":"2","text":"<p>Q4\u4e2d\uff0c\u9700\u8981\u66f4\u65b0\u4ee5\u5b57\u5178\u5f62\u5f0f\u5b58\u50a8\u7684\u73af\u5883\uff0c\u7ed3\u5408Q3\u7684\u51fd\u6570\u8bf4\u660e\uff0c\u53ef\u4ee5\u77e5\u9053\u53ef\u4ee5\u4f7f\u7528\u5b57\u5178\u7684 <code>update</code> \u65b9\u6cd5\uff0c</p> <p>\u5728\u7ec8\u7aef\u4e2d\u8bd5\u4e86\u4e00\u4e0b</p> <pre><code>&gt;&gt;&gt; dict\n&lt;class 'dict'&gt;\n&gt;&gt;&gt; dict.update\n&lt;method 'update' of 'dict' objects&gt;\n&gt;&gt;&gt; dict.extend\nTraceback (most recent call last):\nFile \"&lt;stdin&gt;\", line 1, in &lt;module&gt;\nAttributeError: type object 'dict' has no attribute 'extend'\n&gt;&gt;&gt; dict.append\nTraceback (most recent call last):\nFile \"&lt;stdin&gt;\", line 1, in &lt;module&gt;\nAttributeError: type object 'dict' has no attribute 'append'\n</code></pre> <p><code>dict.update()</code> \u6ca1\u6709\u8fd4\u56de\u503c(\u548c\u5217\u8868\u7684 <code>append</code> \u548c <code>extend</code> \u4e00\u6837)\uff0c\u6240\u4ee5\u4e00\u5f00\u59cb\u6211\u7528</p> <pre><code>new_env = self.parent.copy().update(dict(zip(self.parameters, arguments)))\n</code></pre> <p>\u7136\u540e\u62a5\u4e86 <code>NoneType</code> \u7684\u9519\u8bef\u3002</p> code <pre><code>class LambdaFunction(Value):\n    def apply(self, arguments):\n        if len(self.parameters) != len(arguments):\n            raise TypeError(\"Oof! Cannot apply number {} to arguments {}\".format(\n                comma_separated(self.parameters), comma_separated(arguments)))\n        \"*** YOUR CODE HERE ***\"\n        new_env = self.parent.copy()\n        new_env.update(dict(zip(self.parameters, arguments)))\n        return self.body.eval(new_env)\n</code></pre>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part2/#3_19","title":"3","text":"<p>Q5\u6ca1\u4ec0\u4e48\u660e\u786e\u7684\u8981\u6c42\uff0c\u6211\u76f4\u63a5\u5728</p> <pre><code>except (SyntaxError, NameError, TypeError, OverflowError, ZeroDivisionError) as err:\n</code></pre> <p>\u8fd9\u4e00\u884c\u6dfb\u52a0\u4e86 <code>OverflowError</code> \u548c <code>ZeroDivisionError</code></p>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part2/#project-scheme","title":"Project Scheme","text":""},{"location":"Notes%20of%20Courses/CS61A/CS61A_part2/#1_31","title":"1","text":"<p>Problem 1\u7684\u524d\u9762\u67d0\u9898\u6211\u5361\u4e86\u4e00\u5c0f\u4f1a\ud83d\ude05</p> <pre><code>&gt;&gt;&gt; from scheme_reader import *\n&gt;&gt;&gt; tokens = tokenize_lines([\"(+ 1 \", \"(23 4)) (\"])\n&gt;&gt;&gt; src = Buffer(tokens)\n&gt;&gt;&gt; src.current()\n? ...\n-- OK! --\n\n&gt;&gt;&gt; src.pop_first()\n? ...\n-- OK! --\n\n&gt;&gt;&gt; src.current()\n? ...\n-- OK! --\n\n&gt;&gt;&gt; src.pop_first()\n? ...\n-- OK! --\n\n&gt;&gt;&gt; src.pop_first()\n? ...\n-- OK! --\n\n&gt;&gt;&gt; scheme_read(src)  # Removes the next complete expression in src and returns it as a Pair\n? \n</code></pre> <p>\u6700\u540e\u662f\u770b\u4e86 <code>scheme_reader.py</code> \u4e2d <code>scheme_read</code> \u7684\u51fd\u6570\u8bf4\u660e\u4e2d</p> <pre><code>def scheme_read(src):\n    \"\"\"Read the next expression from SRC, a Buffer of tokens.\n\n    ...\n    &gt;&gt;&gt; scheme_read(Buffer(tokenize_lines(['(+ 1 2)'])))\n    Pair('+', Pair(1, Pair(2, nil)))\n    \"\"\"\n</code></pre> <p>\u624d\u660e\u767d <code>returns it as a Pair</code> \u5177\u4f53\u8fd4\u56de\u662f\u4ec0\u4e48\u6837\u5b50\u3002</p> <p>\u7136\u540e\u770b\u5230\u4e86\u9898\u76ee\u8bf4\u660e\u4e2d\u7684</p> <p><code>scheme_read</code>:</p> <ul> <li>If the current token is <code>(</code>, the expression is a pair or list. Call <code>read_tail</code> on the rest of <code>src</code> and return its result.</li> </ul> <p><code>read_tail</code>:</p> <ul> <li>If the token is <code>)</code>, then we've reached the end of the list or pair. Remove this token from the buffer and return the <code>nil</code> object.</li> </ul> <p>\u6240\u4ee5\u660e\u767d\u53ea\u4f1a\u8bfb\u53d6\u5230\u7b2c\u4e00\u4e2a\u53f3\u62ec\u53f7 <code>)</code> \uff0c\u56e0\u6b64\u6700\u540e\u6b63\u786e\u7b54\u6848\u662f</p> <pre><code>Pair(23, Pair(4, nil))\n</code></pre> <p>\u4f46\u662f\u6709\u4e2a\u5730\u65b9\u611f\u89c9\u6709\u70b9\u5c0f\u79bb\u8c31\ud83d\ude05\uff0c\u5c11\u4e86\u4e2a\u7a7a\u683c\u5c45\u7136\u663e\u793a\u9519\u8bef</p> <pre><code>? Pair(23, Pair(4,nil))\n-- Not quite. Try again! --\n\n? Pair(23, Pair(4, nil))\n-- OK! --\n</code></pre> <p>\u5728\u5b9e\u73b0 <code>read_tail</code> \u65f6\uff0c\u610f\u8bc6\u5230\u9898\u76ee\u8bf4\u660e\u4e2d\u7684\u8fd9\u53e5\u8bdd</p> <p>Both functions mutate the buffer, removing the tokens that have already been processed.</p> <p>\u5c31\u662f\u8bf4\uff0c(\u6bd4\u5982\u88ab <code>scheme_read</code> \u8c03\u7528\u7684) <code>read_tail</code> \u4e2d\u9700\u8981\u7a81\u53d8 <code>src</code> (\u79fb\u9664\u5df2\u7ecf\u4f7f\u7528\u8fc7\u7684\u4ee4\u724c)\uff0c\u8fd9\u6837\u5728 <code>read_tail</code> \u4e2d\u4f7f\u7528\u8fc7\u7684 \u4ee4\u724c tokens \uff0c\u5c31\u4e0d\u4f1a\u88ab <code>scheme_read</code> \u6216\u8005\u4e0a\u4e00\u5c42 <code>read_tail</code> \u518d\u6b21\u4f7f\u7528</p> <p>\u6ca1\u60f3\u5230Problem 1\u5c31\u5199\u4e86\u534a\u5c0f\u65f6(\u7b97\u4e0a\u89e3\u9501\u82b1\u4e86\u4e00\u5c0f\u65f6\ud83d\ude07)\u3002</p> <p>\u8fd9\u9898\u4e3b\u8981\u662f\u9700\u8981\u5b8c\u5168\u7406\u89e3\u9898\u76ee\u7684\u610f\u601d\uff0c\u5982\u679c\u6709bug\u5c31\u56de\u53bb\u91cd\u65b0\u7406\u89e3\u9898\u76ee(\u4ed4\u7ec6\u9605\u8bfb\u9898\u76ee\u7684\u8bf4\u660e)\u5c31\u597d\u4e86\u3002</p> <p>\u4e00\u5f00\u59cb\u6211\u5199\u7684\u662f</p> <pre><code>def scheme_read(src):\n    if src.current() is None:\n        raise EOFError\n    val = src.pop_first() # Get and remove the first token\n    if val == 'nil':\n        \"*** YOUR CODE HERE ***\"\n        return nil\n    elif val == '(':\n        \"*** YOUR CODE HERE ***\"\n        return read_tail(src)\n    ...\ndef read_tail(src):\n    try:\n        if src.current() is None:\n            raise SyntaxError('unexpected end of file')\n        elif src.current() == ')':\n            \"*** YOUR CODE HERE ***\"\n            src.pop_first()\n            return nil\n        else:\n            \"*** YOUR CODE HERE ***\"\n            return Pair(src.pop_first(), read_tail(src))\n    except EOFError:\n        raise SyntaxError('unexpected end of file')\n</code></pre> <p>\u7136\u540e\u62a5\u4e86\u8fd9\u6837\u7684\u9519\u8bef</p> <pre><code>&gt;&gt;&gt; read_tail(Buffer(tokenize_lines(['(2)'])))\nPair('(', Pair(2, nil))\n\n# Error: expected\n#     SyntaxError\n# but got\n#     Pair('(', Pair(2, nil))\n</code></pre> <p>\u7136\u540e\u770b\u5230\u4e86\u9898\u76ee\u4e2d\u7684</p> <p><code>read_tail</code>:</p> <ul> <li> <p>If none of the above cases apply, the next token is the operator in a combination, e.g. src contains <code>+ 2 3)</code>. To parse this:</p> <ol> <li> <p><code>scheme_read</code> the next complete expression in the buffer.</p> <p>...</p> </li> </ol> </li> </ul> <p>\u4e8e\u662f\u660e\u767d\u5982\u679c\u5728 <code>read_tail</code> \u4e2d\u8bfb\u5230\u5de6\u62ec\u53f7 <code>(</code> \uff0c\u5c31\u610f\u5473\u7740\u8bfb\u5230\u4e86\u5d4c\u5957\u7684\u8868\u8fbe\u5f0f\uff0c\u9700\u8981\u8c03\u7528 <code>scheme_read</code> \u6765\u5904\u7406\u8fd9\u4e2a\u5185\u5c42\u7684\u8868\u8fbe\u5f0f\uff0c\u56e0\u6b64\u6539\u6210\u4e86</p> <pre><code>if src.current() == '(':\n    return Pair(scheme_read(src), read_tail(src))\nreturn Pair(src.pop_first(), read_tail(src))\n</code></pre> <p>\u518d\u6b21\u6d4b\u8bd5\uff0c\u539f\u6765\u9519\u8bef\u7684\u5730\u65b9\u901a\u8fc7\u4e86\uff0c\u4f46\u662f\u51fa\u73b0\u4e86\u65b0\u7684\u62a5\u9519</p> <pre><code>&gt;&gt;&gt; read_line('(a)')\nnil\n\n# Error: expected\n#     Pair('a', nil)\n# but got\n#     nil\n</code></pre> <p>\u8fdb\u884c\u5206\u6790\uff0c\u611f\u89c9\u4e0a\u4e00\u4e2a\u9519\u8bef\u4e5f\u548c\u8fd9\u4e2a\u5dee\u4e0d\u591a\uff0c\u4f46\u662f\u5df2\u7ecf\u88ab\u89e3\u51b3\uff0c\u8bf4\u660e\u95ee\u9898\u4e0d\u5728 <code>read_tail</code> \u4e2d\uff0c\u6240\u4ee5\u5e94\u8be5\u5728 <code>scheme_read</code> \u4e2d\uff0c\u4e8e\u662f\u8fdb\u884c\u67e5\u770b\uff0c\u53d1\u73b0\u8fd9\u91cc\u5df2\u7ecf\u5f39\u51fa\u8fc7\u4ee4\u724c\u4e86</p> <pre><code>val = src.pop_first() # Get and remove the first token\n</code></pre> <p>\u6240\u4ee5\u5c06\u4e4b\u524d\u7684\u4ee3\u7801\u4fee\u6539\u540e\uff0c\u6700\u540e\u7ec8\u4e8e\u901a\u8fc7\ud83d\ude2d</p> code <pre><code>def scheme_read(src):\n    if src.current() is None:\n        raise EOFError\n    val = src.pop_first() # Get and remove the first token\n    if val == 'nil':\n        # BEGIN PROBLEM 1\n        \"*** YOUR CODE HERE ***\"\n        return nil\n        # END PROBLEM 1\n    elif val == '(':\n        # BEGIN PROBLEM 1\n        \"*** YOUR CODE HERE ***\"\n        return read_tail(src)\n        # END PROBLEM 1\n    elif val == \"'\":\n        # BEGIN PROBLEM 6\n        \"*** YOUR CODE HERE ***\"\n        # END PROBLEM 6\n    elif val not in DELIMITERS:\n        return val\n    else:\n        raise SyntaxError('unexpected token: {0}'.format(val))\ndef read_tail(src):\n    try:\n        if src.current() is None:\n            raise SyntaxError('unexpected end of file')\n        elif src.current() == ')':\n            # BEGIN PROBLEM 1\n            \"*** YOUR CODE HERE ***\"\n            src.pop_first()\n            return nil\n            # END PROBLEM 1\n        else:\n            # BEGIN PROBLEM 1\n            \"*** YOUR CODE HERE ***\"\n            if src.current() == '(':\n                return Pair(scheme_read(src), read_tail(src))\n            return Pair(src.pop_first(), read_tail(src))\n            # END PROBLEM 1\n    except EOFError:\n        raise SyntaxError('unexpected end of file')\n</code></pre> <p>Problem 13\u4e2d\u53d1\u73b0\u4e86 \u7531\u4e8eProblem 1\u4e2d\u4ee3\u7801\u5b58\u5728\u6f0f\u6d1e \u800c\u5bfc\u81f4\u7684\u9519\u8bef\uff0c\u91cd\u65b0\u9605\u8bfb\u9898\u76ee\u540e\uff0c\u5c06\u4ee3\u7801\u4fee\u6539\u6b63\u786e(\u5177\u4f53\u53ef\u89c1\u4e8e\u7b2c7\u6761Problem 13)</p> code <pre><code>def scheme_read(src):\n    if src.current() is None:\n        raise EOFError\n    val = src.pop_first() # Get and remove the first token\n    if val == 'nil':\n        # BEGIN PROBLEM 1\n        \"*** YOUR CODE HERE ***\"\n        return nil\n        # END PROBLEM 1\n    elif val == '(':\n        # BEGIN PROBLEM 1\n        \"*** YOUR CODE HERE ***\"\n        return read_tail(src)\n        # END PROBLEM 1\n    elif val == \"'\":\n        # BEGIN PROBLEM 6\n        \"*** YOUR CODE HERE ***\"\n        # END PROBLEM 6\n    elif val not in DELIMITERS:\n        return val\n    else:\n        raise SyntaxError('unexpected token: {0}'.format(val))\ndef read_tail(src):\n    try:\n        if src.current() is None:\n            raise SyntaxError('unexpected end of file')\n        elif src.current() == ')':\n            # BEGIN PROBLEM 1\n            \"*** YOUR CODE HERE ***\"\n            src.pop_first()\n            return nil\n            # END PROBLEM 1\n        else:\n            # BEGIN PROBLEM 1\n            \"*** YOUR CODE HERE ***\"\n            return Pair(scheme_read(src), read_tail(src))\n            # END PROBLEM 1\n    except EOFError:\n        raise SyntaxError('unexpected end of file')\n</code></pre>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part2/#2_26","title":"2","text":"<p>Problem 4\uff0c\u4e00\u5f00\u59cb\u6211\u5199\u7684\u662f</p> <pre><code>operator = env.lookup(first)\nvalidate_procedure(operator)\noperands = rest.map(lambda x: env.lookup(x))\nreturn scheme_apply(operator, operands, env)\n</code></pre> <p>\u4f46\u662f\u62a5\u4e86\u8fd9\u6837\u7684\u9519\u8bef</p> <pre><code>&gt;&gt;&gt; from scheme_reader import *\n&gt;&gt;&gt; from scheme import *\n&gt;&gt;&gt; expr = read_line('(+ 2 2)')\n&gt;&gt;&gt; scheme_eval(expr, create_global_frame()) # Type SchemeError if you think this errors\nTraceback (most recent call last):\n  ...\nscheme_builtins.SchemeError: unknown identifier: 2\n\n# Error: expected\n#     4\n# but got\n#     Traceback (most recent call last):\n#       ...\n#     SchemeError: unknown identifier: 2\n</code></pre> <p>\u7136\u540e\u7a81\u7136\u60f3\u5230 <code>2</code> \u5e76\u4e0d\u662f\u4e00\u4e2a \u7b26\u53f7 symbol \uff0c\u6240\u4ee5 <code>env.lookup(2)</code> \u5e94\u8be5\u662f\u4f1a\u62a5\u9519\uff0c\u7136\u540e\u53c8\u4f1a\u60f3\u8d77\u9898\u76ee\u4e2d\u7684</p> <p>You'll have to recursively call <code>scheme_eval</code> in the first two steps.</p> <p>\u6240\u4ee5\u5c31\u77e5\u9053\u9700\u8981\u5982\u4f55\u4fee\u6539\u4e86\uff0c\u6700\u540e\u4fee\u6539\u540e\u901a\u8fc7\u4e86\u6d4b\u8bd5</p> code <pre><code>def scheme_eval(expr, env, _=None): # Optional third argument is ignored\n    # Evaluate atoms\n    if scheme_symbolp(expr):\n        return env.lookup(expr)\n    elif self_evaluating(expr):\n        return expr\n\n    # All non-atomic expressions are lists (combinations)\n    if not scheme_listp(expr):\n        raise SchemeError('malformed list: {0}'.format(repl_str(expr)))\n    first, rest = expr.first, expr.rest\n    if scheme_symbolp(first) and first in SPECIAL_FORMS:\n        return SPECIAL_FORMS[first](rest, env)\n    else:\n        # BEGIN PROBLEM 4\n        \"*** YOUR CODE HERE ***\"\n        operator = scheme_eval(first, env)\n        validate_procedure(operator)\n        operands = rest.map(lambda x: scheme_eval(x, env))\n        return scheme_apply(operator, operands, env)\n        # END PROBLEM 4\n</code></pre>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part2/#3_20","title":"3","text":"<p>Problem 5\uff0c\u6ce8\u610f\u9700\u8981\u533a\u5206\u7b2c\u4e8c\u4e2a\u64cd\u4f5c\u6570\u9700\u8981\u901a\u8fc7\u6c42\u503c\u5c06\u7b26\u53f7\u6216\u8868\u8fbe\u5f0f\u53d8\u6210\u5bf9\u5e94\u503c</p> code <pre><code>def do_define_form(expressions, env):\n    validate_form(expressions, 2) # Checks that expressions is a list of length at least 2\n    target = expressions.first\n    if scheme_symbolp(target):\n        validate_form(expressions, 2, 2) # Checks that expressions is a list of length exactly 2\n        # BEGIN PROBLEM 5\n        \"*** YOUR CODE HERE ***\"\n        env.define(target, scheme_eval(expressions.rest.first, env))\n        return target\n        # END PROBLEM 5\n    ...\n</code></pre>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part2/#4_12","title":"4","text":"<p>Problem 6\u4e2d\uff0c\u4e00\u5f00\u59cb\u5728 <code>scheme_read</code> \u4e2d\u5199\u7684\u662f</p> <pre><code>return Pair(\"quote\", scheme_read(src))\n</code></pre> <p>\u4f46\u662f\u62a5\u9519\u4e86</p> <pre><code>scm&gt; ''hello\nhello str\n# Error: cdr can only be a pair, nil, or a promise but was hello\n\n# Error: expected\n#     (quote hello)\n# but got\n#     Traceback (most recent call last):\n#       ...\n#     SchemeError: cdr can only be a pair, nil, or a promise but was hello\n</code></pre> <p>\u7ecf\u8fc7\u601d\u8003\uff0c\u5927\u6982\u7406\u89e3\u4e86\uff0c\u6211\u611f\u89c9 <code>'</code> \u53ef\u4ee5\u7406\u89e3\u4e3a\u53ea\u4f1a\u6709\u4e00\u4e2a\u53c2\u6570/\u64cd\u4f5c\u6570\u7684\u51fd\u6570(\u56e0\u4e3a\u5f15\u53f7\u540e\u53ea\u4f1a\u6709\u4e00\u4e2a\u6700\u5916\u5c42\u7684\u62ec\u53f7)\uff0c\u56e0\u6b64\u8fd4\u56de\u7684\u7ed3\u6784\u5c31\u4f1a\u662f</p> <pre><code>Pair(\"quote\", Pair(..., nil))\n</code></pre> <p><code>...</code> \u5c31\u662f\u88ab\u5f15\u7528\u7684\u90e8\u5206\uff0c\u4e5f\u5c31\u662f\u90a3\u552f\u4e00\u7684\u53c2\u6570\u3002</p> code scheme.py<pre><code>def do_quote_form(expressions, env):\n    validate_form(expressions, 1, 1)\n    # BEGIN PROBLEM 6\n    \"*** YOUR CODE HERE ***\"\n    return expressions.first\n    # END PROBLEM 6\n</code></pre> scheme_reader.py<pre><code>def scheme_read(src):\n    ...\n    elif val == \"'\":\n        # BEGIN PROBLEM 6\n        \"*** YOUR CODE HERE ***\"\n        return Pair(\"quote\", Pair(scheme_read(src), nil))\n        # END PROBLEM 6\n    ...\ndef read_tail(src):\n    try:\n        ...\n        else:\n            # BEGIN PROBLEM 1\n            \"*** YOUR CODE HERE ***\"\n            # if src.current() == '(':\n            if src.current() in ('(', \"'\"):\n                ...\n            ...\n            # END PROBLEM 1\n    ...\n</code></pre>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part2/#5_9","title":"5","text":"<p>\u89e3\u9501Problem 8\u7684\u8fd9\u9898\u7b54\u6848(\u53c2\u8003 <code>do_lambda_form</code> \u51fd\u6570\u8bf4\u660e\u53ef\u4ee5\u5f97\u77e5\u662f <code>Pair(...)</code> \u7684\u5f62\u5f0f)\u6709\u4e9b\u96be\u6572(\u4e3b\u8981\u662f\u56e0\u4e3a\u592a\u957f\u4e86\ud83d\ude05)</p> <pre><code>&gt;&gt;&gt; from scheme_reader import *\n&gt;&gt;&gt; from scheme import *\n&gt;&gt;&gt; env = create_global_frame()\n&gt;&gt;&gt; lambda_line = read_line(\"(lambda (a b c) (+ a (* b c)))\")\n&gt;&gt;&gt; lambda_proc = do_lambda_form(lambda_line.rest, env)\n&gt;&gt;&gt; lambda_proc.formals\n? Pair('a', Pair('b', Pair('c', nil)))\n-- OK! --\n\n&gt;&gt;&gt; lambda_proc.body # Remember that the body is a *list* of expressions!\n? Pair(Pair('+', Pair('a', Pair(Pair('*', Pair('b', Pair('c', nil))), nil))), nil)\n-- OK! --\n</code></pre>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part2/#6_4","title":"6","text":"<p>Problem 10\uff0c\u8fd9\u9898\u4e0d\u96be\uff0c\u4f46\u6211\u7528\u5faa\u73af\u8fed\u4ee3\u5b9e\u73b0\u4e86\u4e4b\u540e\uff0c\u7a81\u7136\u60f3\u5230 <code>Pair</code> \u6709 <code>map</code> \u65b9\u6cd5\uff0c\u6240\u4ee5\u7a81\u53d1\u5947\u60f3\u60f3\u7528 <code>map</code> \u6765\u5b9e\u73b0(\u5229\u7528 <code>map</code> \u6765\u83b7\u53d6 <code>Pair</code> \u4e2d\u6240\u6709\u7684\u5143\u7d20)</p> code \u5b9e\u73b0\u4e00\u5b9e\u73b0\u4e8c <pre><code>class Frame(object):\n    ...\n    def make_child_frame(self, formals, vals):\n        if len(formals) != len(vals):\n            raise SchemeError('Incorrect number of arguments to function call')\n        # BEGIN PROBLEM 10\n        \"*** YOUR CODE HERE ***\"\n        child = Frame(self)\n        while formals is not nil:\n            child.define(formals.first, vals.first)\n            formals, vals = formals.rest, vals.rest\n        return child\n        # END PROBLEM 10\n</code></pre> <pre><code>class Frame(object):\n    ...\n    def make_child_frame(self, formals, vals):\n        if len(formals) != len(vals):\n            raise SchemeError('Incorrect number of arguments to function call')\n        # BEGIN PROBLEM 10\n        \"*** YOUR CODE HERE ***\"\n        child = Frame(self)\n        formals_list, vals_list = [], []\n        formals.map(lambda x: formals_list.append(x))\n        vals.map(lambda x: vals_list.append(x))\n        for formal, val in zip(formals_list, vals_list):\n            child.define(formal, val)\n        return child\n        # END PROBLEM 10\n</code></pre>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part2/#7_3","title":"7","text":"<p>Problem 13\u4e0d\u7b97\u590d\u6742\uff0c\u4f46\u6211\u5199\u51fa\u6765\u4e4b\u540e\uff0c\u62a5\u4e86\u4e00\u4e2a\u9519\u8bef</p> <pre><code>scm&gt; (cond ((= 1 1) nil))\n# Error: unknown identifier: nil\n\n# Error: expected\n#     ()\n# but got\n#     Traceback (most recent call last):\n#       ...\n#     SchemeError: unknown identifier: nil\n</code></pre> <p>\u7ecf\u8fc7\u4fee\u6539\u4ee3\u7801\u6765\u67e5\u770b\u9519\u8bef\u5730\u65b9\u7684\u76f8\u5173\u4fe1\u606f\uff0c\u8fdb\u884c\u5230\u9519\u8bef\u53d1\u751f\u7684\u5730\u65b9\u524d\uff0c\u6253\u5370 <code>clause.rest</code> \u663e\u793a <code>Pair('nil', nil)</code> \uff0c\u8fd9\u610f\u5473\u7740\u662f\u5728\u8bfb\u53d6\u7684\u65f6\u5019\u6ca1\u6709\u8bfb\u53d6\u6b63\u786e\uff0c\u4e8e\u662f\u56de\u5934\u67e5\u770bProblem 1\u7684 <code>scheme_read</code> \u548c <code>read_tail</code> \uff0c</p> <p>\u800c <code>scheme_read</code> \u4e2d\u662f\u6709\u5904\u7406 <code>'nil'</code> \u7684\u76f8\u5173\u4ee3\u7801\u7684</p> <pre><code>if val == 'nil':\n    # BEGIN PROBLEM 1\n    \"*** YOUR CODE HERE ***\"\n    return nil\n    # END PROBLEM 1\n</code></pre> <p>\u5c1d\u8bd5\u76f4\u63a5\u8fd0\u884cscheme\u89e3\u91ca\u5668\u8fdb\u884c\u6d4b\u8bd5</p> <pre><code>python scheme.py\n</code></pre> <p>\u53d1\u73b0\u76f4\u63a5\u8f93\u5165 <code>nil</code> \u65f6\uff0c\u80fd\u6b63\u786e\u8f93\u51fa\u6210\u7a7a\u94fe\u8868 <code>()</code> \uff0c\u800c\u5f53 <code>nil</code> \u88ab\u5d4c\u5957\u5305\u542b\u65f6\uff0c\u5c31\u4e0d\u80fd\u88ab\u6b63\u5e38\u8f6c\u6362\uff0c\u6240\u4ee5\u9519\u8bef\u53d1\u751f\u5728 <code>read_tail</code> \u4e2d\uff0c</p> <pre><code>scm&gt; nil\n()\nscm&gt; (+ nil)\nError: unknown identifier: nil\n</code></pre> <p>\u4e8e\u662f\u91cd\u65b0\u56de\u53bb\u7406\u89e3\u9898\u76ee\u7684\u8bf4\u660e</p> <p>Quote</p> <p><code>read_tail</code>:</p> <ul> <li>If there are no more tokens, then the list is missing a close parenthesis and we should raise an error. (provided)</li> <li>If the token is <code>)</code>, then we've reached the end of the list or pair. Remove this token from the buffer and return the <code>nil</code> object.</li> <li>If none of the above cases apply, the next token is the operator in a combination, e.g. src contains <code>+ 2 3)</code>. To parse this:<ol> <li><code>scheme_read</code> the next complete expression in the buffer.</li> <li>Call <code>read_tail</code> to read the rest of the combination until the matching closing parenthesis.</li> <li>Return the results as a <code>Pair</code> instance, where the first element is the next complete expression from (1) and the second element is the rest of the combination from (2).</li> </ol> </li> </ul> <p>\u4e09\u4e2a\u60c5\u51b5\u521a\u597d\u5bf9\u5e94\u6240\u7ed9\u7684\u4ee3\u7801\u6846\u67b6\u4e2d\u7684 <code>if-elif-else</code> \u7684\u4e09\u5757\u4ee3\u7801\uff0c\u56e0\u6b64\uff0c\u6839\u636e\u9898\u76ee\u7684\u610f\u601d\uff0c <code>else</code> \u5904\u7684\u4ee3\u7801\u5e94\u8be5\u4e3a</p> <pre><code>return Pair(scheme_read(src), read_tail(src))\n</code></pre> <p>\u6d4b\u8bd5Problem 1\u901a\u8fc7\uff0c\u518d\u6d4b\u8bd5Problem 13\uff0c\u7ec8\u4e8e\u901a\u8fc7\u4e86\ud83d\ude07</p> code <pre><code>def do_cond_form(expressions, env):\n    while expressions is not nil:\n        clause = expressions.first\n        validate_form(clause, 1)\n        if clause.first == 'else':\n            test = True\n            if expressions.rest != nil:\n                raise SchemeError('else must be last')\n        else:\n            test = scheme_eval(clause.first, env)\n        if is_true_primitive(test):\n            # BEGIN PROBLEM 13\n            \"*** YOUR CODE HERE ***\"\n            if clause.rest is nil:\n                return test\n            return eval_all(clause.rest, env)\n            # END PROBLEM 13\n        expressions = expressions.rest\n</code></pre>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part2/#8_2","title":"8","text":"<p>Problem 14\u4e2d\uff0c\u9700\u8981\u6ce8\u610f \u6709\u53ef\u80fd\u8981\u88ab\u8d4b\u503c\u7684\u7b26\u53f7\u5bf9\u5e94\u7684\u662f\u4e00\u4e2a\u8868\u8fbe\u5f0f\uff0c\u6240\u4ee5\u9700\u8981\u8fdb\u884c\u6c42\u503c</p> code <pre><code>def make_let_frame(bindings, env):\n    if not scheme_listp(bindings):\n        raise SchemeError('bad bindings list in let form')\n    names, values = nil, nil\n    # BEGIN PROBLEM 14\n    \"*** YOUR CODE HERE ***\"\n    while bindings is not nil:\n        binding = bindings.first\n        validate_form(binding, 2, 2)\n        names = Pair(binding.first, names)\n        values = Pair(scheme_eval(binding.rest.first, env), values)\n        bindings = bindings.rest\n    validate_formals(names)\n    # END PROBLEM 14\n    return env.make_child_frame(names, values)\n</code></pre>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part2/#9_2","title":"9","text":"<p>Problem 16\u611f\u89c9\u86ee\u6709\u610f\u601d</p> code <pre><code>(define (merge comp list1 list2)\n  ; BEGIN PROBLEM 16\n  'replace-this-line\n  (cond ((equal? list1 nil) list2)\n        ((equal? list2 nil) list1)\n        (else (let ((x (car list1)) (y (car list2)))\n                   (if (comp x y)\n                       (cons x (merge comp (cdr list1) list2))\n                       (cons y (merge comp list1 (cdr list2)))))))\n  )\n  ; END PROBLEM 16\n</code></pre> <p>Problem 17\u4ee3\u7801\u6709\u70b9\u7ed5(\u96be\u5199\uff0cdebug\u8d77\u6765\u4e5f\u75db\u82e6\ud83d\ude05)</p> code <pre><code>(define (nondecreaselist s)\n    ; BEGIN PROBLEM 17\n    'replace-this-line\n    (cond ((equal? s nil) nil)\n          ((equal? (cdr s) nil) (list s))\n          ((&gt; (car s) (cadr s)) (cons (list (car s)) (nondecreaselist (cdr s))))\n          (else (let ((rest (nondecreaselist (cdr s))))\n                     (cons (cons (car s) (car rest)) (cdr rest)))))\n    )\n    ; END PROBLEM 17\n</code></pre>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part2/#10_2","title":"10","text":"<p>Extra Credit\uff0c\u8fd9\u9898\u6709\u70b9\u96be\u5ea6\ud83d\ude05(\u4f9d\u6b21\u4fee\u6539\u4e86\u597d\u51e0\u6b21\u6700\u7ec8\u624d\u5168\u90e8\u901a\u8fc7)\uff0c</p> <p>\u4e00\u5f00\u59cb\u6211\u5199\u51fa\u6765</p> <pre><code>(define (let-to-lambda expr)\n  (cond ((atom? expr)\n         ; BEGIN PROBLEM EC\n         'replace-this-line\n         expr\n         ; END PROBLEM EC\n         )\n        ((quoted? expr)\n         ; BEGIN PROBLEM EC\n         'replace-this-line\n         (cons 'quote (cdr expr))\n         ; END PROBLEM EC\n         )\n        ((or (lambda? expr)\n             (define? expr))\n         (let ((form   (car expr))\n               (params (cadr expr))\n               (body   (cddr expr)))\n           ; BEGIN PROBLEM EC\n           'replace-this-line\n           (cons form (cons params body))\n           ; END PROBLEM EC\n           ))\n        ((let? expr)\n         (let ((values (cadr expr))\n               (body   (cddr expr)))\n           ; BEGIN PROBLEM EC\n           'replace-this-line\n           (let ((values (zip values)))\n                (cons (cons 'lambda (cons (car values) body)) (cadr values)))\n           ; END PROBLEM EC\n           ))\n        (else\n         ; BEGIN PROBLEM EC\n         'replace-this-line\n         expr\n         ; END PROBLEM EC\n         )))\n</code></pre> <p>\u7136\u540e\u6839\u636e\u6d4b\u8bd5\u7528\u4f8b\u7684\u9519\u8bef\uff0c\u53d1\u73b0\u8fd8\u9700\u8981\u9012\u5f52\u5730\u5e94\u7528\u8868\u8fbe\u5f0f\uff0c\u4f9d\u6b21\u53d1\u73b04\u4e2a\u5730\u65b9\u9700\u8981\u9012\u5f52\uff1a</p> <ul> <li><code>(cons form (cons params body))</code> \u7684 <code>body</code> </li> <li><code>(cons (cons 'lambda (cons (car values) body)) (cadr values)))</code> \u7684 <code>body</code> \u548c <code>(cadr values)</code> </li> <li>\u6700\u540e\u7684 <code>expr</code></li> </ul> <p>\u5e76\u4e14\u7531\u4e8e\u662f\u5f88\u591a\u4e2a\u8868\u8fbe\u5f0f\uff0c\u6240\u4ee5\u9700\u8981\u7528\u5230 <code>map</code> \u51fd\u6570</p> code <pre><code>(define (let-to-lambda expr)\n  (cond ((atom? expr)\n         ; BEGIN PROBLEM EC\n         'replace-this-line\n         expr\n         ; END PROBLEM EC\n         )\n        ((quoted? expr)\n         ; BEGIN PROBLEM EC\n         'replace-this-line\n         (cons 'quote (cdr expr))\n         ; END PROBLEM EC\n         )\n        ((or (lambda? expr)\n             (define? expr))\n         (let ((form   (car expr))\n               (params (cadr expr))\n               (body   (cddr expr)))\n           ; BEGIN PROBLEM EC\n           'replace-this-line\n           (cons form (cons params (map let-to-lambda body)))\n           ; END PROBLEM EC\n           ))\n        ((let? expr)\n         (let ((values (cadr expr))\n               (body   (cddr expr)))\n           ; BEGIN PROBLEM EC\n           'replace-this-line\n           (let ((values (zip values)))\n                (cons (cons 'lambda (cons (car values) (map let-to-lambda body))) (map let-to-lambda (cadr values))))\n           ; END PROBLEM EC\n           ))\n        (else\n         ; BEGIN PROBLEM EC\n         'replace-this-line\n         (map let-to-lambda expr)\n         ; END PROBLEM EC\n         )))\n</code></pre>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part2/#11_2","title":"11","text":"<p>Problem 11\uff0c\u8fd9\u9898\u9898\u76ee\u6211\u7406\u89e3\u4e86\u597d\u51e0\u904d\u6700\u540e\u624d\u611f\u89c9\u7b97\u662f\u5b8c\u5168\u7406\u89e3\u6b63\u786e</p> <p>Quote</p> <p>Complete the function <code>optimize_tail_calls</code> in <code>scheme.py</code>. It returns an alternative to <code>scheme_eval</code> that is properly tail recursive. That is, the interpreter will allow an unbounded number of active tail calls in constant space.</p> <p>The <code>Thunk</code> class represents a thunk, an expression that needs to be evaluated in an environment. When <code>scheme_optimized_eval</code> receives a non-atomic expression in a <code>tail</code> context, then it returns an <code>Thunk</code> instance. Otherwise, it should repeatedly call <code>prior_eval_function</code> until the result is a value, rather than a <code>Thunk</code>.</p> <p>A successful implementation will require changes to several other functions, including some functions that we provided for you. All expressions throughout your interpreter that are in a tail context should be evaluated by calling <code>scheme_eval</code> with <code>True</code> as a third argument. Your goal is to determine which expressions are in a tail context throughout your code.</p> <p>\u5728 <code>scheme.py</code> \u4e2d\u5b8c\u6210 <code>optimize_tail_calls</code> \u51fd\u6570\u3002\u5b83\u8fd4\u56de <code>scheme_eval</code> \u7684\u4e00\u79cd\u66ff\u4ee3\u65b9\u6cd5\uff0c\u53ef\u4ee5\u6b63\u786e\u5904\u7406\u5c3e\u9012\u5f52\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u89e3\u91ca\u5668\u5c06\u5141\u8bb8\u5728\u5e38\u91cf\u7a7a\u95f4\u5185\u6709\u65e0\u9650\u6570\u91cf\u7684\u6d3b\u52a8\u5c3e\u8c03\u7528\u3002</p> <p><code>Thunk</code> \u7c7b\u8868\u793a\u4e00\u4e2athunk\uff0c\u5373\u9700\u8981\u5728\u73af\u5883\u4e2d\u6c42\u503c\u7684\u8868\u8fbe\u5f0f\u3002\u5f53 <code>scheme_optimized_eval</code> \u5728 <code>\u5c3e</code> \u4e0a\u4e0b\u6587\u4e2d\u63a5\u6536\u5230\u4e00\u4e2a\u975e\u539f\u5b50\u8868\u8fbe\u5f0f\u65f6\uff0c\u5b83\u5c06\u8fd4\u56de\u4e00\u4e2a <code>Thunk</code> \u5b9e\u4f8b\u3002\u5426\u5219\uff0c\u5b83\u5e94\u8be5\u53cd\u590d\u8c03\u7528 <code>prior_eval_function</code>\uff0c\u76f4\u5230\u7ed3\u679c\u662f\u4e00\u4e2a\u503c\uff0c\u800c\u4e0d\u662f\u4e00\u4e2a <code>Thunk</code>\u3002</p> <p>\u6210\u529f\u7684\u5b9e\u73b0\u5c06\u9700\u8981\u5bf9\u5176\u4ed6\u51e0\u4e2a\u51fd\u6570\u8fdb\u884c\u66f4\u6539\uff0c\u5305\u62ec\u4e00\u4e9b\u6211\u4eec\u4e3a\u60a8\u63d0\u4f9b\u7684\u51fd\u6570\u3002 \u5728\u6574\u4e2a\u89e3\u91ca\u5668\u4e2d\uff0c\u6240\u6709\u5728\u5c3e\u4e0a\u4e0b\u6587\u4e2d\u7684\u8868\u8fbe\u5f0f\u90fd\u5e94\u901a\u8fc7\u8c03\u7528\u5e26\u6709 <code>True</code> \u4f5c\u4e3a\u7b2c\u4e09\u4e2a\u53c2\u6570\u7684 <code>scheme_eval</code> \u6765\u8fdb\u884c\u6c42\u503c\u3002\u60a8\u7684\u76ee\u6807\u662f\u786e\u5b9a\u4ee3\u7801\u4e2d\u54ea\u4e9b\u8868\u8fbe\u5f0f\u5728\u5c3e\u4e0a\u4e0b\u6587\u4e2d\u3002</p> <p>\u8fd9\u9898\u5927\u6982\u610f\u601d\u662f\uff0c\u9700\u8981\u4f18\u5316\u5904\u7406\u6c42\u503c\u90e8\u5206\uff0c\u5bf9\u4e8e \u5c3e\u9012\u5f52 tail recursive \u7684\u60c5\u51b5\u3002</p> <p>The <code>Thunk</code> class represents a thunk, an expression that needs to be evaluated in an environment. When <code>scheme_optimized_eval</code> receives a non-atomic expression in a <code>tail</code> context, then it returns an <code>Thunk</code> instance. Otherwise, it should repeatedly call <code>prior_eval_function</code> until the result is a value, rather than a <code>Thunk</code>.</p> <p>\u8fd9\u4e00\u6bb5\u5176\u5b9e\u4e0a\u6211\u8ba4\u4e3a\u5bf9\u5e94\u7684\u5c31\u662f\u63d0\u4f9b\u7684\u4ee3\u7801\u4e2d\u7684\u8fd9\u4e2a\u90e8\u5206(non-atomic \u521a\u597d\u5bf9\u5e94 <code>not scheme_symbolp(expr) and not self_evaluating(expr)</code> )</p> <pre><code>if tail and not scheme_symbolp(expr) and not self_evaluating(expr):\n    return Thunk(expr, env)\n</code></pre> <p>All expressions throughout your interpreter that are in a tail context should be evaluated by calling <code>scheme_eval</code> with <code>True</code> as a third argument. Your goal is to determine which expressions are in a tail context throughout your code.</p> <p>\u8fd9\u53e5\u8bf4\u7684\u662f\uff0c\u9898\u76ee\u7684\u5173\u952e\u5c31\u662f\u9700\u8981\u627e\u5230/\u60f3\u5230\u5224\u65ad\u5c3e\u9012\u5f52\u5f62\u5f0f/\u683c\u5f0f\u7684\u65b9\u6cd5\uff0c\u5e76\u8fdb\u884c\u5bf9\u5e94\u7684\u5904\u7406\u3002</p> <p>\u6700\u540e\u5c31\u662f\u8fd9\u4e00\u53e5\uff0c</p> <p>A successful implementation will require changes to several other functions, including some functions that we provided for you.</p> <p>\u662f\u8bf4\u6700\u7ec8\u7684\u5b9e\u73b0\u8fd8\u4f1a\u9700\u8981\u4fee\u6539\u4e00\u4e9b\u51fd\u6570\uff0c\u5305\u62ec\u63d0\u4f9b\u7684\u51fd\u6570\uff0c\u6240\u4ee5\u8fd9\u610f\u5473\u7740\u8fd9\u9898\u975e\u5e38\u5f00\u653e\uff0c\u5f88\u96be\uff0c\u6211\u5c1d\u8bd5\u4e86\u5f88\u4e45\u4e5f\u6ca1\u6709\u5c1d\u8bd5\u51fa\u6765\u3002</p> <p>\u6700\u540e\u770b\u5230 Lecture 35 \u548c 36 \u521a\u597d\u5c31\u662f Tail calls \u548c Macros \uff0c\u521a\u597d\u5206\u522b\u5bf9\u5e9419\u548c20\u9898\uff0c\u7136\u540e\u53bb\u770b\u4e86\u4e00\u4e0blecture 35\uff0c\u53d1\u73b0\u8bfe\u4e0a\u6709\u8bb2\u89e3\u8fd9\u4e00\u9898\uff0c\u6240\u4ee5\u5c31\u5148\u8df3\u8fc7\u8fd9\u4e00\u9898\u4e86\u3002(\u53d1\u73b020\u9898\u4e5f\u9700\u8981\u7528\u5230tail call\uff0c\u6240\u4ee5\u4e5f\u8df3\u8fc7\u4e86)</p>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part2/#12","title":"12","text":"<p>\u770b\u5b8c\u4e86\u6240\u6709\u8bfe\u7a0b\u4e4b\u540e\u7ee7\u7eed\u5c1d\u8bd5\u5b8c\u6210\u4e4b\u524d\u6ca1\u6709\u5b8c\u6210\u7684\u9898\u76ee\uff0c</p> <p>Problem 20 \u5b8f macro\uff0c\u8fd9\u9898\u4e0d\u7b97\u7279\u522b\u590d\u6742\uff0c\u6309\u7167\u9898\u76ee\u4e2d\u8bf4\u7684\uff0c\u5b9e\u73b0 <code>do_define_macro</code> \u51fd\u6570\u521b\u5efa\u4e00\u4e2a <code>MacroProcedure</code> \u7c7b\uff0c\u518d\u4fee\u6539\u4e00\u4e0b <code>scheme_eval</code> \u5c31\u884c\u4e86\uff0c</p> <p><code>do_define_macro</code> \u4e2d\u7684\u4ee3\u7801\u57fa\u672c\u4e0a\u53ef\u4ee5\u53c2\u8003 <code>do_define_form</code> \u7684\u4ee3\u7801\uff0c</p> <p><code>scheme_eval</code> \u4e2d\uff0c\u9700\u8981\u8c03\u7528 <code>MacroProcedure</code> \u7684 <code>apply_macro</code> \u65b9\u6cd5\uff0c\u5e76\u4e0d\u5148\u6c42\u503c\u800c\u662f\u76f4\u63a5\u4f20\u5165\u53c2\u6570\u7684\u539f\u59cb\u8868\u8fbe\u5f0f\uff0c\u4e00\u5f00\u59cb\u6211\u5199\u7684\u662f</p> <pre><code>return operator.apply_macro(rest, env)\n</code></pre> <p>\u4f46\u6d4b\u8bd5\u65f6\u663e\u793a\u8fd9\u91cc\u8fd4\u56de\u7684\u662f</p> <pre><code>scm&gt; (for i '(1 2 3)\n....      (if (= i 1)\n....          0\n....          i))\n(map (lambda (i) (if (= i 1) 0 i)) (quote (1 2 3)))\n\n# Error: expected\n#     (0 2 3)\n# but got\n#     (map (lambda (i) (if (= i 1) 0 i)) (quote (1 2 3)))\n</code></pre> <p>\u6240\u4ee5\u6700\u540e\u518d\u6dfb\u52a0\u4e00\u4e2a <code>scheme_eval</code> \u51fd\u6570\u5c31\u53ef\u4ee5\u4e86</p> code <pre><code>def do_define_macro(expressions, env):\n    # BEGIN Problem 20\n    \"*** YOUR CODE HERE ***\"\n    validate_form(expressions, 2)\n    target = expressions.first\n    if isinstance(target, Pair) and scheme_symbolp(target.first):\n        name = target.first\n        formals = target.rest\n        validate_formals(formals)\n        value = MacroProcedure(formals, expressions.rest, env)\n        env.define(name, value)\n        return name\n    else:\n        bad_target = target.first if isinstance(target, Pair) else target\n        raise SchemeError(\"non-symbol: {0}\".format(bad_target))\n    # END Problem 20\n</code></pre> <pre><code>def scheme_eval(expr, env, _=None): # Optional third argument is ignored\n    ...\n    else:\n        ...\n        validate_procedure(operator)\n        if isinstance(operator, MacroProcedure):\n            return scheme_eval(operator.apply_macro(rest, env), env)\n        ...\n</code></pre>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part2/#13","title":"13","text":"<p>Problem 19\uff0c\u505a\u8fd9\u9898\u82b1\u4e86\u597d\u4e45\u65f6\u95f4\uff0c\u4e5f\u5c1d\u8bd5\u4e86\u597d\u591a\u6b21\u3002</p> <p>\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u9898\u76ee\u4e2d\u6709\u4e00\u5904\u5199\u7684\u662f <code>prior_eval_function</code> \uff0c\u8fd9\u91cc\u53ef\u80fd\u662f\u5fd8\u8bb0\u8fdb\u884c\u4fee\u6539(20\u5e74\u590f\u5b63\u7684scheme project\u5bf9\u5e94\u7684\u4ee3\u7801\u662f <code>prior_eval_function</code> )\uff0c\u5e94\u8be5\u5bf9\u5e94\u7684\u662f\u4ee3\u7801\u4e2d\u7684 <code>original_scheme_eval</code></p> <p>\u521a\u5f00\u59cb\u662f\u89c9\u5f97\u9700\u8981\u5728 <code>optimized_eval</code> \u4e2d\u8fdb\u884c\u662f\u5426\u662f\u5c3e(\u8c03\u7528)\u683c\u5f0f(in tail context)\u7684\u5224\u65ad\uff0c\u4e8e\u662f\u5728\u51fd\u6570\u4e2d\u7f16\u5199</p> <pre><code>def in_tail_context(expr):\n    if isinstance(expr, Pair) and scheme_symbolp(expr.first):\n        first = expr.first\n        if first not in SPECIAL_FORMS and isinstance(env.lookup(first), LambdaProcedure):\n            return True\n        elif first == \"if\":\n            sub_expr_2 = expr.rest.rest.first\n            sub_expr_3 = expr.rest.rest.rest.first\n            return in_tail_context(sub_expr_2) or in_tail_context(sub_expr_3)\n        else:\n            return False\n    else:\n        return False\n</code></pre> <p>\u56e0\u4e3a\u5728lecture 35 Tail Calls\u91cc\uff0cJohn\u8bf4\u53ea\u9700\u8981\u6ce8\u610f \u6700\u540e\u7684\u8868\u8fbe\u5f0f\u662f\u8c03\u7528lambda\u51fd\u6570 \u548c <code>if</code> \u8868\u8fbe\u5f0f \u8fd9\u4e24\u79cd\u60c5\u51b5\uff0c</p> <p></p> <p>\u6240\u4ee5\u6211\u5c31\u53ea\u5bf9\u8fd9\u4e24\u79cd\u60c5\u51b5\u8fdb\u884c\u4e86\u5224\u65ad\u3002</p> <p>\u7136\u540e\uff0c\u6211\u7684\u60f3\u6cd5\u662f\uff0c\u5982\u679c\u4e0d\u7b26\u5408\u5c3e\u683c\u5f0f\uff0c\u5c31\u4f7f\u7528\u539f\u59cb\u7684eval\u51fd\u6570\uff0c\u5982\u679c\u7b26\u5408\u7684\u8bdd\uff0c\u90a3\u4e48\u5c31\u5e94\u8be5\u662f\u4f1a\u5f97\u5230 <code>Thunk</code> \u7c7b\u5b9e\u4f8b\uff0c\u90a3\u4e48\u5e94\u8be5\u5faa\u73af\u8fdb\u884c\u6c42\u503c(\u5c31\u4e0d\u4f1a\u9012\u5f52\u6ea2\u51fa)\uff0c\u4e8e\u662f</p> <pre><code>def optimize_tail_calls(original_scheme_eval):\n    def optimized_eval(expr, env, tail=False):\n        if tail and not scheme_symbolp(expr) and not self_evaluating(expr):\n            return Thunk(expr, env)\n\n        result = Thunk(expr, env)\n        # BEGIN PROBLEM 19\n        \"*** YOUR CODE HERE ***\"\n        def in_tail_context(expr):\n            ...\n\n        if not in_tail_context(expr):\n            return original_scheme_eval(expr, env)\n\n        while isinstance(result, Thunk):\n            result = original_scheme_eval(result.expr, result.env)\n        return result\n        # END PROBLEM 19\n    return optimized_eval\n</code></pre> <p>\u8fd9\u91cc\u60f3\u5230\u8981\u7528 <code>while</code> \u5faa\u73af\uff0c\u662f\u56e0\u4e3a\u539f\u59cb\u7684\u4ee3\u7801\u4e2d\u6709 <code>result = Thunk(expr, env)</code> \u611f\u89c9\u5f88\u50cf\u662f\u9700\u8981\u5faa\u73af\u8fdb\u884c\u8ba1\u7b97\u6700\u540e\u5f97\u5230\u4e0d\u662f <code>Thunk</code> \u7684 <code>result</code> \u3002</p> <p>\u4f46\u6d4b\u8bd5\u53d1\u73b0\u4e0d\u884c\uff0c</p> <p>\u7136\u540e\u634b\u4e86\u4e00\u4e0b\u4ee3\u7801\u7684\u6d41\u7a0b\uff0c\u611f\u89c9\u5e94\u8be5\u662f\u9700\u8981\u5728\u67d0\u4e2a\u81ea\u5b9a\u4e49\u7684\u5c3e\u9012\u5f52(\u6216\u8005\u8bf4body\u7b26\u5408\u5c3e\u683c\u5f0f)\u7684\u51fd\u6570\u8fd4\u56debody\u65f6\u8fd4\u56de <code>Thunk</code> (\u6240\u4ee5\u4e3a\u4e86\u8fd0\u884c\u8fd9\u4e2a\u51fd\u6570\u4e4b\u524d\u7684\u8c03\u7528\u7684eval\u548capply\u7b49\u51fd\u6570\u5c31\u53ef\u4ee5\u8fd4\u56de\u8fd9\u4e2a <code>Thunk</code> \u56e0\u6b64\u5c31\u4e0d\u4f1a\u6ea2\u51fa)\uff0c\u7136\u540e\u8fd9\u4e2a <code>Thunk</code> \u5728 <code>optimized_eval</code> \u4e2d\u88ab\u5faa\u73af\u6c42\u503c\uff0c</p> <p>\u6240\u4ee5\u89c9\u5f97\u5224\u65ad\u5c3e\u683c\u5f0f\u5e94\u8be5\u662f\u5728 <code>scheme_apply</code> \u8c03\u7528\u7684 <code>eval_all</code> \u4e2d\uff0c\u4e8e\u662f\u5c06\u4ee3\u7801\u4fee\u6539\u6210\u4e86</p> <pre><code>def eval_all(expressions, env):\n    def in_tail_context(expr):\n        ...\n\n    result = None\n    while expressions.rest is not nil:\n        result = scheme_eval(expressions.first, env)\n        expressions = expressions.rest\n    result = scheme_eval(expressions.first, env, tail=in_tail_context(expressions.first))\n    return result\n</code></pre> <p>\u8fdb\u884c\u6d4b\u8bd5\u53d1\u73b0\u4e0d\u884c\uff0c</p> <pre><code>scm&gt; (define (sum n total)\n....   (if (zero? n)\n....       total\n....       (sum (- n 1) (+ n total))))\nsum\nscm&gt; (sum 1001 0)\n</code></pre> <p>\u7136\u540e\u60f3\u5230\u662f\u7531\u4e8e\u6bcf\u6b21\u8fdb\u5165\u6700\u540e\u7684 <code>sum</code> \u65f6\uff0c\u90fd\u4f1a\u65b0\u8c03\u7528\u4e00\u4e2aeval\uff0c\u6240\u4ee5\u5c31\u4f1a\u9012\u5f52\u6ea2\u51fa\uff0c</p> <p>\u4e8e\u662f\u60f3\u5230\u4e86\u5728 <code>optimized_eval</code> \u4e2d\u76f4\u63a5\u5904\u7406\u8fd9\u4e24\u79cd\u60c5\u51b5\uff0c</p> <pre><code>while isinstance(result, Thunk):\n    if result.expr.first == \"if\":\n        result = do_if_form(result.expr.rest, result.env, in_tail=True)\n    else:\n        result = original_scheme_eval(result.expr, result.env)\n</code></pre> <p>\u5e76\u4e14\u5bf9 <code>do_if_form</code> \u8fdb\u884c\u4fee\u6539</p> <pre><code>def do_if_form(expressions, env, in_tail=False):\n    validate_form(expressions, 2, 3)\n    if is_true_primitive(scheme_eval(expressions.first, env)):\n        return scheme_eval(expressions.rest.first, env, tail=in_tail)\n    elif len(expressions) == 3:\n        return scheme_eval(expressions.rest.rest.first, env, tail=in_tail)\n</code></pre> <p>\u6dfb\u52a0 <code>in_tail</code> \u53c2\u6570\u662f\u56e0\u4e3a\uff0c\u9700\u8981\u5728\u8fd9\u91cc\u5c31\u8fd4\u56de <code>Thunk</code> \u7c7b\uff0c\u5426\u5219\u8fd8\u662f\u4f1a\u5f62\u6210\u9012\u5f52</p> <p>\u7136\u540e\u8fdb\u884c\u6d4b\u8bd5\uff0c\u53d1\u73b0\u7adf\u7136\u771f\u7684\u80fd\u901a\u8fc7\u51e0\u4e2a\u6d4b\u8bd5\u7528\u4f8b\ud83d\ude2e\uff0c\u4f46\u6ca1\u5168\u90e8\u901a\u8fc7\uff0c</p> <p>\u4f46\u662f\u611f\u89c9\u8fd9\u6837\u7684\u601d\u8def(\u5728 <code>eval_all</code> \u4e2d\u8fdb\u884c\u5c3e\u683c\u5f0f\u7684\u5224\u65ad)\u5e94\u8be5\u53ef\u4ee5\u901a\u8fc7\u6d4b\u8bd5\uff0c\u4e8e\u662f\u5c06 <code>optimized_eval</code> \u6539\u6210\u4e86</p> <pre><code>def optimized_eval(expr, env, tail=False):\n    if tail and not scheme_symbolp(expr) and not self_evaluating(expr):\n        return Thunk(expr, env)\n\n    result = Thunk(expr, env)\n    # BEGIN PROBLEM 19\n    \"*** YOUR CODE HERE ***\"\n    result = original_scheme_eval(expr, env)\n\n    while isinstance(result, Thunk):\n        rest_expr, env = result.expr.rest, result.env\n        if result.expr.first == \"if\":\n            result = do_if_form(rest_expr, env, in_tail=True)\n        else:\n            result = original_scheme_eval(result.expr, env)\n    return result\n    # END PROBLEM 19\n</code></pre> <p>\u7136\u540e\u6d4b\u8bd5\u53d1\u73b0\u53ea\u901a\u8fc7\u4e86\u4e24\u4e2a\u4f8b\u5b50\uff0c\u88ab\u5361\u5728\u4e86\u7b2c3\u4e2a\u4f8b\u5b50\u4e0a\uff0c\u8fd9\u4e2a\u4f8b\u5b50\u4f7f\u7528\u4e86 <code>cond</code> \uff0c\u6240\u4ee5\u9700\u8981\u5bf9\u8fd9\u79cd\u60c5\u51b5\u8fdb\u884c\u5904\u7406\uff0c</p> <p>\u4e8e\u662f\u4fee\u6539 <code>eval_all</code> \u4e2d\u7684 <code>in_tail_context</code> </p> <pre><code>def in_tail_context(expr):\n    if not isinstance(expr, Pair):\n        return True\n\n    if isinstance(expr, Pair) and scheme_symbolp(expr.first):\n        first = expr.first\n        if first not in SPECIAL_FORMS and isinstance(env.lookup(first), LambdaProcedure):\n            return True\n        elif first == \"if\":\n            sub_expr_2 = expr.rest.rest.first\n            sub_expr_3 = expr.rest.rest.rest.first\n            return in_tail_context(sub_expr_2) and in_tail_context(sub_expr_3)\n        elif first == \"cond\":\n            non_preds = []\n            cond_expr = expr.rest\n            while cond_expr is not nil:\n                non_pred = True\n                sub_expr = cond_expr.first\n                while sub_expr.rest is not nil:\n                    non_pred = sub_expr.rest.first\n                    sub_expr = sub_expr.rest\n                non_preds += [non_pred]\n                cond_expr = cond_expr.rest\n            return all([in_tail_context(x) for x in non_preds])\n        else:\n            return False\n    else:\n        return False\n</code></pre> <p>\u7136\u540e\u53d1\u73b0\uff0c\u53ef\u80fd\u662f\u7531\u4e8e <code>do_cond_form</code> \u4e2d\u6700\u540e\u8c03\u7528\u7684\u662f <code>eval_all</code> (\u5176\u4e2d\u6709\u5224\u65ad\u5c3e\u5f62\u5f0f\u7684\u4ee3\u7801)\u6240\u4ee5\u5c31\u53ef\u4ee5\u4f7f\u7528\u539f\u672c\u7684eval\u6765\u5904\u7406 <code>cond</code> \u7684\u60c5\u51b5\uff0c</p> <p>\u7136\u540e\u6d4b\u8bd5\u88ab\u7b2c5\u4e2a\u4f8b\u5b50 <code>let</code> \u8bed\u53e5\u5361\u4f4f\uff0c\u4e8e\u662f\u7ee7\u7eed\u5728 <code>in_tail_context</code> \u4e2d\u6dfb\u52a0\u5224\u65ad\u7684\u60c5\u51b5\uff0c</p> <pre><code>def in_tail_context(expr):\n    ...\n    if isinstance(expr, Pair) and scheme_symbolp(expr.first):\n        first = expr.first\n        if first not in SPECIAL_FORMS and isinstance(env.lookup(first), LambdaProcedure):\n            ...\n        elif first == \"let\":\n            # return True\n            let_expr = expr.rest.rest\n            while let_expr.rest is not nil:\n                let_expr = let_expr.rest\n            return in_tail_context(let_expr.first)\n        else:\n            return False\n    else:\n        return False\n</code></pre> <p>\u518d\u6d4b\u8bd5\uff0c\u88ab\u7b2c6\u4e2a\u4f8b\u5b50 <code>or</code> \u548c <code>and</code> \u5361\u4f4f\uff0c</p> <p>\u7136\u540e\u770b\u4e86\u4e00\u4e0b\u4e4b\u524d\u7684ppt\uff0c<code>and</code> <code>or</code> <code>begin</code> \u7684\u60c5\u51b5\u5dee\u4e0d\u591a\uff0c\u6240\u4ee5\u5c31\u4e00\u8d77\u5224\u65ad\u4e86</p> <pre><code>def in_tail_context(expr):\n    ...\n    if ...:\n        ...\n        elif first in (\"and\", \"or\", \"begin\"):\n            return True\n        else:\n            return False\n    else:\n        return False\n</code></pre> <p>\u7136\u540e\u5bf9\u5e94\u5728 <code>do_and_form</code> \u548c <code>do_or_form</code> \u4e2d\u8fdb\u884c\u4fee\u6539</p> <p><code>do_begin_form</code> \u7531\u4e8e\u548c\u4e4b\u524d\u7684 <code>do_cond_form</code> \u4e00\u6837\u6700\u540e\u8c03\u7528\u7684\u662f <code>eval_all</code> \u6240\u4ee5\u5c31\u4e0d\u7528\u4fee\u6539</p> <pre><code>def do_and_form(expressions, env, in_tail=False):\n    result = \"#t\"\n    while expressions is not nil:\n        if not isinstance(expressions.first, Pair):\n            result = scheme_eval(expressions.first, env)\n        elif in_tail and scheme_symbolp(expressions.first.first):\n            first = expressions.first.first\n            if first not in SPECIAL_FORMS and isinstance(env.lookup(first), LambdaProcedure):\n                result = scheme_eval(expressions.first, env, tail=True)\n            else:\n                result = scheme_eval(expressions.first, env)\n        else:\n            result = scheme_eval(expressions.first, env)\n\n        if is_false_primitive(result) or isinstance(result, Thunk):\n            break\n        expressions = expressions.rest\n    return result\n\ndef do_or_form(expressions, env, in_tail=False):\n    result = \"#f\"\n    while expressions is not nil:\n        if not isinstance(expressions.first, Pair):\n            result = scheme_eval(expressions.first, env)\n        elif in_tail and scheme_symbolp(expressions.first.first):\n            first = expressions.first.first\n            if first not in SPECIAL_FORMS and isinstance(env.lookup(first), LambdaProcedure):\n                result = scheme_eval(expressions.first, env, tail=True)\n            else:\n                result = scheme_eval(expressions.first, env)\n        else:\n            result = scheme_eval(expressions.first, env)\n\n        if is_true_primitive(result) or isinstance(result, Thunk):\n            break\n        expressions = expressions.rest\n    return result\n</code></pre> <p>\u6700\u540e\u5728 <code>optimized_eval</code> \u4e2d</p> <pre><code>def optimized_eval(expr, env, tail=False):\n    ...\n    # BEGIN PROBLEM 19\n    \"*** YOUR CODE HERE ***\"\n    result = original_scheme_eval(expr, env)\n    while isinstance(result, Thunk):\n        rest_expr, env = result.expr.rest, result.env\n        if result.expr.first in (\"if\", \"and\", \"or\"):\n            result = SPECIAL_FORMS[result.expr.first](rest_expr, env, in_tail=True)\n        else:\n            result = original_scheme_eval(result.expr, env)\n    return result\n</code></pre> <p>\u6700\u540e\u6d4b\u8bd5\uff0c\u7ec8\u4e8e\u5168\u90e8\u901a\u8fc7\u4e86\ud83d\ude2d\uff0c\u603b\u7b97\u662f\u5168\u90e8\u5b8c\u6210\u4e86\u8fd9\u4e2aproject</p> code <pre><code>def optimize_tail_calls(original_scheme_eval):\n    def optimized_eval(expr, env, tail=False):\n        if tail and not scheme_symbolp(expr) and not self_evaluating(expr):\n            return Thunk(expr, env)\n\n        result = Thunk(expr, env)\n        # BEGIN PROBLEM 19\n        \"*** YOUR CODE HERE ***\"\n        result = original_scheme_eval(expr, env)\n        while isinstance(result, Thunk):\n            rest_expr, env = result.expr.rest, result.env\n            if result.expr.first in (\"if\", \"and\", \"or\"):\n                result = SPECIAL_FORMS[result.expr.first](rest_expr, env, in_tail=True)\n            else:\n                result = original_scheme_eval(result.expr, env)\n        return result\n        # END PROBLEM 19\n    return optimized_eval\n</code></pre> <pre><code>def eval_all(expressions, env):\n    # BEGIN PROBLEM 7\n    # return scheme_eval(expressions.first, env) # replace this with lines of your own code\n\n    # result = None\n    # while expressions is not nil:\n    #     result = scheme_eval(expressions.first, env)\n    #     expressions = expressions.rest\n    # return result\n\n    def in_tail_context(expr):\n        if not isinstance(expr, Pair):\n            return True\n\n        if isinstance(expr, Pair) and scheme_symbolp(expr.first):\n            first = expr.first\n            if first not in SPECIAL_FORMS and isinstance(env.lookup(first), LambdaProcedure):\n                return True\n            elif first == \"if\":\n                sub_expr_2 = expr.rest.rest.first\n                sub_expr_3 = expr.rest.rest.rest.first\n                return in_tail_context(sub_expr_2) and in_tail_context(sub_expr_3)\n            elif first == \"cond\":\n                non_preds = []\n                cond_expr = expr.rest\n                while cond_expr is not nil:\n                    non_pred = True\n                    sub_expr = cond_expr.first\n                    while sub_expr.rest is not nil:\n                        non_pred = sub_expr.rest.first\n                        sub_expr = sub_expr.rest\n                    non_preds += [non_pred]\n                    cond_expr = cond_expr.rest\n                return all([in_tail_context(x) for x in non_preds])\n            elif first == \"let\":\n                let_expr = expr.rest.rest\n                while let_expr.rest is not nil:\n                    let_expr = let_expr.rest\n                return in_tail_context(let_expr.first)\n            elif first in (\"and\", \"or\", \"begin\"):\n                return True\n            else:\n                return False\n        else:\n            return False\n\n    if expressions is nil:\n        return\n    result = None\n    while expressions.rest is not nil:\n        result = scheme_eval(expressions.first, env)\n        expressions = expressions.rest\n    result = scheme_eval(expressions.first, env, tail=in_tail_context(expressions.first))\n    return result\n    # END PROBLEM 7\n</code></pre> <pre><code>def do_if_form(expressions, env, in_tail=False):\n    validate_form(expressions, 2, 3)\n    if is_true_primitive(scheme_eval(expressions.first, env)):\n        return scheme_eval(expressions.rest.first, env, tail=in_tail)\n    elif len(expressions) == 3:\n        return scheme_eval(expressions.rest.rest.first, env, tail=in_tail)\n</code></pre> <pre><code>def do_and_form(expressions, env, in_tail=False):\n    # BEGIN PROBLEM 12\n    \"*** YOUR CODE HERE ***\"\n    result = \"#t\"\n    while expressions is not nil:\n        # result = scheme_eval(expressions.first, env)\n        # if is_false_primitive(result):\n        #     return result\n        # expressions = expressions.rest\n\n        if not isinstance(expressions.first, Pair):\n            result = scheme_eval(expressions.first, env)\n        elif in_tail and scheme_symbolp(expressions.first.first):\n            first = expressions.first.first\n            if first not in SPECIAL_FORMS and isinstance(env.lookup(first), LambdaProcedure):\n                result = scheme_eval(expressions.first, env, tail=True)\n            else:\n                result = scheme_eval(expressions.first, env)\n        else:\n            result = scheme_eval(expressions.first, env)\n\n        if is_false_primitive(result) or isinstance(result, Thunk):\n            break\n        expressions = expressions.rest\n    return result\n    # END PROBLEM 12\n\ndef do_or_form(expressions, env, in_tail=False):\n    # BEGIN PROBLEM 12\n    \"*** YOUR CODE HERE ***\"\n    result = \"#f\"\n    while expressions is not nil:\n        # result = scheme_eval(expressions.first, env)\n        # if is_true_primitive(result):\n        #     return result\n        # expressions = expressions.rest\n\n        if not isinstance(expressions.first, Pair):\n            result = scheme_eval(expressions.first, env)\n        elif in_tail and scheme_symbolp(expressions.first.first):\n            first = expressions.first.first\n            if first not in SPECIAL_FORMS and isinstance(env.lookup(first), LambdaProcedure):\n                result = scheme_eval(expressions.first, env, tail=True)\n            else:\n                result = scheme_eval(expressions.first, env)\n        else:\n            result = scheme_eval(expressions.first, env)\n\n        if is_true_primitive(result) or isinstance(result, Thunk):\n            break\n        expressions = expressions.rest\n    return result\n    # END PROBLEM 12\n</code></pre>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part3/","title":"CS61A Part 3","text":"<p> \u7ea6 16893 \u4e2a\u5b57  1674 \u884c\u4ee3\u7801  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 77 \u5206\u949f</p> \u76ee\u5f55 <ul> <li>Lecture 31 Declarative Programming</li> <li>Lecture 32 Tables</li> <li>Lecture 32 Q&amp;A</li> <li>Lab 12</li> <li>Lecture 33 Aggregation</li> <li>Lecture 33 Q&amp;A</li> <li>Lecture 34 Database</li> <li>Lecture 34 Q&amp;A</li> <li>HW 09</li> <li>Lecture 35 Tail Calls</li> <li>Lab 13</li> <li>Lecture 36 Macros</li> <li>Lab 14</li> <li>Lecture 36 Q&amp;A</li> <li>Lecture 37 Final Examples</li> <li>Lecture 37 Q&amp;A</li> <li>Lecture 38 Conclusion</li> </ul>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part3/#lecture-31-declarative-programming","title":"Lecture 31 Declarative Programming","text":""},{"location":"Notes%20of%20Courses/CS61A/CS61A_part3/#1","title":"1","text":"<p>John\u89e3\u91ca\u4ec0\u4e48\u662f \u58f0\u660e\u5f0f\u8bed\u8a00 declarative language \uff0c\u4ee5\u53ca\u548c \u547d\u4ee4\u5f0f\u8bed\u8a00 imperative language \u7684\u533a\u522b\uff0c</p> <p>\u4e3b\u8981\u5728\u4e8e\uff0c\u547d\u4ee4\u5f0f\u8bed\u8a00\u53ea\u4f1a\u56fa\u5b9a\u5730\u6267\u884c\u5199\u597d\u7684\u7a0b\u5e8f\uff0c\u800c\u58f0\u660e\u5f0f\u8bed\u8a00\u4f1a\u6839\u636e\u9700\u8981\u5904\u7406\u7684\u60c5\u51b5\u6765\u81ea\u5df1\u9009\u62e9\u5408\u9002\u7684\u5904\u7406\u65b9\u6cd5</p> <p>Quote</p> <p>John:</p> <p>SQL is a declarative programming language. What's that? Well, in a declarative language, SQL is the most common example, but there are many others such as Prolog. A program is a description of the desired result that you want your computer to generate. The interpreter's job is to figure out how to generate that result for you. That's different from an imperative language, such as Python or Scheme. In an imperative language, when you write a program in that language, it's a description of some computational process or processes that you want to be carried out. The job of an interpreter in an imperative language is to carry out the execution and evaluation rules in order to have a correctly interpreted program, and you've done this in your project.</p> <p>So, there's more flexibility in a declarative language interpreter. We'll see what I mean by that in time, but here's a place to start: in an imperative language, if you write a quadratic time algorithm by specifying that computational process, it's probably gonna run in quadratic time. But in a declarative language, you just say what you want, and if there are multiple ways to compute that, one of which runs in quadratic time and one of which runs in linear time, well, it's up to the interpreter to choose among those options in order to compute what you want as efficiently as possible.</p> <p>So, a lot of the interesting research in declarative languages is in making decisions about how to compute the desired result, given that there are many ways to compute it correctly, but some of them are faster than others.</p> <p>John:</p> <p>SQL\u662f\u4e00\u79cd\u58f0\u660e\u5f0f\u7f16\u7a0b\u8bed\u8a00\u3002\u90a3\u662f\u4ec0\u4e48\uff1f\u55ef\uff0c\u5728\u58f0\u660e\u5f0f\u8bed\u8a00\u4e2d\uff0cSQL\u662f\u6700\u5e38\u89c1\u7684\u4f8b\u5b50\uff0c\u4f46\u8fd8\u6709\u8bb8\u591a\u5176\u4ed6\u8bed\u8a00\uff0c\u6bd4\u5982Prolog\u3002\u7a0b\u5e8f\u662f\u5bf9\u4f60\u60f3\u8ba9\u8ba1\u7b97\u673a\u751f\u6210\u7684\u671f\u671b\u7ed3\u679c\u7684\u63cf\u8ff0\u3002\u89e3\u91ca\u5668\u7684\u4efb\u52a1\u662f\u5f04\u6e05\u695a\u5982\u4f55\u4e3a\u4f60\u751f\u6210\u8be5\u7ed3\u679c\u3002\u8fd9\u4e0e\u547d\u4ee4\u5f0f\u8bed\u8a00\u4e0d\u540c\uff0c\u6bd4\u5982Python\u6216Scheme\u3002\u5728\u547d\u4ee4\u5f0f\u8bed\u8a00\u4e2d\uff0c\u5f53\u4f60\u5728\u8be5\u8bed\u8a00\u4e2d\u7f16\u5199\u7a0b\u5e8f\u65f6\uff0c\u5b83\u662f\u5bf9\u4f60\u60f3\u6267\u884c\u7684\u4e00\u4e9b\u8ba1\u7b97\u8fc7\u7a0b\u6216\u8fc7\u7a0b\u7684\u63cf\u8ff0\u3002\u547d\u4ee4\u5f0f\u8bed\u8a00\u4e2d\u89e3\u91ca\u5668\u7684\u4efb\u52a1\u662f\u6267\u884c\u6267\u884c\u548c\u8bc4\u4f30\u89c4\u5219\uff0c\u4ee5\u786e\u4fdd\u6b63\u786e\u89e3\u91ca\u7a0b\u5e8f\uff0c\u800c\u4f60\u5728\u9879\u76ee\u4e2d\u5df2\u7ecf\u505a\u5230\u4e86\u8fd9\u4e00\u70b9\u3002</p> <p>\u56e0\u6b64\uff0c\u5728\u58f0\u660e\u5f0f\u8bed\u8a00\u89e3\u91ca\u5668\u4e2d\u6709\u66f4\u591a\u7684\u7075\u6d3b\u6027\u3002\u6211\u4eec\u4f1a\u5728\u540e\u9762\u8be6\u7ec6\u8ba8\u8bba\u8fd9\u4e00\u70b9\uff0c\u4f46\u8fd9\u91cc\u662f\u4e00\u4e2a\u8d77\u70b9\uff1a\u5728\u547d\u4ee4\u5f0f\u8bed\u8a00\u4e2d\uff0c\u5982\u679c\u4f60\u901a\u8fc7\u6307\u5b9a\u8ba1\u7b97\u8fc7\u7a0b\u6765\u7f16\u5199\u4e00\u4e2a\u4e8c\u6b21\u65f6\u95f4\u590d\u6742\u5ea6\u7684\u7b97\u6cd5\uff0c\u5b83\u53ef\u80fd\u4f1a\u8fd0\u884c\u5728\u4e8c\u6b21\u65f6\u95f4\u590d\u6742\u5ea6\u3002\u4f46\u5728\u58f0\u660e\u5f0f\u8bed\u8a00\u4e2d\uff0c\u4f60\u53ea\u9700\u8bf4\u660e\u4f60\u60f3\u8981\u7684\u7ed3\u679c\uff0c\u5982\u679c\u6709\u591a\u79cd\u8ba1\u7b97\u8be5\u7ed3\u679c\u7684\u65b9\u5f0f\uff0c\u5176\u4e2d\u4e00\u79cd\u662f\u4e8c\u6b21\u65f6\u95f4\u590d\u6742\u5ea6\uff0c\u53e6\u4e00\u79cd\u662f\u7ebf\u6027\u65f6\u95f4\u590d\u6742\u5ea6\uff0c\u90a3\u4e48\u7531\u89e3\u91ca\u5668\u6765\u5728\u8fd9\u4e9b\u9009\u9879\u4e2d\u9009\u62e9\uff0c\u4ee5\u5c3d\u53ef\u80fd\u9ad8\u6548\u5730\u8ba1\u7b97\u51fa\u4f60\u60f3\u8981\u7684\u7ed3\u679c\u3002</p> <p>\u56e0\u6b64\uff0c\u5728\u58f0\u660e\u5f0f\u8bed\u8a00\u4e2d\uff0c\u5173\u4e8e\u5982\u4f55\u8ba1\u7b97\u671f\u671b\u7ed3\u679c\u7684\u6709\u8da3\u7814\u7a76\u5f88\u591a\uff0c\u9274\u4e8e\u6709\u8bb8\u591a\u6b63\u786e\u8ba1\u7b97\u7ed3\u679c\u7684\u65b9\u5f0f\uff0c\u4f46\u5176\u4e2d\u4e00\u4e9b\u6bd4\u5176\u4ed6\u65b9\u5f0f\u66f4\u5feb\u3002</p>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part3/#2","title":"2","text":"<p>SQL\u8bed\u8a00\u7684\u4e00\u4e9b\u57fa\u672c\u8bed\u53e5\uff0cJohn\u8bf4(\u9664\u4e86 <code>select</code> <code>create table</code> )\u5176\u4ed6\u7684\u8bed\u53e5\u5bf9\u4e8e\u7406\u89e3SQL\u7684\u6838\u5fc3\u4e0d\u592a\u91cd\u8981</p> <p>Quote</p> <p>John:</p> <p>...They're important if you're actually going to use one of these systems in a large industrial application, but they're not too important for understanding the heart of how SQL works. Most of the important action is in the SELECT statement.</p> <p>John:</p> <p>...\u5b83\u4eec\u5728\u5b9e\u9645\u5e94\u7528\u4e8e\u5927\u578b\u5de5\u4e1a\u5e94\u7528\u7a0b\u5e8f\u65f6\u975e\u5e38\u91cd\u8981\uff0c\u4f46\u5bf9\u4e8e\u7406\u89e3 SQL \u5de5\u4f5c\u7684\u6838\u5fc3\u5e76\u4e0d\u592a\u91cd\u8981\u3002\u5927\u90e8\u5206\u91cd\u8981\u7684\u64cd\u4f5c\u90fd\u5728 SELECT \u8bed\u53e5\u4e2d\u3002</p>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part3/#3","title":"3","text":"<p><code>select</code> \u8bed\u53e5\u7684\u57fa\u672c\u7528\u6cd5</p> <pre><code>select [expression] as [name], [expression] as [name], ... ;\n</code></pre> <p>\u5206\u53f7 <code>;</code> \u8868\u793a\u7ed3\u675f\uff0c <code>as [name]</code> \u90e8\u5206\u662f\u53ef\u9009\u7684\u3002</p> <p>\u4e00\u4e2a <code>select</code> \u8bed\u53e5\u53ea\u4f1a\u751f\u6210\u4e00\u4e2a\u4e00\u884c\u7684\u6570\u636e\u8868\uff0c\u53ef\u4ee5\u4f7f\u7528 <code>union</code> \u5c06\u591a\u4e2a\u8868\u5408\u5e76\uff0c\u5408\u5e76\u8981\u6c42\u4e24\u4e2a\u8868\u7684\u5217\u6570\u662f\u4e00\u6837\u7684\uff0c\u4f7f\u7528\u7b2c\u4e00\u4e2a\u8868\u7684\u5217\u540d\u4f5c\u4e3a\u65b0\u8868\u7684\u5217\u540d(\u6240\u4ee5\u53ef\u4ee5\u770b\u5230\u5c55\u793a\u7684\u4ee3\u7801\u4e2d\uff0c\u4e4b\u540e <code>select</code> \u8bed\u53e5(\u5373\u4e4b\u540e\u7684\u8868)\u90fd\u53ef\u4ee5\u4e0d\u7528\u6dfb\u52a0\u5217\u540d\u4e0d\u7528\u5199 <code>as [name]</code> )</p> <p>Quote</p> <p>John:</p> <p>...If you <code>select</code> literals, which are expressions like the number <code>2</code> or the string <code>\"Berkeley\"</code> , that will create a one-row table. But if you want to create a multi-row table, you can union together two <code>select</code> statements. The union of two <code>select</code> statements is another table, but it contains the rows of both. You can only union together tables that have the same number of columns and the same type of information in each column. But the two <code>select</code> statements that you union together don't need to have the same names for the columns; it will just use the names of the first <code>select</code> statement in order to name the columns in the final result.</p> <p>John:</p> <p>...\u5982\u679c\u4f60\u9009\u62e9\uff08 <code>select</code> \uff09\u5b57\u9762\u91cf\uff0c\u8fd9\u4e9b\u8868\u8fbe\u5f0f\u53ef\u4ee5\u662f\u50cf\u6570\u5b57 <code>2</code> \u6216\u5b57\u7b26\u4e32 <code>\"Berkeley\"</code> \u8fd9\u6837\u7684\u8868\u8fbe\u5f0f\uff0c\u90a3\u5c06\u521b\u5efa\u4e00\u4e2a\u4e00\u884c\u7684\u8868\u3002\u4f46\u5982\u679c\u4f60\u60f3\u521b\u5efa\u4e00\u4e2a\u591a\u884c\u7684\u8868\uff0c\u4f60\u53ef\u4ee5\u5c06\u4e24\u4e2a <code>select</code> \u8bed\u53e5\u8054\u5408\u5728\u4e00\u8d77\u3002\u4e24\u4e2a <code>select</code> \u8bed\u53e5\u7684\u8054\u5408\u662f\u53e6\u4e00\u4e2a\u8868\uff0c\u4f46\u5b83\u5305\u542b\u4e86\u4e24\u8005\u7684\u884c\u3002\u4f60\u53ea\u80fd\u8054\u5408\u90a3\u4e9b\u5177\u6709\u76f8\u540c\u5217\u6570\u548c\u6bcf\u5217\u76f8\u540c\u7c7b\u578b\u4fe1\u606f\u7684\u8868\u3002\u4f46\u4f60\u8054\u5408\u5728\u4e00\u8d77\u7684\u4e24\u4e2a <code>select</code> \u8bed\u53e5\u7684\u5217\u540d\u4e0d\u9700\u8981\u76f8\u540c\uff1b\u5b83\u5c06\u53ea\u4f7f\u7528\u7b2c\u4e00\u4e2a <code>select</code> \u8bed\u53e5\u7684\u5217\u540d\u6765\u547d\u540d\u6700\u7ec8\u7ed3\u679c\u4e2d\u7684\u5217\u3002</p> <p></p> <p><code>select</code> \u8bed\u53e5\u53ea\u4f1a\u5c55\u793a\u6570\u636e\u8868\uff0c\u4f46\u5e76\u4e0d\u4f1a\u5c06\u6570\u636e\u8868\u50a8\u5b58\uff0c\u6240\u4ee5\u5982\u679c\u9700\u8981\u50a8\u5b58\u6570\u636e\u8868\uff0c\u53ef\u4ee5\u4f7f\u7528 <code>create table</code> \u8bed\u53e5(\u5982\u4e0a\u56fe)</p>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part3/#4","title":"4","text":"<p>\u7528 <code>select</code> \u8bed\u53e5\u6765 \u6295\u5f71 project \u73b0\u6709\u6570\u636e\u8868</p> <p>project\u5b98\u65b9\u7684\u7ffb\u8bd1\u662f\u6295\u5f71\uff0c\u4f46\u6211\u89c9\u5f97\u8fd9\u91cc\u7406\u89e3\u4e3a \u5904\u7406 \u4e5f\u53ef\u4ee5</p> <p></p> <p>\u53ef\u4ee5\u7528 <code>from</code> \u6765\u9009\u62e9\u4e00\u4e2a\u5df2\u6709\u7684\u8868\uff0c\u53ef\u4ee5\u7528 <code>where</code> \u6765\u7b5b\u9009\u7b26\u5408\u6761\u4ef6\u7684\u884c(\u611f\u89c9\u6709\u70b9\u50cfpython\u5217\u8868\u63a8\u5230\u5f0f\u4e2d\u7684 <code>if</code> )\uff0c\u53ef\u4ee5\u7528 <code>order by</code> \u6765\u7ed9\u65b0\u8868\u8bbe\u7f6e\u6392\u5e8f\u89c4\u5219</p> <p>\u5728John\u7684demo\u6f14\u793a\u4e2d\uff0c\u4f7f\u7528 <code>*</code> \u6765\u9009\u62e9\u6240\u6709\u5217</p> <pre><code>select * from parents;\n</code></pre> <p></p>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part3/#5","title":"5","text":"<p><code>select</code> \u8bed\u53e5\u4e2d\u4e5f\u53ef\u4ee5\u8fdb\u884c\u6570\u5b66\u7684\u5904\u7406(\u5982\u4e0a\u56fe)</p>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part3/#6","title":"6","text":"<p>\u5728 sql \u7ec8\u7aef\u4e2d\uff0c\u53ef\u4ee5\u4f7f\u7528 <code>-init xxx.sql</code> \u6765\u52a0\u8f7d <code>.sql</code> \u6587\u4ef6</p> <p>John\u63d0\u5230 <code>select * from ints</code> \u540e\uff0c\u65b0\u8868\u4e0e\u539f\u8868\u987a\u5e8f\u4e0d\u4e00\u81f4\u7684\u73b0\u8c61</p> <p>Quote</p> <p>John:</p> <p>Notice something quite interesting. These rows don't appear in the order that I wrote them out in the first place. When you union together a bunch of <code>select</code> statements, you get no guarantees about the order of the result. That's up to the declarative programming engine, which tries to compute the result efficiently.</p> <p>Now, one thing that <code>union</code> does is it discards repeats, and the way that it discards repeats in some cases is to sort all the rows to look for whether there's repetition. And that's exactly what happened here. So, you can see that it's written all of these in an alphabetical order according to the word, which is not what I asked for in the first place, but that's what I got.</p> <p>And this is one of the properties of declarative programming languages. There's no particular procedure that's defined in advance that tells me how to compute the result of unioning together a bunch of <code>select</code> statements. Instead, it's up to the system to create the correct result in whatever way it chooses, and that might involve building the table in a different order than you might expect.</p> <p>John:</p> <p>\u8bf7\u6ce8\u610f\u4e00\u4e9b\u76f8\u5f53\u6709\u8da3\u7684\u4e8b\u60c5\u3002\u8fd9\u4e9b\u884c\u5e76\u4e0d\u6309\u7167\u6211\u6700\u521d\u5199\u51fa\u5b83\u4eec\u7684\u987a\u5e8f\u51fa\u73b0\u3002\u5f53\u4f60\u8054\u5408\u4e00\u5806 <code>select</code> \u8bed\u53e5\u65f6\uff0c\u4f60\u65e0\u6cd5\u4fdd\u8bc1\u7ed3\u679c\u7684\u987a\u5e8f\u3002\u8fd9\u7531\u58f0\u660e\u6027\u7f16\u7a0b\u5f15\u64ce\u51b3\u5b9a\uff0c\u5b83\u8bd5\u56fe\u6709\u6548\u5730\u8ba1\u7b97\u7ed3\u679c\u3002</p> <p>\u73b0\u5728\uff0c <code>union</code> \u7684\u4e00\u9879\u529f\u80fd\u662f\u4e22\u5f03\u91cd\u590d\u9879\uff0c\u800c\u5728\u67d0\u4e9b\u60c5\u51b5\u4e0b\u4e22\u5f03\u91cd\u590d\u9879\u7684\u65b9\u6cd5\u662f\u5bf9\u6240\u6709\u884c\u8fdb\u884c\u6392\u5e8f\uff0c\u4ee5\u67e5\u770b\u662f\u5426\u6709\u91cd\u590d\u3002\u8fd9\u6b63\u662f\u8fd9\u91cc\u53d1\u751f\u7684\u60c5\u51b5\u3002\u6240\u4ee5\u4f60\u53ef\u4ee5\u770b\u5230\uff0c\u5b83\u6309\u7167\u5355\u8bcd\u7684\u5b57\u6bcd\u987a\u5e8f\u5199\u51fa\u4e86\u6240\u6709\u8fd9\u4e9b\uff0c\u8fd9\u4e0d\u662f\u6211\u6700\u521d\u8981\u6c42\u7684\uff0c\u4f46\u8fd9\u5c31\u662f\u6211\u5f97\u5230\u7684\u7ed3\u679c\u3002</p> <p>\u8fd9\u662f\u58f0\u660e\u6027\u7f16\u7a0b\u8bed\u8a00\u7684\u4e00\u4e2a\u7279\u6027\u3002\u6ca1\u6709\u9884\u5148\u5b9a\u4e49\u7684\u7279\u5b9a\u8fc7\u7a0b\u544a\u8bc9\u6211\u5982\u4f55\u8ba1\u7b97\u8054\u5408\u4e00\u5806 <code>select</code> \u8bed\u53e5\u7684\u7ed3\u679c\u3002\u76f8\u53cd\uff0c\u8fd9\u53d6\u51b3\u4e8e\u7cfb\u7edf\u4ee5\u4efb\u4f55\u5b83\u9009\u62e9\u7684\u65b9\u5f0f\u521b\u5efa\u6b63\u786e\u7684\u7ed3\u679c\uff0c\u8fd9\u53ef\u80fd\u6d89\u53ca\u4ee5\u4e0e\u4f60\u671f\u671b\u7684\u4e0d\u540c\u7684\u987a\u5e8f\u6784\u5efa\u8868\u3002</p>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part3/#7","title":"7","text":"<p>\u95ee\u9898B\uff0c\u6700\u540eJohn\u7528\u4e86\u4e00\u79cd\u6211\u6ca1\u60f3\u5230\u7684\u65b9\u6cd5\ud83d\ude02\uff0c</p> <pre><code>select word from ints\nwhere one + two/2 + four/4 + eight/8 = 1;\n</code></pre> <p>\u5373\u5224\u65ad\u662f\u5426\u53ea\u6709\u4e00\u4e2a\u4e3a\u6b63\uff0c</p> <p>\u6211\u60f3\u5230\u7684\u662f\uff0c\u5c061 2 4 8\u52a0\u8d77\u6765(\u7b97\u81ea\u5df1\u7684\u503c)\u7136\u540e\u53d6\u6a21\u4e3a\u96f6(\u4f46\u4e0d\u77e5\u9053sql\u4e2d\u6709\u6ca1\u6709\u53d6\u6a21\u8fd0\u7b97\uff0c\u6709\u7684\u8bdd\u5e94\u8be5\u5c31\u53ef\u884c)</p>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part3/#lecture-32-tables","title":"Lecture 32 Tables","text":""},{"location":"Notes%20of%20Courses/CS61A/CS61A_part3/#1_1","title":"1","text":"<p>\u8054\u63a5 join \u4e24\u4e2a\u8868\u7684\u65b9\u6cd5\uff0c\u4f7f\u7528 \u9017\u53f7 <code>,</code> \u6765\u8054\u63a5\uff0c\u7ed3\u679c\u662f\u5f97\u5230\u4e00\u4e2a\u6bcf\u4e2a\u8868\u7684\u6bcf\u4e00\u884c\u4e0e\u5176\u4ed6\u8868\u7684\u6bcf\u4e00\u884c\u7ec4\u5408\u7684\u65b0\u7684\u8868(\u4ece\u4e0a\u56feJohn\u7684demo\u6f14\u793a\u4e2d\u53ef\u4ee5\u770b\u5230)</p> <p></p> <p>\u5982\u679c\u9047\u5230\u4e0d\u540c\u7684\u8868\u6709\u76f8\u540c\u540d\u5b57\u7684\u5217\uff0c\u6216\u8005\u9700\u8981\u4f7f\u7528\u540c\u4e00\u4e2a\u8868(\u5982\u4e0a\u56fe)\uff0c\u5c31\u9700\u8981\u4f7f\u7528 \u522b\u540d alias ( <code>from [table] as [alias]</code> )\uff0c\u7136\u540e\u4f7f\u7528 \u70b9\u8868\u8fbe\u5f0f <code>.</code> \u6765\u4f7f\u7528\u4e0d\u540c\u8868/\u522b\u540d\u4e2d\u7684\u76f8\u540c\u540d\u5b57\u7684\u5217</p> <p>John\u5c55\u793a\u4e86\u8054\u63a5\u2018\u591a\u4e2a\u8868\u7684\u5e94\u7528\uff0c</p> <p></p> <p>\u7b5b\u9009\u51fa\u7956\u7236\u548c\u5b59\u5b50\u6bdb\u53d1\u7c7b\u578b\u4e00\u6837\u7684\u6570\u636e</p> <pre><code>select grandog from grandparents, dogs as c, dogs as d\n  where grandog = c.name and\n        granpup = d.name and\n        c.fur = d.fur;\n</code></pre>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part3/#2_1","title":"2","text":"<p>sql\u4e2d\u7684\u4e00\u4e9b\u6570\u5b66\u8fd0\u7b97\u76f8\u5173\u7684\u8868\u8fbe\u5f0f\uff0c</p> <p>\u5176\u4e2d\u4e0d\u7b49\u53f7\u6709\u4e24\u79cd <code>&lt;&gt;</code> \u548c <code>!=</code> \uff0c\u800c\u7b49\u53f7\u662f <code>=</code> (\u548cpython\u4e2d\u7684 <code>==</code> \u4e0d\u4e00\u6837)</p>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part3/#3_1","title":"3","text":"<p>John\u5c55\u793a\u7684sql\u4e2d\u5b57\u7b26\u4e32string\u7684\u4e00\u4e9b\u7528\u6cd5\uff0c</p> <ul> <li> <p>\u5b57\u7b26\u4e32\u7684 \u8fde\u63a5 concatenation\uff0c\u4f7f\u7528 <code>||</code> \u53ef\u4ee5\u5c06\u4e24\u4e2a\u5b57\u7b26\u4e32\u8fde\u63a5\uff0c</p> </li> <li> <p>\u5b50\u5b57\u7b26\u4e32 <code>substr</code> \uff0c\u7b2c\u4e00\u4e2a\u4f4d\u7f6e\u662f\u5b57\u7b26\u4e32\uff0c\u7b2c\u4e8c\u4e2a\u4f4d\u7f6e\u662f\u8d77\u59cb\u5b57\u7b26\u7684\u4f4d\u7f6e(\u4ece1\u5f00\u59cb)\uff0c\u7b2c\u4e09\u4e2a\u4f4d\u7f6e\u662f\u5b50\u4e32\u957f\u5ea6</p> <p>\u6240\u4ee5\u4e0a\u56fe\u4e2d\uff0c <code>substr(s, 4, 2)</code> \u7684\u7ed3\u679c\u662f <code>lo</code></p> </li> <li> <p>\u5b57\u7b26\u4e32\u4e2d\u5b57\u7b26\u7684\u4f4d\u7f6e <code>instr</code> \uff0c\u7b2c\u4e00\u4e2a\u4f4d\u7f6e\u662f\u5b57\u7b26\u4e32\uff0c\u7b2c\u4e8c\u4e2a\u4f4d\u7f6e\u662f\u8981\u627e\u7684\u5b57\u7b26(\u53ef\u80fd\u5b50\u5b57\u7b26\u4e32\u4e5f\u53ef\u4ee5)\uff0c\u7136\u540e\u8fd4\u56de\u7b2c\u4e00\u4e2a\u5bf9\u5e94\u7684\u4f4d\u7f6e</p> </li> </ul>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part3/#lecture-32-qa","title":"Lecture 32 Q&amp;A","text":""},{"location":"Notes%20of%20Courses/CS61A/CS61A_part3/#1_2","title":"1","text":"<p>\u6709\u4eba\u63d0\u95ee\u5230 \u52a8\u6001\u4f5c\u7528\u57df dynamic scope \uff0cJohn\u89e3\u91ca\u4e86\u8fd9\u4e2a\u6982\u5ff5\u4e00\u4e9b\u76f8\u5173\u4fe1\u606f</p> <p>Quote</p> <p>John:</p> <p>...Dynamic scope, which is different from lexical scope, is what you're used to. Lexical scope basically says that all of the variables within a function can be identified just by looking at the code. This is true in Python; if you have an inner function like the <code>adder</code> function within <code>make_adder</code>, you can see all the names within the <code>adder</code> function in the code. They might be part of the <code>adder</code> function; they might be part of the <code>make_adder</code> function, the enclosing scope, but they're all kind of there. That's what's called lexical scope. It's the most common way in which programming languages work.</p> <p>In other offerings of this course, we talk about an alternative called dynamic scope, which is hardly ever used. It's kind of interesting intellectually, and there are a few cases where it gets used, but mostly it doesn't exist in modern programming languages. So, for that reason, it's fine to just not know about it. But if you want to know about it, the story is basically that when you call a function, that function's environment inherits all of the names that already existed from wherever it was called. That means when you look at the body of the function, it might have names in it that you just can't see anywhere in the code because they're actually defined where that function is called, maybe in a different file or something like that.</p> <p>Dynamic scope allows you to set up your environment and then make a function call, which is pretty different from lexical scope where you have to pass in everything that's relevant. But for that reason, it can simplify some things where, instead of passing in several different arguments, you just kind of have them already, and you don't have to pass any of them in. So, that's kind of the story with dynamic scope. It's just the same as lexical scope, except for the parent of a frame is always the frame from which that function was called, as opposed to where that function was defined.</p> <p>John:</p> <p>...\u52a8\u6001\u4f5c\u7528\u57df\uff08dynamic scope\uff09\u4e0e\u8bcd\u6cd5\u4f5c\u7528\u57df\uff08lexical scope\uff09\u4e0d\u540c\uff0c\u800c\u4f60\u53ef\u80fd\u5df2\u7ecf\u4e60\u60ef\u4e86\u8bcd\u6cd5\u4f5c\u7528\u57df\u3002\u8bcd\u6cd5\u4f5c\u7528\u57df\u57fa\u672c\u4e0a\u8868\u793a\u4e00\u4e2a\u51fd\u6570\u5185\u7684\u6240\u6709\u53d8\u91cf\u90fd\u53ef\u4ee5\u901a\u8fc7\u67e5\u770b\u4ee3\u7801\u6765\u786e\u5b9a\u3002\u5728Python\u4e2d\u662f\u8fd9\u6837\u7684\uff1b\u5982\u679c\u4f60\u6709\u4e00\u4e2a\u5185\u90e8\u51fd\u6570\uff0c\u6bd4\u5982\u5728 <code>make_adder</code> \u5185\u7684 <code>adder</code> \u51fd\u6570\uff0c\u4f60\u53ef\u4ee5\u5728\u4ee3\u7801\u4e2d\u770b\u5230 <code>adder</code> \u51fd\u6570\u4e2d\u7684\u6240\u6709\u540d\u79f0\u3002\u5b83\u4eec\u53ef\u80fd\u662f <code>adder</code> \u51fd\u6570\u7684\u4e00\u90e8\u5206\uff1b\u5b83\u4eec\u53ef\u80fd\u662f <code>make_adder</code> \u51fd\u6570\u7684\u4e00\u90e8\u5206\uff0c\u5373\u5c01\u95ed\u4f5c\u7528\u57df\uff0c\u4f46\u5b83\u4eec\u90fd\u5728\u90a3\u91cc\u3002\u8fd9\u5c31\u662f\u6240\u8c13\u7684\u8bcd\u6cd5\u4f5c\u7528\u57df\uff0c\u8fd9\u662f\u5927\u591a\u6570\u7f16\u7a0b\u8bed\u8a00\u5de5\u4f5c\u7684\u6700\u5e38\u89c1\u65b9\u5f0f\u3002</p> <p>\u5728\u672c\u8bfe\u7a0b\u7684\u5176\u4ed6\u90e8\u5206\uff0c\u6211\u4eec\u8c08\u5230\u4e86\u4e00\u79cd\u53eb\u505a\u52a8\u6001\u4f5c\u7528\u57df\u7684\u66ff\u4ee3\u65b9\u6848\uff0c\u4f46\u5b83\u51e0\u4e4e\u4ece\u4e0d\u88ab\u4f7f\u7528\u3002\u4ece\u667a\u529b\u4e0a\u8bb2\uff0c\u5b83\u6709\u70b9\u6709\u8da3\uff0c\u800c\u4e14\u6709\u4e00\u4e9b\u60c5\u51b5\u4e0b\u4f1a\u7528\u5230\uff0c\u4f46\u5728\u73b0\u4ee3\u7f16\u7a0b\u8bed\u8a00\u4e2d\u5b83\u57fa\u672c\u4e0d\u5b58\u5728\u3002\u56e0\u6b64\uff0c\u51fa\u4e8e\u8fd9\u4e2a\u539f\u56e0\uff0c\u4f60\u53ef\u4ee5\u4e0d\u4e86\u89e3\u5b83\u3002\u4f46\u5982\u679c\u4f60\u60f3\u4e86\u89e3\uff0c\u6545\u4e8b\u57fa\u672c\u4e0a\u662f\uff0c\u5f53\u4f60\u8c03\u7528\u4e00\u4e2a\u51fd\u6570\u65f6\uff0c\u8be5\u51fd\u6570\u7684\u73af\u5883\u7ee7\u627f\u4e86\u4ece\u5b83\u88ab\u8c03\u7528\u7684\u4efb\u4f55\u5730\u65b9\u5df2\u7ecf\u5b58\u5728\u7684\u6240\u6709\u540d\u79f0\u3002\u8fd9\u610f\u5473\u7740\u5f53\u4f60\u67e5\u770b\u51fd\u6570\u7684\u4e3b\u4f53\u65f6\uff0c\u5b83\u53ef\u80fd\u5305\u542b\u5728\u4ee3\u7801\u4e2d\u4f60\u65e0\u6cd5\u770b\u5230\u7684\u540d\u79f0\uff0c\u56e0\u4e3a\u5b83\u4eec\u5b9e\u9645\u4e0a\u662f\u5728\u8c03\u7528\u8be5\u51fd\u6570\u7684\u5730\u65b9\u5b9a\u4e49\u7684\uff0c\u53ef\u80fd\u5728\u4e0d\u540c\u7684\u6587\u4ef6\u4e2d\u7b49\u3002</p> <p>\u52a8\u6001\u4f5c\u7528\u57df\u5141\u8bb8\u4f60\u8bbe\u7f6e\u4f60\u7684\u73af\u5883\u7136\u540e\u8fdb\u884c\u51fd\u6570\u8c03\u7528\uff0c\u8fd9\u4e0e\u8bcd\u6cd5\u4f5c\u7528\u57df\u76f8\u5f53\u4e0d\u540c\uff0c\u5728\u8bcd\u6cd5\u4f5c\u7528\u57df\u4e2d\uff0c\u4f60\u5fc5\u987b\u4f20\u5165\u6240\u6709\u76f8\u5173\u7684\u5185\u5bb9\u3002\u4f46\u56e0\u4e3a\u8fd9\u4e2a\u539f\u56e0\uff0c\u5b83\u53ef\u4ee5\u7b80\u5316\u4e00\u4e9b\u4e8b\u60c5\uff0c\u800c\u4e0d\u662f\u4f20\u9012\u591a\u4e2a\u4e0d\u540c\u7684\u53c2\u6570\uff0c\u4f60\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528\u5b83\u4eec\uff0c\u800c\u65e0\u9700\u4f20\u9012\u5b83\u4eec\u3002\u56e0\u6b64\uff0c\u8fd9\u5c31\u662f\u52a8\u6001\u4f5c\u7528\u57df\u7684\u6545\u4e8b\uff0c\u5b83\u4e0e\u8bcd\u6cd5\u4f5c\u7528\u57df\u57fa\u672c\u76f8\u540c\uff0c\u53ea\u662f\u4e00\u4e2a\u6846\u67b6\u7684\u7236\u7ea7\u59cb\u7ec8\u662f\u8c03\u7528\u8be5\u51fd\u6570\u7684\u6846\u67b6\uff0c\u800c\u4e0d\u662f\u5b9a\u4e49\u8be5\u51fd\u6570\u7684\u5730\u65b9\u3002</p> <p>\u5173\u4e8e\u52a8\u6001\u4f5c\u7528\u57df\uff0c\u6211\u89c9\u5f97\u5173\u952e\u7684\u5730\u65b9\u5728\u4e8e\uff0c\u51fd\u6570\u5185\u90e8\u7684\u53c2\u6570\u662f\u57fa\u4e8e\u88ab\u8c03\u7528\u65f6\u7684\u73af\u5883\u7684</p>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part3/#2_2","title":"2","text":"<p>John\u4e3e\u4f8b\u89e3\u91ca\u9053scheme\u4e2d\u8868\u8fbe\u5f0f\u6c42\u503c\u7684\u987a\u5e8f</p> <pre><code>(if (= (+ 1 2) 3) (print 5) (print 6))\n\n--------------------------------------\n    -------------\n     - ------- -\n        - - -     \n                  ---------\n                   ----- -\n\n(define (cube x) (* x x x))\n\n---------------------------\n\n(cube (+ 1 2))\n\n--------------\n ---- -------\n       - - -\n\n                 ---------\n                  - - - -\n</code></pre> <p>\u53ef\u4ee5\u770b\u5230\u662f\u5148\u8fdb\u884c\u8868\u8fbe\u5f0f\u7684\u6c42\u503c\uff0c\u7136\u540e\u518d\u53bb\u5bf9\u8868\u8fbe\u5f0f\u5185\u90e8\u7684\u5b57\u8fdb\u884c\u6c42\u503c</p>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part3/#lab-12","title":"Lab 12","text":""},{"location":"Notes%20of%20Courses/CS61A/CS61A_part3/#1_3","title":"1","text":"<p>\u8fd9\u4e2alab\u4e2d\u9700\u8981\u8fd0\u884c\u547d\u4ee4</p> <pre><code>python sqlite_shell.py --init lab12.sql\n</code></pre> <p>\u6765\u52a0\u8f7d <code>lab12.sql</code> \u6587\u4ef6\u4ee5\u53ca\u542f\u52a8sql\u7684\u7ec8\u7aef\uff0c\u4f46\u662f\u57282020\u5e74\u79cb\u5b63\u8bfe\u7a0b\u7f51\u9875(\u4e0d\u77e5\u4ec0\u4e48\u539f\u56e0)\u7ed9\u51fa\u7684 <code>lab12.zip</code> \u4e2d\uff0c <code>sqlite_shell.py</code> \u662f\u4e2a\u7a7a\u6587\u4ef6\uff0c</p> <p>\u7136\u540e\u6211\u5c31\u53bb\u67e5\u770b\u4e86lab\u7f51\u9875\u4e2d\u7684 <code>Troubleshooting</code> \uff0c\u8fd9\u91cc\u63d0\u5230\u4e86\u53e6\u4e00\u79cd\u66ff\u4ee3\u65b9\u6cd5</p> <p>If running <code>python3 sqlite_shell.py</code> didn't work, you can download a precompiled sqlite directly by following the following instructions and then use <code>sqlite3</code> and <code>./sqlite3</code> instead of <code>python3 sqlite_shell.py</code> based on which is specified for your platform.</p> <p>\u5728SQLite\u5b98\u7f51\u4e0b\u8f7d\u5df2\u7ecf\u7f16\u8bd1\u597d\u7684\u53ef\u6267\u884c\u6587\u4ef6\uff0c\u4e8e\u662f\u6211\u6309\u7167\u7f51\u9875\u4e0a\u7684\u6307\u793a\u4e0b\u8f7d\u597d\u4e86 <code>sqlite-tools-win-x64-3450100.zip</code> \uff0c\u7136\u540e\u80fd\u5728\u7ec8\u7aef\u6b63\u5e38\u6253\u5f00 <code>sqlite.exe</code> \uff0c\u4f46\u662f\u6211\u5728\u4f7f\u7528\u547d\u4ee4</p> <pre><code>./sqlite3 &lt; lab12.sql\n</code></pre> <p>\u548c</p> <pre><code>./sqlite3 --init lab12.sql\n</code></pre> <p>\u52a0\u8f7d <code>lab12.sql</code> \u65f6\uff0c\u90fd\u663e\u793a\u76f8\u540c\u7684\u62a5\u9519</p> <pre><code>-- Loading resources from lab12.sql\nParse error near line 4: no such column: 11/13/2020 14:28:25\n   \"Image 3\", 129                   UNION    SELECT \"11/13/2020 14:28:25\"\n                                      error here ---^\nParse error near line 401: no such column: 11/13/2020 14:28:25\n  True\" , \"False\", \"False\", \"False\" UNION    SELECT \"11/13/2020 14:28:25\"\n                                      error here ---^\n...\n</code></pre> <p>\u4e0d\u77e5\u9053\u662f\u4ec0\u4e48\u539f\u56e0\u3002</p> <p>\u4e4b\u540e\u6211\u5206\u522b\u53bb\u67e5\u770b\u4e8623\u300121\u300119\u5e74\u79cb\u5b63\u7684\u5bf9\u5e94\u7684SQL\u7684lab(lab12\u6216lab13)\uff0c\u8fd9\u51e0\u4e2a\u5b66\u671f\u7684sql lab\u538b\u7f29\u5305\u5185\u7684 <code>sqlite_shell.py</code> \u6587\u4ef6\u90fd\u4e0d\u662f\u7a7a\u6587\u4ef6\uff0c\u5e76\u4e14\u4f3c\u4e4e\u4e09\u4e2a\u5b66\u671f\u7684 <code>sqlite_shell.py</code> \u6587\u4ef6\u54c8\u5e0c\u503c\u90fd\u4e00\u6837(\u8bf4\u660e\u662f\u540c\u4e00\u4e2a\u6587\u4ef6)\uff0c\u4e8e\u662f\u6211\u5c31\u5c0623\u79cb\u5b63\u7684 <code>sqlite_shell.py</code> \u89e3\u538b\u66ff\u6362\u4e86\u539f\u6709\u7684\u6587\u4ef6\uff0c\u6700\u540e\u53ef\u4ee5\u8fd0\u884c\u6700\u521d\u7684\u547d\u4ee4\u3002</p> sqlite_shell.py sqlite_shell.py<pre><code>#!/usr/bin/env python\n\n# Licensed under the MIT license\n\n# A simple SQLite shell that uses the built-in Python adapter.\n\nimport codecs\nimport io\nimport os\nimport sys\nimport sqlite3\nimport time\nimport warnings\n\ntry: FileNotFoundError\nexcept NameError: FileNotFoundError = OSError\n\nif str != bytes: buffer = bytes\nif str != bytes: unicode = str\n\ntry: import msvcrt\nexcept ImportError: msvcrt = None\n\nCP_UTF8 = 65001\npythonapi = None\nif msvcrt:\n    import ctypes\n    (BOOL, DWORD, HANDLE, UINT) = (ctypes.c_long, ctypes.c_ulong, ctypes.c_void_p, ctypes.c_uint)\n    GetConsoleCP = ctypes.WINFUNCTYPE(UINT)(('GetConsoleCP', ctypes.windll.kernel32))\n    SetConsoleCP = ctypes.WINFUNCTYPE(BOOL, UINT)(('SetConsoleCP', ctypes.windll.kernel32))\n    GetConsoleOutputCP = ctypes.WINFUNCTYPE(UINT)(('GetConsoleOutputCP', ctypes.windll.kernel32))\n    SetConsoleOutputCP = ctypes.WINFUNCTYPE(BOOL, UINT)(('SetConsoleOutputCP', ctypes.windll.kernel32))\n    GetConsoleMode = ctypes.WINFUNCTYPE(BOOL, HANDLE, ctypes.POINTER(DWORD), use_last_error=True)(('GetConsoleMode', ctypes.windll.kernel32))\n    GetNumberOfConsoleInputEvents = ctypes.WINFUNCTYPE(BOOL, HANDLE, ctypes.POINTER(DWORD), use_last_error=True)(('GetNumberOfConsoleInputEvents', ctypes.windll.kernel32))\n    ReadConsoleW = ctypes.WINFUNCTYPE(BOOL, HANDLE, ctypes.c_void_p, DWORD, ctypes.POINTER(DWORD), ctypes.c_void_p, use_last_error=True)(('ReadConsoleW', ctypes.windll.kernel32))\n    WriteConsoleW = ctypes.WINFUNCTYPE(BOOL, HANDLE, ctypes.c_void_p, DWORD, ctypes.POINTER(DWORD), ctypes.c_void_p, use_last_error=True)(('WriteConsoleW', ctypes.windll.kernel32))\n    class Py_buffer(ctypes.Structure): _fields_ = [('buf', ctypes.c_void_p), ('obj', ctypes.py_object), ('len', ctypes.c_ssize_t), ('itemsize', ctypes.c_ssize_t), ('readonly', ctypes.c_int), ('ndim', ctypes.c_int), ('format', ctypes.c_char_p), ('shape', ctypes.POINTER(ctypes.c_ssize_t)), ('strides', ctypes.POINTER(ctypes.c_ssize_t)), ('suboffsets', ctypes.POINTER(ctypes.c_ssize_t))] + ([('smalltable', ctypes.c_ssize_t * 2)] if sys.version_info[0] &lt;= 2 else []) + [('internal', ctypes.c_void_p)]\n    try: from ctypes import pythonapi\n    except ImportError: pass\nif pythonapi:\n    def getbuffer(b, writable):\n        arr = Py_buffer()\n        pythonapi.PyObject_GetBuffer(ctypes.py_object(b), ctypes.byref(arr), ctypes.c_int(writable))\n        try: buf = (ctypes.c_ubyte * arr.len).from_address(arr.buf)\n        finally: pythonapi.PyBuffer_Release(ctypes.byref(arr))\n        return buf\n\nENCODING = 'utf-8'\n\nif sys.version_info[0] &lt; 3:\n    class NotASurrogateError(Exception): pass\n    def surrogateescape_handler(exc):\n        # Source: https://github.com/PythonCharmers/python-future/blob/aef57391c0cd58bf840dff5e2bc2c8c0f5b0a1b4/src/future/utils/surrogateescape.py\n        mystring = exc.object[exc.start:exc.end]\n        try:\n            if isinstance(exc, UnicodeDecodeError):\n                decoded = []\n                for ch in mystring:\n                    if isinstance(ch, int):\n                        code = ch\n                    else:\n                        code = ord(ch)\n                    if 0x80 &lt;= code &lt;= 0xFF:\n                        decoded.append(unichr(0xDC00 + code))\n                    elif code &lt;= 0x7F:\n                        decoded.append(unichr(code))\n                    else:\n                        raise NotASurrogateError()\n                decoded = str().join(decoded)\n            elif isinstance(exc, UnicodeEncodeError):\n                decoded = []\n                for ch in mystring:\n                    code = ord(ch)\n                    if not 0xD800 &lt;= code &lt;= 0xDCFF:\n                        raise NotASurrogateError()\n                    if 0xDC00 &lt;= code &lt;= 0xDC7F:\n                        decoded.append(unichr(code - 0xDC00))\n                    elif code &lt;= 0xDCFF:\n                        decoded.append(unichr(code - 0xDC00))\n                    else:\n                        raise NotASurrogateError()\n                decoded = str().join(decoded)\n            else:\n                raise exc\n        except NotASurrogateError:\n            raise exc\n        return (decoded, exc.end)\n    codecs.register_error('surrogateescape', surrogateescape_handler)\n\ndef exception_encode(ex, codec):\n    if str == bytes:\n        reduced = ex.__reduce__()\n        ex = reduced[0](*tuple(map(lambda arg: codec.decode(arg)[0] if isinstance(arg, bytes) else arg, reduced[1])))\n    return ex\n\ndef sql_commands(read_line):\n    delims = ['\"', \"'\", ';', '--']\n    counter = 0\n    in_string = None\n    j = i = 0\n    prev_line = None\n    line = None\n    concat = []\n    while True:\n        if line is None:\n            while True:  # process preprocessor directives\n                counter += 1\n                not_in_the_middle_of_any_input = not in_string and i == j and all(map(lambda chunk_: len(chunk_) == 0, concat))\n                line = read_line(counter - 1, not_in_the_middle_of_any_input, prev_line)\n                empty_string = line[:0] if line is not None else line\n                prev_line = line\n                if not line:\n                    break\n                if not_in_the_middle_of_any_input and line.startswith(\".\"):\n                    yield line\n                    line = None\n                else:\n                    break\n            if not line:\n                break\n            j = i = 0\n        if j &lt; len(line):\n            (j, delim) = min(map(lambda pair: pair if pair[0] &gt;= 0 else (len(line), pair[1]), map(lambda d: (line.find(d, j), d), in_string or delims if in_string != '--' else \"\\n\")))\n            if i &lt; j: concat.append(line[i:j]); i = j\n            if not in_string:\n                if j &lt; len(line):\n                    j += len(delim)\n                    if delim == ';':\n                        i = j\n                        concat.append(line[j : j + len(delim)])    # ensure delimeter is the same type as the string (it may not be due to implicit conversion)\n                        # Eat up any further spaces until a newline\n                        while j &lt; len(line):\n                            delim = line[j:j+1]\n                            if not delim.isspace(): break\n                            j += 1\n                            if delim == \"\\n\": break\n                        if i &lt; j: concat.append(line[i:j]); i = j\n                        yield empty_string.join(concat)\n                        del concat[:]\n                    else:\n                        in_string = delim\n            else:\n                if j &lt; len(line):\n                    ch = line[j:j+1]\n                    assert ch == in_string or in_string == '--'\n                    j += 1\n                    i = j\n                    concat.append(ch)\n                    in_string = None\n        else:\n            if i &lt; j: concat.append(line[i:j]); i = j\n            line = None\n\nclass WindowsConsoleIOMixin(object):\n    # Ctrl+C handling with ReadFile() is messed up on Windows starting on Windows 8... here's some background reading:\n    #   https://stackoverflow.com/a/43260436\n    #   https://github.com/microsoft/terminal/issues/334\n    # We use ReadConsole when we can, so it doesn't affect us, but it's good info to know regardless.\n    def __init__(self, fd):\n        assert isatty(fd), \"file descriptor must refer to a console (note that on Windows, NUL satisfies isatty(), but is not a console)\"\n        self.fd = fd\n        self.handle = msvcrt.get_osfhandle(fd)\n    def fileno(self): return self.fd\n    def isatty(self): return isatty(self.fd)\n    def seekable(self): return False\n    def readable(self): return GetNumberOfConsoleInputEvents(self.handle, ctypes.byref(DWORD(0))) != 0\n    def writable(self): n = DWORD(0); return WriteConsoleW(self.handle, ctypes.c_void_p(), n, ctypes.byref(n), ctypes.c_void_p()) != 0\n    def readwcharsinto(self, buf, n):\n        nr = DWORD(n)\n        old_error = ctypes.get_last_error()\n        ctypes.set_last_error(0)\n        success = ReadConsoleW(self.handle, buf, nr, ctypes.byref(nr), ctypes.c_void_p())\n        error = ctypes.get_last_error()\n        ctypes.set_last_error(old_error)\n        if not success: raise ctypes.WinError(error)\n        ERROR_OPERATION_ABORTED = 995\n        if nr.value == 0 and error == ERROR_OPERATION_ABORTED:\n            # Apparently this can trigger pending KeyboardInterrupts?\n            time.sleep(1.0 / (1 &lt;&lt; 64))\n            raise KeyboardInterrupt()  # If Python doesn't raise it, we can\n        return nr.value\n    def writewchars(self, buf, n):\n        nw = DWORD(n)\n        if not WriteConsoleW(self.handle, buf, nw, ctypes.byref(nw), ctypes.c_void_p()):\n            raise ctypes.WinError()\n        return nw.value\n\nclass WindowsConsoleRawIO(WindowsConsoleIOMixin, io.RawIOBase):\n    def readinto(self, b):\n        wordsize = ctypes.sizeof(ctypes.c_wchar)\n        return self.readwcharsinto(getbuffer(b, True), len(b) // wordsize) * wordsize\n    def write(self, b):\n        wordsize = ctypes.sizeof(ctypes.c_wchar)\n        return self.writewchars(getbuffer(b, False), len(b) // wordsize) * wordsize\n\nclass WindowsConsoleTextIO(WindowsConsoleIOMixin, io.TextIOBase):\n    buf = None\n    buffered = unicode()\n    translate = True\n    def getbuf(self, ncodeunits):\n        buf = self.buf\n        if buf is None or len(buf) &lt; ncodeunits:\n            self.buf = buf = ctypes.create_unicode_buffer(ncodeunits)\n        return buf\n    @staticmethod  # Don't let classes override this... they can override the caller instead\n    def do_read(self, nchars, translate_newlines):\n        prenewline = os.linesep[:-1]\n        newline = os.linesep[-1:]\n        empty = os.linesep[:0]\n        if nchars is None or nchars &lt; -1: nchars = -1\n        ncodeunits = nchars if nchars &gt;= 0 else io.DEFAULT_BUFFER_SIZE  # Unit mismatch, but doesn't matter; we'll loop\n        buf = None\n        istart = 0\n        while True:\n            iend = self.buffered.find(newline, istart, min(istart + nchars, len(self.buffered)) if nchars &gt;= 0 else None) if newline is not None else nchars\n            if iend &gt;= 0: iend += len(newline) if newline is not None else 0\n            if 0 &lt;= iend &lt;= len(self.buffered):\n                break\n            if buf is None: buf = self.getbuf(ncodeunits)\n            istart = len(self.buffered)\n            chunk = buf[:self.readwcharsinto(buf, ncodeunits)]\n            if translate_newlines: chunk = chunk.replace(prenewline, empty)\n            if chunk.startswith('\\x1A'):  # EOF on Windows (Ctrl+Z) at the beginning of a line results in the entire rest of the buffer being discarded\n                iend = istart\n                break\n            # Python 2 and Python 3 behaviors differ on Windows... Python 2's sys.stdin.readline() just deletes the next character if it sees EOF in the middle of a string! I won't emulate that here.\n            self.buffered += chunk  # We're relying on Python's concatenation optimization here... we don't do it ourselves, since we want self.buffered to be valid every iteration in case there is an exception raised\n        result = self.buffered[:iend]\n        self.buffered = self.buffered[iend:]\n        return result\n    def read(self, nchars=-1): return WindowsConsoleTextIO.do_read(self, nchars, None, self.translate)\n    def readline(self, nchars=-1): return WindowsConsoleTextIO.do_read(self, nchars, self.translate)\n    def write(self, text): buf = ctypes.create_unicode_buffer(text); return self.writewchars(buf, max(len(buf) - 1, 0))\n\ndef wrap_windows_console_io(stream, is_output):\n    fd = None\n    if stream is not None and sys.version_info[0] &lt; 3 and msvcrt and (is_output or pythonapi) and isatty(stream):\n        try: fd = stream.fileno()\n        except io.UnsupportedOperation: pass\n    result = stream\n    if fd is not None:\n        f = GetConsoleOutputCP if is_output else GetConsoleCP\n        if not f or f() != CP_UTF8:\n            try:\n                if True or is_output:\n                    result = WindowsConsoleTextIO(fd)\n                else:\n                    result = io.TextIOWrapper((io.BufferedWriter if is_output else io.BufferedReader)(WindowsConsoleRawIO(fd)), 'utf-16-le', 'strict', line_buffering=True)\n            except IOError: pass\n    return result\n\nclass NonOwningTextIOWrapper(io.TextIOWrapper):\n    def __init__(self, base_textiowrapper, **kwargs):\n        assert isinstance(base_textiowrapper, io.TextIOWrapper)\n        self.base = base_textiowrapper  # must keep a reference to this alive so it doesn't get closed\n        super(NonOwningTextIOWrapper, self).__init__(base_textiowrapper.buffer, **kwargs)\n    def close(self):\n        super(NonOwningTextIOWrapper, self).flush()\n\ndef wrap_unicode_stdio(stream, is_writer, encoding):  # The underlying stream must NOT be used directly until the stream returned by this function is disposed of\n    if isinstance(stream, io.TextIOWrapper):\n        stream.flush()  # Make sure nothing is left in the buffer before we re-wrap it\n        none = object()\n        kwargs = {}\n        for key in ['encoding', 'errors', 'newline', 'line_buffering', 'write_through']:\n            value = getattr(stream, 'newlines' if key == 'newline' else key, none)\n            if value is not none:\n                kwargs[key] = value\n        kwargs['encoding'] = encoding\n        result = NonOwningTextIOWrapper(stream, **kwargs)\n    elif 'PYTHONIOENCODING' not in os.environ and str == bytes and stream in (sys.stdin, sys.stdout, sys.stderr):\n        result = (codecs.getwriter if is_writer else codecs.getreader)(encoding)(stream)\n    else:\n        result = stream\n    return result\n\nclass StringEscapeParser(object):\n    def __init__(self):\n        import re\n        self.pattern = re.compile(\"\\\"((?:[^\\\"\\\\n]+|\\\\\\\\.)*)(?:\\\"|$)|\\'([^\\'\\\\n]*)(?:\\'|$)|(\\\\S+)\")\n        self.escape_pattern = re.compile(\"\\\\\\\\(.)\", re.DOTALL)\n    @staticmethod\n    def escape_replacement(m):\n        text = m.group(1)\n        if text == \"\\\\\": text = \"\\\\\"\n        elif text == \"/\": text = \"\\n\"\n        elif text == \"n\": text = \"\\n\"\n        elif text == \"r\": text = \"\\r\"\n        elif text == \"t\": text = \"\\t\"\n        elif text == \"v\": text = \"\\v\"\n        elif text == \"f\": text = \"\\f\"\n        elif text == \"a\": text = \"\\a\"\n        elif text == \"b\": text = \"\\b\"\n        return text\n    def __call__(self, s):\n        escape_pattern = self.escape_pattern\n        escape_replacement = self.escape_replacement\n        result = []\n        for match in self.pattern.finditer(s):\n            [m1, m2, m3] = match.groups()\n            if m1 is not None: result.append(escape_pattern.sub(escape_replacement, m1))\n            if m2 is not None: result.append(m2)\n            if m3 is not None: result.append(escape_pattern.sub(escape_replacement, m3))\n        return result\n\nclass Database(object):\n    def __init__(self, name, *args, **kwargs):\n        self.connection = sqlite3.connect(name, *args, **kwargs)\n        self.cursor = self.connection.cursor()\n        self.name = name  # assign name only AFTER cursor is created\n\ndef isatty(file_or_fd):\n    result = True\n    method = getattr(file_or_fd, 'isatty', None) if not isinstance(file_or_fd, int) else None  # this check is just an optimization\n    if method is not None:\n        try: tty = method()\n        except io.UnsupportedOperation: tty = None\n        result = result and tty is not None and tty\n    method = getattr(file_or_fd, 'fileno', None) if not isinstance(file_or_fd, int) else None  # this check is just an optimization\n    if method is not None:\n        try: fd = method()\n        except io.UnsupportedOperation: fd = None\n        result = result and fd is not None and os.isatty(fd) and (not msvcrt or GetConsoleMode(msvcrt.get_osfhandle(fd), ctypes.byref(DWORD(0))) != 0)\n    return result\n\ndef can_call_input_for_stdio(stream):\n    return stream == sys.stdin and sys.version_info[0] &gt;= 3\n\nclass StdIOProxy(object):\n    # Maybe useful later: codecs.StreamRecoder(bytesIO, codec.decode, codec.encode, codec.streamwriter, codec.streamreader, errors='surrogateescape')\n    def __init__(self, stdin, stdout, stderr, codec, allow_set_code_page):\n        self.codec = codec\n        streams = (stdin, stdout, stderr)\n        for stream in streams:\n            assert isinstance(stream, io.IOBase) or sys.version_info[0] &lt; 3 and isinstance(stream, file) or hasattr(stream, 'mode'), \"unable to determine stream type\"\n            assert not isinstance(stream, io.RawIOBase), \"RAW I/O APIs are different and not supported\"\n        self.streaminfos = tuple(map(lambda stream:\n            (\n                stream,\n                isinstance(stream, io.BufferedIOBase) or isinstance(stream, io.RawIOBase) or not isinstance(stream, io.TextIOBase) and 'b' in stream.mode,\n                isinstance(stream, io.TextIOBase) or not (isinstance(stream, io.BufferedIOBase) or isinstance(stream, io.RawIOBase)) and 'b' not in stream.mode,\n                allow_set_code_page\n            ),\n            streams))\n    @property\n    def stdin(self): return self.streaminfos[0][0]\n    @property\n    def stdout(self): return self.streaminfos[1][0]\n    @property\n    def stderr(self): return self.streaminfos[2][0]\n    def _coerce(self, streaminfo, codec, arg):\n        stream = streaminfo[0]\n        can_binary = streaminfo[1]\n        can_text = streaminfo[2]\n        if not isinstance(arg, bytes) and not isinstance(arg, buffer) and not isinstance(arg, unicode):\n            arg = unicode(arg)\n        if isinstance(arg, bytes) or isinstance(arg, buffer):\n            if not can_binary:\n                arg = codec.decode(arg, 'surrogateescape')[0]\n        elif isinstance(arg, unicode):\n            if not can_text:\n                arg = codec.encode(unicode(arg), 'strict')[0]\n        return arg\n    @staticmethod\n    def _do_readline(stream, allow_set_code_page, *args):\n        new_code_page = CP_UTF8\n        old_code_page = GetConsoleCP() if msvcrt and GetConsoleCP and isatty(stream) else None\n        if old_code_page == new_code_page: old_code_page = None  # Don't change code page if it's already correct...\n        if old_code_page is not None:\n            if not SetConsoleCP(new_code_page):\n                old_code_page = None\n        try:\n            result = stream.readline(*args)\n        finally:\n            if old_code_page is not None:\n                SetConsoleCP(old_code_page)\n        return result\n    @staticmethod\n    def _do_write(stream, allow_set_code_page, *args):\n        new_code_page = CP_UTF8\n        old_code_page = GetConsoleOutputCP() if msvcrt and GetConsoleOutputCP and isatty(stream) else None\n        if old_code_page == new_code_page: old_code_page = None  # Don't change code page if it's already correct...\n        if old_code_page is not None:\n            if not SetConsoleOutputCP(new_code_page):\n                old_code_page = None\n        try:\n            result = stream.write(*args)\n        finally:\n            if old_code_page is not None:\n                SetConsoleCP(old_code_page)\n        return result\n    def _readln(self, streaminfo, codec, prompt):\n        stream = streaminfo[0]\n        can_binary = streaminfo[1]\n        allow_set_code_page = streaminfo[3]\n        if can_call_input_for_stdio(stream) and not can_binary:  # input() can't work with binary data\n            result = self._coerce(streaminfo, codec, \"\")\n            try:\n                result = input(*((self._coerce(streaminfo, codec, prompt),) if prompt is not None else ()))\n                result += self._coerce(streaminfo, codec, \"\\n\")\n            except EOFError: pass\n        else:\n            self.output(*((prompt,) if prompt is not None else ()))\n            self.error()\n            result = StdIOProxy._do_readline(stream, allow_set_code_page)\n        return result\n    def _writeln(self, streaminfo, codec, *args, **kwargs):\n        stream = streaminfo[0]\n        allow_set_code_page = streaminfo[3]\n        flush = kwargs.pop('flush', True)\n        kwargs.setdefault('end', '\\n')\n        kwargs.setdefault('sep', ' ')\n        end = kwargs.get('end')\n        sep = kwargs.get('sep')\n        first = True\n        for arg in args:\n            if first: first = False\n            elif sep is not None:\n                StdIOProxy._do_write(stream, allow_set_code_page, self._coerce(streaminfo, codec, sep))\n            StdIOProxy._do_write(stream, allow_set_code_page, self._coerce(streaminfo, codec, arg))\n        if end is not None:\n            StdIOProxy._do_write(stream, allow_set_code_page, self._coerce(streaminfo, codec, end))\n        if flush: stream.flush()\n    def inputln(self, prompt=None): return self._readln(self.streaminfos[0], self.codec, prompt)\n    def output(self, *args, **kwargs): kwargs.setdefault('end', None); return self._writeln(self.streaminfos[1], self.codec, *args, **kwargs)\n    def outputln(self, *args, **kwargs): return self._writeln(self.streaminfos[1], self.codec, *args, **kwargs)\n    def error(self, *args, **kwargs): kwargs.setdefault('end', None); return self._writeln(self.streaminfos[2], self.codec, *args, **kwargs)\n    def errorln(self, *args, **kwargs): return self._writeln(self.streaminfos[2], self.codec, *args, **kwargs)\n\nclass bytes_comparable_with_unicode(bytes):  # For Python 2/3 compatibility, to allow implicit conversion between strings and bytes when it is safe. (Used for strings like literals which we know be safe.)\n    codec = codecs.lookup('ascii')  # MUST be a safe encoding\n    @classmethod\n    def coerce(cls, other, for_output=False):\n        return cls.codec.encode(other)[0] if not isinstance(other, bytes) else bytes_comparable_with_unicode(other) if for_output else other\n    @classmethod\n    def translate_if_bytes(cls, value):\n        if value is not None and isinstance(value, bytes): value = cls(value)\n        return value\n    def __hash__(self): return super(bytes_comparable_with_unicode, self).__hash__()  # To avoid warning\n    def __eq__(self, other): return super(bytes_comparable_with_unicode, self).__eq__(self.coerce(other))\n    def __ne__(self, other): return super(bytes_comparable_with_unicode, self).__ne__(self.coerce(other))\n    def __lt__(self, other): return super(bytes_comparable_with_unicode, self).__lt__(self.coerce(other))\n    def __gt__(self, other): return super(bytes_comparable_with_unicode, self).__gt__(self.coerce(other))\n    def __le__(self, other): return super(bytes_comparable_with_unicode, self).__le__(self.coerce(other))\n    def __ge__(self, other): return super(bytes_comparable_with_unicode, self).__ge__(self.coerce(other))\n    def __getitem__(self, index): return self.coerce(super(bytes_comparable_with_unicode, self).__getitem__(index), True)\n    def __add__(self, other): return self.coerce(super(bytes_comparable_with_unicode, self).__add__(self.coerce(other)), True)\n    def __iadd__(self, other): return self.coerce(super(bytes_comparable_with_unicode, self).__iadd__(self.coerce(other)), True)\n    def __radd__(self, other): return self.coerce(self.coerce(other).__add__(self), True)\n    def find(self, other, *args): return super(bytes_comparable_with_unicode, self).find(self.coerce(other), *args)\n    def join(self, others): return self.coerce(super(bytes_comparable_with_unicode, self).join(map(self.coerce, others)), True)\n    def startswith(self, other): return super(bytes_comparable_with_unicode, self).startswith(self.coerce(other))\n    def __str__(self): return self.codec.decode(self)[0]\n    if str == bytes:\n        __unicode__ = __str__\n        def __str__(self): raise NotImplementedError()\n\ndef wrap_bytes_comparable_with_unicode_readline(readline):\n    def callback(*args):\n        line = readline(*args)\n        line = bytes_comparable_with_unicode.translate_if_bytes(line)\n        return line\n    return callback\n\ndef main(program, *args, **kwargs):  # **kwargs = dict(stdin=file, stdout=file, stderr=file); useful for callers who import this module\n    import argparse  # slow import (compiles regexes etc.), so don't import it until needed\n    argparser = argparse.ArgumentParser(\n        prog=os.path.basename(program),\n        usage=None,\n        description=None,\n        epilog=None,\n        parents=[],\n        formatter_class=argparse.RawTextHelpFormatter)\n    argparser.add_argument('-version', '--version', action='store_true', help=\"show SQLite version\")\n    argparser.add_argument('-batch', '--batch', action='store_true', help=\"force batch I/O\")\n    argparser.add_argument('-init', '--init', metavar=\"FILE\", help=\"read/process named file\")\n    argparser.add_argument('filename', nargs='?', metavar=\"FILENAME\", help=\"is the name of an SQLite database.\\nA new database is created if the file does not previously exist.\")\n    argparser.add_argument('sql', nargs='*', metavar=\"SQL\", help=\"SQL commnds to execute after opening database\")\n    argparser.add_argument('--readline', action='store', metavar=\"(true|false)\", default=\"true\", choices=(\"true\", \"false\"), help=\"whether to import readline if available (default: %(default)s)\")\n    argparser.add_argument('--self-test', action='store_true', help=\"perform a basic self-test\")\n    argparser.add_argument('--cross-test', action='store_true', help=\"perform a basic test against the official executable\")\n    argparser.add_argument('--unicode-stdio', action='store', metavar=\"(true|false)\", default=\"true\", choices=(\"true\", \"false\"), help=\"whether to enable Unicode wrapper for standard I/O (default: %(default)s)\")\n    argparser.add_argument('--console', action='store', metavar=\"(true|false)\", default=\"true\", choices=(\"true\", \"false\"), help=\"whether to auto-detect and use console window APIs (default: %(default)s)\")\n    argparser.add_argument('--encoding', default=ENCODING, help=\"the default encoding to use (default: %(default)s)\")\n    (stdin, stdout, stderr) = (kwargs.pop('stdin', sys.stdin), kwargs.pop('stdout', sys.stdout), kwargs.pop('stderr', sys.stderr))\n    parsed_args = argparser.parse_args(args)\n    codec = codecs.lookup(parsed_args.encoding or argparser.get_default('encoding'))\n    if parsed_args.self_test: self_test(codec)\n    if parsed_args.cross_test: cross_test(\"sqlite3\", codec)\n    parse_escaped_strings = StringEscapeParser()\n    if parsed_args.unicode_stdio == \"true\":\n        stdin = wrap_unicode_stdio(stdin, False, codec.name)\n        stdout = wrap_unicode_stdio(stdout, True, codec.name)\n        stderr = wrap_unicode_stdio(stderr, True, codec.name)\n    if parsed_args.console == \"true\":\n        stdin = wrap_windows_console_io(stdin, False)\n        stdout = wrap_windows_console_io(stdout, True)\n        stderr = wrap_windows_console_io(stderr, True)\n    allow_set_code_page = sys.version_info[0] &lt; 3 and False  # This is only necessary on Python 2 if we use the default I/O functions instead of bypassing to ReadConsole()/WriteConsole()\n    stdio = StdIOProxy(stdin, stdout, stderr, codec, allow_set_code_page)\n    db = None\n    no_args = len(args) == 0\n    init_sql = parsed_args.sql\n    is_nonpipe_input = stdin.isatty()  # NOT the same thing as TTY! (NUL and /dev/null are the difference)\n    init_show_prompt = not parsed_args.batch and is_nonpipe_input\n    if not parsed_args.batch and isatty(stdin) and (parsed_args.readline == \"true\" or __name__ == '__main__') and parsed_args.readline != \"false\":\n        try:\n            with warnings.catch_warnings():\n                warnings.filterwarnings('ignore', category=DeprecationWarning)\n                import readline\n        except ImportError: pass\n    if parsed_args and parsed_args.version:\n        stdio.outputln(sqlite3.sqlite_version);\n    else:\n        filename = parsed_args.filename\n        if filename is None: filename = \":memory:\"\n        db = Database(filename, isolation_level=None)\n    def exec_script(db, filename, ignore_io_errors):\n        try:\n            with io.open(filename, 'r', encoding=codec.name) as f:  # Assume .sql files are text -- any binary data inside them should be X'' encoded, not embedded directly\n                for command in sql_commands(wrap_bytes_comparable_with_unicode_readline(lambda *args: (lambda s: (s) or None)(f.readline()))):\n                    result = exec_command(db, command, False and ignore_io_errors)\n                    if result is not None:\n                        return result\n        except IOError as ex:\n            stdio.errorln(ex)\n            if not ignore_io_errors: return ex.errno\n    def raise_invalid_command_error(command):\n        if isinstance(command, bytes): command = codec.decode(command)[0]\n        if command.startswith(\".\"): command = command[1:]\n        raise RuntimeError(\"Error: unknown command or invalid arguments:  \\\"%s\\\". Enter \\\".help\\\" for help\" % (command.rstrip().replace(\"\\\\\", \"\\\\\\\\\").replace(\"\\\"\", \"\\\\\\\"\"),))\n    def exec_command(db, command, ignore_io_errors):\n        results = None\n        query = None\n        query_parameters = {}\n        try:\n            if command.startswith(\".\"):\n                args = list(parse_escaped_strings(command))\n                if args[0] in (\".quit\", \".exit\"):\n                    return 0\n                elif args[0] == \".help\":\n                    stdio.error(\"\"\"\n.cd DIRECTORY          Change the working directory to DIRECTORY\n.dump                  Dump the database in an SQL text format\n.exit                  Exit this program\n.help                  Show this message\n.open FILE             Close existing database and reopen FILE\n.print STRING...       Print literal STRING\n.quit                  Exit this program\n.read FILENAME         Execute SQL in FILENAME\n.schema ?PATTERN?      Show the CREATE statements matching PATTERN\n.show                  Show the current values for various settings\n.tables ?TABLE?        List names of tables\n\"\"\".lstrip())\n                elif args[0] == \".cd\":\n                    if len(args) != 2: raise_invalid_command_error(command)\n                    os.chdir(args[1])\n                elif args[0] == \".dump\":\n                    if len(args) != 1: raise_invalid_command_error(command)\n                    foreign_keys = db.cursor.execute(\"PRAGMA foreign_keys;\").fetchone()[0]\n                    if foreign_keys in (0, \"0\", \"off\", \"OFF\"):\n                        stdio.outputln(\"PRAGMA foreign_keys=OFF;\", flush=False)\n                    for line in db.connection.iterdump():\n                        stdio.outputln(line, flush=False)\n                    stdio.output()\n                elif args[0] == \".open\":\n                    if len(args) &lt;= 1: raise_invalid_command_error(command)\n                    filename = args[-1]\n                    for option in args[+1:-1]:\n                        raise ValueError(\"option %s not supported\" % (repr(option),))\n                    try: db.__init__(filename)\n                    except sqlite3.OperationalError as ex:\n                        ex.args = ex.args[:0] + (\"Error: unable to open database \\\"%s\\\": %s\" % (filename, ex.args[0]),) + ex.args[1:]\n                        raise\n                elif args[0] == \".print\":\n                    stdio.outputln(*args[1:])\n                elif args[0] == \".read\":\n                    if len(args) != 2: raise_invalid_command_error(command)\n                    exec_script(db, args[1], ignore_io_errors)\n                elif args[0] == \".schema\":\n                    if len(args) &gt; 2: raise_invalid_command_error(command)\n                    pattern = args[1] if len(args) &gt; 1 else None\n                    query_parameters['type'] = 'table'\n                    if pattern is not None:\n                        query_parameters['pattern'] = pattern\n                    query = \"SELECT sql || ';' FROM sqlite_master WHERE type = :type\" + (\" AND name LIKE :pattern\" if pattern is not None else \"\") + \";\"\n                elif args[0] == \".show\":\n                    if len(args) &gt; 2: raise_invalid_command_error(command)\n                    stdio.errorln(\"    filename:\", db.name)\n                elif args[0] == \".tables\":\n                    if len(args) &gt; 2: raise_invalid_command_error(command)\n                    pattern = args[1] if len(args) &gt; 1 else None\n                    query_parameters['type'] = 'table'\n                    if pattern is not None:\n                        query_parameters['pattern'] = pattern\n                    query = \"SELECT name FROM sqlite_master WHERE type = :type\" + (\" AND name LIKE :pattern\" if pattern is not None else \"\") + \";\"\n                else:\n                    raise_invalid_command_error(args[0])\n            else:\n                query = command\n            if query is not None:\n                results = db.cursor.execute(query if isinstance(query, unicode) else codec.decode(query, 'surrogatereplace')[0], query_parameters)\n        except (RuntimeError, OSError, FileNotFoundError, sqlite3.OperationalError) as ex:\n            stdio.errorln(exception_encode(ex, codec))\n        if results is not None:\n            for row in results:\n                stdio.outputln(*tuple(map(lambda item: item if item is not None else \"\", row)), sep=\"|\", flush=False)\n            stdio.output()\n    if db:\n        if parsed_args and parsed_args.init:\n            if is_nonpipe_input: stdio.errorln(\"-- Loading resources from\", parsed_args.init)\n            exec_script(db, parsed_args.init, False)\n        def read_stdin(index, not_in_the_middle_of_any_input, prev_line):\n            show_prompt = init_show_prompt\n            to_write = []\n            if index &lt; len(init_sql):\n                line = init_sql[index]\n                if not line.startswith(\".\") and not line.rstrip().endswith(\";\"):\n                    line += \";\"\n            elif index == len(init_sql) and len(init_sql) &gt; 0:\n                line = None\n            else:\n                if show_prompt:\n                    if not_in_the_middle_of_any_input:\n                        show_prompt = False\n                        if index == 0:\n                            to_write.append(\"SQLite version %s (adapter version %s)\\nEnter \\\".help\\\" for usage hints.\\n\" % (sqlite3.sqlite_version, sqlite3.version))\n                            if no_args:\n                                to_write.append(\"Connected to a transient in-memory database.\\nUse \\\".open FILENAME\\\" to reopen on a persistent database.\\n\")\n                    if index &gt; 0 and not prev_line:\n                        to_write.append(\"\\n\")\n                    to_write.append(\"%7s \" % (\"sqlite%s&gt;\" % (\"\",) if not_in_the_middle_of_any_input else \"...&gt;\",))\n                try:\n                    line = stdio.inputln(\"\".join(to_write))\n                except KeyboardInterrupt:\n                    line = \"\"\n                    raise  # just kidding, don't handle it for now...\n            return line\n        for command in sql_commands(wrap_bytes_comparable_with_unicode_readline(read_stdin)):\n            result = exec_command(db, command, True)\n            if result is not None:\n                return result\n        if init_show_prompt and len(init_sql) == 0:\n            stdio.outputln()\n\ndef call_program(cmdline, input_text):\n    import subprocess\n    return subprocess.Popen(cmdline, bufsize=0, stdin=subprocess.PIPE, stdout=subprocess.PIPE, stderr=subprocess.PIPE, universal_newlines=False).communicate(input_text)\n\ndef test_query():\n    hexcodec = codecs.lookup('hex_codec')\n    ascii = 'ascii'\n    data1 = b\"\\xD8\\xA2\"\n    data2 = b\"\\x01\\x02\\xFF\\x01\\xFF\\xFE\\xFD\"\n    values = [data1, data2]\n    query_bytes = b'SELECT %s;' % (b\", \".join(map(lambda b: b\"X'%s'\" % (hexcodec.encode(b)[0].upper(),), values)),)\n    expected_bytes = b\"%s\\n\" % (b\"|\".join(values),)\n    return query_bytes, expected_bytes\n\ndef cross_test(sqlite_cmdline, codec):\n    (query_bytes, expected_bytes) = test_query()\n    (official_output, official_error) = call_program(sqlite_cmdline, query_bytes)\n    # We can't use os.linesep here since binaries may belong to different platforms (Win32/MinGW vs. MSYS/Cygwin vs. WSL...)\n    official_output = official_output.replace(b\"\\r\\n\", b\"\\n\")\n    official_error = official_error.replace(b\"\\r\\n\", b\"\\n\")\n    if official_output != expected_bytes:\n        raise sqlite3.ProgrammingError(\"expected bytes are wrong: official %s != expected %s\" % (repr(official_output), repr(expected_bytes)))\n    if official_error:\n        raise sqlite3.ProgrammingError(\"did not expect errors from official binary\")\n\ndef self_test(codec):\n    (query_bytes, expected_bytes) = test_query()\n    if not (lambda stdin, stdout, stderr: not main(sys.argv[0], stdin=stdin, stdout=stdout, stderr=stderr) and stdout.getvalue() == expected_bytes)(io.BytesIO(query_bytes), io.BytesIO(), io.BytesIO()):\n        raise sqlite3.ProgrammingError(\"byte I/O is broken\")\n    if not (lambda stdin, stdout, stderr: not main(sys.argv[0], stdin=stdin, stdout=stdout, stderr=stderr) and stdout.getvalue() == codec.decode(expected_bytes, 'surrogateescape'))(io.StringIO(query_bytes.decode(ascii)), io.StringIO(), io.StringIO()):\n        raise sqlite3.ProgrammingError(\"string I/O is broken\")\n\nif __name__ == '__main__':\n    import sys\n    exit_code = main(*sys.argv)\n    if exit_code not in (None, 0): raise SystemExit(exit_code)\n</code></pre>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part3/#2_3","title":"2","text":"<p>Q4\u4e2d\uff0c\u6211\u672c\u6765\u5199\u7684\u662f</p> <pre><code>CREATE TABLE matchmaker AS\n  select pet, song, a.color, b.color from students as a, students as b\n  where a.pet = b.pet and a.song = b.song and a.time &lt; b.time;\n</code></pre> <p>\u4f46\u662f\u663e\u793a\u4e86\u8fd9\u6837\u7684\u62a5\u9519</p> <pre><code>ambiguous column name: pet\nno such table: matchmaker\n</code></pre> <p>\u5206\u6790\u5e94\u8be5\u662f\u7528\u8868\u8054\u63a5\u81ea\u8eab\u5e76\u52a0\u4e0a\u4e86\u522b\u540d\u65f6\uff0c\u5217\u7684\u540d\u79f0\u4e5f\u9700\u8981\u52a0\u4e0a\u522b\u540d\uff0c\u4fee\u6539\u540e\u6700\u540e\u901a\u8fc7</p> code <pre><code>CREATE TABLE matchmaker AS\n  select a.pet, a.song, a.color, b.color from students as a, students as b\n  where a.pet = b.pet and a.song = b.song and a.time &lt; b.time;\n</code></pre>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part3/#3_2","title":"3","text":"<p>\u5728\u505aQ5\u65f6\u53d1\u73b0\uff0c\u5982\u679c\u8054\u63a5\u4e86\u591a\u4e2a\u8868\uff0c\u6bcf\u4e2a\u8868\u7684\u5217\u540d\u9700\u8981\u4f7f\u7528 <code>.</code> \u6765\u4f7f\u7528\uff0c\u5373\u4f7f\u8fd9\u4e2a\u5217\u540d\u5728\u5176\u4ed6\u8868\u4e2d\u4e0d\u5b58\u5728\uff0c\u4f8b\u5982</p> <pre><code>select * from students, numbers where '7' = 'True';\n</code></pre> <p>\u8fd9\u884c\u8bed\u53e5\u8fd0\u884c\u540e\u6ca1\u6709\u7ed3\u679c\uff0c\u6216\u8005\u8bf4\u6ca1\u6709\u5339\u914d\u7684\u884c\uff0c</p> <pre><code>select * from students, numbers where students.'7' = 'True';\n</code></pre> <p>\u4f46\u8fd9\u4e00\u884c\u8bed\u53e5\u5c31\u4f1a\u6709\u7ed3\u679c</p> code <pre><code>CREATE TABLE sevens AS\n  select a.seven from students as a, numbers as b where a.time = b.time and a.number = 7 and b.'7' = 'True';\n</code></pre>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part3/#lecture-33-aggregation","title":"Lecture 33 Aggregation","text":""},{"location":"Notes%20of%20Courses/CS61A/CS61A_part3/#1_4","title":"1","text":"<p>sql\u4e2d\u7684\u805a\u5408\u51fd\u6570 Aggregation function \uff0c\u53ef\u4ee5\u4f7f\u7528\u591a\u884c\u7684\u6570\u636e\u8fdb\u884c\u5904\u7406\uff0c\u6bd4\u5982</p> <ul> <li><code>max</code> <code>min</code> \u53d6\u6700\u5927/\u6700\u5c0f</li> <li><code>sum</code> \u53d6\u6240\u6709\u6570\u636e\u7684\u548c</li> <li><code>avg</code> \u53d6\u6240\u6709\u6570\u636e\u7684\u5e73\u5747\u503c</li> <li><code>count</code> \u83b7\u53d6\u6570\u636e\u7684\u4e2a\u6570</li> </ul> <p>\u5728\u4f20\u5165\u53c2\u6570(\u5217\u540d)\u65f6\uff0c\u8fd8\u53ef\u4ee5\u5728\u53c2\u6570\u524d\u6dfb\u52a0 <code>distinct</code> \uff0c\u8868\u793a\u8fd9\u4e00\u5217\u4e2d\u91cd\u590d\u7684\u5143\u7d20\u53ea\u53d6\u7528\u4e00\u4e2a\uff0c\u53ef\u4ee5\u53c2\u8003\u4e0b\u56fe</p> <p></p> <p></p> <p></p> <p>\u805a\u5408\u51fd\u6570\u4e5f\u53ef\u4ee5\u548c\u5176\u4ed6\u666e\u901a\u7684\u8868\u8fbe\u5f0f\u4e00\u8d77\u6df7\u5408\u4f7f\u7528\uff0c\u6765\u83b7\u53d6\u5176\u4ed6\u6709\u7528\u7684\u4fe1\u606f(\u540c\u4e00\u884c\u6570\u636e\u7684\u5176\u4ed6\u4fe1\u606f)\uff0c\u5982\u4e0a\u56fe\u4e2dJohn\u7684\u6f14\u793a\uff0c</p> <p>\u4f46\u6709\u4e9b\u805a\u5408\u51fd\u6570\u7ed3\u679c\u4e0d\u4f1a\u662f\u67d0\u884c\u6570\u636e\u4e2d\u7684\u6570\u503c\uff0c</p> <p>Quote</p> <p>John:</p> <p>...So, you have to be careful about selecting single values in conjunction with aggregations. Some aggregations give you a meaningful value, like <code>min</code> and <code>max</code> ; others don't, like <code>avg</code> .</p> <p>John:</p> <p>...\u5f53\u4f60\u4e0e\u805a\u5408\u51fd\u6570\u4e00\u8d77\u9009\u62e9\u5355\u4e00\u503c\u65f6\uff0c\u4f60\u5fc5\u987b\u5c0f\u5fc3\u3002\u6709\u4e9b\u805a\u5408\u51fd\u6570\u4f1a\u7ed9\u4f60\u4e00\u4e2a\u6709\u610f\u4e49\u7684\u503c\uff0c\u6bd4\u5982 <code>min</code> \u548c <code>max</code> \uff0c\u800c\u5176\u4ed6\u4e00\u4e9b\u5374\u4e0d\u4f1a\uff0c\u6bd4\u5982 <code>avg</code> \u3002</p> <p>\u5e76\u4e14\uff0c\u4eceJohn\u7684demo\u6f14\u793a\u4e2d\u53ef\u4ee5\u770b\u5230\uff0c\u5728\u4f7f\u7528 <code>min</code> \u6216 <code>max</code> \u65f6\uff0c\u5373\u4f7f\u6709\u591a\u884c\u6570\u636e\u90fd\u662f\u6700\u5c0f/\u5927\u503c\uff0c\u4f46\u662f\u5374\u53ea\u662f\u8fd4\u56de\u4e86\u4e00\u4e2a\u7ed3\u679c</p> <pre><code>sqlite&gt; select max(legs), kind from animals;\n4|cat\n</code></pre>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part3/#2_4","title":"2","text":"<p>\u5206\u7ec4 group</p> <p>\u53ef\u4ee5\u4f7f\u7528 <code>group by</code> \u8fdb\u884c\u5206\u7ec4\uff0c\u5728 <code>group by</code> \u540e\u5199(\u5355\u4e2a\u6216\u591a\u4e2a)\u5217\u540d\u6216\u8868\u8fbe\u5f0f\uff0c\u5c31\u4f1a\u628a\u6bcf\u4e2a\u76f8\u540c\u7684\u503c\u5bf9\u5e94\u7684\u90a3\u4e00\u884c\u5206\u5230\u540c\u4e00\u4e2a\u7ec4\uff0c\u800c\u5982\u679c\u4f7f\u7528\u805a\u5408\u51fd\u6570\u5c31\u4f1a\u5206\u522b\u4f5c\u7528\u4e8e\u6bcf\u4e2a\u7ec4(\u800c\u4e0d\u662f\u4f5c\u7528\u4e8e\u6574\u4e2a\u8868\u6240\u6709\u884c\u7684\u6570\u636e)\uff0c\u53ef\u4ee5\u53c2\u8003\u4e0a\u56fe\u4e2dJohn\u7684demo\u6f14\u793a</p> <p></p> <p>\u5728\u5206\u7ec4\u65f6\uff0c\u8fd8\u53ef\u4ee5\u4f7f\u7528 <code>having</code> \u6765\u5bf9\u7ec4\u8fdb\u884c\u7b5b\u9009(\u533a\u522b\u4e8e <code>where</code> \u662f\u5bf9\u5355\u884c\u6570\u636e\u8fdb\u884c\u7b5b\u9009)</p>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part3/#lecture-33-qa","title":"Lecture 33 Q&amp;A","text":""},{"location":"Notes%20of%20Courses/CS61A/CS61A_part3/#1_5","title":"1","text":"<p>\u6709\u4eba\u5411John\u63d0\u95ee\u7684mentor13(\u5728\u7f51\u7ad9\u4e0a\u6ca1\u627e\u5230)\u7684\u4e00\u9898\uff0c</p> <p>Quote</p> <p>Fill in <code>skip-list</code> , which takes in a potentially nested list <code>lst</code> and a single-argument filter function <code>filter-fn</code> that returns a boolean when called, and goes through each element in order. It returns a new list that contains all elements that return true when passed into <code>filter-fn</code> . The returned list is not nested.</p> <pre><code>;Doctests\nscm&gt; (skip-list '(1 (3)) even?)\n()\nscm&gt; (skip-list'(1 (2 (3 4) 5) 6 (7) 8 9) odd?)\n(1 3 5 7 9)\n</code></pre> <pre><code>(define (skip-list lst filter-fn)\n    (define (helper lst lst-so-far next)\n        (cond\n            ((null? lst)\n                (if (null? ______)\n                    ______\n                    ______)\n            )\n            ((pair? ______)\n                (______))\n            ((filter-fn (car lst))\n                ______)\n            (else\n                ______)\n        )\n    )\n    (helper ______)\n)\n</code></pre> <p>\u4e8e\u662f\u81ea\u5df1\u5199\u4e86\u4e00\u4e0b\uff0c</p> <p>\u7531\u4e8e\u4e0d\u6e05\u695a <code>null?</code> \u548c <code>pair?</code> \u7684\u4f5c\u7528\uff0c\u4e8e\u662f\u5148\u8bd5\u4e86\u4e00\u4e0b\uff0c\u53d1\u73b0 <code>null?</code> \u53ea\u5728\u4f20\u5165\u7a7a\u5217\u8868 <code>nil</code> \u6216\u8005 <code>()</code> \u65f6\u624d\u8fd4\u56de <code>true</code> \uff0c\u800c <code>pair?</code> \u53ea\u5728\u4f20\u5165\u4e1c\u897f\u4e3a\u5217\u8868\uff0c\u4e14\u5217\u8868\u4e0d\u4e3a\u7a7a\u65f6\u8fd4\u56de <code>true</code> (\u4f20\u5165 <code>(())</code> \u65f6\u4e5f\u8fd4\u56de <code>true</code> )\u3002</p> <p>\u6700\u540e\u5199\u4e86\u597d\u4e00\u4f1a\u624d\u5199\u51fa\u6765\uff0c\u8fd9\u9898\u6709\u70b9\u590d\u6742\uff0c\u56e0\u4e3a\u9700\u8981\u628a\u5d4c\u5957\u7684\u5217\u8868\u7ed9\u5c55\u5f00\uff0c</p> <p>\u6240\u4ee5\u4e3a\u4e86\u5904\u7406\u8fd9\u6837\u7684\u60c5\u51b5\uff0c\u5728\u8fdb\u5165\u66f4\u6df1\u5c42\u7684\u5217\u8868\u65f6\uff0c\u5c31\u9700\u8981\u901a\u8fc7 <code>next</code> \u53c2\u6570\u6765\u6807\u8bb0\u4e4b\u524d\u7684\u4f4d\u7f6e(\u4e00\u5f00\u59cb\u8fd8\u4ee5\u4e3a <code>next</code> \u6307\u7684\u662f\u5217\u8868\u7684\u4e4b\u540e\u7684\u90e8\u5206\uff0c\u4f46\u662f\u60f3\u5230\u8fd9\u6837\u7684\u60c5\u51b5\u4e00\u822c\u4f7f\u7528 <code>rest</code> \u6765\u547d\u540d)\uff0c</p> <p>\u6700\u597d\u60f3\u7684\u5c31\u662f <code>(filter-fn (car lst)</code> \u548c <code>else</code> \u4e24\u884c\uff0c\u56e0\u4e3a\u8fd9\u4e24\u884c\u5c31\u5bf9\u5e94\u666e\u901a\u7684\u60c5\u51b5\uff0c\u5373\u5217\u8868\u4e0d\u662f\u5d4c\u5957\u7684\uff0c\u90a3\u4e48\u5c31\u5927\u6982\u53ef\u4ee5\u5f97\u5230</p> <pre><code>((filter-fn (car lst))\n    (helper (cdr lst) (append lst-so-far (list (car lst))) next))\n(else\n    (helper (cdr lst) lst-so-far next))\n</code></pre> <p>\u8fd9\u91cc\u6211\u4f7f\u7528\u4e86scheme\u4e2d\u7684 <code>append</code> \u51fd\u6570\uff0c\u56e0\u4e3a\u9700\u8981\u5c06\u7b26\u5408\u7b5b\u9009\u6761\u4ef6\u7684\u5143\u7d20\u62fc\u63a5\u5230 <code>lst-so-far</code> \u7684\u5c3e\u90e8\uff0c</p> <p><code>append</code> \u51fd\u6570\u7684\u7528\u6cd5\u662f\u4f20\u5165\u591a\u4e2a\u5217\u8868\uff0c\u5c06\u4ed6\u4eec\u6309\u987a\u5e8f\u62fc\u5230\u4e00\u8d77\uff0c\u6240\u4ee5\u8fd9\u91cc\u7684\u4ee3\u7801\u5c31\u5199\u6210\u4e86 <code>(list (car lst))</code> </p> <p>\u4e00\u5f00\u59cb\u5199\u7684\u662f</p> <pre><code>(append lst-so-far (car lst))\n</code></pre> <p>\u7136\u540e\u8fd0\u884c\u6d4b\u8bd5\u65f6\u5c31\u62a5\u9519\u4e86\ud83d\ude05</p> <pre><code>scm&gt; (skip-list '(1 (3)) even?)\n()\nscm&gt; (skip-list '(1 (2 (3 4) 5) 6 (7) 8 9) odd?)\nTraceback (most recent call last):\n  1     (append lst-so-far (car lst))\nError: argument 0 of append has wrong type (int)\n</code></pre> <p>\u63a5\u7740\u6765\u5904\u7406 <code>pair?</code> \u8fd9\u4e2a\u60c5\u51b5\uff0c\u6839\u636e\u521a\u624d\u7684\u4e24\u79cd\u60c5\u51b5\u5927\u6982\u5c31\u80fd\u731c\u5230\u8fd9\u91cc\u5e94\u8be5\u5c31\u662f\u5224\u65ad\u7b2c\u4e00\u4e2a\u5143\u7d20\u662f\u4e0d\u662f\u5217\u8868\uff0c\u6240\u4ee5 <code>(pair? (car lst))</code> \uff0c</p> <p>\u4e8e\u662f\u5982\u679c\u662f\u7b2c\u4e00\u4e2a\u5143\u7d20\u662f\u5217\u8868\uff0c\u90a3\u4e48\u80af\u5b9a\u9700\u8981\u5411\u5185\u7ee7\u7eed\u8d70\uff0c\u53ef\u4ee5\u731c\u5230\u8fd9\u79cd\u60c5\u51b5\u4e0b\u9012\u5f52\u8c03\u7528\u7684 <code>helper</code> \u7684\u7b2c\u4e00\u4e2a\u53c2\u6570\u4f1a\u662f <code>(car lst)</code> \uff0c</p> <p>\u7136\u540e\u6700\u5173\u952e\u7684\u5730\u65b9\u5728\u4e8e\uff0c\u9700\u8981\u8bb0\u4f4f <code>lst</code> \u4e4b\u540e\u7684\u5143\u7d20\uff0c\u4e00\u5f00\u59cb\u6211\u4ee5\u4e3a <code>helper</code> \u7b2c\u4e09\u4e2a\u53c2\u6570\u5c31\u662f <code>(cdr lst)</code> \uff0c\u4f46\u60f3\u5230\u5982\u679c\u518d\u6709\u4e00\u5c42\u5d4c\u5957\u7684\u5217\u8868\uff0c\u539f\u672c\u7684 <code>next</code> \u5c31\u4f1a\u88ab\u8986\u76d6\u4e22\u5931\uff0c</p> <p>\u6700\u540e\u60f3\u4e86\u597d\u4e45\u7ec8\u4e8e\u60f3\u5230\u5e94\u8be5\u662f\u628a\u4e24\u8005\u5408\u5e76\u5230\u4e00\u8d77(\u8fd9\u6837\u4e24\u8005\u7684\u4fe1\u606f\u90fd\u5305\u542b\u4e86)\uff0c\u6240\u4ee5</p> <pre><code>((pair? (car lst))\n    (helper (car lst) lst-so-far (cons (cdr lst) next)))\n</code></pre> <p>\u4e8e\u662fbase case\u7684\u60c5\u51b5\u5c31\u4e0d\u96be\u60f3\u4e86\uff0c\u7ed3\u675f\u9012\u5f52\u65f6\u8fd4\u56de <code>lst-so-far</code> \u5373\u53ef\uff0c</p> <pre><code>((null? lst)\n\n    (if (null? next)\n        lst-so-far\n        (helper (car next) lst-so-far (cdr next)))\n)\n</code></pre> <p>\u6240\u4ee5 <code>skip-list</code> \u4e2d\u7684\u90a3\u4e00\u884c\u5c31\u662f</p> <pre><code>(helper lst nil nil)\n</code></pre> <p>\u5b8c\u6574\u7684\u7b54\u6848\u4e3a</p> <pre><code>(define (skip-list lst filter-fn)\n    (define (helper lst lst-so-far next)\n        (cond\n            ((null? lst)\n                (if (null? next)\n                    lst-so-far\n                    (helper (car next) lst-so-far (cdr next)))\n            )\n            ((pair? (car lst))\n                (helper (car lst) lst-so-far (cons (cdr lst) next)))\n            ((filter-fn (car lst))\n                (helper (cdr lst) (append lst-so-far (list (car lst))) next))\n            (else\n                (helper (cdr lst) lst-so-far next))\n        )\n    )\n    (helper lst nil nil)\n)\n</code></pre> <p>John\u6700\u540e\u7684\u7b54\u6848\u548c\u6211\u7684\u6709\u4e9b\u533a\u522b\uff0c\u4ed6\u662f\u4f7f\u7528\u4e86 <code>append</code> \u6765\u8fde\u63a5 <code>(cdr lst)</code> \u548c <code>next</code> \uff0c</p> <pre><code>(helper (car lst) lst-so-far (append (cdr lst) next))\n</code></pre> <p>\u800cbase case\u4e2d\u5c31\u662f</p> <pre><code>(if (null? next)\n    lst-so-far\n    (helper next lst-so-far nil))\n</code></pre> code <pre><code>(define (skip-list lst filter-fn)\n    (define (helper lst lst-so-far next)\n        (cond\n            ((null? lst)\n                (if (null? next)\n                    lst-so-far\n                    (helper next lst-so-far nil))\n            )\n            ((pair? (car lst))\n                (helper (car lst) lst-so-far (append (cdr lst) next))\n            ((filter-fn (car lst))\n                (helper (cdr lst) (append lst-so-far (list (car lst))) next))\n            (else\n                (helper (cdr lst) lst-so-far next))\n        )\n    )\n    (helper lst nil nil)\n)\n</code></pre> <p>\u800cJohn\u53c8\u8bf4\u5230\u8fd9\u9898\u63d0\u4f9b\u7684\u4ee3\u7801\u6846\u67b6\u4e2d\u7684 <code>helper</code> \u51fd\u6570\uff0c\u5176\u5b9e\u8ba9\u8fd9\u9898\u53d8\u5f97\u590d\u6742\u4e86\uff0c <code>lst-so-far</code> \u5bf9\u5e94\u7740\u4ece\u5934(\u5de6\u8fb9)\u52a0\u8f7d\u7ed3\u679c\uff0c\u800c\u5982\u679c\u6309\u7167\u4ee5\u5f80\u7684\u601d\u8def\uff0c\u4ece\u672b\u5c3e(\u53f3\u8fb9)\u52a0\u8f7d\u7ed3\u679c\uff0c\u4f1a\u66f4\u7b80\u5355\uff0c\u4ee3\u7801\u662f</p> <pre><code>(define (skip-list s f)\n  (cond ((null? s) nil)\n        ((list? (car s)) (append (skip-list (car s) f) (skip-list (cdr s) f)))\n        ((f (car s)) (cons (car s) (skip-list (cdr s) f)))\n        (else (skip-list (cdr s) f))))\n</code></pre>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part3/#2_5","title":"2","text":"<p>\u6709\u4eba\u63d0\u95ee\u768417\u5e74\u79cb\u5b63\u7684\u671f\u672b\u8003\u8bd5\u7b2c6\u9898</p> <p>Quote</p> <p>Simplify! Simplify! For this problem, consider a very small subset of Scheme containing only if expression, <code>(if pred then=part else part)</code> , and atoms including symbols, <code>#t</code> for true, and <code>#f</code> for false. Such expressions can be simplified according to the following transformation rules. Here, <code>P</code> , <code>E1</code> , and <code>E2</code> are Scheme expressions in the subset, and <code>P'</code> , <code>E1'</code> , and <code>E2'</code> are their simplified versions.</p> <ul> <li>The expression <code>(if P E1 E2)</code> simplified to<ul> <li><code>E1'</code> if <code>P'</code> is <code>#t</code> .</li> <li><code>E2'</code> if <code>P'</code> is <code>#f</code> .</li> <li><code>E1'</code> if <code>E1'</code> equals <code>E2</code>\u2018 .</li> <li>Otherwise, an <code>if</code> expression with <code>P'</code> , <code>E1'</code> , and <code>E2'</code> as the predicate, then-part, and else-part.</li> </ul> </li> <li>Any expression, <code>E</code> , simplies to <code>#t</code> if <code>E</code> is known to be true (see below); or to <code>#f</code> if it is known to be false.</li> <li>Finally, in the expression <code>(if P E1 E2)</code> , <code>P'</code> is known to be true while simplifying <code>E1</code> and is known to be false while simplifying <code>E2</code> . Initially, only <code>#t</code> is known to be true and only <code>#f</code> is known to be false.</li> </ul> <p>Fill in the blanks on the next page so that <code>(simp E)</code> returns the simplied version of <code>E</code> according to these rules, and the helper function <code>(simp-ontext E known-t known-f)</code> returns the simpliation of <code>E</code> given that <code>known-t</code> is a list of expressions known to be true, and <code>known-f</code> is a list of expressions known to be false.</p> <p>For convenience, assume that <code>(nth k L)</code> is defined to return element k of list <code>L</code> (where 0 is the first), and that <code>(in? E L)</code> is defined to return true if and only if E is <code>equal?</code> to a member of the list L.</p> <pre><code>scm&gt; (simp '(if a b c))\n(if a b c)\nscm&gt; (simp '(if a b b))\nb\nscm&gt; (simp '(if #t (if #f a b) c))\nb\nscm&gt; (simp '(if a (if a b c) (if a d e)))\n(if a b e)\nscm&gt; (simp '(if (if #t a b) (if a d e) f))\n(if a d f)\nscm&gt; (simp '(if (if a b b) (if b c d) (if e f f)))\n(if b c f)\nscm&gt; (simp '(if (if a b c) (if (if a b c) x y) (if (if a b c) y z)))\n(if (if a b c) x z)\nscm&gt; (simp '(if (if a b c) (if (if a (if a b b) c) d e) f))\n(if (if a b c) d f)\n</code></pre> <pre><code>(define (simp expr)\n  (simp-context expr ______ ______))\n\n(define (simp-context expr known-t known-f)\n  (define simp-expr (if (pair? expr)\n                        (simp-if (nth 1 expr) (nth 2 expr) (nth 3 expr) known-t known-f)\n                        expr))\n  (cond (______ #t)\n        (______ #f)\n        (else ______)))\n\n(define (simp-if pred then-part else-part known-t known-f)\n  (let ((simp-pred (simp-context pred ______)))\n    (define simp-then\n      ______)\n    (define simp-else\n      ______)\n    (cond ((equal? simp-pred #t) simp-then)\n          (______ simp-else)\n          (______ simp-then)\n          (else ______))))\n</code></pre> <p>\u4e8e\u662f\u81ea\u5df1\u5199\u4e86\u4e00\u4e0b</p> <p>\u9898\u76ee\u4e2d\u63d0\u5230\u4f46\u89e3\u91ca\u5668\u4e2d\u5e76\u6ca1\u6709\u7684\u4e24\u4e2a\u51fd\u6570 <code>nth</code> \u548c <code>in?</code> \uff0c\u4e8e\u662f\u6211\u81ea\u5df1\u7528\u4ee3\u7801\u5b9e\u73b0</p> <p><pre><code>(define (nth k L)\n (if (= k 0)\n     (car L)\n     (nth (- k 1) (cdr L))))\n\n(define (in? E L)\n (cond ((null? L) false)\n       ((equal? E (car L)) true)\n       (else (in? E (cdr L)))))\n</code></pre> </p> <p>\u770b\u5b8c\u4e86\u9898\u76ee\u611f\u89c9\u6ca1\u660e\u767d\u9700\u8981\u5e72\u4ec0\u4e48\ud83d\ude05\uff0c\u4f46\u770b\u5230\u63d0\u4f9b\u7684\u4f8b\u5b50\u5c31\u660e\u767d\u4e86\u3002</p> <p>\u9898\u76ee\u662f\u8981\u5b9e\u73b0\u5316\u7b80 <code>if</code> \u8868\u8fbe\u5f0f\u7684\u51fd\u6570\uff0c</p> <pre><code>scm&gt; (simp '(if a b b))\nb\nscm&gt; (simp '(if #t (if #f a b) c))\nb\n</code></pre> <p>\u8fd9\u4e24\u4e2a\u4f8b\u5b50\u5c55\u793a\u4e86\u6700\u7b80\u5355\u7684\u80fd\u5316\u7b80\u7684\u60c5\u51b5\uff0c</p> <ul> <li>\u5982\u679c\u6ee1\u8db3\u548c\u4e0d\u6ee1\u8db3\u6761\u4ef6\uff0c\u8fd4\u56de\u7684\u4e24\u79cd\u7ed3\u679c\u662f\u4e00\u6837\u7684\uff0c\u90a3\u4e48\u76f4\u63a5\u8868\u8fbe\u5f0f\u53ef\u4ee5\u5316\u7b80\u6210\u8fd9\u4e2a\u7ed3\u679c</li> <li>\u5982\u679c\u6761\u4ef6\u53ef\u4ee5\u786e\u5b9a\u4e3a\u771f\uff0c\u90a3\u4e48\u5c31\u8fd4\u56de \u6ee1\u8db3\u65f6\u7684\u8868\u8fbe\u5f0f\u7684\u7b80\u5316\u7248 \uff0c\u800c\u5982\u679c\u53ef\u4ee5\u786e\u5b9a\u4e3a\u5047\uff0c\u5c31\u8fd4\u56de \u4e0d\u6ee1\u8db3\u65f6\u7684\u8868\u8fbe\u5f0f\u7684\u7b80\u5316\u7248</li> </ul> <p>\u800c\u66f4\u590d\u6742\u7684\u60c5\u51b5\u53ef\u4ee5\u53c2\u8003\u7b2c4\u4e2a\u4f8b\u5b50</p> <pre><code>scm&gt; (simp '(if a (if a b c) (if a d e)))\n(if a b e)\n</code></pre> <p>\u4e00\u5f00\u59cb\u770b\u5230\u8fd9\u4e2a\u4f8b\u5b50\u6ca1\u60f3\u660e\u767d\u8981\u5982\u4f55\u5b9e\u73b0\u8fd9\u6837\u7684\u64cd\u4f5c\uff0c\u4f46\u4e4b\u540e\u770b\u5230\u4e86\u4ee3\u7801\u5c31\u660e\u767d\u4e86</p> <p>\u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c\u9700\u8981\u7406\u89e3\u4e00\u4e2a\u5173\u952e\u4e4b\u5904\uff0c <code>(if a b c)</code> \u80fd\u8f6c\u53d8\u6210 <code>b</code> \uff0c\u662f\u56e0\u4e3a\u5982\u679c\u5df2\u7ecf\u8fdb\u5165\u5230\u9700\u8981\u8fd0\u7b97 <code>(if a b c)</code> \u8868\u8fbe\u5f0f\u65f6\uff0c\u8bf4\u660e <code>a</code> \u5df2\u7ecf\u786e\u5b9a\u4e3a\u771f\u4e86(\u56e0\u4e3a\u8054\u7cfb\u5230\u9898\u76ee\u4e2d\u8bf4\u5230 <code>known-t</code> \u548c <code>known-f</code> \u662f \u786e\u5b9a\u4e3a\u771f/\u5047\u7684\u8868\u8fbe\u5f0f\u7684\u5217\u8868)</p> <p>\u7136\u540e\u770b\u4ee3\u7801\uff0c\u6838\u5fc3\u7684\u90e8\u5206\u662f <code>simp-if</code> \u518d\u662f <code>simp-context</code> \uff0c\u770b\u5230 <code>simp-if</code> \u4e2d\u7684\u8fd9\u4e00\u884c\uff0c</p> <pre><code>(let ((simp-pred (simp-context pred ______))) ...)\n</code></pre> <p>\u6211\u5c31\u660e\u767d\u4e86\uff0c<code>simp-context</code> \u662f\u7528\u6765\u5316\u7b80\u5355\u4e2a\u8868\u8fbe\u5f0f\uff0c\u7ee7\u800c\u660e\u767d <code>simp-if</code> \u662f\u7528\u6765\u5316\u7b80 <code>if</code> \u8868\u8fbe\u5f0f\u7684\uff0c</p> <p>\u56e0\u6b64\u5927\u6982\u53ef\u4ee5\u731c\u51fa\uff0c\u8fd9\u4e00\u884c\u7684\u7a7a\u5e94\u8be5\u5c31\u662f\u6700\u7b80\u5355\u7684 <code>known-t known-f</code> \uff0c\u7ee7\u800c\u53c8\u5f88\u5bb9\u6613\u53ef\u4ee5\u60f3\u5230 <code>simp-then</code> \u548c <code>simp-else</code> \u4e5f\u9700\u8981\u8c03\u7528 <code>simp-context</code> \u5e76\u5404\u81ea\u628a <code>pred</code> \u52a0\u4e0a</p> <pre><code>(define simp-then\n  (simp-context then-part (cons simp-pred known-t) known-f))\n(define simp-else\n  (simp-context else-part known-t (cons simp-pred known-f)))\n</code></pre> <p>\u4e8e\u662f\u6700\u540e\u7684 <code>cond</code> \u4e2d\uff0c\u5c31\u5bf9\u5e94\u9898\u76ee\u4e2d\u7684\u56db\u4e2a\u60c5\u51b5\uff0c\u4e0d\u96be\u5199\u51fa\u4ee3\u7801\uff0c\u4f46\u9700\u8981\u6ce8\u610f\u5747\u8981\u4f7f\u7528\u5316\u7b80\u4e4b\u540e\u7684\u8868\u8fbe\u5f0f\uff0c\u5176\u4e2d\u6700\u540e\u4e00\u79cd\u60c5\u51b5\u5bf9\u5e94\u4e0d\u80fd\u5316\u7b80\u7684\u60c5\u51b5\uff0c\u5219\u9700\u8981\u628a\u5404\u4e2a\u90e8\u5206\u91cd\u65b0(\u7528 <code>list</code> )\u62fc\u6210 <code>if</code> \u8868\u8fbe\u5f0f\uff0c</p> <pre><code>(cond ((equal? simp-pred #t) simp-then)\n      ((equal? simp-pred #f) simp-else)\n      ((equal? simp-then simp-else) simp-then)\n      (else (list 'if simp-pred simp-then simp-else)))))\n</code></pre> <p>\u7136\u540e <code>simp-context</code> \u4e2d\uff0c\u5c31\u662f\u9700\u8981\u5224\u65ad\u5316\u7b80\u540e\u7684\u8868\u8fbe\u5f0f <code>simp-expr</code> (\u7ed9\u4e86\u80af\u5b9a\u6709\u7528\u80af\u5b9a\u662f\u8981\u7528\u4e0a\u7684\ud83d\ude05)\u662f\u4e0d\u662f\u5728 <code>known-t</code> \u6216\u8005 <code>known-f</code> \u4e2d\uff0c</p> <pre><code>(cond ((in? simp-expr known-t) #t)\n      ((in? simp-expr known-f) #f)\n      (else simp-expr)))\n</code></pre> <p>\u6700\u540e\u7684 <code>simp</code> \u4e2d\u5c31\u5f88\u5bb9\u6613\u4e86\uff0c</p> <p>\u6240\u4ee5\u5b8c\u6574\u7684\u4ee3\u7801\u662f\u8fd9\u6837</p> <pre><code>(define (simp expr)\n  (simp-context expr '(#t) '(#f)))\n\n(define (simp-context expr known-t known-f)\n  (define simp-expr (if (pair? expr)\n                        (simp-if (nth 1 expr) (nth 2 expr) (nth 3 expr) known-t known-f)\n                        expr))\n  (cond ((in? simp-expr known-t) #t)\n        ((in? simp-expr known-f) #f)\n        (else simp-expr)))\n\n(define (simp-if pred then-part else-part known-t known-f)\n  (let ((simp-pred (simp-context pred known-t known-f)))\n    (define simp-then\n      (simp-context then-part (cons simp-pred known-t) known-f))\n    (define simp-else\n      (simp-context else-part known-t (cons simp-pred known-f)))\n    (cond ((equal? simp-pred #t) simp-then)\n          ((equal? simp-pred #f) simp-else)\n          ((equal? simp-then simp-else) simp-then)\n          (else (list 'if simp-pred simp-then simp-else)))))\n</code></pre> <p>\u611f\u89c9\u8fd9\u9898\u8fd8\u662f\u633a\u6709\u610f\u601d\u7684</p>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part3/#3_3","title":"3","text":"<p>\u5728\u6d4b\u8bd5scheme\u4ee3\u7801\u65f6\u53d1\u73b0\uff0c\u8bfe\u7a0b(\u4e4b\u524dhw\u548clab\u4e2d)\u63d0\u4f9b\u7684scheme\u89e3\u91ca\u5668\u4e2d\u5185\u7f6e\u4e86\u52a0\u8f7d <code>.scm</code> \u6587\u4ef6\u7684\u51fd\u6570 <code>load</code> \uff0c</p> <p>\u53d1\u73b0\u4e86\u51e0\u79cd\u52a0\u8f7d\u7684\u65b9\u5f0f\uff0c</p> <ul> <li> <p>1</p> <pre><code>(load \"\u6587\u4ef6\u540d\")\n</code></pre> </li> <li> <p>2</p> <pre><code>(load '\u6587\u4ef6\u540d)\n</code></pre> </li> </ul> <p>\u4ee5\u53ca\uff0c\u5982\u679c\u4e0d\u6dfb\u52a0\u6587\u4ef6\u540e\u7f00\u540d\uff0c\u4f1a\u9ed8\u8ba4\u8ba4\u4e3a\u662fscm\u6587\u4ef6\uff0c\u5373\u4f1a\u81ea\u52a8\u6dfb\u52a0 <code>.scm</code></p> <pre><code>scm&gt; (load \"a\")\nTraceback (most recent call last):\n  0     (load \"a\")\nError: [Errno 2] No such file or directory: 'a.scm' \nscm&gt; (load '../a)  \nTraceback (most recent call last):\n  0     (load (quote ../a))\nError: [Errno 2] No such file or directory: '../a.scm' \n</code></pre>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part3/#lecture-34-database","title":"Lecture 34 Database","text":""},{"location":"Notes%20of%20Courses/CS61A/CS61A_part3/#1_6","title":"1","text":"<p>sql\u4e2d\u521b\u5efa\u6570\u636e\u8868\u7684\u64cd\u4f5c\uff0c</p> <p>John\u8bf4\u5230\uff0c\u53ea\u9700\u8981\u638c\u63e1\u90e8\u5206\u5373\u53ef(\u56fe\u4e2d\u9ed1\u8272\u7684\u90e8\u5206)</p> <p></p> <p>\u5220\u9664\u8868\u7684\u64cd\u4f5c</p> <p></p> <p>\u5728\u8868\u4e0a\u7684\u63d2\u5165\u7684\u64cd\u4f5c</p> <p>John\u7684demo\u6f14\u793a</p> <pre><code>sqlite&gt; create table primes(n, prime);\nsqlite&gt; drop table if exists primes;\nsqlite&gt; select * from primes;\nError: no such table: primes\nsqlite&gt; create table primes(n UNIQUE, prime DEFAULT 1);\nsqlite&gt; select * from primes;\nsqlite&gt; INSERT INTO primes VALUES (2, 1), (3, 1);\nsqlite&gt; select * from primes;\n2|1\n3|1\nsqlite&gt; INSERT INTO primes(n) VALUES (4), (5), (6), (7);\nsqlite&gt; select * from primes;\n2|1\n3|1\n4|1\n5|1\n6|1\n7|1\nsqlite&gt; INSERT INTO primes(n) SELECT n+6 FROM primes;\nsqlite&gt; select * from primes;\n2|1\n3|1\n4|1\n5|1\n6|1\n7|1\n8|1\n9|1\n10|1\n11|1\n12|1\n13|1\nsqlite&gt; INSERT INTO primes(n) SELECT n+12 FROM primes;\nsqlite&gt; select * from primes;\n2|1\n3|1\n4|1\n5|1\n6|1\n7|1\n8|1\n9|1\n10|1\n11|1\n12|1\n13|1\n14|1\n15|1\n16|1\n17|1\n18|1\n19|1\n20|1\n21|1\n22|1\n23|1\n24|1\n25|1\n</code></pre> <p></p> <p>\u66f4\u65b0\u8868\u4e2d\u5217\u7684\u6570\u636e\u7684\u64cd\u4f5c <code>update</code></p> <p>John\u7684demo\u6f14\u793a</p> <pre><code>sqlite&gt; UPDATE primes SET prime=0 WHERE n&gt;2 AND n%2=0;\nsqlite&gt; select * from primes;\n2|1\n3|1\n4|0\n5|1\n6|0\n7|1\n8|0\n9|1\n10|0\n11|1\n12|0\n13|1\n14|0\n15|1\n16|0\n17|1\n18|0\n19|1\n20|0\n21|1\n22|0\n23|1\n24|0\n25|1\nsqlite&gt; UPDATE primes SET prime=0 WHERE n&gt;3 AND n%3=0;\nsqlite&gt; UPDATE primes SET prime=0 WHERE n&gt;5 AND n%5=0;\nsqlite&gt; select * from primes;\n2|1\n3|1\n4|0\n5|1\n6|0\n7|1\n8|0\n9|0\n10|0\n11|1\n12|0\n13|1\n14|0\n15|0\n16|0\n17|1\n18|0\n19|1\n20|0\n21|0\n22|0\n23|1\n24|0\n25|0\n</code></pre> <p></p> <p>\u8868\u4e2d\u5220\u9664\u7684\u64cd\u4f5c</p> <p>John\u7684demo\u6f14\u793a</p> <pre><code>sqlite&gt; DELETE FROM primes WHERE prime=0;\nsqlite&gt; select * from primes;\n2|1\n3|1\n5|1\n7|1\n11|1\n13|1\n17|1\n19|1\n23|1\n</code></pre>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part3/#2_6","title":"2","text":"<p>John demo\u6f14\u793a\u4e86\u5982\u4f55\u5728python\u4e2d\u4f7f\u7528sql</p> <p></p> <ul> <li> <p>\u4f7f\u7528 <code>sqlite3.Connection(\"xxx.db\")</code> \u6765\u52a0\u8f7ddb\u6587\u4ef6\uff0c\u7136\u540e\u4f1a\u8fd4\u56de\u4e00\u4e2a <code>Connection</code> \u7c7b\u7684\u5b9e\u4f8b</p> <p>db\u6587\u4ef6\u662f\u6570\u636e\u5e93 database\u6587\u4ef6</p> </li> <li> <p>\u4f7f\u7528 <code>execute</code> \u65b9\u6cd5\u53ef\u4ee5\u6267\u884csql\u7684\u547d\u4ee4/\u8bed\u53e5</p> <p>\u5e76\u4e14\uff0c\u53ef\u4ee5\u6709\u5982\u4e0a\u56fe\u4e2d\u7684\u8fd9\u6837\u7684\u64cd\u4f5c</p> <pre><code>db.execute(\"INSERT INTO nums VALUES (?), (?), (?);\", range(4, 7))\n</code></pre> </li> <li> <p>\u8c03\u7528 <code>execute</code> \u65b9\u6cd5\uff0c\u65b9\u6cd5\u7684\u8fd4\u56de\u503c\u6709 <code>fetchall</code> \u65b9\u6cd5\uff0c\u53ef\u4ee5\u5c06\u672c\u6765\u5e94\u8be5\u663e\u793a\u7684\u6570\u636e\u8f6c\u6362\u6210\u5143\u7ec4\uff0c\u5982\u4e0a\u56fe\u4e2d\u7684</p> <pre><code>print(db.execute(\"SELECT * FROM nums;\").fetchall())\n</code></pre> <pre><code>~/lec$ python3 ex.py\n[(2,), (3,), (4,), (5,), (6,)]\n</code></pre> </li> <li> <p>\u4f7f\u7528 <code>commit</code> \u65b9\u6cd5\u53ef\u4ee5\u5c06\u6570\u636e\u50a8\u5b58\u5230\u5bf9\u5e94\u7684db\u6587\u4ef6\u4e2d\uff0c\u5982\u679c\u6ca1\u6709\u8fd9\u4e2a\u6587\u4ef6\u4f1a\u65b0\u5efa\u4e00\u4e2a\u6587\u4ef6\uff0c\u4e0a\u56feJohn\u7684demo\u6f14\u793a\u4e2d\uff0c\u8fd0\u884c <code>python3 ex.py</code> \u524d\u5df2\u7ecf\u8fd0\u884c <code>rm n.db</code> \u547d\u4ee4</p> </li> </ul>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part3/#3_4","title":"3","text":"<p>John\u8bf4\u9053\uff0c\u4e3a\u4e86\u907f\u514d\u5728python\u4e2d\u4f7f\u7528sql\uff0c\u63d2\u5165\u67d0\u4e9b\u7279\u6b8a\u7684\u540d\u5b57\u800c\u5f15\u53d1\u7684\u4e00\u4e9b\u9519\u8bef\uff0c\u8981(\u5982\u4e0a\u56fe)\u4f7f\u7528 <code>execute</code> \u65b9\u6cd5\u6765\u63d2\u5165\u540d\u5b57\uff0c</p> <p>\u800c\u4e0d\u662f\u4f7f\u7528python\u7684\u5b57\u7b26\u4e32\u62fc\u63a5\u548c <code>executescript</code> \u65b9\u6cd5( <code>executescript</code> \u65b9\u6cd5\u4f1a\u6267\u884c\u591a\u884csql\u8bed\u53e5)</p>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part3/#lecture-34-qa","title":"Lecture 34 Q&amp;A","text":""},{"location":"Notes%20of%20Courses/CS61A/CS61A_part3/#1_7","title":"1","text":"<p>John\u89e3\u91ca\u4e4b\u524d\u8bfe\u4e0a\u7528python\u548csql\u6a21\u62df\u8d4c\u573a21\u70b9 Casino Blackjack\u6e38\u620f\u7684\u4ee3\u7801\u4e2d\u7684 <code>sqlite3.Connection</code> \u7c7b\u7684\u5177\u4f53\u4f5c\u7528</p> <p>Quote</p> <p>John:</p> <p>The question is, here are some demos from today's lecture. There's this line that's like \"build a connection\" to some database,</p> <pre><code>db = sqlite3.Connection('number.db')\n</code></pre> <p>and then, you know, we give it a name \u2013 give it any name you want, \"db\" or \"n\" or something like that. What would happen if you evaluated this same expression a second time? Would that give you a new database or the same database, or would it erase the old one? Like, what's the story?</p> <p>And the story is that this name, which describes the name of a file on your file system, is a database that won't ever just get erased. Instead, it's persistent. Even if you quit Python and start Python again, it will retain whatever information was in it before. If you evaluate this expression multiple times, then you just get multiple connections to the same database with the same data in it, and that's okay. Actually, databases are designed to have multiple connections.</p> <p>And what do these connections mean? That means different programs might all be changing the database or querying the database at the same time. But that doesn't mean that the database is going to get refreshed or changed or something like that. It basically just stays there and accumulates information over time. If one program changes it and then another program queries it, that second program is going to see the changes from the first program.</p> <p>So, I think within a particular Python program, there really isn't a good reason to have multiple connections. Usually, those multiple connections come from multiple Python programs, or maybe they're not all Python, but you certainly could do it, and I don't think anything would break.</p> <p>John:</p> <p>\u95ee\u9898\u662f\uff0c\u8fd9\u91cc\u6709\u4eca\u5929\u8bb2\u5ea7\u4e2d\u7684\u4e00\u4e9b\u6f14\u793a\u3002\u6709\u8fd9\u6837\u4e00\u884c\u4ee3\u7801\uff0c\u7c7b\u4f3c\u4e8e\u201c\u5efa\u7acb\u4e00\u4e2a\u8fde\u63a5\u201d\u5230\u67d0\u4e2a\u6570\u636e\u5e93\uff0c</p> <pre><code>db = sqlite3.Connection('number.db')\n</code></pre> <p>\u7136\u540e\uff0c\u4f60\u77e5\u9053\uff0c\u6211\u4eec\u7ed9\u5b83\u4e00\u4e2a\u540d\u5b57 - \u968f\u4fbf\u53d6\u4e2a\u540d\u5b57\uff0c\u6bd4\u5982\u201cdb\u201d\u6216\u201cn\u201d\u4e4b\u7c7b\u7684\u3002\u5982\u679c\u4f60\u591a\u6b21\u8bc4\u4f30\u76f8\u540c\u7684\u8868\u8fbe\u5f0f\u4f1a\u53d1\u751f\u4ec0\u4e48\uff1f\u8fd9\u4f1a\u7ed9\u4f60\u4e00\u4e2a\u65b0\u7684\u6570\u636e\u5e93\u8fd8\u662f\u76f8\u540c\u7684\u6570\u636e\u5e93\uff0c\u6216\u8005\u4f1a\u64e6\u9664\u65e7\u7684\u6570\u636e\u5e93\uff1f\u8fd9\u662f\u4ec0\u4e48\u60c5\u51b5\uff1f</p> <p>\u6545\u4e8b\u662f\uff0c\u8fd9\u4e2a\u63cf\u8ff0\u4f60\u6587\u4ef6\u7cfb\u7edf\u4e0a\u6587\u4ef6\u540d\u7684\u540d\u79f0\u662f\u4e00\u4e2a\u6570\u636e\u5e93\uff0c\u5b83\u4e0d\u4f1a\u88ab\u8f7b\u6613\u64e6\u9664\u3002\u76f8\u53cd\uff0c\u5b83\u662f\u6301\u4e45\u7684\u3002\u5373\u4f7f\u4f60\u9000\u51fa Python \u5e76\u91cd\u65b0\u542f\u52a8 Python\uff0c\u5b83\u5c06\u4fdd\u7559\u4e4b\u524d\u7684\u6240\u6709\u4fe1\u606f\u3002\u5982\u679c\u4f60\u591a\u6b21\u8bc4\u4f30\u8fd9\u4e2a\u8868\u8fbe\u5f0f\uff0c\u90a3\u4e48\u4f60\u53ea\u662f\u5f97\u5230\u5bf9\u540c\u4e00\u4e2a\u6570\u636e\u5e93\u7684\u591a\u4e2a\u8fde\u63a5\uff0c\u5176\u4e2d\u5305\u542b\u76f8\u540c\u7684\u6570\u636e\uff0c\u8fd9\u662f\u53ef\u4ee5\u7684\u3002\u5b9e\u9645\u4e0a\uff0c\u6570\u636e\u5e93\u88ab\u8bbe\u8ba1\u4e3a\u5177\u6709\u591a\u4e2a\u8fde\u63a5\u3002</p> <p>\u90a3\u4e48\u8fd9\u4e9b\u8fde\u63a5\u610f\u5473\u7740\u4ec0\u4e48\uff1f\u8fd9\u610f\u5473\u7740\u4e0d\u540c\u7684\u7a0b\u5e8f\u53ef\u80fd\u4f1a\u540c\u65f6\u66f4\u6539\u6570\u636e\u5e93\u6216\u67e5\u8be2\u6570\u636e\u5e93\u3002\u4f46\u8fd9\u5e76\u4e0d\u610f\u5473\u7740\u6570\u636e\u5e93\u4f1a\u88ab\u5237\u65b0\u3001\u66f4\u6539\u6216\u7c7b\u4f3c\u7684\u4e8b\u60c5\u3002\u5b83\u57fa\u672c\u4e0a\u5c31\u5728\u90a3\u91cc\uff0c\u5e76\u968f\u7740\u65f6\u95f4\u7d2f\u79ef\u4fe1\u606f\u3002\u5982\u679c\u4e00\u4e2a\u7a0b\u5e8f\u66f4\u6539\u4e86\u5b83\uff0c\u7136\u540e\u53e6\u4e00\u4e2a\u7a0b\u5e8f\u67e5\u8be2\u5b83\uff0c\u90a3\u4e48\u7b2c\u4e8c\u4e2a\u7a0b\u5e8f\u5c06\u770b\u5230\u7b2c\u4e00\u4e2a\u7a0b\u5e8f\u7684\u66f4\u6539\u3002</p> <p>\u56e0\u6b64\uff0c\u6211\u8ba4\u4e3a\u5728\u4e00\u4e2a\u7279\u5b9a\u7684 Python \u7a0b\u5e8f\u4e2d\uff0c\u6ca1\u6709\u771f\u6b63\u9700\u8981\u6709\u591a\u4e2a\u8fde\u63a5\u7684\u597d\u7406\u7531\u3002\u901a\u5e38\uff0c\u8fd9\u4e9b\u591a\u4e2a\u8fde\u63a5\u6765\u81ea\u591a\u4e2a Python \u7a0b\u5e8f\uff0c\u6216\u8005\u5b83\u4eec\u5e76\u975e\u5168\u90e8\u90fd\u662f Python\uff0c\u4f46\u4f60\u5f53\u7136\u53ef\u4ee5\u8fd9\u6837\u505a\uff0c\u6211\u8ba4\u4e3a\u4e0d\u4f1a\u6709\u4ec0\u4e48\u95ee\u9898\u3002</p>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part3/#2_7","title":"2","text":"<p>\u6709\u4eba\u63d0\u95eescheme\u4e2d\u5728 <code>let</code> \u4e2d\u7684 <code>define</code> \u662f\u5426\u4f1a\u5f71\u54cd\u5230\u5168\u5c40\u6846\u67b6\uff0c</p> <p>John\u8fdb\u884c\u6f14\u793a\uff0c\u53d1\u73b0 <code>let</code> \u8bed\u53e5\u4e2d\u5d4c\u5957\u7684 <code>define</code> \u8bed\u53e5\u5e76\u4e0d\u4f1a\u4fee\u6539\u4e0a\u4e00\u5c42\u6846\u67b6\uff0c\u800c\u53ea\u4f1a\u4fee\u6539 <code>let</code> \u7684\u6846\u67b6</p> <pre><code>scm&gt; (let ((x 1)) (define a x) (+ x 1))\n2\nscm&gt; a\nTraceback (most recent call last):\n  0     a\nError: unknown identifier: a\nscm&gt; (let ((x 1)) (define a x) (+ x a))\n2\n</code></pre>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part3/#3_5","title":"3","text":"<p>\u6709\u4eba\u63d0\u95eesql\u4e2d <code>select</code> \u80fd\u4e0d\u80fd\u5d4c\u5957\u5728 <code>where</code> \u4e2d\uff0c\u4e8e\u662fJohn\u6f14\u793a\u4e86\u4e00\u79cd\u7528\u6cd5</p> <pre><code>sqlite&gt; CREATE TABLE numbers AS SELECT 1 AS n UNION SELECT 2 UNION SELECT 3 UNION SELECT 5;\nsqlite&gt; SELECT * FROM numbers;\n1\n2\n3\n5\nsqlite&gt; SELECT * FROM numbers WHERE (SELECT MAX(n) FROM NUMBERS) &gt; n;\n1\n2\n3\n</code></pre> <p>\u4e00\u5f00\u59cb\u8fd8\u6ca1\u7406\u89e3\u8fd9\u662f\u4ec0\u4e48\u610f\u601d\ud83d\ude05\uff0c\u770b\u4e86\u4e00\u4f1a\u4e4b\u540e\u624d\u660e\u767d\uff0c\u62ec\u53f7\u5185\u7684 <code>select</code> \u8bed\u53e5\u5927\u6982\u662f\u4ece\u539f\u6765\u7684\u8868\u521b\u5efa\u4e86\u4e00\u884c\u65b0\u7684\u6570\u636e\uff0c\u7136\u540e\u7528\u8fd9\u884c\u65b0\u7684\u6570\u636e\u5728 <code>where</code> \u4e2d\u8fdb\u884c\u7b5b\u9009\uff0c\u6240\u4ee5\u8fd9\u91cc <code>MAX(n)</code> \u6700\u540e\u83b7\u5f97\u7684\u662f5\uff0c\u800c\u5c0f\u4e8e5\u7684\u53ea\u67091 2 3</p> <p>\u4f46\u662f\u89c9\u5f97\u8fd9\u79cd\u7528\u6cd5\u786e\u5b9e\u5982\u540cJohn\u8bf4\u7684\u4e00\u6837\u6ca1\u4ec0\u4e48\u592a\u5927\u7684\u4f5c\u7528\ud83d\ude05</p>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part3/#hw-09","title":"HW 09","text":""},{"location":"Notes%20of%20Courses/CS61A/CS61A_part3/#1_8","title":"1","text":"<p>Q2\u4e2d\uff0c\u4e00\u5f00\u59cb\u60f3\u7684\u662f\u5224\u65ad\u7236\u6bcd\u5728\u4e0d\u5728 <code>parents</code> \u4e2d\uff0c\u4f46\u6700\u540e\u53d1\u73b0\u6392\u5e8f\u9700\u8981\u6309\u7167\u7236\u6bcd\u7684\u8eab\u9ad8\u6765\u6392\u5e8f\uff0c\u6240\u4ee5\u53d1\u73b0\u53ea\u80fd\u5224\u65ad\u5b50\u5973\u5728\u4e0d\u5728 <code>parents</code> \u4e2d\uff0c</p> <p>\u5e76\u4e14\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u662f\u4ece\u9ad8\u5230\u77ee\u6392\u5e8f\uff0c\u6240\u4ee5\u9700\u8981\u4e58\u4e00\u4e2a <code>-1</code> (\u4e00\u5f00\u59cb\u6ca1\u6ce8\u610f\u7ed3\u679c\u521a\u597d\u53cd\u8fc7\u6765\u4e86\ud83d\ude05)</p> code <pre><code>CREATE TABLE by_parent_height AS\n  select a.child from parents as a, dogs as b\n  where b.name = a.parent order by b.height*-1;\n</code></pre>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part3/#2_8","title":"2","text":"<p>Q3\u9898\u76ee\u7684\u63d0\u793a\u4e2d\u63d0\u5230sql\u4e2d\u8fde\u63a5\u5b57\u7b26\u4e32\u8981\u4f7f\u7528 <code>||</code></p> <p>Hint: In order to concatenate two strings into one, use the <code>||</code> operator.</p> code <pre><code>CREATE TABLE siblings AS\n  select a.child as first_child, b.child as second_child from parents as a, parents as b\n  where a.child &lt; b.child and a.parent = b.parent;\n\nCREATE TABLE sentences AS\n  select \"The two siblings, \"||a.first_child||\" plus \"||a.second_child||\" have the same size: \"||b.size \n  from siblings as a, size_of_dogs as b, size_of_dogs as c \n  where a.first_child = b.name and a.second_child = c.name and b.size = c.size;\n</code></pre>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part3/#lecture-35-tail-calls","title":"Lecture 35 Tail Calls","text":""},{"location":"Notes%20of%20Courses/CS61A/CS61A_part3/#1_9","title":"1","text":"<p>John\u4ecb\u7ecd\u4e86\u4e00\u4e0b \u51fd\u6570\u5f0f\u7f16\u7a0b Functional Programming</p> <p></p> <p>\u6240\u6709\u7684\u51fd\u6570\u90fd\u662f\u7eaf\u51fd\u6570\u3002</p> <p>\u6ca1\u6709\u91cd\u65b0\u8d4b\u503c\uff0c\u4e5f\u6ca1\u6709\u53ef\u53d8\u7684\u6570\u636e\u7c7b\u578b\u3002</p> <p>\u540d\u79f0-\u503c\u7684\u7ed1\u5b9a\u662f\u6c38\u4e45\u7684\u3002</p> <p>\u51fd\u6570\u5f0f\u7f16\u7a0b\u7684\u4f18\u52bf\uff1a</p> <ul> <li>\u8868\u8fbe\u5f0f\u7684\u503c\u4e0e\u5b50\u8868\u8fbe\u5f0f\u6c42\u503c\u7684\u987a\u5e8f\u65e0\u5173\u3002</li> <li>\u5b50\u8868\u8fbe\u5f0f\u53ef\u4ee5\u5b89\u5168\u5730\u5e76\u884c\u6216\u6309\u9700(\u60f0\u6027\u5730)\u8fdb\u884c\u6c42\u503c\u3002</li> <li>\u5f15\u7528\u900f\u660e\u6027\uff1a\u5f53\u6211\u4eec\u7528\u5b50\u8868\u8fbe\u5f0f\u7684\u503c\u66ff\u6362\u8be5\u5b50\u8868\u8fbe\u5f0f\u7684\u503c\u65f6\uff0c\u8868\u8fbe\u5f0f\u7684\u503c\u4e0d\u4f1a\u6539\u53d8\u3002</li> </ul>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part3/#2_9","title":"2","text":"<p>John\u63d0\u5230\u4e86\u533a\u5206\u51fa\u5c3e\u8c03\u7528\u7684\u4e00\u79cd\u65b9\u6cd5\uff0c</p> <p>Quote</p> <p>John:</p> <p>...It's a distinction that figures out whether, when one procedure is calling another procedure, is there more work to do when that called procedure is finished or not. If there isn't anything else to do, besides just return the value of the expression you call, well then that's a tail call.</p> <p>John:</p> <p>...\u8fd9\u662f\u4e00\u79cd\u533a\u5206\u7684\u65b9\u6cd5\uff0c\u7528\u4e8e\u786e\u5b9a\u5f53\u4e00\u4e2a\u8fc7\u7a0b\u8c03\u7528\u53e6\u4e00\u4e2a\u8fc7\u7a0b\u65f6\uff0c\u8c03\u7528\u7684\u8fc7\u7a0b\u5b8c\u6210\u540e\u662f\u5426\u8fd8\u6709\u5176\u4ed6\u5de5\u4f5c\u8981\u505a\u3002\u5982\u679c\u9664\u4e86\u8fd4\u56de\u4f60\u8c03\u7528\u7684\u8868\u8fbe\u5f0f\u7684\u503c\u4e4b\u5916\u6ca1\u6709\u5176\u4ed6\u4e8b\u60c5\u8981\u505a\uff0c\u90a3\u4e48\u8fd9\u5c31\u662f\u4e00\u4e2a\u5c3e\u8c03\u7528\u3002</p> <p>\u7136\u540e\u53c8\u4ecb\u7ecd\u4e86\u5c3e\u8c03\u7528\u7684\u4e00\u4e9b\u7279\u5f81</p> <p></p>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part3/#3_6","title":"3","text":"<p>John\u8bf4\u9053 \u662f\u7ebf\u6027\u9012\u5f52 linear recursion\u4f46\u4e0d\u662f/\u4e0d\u6ee1\u8db3\u5c3e\u8c03\u7528\u683c\u5f0f\u7684\u51fd\u6570\uff0c\u53ef\u4ee5\u88ab\u6539\u5199\u6210\u5c3e\u9012\u5f52/\u5c3e\u8c03\u7528\u7684\u5f62\u5f0f\uff0c\u5e76\u7528\u6c42\u94fe\u8868\u957f\u5ea6\u7684\u51fd\u6570\u6765\u8bf4\u660e</p>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part3/#4_1","title":"4","text":"<p>John\u4e3e\u4e86\u51e0\u4e2a\u4f8b\u5b50\u8bf4\u660e\u662f\u5c3e\u9012\u5f52\u7684\u51fd\u6570\u662f\u4ec0\u4e48\u6837\u7684</p> <p></p>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part3/#5_1","title":"5","text":"<p>John\u5728\u7528 <code>reduce</code> \u51fd\u6570\u8bb2\u89e3\u5c3e\u8c03\u7528\uff0c\u8bf4\u5728 <code>reduce</code> \u7684\u5b9e\u73b0\u4e2d\uff0c\u9664\u4e86 <code>(procedure start (car s))</code> \u90fd\u662f\u5c3e\u8c03\u7528\uff0c\u800c\u6700\u7ec8 <code>reduce</code> \u662f\u5426\u53ea\u9700\u4f7f\u7528\u56fa\u5b9a\u5927\u5c0f\u7684\u7a7a\u95f4 \u53d6\u51b3\u4e8e <code>procedure</code> \u662f\u5426\u4f7f\u7528\u56fa\u5b9a\u5927\u5c0f\u7684\u7a7a\u95f4</p>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part3/#6_1","title":"6","text":"<p>John\u8bb2\u89e3\u5982\u4f55\u5c06 <code>map</code> \u51fd\u6570\u6539\u5199\u6210\u5c3e\u9012\u5f52\u7684\u5f62\u5f0f\uff0c</p> <p>\u5927\u81f4\u7684\u601d\u8def\u662f\uff0c\u5148\u5c06\u5e94\u7528\u51fd\u6570\u5230\u76ee\u6807\u94fe\u8868\u4e0a\uff0c\u5f97\u5230\u4e00\u4e2a\u5012\u5e8f\u7684\u94fe\u8868(\u56e0\u4e3a\u8981\u5c3e\u9012\u5f52\u7684\u8bdd\u5c31\u53ea\u80fd\u4ece\u5c3e\u90e8\u5f00\u59cb)\uff0c\u7136\u540e\u518d\u5c06\u5012\u5e8f\u7684\u94fe\u8868\u7684\u987a\u5e8f\u8f6c\u6362\u56de\u6765( <code>reverse</code> \u51fd\u6570)\uff0c\u800c\u8fd9\u4e2a\u8fc7\u7a0b\u4e5f\u662f\u5c3e\u9012\u5f52\u7684\uff0c\u6240\u4ee5\u6574\u4e2a <code>map</code> \u5c31\u5b9e\u73b0\u4e86\u5c3e\u9012\u5f52\u7684\u5f62\u5f0f</p>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part3/#lab-13","title":"Lab 13","text":""},{"location":"Notes%20of%20Courses/CS61A/CS61A_part3/#1_10","title":"1","text":"<p>\u53d1\u73b0\u8fd9\u4e2alab\u7684zip\u4e2d\u7684 <code>sqlite_shell.py</code> \u6587\u4ef6\u548clab12\u4e2d\u4e00\u6837\u662f\u7a7a\u7684</p>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part3/#2_10","title":"2","text":"<p>\u5728\u5199Q3\u65f6\uff0c\u53d1\u73b0 <code>where</code> \u653e\u5728 <code>group by</code> \u4e4b\u540e\u4f1a\u62a5\u9519\uff0c</p> <pre><code>near \"where\": syntax error\n</code></pre> <p>\u7136\u540e\u8c03\u6574\u4e86\u4e00\u4e0b\u987a\u5e8f\u4e4b\u540e\u5c31\u597d\u4e86</p> code <pre><code>create table helper as\n  select a.name as name, min(a.MSRP/a.rating), b.store as store \n  from products as a, lowest_prices as b where a.name = b.item group by category;\n\nCREATE TABLE shopping_list AS\n  -- SELECT \"REPLACE THIS LINE WITH YOUR SOLUTION\";\n  select name, store from helper;\n</code></pre>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part3/#lecture-36-macros","title":"Lecture 36 Macros","text":""},{"location":"Notes%20of%20Courses/CS61A/CS61A_part3/#1_11","title":"1","text":"<p>\u5173\u4e8e \u5b8f Macro \u7684\u4e00\u4e9b\u8bf4\u660e</p> <p>\u5b8f\u8c03\u7528\u8868\u8fbe\u5f0f\u7684\u6c42\u503c\u8fc7\u7a0b:</p> <ul> <li>\u8ba1\u7b97\u64cd\u4f5c\u7b26\u5b50\u8868\u8fbe\u5f0f\uff0c\u5176\u7ed3\u679c\u4e3a\u4e00\u4e2a\u5b8f</li> <li>\u5bf9\u64cd\u4f5c\u6570\u8868\u8fbe\u5f0f\u8fdb\u884c\u8c03\u7528\uff0c\u800c\u4e0d\u5148\u5bf9\u5b83\u4eec\u8fdb\u884c\u6c42\u503c</li> <li>\u8ba1\u7b97\u4ece\u5b8f\u8fc7\u7a0b\u8fd4\u56de\u7684\u8868\u8fbe\u5f0f</li> </ul>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part3/#2_11","title":"2","text":"<p>John\u6f14\u793a\u4e86\u5982\u679c\u4e0d\u4f7f\u7528\u5b8f\uff0c\u5c31\u65e0\u6cd5\u5b9e\u73b0 <code>twice</code> \u51fd\u6570\uff0c</p>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part3/#3_7","title":"3","text":"<p>John\u6f14\u793a\u4e86\u4f7f\u7528 <code>define-macro</code> \u548c <code>define</code> \u5e94\u7528\u4e8e\u540c\u6837\u7684\u4ee3\u7801\u7684\u4e0d\u540c\u6548\u679c</p> <p></p> <p></p>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part3/#lab-14","title":"Lab 14","text":""},{"location":"Notes%20of%20Courses/CS61A/CS61A_part3/#1_12","title":"1","text":"<p>Q1\uff0c\u9700\u8981\u6ce8\u610f\u6ca1\u6709\u8fd4\u56de\u503c(\u4ece\u6d4b\u8bd5\u6587\u6863\u4e2d\u53ef\u4ee5\u5f97\u77e5)</p> code <pre><code>def prune_min(t):\n    \"*** YOUR CODE HERE ***\"\n    if t.is_leaf():\n        return\n    min_b = min(t.branches, key=lambda t: t.label)\n    prune_min(min_b)\n    t.branches = [min_b]\n</code></pre>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part3/#2_12","title":"2","text":"<p>Q2\u8fd9\u9898\u6ca1\u6709\u7ed9\u4f8b\u5b50\uff0c\u6240\u4ee5\u5bfc\u81f4\u6211\u4e00\u5f00\u59cb\u6ca1\u7406\u89e3\u51c6\u786e\u9898\u76ee\u7684\u610f\u601d\ud83d\ude05\uff0c\u7406\u89e3\u51c6\u786e\u4e86\u5c31\u4e0d\u662f\u5f88\u96be\u4e86\uff0c</p> <p>\u8fd9\u662f\u4e24\u4e2a\u6d4b\u8bd5\u7684\u4f8b\u5b50</p> <pre><code>scm&gt; (car (split-at '(1 2 3 4 5) 3))\n(1 2 3)\nscm&gt; (cdr (split-at '(1 2 3 4 5) 3))\n(4 5)\n</code></pre> code <pre><code>(define (split-at lst n)\n  'YOUR-CODE-HERE\n  (if (or (null? lst) (= n 0))\n      (cons nil lst)\n      (let ((rest (split-at (cdr lst) (- n 1))))\n           (cons (cons (car lst) (car rest)) (cdr rest))))\n)\n</code></pre>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part3/#3_8","title":"3","text":"<p>Q3\u8fd9\u9898\u6709\u70b9\u96be\u60f3\uff0c\u6211\u60f3\u4e86\u4e00\u4f1a\u624d\u60f3\u51fa\u4ee3\u7801</p> code <pre><code>(define (compose-all funcs)\n  'YOUR-CODE-HERE\n  (if (null? funcs)\n      (lambda (x) x)\n      (lambda (x) ((compose-all (cdr funcs)) ((car funcs) x))))\n)\n</code></pre>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part3/#4_2","title":"4","text":"<p>Q4\u8fd9\u9898\u633a\u96be\u7684\uff0c\u60f3\u4e86\u597d\u4e45\u624d\u60f3\u51fa\u6765</p> <p>\u4e00\u5f00\u59cb\u4ee5\u4e3a\uff0c\u9700\u8981\u5c06\u5217\u8868\u4e2d\u7684\u5143\u7d20\u4e00\u4e2a\u4e00\u4e2a\u9012\u5f52\u5730\u53bb\u9664\u6765\u5224\u65ad(\u53ef\u80fd\u662fscheme\u5199\u591a\u4e86\u7684\u539f\u56e0\ud83d\ude05)\uff0c\u7136\u540e\u5c1d\u8bd5\u4e86\u5f88\u4e45\u90fd\u6ca1\u6709\u601d\u8def\uff0c</p> <p>\u5728\u91cd\u65b0\u7406\u89e3\u8fd9\u4e2a\u4f8b\u5b50\u65f6\uff0c</p> <pre><code>&gt;&gt;&gt; num_splits([1, 5, 4], 0)  # splits to [1, 4] and [5]\n1\n</code></pre> <p>\u7a81\u7136\u60f3\u5230 <code>1 - 5 + 4 = 0</code> \uff0c\u7136\u540e\u5c31\u60f3\u5230\u4e86\u53ef\u4ee5\u901a\u8fc7\u7ed9\u6570\u5b57\u52a0\u4e0a\u6b63\u8d1f\u53f7\u6765\u5224\u65ad\u5206\u5230\u54ea\u4e00\u8fb9\uff0c\u4e8e\u662f\u5199\u4e86\u4e00\u4e2a\u8f85\u52a9\u51fd\u6570</p> <pre><code>def spliter(s, d, current_diff):\n    if s == []:\n        return 1 if current_diff &gt;= 0 and current_diff &lt;= d else 0\n    else:\n        return spliter(s[1:], d, current_diff + s[0]) + spliter(s[1:], d, current_diff - s[0])\n</code></pre> <p>\u5224\u65ad <code>current_diff &gt;= 0</code> \u672c\u6765\u662f\u60f3\u901a\u8fc7\u8fd9\u6837\u6765\u53bb\u6389\u76f8\u53cd\u987a\u5e8f/\u8fb9\u7684\u4e00\u534a(\u987a\u5e8f\u76f8\u53cd\u7684\u8bdd\u6700\u540e\u7684\u5dee\u503c\u5e94\u8be5\u521a\u597d\u662f\u76f8\u53cd\u6570)\uff0c\u4f46\u662f\u5c31\u5728 <code>num_splits([1, 5, 4], 0)</code> \u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c\u91cd\u590d\u7684\u53e6\u4e00\u534a\u5dee\u503c\u4e5f\u521a\u597d\u662f0\uff0c\u4e8e\u662f\u6700\u540e\u5f97\u5230\u4e862</p> <p>\u7136\u540e\u601d\u8003\u4e86\u4e00\u4f1a\u540e\uff0c\u4fee\u6539\u6210\u4e86\u76f4\u63a5\u7b97\u51fa\u5305\u542b\u91cd\u590d\u7684\u6240\u6709\u7684\u60c5\u51b5\uff0c\u518d\u96642\u5c31\u597d\u4e86</p> code <pre><code>def num_splits(s, d):\n    \"*** YOUR CODE HERE ***\"\n    def spliter(s, d, current_diff):\n        if s == []:\n            return 1 if abs(current_diff) &lt;= d else 0\n        else:\n            return spliter(s[1:], d, current_diff + s[0]) + spliter(s[1:], d, current_diff - s[0])\n    return spliter(s, d, 0) // 2\n</code></pre>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part3/#4_3","title":"4","text":"<p>Q6\uff0c\u8fd9\u9898\u9898\u76ee\u770b\u7740\u6bd4\u8f83\u590d\u6742\uff0c\u4f46\u5176\u5b9e\u5927\u6982\u7684\u4ee3\u7801\u6846\u67b6\u57fa\u672c\u4e0a\u90fd\u5df2\u7ecf\u5199\u597d\u4e86\uff0c\u9700\u8981\u586b\u5145\u7684\u90e8\u5206\u601d\u8def\u548c\u4e4b\u524d\u7684\u4e00\u9898\u5927\u81f4\u4e0a\u662f\u7c7b\u4f3c\u7684\uff0c\u6240\u4ee5\u6700\u540e\u5199\u8d77\u6765\u8fd8\u662f\u6bd4\u8f83\u597d\u5199\u7684</p> <p>\u5199\u7684\u8fc7\u7a0b\u4e2d\u53d1\u73b0\uff0cpython\u4e2d\u5b57\u7b26\u4e32\u4e0d\u80fd\u7528 \u5207\u7247\u8d4b\u503c</p> <pre><code>&gt;&gt;&gt; align_skeleton(skeleton=\"i\", code=\"i\")\nTraceback (most recent call last):\n  File \"C:\\Courses\\cs61a\\lab\\lab14\\lab14.py\", line 189, in align_skeleton\n    result, cost = helper_align(0, 0)\n  File \"C:\\Courses\\cs61a\\lab\\lab14\\lab14.py\", line 178, in helper_align\n    match_match[0:0] = skel_char\nTypeError: 'str' object does not support item assignment\n</code></pre> code <pre><code>def align_skeleton(skeleton, code):\n    \"\"\"\n    Aligns the given skeleton with the given code, minimizing the edit distance between\n    the two. Both skeleton and code are assumed to be valid one-line strings of code. \n\n    &gt;&gt;&gt; align_skeleton(skeleton=\"\", code=\"\")\n    ''\n    &gt;&gt;&gt; align_skeleton(skeleton=\"\", code=\"i\")\n    '+[i]'\n    &gt;&gt;&gt; align_skeleton(skeleton=\"i\", code=\"\")\n    '-[i]'\n    &gt;&gt;&gt; align_skeleton(skeleton=\"i\", code=\"i\")\n    'i'\n    &gt;&gt;&gt; align_skeleton(skeleton=\"i\", code=\"j\")\n    '+[j]-[i]'\n    &gt;&gt;&gt; align_skeleton(skeleton=\"x=5\", code=\"x=6\")\n    'x=+[6]-[5]'\n    &gt;&gt;&gt; align_skeleton(skeleton=\"return x\", code=\"return x+1\")\n    'returnx+[+]+[1]'\n    &gt;&gt;&gt; align_skeleton(skeleton=\"while x&lt;y\", code=\"for x&lt;y\")\n    '+[f]+[o]+[r]-[w]-[h]-[i]-[l]-[e]x&lt;y'\n    &gt;&gt;&gt; align_skeleton(skeleton=\"def f(x):\", code=\"def g(x):\")\n    'def+[g]-[f](x):'\n    \"\"\"\n    skeleton, code = skeleton.replace(\" \", \"\"), code.replace(\" \", \"\")\n\n    def helper_align(skeleton_idx, code_idx):\n        \"\"\"\n        Aligns the given skeletal segment with the code.\n        Returns (match, cost)\n            match: the sequence of corrections as a string\n            cost: the cost of the corrections, in edits\n        \"\"\"\n        if skeleton_idx == len(skeleton) and code_idx == len(code):\n            return \"\", 0\n        if skeleton_idx &lt; len(skeleton) and code_idx == len(code):\n            edits = \"\".join([\"-[\" + c + \"]\" for c in skeleton[skeleton_idx:]])\n            return edits, len(skeleton) - skeleton_idx\n        if skeleton_idx == len(skeleton) and code_idx &lt; len(code):\n            edits = \"\".join([\"+[\" + c + \"]\" for c in code[code_idx:]])\n            return edits, len(code) - code_idx\n\n        possibilities = []\n        skel_char, code_char = skeleton[skeleton_idx], code[code_idx]\n        # Match\n        if skel_char == code_char:\n            match_match, cost_match = helper_align(skeleton_idx + 1, code_idx + 1)\n            match_match = skel_char + match_match\n            possibilities .append((match_match, cost_match))\n        # Insert\n        match_insert, cost_insert = helper_align(skeleton_idx, code_idx + 1)\n        # match_insert[0:0] = \"+[\" + code_char + \"]\"\n        match_insert = \"+[\" + code_char + \"]\" + match_insert\n        possibilities.append((match_insert, cost_insert + 1))\n        # Delete\n        match_delete, cost_delete = helper_align(skeleton_idx + 1, code_idx)\n        # match_delete[0:0] = \"-[\" + skel_char + \"]\"\n        match_delete = \"-[\" + skel_char + \"]\" + match_delete\n        possibilities.append((match_delete, cost_delete + 1))\n        return min(possibilities, key=lambda x: x[1])\n    result, cost = helper_align(0, 0)\n    return result\n</code></pre>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part3/#5_2","title":"5","text":"<p>Q8\uff0c\u8fd9\u9898\u4e00\u5f00\u59cb\u6ca1\u770b\u89c1\u9700\u8981\u7528 <code>foldl</code> \u6216\u8005 <code>foldr</code> \u6765\u5b9e\u73b0\uff0c\u6240\u4ee5\u76f4\u63a5\u5199\u51fa\u6765\u4e86</p> <pre><code>def filterl(lst, pred):\n    \"*** YOUR CODE HERE ***\"\n    if lst is Link.empty:\n        return lst\n    elif pred(lst.first):\n        return Link(lst.first, filterl(lst.rest, pred))\n    else:\n        return filterl(lst.rest, pred)\n</code></pre> <p>\u4e4b\u540e\u7528 <code>foldl</code> \u5b9e\u73b0\u4e86\uff0c\u4f46\u662f\u611f\u89c9\u7528\u4e86 <code>foldl</code> \u7684\u6211\u7684\u4ee3\u7801\u5e76\u6ca1\u6709\u6bd4\u4e4b\u524d\u7b80\u5355\ud83d\ude05</p> <pre><code>def filterl(lst, pred):\n    \"*** YOUR CODE HERE ***\"\n    def fn_pred(r, v):\n        if not pred(v):\n            return r\n        elif r is Link.empty:\n            return Link(v, r)\n        else:\n            r.rest = Link(v)\n            return r\n    return foldl(lst, fn_pred, Link.empty)\n</code></pre> <p>\u7136\u540e\u60f3\u4e86\u60f3\uff0c\u6309\u7167\u9898\u76ee\u7684\u610f\u601d\uff0c\u4f7f\u7528 <code>foldl</code> \u6216\u8005 <code>foldr</code> \u5e94\u8be5\u662f\u80fd\u7b80\u5316\u4ee3\u7801\uff0c\u53c8\u60f3\u5230 <code>foldl</code> \u4e2d\u662f\u5c06\u94fe\u8868\u4e2d\u7684\u5143\u7d20\u4ece\u5de6\u5230\u53f3\u5e94\u7528\u5230 <code>fn</code> \u4e2d\uff0c\u6240\u4ee5 <code>foldr</code> \u51fd\u6570\u5c31\u5e94\u8be5(\u521a\u597d\u76f8\u53cd)\u662f\u4ece\u53f3\u5230\u5de6\u5e94\u7528\u94fe\u8868\u4e2d\u7684\u5143\u7d20\uff0c\u4e8e\u662f\u7528\u4ee3\u7801\u5b9e\u73b0\u4e86 <code>foldr</code> </p> <pre><code>def foldr(link, fn, z):\n    \"\"\" Right fold \"\"\"\n    if link is Link.empty:\n        return z\n    return fn(foldr(link.rest, fn, z), link.first)\n</code></pre> <p>\u7136\u540e\u7528 <code>foldr</code> \u5b9e\u73b0\u4e86\u8fd9\u9898(\u8fd9\u6837\u5c31\u7b80\u5355\u591a\u4e86\ud83d\ude0a)</p> <pre><code>def filterl(lst, pred):\n    \"*** YOUR CODE HERE ***\"\n    return foldr(lst, lambda r, v: Link(v, r) if pred(v) else r, Link.empty)\n</code></pre> <p>\u4e4b\u540e\u53bb21\u5e74\u79cb\u5b63\u5b66\u671f\u7684lab14\u4e2d\uff0c\u770b\u5230\u4e86\u5b9e\u73b0 <code>foldr</code> \u51fd\u6570\u7684\u9898\u76eeFold Right</p> <pre><code>def foldr(link, fn, z):\n    \"\"\" Right fold\n    &gt;&gt;&gt; lst = Link(3, Link(2, Link(1)))\n    &gt;&gt;&gt; foldr(lst, sub, 0) # (3 - (2 - (1 - 0)))\n    2\n    &gt;&gt;&gt; foldr(lst, add, 0) # (3 + (2 + (1 + 0)))\n    6\n    &gt;&gt;&gt; foldr(lst, mul, 1) # (3 * (2 * (1 * 1)))\n    6\n    \"\"\"\n    \"*** YOUR CODE HERE ***\"\n</code></pre> <p>\u53d1\u73b0\u5c31\u8ddf\u6211\u521a\u624d\u60f3\u7684\u4e00\u6837\uff0c</p> <p>\u4e0d\u8fc7\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c <code>fn</code> \u7684\u4e24\u4e2a\u53c2\u6570\u7684\u4f4d\u7f6e\u548c\u6211\u4e4b\u524d\u7684\u5b9e\u73b0\u662f\u53cd\u8fc7\u6765\u7684\uff0c\u56e0\u6b64\u6700\u540e <code>foldr</code> \u548c <code>filterl</code> \u6b63\u786e\u7684\u5b9e\u73b0\u4ee3\u7801\u5e94\u8be5\u662f</p> <pre><code>def foldr(link, fn, z):\n    \"\"\" Right fold \"\"\"\n    if link is Link.empty:\n        return z\n    return fn(link.first, foldr(link.rest, fn, z))\n</code></pre> <pre><code>def filterl(lst, pred):\n    \"*** YOUR CODE HERE ***\"\n    return foldr(lst, lambda v, r: Link(v, r) if pred(v) else r, Link.empty)\n</code></pre>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part3/#6_2","title":"6","text":"<p>Q9\uff0c\u8fd9\u9898\u6709\u70b9\u610f\u601d\uff0c\u9898\u76ee\u4e2d\u8bf4\u9700\u8981\u7528\u5230\u4e4b\u524d\u5b9e\u73b0\u7684 <code>foldl</code> \u51fd\u6570\uff0c\u5e76\u4e14\u53ea\u9700\u8981\u4e00\u884c\u4ee3\u7801\u5c31\u53ef\u4ee5\u5b9e\u73b0\u4e86\uff0c</p> <p>\u4e00\u5f00\u59cb\u6211\u5199\u7684\u662f</p> <pre><code>return foldl(lst, lambda l, r: Link(l.first, r), Link.empty)\n</code></pre> <p>\u7136\u540e\u53d1\u751f\u4e86\u62a5\u9519</p> <pre><code>Traceback (most recent call last):\n  ...\n  File \"C:\\Courses\\cs61a\\lab\\lab14\\lab14.py\", line 237, in &lt;lambda&gt;\n    return foldl(lst, lambda l, r: Link(l.first, r), Link.empty)\nAttributeError: 'tuple' object has no attribute 'first'\n</code></pre> <p>\u7136\u540e\u610f\u8bc6\u5230\u4f20\u5165\u7684 <code>fn</code> \u5e94\u8be5\u539f\u59cb\u7684\u503c\u5728\u7b2c\u4e00\u4e2a\u53c2\u6570\u4f4d\uff0c\u4e8e\u662f\u4fee\u6539\u4e86\u4e00\u4e0b\u987a\u5e8f</p> <pre><code>return foldl(lst, lambda r, l: Link(l.first, r), Link.empty)\n</code></pre> <p>\u4f46\u662f\u8fd8\u662f\u62a5\u9519\u4e86</p> <pre><code>AttributeError: 'int' object has no attribute 'first'\n</code></pre> <p>\u7136\u540e\u6211\u610f\u8bc6\u5230 <code>foldl</code> \u51fd\u6570\u4e2d\u62ff\u5230\u7684\u5e94\u8be5\u662f <code>lst</code> \u7684\u5143\u7d20\uff0c\u4e8e\u662f\u6700\u540e\u5c31\u6539\u597d\u4e86</p> code <pre><code>def reverse(lst):\n    \"*** YOUR CODE HERE ***\"\n    return foldl(lst, lambda r, l: Link(l.first, r), Link.empty)\n</code></pre> <p>\u5199\u5b8cQ10\u4e4b\u540e\u5c1d\u8bd5\u4e86\u4e00\u4e0b Extra for experience\uff0c\u5373\u4e0d\u9002\u7528 <code>Link</code> \u6784\u9020\u51fd\u6570\u6765\u5b9e\u73b0 <code>reverse</code> (\u53ef\u4ee5\u4e0d\u4f7f\u7528 <code>foldl</code> \u548c <code>foldr</code> )\uff0c\u611f\u89c9\u8fd8\u884c\uff0c\u5199\u4e86\u4e00\u4e2a\u8f85\u52a9\u51fd\u6570\u5c31\u80fd\u5b9e\u73b0\u4e86</p> code <pre><code>def reverse(lst):\n    \"*** YOUR CODE HERE ***\"\n    def reverse_helper(lst, rest):\n        if lst is Link.empty:\n            return rest\n        else:\n            old_rest, lst.rest = lst.rest, rest\n            return reverse_helper(old_rest, lst)\n    return reverse_helper(lst, Link.empty)\n</code></pre>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part3/#7_1","title":"7","text":"<p>Q10\uff0c\u8fd9\u9898\u9898\u76ee\u4e0d\u96be\u7406\u89e3\uff0c\u4f46\u662f\u4ee3\u7801\u7684\u5b9e\u73b0\u601d\u8def\u6709\u70b9\u7ed5\uff0c\u6211\u60f3\u4e86\u597d\u4e00\u4f1a\u624d\u634b\u6e05\u695a(\u56e0\u4e3a\u8981\u628a\u987a\u5e8f\u53cd\u8fc7\u6765\ud83d\ude05)</p> <p>\u6211\u6700\u540e\u662f\u501f\u52a9\u7b2c\u4e00\u4e2a\u6d4b\u8bd5\u7528\u4f8b\u6765\u7406\u89e3\u7684\uff0c</p> <pre><code>&gt;&gt;&gt; lst = Link(3, Link(2, Link(1)))\n&gt;&gt;&gt; foldr(lst, sub, 0) # (3 - (2 - (1 - 0)))\n</code></pre> <p>\u628a\u8fd9\u4e2a\u6d4b\u8bd5\u7528\u4f8b\u4e2d\u7684 <code>-</code> \u770b\u6210\u662f <code>fn</code></p> <p>\u548c</p> <pre><code>&gt;&gt;&gt; list = Link(3, Link(2, Link(1)))\n&gt;&gt;&gt; foldl2(list, sub, 0) # (((0 - 3) - 2) - 1)\n</code></pre> <p>\u5728 <code>foldr</code> \u4e2d\uff0c\u5230\u8fbe\u94fe\u8868\u7684\u672b\u5c3e\u65f6\uff0c\u5c31\u4f1a\u76f4\u63a5\u8fd4\u56de\u521d\u59cb\u503c <code>z</code> \uff0c\u5373 <code>identity</code> \u51fd\u6570\uff0c\u7136\u540e <code>step</code> \u5c31\u4f1a\u63a5\u6536\u5230 <code>1</code> \u548c <code>identity</code> (\u5206\u522b\u5bf9\u5e94 <code>x</code> \u548c <code>g</code> )\uff0c\u800c\u5728 <code>foldl2</code> \u4e2d\uff0c\u662f\u9700\u8981\u628a <code>1</code> \u5957\u5728\u6700\u5916\u9762\uff0c\u6240\u4ee5\u8fd9\u91cc\u7684 <code>step</code> \u662f\u9700\u8981\u8fd4\u56de\u4e00\u4e2a <code>f(?) = (? - 1)</code> \u51fd\u6570\u7684\u51fd\u6570\uff0c</p> <p>\u800c\u6700\u540e\u8fd4\u56de\u5230\u4e86\u6700\u5f00\u59cb\u65f6\uff0c <code>x</code> \u5bf9\u5e94 <code>3</code> \uff0c <code>g</code> \u5c31\u5e94\u8be5\u5bf9\u5e94\u7684\u662f\u4e00\u4e2a <code>f(?) = ((? - 2) - 1)</code> \u7684\u51fd\u6570\uff0c\u800c\u8fd9\u65f6\u4f1a\u88ab\u4f20\u5165 <code>foldl2</code> \u7684 <code>z</code> \u548c <code>3</code> \uff0c\u6240\u4ee5 <code>?</code> \u5bf9\u5e94\u7684\u5c31\u662f <code>fn(z, x)</code> \uff0c\u5373 <code>step</code> \u4e2d\u5e94\u8be5\u662f <code>g(fn(z, x))</code> \uff0c\u6700\u540e\u5dee\u4e0d\u591a\u5c31\u505a\u51fa\u6765\u4e86</p> code <pre><code>def foldl2(link, fn, z):\n    def step(x, g):\n        \"*** YOUR CODE HERE ***\"\n        return lambda z: g(fn(z, x))\n    return foldr(link, step, identity)(z)\n</code></pre>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part3/#lecture-36-qa","title":"Lecture 36 Q&amp;A","text":""},{"location":"Notes%20of%20Courses/CS61A/CS61A_part3/#1_13","title":"1","text":"<p>\u6709\u4eba\u63d0\u95ee19\u5e74\u79cb\u5b63\u671f\u672b\u8003\u8bd5\u7b2c6\u9898c\u9898\uff0c</p> <p>Quote</p> <p>(20 points) Palindromes</p> <p>Definition. A palindrome is a sequence that has the same elements in normal and reverse order.</p> <p>(a) (3 pt) Implement <code>pal</code> , which takes a positive integer <code>n</code> and returns a positive integer with the digits of <code>n</code> followed by the digits of <code>n</code> in reverse order.</p> <p>Important: You may not write <code>str</code> , <code>repr</code> , <code>list</code> , <code>tuple</code> , <code>[</code> , or <code>]</code> .</p> <pre><code>def pal(n):\n    \"\"\"Return a palindrome starting with n.\n\n    &gt;&gt;&gt; pal(12430)\n    1243003421\n    \"\"\"\n    m = n\n    while m:\n        n, m = ____________________________________ , ____________________________________\n    return n\n</code></pre> <p>(b) (4 pt) Implement <code>contains</code> , which takes non-negative integers <code>a</code> and <code>b</code> . It returns whether all of the digits of a also appear in order among the digits of <code>b</code> .</p> <p>Important: You may not write <code>str</code> , <code>repr</code> , <code>list</code> , <code>tuple</code> , <code>[</code> , or <code>]</code> .</p> <pre><code>def contains(a, b):\n    \"\"\"Return whether the digits of a are contained in the digits of b.\n\n    &gt;&gt;&gt; contains(357, 12345678)\n    True\n    &gt;&gt;&gt; contains(753, 12345678)\n    False\n    &gt;&gt;&gt; contains(357, 37)\n    False\n    \"\"\"\n    if a == b:\n        return True\n    if ________________________________________ &gt; _________________________________________:\n        return False\n    if ________________________________________ == ________________________________________:\n        return contains( _______________________________ , _______________________________ )\n    else:\n        return contains( _______________________________ , _______________________________ )\n</code></pre> <p>(c) (6 pt) Implement <code>big</code> , a helper function for <code>biggest_palindrome</code> . The <code>biggest_palindrome</code> function takes a non-negative integer <code>n</code> and returns the largest palindrome integer with an even number of digits that appear among the digits of <code>n</code> in order. If there is no even-length palindrome among the digits of <code>n</code> , then <code>biggest_palindrome(n)</code> returns 0. You may call <code>pal</code> and <code>contains</code> . </p> <p>Important: You may not write <code>str</code> , <code>repr</code> , <code>list</code> , <code>tuple</code> , <code>[</code> , or <code>]</code> .</p> <pre><code>def biggest_palindrome(n):\n    \"\"\"Return the largest even-length palindrome in n.\n\n    &gt;&gt;&gt; biggest_palindrome(3425534)\n    4554\n    &gt;&gt;&gt; biggest_palindrome(126130450234125)\n    21300312\n    \"\"\"\n    return big(n, 0)\n\ndef big(n, k):\n    \"\"\"A helper function for biggest_palindrome.\"\"\"\n    if n == 0:\n        return 0\n    choices = [big( _________________ , k) , big( _________________ , _________________ )]\n    if contains(k, ______________________________________________________________________):\n        __________________________________________________________________________________\n    return max(choices)\n</code></pre> <p>(d) (1 pt) Circle the term that fills in the blank: the <code>is_palindrome</code> function defined below runs in ____ time in the length of its input.</p> <ul> <li>Constant</li> <li>Logarithmic</li> <li>Linear</li> <li>Quadratic</li> <li>Exponential</li> <li>None of these</li> </ul> <pre><code>def is_palindrome(s):\n    \"\"\"Return whether a list of numbers s is a palindrome.\"\"\"\n    return all([s[i] == s[len(s) - i - 1] for i in range(len(s))])\n</code></pre> <p>Assume that <code>len</code> runs in constant time and <code>all</code> runs in linear time in the length of its input. Selecting an element of a list by its index requires constant time. Constructing a <code>range</code> requires constant time.</p> <p>(e) (6 pt) Implement <code>outer</code> , a helper function for <code>palinkdrome</code> . The <code>palinkdrome</code> function takes a positive integer <code>n</code> and returns a one-argument function that, when called repeatedly <code>n</code> times, returns a <code>Link</code> containing the sequence of arguments to the repeated calls followed by that sequence in reverse order. The <code>Link</code> class appears on Page 2 (left column) of the Midterm 2 study guide.</p> <pre><code>def palinkdrome(n):\n    \"\"\"Return a function that returns a palindrome starting with the args of n repeated calls.\n    &gt;&gt;&gt; print(palinkdrome(3)(5)(6)(7))\n    &lt;5 6 7 7 6 5&gt;\n    &gt;&gt;&gt; print(palinkdrome(1)(4))\n    &lt;4 4&gt;\n    \"\"\"\n    return outer(Link.empty, n)\n\ndef outer(r, n):\n    def inner(k):\n        s = Link(k, ______________________________________________________________)\n        if n == 1:\n            t = __________________________________________________________________\n            while s is not Link.empty:\n                t, s = Link(________________, ________________) , ________________\n            return t\n        else:\n            return ____________________________________________________________\n    return ________________________________________________________________________\n</code></pre> <pre><code>class Link:\n    \"\"\"A linked list.\n\n    &gt;&gt;&gt; s = Link(1)\n    &gt;&gt;&gt; s.first\n    1\n    &gt;&gt;&gt; s.rest is Link.empty\n    True\n    &gt;&gt;&gt; s = Link(2, Link(3, Link(4)))\n    &gt;&gt;&gt; s.first = 5\n    &gt;&gt;&gt; s.rest.first = 6\n    &gt;&gt;&gt; s.rest.rest = Link.empty\n    &gt;&gt;&gt; s                                    # Displays the contents of repr(s)\n    Link(5, Link(6))\n    &gt;&gt;&gt; s.rest = Link(7, Link(Link(8, Link(9))))\n    &gt;&gt;&gt; s\n    Link(5, Link(7, Link(Link(8, Link(9)))))\n    &gt;&gt;&gt; print(s)                             # Prints str(s)\n    &lt;5 7 &lt;8 9&gt;&gt;\n    \"\"\"\n    empty = ()\n\n    def __init__(self, first, rest=empty):\n        assert rest is Link.empty or isinstance(rest, Link)\n        self.first = first\n        self.rest = rest\n\n    def __repr__(self):\n        if self.rest is not Link.empty:\n            rest_repr = ', ' + repr(self.rest)\n        else:\n            rest_repr = ''\n        return 'Link(' + repr(self.first) + rest_repr + ')'\n\n    def __str__(self):\n        string = '&lt;'\n        while self.rest is not Link.empty:\n            string += str(self.first) + ' '\n            self = self.rest\n        return string + str(self.first) + '&gt;'\n</code></pre> <p>\u4e8e\u662f\u5c1d\u8bd5\u81ea\u5df1\u5199\u4e00\u4e0b\uff0c\u53d1\u73b0\u786e\u5b9ec\u9898\u96be\u60f3\ud83d\ude05\uff0c</p> <p>\u6211\u770b\u5230\u4ee3\u7801\u7684\u65f6\u5019\uff0c\u5927\u6982\u80fd\u60f3\u5230\u4ed6\u7684\u5927\u81f4\u60f3\u6cd5/\u601d\u8def\uff0c\u4f46\u662f\u4e0d\u77e5\u5230\u8981\u5982\u4f55\u7528\u4ee3\u7801\u5b9e\u73b0(\u8ddf\u4ed6\u7ed9\u7684\u4ee3\u7801\u6846\u67b6\u5bf9\u4e0d\u4e0a)\u3002</p> <p>\u4e00\u5f00\u59cb\u770b\u5b8c\u4e86\u4ee3\u7801\u4e4b\u540e\uff0c\u6211\u6700\u5148\u731c\u5230\u7684\u662f <code>choices</code> \u8fd9\u884c\u7684\u4f5c\u7528</p> <pre><code>choices = [big(_________________, k), big(_________________, _________________ )]\n</code></pre> <p>\u6211\u60f3\u5230\u5e94\u8be5\u662f\u8003\u8651\u6700\u540e\u4e00\u4f4d\u662f\u5426\u7b97\u5165\u56de\u6587\u6570\u4e2d/\u662f\u5426\u53d6\u7528\u6700\u540e\u4e00\u4f4d\uff0c</p> <p>\u6bd4\u5982 213123 \u8fd9\u4e2a\u6570\u5b57\uff0c\u5982\u679c\u53d6\u75283\uff0c\u90a3\u4e48\u7ed3\u679c\u53ea\u80fd\u662f33\uff0c\u5982\u679c\u4e0d\u53d6\u75283\u7684\u8bdd\uff0c\u7ed3\u679c\u5e94\u662f2112</p> <p>\u5e76\u4e14\u5c06\u4e24\u79cd\u60c5\u51b5\u7684\u7ed3\u679c\u90fd\u653e\u5230 <code>choices</code> \u4e2d\uff0c\u6700\u540e\u518d\u9009\u5176\u4e2d\u7684\u6700\u5927\u503c(\u5bf9\u5e94 <code>return max(choices)</code> \u8fd9\u884c\u4ee3\u7801)\uff0c</p> <p>\u7136\u540e\u53c8\u6ce8\u610f\u5230\u8fd9\u662f\u4e2a\u9012\u5f52\u7684\u7ed3\u6784\uff0c\u6240\u4ee5\u5e94\u8be5\u662f\u8981\u5c06 <code>n // 10</code> \u4f20\u5165\uff0c\u6240\u4ee5\u5927\u6982\u731c\u6d4b\u8fd9\u884c\u4ee3\u7801\u662f\u8fd9\u6837</p> <pre><code>choices = [big(n // 10, k), big(n // 10, k * 10 + n % 10)]\n</code></pre> <p>\u800c\u5728 <code>if</code> \u4e2d\uff0c\u611f\u89c9\u5e94\u8be5\u662f\u6ee1\u8db3\u4e00\u4e2a\u4ec0\u4e48\u6761\u4ef6\uff0c\u4f1a\u628a\u4e00\u4e2a\u7ed3\u679c\u52a0\u5230 <code>choices</code> \u4e2d\uff0c\u7136\u540e\u53c8\u6839\u636e\u4e4b\u524d\u5199\u7684\u4ee3\u7801\u4e2d <code>k</code> \u53ea\u662f\u56de\u6587\u7684\u4e00\u534a\uff0c\u6240\u4ee5\u611f\u89c9\u8fd9\u884c\u53ef\u80fd\u662f</p> <pre><code>choices += [pal(k)]\n</code></pre> <p>\u800c\u7531\u4e8e\u6211\u5ffd\u7565\u4e86 <code>k * 10 + n % 10</code> \u8fd9\u91cc\u521a\u597d\u4f1a \u4ee5\u5012\u8fc7\u6765\u7684\u987a\u5e8f \u628a\u539f\u59cb\u6570\u5b57\u7684\u6570\u4f4d\u653e\u5230 <code>k</code> \u4e0a\uff0c\u6240\u4ee5\u4e00\u5f00\u59cb\u5728 <code>if</code> \u7684\u5224\u65ad\u6761\u4ef6\u4e2d\uff0c\u6211\u5199\u7684\u662f</p> <pre><code>if contains(k, pal(n)):\n</code></pre> <p>\u4f46\u662f\u6d4b\u8bd5\u65f6\u4e0e\u6b63\u786e\u7ed3\u679c\u4e0d\u5bf9</p> <pre><code>Failed example:\n    biggest_palindrome(126130450234125)\nExpected:\n    21300312\nGot:\n    2143223412\n</code></pre> <p>\u672c\u6765\u5df2\u7ecf\u60f3\u4e0d\u51fa\u8981\u5982\u4f55\u4fee\u6539\u4e86\uff0c\u4f46\u968f\u4fbf\u5c1d\u8bd5\u4fee\u6539\u4e86\u4e00\u4e0b</p> <pre><code>if contains(k, n):\n</code></pre> <p>\u7136\u540e\u60ca\u5947\u5730\u53d1\u73b0\u901a\u8fc7\u6d4b\u8bd5\u4e86\ud83d\ude2e\uff0c\u4e8e\u662f\u4e4b\u540e\u5c31\u60f3\u660e\u767d\u4e86\u539f\u56e0</p> <pre><code>def biggest_palindrome(n):\n    \"\"\"Return the largest even-length palindrome in n.\n\n    &gt;&gt;&gt; biggest_palindrome(3425534)\n    4554\n    &gt;&gt;&gt; biggest_palindrome(126130450234125)\n    21300312\n    \"\"\"\n    return big(n, 0)\n\ndef big(n, k):\n    \"\"\"A helper function for biggest_palindrome.\"\"\"\n    if n == 0:\n        return 0\n    choices = [big(n // 10, k), big(n // 10, k * 10 + n % 10)]\n    if contains(k, n):\n        choices += [pal(k)]\n    return max(choices)\n</code></pre> <p>\u6240\u6709\u7684\u9898\u76ee\u7684\u4ee3\u7801</p> (a)(b)(c)(e) <pre><code>def pal(n):\n    \"\"\"Return a palindrome starting with n.\n\n    &gt;&gt;&gt; pal(12430)\n    1243003421\n    \"\"\"\n    m = n\n    while m:\n        n, m = n * 10 + m % 10, m // 10\n    return n\n</code></pre> <pre><code>def contains(a, b):\n    \"\"\"Return whether the digits of a are contained in the digits of b.\n\n    &gt;&gt;&gt; contains(357, 12345678)\n    True\n    &gt;&gt;&gt; contains(753, 12345678)\n    False\n    &gt;&gt;&gt; contains(357, 37)\n    False\n    \"\"\"\n    if a == b:\n        return True\n    if a &gt; b:\n        return False\n    if a % 10 == b % 10:\n        return contains(a // 10, b // 10)\n    else:\n        return contains(a, b // 10)\n</code></pre> <pre><code>def biggest_palindrome(n):\n    \"\"\"Return the largest even-length palindrome in n.\n\n    &gt;&gt;&gt; biggest_palindrome(3425534)\n    4554\n    &gt;&gt;&gt; biggest_palindrome(126130450234125)\n    21300312\n    \"\"\"\n    return big(n, 0)\n\ndef big(n, k):\n    \"\"\"A helper function for biggest_palindrome.\"\"\"\n    if n == 0:\n        return 0\n    choices = [big(n // 10, k), big(n // 10, k * 10 + n % 10)]\n    if contains(k, n):\n        choices += [pal(k)]\n    return max(choices)\n</code></pre> <pre><code>def palinkdrome(n):\n    \"\"\"Return a function that returns a palindrome starting with the args of n repeated calls.\n    &gt;&gt;&gt; print(palinkdrome(3)(5)(6)(7))\n    &lt;5 6 7 7 6 5&gt;\n    &gt;&gt;&gt; print(palinkdrome(1)(4))\n    &lt;4 4&gt;\n    \"\"\"\n    return outer(Link.empty, n)\n\ndef outer(r, n):\n    def inner(k):\n        s = Link(k, r)\n        if n == 1:\n            t = s\n            while s is not Link.empty:\n                t, s = Link(s.first, t), s.rest\n            return t\n        else:\n            return outer(s, n - 1)\n    return inner\n</code></pre> <p>\u6709\u4eba\u95ee\u9053John\u662f\u5982\u4f55\u5904\u7406\u8fd9\u4e2a\u95ee\u9898\u7684\uff0c\u4e0b\u9762\u662fJohn\u7684\u89e3\u91ca</p> <p>Quote</p> <p>John:</p> <p>Yeah, great question. So how do you approach this problem? What are the steps? Um, one is to recognize that there's a tree recursion problem. You could do that from the syntax because there are two calls to <code>big</code> , or you could do that from the kind of nature of the problem, which is they were doing some search among all the possible subsets of digits in here. Which one's the biggest looks like a tree recursion problem. Um, so you have to look for a way to distill that into a sequence of choices.</p> <p>And, uh, a common sequence of choices that you have is to keep the last digit or you don't. I mean, we've seen that in a few different examples. Um, but and so it happens to apply here. Sometimes it's not clear what kind of sequence of choices you need to make, but that is a big part of solving a tree recursion problem. So, um, yeah, how you figure out what that choice is is to think about all the different possibilities that you need to consider. So, all the different palindromes within here, and how would I enumerate that set? Well, all the ones that have a four at the end and all the ones that don't is a way of partitioning that set using an operation that I could repeat over and over again. So, that's how you kind of figure out what choice you're going to be making.</p> <p>I guess that got us as far as thinking probably what we're going to do is call <code>big</code> where we keep the last digit and <code>big</code> where we don't. Now is the hard part, which is how are we going to represent this notion of keeping the last digit? It's not like we have a list called digits where we're appending the last digit to. Instead, what we're doing is we're effectively reassigning k. Here, k either stays the same or k includes one more digit than it was before. So, whenever you make a recursive call, a good way to think about what you're doing is that you're assigning these formal parameters to new values.</p> <p>So, I guess that starts to explain what's going on here. The last piece is very problem-specific. How would you know that you've found a palindrome and therefore you want to consider that as one of the choices? You know, these two lines wouldn't show up in any other tree recursion problems. They're really just about palindromes because it happens to be that one way of describing a palindrome is that you find some digits within half the number, and then you make sure those digits also appear in the other half of the number in reverse order. How would you discover this? I guess, um, hopefully, the definition of the palindrome would get you there. Like, how do you describe a palindrome? It's like some digits, and then those digits also have to be contained in the other half of the number in reverse order.</p> <p>John:</p> <p>\u662f\u7684\uff0c\u8fd9\u662f\u4e00\u4e2a\u5f88\u597d\u7684\u95ee\u9898\u3002\u90a3\u4e48\u4f60\u5982\u4f55\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff1f\u6709\u54ea\u4e9b\u6b65\u9aa4\uff1f\u55ef\uff0c\u9996\u5148\u8981\u8ba4\u8bc6\u5230\u8fd9\u662f\u4e00\u4e2a\u6811\u9012\u5f52\u95ee\u9898\u3002\u4f60\u53ef\u4ee5\u4ece\u8bed\u6cd5\u4e0a\u770b\u51fa\u6765\uff0c\u56e0\u4e3a\u6709\u4e24\u6b21\u5bf9 <code>big</code> \u7684\u8c03\u7528\uff0c\u6216\u8005\u4f60\u53ef\u4ee5\u4ece\u95ee\u9898\u7684\u6027\u8d28\u4e0a\u770b\u51fa\u6765\uff0c\u4ed6\u4eec\u5728\u8fd9\u91cc\u8fdb\u884c\u4e86\u4e00\u4e9b\u641c\u7d22\uff0c\u641c\u7d22\u6240\u6709\u53ef\u80fd\u7684\u6570\u5b57\u5b50\u96c6\uff0c\u627e\u51fa\u5176\u4e2d\u6700\u5927\u7684\u4e00\u4e2a\uff0c\u770b\u8d77\u6765\u50cf\u4e00\u4e2a\u6811\u9012\u5f52\u95ee\u9898\u3002\u90a3\u4e48\uff0c\u4f60\u5fc5\u987b\u5bfb\u627e\u4e00\u79cd\u5c06\u5176\u5f52\u7eb3\u4e3a\u4e00\u7cfb\u5217\u9009\u62e9\u7684\u65b9\u6cd5\u3002</p> <p>\u800c\u4e14\uff0c\u4f60\u901a\u5e38\u4f1a\u6709\u4e00\u7cfb\u5217\u5171\u540c\u7684\u9009\u62e9\uff0c\u6bd4\u5982\u4fdd\u7559\u6700\u540e\u4e00\u4f4d\u6570\u5b57\u6216\u8005\u4e0d\u4fdd\u7559\u3002\u6211\u7684\u610f\u601d\u662f\uff0c\u6211\u4eec\u5728\u51e0\u4e2a\u4e0d\u540c\u7684\u4f8b\u5b50\u4e2d\u90fd\u770b\u5230\u8fc7\u3002\u4f46\u662f\u5728\u67d0\u4e9b\u60c5\u51b5\u4e0b\uff0c\u4e0d\u6e05\u695a\u9700\u8981\u505a\u51fa\u4ec0\u4e48\u6837\u7684\u9009\u62e9\uff0c\u4f46\u8fd9\u662f\u89e3\u51b3\u6811\u9012\u5f52\u95ee\u9898\u7684\u4e00\u4e2a\u91cd\u8981\u90e8\u5206\u3002\u6240\u4ee5\uff0c\u55ef\uff0c\u4f60\u5982\u4f55\u786e\u5b9a\u8fd9\u4e2a\u9009\u62e9\u662f\u4ec0\u4e48\uff0c\u5c31\u662f\u8003\u8651\u4f60\u9700\u8981\u8003\u8651\u7684\u6240\u6709\u4e0d\u540c\u53ef\u80fd\u6027\u3002</p> <p>\u6240\u4ee5\uff0c\u5728\u8fd9\u91cc\u9762\u7684\u6240\u6709\u4e0d\u540c\u56de\u6587\u6570\uff0c\u6211\u8be5\u5982\u4f55\u679a\u4e3e\u8fd9\u4e2a\u96c6\u5408\u5462\uff1f\u55ef\uff0c\u6240\u6709\u4ee5\u56db\u7ed3\u5c3e\u7684\u56de\u6587\u6570\u548c\u6240\u6709\u4e0d\u4ee5\u56db\u7ed3\u5c3e\u7684\u56de\u6587\u6570\u662f\u4e00\u79cd\u5212\u5206\u8fd9\u4e2a\u96c6\u5408\u7684\u65b9\u6cd5\uff0c\u4f7f\u7528\u4e00\u4e2a\u53ef\u4ee5\u4e00\u904d\u53c8\u4e00\u904d\u91cd\u590d\u7684\u64cd\u4f5c\u3002\u6240\u4ee5\uff0c\u8fd9\u5c31\u662f\u4f60\u5982\u4f55\u60f3\u51fa\u4f60\u5c06\u8981\u505a\u51fa\u7684\u9009\u62e9\u7684\u65b9\u5f0f\u3002</p> <p>\u6211\u60f3\uff0c\u8fd9\u8ba9\u6211\u4eec\u60f3\u5230\uff0c\u6211\u4eec\u53ef\u80fd\u8981\u505a\u7684\u4e8b\u60c5\u662f\u8c03\u7528\u4fdd\u7559\u6700\u540e\u4e00\u4f4d\u6570\u5b57\u7684 <code>big</code> \uff0c\u548c\u4e0d\u4fdd\u7559\u7684 <code>big</code> \u3002\u73b0\u5728\uff0c\u56f0\u96be\u7684\u90e8\u5206\u6765\u4e86\uff0c\u5c31\u662f\u6211\u4eec\u5982\u4f55\u8868\u793a\u4fdd\u7559\u6700\u540e\u4e00\u4f4d\u6570\u5b57\u7684\u8fd9\u4e2a\u6982\u5ff5\u5462\uff1f\u8fd9\u4e0d\u50cf\u6211\u4eec\u6709\u4e00\u4e2a\u540d\u4e3adigits\u7684\u5217\u8868\uff0c\u6211\u4eec\u5728\u5176\u4e2d\u6dfb\u52a0\u6700\u540e\u4e00\u4f4d\u6570\u5b57\u3002\u76f8\u53cd\uff0c\u6211\u4eec\u6b63\u5728\u6709\u6548\u5730\u91cd\u65b0\u5206\u914dk\u3002\u5728\u8fd9\u91cc\uff0ck\u8981\u4e48\u4fdd\u6301\u4e0d\u53d8\uff0c\u8981\u4e48\u6bd4\u4ee5\u524d\u591a\u5305\u542b\u4e00\u4f4d\u6570\u5b57\u3002\u6240\u4ee5\uff0c\u6bcf\u5f53\u4f60\u8fdb\u884c\u9012\u5f52\u8c03\u7528\u65f6\uff0c\u601d\u8003\u4f60\u6b63\u5728\u505a\u7684\u4e8b\u60c5\u7684\u4e00\u4e2a\u597d\u65b9\u6cd5\u662f\uff0c\u4f60\u6b63\u5728\u5c06\u8fd9\u4e9b\u5f62\u5f0f\u53c2\u6570\u8d4b\u4e88\u65b0\u7684\u503c\u3002</p> <p>\u6240\u4ee5\uff0c\u6211\u60f3\u8fd9\u5f00\u59cb\u89e3\u91ca\u8fd9\u91cc\u53d1\u751f\u4e86\u4ec0\u4e48\u3002\u6700\u540e\u4e00\u5757\u662f\u975e\u5e38\u7279\u5b9a\u4e8e\u95ee\u9898\u7684\u3002\u4f60\u5982\u4f55\u77e5\u9053\u627e\u5230\u4e86\u4e00\u4e2a\u56de\u6587\u6570\uff0c\u56e0\u6b64\u4f60\u60f3\u628a\u5b83\u89c6\u4e3a\u9009\u62e9\u4e4b\u4e00\uff1f\u4f60\u77e5\u9053\uff0c\u8fd9\u4e24\u884c\u4e0d\u4f1a\u51fa\u73b0\u5728\u4efb\u4f55\u5176\u4ed6\u6811\u9012\u5f52\u95ee\u9898\u4e2d\u3002\u5b83\u4eec\u5b9e\u9645\u4e0a\u53ea\u6d89\u53ca\u56de\u6587\u6570\uff0c\u56e0\u4e3a\u78b0\u5de7\u63cf\u8ff0\u56de\u6587\u6570\u7684\u4e00\u79cd\u65b9\u5f0f\u662f\uff0c\u5728\u6570\u5b57\u7684\u4e00\u534a\u4e2d\u627e\u5230\u4e00\u4e9b\u6570\u5b57\uff0c\u7136\u540e\u786e\u4fdd\u8fd9\u4e9b\u6570\u5b57\u4e5f\u4ee5\u76f8\u53cd\u7684\u987a\u5e8f\u51fa\u73b0\u5728\u6570\u5b57\u7684\u53e6\u4e00\u534a\u4e2d\u3002\u4f60\u5982\u4f55\u53d1\u73b0\u8fd9\u4e00\u70b9\u5462\uff1f\u6211\u60f3\uff0c\u5e0c\u671b\u56de\u6587\u6570\u7684\u5b9a\u4e49\u4f1a\u8ba9\u4f60\u660e\u767d\u3002\u5c31\u50cf\uff0c\u4f60\u5982\u4f55\u63cf\u8ff0\u4e00\u4e2a\u56de\u6587\u6570\uff0c\u5c31\u662f\u4e00\u4e9b\u6570\u5b57\uff0c\u7136\u540e\u8fd9\u4e9b\u6570\u5b57\u4e5f\u5fc5\u987b\u5305\u542b\u5728\u6570\u5b57\u7684\u53e6\u4e00\u534a\u4e2d\uff0c\u5e76\u4e14\u662f\u76f8\u53cd\u7684\u987a\u5e8f\u3002</p>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part3/#2_13","title":"2","text":"<p>\u6709\u4eba\u63d0\u95ee19\u5e74\u590f\u5b63\u671f\u672b\u8003\u8bd5\u7684\u7b2c8\u9898</p> <p>Quote</p> <p>(10 points) The Big SQL</p> <p>The <code>ingredients</code> table describes the <code>dish</code> and <code>part</code> for each part of each dish at a restaurant. The <code>shops</code> table describes the <code>food</code> , <code>shop</code> , and <code>price</code> for each part of a dish sold at each of two shops. All ingredients (parts) are sold by both shops, and each ingredient will only appear once for each shop. Write your SQL statements so that they would still be correct if table contents changed. You can assume the shops table will only ever contain two shops ( <code>A</code> and <code>B</code> ).</p> <pre><code>CREATE TABLE ingredients AS\n  SELECT \"chili\" AS dish, \"beans\" AS part UNION\n  SELECT \"chili\"        , \"onions\"        UNION\n  SELECT \"soup\"         , \"broth\"         UNION\n  SELECT \"soup\"         , \"onions\"        UNION\n  SELECT \"beans\"        , \"beans\";\n\nCREATE TABLE shops AS\n  SELECT \"beans\" AS food, \"A\" AS shop, 2 AS price UNION\n  SELECT \"beans\"        , \"B\"        , 2 AS price UNION\n  SELECT \"onions\"       , \"A\"        , 3          UNION\n  SELECT \"onions\"       , \"B\"        , 2          UNION\n  SELECT \"broth\"        , \"A\"        , 3          UNION\n  SELECT \"broth\"        , \"B\"        , 5;\n</code></pre> <p>(a) (2 pt)  Select a two-column table with one row per food that describes the lowest price for each food.</p> <pre><code>SELECT food, _________________ FROM shops ________________________;\n</code></pre> <pre><code>beans|2\nbroth|3\nonions|2\n</code></pre> <p>(b) (4 pt) Select a two-column table with one row per dish that describes the total cost of each dish if all parts are purchased from shop A.</p> <pre><code>SELECT ________________________ FROM _____________________________\n  WHERE __________________________________________________________;\n</code></pre> <pre><code>beans|2\nchili|5\nsoup|6\n</code></pre> <p>(c) (4 pt) In two different ways, select a one-column table of all foods that have a different price at each store.</p> <pre><code>SELECT _________ FROM __________________________________, __________________________________\n  WHERE ____________________________________________________________________________________;\nSELECT _________ FROM shops GROUP BY _______________________________________________________;\n</code></pre> <pre><code>onions\nbroth\n</code></pre> <p>\u81ea\u5df1\u505a\u4e86\u4e00\u4e0b\u8fd9\u9898\uff0c\u6700\u540e\u611f\u89c9\u9664\u4e86c\u9898\u4e2d\u8981\u5b9e\u73b0\u7684\u7b2c\u4e8c\u79cd\u65b9\u6cd5\uff0c\u5176\u4ed6\u90fd\u4e0d\u662f\u5f88\u96be</p> <pre><code>python sqlite_shell.py -i test.sql\n</code></pre> (a)(b)(c) <pre><code>SELECT food, min(price) FROM shops GROUP BY food;\n</code></pre> <pre><code>SELECT a.dish, sum(b.price) FROM ingredients AS a, shops AS b\n  WHERE a.part = b.food AND b.shop = \"A\" GROUP BY a.dish;\n</code></pre> <pre><code>SELECT a.food FROM shops AS a, shops AS b\n  WHERE a.food = b.food AND a.shop &lt; b.shop AND a.price != b.price;\nSELECT food FROM shops GROUP BY food HAVING min(price) != max(price);\n</code></pre> <p>\u770b\u4e86John\u7684\u89e3\u7b54\uff0c\u53d1\u73b0\u4ed6c\u9898\u7684\u7b2c\u4e8c\u79cd\u5199\u6cd5\u6bd4\u6211\u66f4\u7b80\u6d01\u4e00\u4e9b</p> <pre><code>SELECT food FROM shops GROUP BY food HAVING MIN(price) != MAX(price);\n</code></pre>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part3/#lecture-37-final-examples","title":"Lecture 37 Final Examples","text":""},{"location":"Notes%20of%20Courses/CS61A/CS61A_part3/#1_14","title":"1","text":"<p>\u5c1d\u8bd5\u5b9e\u73b0\u8bfe\u4e0a\u7684\u8fd9\u9898</p> <pre><code>class Tree:\n    \"\"\"\n    &gt;&gt;&gt; t = Tree(3, [Tree(2, [Tree(5)]), Tree(4)])\n    &gt;&gt;&gt; t.label\n    3\n    &gt;&gt;&gt; t.branches[0].label\n    2\n    &gt;&gt;&gt; t.branches[1].is_leaf()\n    True\n    \"\"\"\n    def __init__(self, label, branches=[]):\n        for b in branches:\n            assert isinstance(b, Tree)\n        self.label = label\n        self.branches = list(branches)\n\n    def is_leaf(self):\n        return not self.branches\n\n    def map(self, fn):\n        \"\"\"\n        Apply a function `fn` to each node in the tree and mutate the tree.\n\n        &gt;&gt;&gt; t1 = Tree(1)\n        &gt;&gt;&gt; t1.map(lambda x: x + 2)\n        &gt;&gt;&gt; t1.map(lambda x : x * 4)\n        &gt;&gt;&gt; t1.label\n        12\n        &gt;&gt;&gt; t2 = Tree(3, [Tree(2, [Tree(5)]), Tree(4)])\n        &gt;&gt;&gt; t2.map(lambda x: x * x)\n        &gt;&gt;&gt; t2\n        Tree(9, [Tree(4, [Tree(25)]), Tree(16)])\n        \"\"\"\n        self.label = fn(self.label)\n        for b in self.branches:\n            b.map(fn)\n\n    def __contains__(self, e):\n        \"\"\"\n        Determine whether an element exists in the tree.\n\n        &gt;&gt;&gt; t1 = Tree(1)\n        &gt;&gt;&gt; 1 in t1\n        True\n        &gt;&gt;&gt; 8 in t1\n        False\n        &gt;&gt;&gt; t2 = Tree(3, [Tree(2, [Tree(5)]), Tree(4)])\n        &gt;&gt;&gt; 6 in t2\n        False\n        &gt;&gt;&gt; 5 in t2\n        True\n        \"\"\"\n        if self.label == e:\n            return True\n        for b in self.branches:\n            if e in b:\n                return True\n        return False\n\n    def __repr__(self):\n        if self.branches:\n            branch_str = ', ' + repr(self.branches)\n        else:\n            branch_str = ''\n        return 'Tree({0}{1})'.format(self.label, branch_str)\n\n    def __str__(self):\n        def print_tree(t, indent=0):\n            tree_str = '  ' * indent + str(t.label) + \"\\n\"\n            for b in t.branches:\n                tree_str += print_tree(b, indent + 1)\n            return tree_str\n        return print_tree(self).rstrip()\n</code></pre> <pre><code>def bigs(t):\n    \"\"\"Return the number of nodes in t that are larger than all their ancestor nodes.\n\n    &gt;&gt;&gt; a = Tree(1, [Tree(4, [Tree(4), Tree(5)], Tree(3, [Tree(0, [Tree(2)])])])\n    &gt;&gt;&gt; bigs(a)\n    4\n    \"\"\"\n    def f(a, x):\n        if ____________________________________________________:\n            return 1 + ________________________________________\n        else:\n            return ____________________________________________\n    return ____________________________________________________\n</code></pre> <p>\u611f\u89c9\u4e0d\u7b97\u96be</p> <pre><code>def bigs(t):\n    def f(a, x):\n        if a.label &gt; x:\n            return 1 + sum([f(b, a.label) for b in a.branches])\n        else:\n            return sum([f(b, x) for b in a.branches])\n    return 1 + sum([f(b, t.label) for b in t.branches])\n</code></pre> <p></p> <p>John\u6700\u540e\u5c55\u793a\u4e86\u5982\u4f55\u4e00\u6b65\u6b65\u5f97\u5230\u6700\u540e\u7684\u7b54\u6848/\u4ee3\u7801</p> <p></p> <p>John\u5c55\u793a\u4e86\u53e6\u4e00\u79cd\u4f7f\u7528 <code>nonlocal</code> \u8bed\u53e5\u6765\u5b9e\u73b0\u7684\u9012\u5f52\u7684\u65b9\u6cd5</p>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part3/#2_14","title":"2","text":"<p>John\u5c55\u793a\u4e86\u4e00\u79cd\u7f16\u5199\u7a0b\u5e8f\u89e3\u51b3\u95ee\u9898\u7684\u6b65\u9aa4\uff0c\u4ed6\u8ba4\u4e3a\u8fd9\u867d\u7136\u4e0d\u662f\u4e00\u4e2a\u5b8c\u7f8e\u7684\u65b9\u6cd5\uff0c\u4f46\u662f\u662f\u4e00\u4e2a\u6bd4\u8f83\u6709\u7528\u548c\u8003\u8651\u5468\u5230\u7684\u65b9\u6cd5\uff0c\u53ef\u4ee5\u5728\u7b2c\u4e00\u773c\u4e0d\u77e5\u9053\u95ee\u9898\u5982\u4f55\u89e3\u51b3\u65f6\u60f3\u60f3\u8fd9\u6837\u7684\u65b9\u6cd5</p> <p>\u4ece\u95ee\u9898\u5206\u6790\u5230\u6570\u636e\u5b9a\u4e49</p> <p>\u786e\u5b9a\u5fc5\u987b\u8868\u793a\u7684\u4fe1\u606f\u4ee5\u53ca\u5728\u9009\u62e9\u7684\u7f16\u7a0b\u8bed\u8a00\u4e2d\u5982\u4f55\u8868\u793a\u8fd9\u4e9b\u4fe1\u606f\u3002\u5236\u5b9a\u6570\u636e\u5b9a\u4e49\u5e76\u7528\u4f8b\u5b50\u52a0\u4ee5\u8bf4\u660e\u3002</p> <p>\u7b7e\u540d\u3001\u76ee\u7684\u8bed\u53e5\u3001\u5934\u90e8</p> <p>\u8bf4\u660e\u6240\u9700\u51fd\u6570\u6d88\u8017\u548c\u4ea7\u751f\u7684\u6570\u636e\u7c7b\u578b\u3002\u5bf9\u95ee\u9898\u201c\u51fd\u6570\u8ba1\u7b97\u4ec0\u4e48\u201d\u63d0\u51fa\u7b80\u660e\u7684\u56de\u7b54\u3002\u5b9a\u4e49\u4e00\u4e2a\u7b26\u5408\u7b7e\u540d\u7684\u5b58\u6839\u3002</p> <p>\u529f\u80fd\u793a\u4f8b</p> <p>\u901a\u8fc7\u4f8b\u5b50\u6f14\u793a\u51fd\u6570\u7684\u76ee\u7684\u3002</p> <p>\u51fd\u6570\u6a21\u677f</p> <p>\u5c06\u6570\u636e\u5b9a\u4e49\u8f6c\u5316\u4e3a\u51fd\u6570\u7684\u5927\u7eb2\u3002</p> <p>\u6d4b\u8bd5</p> <p>\u5c06\u4f8b\u5b50\u8868\u8fbe\u4e3a\u6d4b\u8bd5\uff0c\u5e76\u786e\u4fdd\u51fd\u6570\u901a\u8fc7\u6240\u6709\u6d4b\u8bd5\u3002\u8fd9\u6837\u505a\u6709\u52a9\u4e8e\u53d1\u73b0\u9519\u8bef\u3002\u6d4b\u8bd5\u4e5f\u53ef\u4ee5\u4f5c\u4e3a\u4f8b\u5b50\u7684\u8865\u5145\uff0c\u5e2e\u52a9\u4ed6\u4eba\u5728\u9700\u8981\u65f6\u9605\u8bfb\u548c\u7406\u89e3\u5b9a\u4e49-\u800c\u5bf9\u4e8e\u4efb\u4f55\u4e25\u8083\u7684\u7a0b\u5e8f\uff0c\u8fd9\u662f\u5fc5\u8981\u7684\u3002 </p>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part3/#3_9","title":"3","text":"<p>\u5c1d\u8bd5\u5b9e\u73b0\u8fd9\u4e00\u9898</p> <pre><code>def smalls(t):\n    \"\"\"Return the non-leaf nodes in t that are smaller than all their descendants.\n\n    &gt;&gt;&gt; a = Tree(1, [Tree(2, [Tree(4), Tree(5)]), Tree(3, [Tree(0, [Tree(6)])])])\n    &gt;&gt;&gt; sorted([t.label for t in smalls(a)])\n    [0, 2]\n    \"\"\"\n    result = []\n    def process(t):\n        if t.is_leaf():\n            return __________________________________________\n        else:\n            smallest = ______________________________________\n            if ______________________________________________:\n                _____________________________________________\n            return min(smallest, t.label)\n    process(t)\n    return result\n</code></pre> <p>\u6211\u7684\u5b9e\u73b0</p> <pre><code>def smalls(t):\n    result = []\n    def process(t):\n        if t.is_leaf():\n            return t.label\n        else:\n            smallest = min([process(b) for b in t.branches])\n            if t.label &lt; smallest:\n                result.append(t)\n            return min(smallest, t.label)\n    process(t)\n    return result\n</code></pre> <p></p>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part3/#lecture-37-qa","title":"Lecture 37 Q&amp;A","text":""},{"location":"Notes%20of%20Courses/CS61A/CS61A_part3/#1_15","title":"1","text":"<p>\u8bfe\u4e0a\u63d0\u5230\u768418\u5e74\u6625\u5b63\u671f\u672b\u8003\u8bd5\u7684\u7b2c5\u9898</p> <p>Quote</p> <p>(12 points) Function As Expected</p> <p>Definition. For \\(n &gt; 1\\) , an order n function takes one argument and returns an onder \\(n - 1\\) function.</p> <p>An order 1 function is any function that takes one argument.</p> <p>(a) (6 pt) Implement <code>scurry</code> , which takes a function <code>f</code> and a positive integers <code>n</code> . <code>f</code> must be a function that takes a list as its argument. <code>scurry</code> returns an order n function that, when called successively n times on a sequence of values \\(x_1, x_2, ... x_n\\) , returns the result of calling <code>f</code> on a list containing \\(x_1, x_2, ... x_n\\) .</p> <pre><code>def scurry(f, n):\n    \"\"\"Return a function that calls f on a list of arguments after being called n times.\n\n    &gt;&gt;&gt; scurry(sum, 4)(1)(1)(3)(2)  # equivalent to sum([1, 1, 3, 2])\n    7\n    &gt;&gt;&gt; scurry(len, 3)(7)([8])(-9)  # equivalent to len([7, [8], -9])\n    3\n    \"\"\"\n    def h(k, args_so_far):\n        if k == 0:\n            return ________________________________________________________________________\n        return ____________________________________________________________________________\n    return ________________________________________________________________________________\n</code></pre> <p>(b) (6 pt) Implement <code>factorize</code> , which takes two integers <code>n</code> and <code>k</code> , both larger than 1. It returns the number of ways that <code>n</code> can be expressed as a product of non-decreasing integers greater than or equal to <code>k</code> .</p> <pre><code>def factorize(n, k=2):\n    \"\"\"Return the number of ways to factorize positive integer n.\n\n    &gt;&gt;&gt; factorize(7)  # 7\n    1\n    &gt;&gt;&gt; factorize(12) # 2*2*3, 2*6, 3*4, 12\n    4\n    &gt;&gt;&gt; factorize(36) # 2*2*3*3, 2*2*9, 2*3*6, 2*18, 3*3*4, 3*12, 4*9, 6*6, 36\n    9\n    \"\"\"\n    if _____________________________________________________________________________________:\n        return 1\n    elif ___________________________________________________________________________________:\n        return 0\n    elif ___________________________________________________________________________________:\n        return factorize(_________________________________, ________________________________)\n    return _________________________________________________________________________________\n</code></pre> <p>\u81ea\u5df1\u5c1d\u8bd5\u505a\u4e86\u4e00\u4e0b\uff0c\u611f\u89c9\u8fd8\u86ee\u6709\u610f\u601d\uff0c</p> <p>\u611f\u89c9\u662f\u56e0\u4e3a\u5df2\u7ecf\u505a\u8fc7\u5f88\u591a\u7c7b\u4f3c\u7684\u9898\u76ee\uff0c\u6240\u4ee5\u505ab\u9898\u65f6\uff0c\u5f88\u5feb\u5c31\u60f3\u5230\u4e86 <code>if</code> \u7684\u51e0\u79cd\u60c5\u51b5\uff0c\u5206\u522b\u662f \u521a\u597d\u76f8\u7b49\u6574\u9664\u5f971\uff0c\u65e0\u6cd5\u9664\uff0c\u80fd\u6574\u9664\uff0c\u4e0d\u80fd\u6574\u9664</p> (a)(b) <pre><code>def scurry(f, n):\n    def h(k, args_so_far):\n        if k == 0:\n            return f(args_so_far)\n        return lambda x: h(k - 1, args_so_far + [x])\n    return h(n, [])\n</code></pre> <pre><code>def factorize(n, k=2):\n    if k == n:\n        return 1\n    elif k &gt; n:\n        return 0\n    elif n % k != 0:\n        return factorize(n, k + 1)\n    return factorize(n // k, k) + factorize(n, k + 1)\n</code></pre> <p>John\u89e3\u7b54\u8fd9\u9898\u65f6\u8bf4\u5230b\u9898\u7b2c\u4e00\u79cd\u60c5\u51b5\u4e2d <code>n == k</code> \u548c <code>n == 1</code> \u4e24\u4e2a\u5224\u65ad\u6761\u4ef6\u90fd\u53ef\u4ee5\uff0c\u7136\u540e\u8bd5\u4e86\u4e00\u4e0b\u53d1\u73b0\u771f\u7684\u80fd\u901a\u8fc7</p>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part3/#2_15","title":"2","text":"<p>John\u63d0\u5230scheme\u4e2d\u4e5f\u6709\u7c7b\u4f3cpython\u4e2d <code>*args</code> \u7684\u4f20\u5165\u4e0d\u5b9a\u4e2a\u6570\u53c2\u6570\u7684\u65b9\u6cd5\uff0c\u5728\u5b9a\u4e49\u51fd\u6570\u65f6\uff0c\u53ef\u4ee5\u4f7f\u7528 <code>. args</code> \u7684\u5f62\u5f0f\u6765\u83b7\u53d6\u6240\u6709\u7684\u53c2\u6570(\u53ef\u89c1\u4e8e\u4e0b\u56fe)\uff0c\u7136\u540e <code>args</code> \u5c31\u4f1a\u662f\u4e00\u4e2a\u94fe\u8868</p> <p></p>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part3/#lecture-38-conclusion","title":"Lecture 38 Conclusion","text":""},{"location":"Notes%20of%20Courses/CS61A/CS61A_part3/#1_16","title":"1","text":"<p>John\u548cHany\u63d0\u5230\u7684\u4e00\u4e9b\u5173\u4e8e\u6280\u672f\u7684\u601d\u8003(\u7684\u5176\u4e2d\u4e00\u90e8\u5206)</p> <p>Quote</p> <p>John:</p> <p>...Yeah, and so the one thing I'd love to leave you all with is the idea that you don't just decide, \"I'm gonna become a software engineer for life\" or, \"Oh, I'm gonna become a regulator for life.\" That's just not how it is. I mean, so many people take meandering paths in their lives where they do some of both. They understand the technology well enough that they realize, \"Oh, their impact should be figuring out how to collaborate with government to regulate it in a way that has the right sorts of trade-offs.\"</p> <p> </p> <p>Hany:</p> <p>Yeah, let me add one more thing too, John, and this is something you need to practice from a very young age, like right now, which is how do you talk to people who are not technical about technical things? There's always this language barrier between us computer scientists and our regulators and our lawyers. It's really good to get in the habit of thinking about how do you take these, in some cases, very complex things and explain them in honest and clear ways so that people can understand them, process them, and then reason about them properly.</p> <p>John:</p> <p>...\u662f\u7684\uff0c\u6240\u4ee5\u6211\u60f3\u7559\u7ed9\u5927\u5bb6\u7684\u4e00\u4e2a\u60f3\u6cd5\u662f\uff0c\u4f60\u4e0d\u53ea\u662f\u51b3\u5b9a\u201c\u6211\u8981\u6210\u4e3a\u4e00\u540d\u7ec8\u8eab\u8f6f\u4ef6\u5de5\u7a0b\u5e08\u201d\u6216\u201c\u54e6\uff0c\u6211\u8981\u7ec8\u8eab\u6210\u4e3a\u76d1\u7ba1\u8005\u201d\u3002\u60c5\u51b5\u5e76\u975e\u5982\u6b64\u3002\u6211\u610f\u5473\u7740\u5f88\u591a\u4eba\u5728\u4ed6\u4eec\u7684\u751f\u6d3b\u4e2d\u8d70\u8fc7\u66f2\u6298\u7684\u9053\u8def\uff0c\u65e2\u6d89\u8db3\u6280\u672f\uff0c\u53c8\u7406\u89e3\u5f97\u8db3\u591f\u6df1\u523b\uff0c\u4ee5\u81f3\u4e8e\u610f\u8bc6\u5230\u4ed6\u4eec\u7684\u5f71\u54cd\u5e94\u8be5\u662f\u5f04\u6e05\u695a\u5982\u4f55\u4e0e\u653f\u5e9c\u5408\u4f5c\uff0c\u4ee5\u4e00\u79cd\u5177\u6709\u6b63\u786e\u6743\u8861\u7684\u65b9\u5f0f\u8fdb\u884c\u76d1\u7ba1\u3002</p> <p> </p> <p>Hany:</p> <p>\u662f\u7684\uff0c\u7ea6\u7ff0\uff0c\u518d\u8865\u5145\u4e00\u70b9\uff0c\u8fd9\u662f\u4f60\u9700\u8981\u4ece\u5f88\u5c0f\u7684\u65f6\u5019\u5c31\u5f00\u59cb\u7ec3\u4e60\u7684\u4e8b\u60c5\uff0c\u5c31\u50cf\u73b0\u5728\u8fd9\u6837\uff0c\u90a3\u5c31\u662f\u5982\u4f55\u4e0e\u4e0d\u61c2\u6280\u672f\u7684\u4eba\u8c08\u8bba\u6280\u672f\u95ee\u9898\uff1f\u6211\u4eec\u8ba1\u7b97\u673a\u79d1\u5b66\u5bb6\u3001\u76d1\u7ba1\u8005\u548c\u5f8b\u5e08\u4e4b\u95f4\u603b\u662f\u5b58\u5728\u8fd9\u79cd\u8bed\u8a00\u969c\u788d\u3002\u517b\u6210\u4e00\u4e2a\u4e60\u60ef\uff0c\u601d\u8003\u5982\u4f55\u4ee5\u771f\u5b9e\u800c\u6e05\u6670\u7684\u65b9\u5f0f\u89e3\u91ca\u8fd9\u4e9b\uff0c\u6709\u65f6\u662f\u975e\u5e38\u590d\u6742\u7684\u4e8b\u60c5\uff0c\u4ee5\u4fbf\u4eba\u4eec\u80fd\u591f\u7406\u89e3\u3001\u5904\u7406\uff0c\u5e76\u6b63\u786e\u5730\u8fdb\u884c\u63a8\u7406\u3002</p>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part3/#2_16","title":"2","text":"<p>John\u548cHany\u8c08\u5230\u4eba\u751f/\u751f\u6d3b(life)</p> <p>Quote</p> <p>John:</p> <p>Here's my spiel about life. You know, I'm not going to tell you how to live your life, but I wanted to remind you of a few things.</p> <p>One is about freedom, which is that when you learn how to write software, then your skills are going to be in demand. There's no question about that. Lots of people are going to work with you. In fact, there are so many different problems to solve that we can't solve them all with the people that we've trained to do this kind of thing. So, that means that what you decide to work on actually influences what gets built in the world.</p> <p>What you decide to work on will also influence your own experience. I think I've known a lot of people now in the tech industry, and the ones who make the most money are not the ones that seem most fulfilled or most happy to me. The ones that seem like they're very comfortable with their life usually have found something that they're good at, something that they enjoy, and it also happens to be something that matters to the world in some way. You know, if you find that combination, then great. So, when I say freedom, I mean you can choose what you work on. You don't have to just take the internship from the company that's got the flashiest website or the best reputation. There are lots of cool things to do out there, and you should be selective and search for something that is a good fit for you.</p> <p> </p> <p>Hany:</p> <p>Yeah, I think that's exactly right, John. I think one of the greatest gifts in life is being able to wake up every day and do the things that you find fulfilling, that you're good at, that you're excited about. And, by the way, to boot, somebody's willing to pay you to do them. It's an incredible gift.</p> <p>Thinking about what are you prioritizing? For some people, the priority is they want to make a lot of money. That's fine, that's a different choice. But think about what's going to be important to you. And here's the rub, by the way: What's important to you when you're 20, and when you're 30, 40, 50, and 60, it's going to be different. And I will tell you, I have a lot of friends who left grad school, made a lot of money on Wall Street, but when they turned 40 and started looking down the line at what's their legacy, it wasn't quite as good.</p> <p>Whereas I can look at my legacy as an academic and interact with smart young people, trying to inspire and motivate them. You can feel really good about that. So try to think not just about what's today but also, you know, 10, 20, 30 years from now.</p> <p> </p> <p>John:</p> <p>Yeah, exactly. And you might change course. You know, I didn't discover that I liked teaching until I tried it, which was when I went to grad school. I didn't do any of that in undergrad. So, if you haven't figured out the perfect thing for you yet, don't worry. But, make sure that you think about the kind of long-term implications of whatever you do commit to.</p> <p>John:</p> <p>\u5173\u4e8e\u4eba\u751f\uff0c\u6211\u60f3\u8bf4\u7684\u4e00\u4e9b\u8bdd\u3002\u6211\u4e0d\u4f1a\u544a\u8bc9\u4f60\u5982\u4f55\u8fc7\u4f60\u7684\u4eba\u751f\uff0c\u4f46\u6211\u60f3\u63d0\u9192\u4f60\u4e00\u4e9b\u4e8b\u60c5\u3002</p> <p>\u9996\u5148\u662f\u5173\u4e8e\u81ea\u7531\u7684\u95ee\u9898\uff0c\u5b66\u4f1a\u5199\u8f6f\u4ef6\u540e\uff0c\u4f60\u7684\u6280\u80fd\u5c06\u4f1a\u53d7\u5230\u9700\u6c42\uff0c\u6beb\u65e0\u7591\u95ee\u3002\u5f88\u591a\u4eba\u4f1a\u548c\u4f60\u4e00\u8d77\u5de5\u4f5c\u3002\u4e8b\u5b9e\u4e0a\uff0c\u6709\u5f88\u591a\u4e0d\u540c\u7684\u95ee\u9898\u9700\u8981\u89e3\u51b3\uff0c\u800c\u6211\u4eec\u65e0\u6cd5\u4ec5\u51ed\u6211\u4eec\u57f9\u8bad\u51fa\u6765\u7684\u4eba\u6765\u89e3\u51b3\u6240\u6709\u95ee\u9898\u3002\u6240\u4ee5\uff0c\u8fd9\u610f\u5473\u7740\u4f60\u51b3\u5b9a\u5de5\u4f5c\u7684\u5b9e\u9645\u4e0a\u4f1a\u5f71\u54cd\u5728\u4e16\u754c\u4e0a\u6784\u5efa\u4ec0\u4e48\u3002</p> <p>\u4f60\u51b3\u5b9a\u4ece\u4e8b\u4ec0\u4e48\u5de5\u4f5c\u4e5f\u5c06\u5f71\u54cd\u4f60\u81ea\u5df1\u7684\u7ecf\u9a8c\u3002\u6211\u8ba4\u8bc6\u4e86\u5f88\u591a\u79d1\u6280\u884c\u4e1a\u7684\u4eba\uff0c\u6700\u8d5a\u94b1\u7684\u4eba\u5e76\u4e0d\u662f\u6211\u8ba4\u4e3a\u6700\u5145\u5b9e\u6216\u6700\u5e78\u798f\u7684\u4eba\u3002\u90a3\u4e9b\u770b\u8d77\u6765\u975e\u5e38\u8212\u9002\u7684\u4eba\u901a\u5e38\u627e\u5230\u4e86\u81ea\u5df1\u64c5\u957f\u7684\u4e8b\u60c5\uff0c\u559c\u6b22\u505a\u7684\u4e8b\u60c5\uff0c\u800c\u4e14\u8fd9\u4e8b\u60c5\u6070\u597d\u5bf9\u4e16\u754c\u6709\u610f\u4e49\u3002\u4f60\u77e5\u9053\uff0c\u5982\u679c\u4f60\u627e\u5230\u4e86\u8fd9\u79cd\u7ec4\u5408\uff0c\u90a3\u5c31\u592a\u597d\u4e86\u3002\u6240\u4ee5\uff0c\u5f53\u6211\u8bf4\u81ea\u7531\u65f6\uff0c\u6211\u662f\u6307\u4f60\u53ef\u4ee5\u9009\u62e9\u4f60\u8981\u4ece\u4e8b\u7684\u5de5\u4f5c\u3002\u4f60\u4e0d\u5fc5\u53ea\u662f\u9009\u62e9\u90a3\u5bb6\u7f51\u7ad9\u6700\u70ab\u6216\u58f0\u8a89\u6700\u597d\u7684\u516c\u53f8\u7684\u5b9e\u4e60\u673a\u4f1a\u3002\u6709\u5f88\u591a\u6709\u8da3\u7684\u4e8b\u60c5\u7b49\u7740\u4f60\u53bb\u505a\uff0c\u4f60\u5e94\u8be5\u6709\u9009\u62e9\u5730\u5bfb\u627e\u9002\u5408\u4f60\u7684\u4e1c\u897f\u3002</p> <p> </p> <p>Hany:</p> <p>\u662f\u7684\uff0c\u6211\u8ba4\u4e3a\u7ea6\u7ff0\u8bf4\u5f97\u5bf9\u3002\u6211\u8ba4\u4e3a\u4eba\u751f\u4e2d\u6700\u4f1f\u5927\u7684\u793c\u7269\u4e4b\u4e00\u662f\u6bcf\u5929\u9192\u6765\uff0c\u505a\u4f60\u89c9\u5f97\u5145\u5b9e\u3001\u64c5\u957f\u5e76\u4e14\u611f\u5230\u5174\u594b\u7684\u4e8b\u60c5\u3002\u800c\u4e14\uff0c\u987a\u4fbf\u8bf4\u4e00\u4e0b\uff0c\u8fd8\u6709\u4eba\u613f\u610f\u4e3a\u4f60\u4ed8\u94b1\u6765\u505a\u8fd9\u4e9b\u4e8b\u60c5\u3002\u8fd9\u662f\u4e00\u4efd\u96be\u4ee5\u7f6e\u4fe1\u7684\u793c\u7269\u3002</p> <p>\u8003\u8651\u4e00\u4e0b\u4f60\u6b63\u5728\u4f18\u5148\u8003\u8651\u4ec0\u4e48\uff1f\u5bf9\u4e8e\u4e00\u4e9b\u4eba\u6765\u8bf4\uff0c\u4f18\u5148\u8003\u8651\u7684\u662f\u4ed6\u4eec\u60f3\u8d5a\u5f88\u591a\u94b1\u3002\u90a3\u6ca1\u95ee\u9898\uff0c\u8fd9\u662f\u4e00\u4e2a\u4e0d\u540c\u7684\u9009\u62e9\u3002\u4f46\u8981\u8003\u8651\u5bf9\u4f60\u6765\u8bf4\u4ec0\u4e48\u624d\u91cd\u8981\u3002\u800c\u4e14\u987a\u4fbf\u8bf4\u4e00\u4e0b\uff0c\u73b0\u5728\u662f\u5173\u952e\uff1a\u5f53\u4f6020\u5c81\u300130\u5c81\u300140\u5c81\u300150\u5c81\u548c60\u5c81\u65f6\uff0c\u5bf9\u4f60\u91cd\u8981\u7684\u4e1c\u897f\u4f1a\u6709\u6240\u4e0d\u540c\u3002\u6211\u544a\u8bc9\u4f60\uff0c\u6211\u6709\u5f88\u591a\u670b\u53cb\u79bb\u5f00\u7814\u7a76\u751f\u5b66\u6821\uff0c\u5728\u534e\u5c14\u8857\u8d5a\u4e86\u5f88\u591a\u94b1\uff0c\u4f46\u5f53\u4ed6\u4eec40\u5c81\u65f6\u5f00\u59cb\u601d\u8003\u81ea\u5df1\u7684\u9057\u4ea7\u65f6\uff0c\u60c5\u51b5\u5c31\u4e0d\u90a3\u4e48\u7406\u60f3\u4e86\u3002</p> <p>\u800c\u6211\u4f5c\u4e3a\u4e00\u540d\u5b66\u8005\uff0c\u53ef\u4ee5\u770b\u5f85\u6211\u7684\u9057\u4ea7\uff0c\u4e0e\u806a\u660e\u7684\u5e74\u8f7b\u4eba\u4e92\u52a8\uff0c\u8bd5\u56fe\u6fc0\u53d1\u548c\u6fc0\u52b1\u4ed6\u4eec\u3002\u4f60\u53ef\u4ee5\u56e0\u6b64\u611f\u5230\u975e\u5e38\u81ea\u8c6a\u3002\u56e0\u6b64\uff0c\u8bd5\u7740\u4e0d\u53ea\u8003\u8651\u4eca\u5929\uff0c\u8fd8\u8981\u8003\u8651\uff0c\u4f60\u77e5\u9053\uff0c\u672a\u676510\u300120\u300130\u5e74\u3002</p> <p> </p> <p>John:</p> <p>\u662f\u7684\uff0c\u786e\u5b9e\u3002\u800c\u4e14\u4f60\u53ef\u80fd\u4f1a\u6539\u53d8\u65b9\u5411\u3002\u4f60\u77e5\u9053\uff0c\u6211\u76f4\u5230\u5c1d\u8bd5\u624d\u53d1\u73b0\u6211\u559c\u6b22\u6559\u5b66\uff0c\u90a3\u662f\u6211\u4e0a\u7814\u7a76\u751f\u5b66\u6821\u65f6\u3002\u5728\u672c\u79d1\u65f6\u6211\u6ca1\u6709\u5c1d\u8bd5\u8fc7\u8fd9\u4e9b\u3002\u6240\u4ee5\uff0c\u5982\u679c\u4f60\u8fd8\u6ca1\u627e\u5230\u5b8c\u5168\u9002\u5408\u4f60\u7684\u4e8b\u60c5\uff0c\u4e0d\u7528\u62c5\u5fc3\u3002\u4f46\u662f\uff0c\u8bf7\u786e\u4fdd\u4f60\u8003\u8651\u4f60\u6240\u627f\u8bfa\u7684\u4e8b\u60c5\u7684\u957f\u8fdc\u5f71\u54cd\u3002</p>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part3/#3_10","title":"3","text":"<p>John\u548cHany\u63d0\u5230\u4e0d\u53ea\u8981\u4e13\u7cbe\u4e8e\u8ba1\u7b97\u673a\u4e13\u4e1a\u7684\u6280\u672f\uff0c\u5b66\u4e60\u5176\u4ed6\u9886\u57df\u7684\u77e5\u8bc6\u4f1a\u66f4\u597d</p> <p>Quote</p> <p>Hany:</p> <p>Ah, what would be a good career path if someone were to want to go into law and policy regarding tech? Since, as John mentioned, they need someone who understands the law and tech side of things.</p> <p>Yeah, that's a good question. A lot of the big companies these days are hiring people to work on policy. For example, there are people who are responsible for global policy, domestic policy. They often are lawyers, which is good in some ways, but I would like to see some more technologists there.</p> <p>For me, I like people who, maybe instead of a CS major, they're a CS minor or, in addition to a CS major, they've also studied politics or economics or something in the social sciences where they can think about the implications of policies. I find historians really fascinating in this regard, political scientists who think about laws, for example, understanding that. But typically, it's that kind of dual career that is very useful.</p> <p> </p> <p>John:</p> <p>Yeah, a lot of people I know who are really interesting and really effective, they know something really well, and then they know something else quite well. And by quite well, I mean not just like they've read a lot of New York Times articles about it, but like, you know, they've gone pretty deep.</p> <p>So yeah, whether it's, you know, the software really well and the policy issues pretty well, or vice versa, you can be extraordinarily effective in either way, much more so than being like, \"Yeah, just even more deep into policy but you don't understand the technology.\"</p> <p>Hany:</p> <p>\u554a\uff0c\u5982\u679c\u6709\u4eba\u60f3\u8981\u4ece\u4e8b\u4e0e\u79d1\u6280\u76f8\u5173\u7684\u6cd5\u5f8b\u548c\u653f\u7b56\u5de5\u4f5c\uff0c\u4ec0\u4e48\u6837\u7684\u804c\u4e1a\u9053\u8def\u4f1a\u662f\u4e00\u4e2a\u4e0d\u9519\u7684\u9009\u62e9\u5462\uff1f\u6b63\u5982John\u6240\u63d0\u5230\u7684\uff0c\u4ed6\u4eec\u9700\u8981\u4e86\u89e3\u6cd5\u5f8b\u548c\u6280\u672f\u65b9\u9762\u7684\u4eba\u624d\u3002</p> <p>\u662f\u7684\uff0c\u8fd9\u662f\u4e00\u4e2a\u5f88\u597d\u7684\u95ee\u9898\u3002\u5982\u4eca\uff0c\u5f88\u591a\u5927\u516c\u53f8\u90fd\u5728\u62db\u8058\u8d1f\u8d23\u653f\u7b56\u65b9\u9762\u5de5\u4f5c\u7684\u4eba\u5458\u3002\u4f8b\u5982\uff0c\u6709\u4eba\u8d1f\u8d23\u5168\u7403\u653f\u7b56\u3001\u56fd\u5185\u653f\u7b56\u3002\u4ed6\u4eec\u901a\u5e38\u662f\u5f8b\u5e08\uff0c\u4ece\u67d0\u4e9b\u65b9\u9762\u6765\u8bf4\u662f\u597d\u7684\uff0c\u4f46\u6211\u5e0c\u671b\u80fd\u770b\u5230\u66f4\u591a\u7684\u6280\u672f\u4eba\u624d\u52a0\u5165\u3002</p> <p>\u5bf9\u6211\u6765\u8bf4\uff0c\u6211\u559c\u6b22\u90a3\u4e9b\u53ef\u80fd\u4e0d\u662f\u8ba1\u7b97\u673a\u79d1\u5b66\u4e13\u4e1a\u4e3b\u4fee\u7684\u4eba\uff0c\u800c\u662f\u8ba1\u7b97\u673a\u79d1\u5b66\u4e13\u4e1a\u8f85\u4fee\u6216\u8005\u540c\u65f6\u5b66\u4e60\u653f\u6cbb\u3001\u7ecf\u6d4e\u6216\u793e\u4f1a\u79d1\u5b66\u7b49\u65b9\u9762\u7684\u4eba\uff0c\u4ed6\u4eec\u80fd\u591f\u601d\u8003\u653f\u7b56\u7684\u5f71\u54cd\u3002\u5728\u8fd9\u65b9\u9762\uff0c\u6211\u89c9\u5f97\u5386\u53f2\u5b66\u5bb6\u5728\u8fd9\u65b9\u9762\u975e\u5e38\u8ff7\u4eba\uff0c\u653f\u6cbb\u79d1\u5b66\u5bb6\u4e5f\u5728\u601d\u8003\u6cd5\u5f8b\u7b49\u65b9\u9762\u7684\u95ee\u9898\uff0c\u7406\u89e3\u8fd9\u4e9b\u662f\u5f88\u6709\u5e2e\u52a9\u7684\u3002\u4f46\u901a\u5e38\u6765\u8bf4\uff0c\u8fd9\u79cd\u53cc\u91cd\u804c\u4e1a\u80cc\u666f\u662f\u975e\u5e38\u6709\u7528\u7684\u3002</p> <p> </p> <p>John:</p> <p>\u662f\u7684\uff0c\u6211\u8ba4\u8bc6\u7684\u8bb8\u591a\u975e\u5e38\u6709\u8da3\u4e14\u975e\u5e38\u6709\u6548\u7684\u4eba\uff0c\u4ed6\u4eec\u64c5\u957f\u67d0\u4e2a\u9886\u57df\uff0c\u7136\u540e\u53c8\u5bf9\u53e6\u4e00\u4e2a\u9886\u57df\u4e86\u89e3\u5f97\u76f8\u5f53\u900f\u5f7b\u3002\u5f53\u6211\u8bf4\u76f8\u5f53\u900f\u5f7b\u65f6\uff0c\u6211\u6307\u7684\u4e0d\u4ec5\u4ec5\u662f\u8bfb\u4e86\u5f88\u591a\u300a\u7ebd\u7ea6\u65f6\u62a5\u300b\u7684\u6587\u7ae0\uff0c\u800c\u662f\u6df1\u5165\u4e86\u89e3\u4e86\u8bb8\u591a\u3002</p> <p>\u6240\u4ee5\uff0c\u662f\u7684\uff0c\u65e0\u8bba\u662f\u5bf9\u8f6f\u4ef6\u4e86\u89e3\u5f97\u5f88\u900f\u5f7b\uff0c\u5bf9\u653f\u7b56\u95ee\u9898\u4e5f\u4e86\u89e3\u5f97\u76f8\u5f53\u900f\u5f7b\uff0c\u8fd8\u662f\u76f8\u53cd\uff0c\u4f60\u90fd\u53ef\u4ee5\u5728\u4efb\u4e00\u65b9\u9762\u53d6\u5f97\u975e\u51e1\u7684\u6210\u5c31\uff0c\u8fdc\u6bd4\u53ea\u662f\u6df1\u5165\u4e86\u89e3\u653f\u7b56\u800c\u5bf9\u6280\u672f\u4e00\u65e0\u6240\u77e5\u66f4\u4e3a\u6709\u6548\u3002</p>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part3/#4_4","title":"4","text":"<p>\u6709\u4eba\u63d0\u95ee\u5c45\u5bb6\u4e0a\u5b66\u611f\u5230\u4e0e\u5b66\u6821\u8131\u79bb\uff0cHany\u8fdb\u884c\u56de\u7b54\uff0c\u5e76\u63d0\u5230\u5904\u4e8e\u4f4e\u8c37\u4e2d\u7684\u5efa\u8bae</p> <p>Quote</p> <p>Hany:</p> <p>What, um, yeah, god, this is a tough question. I don't know that I have an answer, but I want to answer the question anyway. Um, what advice would you have for someone living at home for this year and feeling kind of detached from the university and academia?</p> <p>Oh man, I gotta tell you, that question just breaks my heart because I know a lot of people are going through that. So I don't know if I have a good answer for you, but let me try a few things. Um, this will end. We will come out at the other end of this. And the one thing that I've learned, having been around for a few decades now, is when you're in the middle of a hard time like this, whether it's something like this global pandemic or it's family or it's work or it's a relationship or it's personal or it's health, when you're in the middle of it, it feels really bad. And it is, but you always come out the other end.</p> <p>And in all of these cases, I will look back at it and will say to myself, you know what, I've come back from this, better, stronger, more mature. Um, and there will be positives that come from this. So for me, what I do is I try to think down the line, six months, nine months from now, we're going to be back, and will we be better for this? We will be, hopefully, better human beings, better societies, and we will learn how to work through hardships. It's a shitty answer, by the way, for what to do right now, but it's a more hopeful answer for what's downstream for you.</p> <p>Hany:</p> <p>\u55ef\uff0c\u55ef\uff0c\u5929\u54ea\uff0c\u8fd9\u662f\u4e00\u4e2a\u68d8\u624b\u7684\u95ee\u9898\u3002\u6211\u4e0d\u77e5\u9053\u6211\u662f\u5426\u6709\u4e00\u4e2a\u7b54\u6848\uff0c\u4f46\u6211\u8fd8\u662f\u60f3\u56de\u7b54\u8fd9\u4e2a\u95ee\u9898\u3002\u55ef\uff0c\u5bf9\u4e8e\u90a3\u4e9b\u4eca\u5e74\u7559\u5728\u5bb6\u91cc\u5e76\u611f\u5230\u6709\u70b9\u8131\u79bb\u5927\u5b66\u548c\u5b66\u672f\u754c\u7684\u4eba\uff0c\u4f60\u6709\u4ec0\u4e48\u5efa\u8bae\uff1f</p> <p>\u54e6\uff0c\u5929\u554a\uff0c\u6211\u5f97\u544a\u8bc9\u4f60\uff0c\u8fd9\u4e2a\u95ee\u9898\u771f\u7684\u8ba9\u6211\u5fc3\u788e\uff0c\u56e0\u4e3a\u6211\u77e5\u9053\u5f88\u591a\u4eba\u90fd\u7ecf\u5386\u4e86\u8fd9\u79cd\u60c5\u51b5\u3002\u6240\u4ee5\u6211\u4e0d\u77e5\u9053\u6211\u662f\u5426\u6709\u4e00\u4e2a\u597d\u7684\u7b54\u6848\u7ed9\u4f60\uff0c\u4f46\u8ba9\u6211\u8bd5\u8bd5\u51e0\u4e2a\u65b9\u6cd5\u3002\u55ef\uff0c\u8fd9\u4f1a\u7ed3\u675f\u7684\u3002\u6211\u4eec\u4f1a\u5ea6\u8fc7\u96be\u5173\u7684\u3002\u800c\u6211\u5b66\u5230\u7684\u4e00\u4ef6\u4e8b\u662f\uff0c\u7ecf\u5386\u4e86\u51e0\u5341\u5e74\uff0c\u5f53\u4f60\u5904\u4e8e\u8fd9\u6837\u7684\u8270\u96be\u65f6\u523b\uff0c\u65e0\u8bba\u662f\u50cf\u8fd9\u6837\u7684\u5168\u7403\u5927\u6d41\u884c\uff0c\u8fd8\u662f\u5bb6\u5ead\u3001\u5de5\u4f5c\u3001\u4eba\u9645\u5173\u7cfb\u3001\u4e2a\u4eba\u95ee\u9898\u6216\u5065\u5eb7\u95ee\u9898\uff0c\u5f53\u4f60\u6b63\u5904\u4e8e\u5176\u4e2d\u65f6\uff0c\u611f\u89c9\u771f\u7684\u5f88\u7cdf\u7cd5\u3002\u786e\u5b9e\u5982\u6b64\uff0c\u4f46\u4f60\u603b\u4f1a\u8d70\u51fa\u56f0\u5883\u3002</p> <p>\u5728\u6240\u6709\u8fd9\u4e9b\u60c5\u51b5\u4e0b\uff0c\u6211\u4f1a\u56de\u987e\u4e00\u4e0b\uff0c\u5bf9\u81ea\u5df1\u8bf4\uff0c\u4f60\u77e5\u9053\u5417\uff0c\u6211\u4ece\u4e2d\u8d70\u4e86\u51fa\u6765\uff0c\u53d8\u5f97\u66f4\u597d\u3001\u66f4\u5f3a\u5927\u3001\u66f4\u6210\u719f\u3002\u55ef\uff0c\u4f1a\u6709\u4e00\u4e9b\u79ef\u6781\u7684\u65b9\u9762\u3002\u6240\u4ee5\u5bf9\u6211\u6765\u8bf4\uff0c\u6211\u505a\u7684\u662f\u5c3d\u91cf\u5f80\u524d\u770b\uff0c\u516d\u4e2a\u6708\u3001\u4e5d\u4e2a\u6708\u540e\uff0c\u6211\u4eec\u4f1a\u56de\u6765\u7684\uff0c\u6211\u4eec\u4f1a\u56e0\u6b64\u53d8\u5f97\u66f4\u597d\u5417\uff1f\u6211\u4eec\u4f1a\uff0c\u5e0c\u671b\u6210\u4e3a\u66f4\u597d\u7684\u4eba\u7c7b\uff0c\u66f4\u597d\u7684\u793e\u4f1a\uff0c\u6211\u4eec\u4f1a\u5b66\u4f1a\u5982\u4f55\u514b\u670d\u56f0\u5883\u3002\u8fd9\u5bf9\u4e8e\u73b0\u5728\u8be5\u600e\u4e48\u529e\u6765\u8bf4\u662f\u4e00\u4e2a\u7cdf\u7cd5\u7684\u7b54\u6848\uff0c\u4f46\u5bf9\u4e8e\u4f60\u672a\u6765\u7684\u60c5\u51b5\u800c\u8a00\uff0c\u8fd9\u662f\u4e00\u4e2a\u66f4\u6709\u5e0c\u671b\u7684\u7b54\u6848\u3002</p>"},{"location":"Notes%20of%20Courses/CS61A/CS61A_part3/#5_3","title":"5","text":"<p>John\u63d0\u5230\u4e0d\u8981\u4e0e\u4ed6\u4eba\u6bd4\u8f83\uff0c\u800c\u662f\u6ce8\u91cd\u81ea\u6211\u7684\u63d0\u5347</p> <p>Quote</p> <p>John:</p> <p>Yeah, we've got two minutes left. Maybe, um, since I started by talking about the final exam, I'll end with something related, which is a piece of advice that I got when I was getting married. So, I was a Ph.D. student at the time, and my mom pulled me aside on my wedding day and said, \"John, I want to give you some advice.\" And I was like, \"Oh, great. She's going to tell me to listen to my wife or whatever.\" But she didn't. She said only two words that have stuck with me for a long time. She said, \"Don't compare.\" And then she was like, \"Okay, you can go back to doing whatever you're doing.\"</p> <p>At the time, this was very hard for me to process because I was in a university, which is all about comparing people based on, like, what their exam score was. And, you know, it turns out that out there in the world, there are no exams that everybody takes that are standardized anymore. All that matters is what you go and get done on your own particular path. So, comparing yourselves to other people becomes meaningless rapidly, as what really matters is what you can do yourself, like what you're capable of and what you bother to do and how you choose to spend your time.</p> <p>But it took years of this two-word phrase, \"Don't compare,\" to marinate inside of me, and for me to realize that my self-worth really has nothing to do with what other people can do and whether I can do it better than them or worse than them, and it has everything to do with what I've done and what I'm gonna do next, and how I spend my time to better myself. So, I should just focus on improving myself and forget about what everybody else is doing.</p> <p>So, um, you're gonna go take a final, and a bunch of other people are gonna take this final exam too. But who cares? This course is not graded on a curve; it's just you doing your best work. So, I do hope you prepare, I do hope you get some good sleep and all of that, but at the same time, I don't think you need to worry about the histogram and how your friends are doing. Just help each other out and focus on yourself in the end.</p> <p> </p> <p>Hany:</p> <p>That's incredibly beautiful, John. I want to say two things. First of all, I'm gonna go talk to my mother because I didn't get nearly such good advice growing up, so I'm gonna have a word with her. I want to re-emphasize this because this is something that took me a long time in life to understand - not to compare. There's a trap too that we fall into, which is that we compare, for example, how big our house is to that one friend, how much money we make to another friend, the kind of clothes we have to this friend, and how smart we are to that friend. We pick and choose these things, and that's, first of all, even doing that individually is meaningless. But also, it's a trap, and this is the problem with social media - you see these curated worlds of other people, and it's a trap. One of the great things about getting older (and you will get there, I promise you) is that you will realize it's a trap and it means absolutely nothing. It really is a very internal thing. What are you doing? Who do you want to be? How do you want to go through this world? How do you want to treat other people? At the end of the day, that, and almost nothing else, is going to matter. And you've got to just trust that it's going to be there.</p> <p>John:</p> <p>\u662f\u7684\uff0c\u6211\u4eec\u8fd8\u6709\u4e24\u5206\u949f\u5de6\u53f3\uff0c\u4e5f\u8bb8\uff0c\u7531\u4e8e\u6211\u4e00\u5f00\u59cb\u8c08\u5230\u671f\u672b\u8003\u8bd5\uff0c\u6211\u4f1a\u4ee5\u4e0e\u4e4b\u76f8\u5173\u7684\u4e8b\u60c5\u7ed3\u675f\u3002\u8fd9\u4e0e\u6211\u7ed3\u5a5a\u65f6\u83b7\u5f97\u7684\u4e00\u4e9b\u5efa\u8bae\u6709\u5173\u3002\u90a3\u65f6\uff0c\u6211\u8fd8\u662f\u4e00\u540d\u535a\u58eb\u751f\uff0c\u6211\u5988\u5988\u5728\u6211\u5a5a\u793c\u90a3\u5929\u62c9\u7740\u6211\u4e00\u8fb9\u8bf4\uff1a\u201cJohn\uff0c\u6211\u60f3\u7ed9\u4f60\u4e00\u4e9b\u5efa\u8bae\u3002\u201d\u6211\u5f53\u65f6\u89c9\u5f97\uff1a\u201c\u54e6\uff0c\u592a\u597d\u4e86\uff0c\u5979\u4f1a\u544a\u8bc9\u6211\u542c\u4ece\u59bb\u5b50\u7684\u8bdd\u6216\u5176\u4ed6\u4ec0\u4e48\u7684\u3002\u201d\u4f46\u5979\u6ca1\u6709\u3002\u5979\u53ea\u8bf4\u4e86\u4e24\u4e2a\u8bcd\uff0c\u8fd9\u4e24\u4e2a\u8bcd\u4e00\u76f4\u5728\u6211\u5fc3\u4e2d\u3002\u5979\u8bf4\uff1a\u201c\u4e0d\u8981\u6bd4\u8f83\u3002\u201d\u7136\u540e\u5979\u8bf4\uff1a\u201c\u597d\u5427\uff0c\u4f60\u53ef\u4ee5\u56de\u53bb\u505a\u4f60\u6b63\u5728\u505a\u7684\u4e8b\u60c5\u4e86\u3002\u201d</p> <p>\u5f53\u65f6\uff0c\u8fd9\u5bf9\u6211\u6765\u8bf4\u5f88\u96be\u7406\u89e3\uff0c\u56e0\u4e3a\u6211\u8eab\u5904\u4e00\u4e2a\u5927\u5b66\uff0c\u90a3\u91cc\u4e00\u5207\u90fd\u662f\u5173\u4e8e\u6839\u636e\u8003\u8bd5\u6210\u7ee9\u6bd4\u8f83\u4eba\u4eec\u7684\u5730\u65b9\u3002\u4f60\u77e5\u9053\uff0c\u4e8b\u5b9e\u8bc1\u660e\uff0c\u5728\u8fd9\u4e2a\u4e16\u754c\u4e0a\uff0c\u6ca1\u6709\u4eba\u518d\u63a5\u53d7\u6807\u51c6\u5316\u7684\u8003\u8bd5\u4e86\u3002\u771f\u6b63\u91cd\u8981\u7684\u662f\u4f60\u6309\u7167\u81ea\u5df1\u7684\u7279\u5b9a\u8def\u5f84\u6240\u505a\u7684\u4e8b\u60c5\u3002\u56e0\u6b64\uff0c\u4e0e\u5176\u4ed6\u4eba\u6bd4\u8f83\u53d8\u5f97\u8fc5\u901f\u53d8\u5f97\u6beb\u65e0\u610f\u4e49\uff0c\u56e0\u4e3a\u771f\u6b63\u91cd\u8981\u7684\u662f\u4f60\u81ea\u5df1\u80fd\u505a\u4ec0\u4e48\uff0c\u4f60\u6709\u4ec0\u4e48\u672c\u9886\uff0c\u4ee5\u53ca\u4f60\u9009\u62e9\u5982\u4f55\u5ea6\u8fc7\u65f6\u95f4\u3002</p> <p>\u4f46\u662f\uff0c\u201c\u4e0d\u8981\u6bd4\u8f83\u201d\u8fd9\u4e24\u4e2a\u8bcd\u5728\u6211\u5185\u5fc3\u53d1\u9175\u4e86\u597d\u591a\u5e74\uff0c\u6211\u624d\u610f\u8bc6\u5230\u6211\u7684\u81ea\u6211\u4ef7\u503c\u5b9e\u9645\u4e0a\u4e0e\u5176\u4ed6\u4eba\u80fd\u505a\u4ec0\u4e48\u65e0\u5173\uff0c\u6211\u662f\u5426\u80fd\u505a\u5f97\u6bd4\u4ed6\u4eec\u597d\u6216\u5dee\uff0c\u800c\u4e0e\u6211\u5df2\u7ecf\u505a\u4e86\u4ec0\u4e48\u4ee5\u53ca\u6211\u5c06\u6765\u4f1a\u505a\u4ec0\u4e48\uff0c\u4ee5\u53ca\u6211\u5982\u4f55\u82b1\u65f6\u95f4\u6765\u63d0\u5347\u81ea\u5df1\u6709\u5173\u3002\u6240\u4ee5\uff0c\u6211\u5e94\u8be5\u4e13\u6ce8\u4e8e\u6539\u5584\u81ea\u5df1\uff0c\u5fd8\u8bb0\u5176\u4ed6\u4eba\u5728\u505a\u4ec0\u4e48\u3002</p> <p>\u6240\u4ee5\uff0c\u4f60\u8981\u53bb\u53c2\u52a0\u671f\u672b\u8003\u8bd5\uff0c\u5176\u4ed6\u5f88\u591a\u4eba\u4e5f\u4f1a\u53c2\u52a0\u8fd9\u4e2a\u671f\u672b\u8003\u8bd5\u3002\u4f46\u8c01\u5728\u4e4e\u5462\uff1f\u8fd9\u95e8\u8bfe\u4e0d\u662f\u6309\u7167\u66f2\u7ebf\u8bc4\u5206\u7684\uff0c\u8fd9\u53ea\u662f\u4f60\u5c3d\u529b\u800c\u4e3a\u3002\u6240\u4ee5\uff0c\u6211\u5e0c\u671b\u4f60\u505a\u597d\u51c6\u5907\uff0c\u4e5f\u5e0c\u671b\u4f60\u6709\u5145\u8db3\u7684\u7761\u7720\u7b49\u7b49\uff0c\u4f46\u4e0e\u6b64\u540c\u65f6\uff0c\u6211\u8ba4\u4e3a\u4f60\u65e0\u9700\u62c5\u5fc3\u76f4\u65b9\u56fe\u548c\u4f60\u7684\u670b\u53cb\u4eec\u7684\u60c5\u51b5\u3002\u4e92\u76f8\u5e2e\u52a9\uff0c\u6700\u7ec8\u4e13\u6ce8\u4e8e\u81ea\u5df1\u3002</p> <p> </p> <p>Hany:</p> <p>\u8fd9\u771f\u7684\u975e\u5e38\u7f8e\u597d\uff0c\u7ea6\u7ff0\u3002\u6211\u60f3\u8bf4\u4e24\u4ef6\u4e8b\u3002\u9996\u5148\uff0c\u6211\u8981\u53bb\u627e\u6211\u5988\u5988\u804a\u804a\uff0c\u56e0\u4e3a\u6211\u5728\u6210\u957f\u8fc7\u7a0b\u4e2d\u6ca1\u6709\u5f97\u5230\u8fd9\u4e48\u597d\u7684\u5efa\u8bae\uff0c\u6240\u4ee5\u6211\u8981\u548c\u5979\u8c08\u8c08\u3002\u6211\u60f3\u91cd\u7533\u4e00\u4e0b\uff0c\u56e0\u4e3a\u8fd9\u662f\u6211\u5f88\u957f\u65f6\u95f4\u624d\u660e\u767d\u7684\u4e8b\u60c5\u2014\u2014\u4e0d\u8981\u6bd4\u8f83\u3002\u6211\u4eec\u4e5f\u4f1a\u9677\u5165\u4e00\u4e2a\u9677\u9631\uff0c\u6bd4\u5982\u6211\u4eec\u4f1a\u6bd4\u8f83\u6211\u4eec\u7684\u623f\u5b50\u6709\u591a\u5927\uff0c\u4e0e\u670b\u53cb\u76f8\u6bd4\u6211\u4eec\u6323\u591a\u5c11\u94b1\uff0c\u4e0e\u53e6\u4e00\u4e2a\u670b\u53cb\u76f8\u6bd4\u6211\u4eec\u6709\u4ec0\u4e48\u6837\u7684\u8863\u670d\uff0c\u751a\u81f3\u4e0e\u90a3\u4f4d\u670b\u53cb\u76f8\u6bd4\u6211\u4eec\u6709\u591a\u806a\u660e\u3002\u6211\u4eec\u9009\u62e9\u8fd9\u4e9b\u4e8b\u60c5\uff0c\u9996\u5148\uff0c\u5355\u72ec\u505a\u8fd9\u4e9b\u662f\u6beb\u65e0\u610f\u4e49\u7684\u3002\u4f46\u540c\u6837\uff0c\u8fd9\u662f\u4e00\u4e2a\u9677\u9631\uff0c\u8fd9\u5c31\u662f\u793e\u4ea4\u5a92\u4f53\u7684\u95ee\u9898\u2014\u2014\u4f60\u770b\u5230\u5176\u4ed6\u4eba\u7ecf\u8fc7\u7cbe\u5fc3\u7b56\u5212\u7684\u4e16\u754c\uff0c\u8fd9\u662f\u4e00\u4e2a\u9677\u9631\u3002\u53d8\u8001\u7684\u4e00\u4e2a\u597d\u5904\uff08\u4f60\u4f1a\u5230\u8fbe\u90a3\u91cc\u7684\uff0c\u6211\u5411\u4f60\u4fdd\u8bc1\uff09\u662f\u4f60\u4f1a\u610f\u8bc6\u5230\u8fd9\u662f\u4e00\u4e2a\u9677\u9631\uff0c\u5b83\u6beb\u65e0\u610f\u4e49\u3002\u8fd9\u786e\u5b9e\u662f\u4e00\u79cd\u975e\u5e38\u5185\u5728\u7684\u4e1c\u897f\u3002\u4f60\u5728\u505a\u4ec0\u4e48\uff1f\u4f60\u60f3\u6210\u4e3a\u8c01\uff1f\u4f60\u60f3\u5982\u4f55\u5ea6\u8fc7\u8fd9\u4e2a\u4e16\u754c\uff1f\u4f60\u60f3\u5982\u4f55\u5bf9\u5f85\u5176\u4ed6\u4eba\uff1f\u5728\u4e00\u5929\u7ed3\u675f\u65f6\uff0c\u90a3\u51e0\u4e4e\u662f\u552f\u4e00\u91cd\u8981\u7684\u4e8b\u60c5\u3002\u4f60\u53ea\u9700\u76f8\u4fe1\u5b83\u4f1a\u5728\u90a3\u91cc\u3002</p>"},{"location":"Notes%20of%20Courses/CS61B/CS61B/","title":"CS61B","text":"<p> \u7ea6 10610 \u4e2a\u5b57  963 \u884c\u4ee3\u7801  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 47 \u5206\u949f</p> <p>cs61b\u53ef\u7528\u7684gradescope\u8bfe\u7a0b\u9080\u8bf7\u7801\u662f MB7ZPY\uff0c\u622a\u6b62\u523024\u5e74\u5e95</p> <p>\u53c2\u8003</p> <p>cs61b Lab0/1 setup - \u77e5\u4e4e (zhihu.com)</p>"},{"location":"Notes%20of%20Courses/CS61B/CS61B/#lecture-0-intro-hello-world-java","title":"Lecture 0 Intro, Hello World Java","text":""},{"location":"Notes%20of%20Courses/CS61B/CS61B/#1","title":"1","text":"<p>java\u4e2d\u6240\u6709\u51fd\u6570\u90fd\u5e94\u8be5\u5b58\u5728\u4e8e\u7c7b\u4e2d\uff0c\u56e0\u6b64java\u4e2d\u6240\u6709\u7684\u51fd\u6570\u90fd\u662f\u65b9\u6cd5 method</p>"},{"location":"Notes%20of%20Courses/CS61B/CS61B/#hw-0","title":"HW 0","text":""},{"location":"Notes%20of%20Courses/CS61B/CS61B/#1_1","title":"1","text":"<p>java\u4e2d\u6570\u7ec4\u7684\u4f7f\u7528\u65b9\u6cd5</p> <pre><code>int[] numbers = new int[3];\nnumbers[0] = 4;\nnumbers[1] = 7;\nnumbers[2] = 10;\nSystem.out.println(numbers[1]);\n</code></pre> <p>\u6216\u8005</p> <pre><code>int[] numbers = new int[]{4, 7, 10};\nSystem.out.println(numbers[1]);\n</code></pre> <p>\u53ef\u4ee5\u4f7f\u7528 <code>.length</code> \u6765\u83b7\u53d6\u6570\u7ec4\u7684\u957f\u5ea6\uff0c\u4f8b\u5982</p> <pre><code>int[] numbers = new int[]{4, 7, 10};\nSystem.out.println(numbers.length);\n</code></pre>"},{"location":"Notes%20of%20Courses/CS61B/CS61B/#2","title":"2","text":"<p>In Java, the <code>for</code> keyword has the syntax below:</p> <pre><code>for (initialization; termination; increment) {\n    statement(s)\n}\n</code></pre> <p>The initialization, termination, and increment must be semicolon separated. Each of these three can feature multiple comma-separated statements, e.g.</p> <pre><code>for (int i = 0, j = 10; i &lt; j; i += 1) {\n    System.out.println(i + j);\n}\n</code></pre> <p>Comma separated <code>for</code> loops should be used sparingly.</p> <p>java\u4e2d <code>for</code> \u7684\u4f7f\u7528\u65b9\u6cd5(\u8ddfc\u4e2d\u5dee\u4e0d\u591a)</p>"},{"location":"Notes%20of%20Courses/CS61B/CS61B/#3","title":"3","text":"<p>Exercise 4</p> code <pre><code>public class BreakContinue {\n    public static void windowPosSum(int[] a, int n) {\n        /** your code here */ \n        for (int i = 0; i &lt; a.length; i += 1) {\n            if (a[i] &lt; 0) {\n                continue;\n            }\n\n            int sum = 0;\n            for (int j = 0; j &lt;= n; j += 1) {\n                if (i + j &gt;= a.length) {\n                    break;\n                }\n                sum += a[i + j];\n            }\n\n            a[i] = sum;\n        }\n    }\n\n    public static void main(String[] args) {\n        int[] a = {1, 2, -3, 4, 5, 4};\n        int n = 3;\n        windowPosSum(a, n);\n\n        // Should print 4, 8, -3, 13, 9, 4\n        System.out.println(java.util.Arrays.toString(a));\n    }\n}\n</code></pre>"},{"location":"Notes%20of%20Courses/CS61B/CS61B/#4","title":"4","text":"<p><code>for</code> \u5faa\u73af\u8bed\u53e5\u7684\u589e\u5f3a</p> <p>java\u4e2d <code>for</code> \u53ef\u4ee5\u6709\u76f8\u4f3c\u4e8epython\u4e2d\u5217\u8868\u63a8\u5bfc\u5f0f\u7684\u7528\u6cd5(\u628a\u6570\u7ec4\u4e2d\u7684\u5143\u7d20\u89e3\u538b\u51fa\u6765)</p> <pre><code>public class EnhancedForBreakDemo {\n    public static void main(String[] args) {\n        String[] a = {\"cat\", \"dog\", \"laser horse\", \"ketchup\", \"horse\", \"horbse\"};\n\n        for (String s : a) {\n            for (int j = 0; j &lt; 3; j += 1) {\n                System.out.println(s);\n                if (s.contains(\"horse\")) {\n                    break;\n                }                \n            }\n        }\n    }\n}\n</code></pre> <p>\u6ce8\u610f\u5230\uff0cjava\u4e2d\uff0c\u5b57\u7b26\u4e32String\u6709 <code>contain</code> \u65b9\u6cd5\uff0c\u53ef\u4ee5\u5224\u65ad\u662f\u5426\u5305\u542b\u67d0\u4e2a\u5b50\u5b57\u7b26\u4e32</p>"},{"location":"Notes%20of%20Courses/CS61B/CS61B/#lecture-2-defining-and-using-classes","title":"Lecture 2 Defining and Using Classes","text":""},{"location":"Notes%20of%20Courses/CS61B/CS61B/#1_2","title":"1","text":"<p>Josh\u6f14\u793a\u4e86\u5728\u7ec8\u7aef\u4e2d\u8fd0\u884cjava\u6587\u4ef6\u7684\u65b9\u6cd5\uff0c</p> <p>\u9700\u8981\u5148\u4f7f\u7528 <code>javac</code> \u6765\u7f16\u8bd1java\u6587\u4ef6\uff0c\u7136\u540e\u4f1a\u751f\u6210class\u6587\u4ef6\uff0c</p> <p>\u518d\u4f7f\u7528 <code>java</code> \u6587\u4ef6\u6765\u8fd0\u884cclass\u6587\u4ef6(\u8f93\u5165\u547d\u4ee4\u65f6\u53ef\u4ee5\u5ffd\u7565 <code>.class</code> \u540e\u7f00)</p> <p><code>cat</code> \u547d\u4ee4\u53ef\u4ee5\u5728\u7ec8\u7aef\u4e2d\u8f93\u51fa/\u663e\u793a\u6587\u4ef6\u7684\u5185\u5bb9</p> <p>Josh\u63d0\u5230\u8fd0\u884cjava\u7a0b\u5e8f\u7684\u4e24\u6b65\u6b65\u9aa4</p> <pre><code>flowchart LR\na(Hello.java) --&gt; b[Compiler&lt;br&gt;&lt;code&gt;javac&lt;/code&gt;] --&gt; c(Hello.class) --&gt; d[Interpreter&lt;br&gt;&lt;code&gt;java&lt;/code&gt;] --&gt; e([stuff&lt;br&gt;happens])</code></pre> <p>\u4f46Josh\u4e5f\u63d0\u5230\u8fd9\u4e0d\u662f\u552f\u4e00(\u8fd0\u884cjava\u7a0b\u5e8f)\u7684\u65b9\u6cd5</p>"},{"location":"Notes%20of%20Courses/CS61B/CS61B/#2_1","title":"2","text":"<p>Josh\u6f14\u793a\u4e86\u8c03\u7528\u5176\u4ed6java\u6587\u4ef6\u4e2d\u7684\u51fd\u6570</p> DogLauncher.javaDog.java <pre><code>public class DogLauncher {\n    public static void main(String[] args) {\n        Dog.makeNoise();\n    }\n}\n</code></pre> <pre><code>public class Dog {\n    public static void makeNoise() {\n        System.out.println(\"Bark!\");\n    }\n}\n</code></pre> <p>\u7136\u540e\u53d1\u73b0\uff0c\u540c\u4e00\u76ee\u5f55\u4e0b\u7684java\u6587\u4ef6\u4e4b\u95f4\u53ef\u4ee5(\u50cfJosh\u6f14\u793a\u7684\u4e00\u6837)\u76f4\u63a5\u76f8\u4e92\u8c03\u7528\u51fd\u6570(\u800c\u4e0d\u9700\u8981 <code>import</code> \uff0c\u4e0d\u540c\u76ee\u5f55\u4e0b\u4e0d\u80fd\u8fd9\u6837\u76f4\u63a5\u8c03\u7528)</p>"},{"location":"Notes%20of%20Courses/CS61B/CS61B/#3_1","title":"3","text":"<p>\u76f4\u63a5\u901a\u8fc7 <code>\u7c7b\u540d.\u65b9\u6cd5</code> \u7684\u65b9\u6cd5\u53ea\u80fd\u8c03\u7528 <code>static</code> \u5c5e\u6027\u7684\u51fd\u6570(\u611f\u89c9\u6709\u70b9\u7c7b\u4f3c\u4e8epython\u4e2d\u7684\u7c7b\u5c5e\u6027\u548c\u5b9e\u4f8b\u5c5e\u6027\u7684\u533a\u522b)\uff0c\u6ca1\u6709 <code>static</code> \u7684\u51fd\u6570\u53ea\u80fd\u901a\u8fc7\u5b9e\u4f8b\u53bb\u8c03\u7528</p> <pre><code>public class Dog {\n    public int weightInPounds;\n\n    public void makeNoise() {\n        if (weightInPounds &lt; 10) {\n            System.out.println(\"yip!\");\n        } else if (weightInPounds &lt; 30) {\n            System.out.println(\"bark.\");\n        } else {\n            System.out.println(\"woooof!\");\n        }\n    }\n}\n</code></pre> <p>\u5982\u679c\u76f4\u63a5\u4f7f\u7528\u7c7b\u540d\u53bb\u8c03\u7528\uff0c</p> <pre><code>public class DogLauncher {\n    public static void main(String[] args) {\n        Dog.makeNoise();\n    }\n}\n</code></pre> <p>\u4f1a\u6709\u5982\u4e0b\u62a5\u9519</p> <pre><code>DogLauncher.java:3 error: non-static method makeNoise() cannot be referenced from a static context:\n        Dog.makeNoise();\n1 error\n</code></pre> <p>\u5982\u679c\u4fee\u6539\u6210</p> <pre><code>public class DogLauncher {\n    public static void main(String[] args) {\n        Dog d = new Dog();\n        d.weightInPounds = 20;\n        d.makeNoise();\n    }\n}\n</code></pre> <p>\u5c31\u80fd\u6b63\u5e38\u7f16\u8bd1</p>"},{"location":"Notes%20of%20Courses/CS61B/CS61B/#4_1","title":"4","text":"<p>\u5b9a\u4e49\u4e00\u4e2a\u7c7b\u7684\u5927\u6982\u4ee3\u7801\u7ed3\u6784</p> <p></p>"},{"location":"Notes%20of%20Courses/CS61B/CS61B/#5","title":"5","text":"<p>\u5728\u4f7f\u7528\u81ea\u5b9a\u4e49\u7684\u7c7b\u6765\u521b\u5efa\u6570\u7ec4\u65f6\uff0c\u6570\u7ec4\u5728\u521b\u5efa\u65f6\u5e76\u4e0d\u4f1a\u521b\u5efa\u7c7b\u7684\u5bf9\u8c61\uff0c\u5373</p> <pre><code>Dog[] dogs = new Dog[2];\n</code></pre> <p>\u53ea\u4f1a\u521b\u5efa\u4e00\u4e2a\u6570\u7ec4\uff0c\u5e76\u4e0d\u4f1a\u521b\u5efa\u4e24\u4e2aDog\u5b9e\u4f8b</p>"},{"location":"Notes%20of%20Courses/CS61B/CS61B/#6","title":"6","text":"<p><code>static</code> \u7684\u51fd\u6570\u4e0d\u80fd\u8c03\u7528\u5b9e\u4f8b\u7684\u53d8\u91cf</p>"},{"location":"Notes%20of%20Courses/CS61B/CS61B/#7","title":"7","text":"<p>\u5728\u4e0d\u662f <code>static</code> \u7684\u51fd\u6570\u4e2d\uff0c\u53ef\u4ee5\u4f7f\u7528 <code>this</code> \u6765\u83b7\u5f97\u81ea\u8eab\u8fd9\u4e2a\u5b9e\u4f8b(\u4e0ec\u4e2d\u7684 <code>this</code> \u7565\u6709\u4e0d\u540c\uff0cc\u4e2d <code>this</code> \u662f\u6307\u9488\uff0cjava\u4e2d <code>this</code> \u4e0d\u662f\u6307\u9488)</p>"},{"location":"Notes%20of%20Courses/CS61B/CS61B/#8","title":"8","text":"<p>Josh\u5efa\u8bae\uff0c\u5bf9\u4e8e\u7c7b\u4e2d\u7684 <code>static</code> \u7684\u5c5e\u6027\uff0c\u4f7f\u7528\u7c7b\u540d\u53bb\u83b7\u53d6\u8fd9\u4e2a\u5c5e\u6027\uff0c\u800c\u4e0d\u8981\u4f7f\u7528\u5b9e\u4f8b\u53bb\u83b7\u53d6\u8fd9\u4e2a\u5c5e\u6027</p>"},{"location":"Notes%20of%20Courses/CS61B/CS61B/#9","title":"9","text":"<p><code>static</code> \u7684\u51fd\u6570\u4e2d\u5982\u679c\u60f3\u8981\u8bbf\u95ee \u975e <code>static</code> \u7684\u5c5e\u6027(\u5373\u5b9e\u4f8b\u5c5e\u6027)\uff0c\u9700\u8981\u4f20\u5165\u5b9e\u4f8b\u5e76\u901a\u8fc7\u5b9e\u4f8b\u6765\u8bbf\u95ee</p>"},{"location":"Notes%20of%20Courses/CS61B/CS61B/#10","title":"10","text":"<p>Josh\u5728\u8bfe\u4e0a\u63d0\u5230\u4e86\u4e00\u4e2a\u7f51\u7ad9\uff0c\u548ccs61a\u4e2d\u7684python tutor\u7c7b\u4f3c\u7684\u7f51\u7ad9\uff0c\u4f46\u662f\u662fjava\u8bed\u8a00</p> <p>Java Visualizer (uwaterloo.ca)</p>"},{"location":"Notes%20of%20Courses/CS61B/CS61B/#11","title":"11","text":"<p>Josh\u63d0\u5230\uff0c\u4f7f\u7528helper\u51fd\u6570\u6765\u628a\u5927\u95ee\u9898\u5206\u89e3\u6210\u5c0f\u95ee\u9898\uff0c</p> <p>\u5e76\u4e14\u8fd9\u6837\u505a\u6709\u51e0\u70b9\u597d\u5904</p> <ul> <li>more narratively clear</li> <li>easier to get right when you write it</li> <li>easier to debug</li> </ul> <p>\u7136\u540eJosh\u901a\u8fc7\u4e00\u4e2a\u5177\u4f53\u4f8b\u5b50\u6f14\u793a\uff0c</p> <p></p> <p>Josh\u5c55\u793a\u5982\u679c\u4ee3\u7801\u5199\u5728\u4e00\u4e2a\u51fd\u6570\u4e2d\uff0c\u5927\u6982\u662f\u8fd9\u6837</p> <pre><code>public static Dog[] largerThanFourNeighbors(Dog[] dogs) {\n    for (int i = 0; i &lt; dogs.length; i += 1) {\n        boolean largest = true;\n\n        for (int j = -2; j &lt;= 2; j += 1) {\n            if (i + j &lt; 0) {\n                continue;\n            }\n            if (i + j &gt;= dogs.length) {\n                break;\n            }\n            if (j == 0) {\n                continue;\n            }\n\n            Dog neighbor = dogs[i + j];\n            if (neighbor.weightInPounds &gt; dogs[i].weightInPounds) {\n                largest = false;\n            }\n        }\n        ...\n    }\n}\n</code></pre> <p>\u800c\u5206\u6210\u4e0d\u540c\u7684\u51fd\u6570\u53bb\u7f16\u5199\uff0c\u5c31\u4f1a\u770b\u8d77\u6765\u7ed3\u6784\u66f4\u52a0\u6e05\u6670\uff0cdebug\u4e5f\u4f1a\u66f4\u65b9\u4fbf</p> <pre><code>public static Dog[] largerThanFourNeighbors(Dog[] dogs) {\n    Dog[] returnDogs = new Dog[dogs.length];\n    int cnt = 0;\n\n    for (int i = 0; i &lt; dogs.length; i += 1) {\n        if (isBiggestOfFour(dogs, i)) {\n            returnDogs[cnt] = dogs[i];\n            cnt = cnt + 1;\n        }\n    }\n\n    returnDogs = arrayWithNoNulls(returnDogs, cnt);\n    return returnDogs;\n}\n\n/** cnt is the number of non-null items */\npublic static Dog[] arrayWithNoNulls(Dog[] dogs, int cnt) {\n    Dog[] noNullDogs = new Dog[cnt];\n    for (int i = 0; i &lt; cnt; i += 1) {\n        noNullDogs[i] = dogs[i];\n    }\n    return noNullDogs;\n}\n\n/** Return true if dogs[i] is larger than its four neighbors */\npublic static boolean isBiggestOfFour(Dog[] dogs, int i) {\n    boolean isBiggest = true;\n    for (int j = -2; j &lt;= 2; j += 1) {\n        int compareIndex = i + j;\n\n        /* avoid comparing ourself to ourself */\n        if (j == 0) {\n            continue;\n        }\n\n        if (validIndex(dogs, i + j)) {\n            if (dogs[compareIndex].weightInPounds &gt; dogs[i].weightInPounds) {\n                isBiggest = false;\n            }\n        }\n    }\n    return isBiggest;\n}\n\npublic static boolean validIndex(Dog[] dogs, int i) {\n    if (i &lt; 0) {\n        return false;\n    }\n    if (i &gt;= dogs.length) {\n        return false;\n    }\n    return true;\n}\n</code></pre> <pre><code>public static void main(String[] args) {\n    Dog[] dogs = new Dog[] {\n        new Dog(10),\n        new Dog(15),\n        new Dog(20),\n        new Dog(15),\n        new Dog(10),\n        new Dog(5),\n        new Dog(10),\n        new Dog(15),\n        new Dog(22),\n        new Dog(15),\n        new Dog(20),\n    };\n    Dog[] bigDogs = largerThanFourNeighbors(dogs);\n\n    for (int k = 0; k &lt; bigDogs.length; k += 1) {\n        System.out.print(bigDogs[k].weightInPounds + \" \");\n    }\n    System.out.println();\n}\n</code></pre>"},{"location":"Notes%20of%20Courses/CS61B/CS61B/#lecture-2-qa","title":"Lecture 2 Q&amp;A","text":""},{"location":"Notes%20of%20Courses/CS61B/CS61B/#1_3","title":"1","text":"<p>Josh\u5728\u6f14\u793a\u65f6\uff0c\u53d1\u73b0\u4ed6\u7684IDEA\u4e2d\u88c5\u6709Java Visualizer\u7684\u63d2\u4ef6\uff0c\u80fd\u76f4\u63a5\u5728IDEA\u4e2d\u5728\u8c03\u8bd5\u65f6\u770b\u5230\u53ef\u89c6\u5316\u7684\u73af\u5883\u56fe environment diagram\uff0c</p> <p>\u611f\u89c9\u633a\u6709\u7528\uff0c\u4e8e\u662f\u4e5f\u5b89\u88c5\u4e86\u8fd9\u4e2a\u63d2\u4ef6</p> <p>Josh\u8c03\u8bd5\u65f6\u8fd8\u7528\u4e86\u4e00\u4e0bstep over \u6b65\u8fc7\u7684\u64cd\u4f5c\uff0c\u4e4b\u524d\u4e0d\u592a\u6e05\u695a \u6b65\u8fc7 step over \u3001 \u6b65\u5165 step into \u3001 \u6b65\u51fa step out \u7684\u5177\u4f53\u542b\u4e49\uff0c\u4e8e\u662f\u5c31\u53bb\u67e5\u4e86\u4e00\u4e0b\uff0c</p> <p>\u3010pycharm\u8c03\u8bd5\u3011Pycharm \u65ad\u70b9\u8df3\u8f6c\u53ca Step Over/Step Into/Step Out \u7b49\u7684\u4f7f\u7528_pycharm\u4e2d\u7684step over\u548c-CSDN\u535a\u5ba2</p> <p>\u4ece\u8fd9\u7bc7\u6587\u7ae0\u4e0a\u4e86\u89e3\u5230\uff0c</p> <ul> <li> <p>\u6b65\u8fc7 step over \u662f\u5982\u679c\u8fd9\u4e00\u884c\u6709\u8c03\u7528\u5176\u4ed6\u51fd\u6570\uff0c\u90a3\u4e48\u4f1a\u6267\u884c\u5b8c\u8c03\u7528\u7684\u51fd\u6570\uff0c\u7136\u540e\u8d70\u5230\u4e0b\u4e00\u884c\u4ee3\u7801</p> </li> <li> <p>\u6b65\u5165 step into \u662f\u5982\u679c\u8fd9\u4e00\u884c\u6709\u8c03\u7528\u5176\u4ed6\u51fd\u6570\uff0c\u90a3\u4e48\u5c31\u4f1a\u8d70\u5230\u88ab\u8c03\u7528\u51fd\u6570\u7684\u7b2c\u4e00\u884c\u4ee3\u7801</p> <p>\u5982\u679c\u8fd9\u4e00\u884c\u6ca1\u6709\u8c03\u7528\u5176\u4ed6\u51fd\u6570\uff0c\u90a3\u4e48\u6b65\u8fc7step over\u548c\u6b65\u5165 step into\u6548\u679c\u5c31\u662f\u4e00\u6837\u7684(\u90fd\u662f\u8d70\u5230\u4e0b\u4e00\u884c\u4ee3\u7801)</p> </li> <li> <p>\u6b65\u51fa step out \u662f\u7ed3\u5408\u6b65\u5165 step into\u6765\u4f7f\u7528\u7684\uff0c\u6b65\u51fa step out\u4f1a\u6267\u884c\u5b8c\u5f53\u524d\u6574\u4e2a\u51fd\u6570\uff0c\u7136\u540e\u56de\u5230\u524d\u4e00\u4e2a\u51fd\u6570\u8c03\u7528\u8fd9\u4e2a\u51fd\u6570\u7684\u4f4d\u7f6e</p> </li> </ul>"},{"location":"Notes%20of%20Courses/CS61B/CS61B/#project-0","title":"Project 0","text":""},{"location":"Notes%20of%20Courses/CS61B/CS61B/#1_4","title":"1","text":"<p>\u7531\u4e8e\u5728\u8bfe\u7a0b\u7f51\u7ad9\u4e0a\u6ca1\u6709\u627e\u5230\u80fd\u4e0b\u8f7d\u63d0\u4f9b\u7684\u521d\u59cb\u4ee3\u7801\u7684\u5730\u65b9(\u8bfe\u7a0b\u7f51\u7ad9\u4e0a\u63d0\u4f9b\u7684\u65b9\u6cd5\u662f\u8bfe\u7a0b\u7684\u5b66\u751f\u4ecegithub\u4e0a <code>git pull</code> \u81ea\u5df1\u5bf9\u5e94\u5b66\u53f7\u7684\u4ed3\u5e93)\uff0c</p> <p>\u4e8e\u662f\u5728github\u4e0a\u641c\u7d22 <code>cs61b sp21</code> \u6765\u641c\u7d22\u522b\u4eba\u5b8c\u6210\u7684\u4f5c\u4e1a\u4ed3\u5e93\uff0c\u770b\u770b\u80fd\u4e0d\u80fd\u627e\u5230\u539f\u59cb\u7684\u4ee3\u7801\uff0c</p> <p>\u7136\u540e\u70b9\u51fb\u6700\u67e5\u770b\u591astar\u7684\u4ed3\u5e93</p> <p>exuanbo/cs61b-sp21: CS 61B, Spring 2021 (github.com)</p> <p>\u53d1\u73b0\u5728 <code>README.md</code> \u4e2d\u6709\u5199\u7740cs61b sp21\u7684\u5b98\u65b9\u539f\u59cb\u4ee3\u7801\u4ed3\u5e93</p> <p>Berkeley-CS61B/skeleton-sp21: starter code for spring 21 (github.com)</p> <p>\u4e8e\u662f\u5c31\u987a\u4fbf\u53d1\u73b0\u4e86cs61b\u7684\u5b98\u65b9github\u8d26\u53f7</p> <p>Public Access Resources</p> <p>Previous course staff have made some iterations of this course available for auditors -- both Berkeley students and members of the public. While the assignment skeletons and specifications will be available for most years, some assignments have autograders that are not public. The most recent version with a public autograder is Spring 2021.</p> <p>Here's lints to the relevant materials:</p> <ul> <li>SP21 Course Website</li> <li>Skeleton code</li> <li>Java Libraries</li> <li>Lecture Code</li> </ul> <p>Tooling</p> <p>61B uses some tools to run its course. These are the open-source ones that we maintain for ourselves and actively use.</p> <ul> <li>IntelliJ Plugin - A style checker</li> <li>Java Visualizer - An IntelliJ plugin to visualize the data layout in Java applications. Externally maintained.</li> <li>jh61b - A JUnit executor to output test results in Gradescope's format</li> <li>BSAG - A Better SimpleAutograder for custom Gradescope logic<ul> <li>bsag-jh61b - BSAG steps for jh61b components</li> </ul> </li> </ul>"},{"location":"Notes%20of%20Courses/CS61B/CS61B/#2_2","title":"2","text":"<p>\u8bf4\u660e\u4e2d\u63d0\u5230\uff0c\u6846\u67b6\u4ee3\u7801\u4f7f\u7528\u4e86\u4e00\u79cd\u53eb\u505a \u6a21\u578b-\u89c6\u56fe-\u63a7\u5236\u5668\u6a21\u5f0f Model-View-Controller Pattern (MVC) \u7684\u6a21\u5f0f</p> <p>The MVC pattern divides our problem into three parts:</p> <ul> <li>The model represents the subject matter being represented and acted upon \u2013 in this case incorporating the state of a board game and the rules by which it may be modified. Our model resides in the <code>Model</code> , <code>Side</code> , <code>Board</code> , and <code>Tile</code> classes. The instance variables of <code>Model</code> fully determine what the state of the game is. Note: You\u2019ll only be modifying the <code>Model</code> class.</li> <li>A view of the model, which displays the game state to the user. Our view resides in the <code>GUI</code> and <code>BoardWidget</code> classes.</li> <li>A controller for the game, which translates user actions into operations on the model. Our controller resides mainly in the <code>Game</code> class, although it also uses the GUI class to read keystrokes.</li> </ul>"},{"location":"Notes%20of%20Courses/CS61B/CS61B/#3_2","title":"3","text":"<p>java\u4e2d\u5224\u65ad\u662f\u5426\u4e3a <code>null</code> \u53ef\u4ee5\u4f7f\u7528 <code>==</code></p>"},{"location":"Notes%20of%20Courses/CS61B/CS61B/#4_2","title":"4","text":"<p>\u5728\u5c1d\u8bd5\u5b8c\u6210 <code>tilt</code> \u51fd\u6570\u7684\u8fc7\u7a0b\u4e2d\uff0c\u4e00\u5171\u8fdb\u884c\u4e863\u6b21\u5c1d\u8bd5\uff0c</p> <p>\u524d\u4e24\u6b21\u5c1d\u8bd5\u5927\u81f4\u601d\u8def\u90fd\u662f\uff0c\u6bcf\u4e00\u5217\u53ea\u904d\u5386\u4e00\u6b21\uff0c\u7136\u540e\u6807\u8bb0\u7a7a\u7684\u4f4d\u7f6e\u548c\u4e0a\u4e00\u4e2a\u74f7\u7816 tile(\u7b2c2\u6b21\u5c1d\u8bd5\u4e0e\u7b2c1\u6b21\u7684\u533a\u522b\u5728\u4e8e\uff0c\u5c06\u5904\u7406\u6bcf\u4e00\u5217\u5199\u6210\u4e86\u4e00\u4e2a\u51fd\u6570)\uff0c</p> <p>\u4f46\u662f\u4e24\u6b21\u90fd\u662f\u53ea\u80fd\u901a\u8fc7 <code>TestUpOnly</code> \u800c\u4e0d\u80fd\u901a\u8fc7 <code>TestModel</code> \u3002</p> <p>\u7b2c3\u6b21\u5c1d\u8bd5\u6253\u7b97\u653e\u5f03\u8fd9\u4e2a\u601d\u8def\uff0c\u800c\u662f\u5c06\u6bcf\u4e00\u5c0f\u6b65\u90fd\u5199\u6210\u4e00\u4e2a\u51fd\u6570\uff0c\u5e76\u4e14\u7531\u4e8e\u7559\u610f\u5230\u9898\u76ee\u8bf4\u660e\u4e2d\u63d0\u5230 <code>board.move</code> \u65b9\u6cd5\u5982\u679c\u5408\u5e76\u4e86\u74f7\u7816\u4f1a\u8fd4\u56de <code>true</code> \u4e8e\u662f\u6253\u7b97\u5229\u7528\u8fd9\u4e00\u70b9\uff0c\u6700\u540e\u5199\u5b8c\u5e76debug\u5b8c\u540e\uff0c\u6ca1\u60f3\u5230\u4e0d\u4ec5\u901a\u8fc7\u4e86 <code>TestUpOnly</code> \u4e5f\u901a\u8fc7\u4e86 <code>TestModel</code> (\ud83d\ude2e\u5f88\u9707\u60ca\uff0c\u4e0d\u77e5\u9053\u4e3a\u4ec0\u4e48)</p> code <pre><code>public boolean tilt(Side side) {\n    ...\n\n    board.setViewingPerspective(side);\n    for (int i = 0; i &lt; board.size(); i++) {\n        if (processCol(i)) {\n            changed = true;\n        }\n    }\n    board.setViewingPerspective(Side.NORTH);\n\n    ...\n}\n\npublic boolean processCol(int col) {\n    boolean changed = false;\n    int size = board.size();\n\n    boolean[] isMerged = new boolean[size];\n    for (int i = 0; i &lt; size; i++) {\n        int row = size - i - 1;\n        isMerged[row] = false;\n\n        if (needMove(col, row)) {\n            int target = findTarget(col, row, isMerged);\n            boolean doMerge = board.move(col, target, board.tile(col, row));\n\n            if (doMerge) {\n                isMerged[target] = true;\n                score += board.tile(col, target).value();\n            }\n\n            changed = true;\n        }\n    }\n    return changed;\n}\n\npublic boolean needMove(int col, int row) {\n    Tile tile = board.tile(col, row);\n    if (tile == null) {\n        return false;\n    } else if (row == board.size() - 1) {\n        return false;\n    } else {\n        Tile upTile = board.tile(col, row + 1);\n        return upTile == null || upTile.value() == tile.value();\n    }\n}\n\npublic int findTarget(int col, int row, boolean[] isMerge) {\n    int target = findEmptyTarget(col, row);\n\n    if (target + 1 &lt; board.size() &amp;&amp; !isMerge[target + 1]\n            &amp;&amp; board.tile(col, row).value() == board.tile(col, target + 1).value()) {\n        target += 1;\n    }\n    return target;\n}\n\npublic int findEmptyTarget(int col, int row) {\n    int target = row;\n    for (int i = row + 1; i &lt; board.size(); i++) {\n        if (board.tile(col, i) != null) {\n            break;\n        }\n        target = i;\n    }\n    return target;\n}\n</code></pre>"},{"location":"Notes%20of%20Courses/CS61B/CS61B/#5_1","title":"5","text":"<p>\u4e0d\u77e5\u9053\u662f\u4ec0\u4e48\u539f\u56e0\uff0c\u5728\u6211\u7684\u7535\u8111\u4e0a\u8fd0\u884c\u540e\u6309\u65b9\u5411\u952e\u6ca1\u6709\u53cd\u5e94\uff0c</p> <p>\u4e8e\u662f\u542f\u52a8\u8c03\u5f0f\u6a21\u5f0f\u67e5\u770b\u95ee\u9898\uff0c\u53d1\u73b0\u5728 <code>Game.java:37</code> \u4e2d</p> <pre><code>String cmnd = _source.getKey();\n</code></pre> <p>\u6309\u538b\u5de6\u952e\u540e\u7684 <code>cmnd</code> \u662f <code>\"\u5411\u5de6\u7bad\u5934\"</code> \uff0c\u4e8e\u662f\u7ee7\u7eed\u8ffd\u8e2a\u51fd\u6570\uff0c\u53d1\u73b0\u6e90\u5934\u5728 <code>GUISource.java:36</code> \u5904\uff0c</p> <p></p> <p>\u6240\u4ee5\u5c31\u5728 <code>switch</code> \u4e2d\u65b0\u52a0\u4e86\u51e0\u4e2a <code>case</code></p> <pre><code>switch (command) {\n    ...\n    case \"\u5411\u4e0a\u7bad\u5934\" :\n        command = \"Up\";\n        break;\n    case \"\u5411\u53f3\u7bad\u5934\" :\n        command = \"Right\";\n        break;\n    case \"\u5411\u4e0b\u7bad\u5934\" :\n        command = \"Down\";\n        break;\n    case \"\u5411\u5de6\u7bad\u5934\" :\n        command = \"Left\";\n        break;\n    default :\n        break;\n}\n</code></pre> <p>\u7136\u540e\u5c31\u80fd\u6b63\u5e38\u8fd0\u884c\u5e76\u73a9\u6e38\u620f\u4e86\ud83d\ude04</p>"},{"location":"Notes%20of%20Courses/CS61B/CS61B/#lecture-3-testing","title":"Lecture 3 Testing","text":""},{"location":"Notes%20of%20Courses/CS61B/CS61B/#1_5","title":"1","text":"<p>java\u4e2d\u5224\u65ad\u4e24\u4e2a\u6570\u7ec4\u4e2d\u7684\u5143\u7d20\u662f\u5426\u76f8\u7b49\uff0c\u53ef\u4ee5\u4f7f\u7528</p> <pre><code>java.util.Arrays.equals(a, b);\n</code></pre> <p>java\u4e2d\u6709\u7528\u4e8e\u6d4b\u8bd5\u7684\u5de5\u5177junit\uff0c</p> <p>\u4f8b\u5982\u6d4b\u8bd5\u6570\u7ec4\u662f\u5426\u548c\u9884\u671f\u503c\u4e00\u6837\uff0c\u5e76\u4e14\u5982\u679c\u4e0d\u4e00\u6837\u53ef\u4ee5\u663e\u793a\u51fa\u9519\u7684\u5143\u7d20</p> <pre><code>String[] input = {\"i\", \"have\", \"an\", \"egg\"};\nString[] expected = {\"an\", \"egg\", \"have\", \"i\"};\n\norg.junit.Assert.assertArrayEquals(expected, input);\n</code></pre>"},{"location":"Notes%20of%20Courses/CS61B/CS61B/#2_3","title":"2","text":"<p>java\u4e2d\u5b57\u7b26\u4e32\u4e0d\u80fd\u76f4\u63a5\u6bd4\u8f83\u5927\u5c0f\uff0c\u53ef\u4ee5\u4f7f\u7528 <code>str1.compareTo(str2)</code> \u7684\u65b9\u6cd5(\u4f7f\u7528\u5b57\u7b26\u4e32\u7684 <code>compareTo</code> \u65b9\u6cd5)\u6bd4\u8f83\uff0c</p> <ul> <li>\u5982\u679c\u5c0f\u4e8e\u4f20\u5165\u7684\u5b57\u7b26\u4e32\uff0c\u4f1a\u8fd4\u56de <code>-1</code></li> <li>\u76f8\u7b49\u8fd4\u56de <code>0</code></li> <li>\u5927\u4e8e\u8fd4\u56de <code>1</code></li> </ul>"},{"location":"Notes%20of%20Courses/CS61B/CS61B/#3_3","title":"3","text":"<p>\u5728Josh\u7684\u6f14\u793a\u4e2d\u53d1\u73b0\uff0cidea(\u53ef\u80fd\u5176\u4ed6jetbrains\u7684ide\u4e5f\u5dee\u4e0d\u591a)\u4e2d\u7684\u65ad\u70b9\u53f3\u952e\u53ef\u4ee5\u6dfb\u52a0\u6761\u4ef6</p>"},{"location":"Notes%20of%20Courses/CS61B/CS61B/#4_3","title":"4","text":"<p>\u7f16\u5199\u7684\u6d4b\u8bd5\u7684\u51fd\u6570\uff0c\u53ef\u4ee5\u5728non-static\u51fd\u6570\u58f0\u660e\u4e0a\u6dfb\u52a0\u88c5\u9970\u7b26 <code>@org.junit.Test</code> \uff0c\u7136\u540e\u5c31\u53ef\u4ee5\u4e0d\u7528\u5728 <code>main</code> \u4e2d\u8c03\u7528\u8fd9\u4e2a\u51fd\u6570\uff0c\u53ef\u4ee5\u76f4\u63a5\u8fd0\u884c\u6587\u4ef6\u5c31\u53ef\u4ee5\u8fdb\u884c\u6d4b\u8bd5\uff0c\u4f8b\u5982</p> <pre><code>@org.junit.Test\npublic void testSort() {\n    String[] input = {\"i\", \"have\", \"an\", \"egg\"};\n    String[] expected  = {\"an\", \"egg\", \"have\", \"i\"};\n\n    Sort.sort(input);\n\n    org.junit.Assert.assertArrayEquals(expected, input);\n}\n</code></pre> <p>\u4e3a\u4e86\u65b9\u4fbf\uff0c\u8fd8\u53ef\u4ee5</p> <pre><code>import org.junit.Test;\n</code></pre> <p>\u7136\u540e\u5c31\u53ef\u4ee5\u76f4\u63a5 <code>@Test</code> \u65e2\u53ef\u4ee5\u4e86</p> <p>\u4e3a\u4e86\u65b9\u4fbf\uff0c\u8fd8\u53ef\u4ee5\u5bfc\u5165 <code>Assert</code></p> <pre><code>import org.junit.Assert.*;\n</code></pre>"},{"location":"Notes%20of%20Courses/CS61B/CS61B/#5_2","title":"5","text":"<p>Josh\u63d0\u5230\u4e86\u4e00\u4e2a\u6982\u5ff5\uff0c\u6d4b\u8bd5\u9a71\u52a8\u5f00\u53d1 Test-Driven Development (TDD)\uff0c</p> <p></p> <p>\u5927\u6982\u610f\u601d\u662f\uff0c\u5982\u679c\u8981\u5b9e\u73b0\u4e00\u4e2a\u529f\u80fd\uff0c\u5148\u786e\u5b9a\u7279\u5f81\uff0c\u518d\u6839\u636e\u8fd9\u4e2a\u7279\u5f81\u7f16\u5199\u6d4b\u8bd5\u4f8b\u5b50\uff0c\u4e00\u5f00\u59cb\u8fd0\u884c\u65e0\u6cd5\u901a\u8fc7\u6d4b\u8bd5\uff0c\u6240\u4ee5\u7f16\u5199\u4ee3\u7801\u4ee5\u901a\u8fc7\u6d4b\u8bd5\uff0c\u7136\u540e\u518d\u6539\u8fdb\u4ee3\u7801\uff0c\u5faa\u73af\u5f80\u590d</p>"},{"location":"Notes%20of%20Courses/CS61B/CS61B/#lecture-3-qa","title":"Lecture 3 Q&amp;A","text":""},{"location":"Notes%20of%20Courses/CS61B/CS61B/#1_6","title":"1","text":"<p>\u6709\u4eba\u63d0\u95eepython\u4e2d\u7684 <code>is</code> \u548c <code>==</code> \u5206\u522b\u5bf9\u5e94java\u4e2d\u7684\u4ec0\u4e48\uff0c</p> <p>Josh\u8bf4\uff0cjava\u4e2d <code>==</code> \u7c7b\u4f3c\u4e8epython\u4e2d\u7684 <code>is</code> (\u4f1a\u68c0\u67e5\u5bf9\u8c61\u7684\u5730\u5740)\uff0c\u800cjava\u4e2d\u7c7b\u7684 <code>.equals()</code> \u65b9\u6cd5\u7c7b\u4f3c\u4e8epython\u4e2d\u7684 <code>==</code> (python\u4e2d\u81ea\u5b9a\u4e49\u7c7b\u9700\u8981\u5b9e\u73b0 <code>__eq__</code> \u65b9\u6cd5)</p> <p>\u5728java\u4e2d\uff0c\u5982\u679c\u6ca1\u6709\u91cd\u5199 <code>equals</code> \u65b9\u6cd5\uff0c\u90a3\u4e48\u9ed8\u8ba4\u7684 <code>equals</code> \u65b9\u6cd5\u662f\u68c0\u67e5\u5730\u5740</p>"},{"location":"Notes%20of%20Courses/CS61B/CS61B/#2_4","title":"2","text":"<p>\u6709\u4eba\u63d0\u95ee\uff0cJosh\u6f14\u793a</p> <pre><code>System.out.println(5 + 6 + \"hi\" + 5 + 6);\n</code></pre> <p>\u6700\u540e\u663e\u793a\u51fa\u6765\u662f <code>11hi56</code> \uff0c</p> <p>\u4e8e\u662f\u53d1\u73b0java\u662f\u4ece\u5de6\u5f80\u53f3\u8fdb\u884c\u8fd0\u7b97\uff0c\u4e00\u5f00\u59cb <code>5 + 6</code> \u5f97\u5230 <code>11</code> \uff0c\u7136\u540e <code>+ \"hi\"</code> \u5f97\u5230 <code>\"11hi\"</code> \uff0c\u56e0\u6b64\u6700\u540e\u5c31\u4f1a\u5f97\u5230 <code>\"11hi56\"</code></p>"},{"location":"Notes%20of%20Courses/CS61B/CS61B/#lecture-4-references-recursion-and-lists","title":"Lecture 4 References, Recursion, and Lists","text":""},{"location":"Notes%20of%20Courses/CS61B/CS61B/#1_7","title":"1","text":"<p>\u5982\u679c\u81ea\u5b9a\u4e49\u5bf9\u8c61\u5b9e\u4f8b\u8d4b\u503c\u7ed9\u4e00\u4e2a\u65b0\u7684\u53d8\u91cf\uff0c\u5e76\u4f7f\u7528\u65b0\u7684\u53d8\u91cf\u6765\u4fee\u6539\u5c5e\u6027\uff0c\u90a3\u4e48\u4fee\u6539\u7684\u662f\u539f\u5b9e\u4f8b\u672c\u8eab\u7684\u5c5e\u6027\uff0c\u4f8b\u5982</p> <pre><code>Walrus a = new Walrus(1000, 8.3);\nWalrus b;\nb = a;\nb.weight = 5;\nSystem.out.println(a);\nSystem.out.println(b);\n</code></pre> <pre><code>weight: 5, tusk size: 8.30\nweight: 5, tusk size: 8.30\n</code></pre>"},{"location":"Notes%20of%20Courses/CS61B/CS61B/#lecture-4-qa","title":"Lecture 4 Q&amp;A","text":""},{"location":"Notes%20of%20Courses/CS61B/CS61B/#1_8","title":"1","text":"<p>java\u4e2d\u7684String\u5b57\u7b26\u4e32(\u521b\u5efa\u540e)\u4e0d\u80fd\u88ab\u4fee\u6539</p>"},{"location":"Notes%20of%20Courses/CS61B/CS61B/#2_5","title":"2","text":"<p>java\u4e2d\u53ef\u4ee5\u4f7f\u7528\u4e09\u76ee\u8fd0\u7b97\u7b26(\u548cc\u4e2d\u4e00\u6837)</p>"},{"location":"Notes%20of%20Courses/CS61B/CS61B/#lab-2","title":"Lab 2","text":""},{"location":"Notes%20of%20Courses/CS61B/CS61B/#1_9","title":"1","text":"<p>\u5728Lab 2 Setup\u7684One-Time Setup\u4e2d\uff0c\u9700\u8981\u5728IDEA\u7684\u4e3b\u754c\u9762(\u6ca1\u6709\u6253\u5f00\u9879\u76ee\u7684\u754c\u9762)\u4e2d\u6253\u5f00\u8bbe\u7f6e\uff0c</p> <p>windows\u4e2d\u53ef\u4ee5\u4f7f\u7528 Ctrl+Alt+S \u6253\u5f00\u8bbe\u7f6e\u754c\u9762\uff0c\u4e5f\u53ef\u4ee5\u5728 <code>\u81ea\u5b9a\u4e49 &gt; \u6240\u6709\u8bbe\u7f6e...</code> \u4e2d\u6253\u5f00\u8bbe\u7f6e\u754c\u9762</p> <p>\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u5728\u65b0\u7248\u7684IDEA\u4e2d\uff0c\u8981\u628a\u300e\u4f7f\u7528 .mvn/maven.config \u4e2d\u7684\u8bbe\u7f6e\u300f\u8fd9\u4e2a\u9009\u9879==\u53bb\u6389\u52fe\u9009==(\u9ed8\u8ba4\u662f\u52fe\u9009\u4e0a\u7684)\uff0c\u5426\u5219\u300e\u672c\u5730\u4ed3\u5e93\u300f\u8bbe\u7f6e\u7684\u91cd\u5199\u7684\u66f4\u6539\u4e0d\u4f1a\u5e94\u7528\u5230\u6bcf\u4e2a\u65b0\u7684\u9879\u76ee\u4e0a</p> <p></p>"},{"location":"Notes%20of%20Courses/CS61B/CS61B/#2_6","title":"2","text":"<p>\u4e00\u5f00\u59cb\u6211\u4f7f\u7528\u7684jdk\u662f\u4e4b\u524d\u5b89\u88c5\u7684azul zulu\u7684jdk\uff0c\u4f46\u662flab 2 setup\u4e00\u76f4\u65e0\u6cd5\u914d\u7f6e\u597dmaven\uff0c</p> <p>\u4e8e\u662f\u5c31\u53bb\u88c5\u4e86oracel\u7684openjdk 17\uff0c\u6700\u540e\u5c31\u53ef\u4ee5\u8fd0\u884c\u4e86</p>"},{"location":"Notes%20of%20Courses/CS61B/CS61B/#3_4","title":"3","text":"<p>This is because JUnit tests are short-circuiting \u2013 as soon as one of the asserts in a method fails, it will output the failure and move on to the next test.</p> <p>\u5982\u679c\u6d4b\u8bd5\u7684\u51fd\u6570(\u6dfb\u52a0\u4e86 <code>@Test</code> \u7684\u51fd\u6570)\u4e2d\uff0c\u6709\u4e00\u4e2a <code>assert</code> \u9519\u4e86\uff0c\u90a3\u4e48\u5c31\u4f1a\u76f4\u63a5\u62a5\u9519\uff0c\u7136\u540e\u8fdb\u884c\u4e0b\u4e00\u4e2a\u8981\u6d4b\u8bd5\u7684\u51fd\u6570</p>"},{"location":"Notes%20of%20Courses/CS61B/CS61B/#4_4","title":"4","text":"<p>\u4ece <code>IntList.java</code> \u7684 <code>of</code> \u51fd\u6570\u4e2d\u53d1\u73b0\uff0cjava\u4e2d\u5728\u58f0\u660e\u51fd\u6570\u65f6\uff0c\u53ef\u4ee5\u4f7f\u7528 <code>...</code> \u6765\u4ee5\u6570\u7ec4\u7684\u5f62\u5f0f\u83b7\u53d6\u4f20\u5165\u7684\u591a\u4e2a\u53c2\u6570(\u7c7b\u4f3c\u4e8epython\u4e2d\u7684 <code>*args</code> )\uff0c\u4f8b\u5982</p> <pre><code>public static int max(int ...argList) {\n    int result = 0;\n    for (int i = 0; i &lt; argList.length; i++) {\n        if (argList[i] &gt; result) {\n            result = argList[i];\n        }\n    }\n    return result;\n}\n</code></pre>"},{"location":"Notes%20of%20Courses/CS61B/CS61B/#5_3","title":"5","text":"<p>\u6700\u540e\u53d1\u73b0 <code>DebugExercise2.java</code> \u4e2d\u7684 <code>max</code> \u9700\u8981\u4fee\u6539(\u6539\u6210\u80fd\u6b63\u786e\u8fd4\u56de\u6700\u5927\u503c)\uff0c\u5426\u5219gradescope\u4e0a\u7684 <code>b001) DebugExercise: Hidden Test 1</code> \u8fd9\u4e2a\u6d4b\u8bd5\u5c31\u901a\u8fc7\u4e0d\u4e86</p>"},{"location":"Notes%20of%20Courses/CS61B/CS61B/#lecture-5-sllists-nested-classes-sentinel-nodes","title":"Lecture 5 SLLists, Nested Classes, Sentinel Nodes","text":""},{"location":"Notes%20of%20Courses/CS61B/CS61B/#1_10","title":"1","text":"<p>Josh\u8bf4\uff0c\u5982\u679c\u5d4c\u5957\u7684\u7c7b\uff0c\u91cc\u9762\u7684\u7c7b\u5982\u679c\u4e0d\u9700\u8981\u8bbf\u95ee\u5916\u9762\u7c7b\u7684\u5c5e\u6027\uff0c\u90a3\u4e48\u53ef\u4ee5\u52a0\u4e0a <code>static</code> \u5173\u952e\u5b57\uff0c\u597d\u5904\u662f\u53ef\u4ee5\u8282\u7701\u4e00\u4e9b\u7a7a\u95f4\uff0c\u4f8b\u5982</p> <pre><code>public class SLList {\n    private static class IntNode {\n        public int item;\n        public IntNode next;\n        public IntNode(int i, IntNode n) {\n            item = i;\n            next = n;\n        }\n        ...\n    }\n}\n</code></pre> <p>\u4e2a\u4eba\u7406\u89e3\u662f\uff0c\u5982\u679c\u662fnon-static\uff0c\u90a3\u4e48\u6bcf\u6b21\u5b9e\u4f8b\u5316\u5916\u9762\u7684\u7c7b\u65f6\uff0c\u90fd\u4f1a\u7ed9\u5b9e\u4f8b\u6dfb\u52a0\u8fd9\u4e2a\u5c5e\u6027\uff0c\u5982\u679c\u662fstatic\uff0c\u90a3\u4e48\u5c31\u4e0d\u4f1a\u8fd9\u6837</p>"},{"location":"Notes%20of%20Courses/CS61B/CS61B/#2_7","title":"2","text":"<p>Josh\u63d0\u5230\uff0cjava\u4ee3\u7801\u4e2d\u4e00\u4e2a <code>public</code> \u7684\u51fd\u6570\u914d\u4e00\u4e2a <code>private</code> \u7684\u540c\u540dhelper\u51fd\u6570\u5f88\u5e38\u89c1</p>"},{"location":"Notes%20of%20Courses/CS61B/CS61B/#3_5","title":"3","text":"<p>\u5982\u679c\u9700\u8981\u521b\u5efa\u7a7a\u94fe\u8868\uff0c\u53ef\u4ee5\u7ed9\u94fe\u8868\u6dfb\u52a0 \u54e8\u5175\u8282\u70b9 sentinel node (\u5373\u7a7a\u7684\u5934\u8282\u70b9)\uff0c\u5c31\u53ef\u4ee5\u5728\u5b9e\u73b0\u94fe\u8868\u7684\u5176\u4ed6\u529f\u80fd\u65f6\uff0c\u907f\u514d\u5904\u7406\u7a7a\u94fe\u8868\u7684\u7279\u6b8a\u60c5\u51b5</p>"},{"location":"Notes%20of%20Courses/CS61B/CS61B/#lecture-5-qa","title":"Lecture 5 Q&amp;A","text":""},{"location":"Notes%20of%20Courses/CS61B/CS61B/#1_11","title":"1","text":"<p>\u6709\u4eba\u63d0\u95ee\u5173\u4e8eJosh\u8bfe\u4e0a\u8bf4\u7684\uff0c\u5d4c\u5957\u5728\u5185\u90e8\u5b9a\u4e49\u7684\u7c7b\uff0c\u5982\u679c\u628a\u7c7b\u8bbe\u7f6e\u6210\u4e86 <code>private</code> \u7684\u5c5e\u6027\uff0c\u90a3\u4e48\u7c7b\u7684\u6210\u5458\u8bbe\u7f6e\u6210 <code>public</code> \u8fd8\u662f <code>private</code> \u90fd\u5dee\u522b\u4e0d\u5927\uff0c</p> <p>Josh\u56de\u7b54\uff0c\u56e0\u4e3a\u7c7b\u8bbe\u7f6e\u6210 <code>private</code> \u4e4b\u540e\uff0c\u91cc\u9762\u7684\u65b9\u6cd5\u548c\u5c5e\u6027(\u5728\u5916\u5c42\u7684\u7c7b\u4e4b\u5916)\u5c31\u90fd\u65e0\u6cd5\u8bbf\u95ee\u5230\u4e86(\u5e94\u8be5\u662f\u8fde\u6784\u9020\u65b9\u6cd5\u4e5f\u65e0\u6cd5\u8bbf\u95ee\u5230)\uff0c\u6240\u4ee5\u6210\u5458\u7684\u5c5e\u6027\u662f <code>public</code> \u8fd8\u662f <code>private</code> \u90fd\u4e00\u6837</p>"},{"location":"Notes%20of%20Courses/CS61B/CS61B/#lecture-6-dllists-arrays","title":"Lecture 6 DLLists, Arrays","text":""},{"location":"Notes%20of%20Courses/CS61B/CS61B/#1_12","title":"1","text":"<p>\u4ecb\u7ecd\u4e86\u53cc\u5411\u94fe\u8868 doubly linked list (DLList) (\u4e0e\u4e4b\u5bf9\u5e94\u7684\u662f\u5355\u5411\u94fe\u8868 singly linked list (SLList) )\uff0c\u4e3a\u4e86\u907f\u514d\u53cc\u5411\u94fe\u8868\u7684\u5934\u548c\u5c3e\u90fd\u6307\u5411\u540c\u4e00\u4e2a\u54e8\u5175\u8282\u70b9\u7684\u60c5\u51b5\uff0c</p> <p></p> <p>\u63d0\u5230\u4e86\u4e24\u79cd\u89e3\u51b3\u65b9\u6cd5\uff0c</p> <ul> <li> <p>\u8bbe\u7f6e\u4e24\u4e2a\u54e8\u5175\u8282\u70b9</p> <p></p> </li> <li> <p>\u6216\u8005\uff0c\u8bbe\u7f6e\u6210\u5faa\u73af\u7684\u53cc\u5411\u94fe\u8868</p> <p></p> </li> </ul>"},{"location":"Notes%20of%20Courses/CS61B/CS61B/#2_8","title":"2","text":"<p>\u5982\u679c\u60f3\u8981\u94fe\u8868\u7ed3\u6784\u50a8\u5b58\u4e0d\u540c\u7684\u6570\u636e\u7c7b\u578b(\u800c\u4e0d\u91cd\u590d\u5b9e\u73b0\u4ee3\u7801)\uff0c\u53ef\u4ee5\u5728\u5b9a\u4e49\u7c7b\u65f6\uff0c\u5728\u7c7b\u540d\u540e\u4f7f\u7528 <code>&lt;...&gt;</code> \u6dfb\u52a0\u81ea\u5b9a\u4e49\u540d\u79f0\uff0c\u4e4b\u540e\u5728\u58f0\u660e\u5bf9\u5e94\u53d8\u91cf\u7684\u6570\u636e\u7c7b\u578b\u65f6\uff0c\u90fd\u4f7f\u7528\u8fd9\u4e2a\u540d\u79f0\uff0c\u4f8b\u5982</p> <pre><code>public class SLList&lt;LochNess&gt; {\n    private class StuffNode {\n        public LochNess item;\n        public StuffNode next;\n\n        public StuffNode(LochNess i, StuffNode n) {\n            item = i;\n            next = n;\n        }\n    }\n\n    private StuffNode first;\n    private int size;\n\n    public SLList(LochNess x) {\n        first = new StuffNode(x, null);\n        size = 1;\n    }\n\n    ...\n}\n</code></pre> <p>\u4f7f\u7528\u8fd9\u4e2a\u7c7b\u65f6\uff0c\u5219\u9700\u8981\u5728 <code>&lt;&gt;</code> \u4e2d\u6dfb\u52a0\u6570\u636e\u7c7b\u578b</p> <pre><code>SLList&lt;String&gt; s1 = new SLList&lt;String&gt;(\"bone\");\n</code></pre> <p>\u4e5f\u53ef\u4ee5\u5c06\u6784\u9020\u51fd\u6570\u7684 <code>String</code> \u53bb\u9664</p> <pre><code>SLList&lt;String&gt; s1 = new SLList&lt;&gt;(\"bone\");\n</code></pre>"},{"location":"Notes%20of%20Courses/CS61B/CS61B/#3_6","title":"3","text":"<p>java\u4e2d\u521b\u5efa\u6570\u7ec4\u76843\u79cd\u65b9\u6cd5\uff0c</p> <pre><code>y = new int[3];\n</code></pre> <pre><code>x = new int[] {1, 2, 3, 4, 5};\n</code></pre> <pre><code>int[] w = {9, 10, 11, 12, 13};\n</code></pre> <p>\u4f46\u9700\u8981\u6ce8\u610f\u7b2c3\u79cd\u65b9\u6cd5\u4e0d\u80fd\u5bf9\u5df2\u7ecf\u58f0\u660e\u7684\u53d8\u91cf\u4f7f\u7528</p>"},{"location":"Notes%20of%20Courses/CS61B/CS61B/#4_5","title":"4","text":"<p><code>System.arraycopy</code> \u7684\u7528\u6cd5\uff0c</p> <p>Takes 5 parameters:</p> <ul> <li>Source array</li> <li>Start position in source</li> <li>Target array</li> <li>Start position in target</li> <li>Number to copy</li> </ul> <p>\u4ee5 <code>System.arraycopy(b, 0, x, 3, 2)</code> \u4e3a\u4f8b\uff0c</p> <ul> <li><code>b</code> \u662f\u8981\u590d\u5236\u7684\u6570\u7ec4</li> <li><code>0</code> \u662f <code>b</code> \u4e2d\u5f00\u59cb\u590d\u5236\u7684\u4e0b\u6807</li> <li><code>x</code> \u662f\u8981\u7c98\u8d34\u590d\u5236\u5185\u5bb9\u7684\u6570\u7ec4</li> <li><code>3</code> \u662f <code>x</code> \u4e2d\u5f00\u59cb\u7c98\u8d34\u7684\u4e0b\u6807</li> <li><code>2</code> \u662f\u590d\u5236\u7684\u5143\u7d20\u4e2a\u6570</li> </ul> <p>\u5982\u679c <code>b</code> \u662f <code>{9, 10, 11}</code> \uff0c<code>x</code> \u662f <code>{-1, 2, 5, 4, 99}</code> \uff0c</p> <p>\u90a3\u4e48\u590d\u5236\u540e <code>x</code> \u5c31\u53d8\u6210 <code>{-1, 2, 5, 9, 10}</code> </p>"},{"location":"Notes%20of%20Courses/CS61B/CS61B/#5_4","title":"5","text":"<p>java\u4e2d\uff0c\u4e8c\u7ef4\u6570\u7ec4\u7684\u6bcf\u4e2a\u5143\u7d20\u662f\u4e00\u7ef4\u6570\u7ec4\u7684\u5730\u5740\uff0c\u6240\u4ee5\u540c\u4e00\u4e2a\u4e8c\u7ef4\u6570\u7ec4\u4e2d\u53ef\u4ee5\u5b58\u50a8\u4e0d\u540c\u957f\u5ea6\u7684\u4e00\u7ef4\u6570\u7ec4</p> <p></p>"},{"location":"Notes%20of%20Courses/CS61B/CS61B/#lecture-7-alists-resizing-vs-slists","title":"Lecture 7 ALists, Resizing, vs. SLists","text":""},{"location":"Notes%20of%20Courses/CS61B/CS61B/#1_13","title":"1","text":"<p>\u8bfe\u4e0a\u8bf4\u5230 \u987a\u5e8f\u8868 (\u57fa\u4e8e\u6570\u7ec4\u7684\u5217\u8868) array based list (AList) \u7531\u4e8e\u5728\u5b58\u50a8\u6570\u636e\u4e2a\u6570\u8fbe\u5230\u6570\u7ec4\u957f\u5ea6\u65f6\u9700\u8981\u66f4\u6362\u4e00\u4e2a\u66f4\u5927\u7684\u6570\u7ec4\uff0c\u4f46\u5982\u679c\u6bcf\u6b21\u6269\u5c55\u90fd\u53ea\u589e\u52a0\u56fa\u5b9a\u7684\u957f\u5ea6\uff0c\u90a3\u4e48\u6570\u636e\u91cf\u5927\u65f6\u7a0b\u5e8f\u5c31\u4f1a\u8fd0\u884c\u6bd4\u8f83\u6162\uff0c\u6240\u4ee5\u63d0\u5230\u6bcf\u6b21\u6269\u5c55\u53ef\u4ee5\u6269\u5c55\u6210\u4e4b\u524d\u957f\u5ea6\u76842\u500d</p>"},{"location":"Notes%20of%20Courses/CS61B/CS61B/#2_9","title":"2","text":"<p>\u5728\u628a\u987a\u5e8f\u8868\u6539\u9020\u6210 \u6cdb\u578b\u987a\u5e8f\u8868 \u65f6\uff0c\u5728\u6784\u9020\u6570\u7ec4\u65f6\uff0c</p> <pre><code>public class AList&lt;Item&gt; {\n    private Item[] items;\n    private int size;\n\n    public AList() {\n        items = new Item[100];\n        size = 0;\n    }\n}\n</code></pre> <p><code>new Item[100]</code> IDEA\u62a5\u9519(\u4f1a\u5f15\u8d77generic array creation\u7684\u9519\u8bef)\uff0c\u800c\u9700\u8981\u6539\u6210</p> <pre><code>items = (Item[]) new Object[100];\n</code></pre>"},{"location":"Notes%20of%20Courses/CS61B/CS61B/#3_7","title":"3","text":"<p>\u7531\u4e8e\u5728java\u4e2d\uff0c\u5bf9\u8c61\u53ea\u6709\u5931\u53bb\u6700\u540e\u4e00\u4e2a\u6307\u5411 reference\u65f6\uff0c\u624d\u4f1a\u88ab\u56de\u6536\u7a7a\u95f4\uff0c\u6240\u4ee5\u5728\u6cdb\u578b\u987a\u5e8f\u8868\u7684\u5220\u9664\u65b9\u6cd5\u4e2d\uff0c\u9700\u8981\u628a\u6570\u7ec4\u4e2d(\u9700\u8981\u5220\u53bb\u7684)\u6700\u540e\u4e00\u4e2a\u5143\u7d20\u6307\u5411 <code>null</code></p>"},{"location":"Notes%20of%20Courses/CS61B/CS61B/#lab-3","title":"Lab 3","text":""},{"location":"Notes%20of%20Courses/CS61B/CS61B/#1_14","title":"1","text":"<p>\u5f02\u5e38\u65ad\u70b9\u7684\u4f7f\u7528\uff0c</p> <p>\u5728 \u8fd0\u884c --- \u67e5\u770b\u65ad\u70b9 \u4e2d\u6253\u5f00\uff0c\u6216\u8005\u4f7f\u7528 Ctrl+Shift+F8 \u6253\u5f00\uff0c</p> <p></p> <p>\u9009\u4e2d(\u4efb\u4f55\u5f02\u5e38)\u65ad\u70b9\uff0c\u8fd8\u53ef\u4ee5\u5728\u300e\u6761\u4ef6\u300f\u4e2d\u6dfb\u52a0\u5224\u65ad\u7684\u6761\u4ef6</p> <p>\u5982</p> <pre><code>this instanceof java.lang.ArrayIndexOutOfBoundsException\n</code></pre>"},{"location":"Notes%20of%20Courses/CS61B/CS61B/#lecture-8-inheritance-implements","title":"Lecture 8 Inheritance, Implements","text":""},{"location":"Notes%20of%20Courses/CS61B/CS61B/#1_15","title":"1","text":"<p>\u63a5\u53e3 interface \u7684\u4f7f\u7528\u65b9\u6cd5\uff0c\u4f8b\u5982</p> <p>\u5148\u5b9e\u73b0\u4e00\u4e2a\u63a5\u53e3(\u4f7f\u7528 <code>interface</code> \u5173\u952e\u5b57)\uff0c</p> <pre><code>public interface List61B&lt;Item&gt; {\n    public void addFirst(Item x);\n    public void addLast(Item y);\n    public Item getFirst();\n    public Item getLast();\n    public Item removeLast();\n    public Item get(int i);\n    public void insert(Item x, int position);\n    public in size();\n}\n</code></pre> <p>\u7136\u540e\u4e4b\u524d\u7684SLList\u548cAList\u7c7b\u5c31\u53ef\u4ee5\u6dfb\u52a0\u4e0a <code>implements List61B&lt;...&gt;</code></p> <pre><code>public class AList&lt;Item&gt; implements List61B&lt;Item&gt; {\n    ...\n}\n</code></pre> <pre><code>public class SLList&lt;BLorp&gt; implements List61B&lt;Blorp&gt; {\n    ...\n}\n</code></pre> <p>\u800c\u518d\u5c06\u51fd\u6570\u4f20\u5165\u7684\u53c2\u6570\u6539\u6210 <code>List61B&lt;String&gt; list</code> (\u539f\u6765\u662f <code>SLList</code> \u6216 <code>AList</code> )\uff0c\u90a3\u4e48\u5728\u8c03\u7528\u8fd9\u4e2a\u51fd\u6570\u65f6\uff0c\u4f20\u5165SLList\u6216\u8005AList\u5b9e\u4f8b\u90fd\u53ef\u4ee5</p> <p></p> <p>\u7ee7\u627f\u63a5\u53e3\u7684\u5b50\u7c7b\u5fc5\u987b\u5b9e\u73b0\u63a5\u53e3\u7684\u6240\u6709\u65b9\u6cd5</p>"},{"location":"Notes%20of%20Courses/CS61B/CS61B/#2_10","title":"2","text":"<ul> <li>Override \u8986\u5199 \u6307\u7684\u662f\u5b50\u7c7b\u5728\u7c7b\u4e2d\u91cd\u65b0\u91cd\u65b0\u5b9e\u73b0\u7236\u7c7b\u6216\u8005\u63a5\u53e3\u4e2d\u7684\u65b9\u6cd5</li> <li>Overload \u91cd\u8f7d \u6307\u7684\u662f\u540c\u4e00\u4e2a\u51fd\u6570\u88ab\u91cd\u590d\u591a\u6b21\u5b9e\u73b0(\u53ef\u4ee5\u662f\u5728\u4e0d\u540c\u7684\u5b50\u7c7b\u4e2d)</li> </ul>"},{"location":"Notes%20of%20Courses/CS61B/CS61B/#3_8","title":"3","text":"<p><code>@Override</code> \u6ce8\u91ca\uff0c\u4f5c\u7528\u662f\u53ea\u6709\u51fd\u6570\u662f\u8986\u5199\u7236\u7c7b\u6216\u63a5\u53e3\u7684\u51fd\u6570\u65f6\uff0c\u624d\u4f1a\u88ab\u7f16\u8bd1</p> <p>Why use <code>@Override</code> ?</p> <ul> <li>Main reason: Protects against typos.<ul> <li>If you say <code>@Override</code> , but it the method isn't actually overriding anything, you'll get a compile error.</li> <li>e.g. <code>public void addLats(Item x)</code></li> </ul> </li> <li>Reminds programmer that method definition came from somewhere higher up in the inheritance hierarchy.</li> </ul>"},{"location":"Notes%20of%20Courses/CS61B/CS61B/#4_6","title":"4","text":"<p>Implementation Inheritance \u5b9e\u73b0\u7ee7\u627f\uff0c\u4f7f\u7528 <code>default</code> \u5173\u952e\u5b57\uff0c\u53ef\u4ee5\u5728\u63a5\u53e3\u4e2d\u5b9e\u73b0\u51fd\u6570\uff0c\u5e76\u4e14\u5b50\u7c7b\u80fd\u7ee7\u627f\u5df2\u7ecf\u5b9e\u73b0\u597d\u7684\u51fd\u6570(\u5c31\u53ef\u4ee5\u4e0d\u7528\u8986\u5199)\uff0c\u4f8b\u5982</p> <pre><code>default public void print() {\n    for (int i = 0; i &lt; size(); i += 1) {\n        System.out.print(get(i) + \" \");\n    }\n    System.out.println();\n}\n</code></pre> <p>\u7531\u4e8e\u662f\u5728\u63a5\u53e3\u4e2d\u5b9e\u73b0\uff0c\u6240\u4ee5\u53ea\u80fd\u4f7f\u7528\u63a5\u53e3\u4e2d\u7684\u65b9\u6cd5</p>"},{"location":"Notes%20of%20Courses/CS61B/CS61B/#5_5","title":"5","text":"<p>\u5982\u679c\u58f0\u660e\u7684\u662f\u7236\u7c7b\u7684\u53d8\u91cf\uff0c\u4f46\u6307\u5411\u7684\u662f\u5b50\u7c7b\u7684\u5b9e\u4f8b\uff0c\u5728\u4f7f\u7528\u8fd9\u4e2a(\u7236\u7c7b\u7c7b\u578b\u7684)\u53d8\u91cf\u8c03\u7528\u8986\u5199\u7684\u65b9\u6cd5\u65f6\uff0c\u7531\u4e8e \u52a8\u6001\u65b9\u6cd5\u9009\u62e9 Dynamic Method Selection\uff0c\u6700\u7ec8\u8fd0\u884c\u65f6\u8fd0\u884c\u7684\u4f1a\u662f\u5b9e\u9645\u5b50\u7c7b\u5b9e\u4f8b\u7684\u65b9\u6cd5</p> <p></p> <p>\u5982\u679c\u5728\u5b50\u7c7b\u4e2d\u53ea\u662f\u91cd\u8f7d\u800c\u6ca1\u6709\u8986\u5199\u7684\u65b9\u6cd5\uff0c\u90a3\u4e48\u5982\u679c\u53d8\u91cf\u58f0\u660e\u65f6\u662f\u7236\u7c7b\u7684\u7c7b\u578b\uff0c\u5728\u8c03\u7528\u91cd\u8f7d\u7684\u65b9\u6cd5\u65f6\uff0c\u5c31\u4f1a\u8c03\u7528\u7236\u7c7b\u7684\u65b9\u6cd5\uff0c\u800c\u5982\u679c\u662f\u5b50\u7c7b\u7684\u7c7b\u578b\u5c31\u4f1a\u8c03\u7528\u5b50\u7c7b\u7684\u65b9\u6cd5(\u5982\u4e0a\u56fe\u4e2d\uff0c\u4ece\u7236\u7c7b\u548c\u5b50\u7c7b\u7684\u65b9\u6cd5\u4e2d\u4f20\u5165\u7684\u53c2\u6570\u4e0d\u4e00\u81f4\u53ef\u4ee5\u770b\u51fa\u662f\u91cd\u8f7d\uff0c\u6240\u4ee5 <code>a.praise(d)</code> \u8c03\u7528\u7684\u662f <code>Animal</code> \u7c7b\u7684\u65b9\u6cd5)</p> <p>\u6559\u6388\u7684\u89e3\u91ca\uff1a</p> <p>this praise method, it's overloaded, not overriden. Notice that this is not the same method signature in the dog class, it's not praise animal in the dog class, it's praise dog in the dog class. This is actually a totally new method, so it's not overriding, it's overloading. The other praise method in this dog class</p> <p>Josh\u8bf4\u9053\uff0c\u53e6\u4e00\u79cd\u52a8\u6001\u65b9\u6cd5\u9009\u62e9\u7684\u7406\u89e3\u662f\uff0c\u628a\u5b83\u5f53\u6210\u662f\u4e00\u4e2a\u4e24\u6b65\u7684\u5904\u7406\u8fc7\u7a0b\uff0c\u7b2c\u4e00\u6b65\u5728\u7f16\u8bd1\u65f6\u53d1\u751f\uff0c\u7b2c\u4e8c\u6b65\u5728\u8fd0\u884c\u65f6\u53d1\u751f</p> <ul> <li>At compile time: We determine the signature S of the method to be called.<ul> <li>S is decided using ONLY static types.</li> </ul> </li> <li>At runtime: The dynamic type of the invoking object uses its method with this exact signature S.</li> </ul> <p>\u5982\u4e0a\u56fe\u4e2d\u7684\u4f8b\u5b50</p> <pre><code>Animal a = new Dog();\nDog d = new Dog();\na.greet(d);  // greet(Animal a)\na.sniff(d);  // sniff(Animal a)\nd.praise(d); // praise(Dog a)\na.praise(d); // praise(Animal a)\n</code></pre> <p>\u5728\u7f16\u8bd1\u65f6\uff0c\u4f1a\u53d8\u91cf\u7684\u6570\u636e\u7c7b\u578b\u4ee5\u53ca\u8c03\u7528\u65b9\u6cd5\u65f6\u4f20\u5165\u7684\u53c2\u6570\u786e\u5b9a\u8c03\u7528\u7684\u51fd\u6570\uff0c\u5982 <code>a.praise(d)</code> \u4e2d <code>a</code> \u662f <code>Animal</code> \uff0c\u6240\u4ee5\u4f1a\u5bfb\u627e <code>Animal</code> \u7c7b\u4e2d\u7684\u65b9\u6cd5\uff0c\u6839\u636e\u4f20\u5165\u7684\u53c2\u6570 <code>d</code> \u662f <code>Animal</code> (\u7684\u5b50\u7c7b)\uff0c\u6240\u4ee5\u786e\u5b9a\u8c03\u7528\u7684\u65b9\u6cd5\u4e3a <code>praise(Animal a)</code> \uff0c</p> <p>\u5728\u8fd0\u884c\u65f6\uff0c\u518d\u6839\u636e\u5177\u4f53\u53d8\u91cf\u6307\u5411\u7684\u5b9e\u4f8b\u8c03\u7528\u5bf9\u5e94\u7684\u65b9\u6cd5\uff0c\u5982 <code>a.sniff(d)</code> \u5728\u7f16\u8bd1\u65f6\u786e\u5b9a\u65b9\u6cd5\u4e3a <code>sniff(Animal a)</code> \uff0c\u800c\u5b9e\u4f8b <code>a</code> ( <code>Dog</code> \u7c7b)\u4e2d\u6709\u5bf9\u5e94\u7684\u65b9\u6cd5\uff0c\u6240\u4ee5\u8c03\u7528\u7684\u5c31\u662f <code>Dog</code> \u7c7b\u7684 <code>sniff</code> \u65b9\u6cd5</p>"},{"location":"Notes%20of%20Courses/CS61B/CS61B/#6_1","title":"6","text":"<pre><code>import java.util.List;\nimport java.util.ArrayList;\n</code></pre> <p>\u53ef\u4ee5\u5bfc\u5165java\u5df2\u7ecf\u5b9e\u73b0\u597d\u7684\u94fe\u8868\u7c7b</p>"},{"location":"Notes%20of%20Courses/CS61B/CS61B/#lecture-8-qa","title":"Lecture 8 Q&amp;A","text":""},{"location":"Notes%20of%20Courses/CS61B/CS61B/#1_16","title":"1","text":"<p>\u6709\u4eba\u63d0\u95ee\u5173\u4e8ejava\u4e2d\u7c7b\u578b\u8f6c\u6362 Casting\u7684\u95ee\u9898</p> <pre><code>Bird bird = new Falcon();\nFalcon falcon = (Falcon) bird;\n</code></pre> <p>\u8fd9\u4e24\u884c\u4ee3\u7801(\u8bbe\u7f6e\u7684\u53d8\u91cf)\u5bf9\u5e94\u7684\u9759\u6001\u7c7b\u578b\u548c\u52a8\u6001\u7c7b\u578b\u662f\u8fd9\u6837\uff0c</p> Static Type Dynamic Type <code>bird</code> Bird Falcon <code>falcon</code> Falcon Falcon <p>\u7136\u540eJosh\u5bf9\u4ee3\u7801\u7a0d\u52a0\u4fee\u6539\uff0c</p> <pre><code>Bird bird = (Bird) new Falcon();\nFalcon falcon = (Falcon) bird;\n</code></pre> <p>\u7136\u540e\u8bf4\u9053\u7b2c\u4e00\u884c\u52a0\u4e0a <code>(Bird)</code> \u4e5f\u4e0d\u4f1a\u6539\u53d8\u5bf9\u5e94\u7684\u9759\u6001\u7c7b\u578b\u548c\u52a8\u6001\u7c7b\u578b\uff0c</p> <p>in fact, a cast doesn't change anything, it never changes anything. When I think about a cast as I'll say in lecture 9 is, it tells the compiler don't do your normal type checking, I know what I'm doing. It doesn't actually change anything, it just says for the purposes of type checking pretend this is a bird.</p>"},{"location":"Notes%20of%20Courses/CS61B/CS61B/#2_11","title":"2","text":"<p>\u6709\u4eba\u5411Josh\u63d0\u95ee\u4e00\u9898\uff0c\u8981\u6c42\u53ea\u4fee\u6539\u539f\u65b9\u9635(\u4e0d\u521b\u5efa\u65b0\u77e9\u9635)\u4f7f\u77e9\u9635\u65cb\u8f6c90\u00b0\uff0c\u7b54\u6848\u7684\u505a\u6cd5\u5927\u6982\u662f\uff0c\u56e0\u4e3a\u65b9\u9635\u4e2d\u7684\u6bcf\u4e2a\u4f4d\u7f6e\u65cb\u8f6c4\u6b21\u5c31\u4f1a\u56de\u5230\u539f\u6765\u7684\u4f4d\u7f6e\uff0c\u6240\u4ee5\u628a\u6bcf\u4e2a\u5143\u7d20\u66ff\u6362\u5230\u65cb\u8f6c\u540e\u7684\u4f4d\u7f6e\uff0c\u518d\u628a\u65b0\u4f4d\u7f6e\u7684\u65e7\u5143\u7d20\u6362\u5230\u65cb\u8f6c\u540e\u7684\u4f4d\u7f6e\uff0c\u5faa\u73af4\u6b21\u5c31\u80fd\u6362\u597d4\u4e2a\u5143\u7d20\uff0c\u53ef\u4ee5\u53c2\u8003Josh\u753b\u7684\u56fe</p> <p></p>"},{"location":"Notes%20of%20Courses/CS61B/CS61B/#project-1","title":"Project 1","text":""},{"location":"Notes%20of%20Courses/CS61B/CS61B/#1_17","title":"1","text":"<p>Java instanceof - javatpoint</p> <p>The java instanceof operator is used to test whether the object is an instance of the specified type (class or subclass or interface).</p> <p>\u8bfe\u7a0b\u7f51\u7ad9\u4e0a\u8bf4\u4f1a\u7528\u5230 <code>instanceof</code> \u5173\u952e\u5b57\uff0c\u7136\u540e\u6839\u636e\u8bfe\u7a0b\u7f51\u7ad9\u4e0a\u63d0\u4f9b\u7684\u94fe\u63a5\uff0c<code>instanceof</code> \u5173\u952e\u5b57\u7684\u89e3\u91ca\u5982\u4e0a</p>"},{"location":"Notes%20of%20Courses/CS61B/CS61B/#2_12","title":"2","text":"<p>\u7531\u4e8e <code>ArrayDeque</code> \u6ca1\u6709\u6d4b\u8bd5\u7684\u6587\u4ef6\uff0c\u5982\u679c\u8981\u6d4b\u8bd5\u7684\u8bdd\u9700\u8981\u81ea\u5df1\u5199\u4e00\u4e2a\u6d4b\u8bd5\u7684\u6587\u4ef6\uff0c\u8bfe\u7a0b\u7f51\u7ad9\u4e0a\u5efa\u8bae\u53ef\u4ee5\u53c2\u8003Lab 3\u4e2d\u7684\u6d4b\u8bd5\uff0c</p> <p>So how do you verify correctness of your data structure? You use your skills that you got from Lab 3! You are encouraged to copy and paste those tests for <code>SList</code> and <code>AList</code> and adapt them for these data structures. The tests will look very similar and only require basic changes.</p> <p>\u4e8e\u662f\u6211cv\u4e86 <code>TestBuggyAList.java</code> \uff0c\u7136\u540e\u6539\u6210\u4e86</p> code RandomizedComparisonTest.java<pre><code>package deque;\n\nimport ...;\n\npublic class RandomizedComparisonTest {\n    // YOUR TESTS HERE\n    @Test\n    public void testThreeAddThreeRemove() {\n        LinkedListDeque&lt;Integer&gt; l1 = new LinkedListDeque&lt;&gt;();\n        ArrayDeque&lt;Integer&gt; l2 = new ArrayDeque&lt;&gt;();\n\n        ...\n    }\n\n    @Test\n    public void randomizedTest() {\n        LinkedListDeque&lt;Integer&gt; L = new LinkedListDeque&lt;&gt;();\n        ArrayDeque&lt;Integer&gt; L2 = new ArrayDeque&lt;&gt;();\n\n        int N = 100000;\n        for (int i = 0; i &lt; N; i += 1) {\n            int operationNumber = StdRandom.uniform(0, 4);\n            if (operationNumber == 0) {\n                ...\n            } else if (operationNumber == 3) {\n                // addFirst\n                int randVal = StdRandom.uniform(0, 100);\n                L.addFirst(randVal);\n                L2.addFirst(randVal);\n                System.out.println(\"addFirst(\" + randVal + \")\");\n            }\n        }\n    }\n}\n</code></pre>"},{"location":"Notes%20of%20Courses/CS61B/CS61B/#3_9","title":"3","text":"<p>java\u4e2d\u751f\u6210\u968f\u673a\u6570\u53ef\u4ee5\u4f7f\u7528 <code>Math.random()</code> \uff0c\u4f1a\u8fd4\u56de <code>[0, 1)</code> \u7684\u968f\u673a\u6570</p>"},{"location":"Notes%20of%20Courses/CS61B/CS61B/#4_7","title":"4","text":"<p>\u5728autograder\u4e2d\uff0c<code>Deque</code> \u7684\u5b50\u7c7b\u53ef\u80fd\u4e0d\u6b62\u81ea\u5df1\u5b9e\u73b0\u7684 <code>LinkedListDeque</code> \u548c <code>ArrayDeque</code> \uff0c\u6240\u4ee5\u5728\u5b9e\u73b0 <code>equals</code> \u65b9\u6cd5\u65f6\uff0c\u9700\u8981\u8003\u8651\u5230\u8fd9\u6837\u7684\u60c5\u51b5( <code>equals</code> \u65b9\u6cd5\u7684\u8981\u6c42\u662f\uff0c\u53ea\u8981\u662f <code>Deque</code> \u5e76\u4e14\u6240\u6709\u5143\u7d20\u6309\u987a\u5e8f\u4e00\u81f4\uff0c\u5219\u8ba4\u4e3a\u76f8\u7b49)</p>"},{"location":"Notes%20of%20Courses/CS61B/CS61B/#lecture-9-extends-casting-higher-order-functions","title":"Lecture 9 Extends, Casting, Higher Order Functions","text":""},{"location":"Notes%20of%20Courses/CS61B/CS61B/#1_18","title":"1","text":"<p><code>extends</code> \u5173\u952e\u5b57\uff0c\u80fd\u7ee7\u627f\u53e6\u4e00\u4e2a\u7c7b\u7684\u6240\u6709\u4e0d\u662f <code>private</code> \u7684\u5c5e\u6027(\u5305\u62ec\u65b9\u6cd5)\uff0c\u7136\u540e\u53ef\u4ee5\u6dfb\u52a0\u65b0\u7684\u65b9\u6cd5</p> <p>\u7ee7\u627f\u4e86\u4e4b\u540e\uff0c\u53ef\u4ee5\u4f7f\u7528 <code>super</code> \u6765\u8bbf\u95ee\u7236\u7c7b\u7684\u975e <code>private</code> \u7684\u5c5e\u6027</p> <p>\u5b50\u7c7b\u7684\u6784\u9020\u51fd\u6570\u4e2d\uff0c\u5982\u679c\u6ca1\u6709\u663e\u5f0f\u5730\u8c03\u7528\u7236\u7c7b\u7684\u6784\u9020\u51fd\u6570(\u901a\u8fc7 <code>super([...]);</code> \u8c03\u7528)\uff0c\u90a3\u4e48\u4f1a\u81ea\u52a8\u9690\u5f0f\u5730\u8c03\u7528(\u8c03\u7528 <code>super();</code> )</p> <p></p>"},{"location":"Notes%20of%20Courses/CS61B/CS61B/#2_13","title":"2","text":"<p>Java\u4e2d\u7684\u9ad8\u9636\u51fd\u6570 Higher Order Functions</p> <p>Josh\u5728\u8bfe\u4e0a\u5c55\u793a\u4e86\u4e00\u4e2a\u4f8b\u5b50(\u4f7f\u7528interface)</p> JavaPython IntUnaryFunction<pre><code>public interface IntUnaryFunction {\n    int apply(int x);\n}\n</code></pre> TenX<pre><code>public class TenX implements IntUnaryFunction {\n    public int apply(int x) {\n        return 10 * x;\n    }\n}\n</code></pre> HoFDemo<pre><code>public class HoFDemo {\n    public static int do_twice(IntUnaryFunction f, int x) {\n        return f.apply(f.apply(x));\n    }\n    public static void main(String[] args) {\n        System.out.println(do_twice(new TenX(), 2));\n    }\n}\n</code></pre> <pre><code>def tenX(x):\n    return 10 * x\n\ndef do_twice(f, x):\n    return f(f(x))\n\nprint(do_twice(tenX, 2))\n</code></pre>"},{"location":"Notes%20of%20Courses/CS61B/CS61B/#lecture-10-subtype-polymorphism-vs-hofs","title":"Lecture 10 Subtype Polymorphism vs. HoFs","text":""},{"location":"Notes%20of%20Courses/CS61B/CS61B/#1_19","title":"1","text":"<p>Josh\u63d0\u5230 <code>OurComparable</code> \u7684\u7f3a\u70b9</p> <pre><code>public interface OurComparable {\n    public int compareTo(Object o);\n}\n</code></pre> <p>\u5373\u5728\u8fd0\u884c\u65f6(\u5982\u679c\u7c7b\u578b\u4e0d\u4e00\u81f4)\u4f1a\u51fa\u73b0\u9519\u8bef</p> <pre><code>public class Dog implements OurComparable {\n    public int compareTo(Object obj) {\n        /** Warning, cast can cause runtime error! */\n        Dog uddaDog = (Dog) obj;\n        return this.size - uddaDog.size;\n    }\n}\n</code></pre> <p>\u6240\u4ee5(\u4e3a\u4e86\u907f\u514d\u8fd9\u79cd\u60c5\u51b5)\u8981\u6362\u6210\u4f7f\u7528 <code>Comparable&lt;T&gt;</code> (java\u5185\u7f6e\u7684\u63a5\u53e3)</p> <pre><code>public interface Comparable&lt;T&gt; {\n    public int compareTo(T obj);\n}\n</code></pre> <pre><code>public class Dog implements Comparable&lt;Dog&gt; {\n    public int compareTo(Dog uddaDog) {\n        return this.size - uddaDog.size;\n    }\n}\n</code></pre>"},{"location":"Notes%20of%20Courses/CS61B/CS61B/#2_14","title":"2","text":"<p>Josh\u63d0\u5230\uff0c\u7c7b\u4f3c\u4e8epython\u4e2d\u4f20\u5165 \u6bd4\u8f83\u51fd\u6570 \u8fdb\u884c\u4e0d\u540c\u7684\u6bd4\u8f83</p> python<pre><code>def print_larget(x, y, compare, stringify):\n    if compare(x, y):\n        return stringify(x)\n    return stringify(y)\n</code></pre> <p>java\u4e2d\u901a\u5e38\u4f7f\u7528 <code>Comparator</code> \uff0c\u4ed6\u5c55\u793a\u7684\u793a\u4f8b\u5982\u4e0b</p> java<pre><code>import java.util.Comparator;\n\npublic class Dog {\n    private String name;\n    ...\n    private static class NameComparator implements Comparator&lt;Dog&gt; {\n        public int compare(Dog a, Dog b) {\n            return a.name.compareTo(b.name);\n        }\n    }\n\n    public static class Comparator&lt;Dog&gt; getNameComparator() {\n        return new NameComparator();\n    }\n}\n</code></pre> <pre><code>Comparator&lt;Dog&gt; cd = Dog.getNameComparator();\nif (cd.compare(d1, d3) &gt; 0) {\n    d1.bark();\n} else {\n    d3.bark();\n}\n</code></pre>"},{"location":"Notes%20of%20Courses/CS61B/CS61B/#lecture-10-qa","title":"Lecture 10 Q&amp;A","text":""},{"location":"Notes%20of%20Courses/CS61B/CS61B/#1_20","title":"1","text":"<p>Josh\u6839\u636e\u4e0b\u9762\u8fd9\u4e2aLecture 10\u8bfe\u4e0a\u63d0\u5230\u7684\u4f8b\u5b50\uff0c\u5bf9\u7c7b\u578b\u8f6c\u6362 Casting\u8fdb\u884c\u4e86\u8fdb\u4e00\u6b65\u7684\u89e3\u91ca</p> <pre><code>Object o2 = new ShowDog(\"Mortimer\", \"Corgi\", 25, 512.2);\n\nShowDog sdx = ((ShowDog) o2);\nsdx.bark();\n\nDog dx = ((Dog) o2);\ndx.bark();\n\n((Dog) o2).bark();\n\nObject o3 = (Dog) o2;\no3.bark();  // Compile error\n</code></pre> <p>\u7c7b\u578b\u8f6c\u6362\u4e0d\u4f1a\u6539\u53d8\u539f\u672c\u53d8\u91cf\u7684\u9759\u6001\u7c7b\u578b\u548c\u52a8\u6001\u7c7b\u578b(\u5373\u5b9e\u9645\u7684\u7c7b\u578b)\uff0c\u4f46\u662f\u4f8b\u5982\u8fd9\u4e00\u884c\u4ee3\u7801\u4e2d</p> <pre><code>ShowDog sdx = ((ShowDog) o2);\n</code></pre> <p><code>((ShowDog) o2)</code> \u7531\u4e8e\u6709\u7c7b\u578b\u8f6c\u6362 Casting\uff0c\u6240\u4ee5\u8fd9\u4e2a\u8868\u8fbe\u5f0f(\u6574\u4f53)\u4f1a\u88ab\u8ba4\u4e3a\u9759\u6001\u7c7b\u578b\u662f <code>ShowDog</code> \uff0c\u56e0\u800c\u80fd\u8d4b\u503c\u7ed9\u9759\u6001\u7c7b\u578b\u540c\u4e3a <code>ShowDog</code> \u7684 <code>sdx</code> \uff0c\u800c\u5982\u679c\u4e0d\u52a0\u7c7b\u578b\u8f6c\u6362\uff0c</p> <pre><code>ShowDog sdx = o2;\n</code></pre> <p>\u5373\u4f7f <code>o2</code> \u7684\u52a8\u6001\u7c7b\u578b(\u5b9e\u9645\u7684\u7c7b\u578b)\u662f <code>ShowDog</code> \uff0c\u4f46\u662f\u56e0\u4e3a <code>o2</code> \u9759\u6001\u7c7b\u578b\u662f <code>Object</code> \uff0c <code>Object</code> \u4e0d\u80fd\u8d4b\u503c\u7ed9 <code>ShowDog</code> (\u53ea\u6709 <code>ShowDog</code> \u7c7b\u548c <code>ShowDog</code> \u7684\u5b50\u7c7b\u624d\u80fd\u8d4b\u503c\u7ed9 <code>ShowDog</code> )\uff0c\u6240\u4ee5\u4f1a\u4ea7\u751f\u7f16\u8bd1\u9519\u8bef</p>"},{"location":"Notes%20of%20Courses/CS61B/CS61B/#lab-4","title":"Lab 4","text":""},{"location":"Notes%20of%20Courses/CS61B/CS61B/#1_21","title":"1","text":"<p>\u53ef\u4ee5\u901a\u8fc7 <code>git checkout</code> \u6765\u53d8\u66f4\u6587\u4ef6\u5230\u67d0\u4e2acommit\u7684\u72b6\u6001</p> <pre><code>git checkout ... path/to/file\n</code></pre> <p><code>...</code> \u5904\u53ef\u4ee5\u662fcommit\u7684\u7f16\u53f7(\u4f8b\u5982 <code>47bb0877</code> )\uff0c\u6216\u8005branch(\u4f8b\u5982 <code>main</code> )\u6216\u8005tag(\u4f8b\u5982 <code>origin/main</code> )</p>"},{"location":"Notes%20of%20Courses/CS61B/CS61B/#lecture-11-exceptions-iterators-object-methods","title":"Lecture 11 Exceptions, Iterators, Object Methods","text":""},{"location":"Notes%20of%20Courses/CS61B/CS61B/#1_22","title":"1","text":"<p>java\u4e2d\u7684\u96c6\u5408 Set <code>java.util.Set</code> \u4e0d\u80fd\u5728\u4e00\u4e2aset\u4e2d\u52a0\u5165\u4e24\u4e2a\u4e00\u6837\u7684\u5143\u7d20</p> <p>Stores a set of values with on duplicates. Has no sense of order.</p> JavaPython <pre><code>Set&lt;String&gt; S = new HashSet&lt;&gt;();\nS.add(\"Tokyo\");\nS.add(\"Beijing\");\nS.add(\"Lagos\");\nS.add(\"S\u00e3o Paulo\");\nSystem.out.println(S.contains(\"Tokyo\"));\n</code></pre> Output<pre><code>true\n</code></pre> <pre><code>s = set()\ns.add(\"Tokyo\")\ns.add(\"Beijing\")\ns.add(\"Lagos\")\ns.add(\"S\u00e3o Paulo\")\nprint(\"Tokyo\" in s)\n</code></pre> Output<pre><code>True\n</code></pre>"},{"location":"Notes%20of%20Courses/CS61B/CS61B/#2_15","title":"2","text":"<p>\u7c7b\u4f3c\u5728python\u4e2d\u7528 <code>raise</code> \u5f15\u53d1\u9519\u8bef\uff0c\u5728java\u4e2d\u53ef\u4ee5\u4f7f\u7528 <code>throw</code> \u629b\u51fa\u5f02\u5e38\uff0c\u4f8b\u5982</p> <pre><code>public void add(T x) {\n    if (x == null) {\n        throw new IllegalArgumentException(\"Cannot add null!\");\n    }\n}\n</code></pre>"},{"location":"Notes%20of%20Courses/CS61B/CS61B/#3_10","title":"3","text":"<p>java\u4e2d\u7684foreach\u5faa\u73af/\u589e\u5f3afor\u5faa\u73af Enhanced For loop\uff0c</p> <pre><code>Set&lt;Integer&gt; javaset = new HashSet&lt;Integer&gt;();\n</code></pre> Enhanced For / foreach<pre><code>for (int x : javaset) {\n    System.out.println(x);\n}\n</code></pre> \u666e\u901afor\u5faa\u73af<pre><code>Iterator&lt;Integer&gt; seer = javaset.iterator();\n\nwhile (seer.hasNext()) {\n    System.out.println(seer.next());\n}\n</code></pre> <p>\u63a5\u53e3 <code>Iterator</code> \u9700\u8981\u5b9e\u73b02\u4e2a\u65b9\u6cd5</p> <pre><code>public interface Iterator&lt;T&gt; {\n    boolean hasNext();\n    T next();\n}\n</code></pre> <p>Josh\u5b9e\u73b0\u7684\u793a\u4f8b</p> <pre><code>public class ArraySet&lt;T&gt; {\n    private class ArraySetIterator implements Iterator&lt;T&gt; {\n        private int wizPos;\n        public ArraySetIterator() {\n            wizPos = 0;\n        }\n\n        public boolean hasNext() {\n            return wizPos &lt; size;\n        }\n\n        public T next() {\n            T returnItem = items[wizPos];\n            wizPos += 1;\n            return returnItem;\n        }\n    }\n}\n</code></pre> <p>\u5982\u679c\u60f3\u8981\u652f\u6301\u589e\u5f3afor\u5faa\u73af\uff0c\u90a3\u4e48\u9700\u8981\u8ba9\u7c7b\u5b9e\u73b0 <code>Iterable</code> \u63a5\u53e3</p> <pre><code>public interface Iterable&lt;T&gt; {\n    Iterator&lt;T&gt; iterator();\n}\n</code></pre> <p>\u4f8b\u5982</p> <pre><code>public class ArraySet&lt;T&gt; implements Iterable&lt;T&gt; {\n    ...\n    public Iterator&lt;T&gt; iterator() { ... }\n}\n</code></pre> <p>\u6216\u8005\u9700\u8981\u662f <code>Iterable</code> \u7684\u5b50\u7c7b\uff0c\u5982\u4e0b\u9762\u7684 <code>Set</code> \u7c7b</p> <pre><code>public class Collection&lt;E&gt; extends Iterable&lt;E&gt; { ... }\n</code></pre> <pre><code>public class Set&lt;E&gt; extends Collection&lt;E&gt; { ... }\n</code></pre>"},{"location":"Notes%20of%20Courses/CS61B/CS61B/#4_8","title":"4","text":"<p>java\u4e2d\u6240\u6709\u7c7b\u90fd\u662f <code>Object</code> \u7c7b\u7684\u5b50\u7c7b</p> <p><code>Object</code> \u4e2d\u6bd4\u8f83\u91cd\u8981\u76844\u4e2a\u65b9\u6cd5(61b\u4e2d\u4f1a\u6d89\u53ca\u5230\u7684)</p> <ul> <li><code>String toString()</code></li> <li><code>boolean equals(Object obj)</code></li> <li><code>Class&lt;?&gt; getClass()</code></li> <li><code>int hashCode()</code></li> </ul>"},{"location":"Notes%20of%20Courses/CS61B/CS61B/#5_6","title":"5","text":"<p>java\u4e2d\uff0c\u4e00\u4e2a <code>String</code> \u52a0\u4e0a\u53e6\u5916\u4e00\u4e2a\u4e1c\u897f\u7684\u65f6\u5019\uff0c\u4f1a\u81ea\u52a8\u9690\u5f0f\u5730\u8c03\u7528 <code>toString</code> \u65b9\u6cd5</p>"},{"location":"Notes%20of%20Courses/CS61B/CS61B/#6_2","title":"6","text":"<p>Josh\u8bf4\u9053\uff0cjava\u4e2d \u5b57\u7b26\u4e32\u62fc\u63a5 \u6bd4\u8f83\u8017\u65f6\uff0c\u6240\u4ee5\u53ef\u4ee5\u4f7f\u7528 <code>StringBuilder</code> \uff0c\u4f8b\u5982</p> <pre><code>@Override\npublic String toString() {\n    StringBuilder returnSB = new StringBuilder(\"{\");\n    for (int i = 0; i &lt; size - 1; i += 1) {\n        returnSB.append(items[i].toString());\n        returnSB.append(\", \");\n    }\n    returnSB.append(items[size - 1]);\n    returnSB.append(\"}\");\n    return returnSB.toString();\n}\n</code></pre>"},{"location":"Notes%20of%20Courses/CS61B/CS61B/#7_1","title":"7","text":"<p><code>==</code> \u548c <code>.equals</code> \u7684\u533a\u522b</p> <ul> <li><code>==</code> \u6bd4\u8f83\u4e24\u4e2a\u662f\u4e0d\u662f\u6307\u5411\u540c\u4e00\u4e2a\u5b9e\u4f8b</li> <li><code>.equals</code> \u8c03\u7528\u7684\u662f\u7c7b\u5185\u7684 <code>.equals</code> \u65b9\u6cd5</li> </ul>"},{"location":"Notes%20of%20Courses/CS61B/CS61B/#8_1","title":"8","text":"<p>Josh\u5b9e\u73b0 <code>equals</code> \u7684\u793a\u4f8b</p> <pre><code>@Override\npublic boolean equals(Object other) {\n    if (this == other) {\n        return true;\n    }\n    if (other == null) {\n        return false;\n    }\n    if (other.getClass() != Array.class) {  // or != this.getClass()\n        return false;\n    }\n    ArraySet&lt;T&gt; o = (ArraySet&lt;T&gt;) other;\n    if (o.size() != this.size()) {\n        return false;\n    }\n    for (T item : this) {\n        if (!o.contains(item)) {\n            return false;\n        }\n    }\n    return true;\n}\n</code></pre> <p>\u6ce8\u610f\u5230\u4f7f\u7528\u4e86 <code>.getClass</code> \u65b9\u6cd5</p>"},{"location":"Notes%20of%20Courses/CS61B/CS61B/#9_1","title":"9","text":"<p>Josh\u63d0\u5230\u4e86 <code>String.join</code> \u51fd\u6570\u7684\u4f7f\u7528(\u7528\u6765\u7b80\u5316 <code>.toString</code> \u65b9\u6cd5\u7684\u5b9e\u73b0)</p> <pre><code>public String toString() {\n    List&lt;String&gt; listOfItems = new ArrayList&lt;&gt;();\n    for (T x : this) {\n        listOfItems.add(x.toString());\n    }\n    return \"{\" + String.join(\", \", listOfItems) + \"}\";\n}\n</code></pre> <p><code>String.join</code> \u51fd\u6570\u7684\u4e00\u79cd\u7528\u6cd5\u662f\u4f20\u5165\u4e2d\u95f4\u7528\u4e8e\u5206\u5272\u7684\u5b57\u7b26\u4e32\uff0c\u548c\u4e00\u4e2a <code>Iterable</code> \uff0c\u7136\u540e\u4f1a\u8fd4\u56de\u7528 <code>Iterable</code> \u4e2d\u7684\u5143\u7d20\u62fc\u63a5\u7684\u5b57\u7b26\u4e32</p>"},{"location":"Notes%20of%20Courses/CS61B/CS61B/#10_1","title":"10","text":"<p>Josh\u4ecb\u7ecd\u4e86 <code>of</code> \u9759\u6001\u65b9\u6cd5\u7684\u5b9e\u73b0\u548c\u7528\u6cd5</p> <pre><code>public class ArratSet&lt;T&gt; implements Iterable&lt;T&gt; {\n    public static &lt;Glerp&gt; ArratSet&lt;Glerp&gt; of(Glerp... stuff) {\n        ArratSet&lt;Glerp&gt; returnSet = new ArratSet&lt;Glerp&gt;();\n        for (Glerp x : stuff) {\n            returnSet.add(x);\n        }\n        return returnSet;\n    }\n}\n</code></pre> <ul> <li>\u56e0\u4e3a\u662f\u9759\u6001\u65b9\u6cd5\uff0c\u6240\u4ee5 <code>of</code> \u4e0d\u77e5\u9053 <code>T</code> \u662f\u4ec0\u4e48\uff0c\u6240\u4ee5\u9700\u8981\u58f0\u660e\u4e00\u4e2a\u65b0\u7684 <code>Glerp</code></li> <li><code>Glerp...</code> \u662f\u4e00\u4e2a\u53ef\u53d8\u6570\u91cf\u7684\u53c2\u6570(\u7c7b\u4f3c\u4e8epython\u4e2d\u7684 <code>*args</code> )\uff0c\u5e76\u4e14\u662f <code>Iterable</code> (\u53ef\u4ee5\u4f7f\u7528foreach)</li> </ul> <p>Josh\u5c55\u793a\u7684\u4f7f\u7528\u7684\u793a\u4f8b</p> <pre><code>ArraySet&lt;String&gt; asetOfStrings = ArraySet.of(\"hi\", \"I'm\", \"here\");\nSystem.out.println(asetOfStrings);\n</code></pre> Output<pre><code>{hi, I'm, here}\n</code></pre>"},{"location":"Notes%20of%20Courses/CS61B/CS61B/#lecture-11-qa","title":"Lecture 11 Q&amp;A","text":""},{"location":"Notes%20of%20Courses/CS61B/CS61B/#1_23","title":"1","text":"<p>Josh\u5c55\u793a\u4e86\u4f7f\u7528 <code>Arrays.sort(T[] a, Comparator&lt;? super T&gt; c)</code> \u51fd\u6570\uff0c\u5c06\u4e00\u4e2a\u6570\u7ec4\u6309\u7167\u81ea\u5b9a\u4e49\u7684\u6392\u5e8f\u65b9\u5f0f\u8fdb\u884c\u6392\u5e8f\u7684\u65b9\u6cd5</p> <pre><code>import org.junit.Test;\nimport java.util.Arrays;\nimport java.util.Comparator;\nimport static org.junit.Assert.assertEquals;\n\npublic class SevenCountComparator implements Comparator&lt;Integer&gt; {\n    @Test\n    public void testSevenCount() {\n        assertEquals(1, sevenCount(7));\n        assertEquals(0, sevenCount(9));\n        assertEquals(2, sevenCount(707));\n        assertEquals(6, sevenCount(77707077));\n    }\n\n    private int sevenCount(int a) {\n        String s = Integer.toString(a);\n        int count = 0;\n        for (int i = 0; i &lt; s.length(); i += 1) {\n            if (s.charAt(i) == '7') {\n                count += 1;\n            }\n        }\n        return count;\n    }\n\n    public int compare(Integer a, Integer b) {\n        return sevenCount(a) - sevenCount(b);\n    }\n\n    public static void main(String[] args) {\n        Integer[] a = {1, 3, 65, 88, 7, 126, 777, 728, 10912983, 99999999};\n        Arrays.sort(a, new SevenCountComparator());\n\n        System.out.println(Arrays.toString(a));\n    }\n}\n</code></pre> Output<pre><code>[1, 3, 65, 88, 126, 10912983, 99999999, 7, 728, 777]\n</code></pre>"},{"location":"Notes%20of%20Courses/CS61B/CS61B/#lecture-12-command-line-programming-git-project-2-preview","title":"Lecture 12 Command Line Programming, Git, Project 2 Preview","text":""},{"location":"Notes%20of%20Courses/CS61B/CS61B/#1_24","title":"1","text":"<p>Josh\u5c55\u793a <code>main</code> \u51fd\u6570 <code>args</code> \u53c2\u6570\u7684\u4f5c\u7528\uff0c\u4f5c\u7528\u5927\u81f4\u662f\u7528\u547d\u4ee4\u884c\u8fd0\u884cjava\u6587\u4ef6\u65f6\u7ed9\u83b7\u53d6\u4f20\u5165\u7684\u53c2\u6570</p> Hello.java<pre><code>public class Hello {\n    public static void main(String[] args) {\n        System.out.println(args[0]);\n        System.out.println(args[1]);\n        System.out.println(args[2]);\n    }\n}\n</code></pre> <pre><code>$ javac Hello.java\n$ java Hello.java one two three four\none\ntwo\nthree\n</code></pre>"},{"location":"Notes%20of%20Courses/CS61B/CS61B/#2_16","title":"2","text":"<p>ppt\u4e2d\u5c55\u793a\u4e86\u53ef\u4ee5\u4f7f\u7528 <code>Integer.parseInt()</code> \u5c06\u5b57\u7b26\u4e32\u8f6c\u6362\u6210\u5bf9\u5e94\u7684\u6570\u5b57\u7684\u65b9\u6cd5</p>"},{"location":"Notes%20of%20Courses/CS61B/CS61B/#3_11","title":"3","text":"<p>Josh\u89e3\u91cagit\u4f7f\u7528git-SHA1\u54c8\u5e0c\u503c\u6765\u5b58\u50a8\u6587\u4ef6\u7684\u65b9\u5f0f</p> <ul> <li> <p>First, git computes the git-SHA1 hash:</p> <ul> <li>HelloWorld.java \u2192 <code>66ccdc645c9d156d5c796dbe6ed768430c1562a2</code></li> </ul> </li> <li> <p>Git creates a folder called <code>.git/objects/66</code></p> <ul> <li>The <code>66</code> is the first two characters of the git-SHA1 hash.</li> </ul> </li> <li> <p>Git stores the contents in a file called</p> <p><code>ccdc645c9d156d5c796dbe6ed768430c1562a2</code>.</p> <ul> <li>File is stored in a compressed format (zlib) to save space.</li> </ul> </li> </ul> <pre><code>$ cd .git\n/.git$ cd objects\n/.git/objects$ cd 66\n/.git/objects/66$ ls\nccdc645c9d156d5c796dbe6ed768430c1562a2\n/.git/objects/66$ cat ~/Scuts/gitview.py\nimport sys\nimport zlib  # A compression / decompression library\nfilename = sys.argv[1]\ncompressed_contents = open(filename, 'rb').read()\ndecompressed_contents = zlib.decompress(compressed_contents)\ntry:\n    print(decompressed_contents.decode('utf-8'))\nexcept:\n    print(decompressed_contents)\n/.git/objects/66$ python3 ~/Scuts/gitview.py ccdc645c9d156d5c796dbe6ed768430c1562a2\nblob 115public class HelloWorld {\n        public static void main(String[] args) {\n                System.out.println(\"Hello World!\");\n        }\n}\n</code></pre>"},{"location":"Notes%20of%20Courses/CS61B/CS61B/#lecture-13-asymptotics-i","title":"Lecture 13 Asymptotics I","text":""},{"location":"Notes%20of%20Courses/CS61B/CS61B/#1_25","title":"1","text":"<p>Big Theta \u548c Big O \u7684\u533a\u522b</p> <p>Whereas Big Theta can informally be thought of as something like \u201cequals\u201d, Big O can be thought of as \u201cless than or equal\u201d.</p> <p>Example, the following are all true:</p> <ul> <li>N\u00b3 + 3N\u2074 \u2208 \u0398(N\u2074)</li> <li>N\u00b3 + 3N\u2074 \u2208 O(N\u2074)</li> <li>N\u00b3 + 3N\u2074 \u2208 O(N\u2076)</li> <li>N\u00b3 + 3N\u2074 \u2208 O(N!)</li> <li>N\u00b3 + 3N\u2074 \u2208 O(N<sup>N!</sup>)</li> </ul> <p>$$   R(N) \u2208 \u0398(f(N)) \u21d2 k_1 \u00b7 f(N) \u2264 R(N) \u2264 k_2 \u00b7 f(N)   $$</p> <p>$$   R(N) \u2208 Of(N)) \u21d2 R(N) \u2264 k_2 \u00b7 f(N)   $$</p>"},{"location":"Notes%20of%20Courses/CS61B/CS61B/#lecture-14-disjoint-sets","title":"Lecture 14 Disjoint Sets","text":""},{"location":"Notes%20of%20Courses/CS61B/CS61B/#1_26","title":"1","text":"<p>\u8fd9\u8282\u8bfeJosh\u8bb2\u6388\u4e86 \u5f97\u5230\u5e94\u7528\u4e8e\u201c\u52a8\u6001\u8fde\u63a5 Dynamic Connectivity\u201d\u95ee\u9898\u7684\u201c\u4e0d\u4ea4\u96c6 Disjoint Sets\u201d\u6570\u636e\u7ed3\u6784\u7684\u8fc7\u7a0b</p> <p>The ideas that made our implementation efficient:</p> <ul> <li>Represent sets as connected components (don't track individual connections).<ul> <li>ListOfSetsDS: Store connected components as a List of Sets (slow, complicated).</li> <li>QuickFindDS: Store connected components as set ids.</li> <li>QuickUnionDS: Store connected components as parent ids.<ul> <li>WeightedQuickUnionDS: Also track the size of each set, and use size to decide on new tree root.<ul> <li>WeightedQuickUnionWithPathCompressionDS: On calls to connect and isConnected, set parent id to the root for all items seen.</li> </ul> </li> </ul> </li> </ul> </li> </ul> Implementation Runtime ListOfSetsDS O(NM) QuickFindDS \u0398(NM) QuickUnionDS O(NM) WeightedQuickUnionDS O(N + M log N) WeightedQuickUnionWithPathCompressionDS O(N + M \u03b1(N)) <p>Runtimes are given assuming:</p> <ul> <li>We have a DisjointSets object of size N.</li> <li>We perform M operations, where an operation is defined as either a call to <code>connected</code> or <code>isConnected</code>.</li> </ul> <p>\u8981\u70b91</p> <p>\u5c06\u8fde\u901a\u5206\u91cf connected components\u7528\u96c6\u5408\u8868\u793a(\u5ffd\u7565\u5177\u4f53\u7684\u8fb9)\uff0c\u4f8b\u5982</p> <code>connect(2, 3)</code> \u64cd\u4f5c\u524d<code>connect(2, 3)</code> \u64cd\u4f5c\u540e <pre><code>flowchart TD\n0 --- 4\n0 --- 1 --- 2\n3 --- 5\n6</code></pre> <pre><code>{0, 1, 2, 4}, {3, 5}, {6}\n</code></pre> <pre><code>flowchart TD\n0 --- 4\n0 --- 1 --- 2 --- 3\n3 --- 5\n6</code></pre> <pre><code>{0, 1, 2, 4, 3, 5}, {6}\n</code></pre> <p>\u8981\u70b92</p> <p>QuickUnionDS\uff0c\u7528\u4e00\u4e2a\u6570\u7ec4\u6807\u8bb0\u6bcf\u4e2a\u8282\u70b9\u7684\u7236\u8282\u70b9(\u4f7f\u5f97\u6bcf\u4e2a\u8fde\u901a\u5206\u91cf\u50cf\u4e00\u4e2a\u6811\u4e00\u6837)\uff0c\u8fd9\u6837\u53ef\u4ee5\u51cf\u5c11 <code>connect</code> \u6240\u9700\u8981\u505a\u7684\u66f4\u6539/\u6240\u9700\u8981\u7684\u64cd\u4f5c(\u76f8\u6bd4\u4e8eListOfSetsDS)</p> <code>parent</code> -1 0 1 -1 0 3 -1 0 1 2 3 4 5 6 <pre><code>flowchart TD\n0 --- 4\n0 --- 1 --- 2\n3 --- 5\n6</code></pre> <p>\u8981\u70b93</p> <p>WeightedQuickUnionDS\uff0c\u6807\u8bb0\u6bcf\u4e2a\u6811\u7684\u5927\u5c0f\uff0c\u6bcf\u6b21 <code>connected</code> \u65f6\uff0c\u90fd\u5c06\u5c0f\u6811\u7684\u6839\u8fde\u63a5\u5230\u5927\u6811\u7684\u6839\u4e0a\uff0c\u8fd9\u6837\u80fd\u4f7f\u5f97 <code>connected</code> \u540e\u7684\u6811\u7684\u5c42\u6570\u4e0d\u4f1a\u592a\u9ad8\uff0c\u4f7f\u5f97 <code>connect</code> \u548c <code>isConnected</code> \u7684\u590d\u6742\u5ea6\u90fd\u964d\u5230 O(log N).</p> <pre><code>flowchart TD\n0 --- 1\n0 --- 2\n0 --- 3\n0 --- 4\n0 --- 5\n6 --- 7\n6 --- 8 --- 9</code></pre> <p>Two common approaches:</p> <ul> <li> <p>Use values other than -1 in <code>parent</code> array for root nodes to track size.</p> <code>parent</code> -6 0 0 0 0 0 -4 6 6 8 0 1 2 3 4 5 6 7 8 9 </li> <li> <p>Create a separate <code>size</code> array.</p> <code>size</code> 6 1 1 1 1 1 4 1 2 1 0 1 2 3 4 5 6 7 8 9 </li> </ul> <p>\u8981\u70b94</p> <p>WeightedQuickUnionWithPathCompressionDS\uff0c\u5728 <code>isConnected</code> \u65f6\u628a\u7ecf\u8fc7\u7684\u8282\u70b9\u76f4\u63a5\u6539\u4e3a\u8fde\u63a5\u5230\u6839\u8282\u70b9\u4e0a</p> <code>isConnected(15, 10)</code> \u524d<code>isConnected(15, 10)</code> \u540e <pre><code>flowchart TD\n0 --- 1([\"1\"]) --- 5([\"5\"]) --- 11([\"11\"]) --- 15([\"15\"])\n5 --- 12\n1 --- 6 --- 13\n1 --- 7\n0 --- 2 --- 8 --- 14\n2 --- 9\n0 --- 3([\"3\"]) --- 10([\"10\"])\n0 --- 4</code></pre> <pre><code>flowchart TD\n0 --- 15([\"15\"])\n0 --- 11([\"11\"])\n0 --- 5([\"5\"])\n0 --- 1([\"1\"])\n5 --- 12\n1 --- 6 --- 13\n1 --- 7\n0 --- 2 --- 8 --- 14\n2 --- 9\n0 --- 3([\"3\"])\n0 --- 10([\"10\"])\n0 --- 4</code></pre> <p>\u4f7f\u5f97N\u4e2a\u8282\u70b9M\u6b21\u64cd\u4f5c\u7684\u590d\u6742\u5ea6\u51cf\u5c11\u5230 O(N + M lg* N)</p> <p>\\(2\\) = lg* 1</p> <p>\\(2^{2^{2^{2}}}\\) = lg* 4</p> <p>...</p>"},{"location":"Notes%20of%20Courses/CS61B/CS61B/#lec-15-asymptotics-ii","title":"Lec 15 Asymptotics II","text":""},{"location":"Notes%20of%20Courses/CS61B/CS61B/#1_27","title":"1","text":"<p>Josh\u8bb2\u89e3\u52a0\u5165\u4e00\u6b21Merge\u5bf9\u9009\u62e9\u6392\u5e8f Selection Sort\u7684\u5177\u4f53\u52a0\u901f\u8fc7\u7a0b\uff0c\u5e76\u8fdb\u800c\u8bb2\u89e3\u5f52\u5e76\u6392\u5e8f Merge Sort\u65f6\u5982\u4f55\u6bd4\u9009\u62e9\u6392\u5e8f\u66f4\u5feb\u7684</p> <p>Runtime of selection sort is \u0398(N\u00b2):</p> <ul> <li>Look at all N unfixed items to find smallest.</li> <li>Then look at N-1 remaining unfixed.</li> <li>...</li> <li>Look at last two unfixed items.</li> <li>Done, sum is 2+3+4+5+...+N = \u0398(N\u00b2)</li> </ul> <p>Given that runtime is quadratic, for N = 64, we might sat the runtime for selection sort is 2,048 arbitrary units of time (AU).</p> <p>Using Merge to Speed Up the Sorting Process</p> <p>Merging can give us an improvement over vanilla selection sort:</p> <ul> <li>Selection sort the left half: \u0398(N\u00b2).</li> <li>Selection sort the right half: \u0398(N\u00b2).</li> <li>Merge the results: \u0398(N).</li> </ul> <p>N=64: ~1088 AU.</p> <ul> <li>Merge: ~64 AU.</li> <li>Selection Sort: ~2*512 = ~1024 AU.</li> </ul> <p>Still \u0398(N\u00b2), but faster since N+2*(N/2)\u00b2 &lt; N\u00b2</p> <ul> <li>~1088 vs. ~2048 AU for N=64.</li> </ul> <p>Mergesort Order of Growth</p> <p>Mergesort has worst case runtime = \u0398(N log N).</p> <ul> <li>Every level takes ~N AU.<ul> <li>Top level takes ~N AU.</li> <li>Next  level takes ~N/2 + ~N/2 =  ~N.</li> <li>One more level down: ~N/4 + ~N/4 + ~N/4 + ~N/4 = ~N.</li> </ul> </li> <li>Thus, total runtime is ~Nk, where k is the number of levels.<ul> <li>How many levels? Goes until we get to size 1.</li> <li>k = log\u2082(N).</li> </ul> </li> <li>Overall runtime is \u0398(N log N).</li> </ul> <p>Mergesort using Recurrence Relations (Extra)</p> <p>C(N): Number of calls to mergesort + number of array writes.   $$   C(N) = \\begin{cases}   1 &amp; : N &lt; 2 \\   2C(N/2) + N &amp; : N \u2265 2 \\   \\end{cases}   $$</p> <p>$$   \\begin{equation}   \\begin{aligned}   C(N) &amp; = 2(2C(N/4) + N/2) + N \\        &amp; = 4C(N/4) + N + N \\        &amp; = 8C(N/8) + N + N + N \\        &amp; = N \\cdot 1 + N + N + \\ldots + N  (k = \\lg N)\\        &amp; = N + N \\lg N \\in \\Theta(N \\lg N)   \\end{aligned}   \\end{equation}   $$</p>"},{"location":"Notes%20of%20Courses/CS61B/CS61B/#lecture-16-adts-sets-maps-bsts","title":"Lecture 16 ADTs, Sets, Maps, BSTs","text":""},{"location":"Notes%20of%20Courses/CS61B/CS61B/#1_28","title":"1","text":"<p>Josh\u8bfe\u4e0a\u63d0\u5230\u7684java\u4e2d\u7684map\u7684\u4f7f\u7528\u793a\u4f8b(\u548cpython\u4e2d\u7684\u5b57\u5178\u7c7b\u4f3c)</p> JavaPython <pre><code>Map&lt;String, Integer&gt; m = new TreeMap&lt;&gt;();\nString[] text = {\"sumomo\", \"mo\", \"momo\", \"mo\", \"momo\", \"no\", \"uchi\"};\n\nfor (String s : text) {\n    int currentCount = m.getOrDefault(s, 0);\n    m.put(s, currentCount + 1);\n}\n</code></pre> <pre><code>m = {}\ntext = [\"sumomo\", \"mo\", \"momo\", \"mo\", \"momo\", \"no\", \"uchi\"]\nfor s in text:\n    current_count = m.get(s, 0)\n    m[s] = current_count + 1\n</code></pre>"},{"location":"Notes%20of%20Courses/CS61B/CS61B/#2_17","title":"2","text":"<p>Josh\u5728\u8bb2\u5230\u4e8c\u5206\u67e5\u627e\u6811\u7684\u63d2\u5165 insert\u65b9\u6cd5\u65f6\uff0c</p> <pre><code>static BST insert(BST T, Key ik) {\n    if (T == null)\n        return new BST(ik);\n    if (ik &lt; T.key)\n        T.left = insert(T.left, ik);\n    else if (ik &gt; T.key)\n        T.right = insert(T.right, ik);\n    return T;\n}\n</code></pre> <p>\u8981\u4f7f\u7528\u4e0a\u9762\u8fd9\u6837\u7684\u4ee3\u7801\u7ed3\u6784\uff0c\u907f\u514d\u4f7f\u7528\u4e0b\u9762\u8fd9\u6837\u7684\u4ee3\u7801(\u6bd4\u4e0a\u9762\u7684\u8981\u590d\u6742\uff0c\u4e5f\u4e0d\u7f8e\u89c2)</p> <p>ARMS LENGTH RECURSION!!!! No good.</p> <p>A common rookie bad habit to avoid:</p> <pre><code>    if (T.left == null)\n        T.left = new BST(ik);\n    else if (T.right = null)\n        T.right = new BST(ik);\n</code></pre>"},{"location":"Notes%20of%20Courses/CS61B/CS61B/#3_12","title":"3","text":"<p>Josh\u8bb2\u5230\uff0c\u5728\u5bf9\u4e8c\u5206\u67e5\u627e\u6811\u8fdb\u884c\u5220\u9664\u64cd\u4f5c\u65f6\uff0c\u5982\u679c\u8981\u5220\u9664\u7684\u8282\u70b9\u6709\u4e24\u4e2a\u5b50\u8282\u70b9\uff0c\u90a3\u4e48\u9700\u8981\u627e\u5230\u5de6\u5b50\u6811\u4e2d\u7684\u6700\u5927\u8282\u70b9(a.k.a predecessor)\u6216\u8005\u53f3\u5b50\u6811\u4e2d\u7684\u6700\u5c0f\u8282\u70b9(a.k.a successor)\uff0c\u7ee7\u7eed\u9012\u5f52\u5730\u5220\u9664\u8fd9\u4e2a\u8282\u70b9\uff0c\u6700\u540e\u7528\u8fd9\u4e2a\u8282\u70b9\u7684\u503c\u6784\u9020\u4e00\u4e2a\u65b0\u7684\u8282\u70b9\u4ee3\u66ff\u88ab\u5220\u9664\u7684\u8282\u70b9\uff0c</p> <p>\u4f8b\u5982\uff0c\u8981\u5220\u9664 <code>k</code></p> <pre><code>flowchart TD\nk[\"k (to be deleted)\"] --- e --- b --- a\nb --- d\ne --- g([\"g\"]) --- f\ng --- null1(\" \")\nk --- v --- p --- m([\"m\"])\np --- r\nv --- y --- x\ny --- z</code></pre> <p>\u90a3\u4e48 <code>g</code> \u662fpredecessor\uff0c<code>m</code> \u662fsuccessor\uff0c</p> <p>\u5982\u679c\u9009\u62e9 <code>g</code> \u4ee3\u66ff <code>k</code> \u7684\u4f4d\u7f6e\uff0c\u90a3\u4e48\u6700\u540e\u7684\u7ed3\u679c\u5c31\u662f</p> <pre><code>flowchart TD\ng --- e --- b --- a\nb --- d\ne --- f\ng --- v --- p --- m\np --- r\nv --- y --- x\ny --- z</code></pre>"},{"location":"Notes%20of%20Courses/CS61B/CS61B/#4_9","title":"4","text":"<p>Josh\u63d0\u5230\uff0c\u4f7f\u7528\u4e8c\u5206\u67e5\u627e\u6811\u6765\u5b9e\u73b0\u4e4b\u524d\u63d0\u5230\u7684map\uff0c\u5c06key\u548cvalue\u4e00\u8d77\u4f5c\u4e3a\u6811\u7684\u4e00\u4e2a\u8282\u70b9\u5373\u53ef\uff0c\u67e5\u627e\u65f6\u6309\u7167key\u7684\u503c\u6765\u67e5\u627e\uff0c\u4f8b\u5982</p> <pre><code>flowchart TD\nsumomo[\"sumomo | 1\"] --- momo[\"momo | 2\"] --- mo[\"mo | 2\"]\nmomo --- no[\"no | 1\"]\nsumomo --- uchi[\"uchi | 1\"]</code></pre>"},{"location":"Notes%20of%20Courses/CS61B/CS61B/#lecture-16-qa","title":"Lecture 16 Q&amp;A","text":""},{"location":"Notes%20of%20Courses/CS61B/CS61B/#1_29","title":"1","text":"<p>\u6709\u4eba\u63d0\u95ee\u8fd9\u4e00\u9898</p> <pre><code>public static void f5(int N, int m) {\n    if (N &lt; 10) { return; }\n    for (int i = 0; i &lt;= N % 10; i++) {\n        f5(N / 10, M / 10);\n        System.out.println(M);\n    }\n}\n</code></pre> <p>\u9898\u76ee\u662f\u95ee\u8fd9\u4e2a\u51fd\u6570\u7684\u65f6\u95f4\u590d\u6742\u5ea6O\u662f\u591a\u5c11\u3002</p> <p>\u6700\u540e\u53d1\u73b0\uff0c\u901a\u8fc7\u53d6\u6700\u574f\u60c5\u51b5\u7684N\uff0c999...9\u5bf9\u5e94\u4f1a <code>println</code> 1+10+100+...=111...1\u6b21\uff0c\u6240\u4ee5\u590d\u6742\u5ea6\u662fO(N)\uff0c</p> <p>\u6240\u4ee5\u6211\u89c9\u5f97\u8fd9\u79cd\u9898\u53ef\u4ee5\u76f4\u63a5\u53d6\u6700\u574f\u7684\u60c5\u51b5\u8fdb\u884c\u5206\u6790\u5224\u65ad</p>"},{"location":"Notes%20of%20Courses/CS61B/CS61B/#lab-6","title":"Lab 6","text":""},{"location":"Notes%20of%20Courses/CS61B/CS61B/#1_30","title":"1","text":"<p>\u5b9e\u9a8c\u8bf4\u660e\u4e2d\u63d0\u5230\u4e86\uff0cjava\u4e2d\u53ef\u4ee5\u8fd9\u6837\u83b7\u53d6\u5230\u8fd0\u884c\u65f6\u7684\u8def\u5f84(\u5f53\u524d\u5de5\u4f5c\u76ee\u5f55 current working directory)</p> <pre><code>System.getProperty(\"user.dir\")\n</code></pre> <p>The current working directory (CWD) of a Java program is the directory from where you execute that Java program. You can access the CWD from within a Java program by using <code>System.getProperty(\"user.dir\")</code>.</p> <p>\u6559\u7a0b\u4e2d\u7ed9\u51fa\u4e86IDEA\u4e2d\u8bbe\u7f6e\u5f53\u524d\u5de5\u4f5c\u76ee\u5f55\u7684\u65b9\u6cd5\uff0c</p> <p>In IntelliJ, the CWD is given by the specified directory under Run &gt; Edit Configurations &gt; Working Directory</p> <p>\u300e\u5f53\u524d\u6587\u4ef6\u300f\u4e0b\u7684\u300e\u7f16\u8f91\u914d\u7f6e\u300f&gt;\u300e<code>+</code>\u300f&gt;\u300e\u5e94\u7528\u7a0b\u5e8f\u300f\uff0c\u7136\u540e\u5728\u4e4b\u540e\u7684\u754c\u9762\u91cc\u5c31\u53ef\u4ee5\u8bbe\u7f6e\u5f53\u524d\u5de5\u4f5c\u76ee\u5f55\u4e86</p> <p></p> <p></p> <p></p>"},{"location":"Notes%20of%20Courses/CS61B/CS61B/#2_18","title":"2","text":"<p>\u5b9e\u9a8c\u8bf4\u660e\u4e2d\u7ed9\u51fa\u7684java\u4e2d\u5173\u4e8e\u6587\u4ef6\u548c\u6587\u4ef6\u5939\u7684\u64cd\u4f5c</p> <p>Files</p> <p>You can make a File object in Java with the File constructor and passing in the path to the file:</p> <pre><code>File f = new File(\"dummy.txt\");\n</code></pre> <p>The above path is a relative path where we are referring to the file <code>dummy.txt</code> in our Java program\u2019s CWD. You can think of this File object as a reference to the actual file <code>dummy.txt</code> - when we create the new File object, we aren\u2019t actually creating the <code>dummy.txt</code> file itself, we are just saying, \u201cin the future, when I do operations with <code>f</code>, I want to do these operations on <code>dummy.txt</code>\u201d. To actually create this <code>dummy.txt</code> file, we could call</p> <pre><code>f.createNewFile();\n</code></pre> <p>and then the file <code>dummy.txt</code> will actually now exist (and you could see it in File Explorer / Finder).</p> <p>You can check if the file \u201cdummy.txt\u201d already exists or not with the <code>exists</code> method of the File class:</p> <pre><code>f.exists()\n</code></pre> <p>Actually writing to a file is pretty ugly in Java. To keep things simple, we\u2019ve provided you with a <code>Utils.java</code>. This class will be very handy for this lab and in Gitlet. You should look at the list of available methods in <code>Utils.java</code> to get a sense of what it can do for you. See the FAQ at the bottom of this lab for hints on what to focus on.</p> <p>As an example, if you want to write a String to a file, you can do the following:</p> <pre><code>Utils.writeContents(f, \"Hello World\");\n</code></pre> <p>Now <code>dummy.txt</code> would now have the text \u201cHello World\u201d in it.</p> <p>Directories</p> <p>Directories in Java are also represented with File objects. For example, you can make a File object that represents a directory:</p> <pre><code>File d = new File(\"dummy\");\n</code></pre> <p>Similar to files, this directory might not actually exist in your file system. To actually create the folder in your file system, you can run:</p> <pre><code>d.mkdir();\n</code></pre> <p>and now there should be a folder called <code>dummy</code> in your CWD. You should also checkout the <code>mkdirs()</code> method, whose documentation can be found here.</p>"},{"location":"Notes%20of%20Courses/CS61B/CS61B/#3_13","title":"3","text":"<p>\u5b9e\u9a8c\u8bf4\u660e\u4e2d\u63d0\u5230\u4e86java\u4e2d\u5c06\u53d8\u91cf\u4fdd\u5b58\u5230\u6587\u4ef6\u4e2d\u7684\u65b9\u6cd5\uff0c\u5373\u8ba9\u81ea\u5b9a\u4e49\u7684\u7c7b\u5b9e\u73b0 <code>java.io.Serializable</code> \u8fd9\u4e2a\u63a5\u53e3\uff0c\u7136\u540e\u5c31\u53ef\u4ee5(\u7ed3\u5408java\u4e2d\u5bf9\u6587\u4ef6\u7684\u64cd\u4f5c)\u5c06\u53d8\u91cf\u5199\u5165\u5230\u6307\u5b9a\u7684\u6587\u4ef6\u5f53\u4e2d\u6216\u4ece\u6587\u4ef6\u4e2d\u8bfb\u53d6(\u611f\u89c9\u548cpython\u4e2d\u7684pickle\u5305\u6bd4\u8f83\u7c7b\u4f3c)\uff0c\u4f8b\u5982</p> <pre><code>import java.io.Serializable;\n\npublic class Model implements Serializable {\n    ...\n}\n</code></pre> \u5199\u5165<pre><code>Model m = ....;\nFile outFile = new File(saveFileName);\ntry {\n    ObjectOutputStream out =\n        new ObjectOutputStream(new FileOutputStream(outFile));\n    out.writeObject(m);\n    out.close();\n} catch (IOException excp) {\n    ...\n}\n</code></pre> \u8bfb\u53d6<pre><code>Model m;\nFile inFile = new File(saveFileName);\ntry {\n    ObjectInputStream inp =\n        new ObjectInputStream(new FileInputStream(inFile));\n    m = (Model) inp.readObject();\n    inp.close();\n} catch (IOException | ClassNotFoundException excp) {\n    ...\n    m = null;\n}\n</code></pre>"},{"location":"Notes%20of%20Courses/CS61B/CS61B/#4_10","title":"4","text":"<p>\u5728\u4f7f\u7528 <code>make</code> \u65f6\uff0c\u9700\u8981\u4f7f\u7528git bash\uff0c\u4f7f\u7528powershell\u65f6\u51fa\u73b0\u4e86\u8fd9\u6837\u7684\u62a5\u9519</p> <pre><code>PS C:\\Github\\CS-61B-Spring-2021\\hwCode\\lab6&gt; make check              \n\"C:/Program Files (x86)/GnuWin32/bin/make\" -C testing PYTHON=python3 TESTER_FLAGS=\"\" check\nmake[1]: Entering directory `C:/Github/CS-61B-Spring-2021/hwCode/lab6/testing'\n\u7cfb\u7edf\u627e\u4e0d\u5230\u6307\u5b9a\u7684\u8def\u5f84\u3002\n'true' \u4e0d\u662f\u5185\u90e8\u6216\u5916\u90e8\u547d\u4ee4\uff0c\u4e5f\u4e0d\u662f\u53ef\u8fd0\u884c\u7684\u7a0b\u5e8f\n\u6216\u6279\u5904\u7406\u6587\u4ef6\u3002\nmake[1]: *** [check] \u9519\u8bef 1\nmake[1]: Leaving directory `C:/Github/CS-61B-Spring-2021/hwCode/lab6/testing'\nmake: *** [check] \u9519\u8bef 2\n</code></pre> <p>\u6362\u6210git bash\u4e4b\u540e\uff0c\u8fd0\u884c <code>make check</code> \u65f6\u51fa\u73b0\u4e86\u8fd9\u6837\u7684\u62a5\u9519</p> <pre><code>$ make check\n\"C:/Program Files (x86)/GnuWin32/bin/make\" -C testing PYTHON=python3 TESTER_FLAGS=\"\" check\nmake[1]: Entering directory `C:/Github/CS-61B-Spring-2021/hwCode/lab6/testing'\nTesting application capers.Main...\npython3 tester.py  --src=our-src our/*.in\nmake[1]: *** [check] \u9519\u8bef 49\nmake[1]: Leaving directory `C:/Github/CS-61B-Spring-2021/hwCode/lab6/testing'\nmake: *** [check] \u9519\u8bef 2\n</code></pre> <p>\u53d1\u73b0\u6309\u7167\u4efb\u52a1\u8bf4\u660eFAQs\u4e2d\u8bf4\u7684\uff0c\u7531\u4e8ewindows\u4e2d\u7684\u8fd0\u884cpython\u7684\u547d\u4ee4\u662f <code>python</code> \u800c\u4e0d\u662f <code>python3</code> \uff0c\u6240\u4ee5\u52a0\u4e00\u4e2a <code>PYTHON=python</code> \u5373\u53ef</p> <pre><code>make check PYTHON=python\n</code></pre>"},{"location":"Notes%20of%20Courses/CS61B/CS61B/#lecture-17-b-trees-2-3-2-3-4-trees","title":"Lecture 17 B-Trees (2-3, 2-3-4 Trees)","text":""},{"location":"Notes%20of%20Courses/CS61B/CS61B/#1_31","title":"1","text":"<p>Big O\u867d\u7136\u7c7b\u4f3c\u4e8e\u5c0f\u4e8e\u7b49\u4e8e\uff0c\u4f46\u662f\u901a\u5e38\u7528\u4e8e\u8868\u793a\u6700\u574f\u7684\u60c5\u51b5\u7684Big Theta\u662f\u8fd9\u6837</p> <p>(Big O) Allows us to make simple blanket statements, e.g. can just say \u201cbinary search is O(log N)\u201d instead of \u201cbinary search is \u0398(log N) in the worst cast\u201d.</p>"},{"location":"Notes%20of%20Courses/CS61B/CS61B/#2_19","title":"2","text":"<p>\u6811\u7684\u9ad8\u5ea6 Height\u3001\u6df1\u5ea6 Depth\u7684\u5b9a\u4e49\uff0c\u4ee5\u53ca\u5b83\u4eec\u548c\u8fd0\u884c\u65f6\u95f4 Runtime\u7684\u5173\u7cfb</p> <pre><code>flowchart TD\nk --- e --- b --- a\nb --- d\ne --- g --- f\ng --- j\nk --- v --- p --- r --- s\nv --- y --- z</code></pre> <p>Height and Depth</p> <p>Height and average depth are important properties of BSTs.</p> <ul> <li>The \u201cdepth\u201d of a node is how far it is from the root, e.g. depth(g) = 2.</li> <li>The \u201cheight\u201d of a tree is the depth of its deepest leaf, e.g. height(T) = 4.</li> <li>The \u201caverage depth\u201d of a tree is the average depth of a tree's nodes.<ul> <li>(0x1 + 1x2 + 2x4 + 3x6 + 4x1)/(1+2+4+6+1) = 2.35</li> </ul> </li> </ul> <p>Height, Depth and Runtime</p> <p>Height and average depth determine runtimes for BST operations.</p> <ul> <li>The \u201cheight\u201d of a tree determines the worst case runtime to find a node.<ul> <li>Example: Worst case is contains(s), requires 5 comparisons (height + 1).</li> </ul> </li> <li>The \u201caverage depth\u201d determines the average case runtime to find a node.<ul> <li>Example: Average case is 3.35 comparisons (average depth + 1).</li> </ul> </li> </ul>"},{"location":"Notes%20of%20Courses/CS61B/CS61B/#3_14","title":"3","text":"<p>ppt\u4e2d\u5c55\u793a\u7684\u4e00\u4e2a3\u9636B\u6811\u6dfb\u52a0\u5143\u7d20\u53d8\u5316\u7684\u8fc7\u7a0b</p> <p></p>"},{"location":"Notes%20of%20Courses/CS61B/CS61B/#4_11","title":"4","text":"<p>\u7279\u6b8aB\u6811\u7684\u522b\u79f0</p> <ul> <li>B-trees of order L=3 (like we used today) are also called a 2-3-4 tree or a 2-4 tree.<ul> <li>\u201c2-3-4\u201d refers to the number of children that a node can have, e.g. a 2-3-4 tree node may have 2, 3, or 4 children.</li> </ul> </li> <li>B-trees of order L=2 are also called a 2-3 tree.</li> </ul> <p>B-Trees are most popular in two specific contexts:</p> <ul> <li>Small L (L=2, L=3):<ul> <li>Used as a conceptually simple balanced search tree (as today).</li> </ul> </li> <li>L is very large (say thousands).<ul> <li>Used in practice for databases and filesystems (i.e. systems with very large records).</li> </ul> </li> </ul> <p>B\u6811\u7684\u4e24\u4e2a\u4e0d\u53d8\u5f0f Invariant</p> <ul> <li>All leaves must be the same distance from the source.</li> <li>A non-leaf node with k items must have exactly k+1 children.</li> </ul> <p>B\u6811\u7684\u9ad8\u5ea6\uff1a\u5728 ~log<sub>L+1</sub>(N) \u548c ~log\u2082(N) \u4e4b\u95f4</p>"},{"location":"Notes%20of%20Courses/CS61B/CS61B/#5_7","title":"5","text":"<p>B\u6811\u7684\u8fd0\u884c\u65f6\u95f4 Runtime</p> <p>Runtime for <code>contains</code></p> <p>Runtime for contains:</p> <ul> <li>Worst case number of nodes to inspect: H + 1</li> <li>Worst case number of items to inspect per node: L</li> <li>Overall runtime: O(HL)</li> </ul> <p>Since H = \u0398(log N), overall runtime is O(L log N).</p> <ul> <li>Since L is a constant, runtime is therefore O(log N).</li> </ul> <p>Runtime for <code>add</code>:</p> <ul> <li>Worst case number of nodes to inspect: H + 1</li> <li>Worst case number of items to inspect per node: L</li> <li>Worst case number of split operations: H + 1</li> <li>Overall runtime: O(HL)</li> </ul> <p>... O(log N).</p>"},{"location":"Notes%20of%20Courses/CS61B/CS61B/#lecture-18-red-black-trees","title":"Lecture 18 Red Black Trees","text":""},{"location":"Notes%20of%20Courses/CS61B/CS61B/#1_32","title":"1","text":"<p>Josh\u4ecb\u7ecd\u5230\u7ea2\u9ed1\u6811\u548c2-3 tree\u662f\u4e00\u6837\u7684(\u6570\u5b66\u4e0a\u53ef\u4ee5\u53eb\u505a\u53cc\u5c04 bijection)\uff0c\u4e0b\u56feppt\u4e2d\u5c55\u793a\u7684\u662f\u5de6\u503e Left-Leaning\u7ea2\u9ed1\u6811\uff0c\u5de6\u503e\u5373\u4ee3\u8868 \u8868\u793a2-3tree\u4e2d\u540c\u4e00\u4e2a\u8282\u70b9\u4e0a\u4e24\u4e2a\u5143\u7d20\u7684\u7ea2\u9ed1\u6811\u7684\u4e24\u4e2a\u8282\u70b9 \u4e4b\u95f4\u7528\u8fde\u63a5\u5de6\u5b50\u6811\u7684\u7ebf\u8fdb\u884c\u8fde\u63a5</p> <p></p> <p>Some handy LLRB properties:</p> <ul> <li>No node has two red links [otherwise it'd be a analogous to a 4-node, which are disallowed in 2-3 trees].</li> <li>Every path from root to a leaf has same number of black links [because 2-3 trees have the same number of links to every leaf]. LLRBs are therefore balanced.</li> </ul>"},{"location":"Notes%20of%20Courses/CS61B/CS61B/#2_20","title":"2","text":"<p>Josh\u901a\u8fc74\u4e2a\u4f8b\u5b50\uff0c\u8bb2\u89e3\u4e86\u7ea2\u9ed1\u6811\u5982\u4f55\u6784\u5efa\u7684\u8fc7\u7a0b</p> <ul> <li>When insering: Use a red link.</li> <li>If there is a right leaning \u201c3-node\u201d, we have a Left Leaning Violation.<ul> <li>Rotate left the appropriate node to fix.</li> </ul> </li> <li>If there are two consecutive left links, we have an Incorrect 4 Node Violation.<ul> <li>Rotate right the appropriate node to fix.</li> </ul> </li> <li>If there are any nodes with two red children, we have a Temporary 4 Node.<ul> <li>Color flip the node to emulate the split operation.</li> </ul> </li> </ul> <p></p> <p></p> <p></p> <p></p> <p></p>"},{"location":"Notes%20of%20Courses/CS61B/CS61B/#lab-7","title":"Lab 7","text":""},{"location":"Notes%20of%20Courses/CS61B/CS61B/#1_33","title":"1","text":"<p>\u4efb\u52a1\u8bf4\u660e\u4e2d\u63d0\u5230\u4e86\u6cdb\u578b generic\u4e5f\u53ef\u4ee5\u6307\u5b9a\u7c7b\u578b</p> <p>This can be enforced in Java with a bounded type parameter. Consider the example below, taken from the Oracle docs:</p> <pre><code>/*\n * Bounded type parameters allow you to invoke methods defined in the bounds:\n * The `isEven` method invokes the `intValue` method defined in the \n * `Integer` class through `n`.\n */\n\npublic class NaturalNumber&lt;T extends Integer&gt; {\n\n    private T n;\n\n    public NaturalNumber(T n)  { this.n = n; }\n\n    public boolean isEven() {\n        return n.intValue() % 2 == 0;\n    }\n\n    // ...\n}\n</code></pre>"},{"location":"Notes%20of%20Courses/CS61B/CS61B/#lecture-19-hashing","title":"Lecture 19 Hashing","text":""},{"location":"Notes%20of%20Courses/CS61B/CS61B/#1_34","title":"1","text":"<p>Josh\u63d0\u5230\u901a\u8fc7\u5c06\u54c8\u5e0c\u8868\u4ece\u50a8\u5b58 <code>true</code> \u6216 <code>false</code> \u6539\u6210\u50a8\u5b58\u54c8\u5e0c\u503c\u4e3a\u5bf9\u5e94\u4e0b\u6807\u7684\u5bf9\u8c61\u6765\u89e3\u51b3 \u6b67\u4e49 Ambiguity \u7684\u95ee\u9898</p> <p>\u800c\u53ef\u4ee5\u4f7f\u7528\u4e0d\u540c\u7684\u6570\u636e\u7ed3\u6784\u53bb\u5b9e\u73b0\u8fd9\u4e2a\u65b9\u6cd5</p> <p>Resolving Ambiguity</p> <p>Suppose N items have the same numerical representation h:</p> <ul> <li>Instead of storing <code>true</code> in position h, store a \u201cbucket\u201d of these N items at position h.</li> </ul> <p>How to implement a \u201cbucket\u201d?</p> <ul> <li>Conceptually simplest way: LinkedList.</li> <li>Could also use ArrayLists.</li> <li>Could also use an ArraySet.</li> <li>Will see it doesn't really matter what you do.</li> </ul> <p>\u8fd8\u80fd\u518d\u8fdb\u4e00\u6b65\u5bf9\u54c8\u5e0c\u503c\u53d6\u6a21\uff0c\u800c\u51cf\u5c11\u4e0b\u6807\u7684\u603b\u6570</p> <ul> <li>Data is converted by hash function into an integer representation called a hash code.</li> <li>The hash code is then reduced to a valid index, usually using the modulus operators, e.g. 2348762878 % 10 = 8.</li> </ul> <p>\u4f46\u662f\u8fd9\u6837\u4f1a\u4f7f\u5f97\u6bcf\u4e2abucket\u7684\u957f\u5ea6\u4e3a\u0398(N) (\u5219\u54c8\u5e0c\u8868\u7684\u64cd\u4f5c\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e5f\u662f\u0398(N) )\uff0c\u6240\u4ee5\u901a\u8fc7\u52a8\u6001\u589e\u52a0bucket\u7684\u4e2a\u6570\u6765\u4f7f\u5f97\u65f6\u95f4\u590d\u6742\u5ea6\u53d8\u6210O(1)</p> <p>One example strategy: When N/M is \u2265 1.5, then double M.</p> <ul> <li>We often call this process of increasing M \u201cresizing\u201d.</li> <li>N/M is often called the \u201cload factor\u201d. It represents how full the hash table is.</li> </ul>"},{"location":"Notes%20of%20Courses/CS61B/CS61B/#2_21","title":"2","text":"<p>Josh\u63d0\u5230\u4e86\u4e24\u4e2a\u9700\u8981\u6ce8\u610f\u7684\u8b66\u544a</p> <p>Two Important Warnings When Using HashMaps/HashSets</p> <p>Warning #1: Never store objects that can change in a <code>HashSet</code> or <code>HashMap</code>!</p> <ul> <li>If an object's variables changes, then its hashCode changes. May result in items getting lost.</li> </ul> <p>Warning #2: Never override <code>equals</code> without also overriding <code>hashCode</code>.</p> <ul> <li>Can also lead to items getting lost and genarally weird behavior.</li> <li>HashMaps and HashSets use equals to determine if an item exists in a particular bucket.</li> <li>See HW3 or the study guide problems.</li> </ul>"},{"location":"Notes%20of%20Courses/CS61B/CS61B/#homework-2","title":"Homework 2Q1 Asymptotic Warmup32 PointsQ2 Asymptotic Potpourri32 PointsQ2 WQU32 PointsQ4 Switcheroo32 PointsQ5 Mechanical Hashing32 Points","text":"<p>\u6211\u7684\u7b54\u6848(\u597d\u50cf\u5b98\u65b9\u6ca1\u6709\u63d0\u4f9b\u53c2\u8003\u7b54\u6848)</p> \u6211\u7684\u7b54\u6848\u53ca\u601d\u8def <p>HW2: Conceptual Review</p> <p></p> <p>Give the tightest asymptotic bound on <code>foo(n)</code>.</p> <pre><code>public int foo(int n) {\n   if (n == 0) {\n      return 0;\n   }\n   bloop(n);\n   return foo(n/3) + foo(n/3) + foo(n/3);\n\npublic int bloop(int n) {\n   for (int i = 0; i &lt; n; i += 1) {\n      System.out.println(\"Ah, loops too\");\n   }\n   return n;\n}\n</code></pre> <ul> <li> \\(\\Omega(1)\\)</li> <li> \\(\\Omega(\\log(n))\\)</li> <li> \\(\\Omega(n)\\)</li> <li> \\(\\Omega(n \\cdot \\log(n))\\)</li> <li> \\(\\Omega(n^2)\\)</li> <li> \\(\\Omega(n^3)\\)</li> <li> \\(\\Omega(3^n)\\)</li> <li> \\(\\Omega(n!)\\)</li> <li> \\(\\Theta(1)\\)</li> <li> \\(\\Theta(\\log(n))\\)</li> <li> \\(\\Theta(n)\\)</li> <li> \\(\\Theta(n \\cdot \\log(n))\\)</li> <li> \\(\\Theta(n^2)\\)</li> <li> \\(\\Theta(n^3)\\)</li> <li> \\(\\Theta(3^n)\\)</li> <li> \\(\\Theta(n!)\\)</li> <li> \\(O(1)\\)</li> <li> \\(O(\\log(n))\\)</li> <li> \\(O(n)\\)</li> <li> \\(O(n \\cdot \\log(n))\\)</li> <li> \\(O(n^2)\\)</li> <li> \\(O(n^3)\\)</li> <li> \\(O(3^n)\\)</li> <li> \\(O(n!)\\)</li> </ul> \u601d\u8def <p><code>foo</code> \u7684\u6bcf\u4e00\u5c42\u9012\u5f52\uff0c<code>foo(n/3) + foo(n/3) + foo(n/3)</code> \u52a0\u8d77\u6765\u521a\u597d\u4f1a <code>println</code> n\u6b21\uff0c\u800c\u4e00\u5171\u4f1a\u6709 \\(\\log_3 n\\) \u5c42\u9012\u5f52\uff0c\u6240\u4ee5\u662f \\(\\Theta(n \\cdot \\log(n))\\)</p> <p></p> <p>Note: This is the hardest problem on this Homework. If you are stuck on it for a long time, move on to other problems, and post on Ed or come to Office Hours so we can help you.</p> <p>Give the runtime of the following functions in \\(\\Theta\\) notation. Your answer should be a function of N that is as simple as possible with no unnecessary leading constants or lower order terms.</p> <p>Q2.1 Mystery 18 Points</p> <pre><code>public void mystery1(int n) {\n   for (int i = n; i &gt; 0; i = i / 2) {\n      for (int j = 0; j &lt; 100000000; j += 2) {\n         System.out.println(\"Hello World\");\n      }\n   }\n}\n</code></pre> <ul> <li> \\(1\\)</li> <li> \\(\\log(n)\\)</li> <li> \\(n\\)</li> <li> \\(n \\cdot \\log(n)\\)</li> <li> \\((\\log(n))^2\\)</li> <li> \\(n^2\\)</li> <li> \\(n^2\\cdot\\log(n)\\)</li> <li> \\(2^n\\)</li> <li> \\(n!\\)</li> <li> Other</li> </ul> <p>Q2.2 Mystery 28 Points</p> <pre><code>public void mystery2(int n) {\n   for (int i = 1; i &lt; n; i += 1) {\n      for (int j = 0; j &lt; n; j += 1) {\n         i = i * 2;\n         j = j * 2;\n      }\n   }\n}\n</code></pre> <ul> <li> \\(1\\)</li> <li> \\(\\log(n)\\)</li> <li> \\(n\\)</li> <li> \\(n \\cdot \\log(n)\\)</li> <li> \\((\\log(n))^2\\)</li> <li> \\(n^2\\)</li> <li> \\(n^2\\cdot\\log(n)\\)</li> <li> \\(2^n\\)</li> <li> \\(n!\\)</li> <li> Other</li> </ul> \u601d\u8def <p>\u5f53\u5185\u90e8 <code>j</code> \u7684\u5faa\u73af\u7ed3\u675f\u7684\u65f6\u5019( <code>j &gt;= n</code> \u65f6)\uff0c\u57fa\u672c\u4e0a\u4e5f\u6709 <code>i &gt;= n</code> \u4e86\uff0c\u5916\u90e8 <code>i</code> \u7684\u5faa\u73af\u5927\u6982\u53ea\u80fd\u5faa\u73af1\u52302\u6b21\uff0c\u56e0\u6b64\u662f \\(\\Theta(\\log(n))\\)</p> <p>Q2.3 Mystery 38 Points</p> <pre><code>public void mystery3(int n) {\n    for (int i = n; i &gt; 0; i = i / 2) {\n        for (int j = 1; j &lt; i * i; j *= 2) {\n            System.out.println(\"Hello World\");\n        }\n    }\n}\n</code></pre> <p>What sum represents the work done by <code>mystery3(n)</code>?</p> <ul> <li> \\(1 + 2 + 3 + \\cdots + n\\)</li> <li> \\(1 + 2 + 3 + \\cdots + \\log(n)\\)</li> <li> \\(2^0 + 2^1 + 2^2 + \\cdots + 2^{\\log(n)}\\)</li> <li> \\(2^0 + 2^1 + 2^2 + \\cdots + 2^n\\)</li> <li> \\(2^0 + 2^1 + 2^2 + \\cdots + n^2\\)</li> <li> \\(\\log(n^2) + \\log\\left(\\frac{n^2}{2}\\right) + \\log\\left(\\frac{n^2}{2^2}\\right) + \\log\\left(\\frac{n^2}{2^3}\\right) + \\cdots + 1\\)</li> <li> \\(\\log(n) + \\log\\left(\\frac{n}{2}\\right) + \\log\\left(\\frac{n}{3}\\right) + \\cdots + 1\\)</li> <li> Other</li> </ul> <p>Q2.4 Mystery 48 Points</p> <p>Here, assume that the <code>SLList</code> constructor, and the <code>size</code> and <code>addFirst</code> methods take constant time.</p> <pre><code>public void mystery4(int n) {\n    SLList&lt;Integer&gt; list = new SLList&lt;&gt;();\n    for (int i = 1; list.size() &lt; n; i += 1) {\n        for (int j = 0; j &lt; i; j += 1) {\n            list.addFirst(j);\n        }\n        System.out.print(list.size() + \" + \");\n    }\n}\n</code></pre> <ul> <li> \\(1\\)</li> <li> \\(\\log(n)\\)</li> <li> \\(n\\)</li> <li> \\(n \\cdot \\log(n)\\)</li> <li> \\((\\log(n))^2\\)</li> <li> \\(n^2\\)</li> <li> \\(n^2\\cdot\\log(n)\\)</li> <li> \\(2^n\\)</li> <li> \\(n!\\)</li> <li> Other</li> </ul> <p>Q3.1 Mechanical8 Points</p> <p>Here, fill in the value in each index of the resulting underlying array of the Weighted Quick Union object.</p> <p>Value in index 0:</p> <pre><code>5\n</code></pre> <p>Value in index 1:</p> <pre><code>0\n</code></pre> <p>Value in index 2:</p> <pre><code>5\n</code></pre> <p>Value in index 3:</p> <pre><code>2\n</code></pre> <p>Value in index 4:</p> <pre><code>2\n</code></pre> <p>Value in index 5:</p> <pre><code>-5\n</code></pre> <p>Value in index 6:</p> <pre><code>-1\n</code></pre> <p>Value in index 7:</p> <pre><code>5\n</code></pre> <p>Value in index 8:</p> <pre><code>-1\n</code></pre> <p>Value in index 9:</p> <pre><code>5\n</code></pre> <p>Value in index 10:</p> <pre><code>-1\n</code></pre> \u601d\u8def <p>\u8fd9\u9898\u4e2d\u5173\u952e\u7684\u7ed3\u675f\u5faa\u73af\u7684\u5224\u65ad\u6761\u4ef6\u662f <code>list.size() &lt; n</code> \uff0c\u6240\u4ee5\u5728\u7ed3\u675f\u524d\uff0c\u94fe\u8868\u53ea\u4f1a\u88ab\u6dfb\u52a0n\u4e2a\u5de6\u53f3\u7684\u5143\u7d20\uff0c\u6240\u4ee5\u662f \\(\\Theta(n)\\)</p> <p></p> <p>Draw the Weighted Quick Union object on 0 through 10, that results from the following <code>connect</code> calls. Do not use path compression. Note that if we connect two sets of  equal weight, by convention we make the set whose root has a smaller number the child of the other. We use the convention that if an element is the root of the set, its array value is the weight of the set negated.</p> <pre><code>connect(0, 1);\nconnect(2, 3);\nconnect(9, 5);\nconnect(5, 7);\nconnect(7, 1);\nconnect(4, 2);\nconnect(3, 1);\n</code></pre> \u601d\u8def <p>\u7528\u8868\u683c\u8bb0\u5f55\u6570\u7ec4\u7684\u53d8\u5316\u5982\u4e0b</p> \u6570\u7ec4\u4e0b\u6807 0 1 2 3 4 5 6 7 8 9 10 \u521d\u59cb -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 connect(0, 1) -2 0 connect(2, 3) -2 2 connect(9, 5) -2 5 connect(5, 7) -3 5 connect(7, 1) 5 -4 connect(4, 2) -3 2 connect(3, 1) 5 -5 \u7ed3\u675f 5 0 5 2 2 -5 -1 5 -1 5 -1 <p>Q3.2 Best and Worst Heights8 Points</p> <p>Assume that a single node has a height of 0. What are the shortest and tallest heights for a Quick Union object with 16 connected elements? What about for a Weighted Quick Union object?</p> <p>Quick Union: Shortest</p> <pre><code>1\n</code></pre> <p>Quick Union: Tallest</p> <pre><code>15\n</code></pre> <p>Weighted Quick Union: Shortest</p> <pre><code>1\n</code></pre> <p>Weighted Quick Union: Tallest</p> <pre><code>4\n</code></pre> \u601d\u8def <p>\u4e24\u8005\u6700\u597d\u7684\u60c5\u51b5\u90fd\u662f\u6240\u6709\u8282\u70b9\u90fd\u8fde\u5728\u540c\u4e00\u4e2a\u6839\u8282\u70b9\u4e0a(\u6240\u4ee5\u9ad8\u5ea6\u90fd\u662f1)\uff0cQuick Union\u6700\u574f\u7684\u60c5\u51b5\u662f\u53d8\u6210\u7c7b\u4f3c\u94fe\u8868\uff0c\u6240\u4ee5\u9ad8\u5ea6\u662fn-1=15\uff0cWeighted Quick Union\u6309\u7167Josh ppt\u4e0a\u7684\u56fe\uff0c\u6700\u574f\u7684\u60c5\u51b5\u7684\u9ad8\u5ea6\u662flog\u2082n=4\u3002</p> <p>\u4e0b\u9762\u4e24\u9898\u7684\u6700\u597d\u6700\u574f\u60c5\u51b5\u4e5f\u5dee\u4e0d\u591a\u5c31\u662f\u8fd9\u6837\u7684\u60c5\u51b5\uff0c\u56e0\u6b64\u7b54\u6848\u7c7b\u4f3c\u3002</p> <p>Q3.3 Connect Runtime8 Points</p> <p>What are the best and worst runtimes for <code>connect</code> in a Quick Union object with \\(n\\) elements? What about in a Weighted Quick Union object?</p> <p>Quick Union: Best Case</p> <ul> <li> \\(1\\)</li> <li> \\(\\log(n)\\)</li> <li> \\(n\\)</li> <li> \\(n \\cdot \\log(n)\\)</li> <li> \\(n^2\\)</li> <li> \\(2^n\\)</li> <li> Other</li> </ul> <p>Quick Union: Worst Case</p> <ul> <li> \\(1\\)</li> <li> \\(\\log(n)\\)</li> <li> \\(n\\)</li> <li> \\(n \\cdot \\log(n)\\)</li> <li> \\(n^2\\)</li> <li> \\(2^n\\)</li> <li> Other</li> </ul> <p>Weighted Quick Union: Best Case</p> <ul> <li> \\(1\\)</li> <li> \\(\\log(n)\\)</li> <li> \\(n\\)</li> <li> \\(n \\cdot \\log(n)\\)</li> <li> \\(n^2\\)</li> <li> \\(2^n\\)</li> <li> Other</li> </ul> <p>Weighted Quick Union: Worst Case</p> <ul> <li> \\(1\\)</li> <li> \\(\\log(n)\\)</li> <li> \\(n\\)</li> <li> \\(n \\cdot \\log(n)\\)</li> <li> \\(n^2\\)</li> <li> \\(2^n\\)</li> <li> Other</li> </ul> <p>Q3.4 isConnected Runtime8 Points</p> <p>What are the best and worst runtimes for <code>isConnected</code> in a Quick Union object with \\(n\\) elements? What about in a Weighted Quick Union object?</p> <p>Quick Union: Best Case</p> <ul> <li> \\(1\\)</li> <li> \\(\\log(n)\\)</li> <li> \\(n\\)</li> <li> \\(n \\cdot \\log(n)\\)</li> <li> \\(n^2\\)</li> <li> \\(2^n\\)</li> <li> Other</li> </ul> <p>Quick Union: Worst Case</p> <ul> <li> \\(1\\)</li> <li> \\(\\log(n)\\)</li> <li> \\(n\\)</li> <li> \\(n \\cdot \\log(n)\\)</li> <li> \\(n^2\\)</li> <li> \\(2^n\\)</li> <li> Other</li> </ul> <p>Weighted Quick Union: Best Case</p> <ul> <li> \\(1\\)</li> <li> \\(\\log(n)\\)</li> <li> \\(n\\)</li> <li> \\(n \\cdot \\log(n)\\)</li> <li> \\(n^2\\)</li> <li> \\(2^n\\)</li> <li> Other</li> </ul> <p>Weighted Quick Union: Worst Case</p> <ul> <li> \\(1\\)</li> <li> \\(\\log(n)\\)</li> <li> \\(n\\)</li> <li> \\(n \\cdot \\log(n)\\)</li> <li> \\(n^2\\)</li> <li> \\(2^n\\)</li> <li> Other</li> </ul> <p></p> <p>Consider the following 2-3 tree:</p> <p></p> <p>Q4.1 Balance the Tree20 Points</p> <p>Convert this 2-3 tree to an LLRB, and describe the 6 LLRB operations to balance the tree after inserting the number 11. The LLRB operations are: <code>rotateRight(x)</code>, <code>rotateLeft(x)</code>, and <code>colorFlip(x)</code></p> <pre><code>rotateLeft(10)\n</code></pre> <pre><code>rotateRight(15)\n</code></pre> <pre><code>colorFlip(11)\n</code></pre> <pre><code>rotateLeft(9)\n</code></pre> <pre><code>rotateRight(17)\n</code></pre> <pre><code>colorFlip(11)\n</code></pre> \u601d\u8def <p>\u539f\u59cb\u7ea2\u9ed1\u6811</p> <p></p> <p>\u63d2\u516511</p> <p></p> <p><code>rotateLeft(10)</code></p> <p></p> <p><code>rotateRight(15)</code></p> <p></p> <p><code>colorFlip(11)</code></p> <p></p> <p><code>rotateLeft(9)</code></p> <p></p> <p><code>rotateRight(17)</code></p> <p></p> <p><code>colorFlip(11)</code></p> <p></p> <p>Q4.2 LLRB Height6 Points</p> <p>After inserting 11 and balancing the LLRB, how many nodes are on along the longest path from the root to a leaf.</p> <pre><code>4\n</code></pre> <p>Q4.3 Red Links6 Points</p> <p>After inserting 11 and balancing the LLRB, how many red links are on along the longest path from the root to a leaf.</p> <pre><code>2\n</code></pre> <p></p> <p>Suppose we insert the following words into an initially empty hash table, in this order: kerfuffle, broom, hroom, ragamuffin, donkey, brekky, blob, zenzizenzizenzic, and yap. Assume that the hash code of a String is just its length (note that this is not actually the hash code for Strings in Java). Use separate chaining to resolve collisions. Assume 4 is the initial size of the hash table array, and double this array\u2019s size when the load factor is equal to 1. Illustrate this hash table with a box-and-pointer diagram.</p> <p>For each index of the final hash table, specify what Strings are stored in it. If it is empty, write <code>None</code>. In your final answer, do not wrap Strings in quotes. </p> <p>If an index has more than 1 String in it, separate them using a comma and a single space. For example, if index 0 stores the Strings <code>one</code> and <code>two</code>, your answer should be <code>one, two</code>.</p> <p>Elements in index 0:</p> <pre><code>zenzizenzizenzic\n</code></pre> <p>Elements in index 1:</p> <pre><code>None\n</code></pre> <p>Elements in index 2:</p> <pre><code>None\n</code></pre> <p>Elements in index 3:</p> <pre><code>yap\n</code></pre> <p>Elements in index 4:</p> <pre><code>blob\n</code></pre> <p>Elements in index 5:</p> <pre><code>broom, hroom\n</code></pre> <p>Elements in index 6:</p> <pre><code>donkey, brekky\n</code></pre> <p>Elements in index 7:</p> <pre><code>None\n</code></pre> <p>Elements in index 8:</p> <pre><code>None\n</code></pre> <p>Elements in index 9:</p> <pre><code>kerfuffle\n</code></pre> <p>Elements in index 10:</p> <pre><code>ragamuffin\n</code></pre> <p>Elements in index 11:</p> <pre><code>None\n</code></pre> <p>Elements in index 12:</p> <pre><code>None\n</code></pre> <p>Elements in index 13:</p> <pre><code>None\n</code></pre> <p>Elements in index 14:</p> <pre><code>None\n</code></pre> <p>Elements in index 15:</p> <pre><code>None\n</code></pre>"},{"location":"Notes%20of%20Courses/CS61B/CS61B/#project-2","title":"Project 2","text":""},{"location":"Notes%20of%20Courses/CS61B/CS61B/#1_35","title":"1","text":"<p>\u5728\u8c03\u7528 <code>gitlet.Utils</code> \u4e2d\u7684 <code>plainFilenamesIn</code> \u65b9\u6cd5\uff0c\u4f7f\u7528\u8fd4\u56de\u7684 <code>List</code> \u7684\u8fc7\u7a0b\u4e2d\uff0c\u53d1\u73b0\u5728\u8c03\u7528 <code>remove</code> \u65b9\u6cd5\u65f6\uff0c\u51fa\u73b0\u4e86 <code>UnsupportedOperationException</code> \u7684\u62a5\u9519\uff0c</p> <p>\u6700\u540e\u5728\u7f51\u4e0a\u641c\u7d22\uff0c\u53d1\u73b0\u662f\u8fd9\u6837\u7684\u539f\u56e0</p> <p>java - Why do I get an UnsupportedOperationException when trying to remove an element from a List? - Stack Overflow</p> <p>(\u6839\u636e\u8fd9\u4e2a\u56de\u7b54)\u5bf9\u6b64\u53ef\u4ee5\u8fd9\u6837\u8fdb\u884c\u4fee\u6539</p> <pre><code>List&lt;String&gt; list = new LinkedList&lt;String&gt;(Arrays.asList(split));\n</code></pre>"},{"location":"Notes%20of%20Courses/CS61B/CS61B/#lecture-21-tree-and-graph-traversals","title":"Lecture 21 Tree and Graph Traversals","text":""},{"location":"Notes%20of%20Courses/CS61B/CS61B/#1_36","title":"1","text":"<p>Josh\u5728\u4ecb\u7ecd\u4e8c\u53c9\u6811\u7684\u4e09\u79cd\u904d\u5386\u65b9\u5f0f\u65f6\uff0c\u63d0\u5230\u4e86\u4e00\u4e2a\u6bd4\u8f83\u65b9\u4fbf\u7684\u5c0f\u6280\u5de7</p> <p></p> <p>A Useful Visual Trick (for Humans, Not Algorithms)</p> <ul> <li>Preorder traversal: We trace a path around the graph, from the top going counter-clockwise. \u201cVisit\u201d every time we pass the LEFT of a node.</li> <li>Inorder traversal: \u201cVisit\u201d when you cross the bottom of a node.</li> <li>Postorder traversal: \u201cVisit\u201d when you cross the right a node.</li> </ul>"},{"location":"git%E7%9B%B8%E5%85%B3/fastgithub/","title":"FastGithub","text":"<p> \u7ea6 11 \u4e2a\u5b57 </p>"},{"location":"git%E7%9B%B8%E5%85%B3/fastgithub/#1","title":"1","text":"<p>FastGithub\u4e0b\u8f7d\u53ca\u4f7f\u7528 - \u77e5\u4e4e (zhihu.com)</p>"},{"location":"git%E7%9B%B8%E5%85%B3/github%20copilot/","title":"Github Copilot","text":"<p> \u7ea6 244 \u4e2a\u5b57  7 \u884c\u4ee3\u7801  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 1 \u5206\u949f</p>"},{"location":"git%E7%9B%B8%E5%85%B3/github%20copilot/#1","title":"1","text":"<p>Copilot\u6fc0\u6d3b\u65b9\u5f0f</p> <ol> <li> <p>\u6210\u529f\u8ba4\u8bc1\u5b66\u751f\u5305\u540e\uff0c\u6253\u5f00GitHub\uff0c\u8fdb\u5165\u4e2a\u4eba\u8bbe\u7f6e-&gt;Billing and plans-&gt;Plans and usage-&gt;Enable GitHub Copilot\u3002</p> </li> <li> <p>\u8df3\u8f6c\u540e\u70b9\u51fbGet access to GitHub Copilot\u5c31\u597d\u5566\u3002</p> </li> <li> <p>\u8df3\u8f6c\u540e\u7684\u9875\u9762\u9009\u62e9Allow\u3002 </p> </li> </ol>"},{"location":"git%E7%9B%B8%E5%85%B3/github%20copilot/#2","title":"2","text":"<p>pycharm\u3001clion\u7b49ide\u5b89\u88c5github copilot\u63d2\u4ef6\u540e\uff0c\u65e0\u6cd5\u767b\u9646\uff0c\u53ef\u4ee5\u5728\u8bbe\u7f6e\u4e2d\u8bbe\u7f6eide\u7684\u7f51\u7edc\u4ee3\u7406</p> <p></p> <p>clash:</p> <ul> <li>\u4e3b\u673a\uff1a127.0.0.1</li> <li>\u7aef\u53e3\uff1a7890</li> </ul>"},{"location":"git%E7%9B%B8%E5%85%B3/github%20copilot/#3","title":"3","text":"<p>\u4f7f\u7528\u7ecf\u9a8c\uff1a</p> <ol> <li>\u5148\u7528\u82f1\u6587\u5199\u4e00\u6bb5\u6ce8\u91ca\uff08\u4e0d\u4f1a\u53ef\u4ee5\u4e2d\u6587\u5199\u51fa\u518d\u7528\u767e\u5ea6\u7ffb\u8bd1\uff09</li> <li>\u518d\u56de\u8f66\u7b49\u5f85copilot\u7f16\u5199\u4ee3\u7801</li> <li>\u6700\u540e\u6839\u636e\u5177\u4f53\u9700\u6c42\u9002\u5f53\u4fee\u6539</li> </ol> <p>\u793a\u4f8b\uff1a</p> <p>\u60f3\u5728python\u6587\u4ef6\u4e2d\u7f16\u5199\u4e00\u4e2a\u51fd\u6570\u5c06\u5185\u5bb9\u5199\u5165\u540c\u76ee\u5f55\u4e0b\u7684 <code>latex.md</code> \u6587\u4ef6</p> <pre><code># Define a function to overwrite the content in the latex.md file and open it with VSCode\n</code></pre> <p>\u82e5\u5e72\u6b21\u56de\u8f66\u540e</p> <pre><code># Define a function to overwrite the content in the latex.md file and open it with VSCode\ndef write_latex_md(content):\n    with open(\"latex.md\", \"w\") as f:\n        f.write(content)\n    os.system(\"code latex.md\")\n</code></pre>"},{"location":"git%E7%9B%B8%E5%85%B3/github%20copilot/#4","title":"4","text":"<p>\u5728VSCode\u4e2d\u4f7f\u7528github copilot\u804a\u5929\u529f\u80fd\u65f6\uff0c\u663e\u793a</p> <pre><code>Cannot read properties of undefined (reading 'split')\n</code></pre> <p>\u641c\u7d22\u76f8\u5173\u4fe1\u606f\uff0c\u627e\u5230</p> <p>\"Cannot read properties of undefined (reading 'split')\" after first message \u00b7 community \u00b7 Discussion #102408 (github.com)</p> <p>\u6839\u636enaveen-98\u7684\u56de\u7b54\u4e2d\u7684 <code>Disable and re-enable GitHub Copilot</code> \uff0c\u7981\u7528\u518d\u91cd\u65b0\u542f\u7528github copilot\u63d2\u4ef6\u4e4b\u540e\uff0c\u53ef\u4ee5\u6b63\u5e38\u4f7f\u7528\u4e86</p>"},{"location":"git%E7%9B%B8%E5%85%B3/github%26gitee/","title":"Github &amp; Gitee","text":"<p> \u7ea6 1485 \u4e2a\u5b57  67 \u884c\u4ee3\u7801  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 6 \u5206\u949f</p>"},{"location":"git%E7%9B%B8%E5%85%B3/github%26gitee/#1","title":"1","text":"<ul> <li> <p>gitee SSH\u516c\u94a5\u8bbe\u7f6e</p> <p>SSH \u516c\u94a5\u8bbe\u7f6e | Gitee \u4ea7\u54c1\u6587\u6863</p> </li> <li> <p>github SSH key \u8bbe\u7f6e</p> <p>\u8d26\u6237\u6dfb\u52a0SSH: Adding a new SSH key to your GitHub account - GitHub Docs</p> <p>\u751f\u6210SSH: Generating a new SSH key and adding it to the ssh-agent - GitHub Docs</p> </li> </ul>"},{"location":"git%E7%9B%B8%E5%85%B3/github%26gitee/#2","title":"2","text":"<p>\u4e0a\u4f20\u6587\u4ef6\u81f3\u4ed3\u5e93\uff1a</p> <pre><code>git add --all\ngit commit -m \"...\" # \u4f1a\u5728\u4ed3\u5e93\u5bf9\u5e94\u6587\u4ef6\u7684\u5904\u663e\u793a\uff0c\u5e94\u8be5\u662f\u7528\u4e8e\u6807\u8bb0\u54ea\u4e00\u6b21\u4e0a\u4f20\ngit push -u origin [ master | main ]\n</code></pre>"},{"location":"git%E7%9B%B8%E5%85%B3/github%26gitee/#3","title":"3","text":"<p>gitee pages \u66f4\u65b0\u9700\u8981\u624b\u52a8\u70b9\u51fb\u66f4\u65b0\uff0c</p> <p>github pages \u53ef\u4ee5\u81ea\u52a8\u66f4\u65b0</p>"},{"location":"git%E7%9B%B8%E5%85%B3/github%26gitee/#4","title":"4","text":"<p>Generating a new SSH key and adding it to the ssh-agent - GitHub Docs</p> <p></p> <pre><code>ssh-keygen -t ed25519 -C \"xxx@example.com\"\n</code></pre> <p>\u7b2c\u4e8c\u884c\u586b\u5199\u6587\u4ef6\u8981\u4fdd\u5b58\u7684\u4f4d\u7f6e\uff08\u76f4\u63a5\u590d\u5236\u7ed9\u7684\u5c31\u597d\u4e86\uff09\uff0c\u7136\u540e<code>passphrase</code>\u53ef\u4ee5\u4e0d\u8bbe\u7f6e\uff0c\u4e4b\u540e\u628a<code>~/.ssh/id_ed25519.pub</code>\u4e2d\u7684\u5168\u90e8\u590d\u5236\u7c98\u8d34\u5230github\u8bbe\u7f6essh\u4e2d\u5c31\u884c\u4e86</p>"},{"location":"git%E7%9B%B8%E5%85%B3/github%26gitee/#5","title":"5","text":"<p>\u66f4\u65b0\u672c\u5730\u7684\u4ed3\u5e93\uff1a</p> <pre><code>git pull\n</code></pre>"},{"location":"git%E7%9B%B8%E5%85%B3/github%26gitee/#6","title":"6","text":"<p>github \u4ed3\u5e93\u8bbe\u7f6e \u8ba8\u8bba GitHub Discussions</p> <p>GitHub Discussions \u6587\u6863 - GitHub \u6587\u6863</p> <p>\u5728 Settings - General - Features - Discussions \u524d\u9762\u52fe\u9009\u4e0a</p> <p>\u5c31\u53ef\u4ee5\u6253\u5f00\u8ba8\u8bba\u529f\u80fd\u4e86</p>"},{"location":"git%E7%9B%B8%E5%85%B3/github%26gitee/#7","title":"7","text":"<p>git \u4ee3\u7406\u76f8\u5173\u95ee\u9898</p> <p>\u7531\u4e8e\u4e4b\u524d\u60f3\u5728 git bash \u7ec8\u7aef\u4e2d\u4f7f\u7528 clash \u7684\u4ee3\u7406\u6240\u4ee5\u5728 <code>E:\\Program Files\\Git\\etc\\bash.bashrc</code> \u6700\u4e0a\u65b9\u6309\u7f51\u4e0a\u8bf4\u7684\u6dfb\u52a0\u4e86</p> <pre><code># Clash\nexport http_proxy=https://127.0.0.1:7890;export https_proxy=https://127.0.0.1:7890\n</code></pre> <p>\u7136\u540e\u53d1\u73b0 <code>git clone</code> \u5728\u4e0d\u6253\u5f00 clash \u7684\u60c5\u51b5\u4e0b\u4f1a\u6709\u62a5\u9519</p> <pre><code>Collecting git+https://github.com/huggingface/peft.git (from -r requirements.txt (line 8))\n  Cloning https://github.com/huggingface/peft.git to c:\\users\\administrator\\appdata\\local\\temp\\pip-req-build-t4u9g6h5\n  Running command git clone --filter=blob:none --quiet https://github.com/huggingface/peft.git 'C:\\Users\\Administrator\\AppData\\Local\\Temp\\pip-req-build-t4u9g6h5'\n  fatal: unable to access 'https://github.com/huggingface/peft.git/': Failed to connect to 127.0.0.1 port 7890 after 2032 ms: Couldn't connect to server\n</code></pre> <p>\u6240\u4ee5\u5728\u7f51\u4e0a\u67e5\u8be2\u76f8\u5173\u4fe1\u606f\uff0c\u53d1\u73b0\u8fd9\u7bc7\u6587\u7ae0</p> <p>\u89e3\u51b3git\u4e0b\u8f7d\u51fa\u73b0\uff1aFailed to connect to 127.0.0.1 port 1080: Connection refused\u62d2\u7edd\u8fde\u63a5\u9519\u8bef-CSDN\u535a\u5ba2</p> <p>\u53ef\u4ee5\u901a\u8fc7(windows\u4e5f\u53ef\u4ee5)</p> <pre><code>git config --global http.proxy\ngit config --global https.proxy\n</code></pre> <p>\u67e5\u8be2 git http \u548c htttps \u6709\u6ca1\u6709\u4f7f\u7528\u4ee3\u7406</p> <p>\u6587\u7ae0\u8fd8\u8bf4\u5230 linux \u8fd8\u53ef\u4ee5\u4f7f\u7528</p> <pre><code>env|grep -I proxy\n</code></pre> <p>\u6765\u67e5\u8be2\u7cfb\u7edf\u73af\u5883\u6709\u6ca1\u6709\u4ee3\u7406\uff0c\u4e0d\u8fc7windows\u4e0b\u8fd9\u4e2a\u547d\u4ee4\u8fd0\u884c\u4e0d\u4e86</p> <p>\u53d6\u6d88\u4ee3\u7406\u7684\u65b9\u6cd5</p> <p>\u6211\u5728 windows git bash \u4e0a\u4f7f\u7528</p> <pre><code>git config --global --unset http.proxy\ngit config --global --unset https.proxy\n</code></pre> <p>\u6210\u529f\u53d6\u6d88\u4e86\u4ee3\u7406</p> <p>\u800c\u6587\u7ae0\u4e2d\u7684\u53e6\u4e00\u79cd\u65b9\u6cd5</p> <pre><code>unset http_proxy\nunset ftp_proxy\nunset all_proxy\nunset https_proxy\nunset no_proxy\n</code></pre> <p>\u6211\u8bd5\u4e86\u5728 windows git bash \u4e0a\u4e0d\u884c\uff0c\u53ef\u80fd\u5728linux\u4e0a\u53ef\u4ee5</p> <p>\u6700\u540e\u6211\u53d6\u6d88\u4e86\u4ee3\u7406\u4e4b\u540e <code>git clone</code> \u5c31\u4e0d\u4f1a\u6709\u4e4b\u524d\u7684 <code>Failed to connect to 127.0.0.1 port 7890</code> </p> <p>\u4f46\u662f\u6ca1\u6253\u5f00 clash \u65f6\uff0c\u53d8\u6210\u4e86</p> <pre><code>fatal: unable to access 'https://github.com/huggingface/peft.git/': Failed to connect to github.com port 443 after 21065 ms: Couldn't connect to server\n</code></pre>"},{"location":"git%E7%9B%B8%E5%85%B3/github%26gitee/#8","title":"8","text":"<p>git \u8bbe\u7f6e\u4ee3\u7406</p> <p>(\u56e0\u4e3a\u6709\u65f6\u53ef\u80fd\u4f1a git clone \u4e0d\u4e86)</p> <p>\u3010git\u9519\u8bef\u3011Error: Failed to connect to github.com port 443 after 21074 ms: Timed out_Sheyami\u7684\u535a\u5ba2-CSDN\u535a\u5ba2</p> <pre><code>git config --global http.proxy http://127.0.0.1:7890\ngit config --global https.proxy http://127.0.0.1:7890\n</code></pre>"},{"location":"git%E7%9B%B8%E5%85%B3/github%26gitee/#9","title":"9","text":"<p>\u590d\u73b0\u4ee3\u7801</p> <p>git bash \u4e2d\u5728\u8fd0\u884c\u547d\u4ee4\u662f\uff0c\u53ef\u4ee5\u73af\u5883\u53d8\u91cf(\u6216\u8005\u53eb\u5168\u5c40\u53d8\u91cf\uff1f)\uff0c\u5982</p> <pre><code>HF_DATASETS_OFFLINE=1 TRANSFORMERS_OFFLINE=1 \\\npython examples/pytorch/translation/run_translation.py --model_name_or_path t5-small --dataset_name wmt16 --dataset_config ro-en ...\n</code></pre> <p>\u6216</p> <pre><code># Make sure you have git-lfs installed (https://git-lfs.com)\ngit lfs install\ngit clone https://huggingface.co/decapoda-research/llama-7b-hf\n\n# if you want to clone without large files \u2013 just their pointers\n# prepend your git clone with the following env var:\nGIT_LFS_SKIP_SMUDGE=1\n</code></pre>"},{"location":"git%E7%9B%B8%E5%85%B3/github%26gitee/#10","title":"10","text":"<p>\u53ef\u4ee5\u4f7f\u7528 <code>--amend</code> \u6765\u4fee\u6539\u4e0a\u4e00\u6b21 <code>commit</code> \u63d0\u4ea4</p> <pre><code>usage: git commit [-a | --interactive | --patch] [-s] [-v] [-u&lt;mode&gt;] [--amend]\n                  [--dry-run] [(-c | -C | --squash) &lt;commit&gt; | --fixup [(amend|reword):]&lt;commit&gt;)]\n                  [-F &lt;file&gt; | -m &lt;msg&gt;] [--reset-author] [--allow-empty]\n                  [--allow-empty-message] [--no-verify] [-e] [--author=&lt;author&gt;]\n                  [--date=&lt;date&gt;] [--cleanup=&lt;mode&gt;] [--[no-]status]\n                  [-i | -o] [--pathspec-from-file=&lt;file&gt; [--pathspec-file-nul]]\n                  [(--trailer &lt;token&gt;[(=|:)&lt;value&gt;])...] [-S[&lt;keyid&gt;]]\n                  [--] [&lt;pathspec&gt;...]\n    ...\n    --amend               amend previous commit\n</code></pre> <pre><code>git commit --amend -m \"...\"\n</code></pre>"},{"location":"git%E7%9B%B8%E5%85%B3/github%26gitee/#11","title":"11","text":"<p>\u5b66\u4e60 git \u7684\u89c6\u9891</p> <p>Git + GitHub 10\u5206\u949f\u5b8c\u5168\u5165\u95e8_\u54d4\u54e9\u54d4\u54e9_bilibili</p> <p>Git + GitHub 10\u5206\u949f\u5b8c\u5168\u5165\u95e8 (\u8fdb\u9636)_\u54d4\u54e9\u54d4\u54e9_bilibili</p> <p>GitHub \u5230\u5e95\u600e\u4e48\u7528\uff1f\u5341\u5206\u949f\u5b66\u4f1a GitHub \u57fa\u7840\u77e5\u8bc6_\u54d4\u54e9\u54d4\u54e9_bilibili</p>"},{"location":"git%E7%9B%B8%E5%85%B3/github%26gitee/#12","title":"12","text":"<p>github \u63d0\u4ea4 PR Pull requests \u7684\u65b9\u6cd5\uff0c</p> <p>\u9700\u8981\u5148\u5c06\u522b\u4eba\u7684\u4ed3\u5e93 fork \u5230\u81ea\u5df1\u7684\u4ed3\u5e93\u4e2d\uff0c\u7136\u540e\u8fdb\u884c\u4fee\u6539\uff0c</p> <p>\u4e4b\u540e\u5c31\u53ef\u4ee5\u5728\u81ea\u5df1 fork \u7684\u4ed3\u5e93\u6216\u8005\u539f\u672c\u7684\u4ed3\u5e93\u4e2d\u63d0\u4ea4 PR Pull requests</p>"},{"location":"git%E7%9B%B8%E5%85%B3/github%26gitee/#13","title":"13","text":"<p>\u67e5\u770b\u4ed3\u5e93\u5173\u8054\u7684\u8fdc\u7a0b\u5e93\u7684\u547d\u4ee4</p> <pre><code>git remote -v\n</code></pre> <p>\u5c06\u672c\u5730\u4ed3\u5e93\u5173\u8054\u591a\u4e2a\u8fdc\u7a0b\u5e93</p> <p>\u65b9\u6cd5\u4e00 (\u4e0d\u80fd\u540c\u65f6\u63a8\u9001)</p> <p>Gitee\u5bfc\u5165Github\u4ed3\u5e93\u5e76\u540c\u6b65\u66f4\u65b0_gitee\u5f3a\u5236\u540c\u6b65-CSDN\u535a\u5ba2</p> <p>\u5173\u8054\u7684\u8fdc\u7a0b\u5e93\u540d\u9ed8\u8ba4\u4e3a <code>origin</code> \uff0c</p> <p>\u6dfb\u52a0\u65b0\u7684\u8fdc\u7a0b\u5e93</p> <pre><code>git remote add github git@github.com:RonaldLN/Exam-for-Software-of-DRB-of-2023.git\n</code></pre> <p><code>github</code> \u5904\u53ef\u4ee5\u6539\u6210\u5176\u4ed6(\u81ea\u5b9a\u4e49\u7684)\u8fdc\u7a0b\u5e93\u540d\uff0c\u6700\u540e\u662f\u8fdc\u7a0b\u5e93\u7684\u5730\u5740\uff0c</p> <p>\u6dfb\u52a0\u540e\uff0c\u8fdb\u884c <code>git remote -v</code> \u67e5\u770b\u4f1a\u53d1\u73b0</p> <pre><code>github  git@github.com:RonaldLN/Exam-for-Software-of-DRB-of-2023.git (fetch)\ngithub  git@github.com:RonaldLN/Exam-for-Software-of-DRB-of-2023.git (push)\norigin  git@gitee.com:ronald-luo/test.git (fetch)\norigin  git@gitee.com:ronald-luo/test.git (push)\n</code></pre> <p>\u56e0\u6b64\u5728 <code>git push</code> \u65f6\u9700\u8981\u9009\u62e9\u8981\u63a8\u9001\u7684\u8fdc\u7a0b\u5e93\u7684\u5e93\u540d\u8fdb\u884c\u63a8\u9001</p> <pre><code>git push -u xxx branch\n</code></pre> <p>\u5220\u9664\u5173\u8054\u7684\u8fdc\u7a0b\u5e93\u7684\u547d\u4ee4</p> <pre><code>git remote rm xxx\n</code></pre> <p>\u65b9\u6cd5\u4e8c (\u53ef\u4ee5\u540c\u65f6\u63a8\u9001)</p> <p>Git\u540c\u65f6\u63a8\u9001\u591a\u4e2a\u8fdc\u7a0b\u4ed3\u5e93 - \u77e5\u4e4e (zhihu.com)</p> <p>\u7531\u4e8e\u9ed8\u8ba4\u5173\u8054\u7684\u8fdc\u7a0b\u5e93\u540d\u662f <code>origin</code> \uff0c</p> <p>\u6240\u4ee5\u901a\u8fc7</p> <pre><code>git remote set-url --add origin git@github.com:RonaldLN/Exam-for-Software-of-DRB-of-2023.git\n</code></pre> <p>\u6765\u5728 <code>origin</code> \u5e93\u540d\u4e0b\u6dfb\u52a0\u8fdc\u7a0b\u5e93\uff0c</p> <p>\u7136\u540e <code>git remote -v</code> \u67e5\u770b</p> <pre><code>origin  git@gitee.com:ronald-luo/test.git (fetch)\norigin  git@gitee.com:ronald-luo/test.git (push)\norigin  git@github.com:RonaldLN/Exam-for-Software-of-DRB-of-2023.git (push)\n</code></pre> <p>\u56e0\u6b64\u5728\u63a8\u9001 <code>origin</code> \u65f6\u5c31\u4f1a\u5411 github \u548c gitee \u4e00\u8d77\u63a8\u9001</p>"},{"location":"git%E7%9B%B8%E5%85%B3/github%26gitee/#14","title":"14","text":"<p>\u4fee\u6539\u672c\u5730\u5206\u652f\u540d\u7684\u547d\u4ee4</p> <pre><code>git branch -m oldName newName\n</code></pre>"},{"location":"git%E7%9B%B8%E5%85%B3/github%26gitee/#15","title":"15","text":"<p>\u5c06\u4e24\u4e2a\u8fdc\u7a0b\u4ed3\u5e93\u514b\u9686\u5230\u4e00\u4e2a\u672c\u5730\u4ed3\u5e93\u7684\u4e24\u4e2a\u5206\u652f\uff0c\u5e76\u4e14\u5408\u5e76\u7684\u65b9\u6cd5</p> <p>\u5982\u4f55\u5408\u5e76\u4e24\u4e2a\u4e0d\u540c\u7684 Git \u4ed3\u5e93\uff1f - \u77e5\u4e4e (zhihu.com)</p>"},{"location":"git%E7%9B%B8%E5%85%B3/github%26gitee/#16","title":"16","text":"<p>\u5982\u679c\u4ed3\u5e93\u4e2d\u7684\u67d0\u4e2a\u6587\u4ef6\u5939\uff0c\u91cc\u9762\u6709 <code>.git/</code> \u6587\u4ef6\u5939\uff0c\u5373\u662f\u53e6\u4e00\u4e2a\u4ed3\u5e93\uff0c\u90a3\u4e48\u8fd9\u4e2a\u6587\u4ef6\u5939\u4e2d\u7684\u6587\u4ef6\u4e0d\u4f1a\u88abgit\u8bc6\u522b\u5230</p>"},{"location":"git%E7%9B%B8%E5%85%B3/github%26gitee/#17","title":"17","text":"<p>\u6dfb\u52a0submodule</p> <pre><code>git submodule add xxx.git [\u8def\u5f84]\n</code></pre>"},{"location":"git%E7%9B%B8%E5%85%B3/github%26gitee/#18","title":"18","text":"<p>\u5728windows\u4e0a\u5b89\u88c5 <code>git-filter-repo</code> \uff0c</p> <p>\u53c2\u8003 python - <code>git filter-repo</code> commands output nothing on Windows - Stack Overflow \u4e2d TTT\u7684\u56de\u7b54</p> <ol> <li>\u8fd0\u884c <code>git --exec-path</code> \u67e5\u770b <code>git.exe</code> \u6240\u5728\u7684\u8def\u5f84</li> <li>\u4e0b\u8f7d <code>git-filter-repo</code> \u6587\u4ef6(\u6ce8\u610f\u4e0d\u8981\u6709\u540e\u7f00\uff0c\u53ef\u80fd\u4e0b\u8f7d\u4f1a\u81ea\u52a8\u6dfb\u52a0 <code>.txt</code> \u540e\u7f00)\uff0c\u5e76\u5c06 <code>git-filter-repo</code> \u590d\u5236\u5230 <code>git.exe</code> \u6240\u5728\u7684\u8def\u5f84</li> <li>\u5728\u9700\u8981\u8fd0\u884c <code>git filter-repo</code> \u547d\u4ee4\u7684\u4ed3\u5e93/\u8def\u5f84\u4e0b\uff0c\u5c1d\u8bd5\u8fd0\u884c\u547d\u4ee4<ul> <li>\u5982\u679c\u547d\u4ee4\u80fd\u6b63\u5e38\u8fd0\u884c\uff0c\u4f1a\u663e\u793a <code>No arguments specified.</code> \uff0c\u90a3\u4e48\u5c31\u4e0d\u7528\u6267\u884c\u4e0b\u4e00\u6b65</li> </ul> </li> <li>\u5982\u679c\u6ca1\u6709\u663e\u793a\u7684\u4fe1\u606f\uff0c\u6216\u8005\u663e\u793a\u7c7b\u4f3c\u4e8e <code>/usr/bin/env: \u2018python3\u2019: No such file or directory</code> \u7684\u62a5\u9519\u4fe1\u606f\uff0c\u90a3\u4e48\u5c06 <code>git-filter-repo</code> \u6587\u4ef6\u7b2c\u4e00\u884c <code>#!/usr/bin/env python3</code> \u4e2d\u7684 <code>python3</code> \u6362\u6210 <code>python</code></li> </ol>"},{"location":"git%E7%9B%B8%E5%85%B3/github%26gitee/#19","title":"19","text":"<p>\u5c06\u5b50\u6587\u4ef6\u5939\u62c6\u5206\u6210\u65b0\u4ed3\u5e93 - GitHub \u6587\u6863</p> <p>\u9700\u8981\u5b89\u88c5 <code>git-filter-repo</code> \uff0c</p> <p>\u6709\u4e24\u79cd\u62c6\u5206\u7684\u5f62\u5f0f\uff1a</p> <ol> <li> <p>\u53ea\u4fdd\u7559\u67d0\u4e2a\u5b50\u6587\u4ef6\u5939\u5230\u65b0\u4ed3\u5e93\u4e2d\uff0cgit\u7684\u5386\u53f2\u8bb0\u5f55\u91cc\u4e5f\u53ea\u4f1a\u4fdd\u7559\u4e0e\u8fd9\u4e2a\u6587\u4ef6\u5939\u76f8\u5173\u7684commit</p> <pre><code>git filter-repo --path FOLDER-NAME/\n</code></pre> <p>Filter the specified branch in your directory and remove empty commits</p> </li> <li> <p>\u5c06\u67d0\u4e2a\u5b50\u6587\u4ef6\u5939\u4f5c\u4e3a\u65b0\u4ed3\u5e93\u7684\u6839\u76ee\u5f55\uff0c\u5373\u628a\u8be5\u5b50\u6587\u4ef6\u5939\u4f5c\u4e3a\u4e00\u4e2a\u65b0\u7684\u4ed3\u5e93\uff0c\u5e76\u53ea\u4fdd\u7559\u76f8\u5173\u7684commit(commit\u4e2d\u6587\u4ef6\u7684\u8def\u5f84\u4f1a\u81ea\u52a8\u8fdb\u884c\u66f4\u6539)</p> <pre><code>git filter-repo --subdirectory-filter FOLDER-NAME\n</code></pre> <p>Filter the specific branch by using a single sub-directory as the root for the new repository</p> </li> </ol>"},{"location":"git%E7%9B%B8%E5%85%B3/github%26gitee/#20","title":"20","text":"<p>windows\u5347\u7ea7git</p> <p>How to upgrade Git on Windows to the latest version - Stack Overflow</p> <p>Dutch Glory\u7684\u56de\u7b54\u63d0\u5230windows\u4e2d\u53ef\u4ee5\u4f7f\u7528\u4ee5\u4e0b\u547d\u4ee4\u5347\u7ea7git</p> <pre><code>git update-git-for-windows\n</code></pre>"},{"location":"git%E7%9B%B8%E5%85%B3/github%26gitee/#21","title":"21","text":"<p>\u5982\u679cclone\u4e0b\u6765\u7684\u4ed3\u5e93\u4e2d\u6709submodule\u5b50\u6a21\u5757\uff0c\u4f46\u5bf9\u5e94\u8def\u5f84\u53ea\u6709\u4e00\u4e2a\u7a7a\u6587\u4ef6\u5939\uff0c\u90a3\u4e48\u53ef\u4ee5\u4f7f\u7528 <code>--init</code> \u53c2\u6570\u6765\u62c9\u53d6\u5bf9\u5e94\u7684\u6587\u4ef6</p> <p><code>--recursive</code> \u8868\u793a\u9012\u5f52\u5bf9\u6240\u6709\u5d4c\u5957\u5b50\u6a21\u5757\u8fdb\u884c\u64cd\u4f5c</p> <pre><code>git submodule update --init --recursive\n</code></pre> <p>\u5982\u679csubmodule\u5b50\u6a21\u5757\u4e2d\u6709\u5927\u6587\u4ef6\uff0c\u90a3\u4e48\u53ef\u4ee5\u4f7f\u7528\u8fd9\u6837\u7684\u547d\u4ee4\u5bf9\u6240\u6709submodule\u62c9\u53d6\u5927\u6587\u4ef6</p> <pre><code>git submodule foreach git lfs pull\n</code></pre>"},{"location":"git%E7%9B%B8%E5%85%B3/github%26gitee/#22","title":"22","text":"<p>\u5982\u679c\u60f3\u5728clone\u7684\u65f6\u5019\u5c31\u987a\u4fbf\u628asubmodule\u4e00\u5e76\u514b\u9686\u597d\uff0c\u6dfb\u52a0\u4e00\u4e2a <code>--recurse-submodules</code> \u53c2\u6570</p> <pre><code>git clone --recurse-submodules\n</code></pre>"},{"location":"git%E7%9B%B8%E5%85%B3/github%26gitee/#23","title":"23","text":"<p>\u53ef\u4ee5\u4f7f\u7528 <code>git archive</code> \u547d\u4ee4\u6765\u6253\u5305(\u67d0\u4e2a\u5206\u652f\u7684)\u4ee3\u7801</p> <pre><code>git archive main --format=tar.gz --output=/path/to/main.tar.gz\n</code></pre> <p>\u6216\u8005\u4f7f\u7528zip\u683c\u5f0f\u6253\u5305</p> <pre><code>git archive main --format=zip --output=main.zip\n</code></pre>"},{"location":"git%E7%9B%B8%E5%85%B3/github%26gitee/#24","title":"24","text":"<p>\u5728\u7ec8\u7aef\u4e2d\u6253\u5370git\u7248\u672c\u6811(\u5386\u53f2\u6240\u6709\u7684commits)</p> <pre><code>git log --oneline --graph --decorate --all\n</code></pre> <p>\u53c2\u8003</p> <p>gitk - Viewing full version tree in git - Stack Overflow</p>"},{"location":"markdown%E7%9B%B8%E5%85%B3/hexo/","title":"Hexo","text":"<p> \u7ea6 189 \u4e2a\u5b57  9 \u884c\u4ee3\u7801  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 1 \u5206\u949f</p>"},{"location":"markdown%E7%9B%B8%E5%85%B3/hexo/#1","title":"1","text":"<p>### \u5b89\u88c5\u524d\u63d0</p> <p>\u5b89\u88c5 Hexo \u76f8\u5f53\u7b80\u5355\uff0c\u53ea\u9700\u8981\u5148\u5b89\u88c5\u4e0b\u5217\u5e94\u7528\u7a0b\u5e8f\u5373\u53ef\uff1a</p> <ul> <li>Node.js (Node.js \u7248\u672c\u9700\u4e0d\u4f4e\u4e8e 10.13\uff0c\u5efa\u8bae\u4f7f\u7528 Node.js 12.0 \u53ca\u4ee5\u4e0a\u7248\u672c)</li> <li>Git</li> </ul> <p>\u5b89\u88c5 <code>hexo</code> </p> <pre><code>npm install -g hexo-cli\n</code></pre> <p>\u5efa\u7ad9 | Hexo</p> <pre><code>hexo init &lt;folder&gt;\ncd &lt;folder&gt;\nnpm install\n</code></pre> <p>\u611f\u89c9\u8ddf mkdocs \u6709\u70b9\u7c7b\u4f3c</p> <p>\u9884\u89c8</p> <p>\u6307\u4ee4 - server| Hexo</p> <pre><code>hexo server\n</code></pre> <p>\u542f\u52a8\u670d\u52a1\u5668\u3002\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u8bbf\u95ee\u7f51\u5740\u4e3a\uff1a <code>http://localhost:4000/</code>\u3002</p> \u9009\u9879 \u63cf\u8ff0 <code>-p</code>, <code>--port</code> \u91cd\u8bbe\u7aef\u53e3 <code>-s</code>, <code>--static</code> \u53ea\u4f7f\u7528\u9759\u6001\u6587\u4ef6 <code>-l</code>, <code>--log</code> \u542f\u52a8\u65e5\u8bb0\u8bb0\u5f55\uff0c\u4f7f\u7528\u8986\u76d6\u8bb0\u5f55\u683c\u5f0f <pre><code>E:\\Github\\hexotest2&gt;hexo server\nINFO  Validating config\nINFO  Start processing\nINFO  Hexo is running at http://localhost:4000/ . Press Ctrl+C to stop.\n</code></pre>"},{"location":"markdown%E7%9B%B8%E5%85%B3/hexo/#2","title":"2","text":"<p>\u4f7f\u7528\u4e3b\u9898 <code>Hexo Aurora Theme</code> </p> <ul> <li> <p>\u5b98\u65b9\u7f51\u7ad9\uff1a</p> <p>Hexo Aurora Docs | Hexo Aurora Docs (tridiamond.tech)</p> </li> <li> <p>\u5b98\u65b9 github \u4ed3\u5e93\uff1a</p> <p>auroral-ui/hexo-theme-aurora: \ud83c\udff3\ufe0f\u200d\ud83c\udf08 Futuristic auroral Hexo theme. (github.com)</p> </li> </ul> <p>\u5728\u4f7f\u7528 hexo \u642d\u5efa\u597d\u521d\u59cb\u7684\u7f51\u7ad9\u540e\uff0c\u5c31\u53ef\u4ee5\u6309\u7167</p> <p>\u5feb\u901f\u4e0a\u624b | Hexo Aurora Docs (tridiamond.tech)</p> <p>\u4e2d\u7684\u6307\u5f15\u6765\u5c06\u9ed8\u8ba4\u7684\u4e3b\u9898\u6362\u6210 <code>Aurora</code></p>"},{"location":"markdown%E7%9B%B8%E5%85%B3/mermaid/","title":"Mermaid","text":"<p> \u7ea6 70 \u4e2a\u5b57  31 \u884c\u4ee3\u7801  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 1 \u5206\u949f</p>"},{"location":"markdown%E7%9B%B8%E5%85%B3/mermaid/#_1","title":"\u793a\u4f8b","text":"<pre><code>flowchart LR\n\u5d07\u9ad8 --&gt; \u5f62\u5f0f\u7279\u5f81 --&gt; a[\"\u201c\u5927\u201d\"] --&gt; b[\"\u6765\u6e90\u4e8e\u4e2a\u4eba\u5411\u4eba\u7c7b\u603b\u4f53\u7684\u5347\u534e&lt;br \\&gt;\uff08\u65e0\u9650\uff09\"]\na --&gt; c[\"\u8d85\u8d8a\u6709\u9650\u7684\u5f62\u4f53\uff0c&lt;br \\&gt;\u5e26\u6709\u8d8b\u5411\u65e0\u9650\u6027\u7684\u7279\u70b9\"]\n\u5d07\u9ad8 --- d[\"\uff08\u201c\u5c0f\u201d\u5bf9\u201c\u5927\u201d\uff0c\u201c\u5f31\u201d\u5bf9\u201c\u5f3a\u201d\uff09&lt;br \\&gt;\u594b\u6597\u6297\u4e89\u7684\u8fc7\u7a0b\"] --- \u77db\u76fe --&gt; e[\"\u611f\u53d7\u5230\u529b\u91cf&lt;br \\&gt;\uff08\u8d85\u7ea7\u82f1\u96c4\uff09\"]\nf[\"\u6765\u6e90\u4e8e\u4e2a\u4f53\u5230\u603b\u4f53\u7684\u751f\u5316\uff08\u8d85\u8d8a\u6027\uff09\"] --&gt; e\n\u5d07\u9ad8 --- \u4fa7\u91cd\u5c55\u793a\u4eba\u7684\u672c\u8d28\u5bf9\u8c61\u5316\u5b9e\u73b0\u7684\u66f2\u6298\u8fc7\u7a0b\nsubgraph g[\" \"]\n\u75db\u82e6\u7684\n\u6109\u60a6\u6027\nend\n\u77db\u76fe --- g\n\u75db\u82e6\u7684 --- \u4e2a\u4f53\u7684\u6297\u4e89\n\u6109\u60a6\u6027 --- \u4e2a\u4f53\u5230\u603b\u4f53\u7684\u5347\u534e\n</code></pre> <pre><code>flowchart LR\n\u5d07\u9ad8 --&gt; \u5f62\u5f0f\u7279\u5f81 --&gt; a[\"\u201c\u5927\u201d\"] --&gt; b[\"\u6765\u6e90\u4e8e\u4e2a\u4eba\u5411\u4eba\u7c7b\u603b\u4f53\u7684\u5347\u534e&lt;br \\&gt;\uff08\u65e0\u9650\uff09\"]\na --&gt; c[\"\u8d85\u8d8a\u6709\u9650\u7684\u5f62\u4f53\uff0c&lt;br \\&gt;\u5e26\u6709\u8d8b\u5411\u65e0\u9650\u6027\u7684\u7279\u70b9\"]\n\u5d07\u9ad8 --- d[\"\uff08\u201c\u5c0f\u201d\u5bf9\u201c\u5927\u201d\uff0c\u201c\u5f31\u201d\u5bf9\u201c\u5f3a\u201d\uff09&lt;br \\&gt;\u594b\u6597\u6297\u4e89\u7684\u8fc7\u7a0b\"] --- \u77db\u76fe --&gt; e[\"\u611f\u53d7\u5230\u529b\u91cf&lt;br \\&gt;\uff08\u8d85\u7ea7\u82f1\u96c4\uff09\"]\nf[\"\u6765\u6e90\u4e8e\u4e2a\u4f53\u5230\u603b\u4f53\u7684\u751f\u5316\uff08\u8d85\u8d8a\u6027\uff09\"] --&gt; e\n\u5d07\u9ad8 --- \u4fa7\u91cd\u5c55\u793a\u4eba\u7684\u672c\u8d28\u5bf9\u8c61\u5316\u5b9e\u73b0\u7684\u66f2\u6298\u8fc7\u7a0b\nsubgraph g[\" \"]\n\u75db\u82e6\u7684\n\u6109\u60a6\u6027\nend\n\u77db\u76fe --- g\n\u75db\u82e6\u7684 --- \u4e2a\u4f53\u7684\u6297\u4e89\n\u6109\u60a6\u6027 --- \u4e2a\u4f53\u5230\u603b\u4f53\u7684\u5347\u534e</code></pre> <p>Typora(meimaid)\u7ed8\u5236\u6d41\u7a0b\u56fe - \u77e5\u4e4e (zhihu.com)</p>"},{"location":"markdown%E7%9B%B8%E5%85%B3/mermaid/#1","title":"1","text":"<p>\u6709\u6807\u70b9\u6216\u7279\u6b8a\u7b26\u53f7\uff0c\u5982<code>\u201c</code> \u3001<code>&lt;</code>\u3001<code>\uff08</code>\u3001\u7a7a\u683c\u3001html\u6362\u884c\u7b26 \u7b49\u65f6\uff0c\u9700\u8981\u7528\u5b57\u6bcd\u52a0<code>[]</code>\u6765\u5f62\u6210\u5355\u5143\u5757\uff0c\u5982\uff1a</p> <pre><code>d[\"\uff08\u201c\u5c0f\u201d\u5bf9\u201c\u5927\u201d\uff0c\u201c\u5f31\u201d\u5bf9\u201c\u5f3a\u201d\uff09&lt;br \\&gt;\u594b\u6597\u6297\u4e89\u7684\u8fc7\u7a0b\"]\n</code></pre>"},{"location":"markdown%E7%9B%B8%E5%85%B3/mermaid/#2","title":"2","text":"<p>\u652f\u6301html</p> <ul> <li>\u6362\u884c  <code>&lt;br \\&gt;</code></li> <li>\u659c\u4f53 <code>&lt;i&gt;...&lt;/i&gt;</code></li> <li>\u52a0\u7c97\u3001\u4e0b\u5212\u7ebf\u3001\u5927\u53f7\u5c0f\u53f7\u5b57\u4f53 ...</li> </ul>"},{"location":"markdown%E7%9B%B8%E5%85%B3/mermaid/#3","title":"3","text":"<pre><code>subgraph g[\" \"]\na\nb\nend\n</code></pre> <p>\u5b50\u56fe\uff0c\u5982\u4e0a\uff0c\u9700\u8981\u4e00\u4e2a\u540d\u79f0\uff0c\u53ef\u4ee5\u6307\u5411\u6216\u88ab\u6307\u5411</p>"},{"location":"markdown%E7%9B%B8%E5%85%B3/mermaid/#4","title":"4","text":"<p>\u5728\u7ebf\u753bmermaid\u56fe\u7f51\u7ad9</p> <p>Online FlowChart &amp; Diagrams Editor - Mermaid Live Editor</p>"},{"location":"markdown%E7%9B%B8%E5%85%B3/mkdocs%28material%29/","title":"Mkdocs (Material)","text":"<p> \u7ea6 5328 \u4e2a\u5b57  903 \u884c\u4ee3\u7801  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 29 \u5206\u949f</p>"},{"location":"markdown%E7%9B%B8%E5%85%B3/mkdocs%28material%29/#1","title":"1","text":"<p>Installation - Material for MkDocs (squidfunk.github.io)</p>"},{"location":"markdown%E7%9B%B8%E5%85%B3/mkdocs%28material%29/#2","title":"2","text":"<pre><code>markdown_extensions:\n  - pymdownx.superfences: # mermaid\u753b\u56fe\n      custom_fences:\n        - name: mermaid\n          class: mermaid\n          format: !!python/name:pymdownx.superfences.fence_code_format\n  - attr_list # \u77e9\u5f62\u6309\u94ae/\u6309\u952e\n  - def_list # a \u65e0\u5e8f/\u6709\u5e8f/\u4efb\u52a1 \u5217\u8868\n  - pymdownx.tasklist: # a\n      custom_checkbox: true\n  - pymdownx.critic # b Formatting \u542b \u9ad8\u4eae/\u5220\u9664\u7ebf/\u4e0b\u5212\u7ebf/\u4e0a\u4e0b\u89d2\u6807 [\u7b49]\n  - pymdownx.caret # b\n  - pymdownx.keys # b\n  - pymdownx.mark # b\n  - pymdownx.tilde # b\n  - toc: # \u76ee\u5f55\u76f8\u5173\n      permalink: true # \u6bcf\u4e2a\u9875\u9762\u5185\uff0c\u5404\u6807\u9898\u4f1a\u751f\u6210\u5404\u81ea\u7684\u94fe\u63a5\n      # title: \u76ee\u5f55 # \u4fee\u6539\u9875\u9762\u53f3\u4fa7 Table of contents \u6587\u5b57\n  - footnotes # \u811a\u6ce8\n  - pymdownx.highlight: # c \u4ee3\u7801\u5757\u914d\u7f6e\n      anchor_linenums: true\n      line_spans: __span\n      pygments_lang_class: true\n  - pymdownx.inlinehilite # c\n  - pymdownx.snippets # c\n  - pymdownx.superfences # c\n  - admonition # d \u6807\u6ce8\n  - pymdownx.details # d\n  - pymdownx.superfences # d\n  - pymdownx.emoji: # \u4f7f\u7528emoji\u548cicon\n      emoji_index: !!python/name:material.extensions.emoji.twemoji \n      emoji_generator: !!python/name:material.extensions.emoji.to_svg\n  - pymdownx.superfences # e \u5185\u5bb9\u9009\u9879\u5361\n  - pymdownx.tabbed: # e\n      alternate_style: true\n  - md_in_html # \u5728 md \u6587\u6863\u4e2d\u80fd\u663e\u793a html \u7684\u6548\u679c\n</code></pre>"},{"location":"markdown%E7%9B%B8%E5%85%B3/mkdocs%28material%29/#3","title":"3","text":"<pre><code>theme:\n  name: material # \u56fa\u5b9a\n  # language: zh # \u8bed\u8a00\u8bbe\u7f6e\u4e3a\u4e2d\u6587(\u4f1a\u6539\u53d8\u641c\u7d22\u680f/\u6700\u540e\u4fee\u6539 \u7b49\u6587\u5b57)\uff0c\u9ed8\u8ba4\u4e3a\u82f1\u6587\n  logo: assets/logo.jpg # \u9875\u9762\u4e2d\u9876\u90e8\u680f\u5de6\u4fa7\u56fe\u6807\n  favicon: assets/favicon.jpg # \u6d4f\u89c8\u5668\u9875\u9762\u6807\u7b7e\u56fe\u6807\n  custom_dir: overrides # html\u6e90\u4ee3\u7801\u6269\u5c55\u6587\u4ef6\u5939\n  features:\n    - navigation.expand # \u76ee\u5f55\u81ea\u52a8\u5c55\u5f00\u5b50\u76ee\u5f55\n    # - toc.integrate # \u53f3\u8fb9\u7684toc\u878d\u5408\u5230\u5de6\u4fa7\u7684\u76ee\u5f55\u4e2d\n    - toc.follow # \u53f3\u4fa7toc\u968f\u7740\u9875\u9762\u6ed1\u52a8\u81ea\u52a8\u6ed1\u52a8\n    - navigation.top # \u6709\u56de\u5230\u9875\u9762\u6700\u4e0a\u65b9top\u7684\u6309\u952e\n    - search.suggest # \u641c\u7d22\u5efa\u8bae\n    - navigation.footer # \u9875\u9762\u5e95\u90e8\u6709\u4e0b\u4e00\u9875\u7684\u94fe\u63a5(\u6309\u76ee\u5f55\u4e0a\u7684\u987a\u5e8f)\n    - navigation.tabs # \u4e00\u7ea7\u76ee\u5f55\u878d\u5408\u81f3\u9876\u680f\uff0c\u5e76\u4e14\u53ea\u5c55\u793a\u4e8c\u7ea7\u76ee\u5f55\n    - navigation.tracking # \u5728\u7ffb\u5230\u9875\u9762\u5bf9\u5e94\u7684\u6807\u9898\u5904\u65f6\uff0c\u4f1a\u5c06\u5730\u5740\u680f\u7684\u5730\u5740\u66f4\u65b0\u6210\u6807\u9898\u5904\u7684\u94fe\u63a5\n    - navigation.instant\n    - navigation.instant.progress # \u9875\u9762\u9876\u90e8\u663e\u793a\u52a0\u8f7d\u8fdb\u5ea6\u6761\n    - content.code.copy # \u4ee3\u7801\u5757\u590d\u5236\u6309\u952e\n    - search.suggest # \u641c\u7d22\u5efa\u8bae\n    - search.highlight # \u641c\u7d22\u7ed3\u679c\u9ad8\u4eae/\u7a81\u51fa\u663e\u793a\n    - search.share # \u641c\u7d22\u7ed3\u679c\u5206\u4eab\n</code></pre>"},{"location":"markdown%E7%9B%B8%E5%85%B3/mkdocs%28material%29/#4","title":"4","text":"<p>\u663c\u591c\u6a21\u5f0f\u5207\u6362\u6309\u952e</p> <pre><code>theme:\n  palette: \n\n    # Palette toggle for light mode\n    - media: \"(prefers-color-scheme: light)\"\n      scheme: default\n      toggle:\n        icon: material/weather-night # \u56fe\u6807(\u53ef\u6539\uff0c\u4e0b\u540c)\n        name: Switch to dark mode\n\n    # Palette toggle for dark mode\n    - media: \"(prefers-color-scheme: dark)\"\n      scheme: slate\n      toggle:\n        icon: material/weather-sunny\n        name: Switch to light mode\n</code></pre>"},{"location":"markdown%E7%9B%B8%E5%85%B3/mkdocs%28material%29/#5","title":"5","text":"<p>\u76ee\u5f55</p> <pre><code>nav:\n  - \u4e00\u7ea7\u76ee\u5f55a: \"a.md\"\n  - \u4e00\u7ea7\u76ee\u5f55b: \"b.md\"\n  - \u4e00\u7ea7\u76ee\u5f55c: # \u6709\u5b50\u76ee\u5f55\u4e0d\u80fd\u5305\u542b\u94fe\u63a5\n    - \u4e8c\u7ea7\u76ee\u5f55aa: \"aa.md\"\n    - \u4e8c\u7ea7\u76ee\u5f55ab: \n      - \u4e09\u7ea7\u76ee\u5f55aaa: \"aaa.md\"\n  - \u4e00\u7ea7\u76ee\u5f55d: \"d.md\"\n  ...\n</code></pre>"},{"location":"markdown%E7%9B%B8%E5%85%B3/mkdocs%28material%29/#6","title":"6","text":"<pre><code>plugins:\n  # - blog: # \u8bbe\u7f6eblog\n  #     blog_dir: . # \u8bbe\u7f6eblog\u5bf9\u5e94\u7684\u8def\u5f84\n  #     blog_toc: true # \u8bbe\u7f6eblog\u7d22\u5f15\u9875\u9762\u7684\u76ee\u5f55\n  #     post_date_format: full # \u8bbe\u7f6eblog\u7d22\u5f15\u9875\u9762\u7684\u65e5\u671f\u683c\u5f0f\n  #     archive_toc: true\n  #     categories_toc: true\n  #     pagination_format: \"$link_first $link_previous ~2~ $link_next $link_last\" # \u8bbe\u7f6eblog\u7d22\u5f15\u9875\u9762\u7684\u5206\u9875\u683c\u5f0f\n  #     pagination_keep_content: true # \u8bbe\u7f6eblog\u7d22\u5f15\u9875\u9762\u7684\u5206\u9875\u5185\u5bb9\n  #     draft_if_future_date: true # \u8bbe\u7f6e\u5982\u679cblog\u7684\u65e5\u671f\u662f\u672a\u6765\u7684\u8bdd\uff0c\u5c31\u4f1a\u88ab\u5f53\u6210\u8349\u7a3f\u4e0d\u4f1a\u88ab\u53d1\u5e03\n  - i18n: # \u8bed\u8a00\u5207\u6362 (\u9700\u8981\u653e\u5728 git-revision-date-localized \u4e4b\u524d)\n    # v0.5.6\n      # default_language: en\n      # material_alternate: true\n      # languages:\n      #   zh:\n      #     name: \u7b80\u4f53\u4e2d\u6587\n      #     build: true\n      #   en:\n      #     name: English labels (\u82f1\u6587\u6807\u7b7e)\n      #     build: false\n    # v1.0.3\n      reconfigure_search: false\n      languages:\n          - locale: zh\n            name: \u7b80\u4f53\u4e2d\u6587\n            build: true\n            default: false\n          - locale: en\n            name: English labels (\u82f1\u6587\u6807\u7b7e)\n            build: true\n            default: true\n  - git-revision-date-localized: # \u9875\u9762\u4e0b\u65b9\u521b\u5efa\u548c\u4fee\u6539\u65f6\u95f4\n      enable_creation_date: true\n      type: timeago\n  - glightbox # \u56fe\u7247\u653e\u5927\n  - search: # \u641c\u7d22(\u652f\u6301\u4e2d\u6587\u3001\u82f1\u6587)\n      # separator: '[\\s\\-,:!=\\[\\]()\"/]+|(?!\\b)(?=[A-Z][a-z])|\\.(?!\\d)|&amp;[lg]t;'\n      separator: '[\\\\s\\\\u200b\\\\u3000\\\\-\u3001\u3002\uff0c\uff0e\uff1f\uff01\uff1b\\s\\-,:!=\\[\\]()\"/]+|(?!\\b)(?=[A-Z][a-z])|\\.(?!\\d)|&amp;[lg]t;'\n      # jieba_dict: jieba_dict/dict.txt.big\n      # jieba_dict_user: jieba_dict/user_dict.txt\n      lang: \n        # - zh\n        - ja\n        - en\n  # - tags # \u6dfb\u52a0\u7ed9\u5355\u4e2a\u6587\u6863\u6dfb\u52a0tag\u6807\u7b7e\n  - statistics # \u7edf\u8ba1\u9875\u9762\u5b57\u6570\u3001\u4ee3\u7801\u884c\u6570\u3001\u9605\u8bfb\u65f6\u95f4\n</code></pre> <ul> <li>\u8bed\u8a00\u5207\u6362</li> <li>\u9875\u9762\u4e0b\u65b9\u521b\u5efa\u548c\u4fee\u6539\u65f6\u95f4</li> <li>\u56fe\u7247\u653e\u5927</li> </ul>"},{"location":"markdown%E7%9B%B8%E5%85%B3/mkdocs%28material%29/#7","title":"7","text":"<p>\u53f3\u4e0a\u89d2github\u4ed3\u5e93</p> <p>Adding a git repository - Material for MkDocs (squidfunk.github.io)</p> <pre><code>repo_url: https://github.com/RonaldLN/Project-Application-Form-of-AIGC\nrepo_name: Project-Application-Form-of-AIGC\n</code></pre>"},{"location":"markdown%E7%9B%B8%E5%85%B3/mkdocs%28material%29/#8","title":"8","text":"<p>\u4e0a\u4f20\u5230<code>github</code>\u3001<code>gitee</code>\u4ed3\u5e93\uff1a</p> <pre><code>mkdocs gh-deploy --force\n</code></pre> <p>(\u8be5\u547d\u4ee4\u53ea\u4e0a\u4f20site\u6587\u4ef6\u5939\u81f3gh-pages\u5206\u652f\uff0c\u82e5\u662fgithub\u4ed3\u5e93\uff0c\u4f1a\u81ea\u52a8\u9009\u62e9gh-pages\u5206\u652f\u751f\u6210github pages\u9875\u9762)</p>"},{"location":"markdown%E7%9B%B8%E5%85%B3/mkdocs%28material%29/#9","title":"9","text":"<p>\u6dfb\u52a0 KaTeX \u516c\u5f0f\u4e66\u5199</p> <p><code>docs/javascripts/katex.js</code>:</p> <pre><code>document$.subscribe(({ body }) =&gt; { \n  renderMathInElement(body, {\n    delimiters: [\n      { left: \"$$\",  right: \"$$\",  display: true },\n      { left: \"$\",   right: \"$\",   display: false },\n      { left: \"\\\\(\", right: \"\\\\)\", display: false },\n      { left: \"\\\\[\", right: \"\\\\]\", display: true }\n    ],\n  })\n})\n</code></pre> <p><code>mkdocs.yml</code>:</p> <pre><code>extra_javascript:\n  - javascripts/katex.js \n  - https://cdnjs.cloudflare.com/ajax/libs/KaTeX/0.16.7/katex.min.js  \n  - https://cdnjs.cloudflare.com/ajax/libs/KaTeX/0.16.7/contrib/auto-render.min.js\n\nextra_css:\n  - https://cdnjs.cloudflare.com/ajax/libs/KaTeX/0.16.7/katex.min.css\n</code></pre>"},{"location":"markdown%E7%9B%B8%E5%85%B3/mkdocs%28material%29/#10","title":"10","text":"<p>\u653e\u5728 <code>/doc</code>\u5185\u5b50\u6587\u4ef6\u5939\u91cc\u7684md\u6587\u4ef6\u4f1a\u6839\u636e\u8be5\u5b50\u6587\u4ef6\u5939\u540d\u81ea\u52a8\u751f\u6210\u4e00\u7ea7\u76ee\u5f55\uff08\u5982\u679c\u6ca1\u6709\u81ea\u5b9a\u4e49\u76ee\u5f55\uff09</p>"},{"location":"markdown%E7%9B%B8%E5%85%B3/mkdocs%28material%29/#11","title":"11","text":"<p>\u6dfb\u52a0\u8c37\u6b4c\u5206\u6790</p> <pre><code>extra:\n  analytics:\n    provider: google\n    property: G-xxxxxxxxxx\n</code></pre>"},{"location":"markdown%E7%9B%B8%E5%85%B3/mkdocs%28material%29/#12","title":"12","text":"<p>\u56fe\u50cf\u5ef6\u8fdf\u52a0\u8f7d</p> <p>\u5728\u6bcf\u4e2a\u56fe\u50cf\u540e\u52a0\u4e0a <code>{ loading=lazy }</code> </p> <pre><code>![xxx](.../xxx.png){ loading=lazy }\n</code></pre>"},{"location":"markdown%E7%9B%B8%E5%85%B3/mkdocs%28material%29/#13","title":"13","text":"<p>\u8bbe\u7f6e\u6bcf\u4e2a\u6587\u7ae0\u5e95\u90e8\u663e\u793a\u521b\u5efa\u548c\u66f4\u65b0\u65f6\u95f4</p> <p>Adding a git repository - Material for MkDocs (squidfunk.github.io)</p> <p>\u6dfb\u52a0\u5305\uff1a</p> <pre><code>pip install mkdocs-git-revision-date-localized-plugin\n</code></pre> <p>\u6dfb\u52a0\u5230 <code>mkdocs.yml</code>:</p> <pre><code>plugins:\n  - git-revision-date-localized:\n      enable_creation_date: true\n      type: timeago\n</code></pre>"},{"location":"markdown%E7%9B%B8%E5%85%B3/mkdocs%28material%29/#14","title":"14","text":"<p>\u56fe\u7247\u7f29\u653e\u529f\u80fd/\u70b9\u51fb\u653e\u5927</p> <p>Images - Material for MkDocs (squidfunk.github.io)</p> <p><code>pip</code>:</p> <pre><code>pip install mkdocs-glightbox\n</code></pre> <p><code>mkdocs.yml</code>:</p> <pre><code>plugins:\n  - glightbox\n</code></pre> <p>\u63d2\u4ef6\u5b98\u65b9\u4f7f\u7528\u6587\u6863\uff1a</p> <p>blueswen/mkdocs-glightbox: A MkDocs plugin supports image lightbox (zoom effect) with GLightbox. (github.com)</p>"},{"location":"markdown%E7%9B%B8%E5%85%B3/mkdocs%28material%29/#15","title":"15","text":"<p>\u6dfb\u52a0\u7248\u6743\u4fe1\u606f</p> <pre><code>copyright: Copyright &amp;copy; 2023 - 2023 Ronald Luo\n</code></pre>"},{"location":"markdown%E7%9B%B8%E5%85%B3/mkdocs%28material%29/#16","title":"16","text":"<p>\u641c\u7d22</p> <pre><code>theme:\n    ...\n    features:\n    ...\n    - search.suggest # \u641c\u7d22\u5efa\u8bae\n    - search.highlight # \u641c\u7d22\u7ed3\u679c\u9ad8\u4eae/\u7a81\u51fa\u663e\u793a\n    - search.share # \u641c\u7d22\u7ed3\u679c\u5206\u4eab\n\nplugins:\n  ...\n  - search: # \u641c\u7d22(\u9009\u62e9\u652f\u6301\u4e2d\u6587\u3001\u82f1\u6587)\n      separator: '[\\s\\-,:!=\\[\\]()\"/]+|(?!\\b)(?=[A-Z][a-z])|\\.(?!\\d)|&amp;[lg]t;'\n      lang: \n        # - zh\n        - ja\n        - en\n</code></pre> <p>\u4e2d\u6587\u6682\u4e0d\u652f\u6301\uff0c\u53ef\u4ee5\u9009\u62e9\u65e5\u6587( <code>ja</code> )\u4ee3\u66ff</p> <p>\u4e2d\u6587\u652f\u6301(\u5373\u5c06)</p> <p>Setting up site search - Material for MkDocs (squidfunk.github.io)</p> <p>\u4e3a\u4e86\u5728\u5185\u7f6e\u641c\u7d22\u63d2\u4ef6\u4e2d\u6dfb\u52a0\u5bf9\u4e2d\u6587\u7684\u652f\u6301\uff0c\u8bf7\u901a\u8fc7 <code>pip</code> \u5b89\u88c5 jieba \u6587\u672c\u5206\u5272\u5e93\uff0c\u63d2\u4ef6\u5c06\u901a\u8fc7\u5206\u53e5\u5668\u8fd0\u884c\u6240\u6709\u6587\u672c\uff1a</p> <pre><code>pip install jieba\n</code></pre> <p>\u641c\u7d22\u5efa\u8bae\u529f\u80fd\uff1a</p> <p>\u542f\u7528\u641c\u7d22\u5efa\u8bae\u540e\uff0c\u641c\u7d22\u5c06\u663e\u793a\u6700\u540e\u4e00\u4e2a\u5355\u8bcd\u7684\u6700\u53ef\u80fd\u5b8c\u6210\u60c5\u51b5\uff0c\u8be5\u5355\u8bcd\u53ef\u4ee5\u901a\u8fc7 Right \u952e\u586b\u5145</p>"},{"location":"markdown%E7%9B%B8%E5%85%B3/mkdocs%28material%29/#17","title":"17","text":"<p>\u8bed\u8a00\u5207\u6362</p> <p>\u53c2\u8003</p> <p>cs-self-learning/mkdocs.yml at master \u00b7 PKUFlyingPig/cs-self-learning (github.com)</p> <p>\u9700\u8981\u5b89\u88c5 <code>mkdocs-static-i18n</code> \u5305</p> <pre><code>pip install mkdocs-static-i18n\n</code></pre> <p>\u5e76\u4e14\u5728 <code>mkdocs.yml</code> \u4e2d <code>plugins:</code> \u91cc <code>- i18n:</code> \u9700\u8981\u5199\u5728 <code>git-revision-date-localized</code> \u4e4b\u524d</p> <p>\u62a5\u9519\u4fe1\u606f\uff1a</p> <pre><code>Error: [git-revision-date-localized] should be defined after the i18n plugin in your mkdocs.yml file. This is because i18n adds a 'locale' variable to markdown pages that this plugin supports.\n</code></pre> <p>\u5e76\u4e14\u6dfb\u52a0\u4e86i18n\u9700\u8981\u6ce8\u91ca\u6389 <code>theme:</code> \u4e2d\u7684 <code>language:</code> </p> <p>\u6b64\u5916\uff0c</p> <p>\u82e5\u60f3\u6dfb\u52a0\u5bf9\u5e94\u8bed\u8a00\u7248\u672c\u7684\u6587\u6863\uff0c\u6bd4\u5982 <code>index.md</code> \u7684\u4e2d\u6587\u7248\uff0c\u5219\u5728\u76f8\u540c\u8def\u5f84\u4e0b\u521b\u5efa <code>index.zh.md</code> \u8fdb\u884c\u7f16\u5199</p> <p>\u53c2\u8003</p> <p>cs-self-learning/docs at master \u00b7 PKUFlyingPig/cs-self-learning (github.com)</p> <p>ultrabug/mkdocs-static-i18n: MkDocs i18n plugin using static translation markdown files (github.com)</p> <p>`mkdocs-static-i18n\u63d2\u4ef6\u7248\u672c\u66f4\u65b0:</p> <p>1.0.0\u4e4b\u540e\u7684\u7248\u672c\uff0c\u4f3c\u4e4e\u914d\u7f6e\u683c\u5f0f\u6539\u53d8\u4e86\uff0ccs-self-learning/docs at master \u00b7 PKUFlyingPig/cs-self-learning (github.com) \u8fd9\u91cc\u9762\u4f7f\u7528\u7684\u683c\u5f0f\u53ef\u80fd\u662f\u65e7\u7248\u7684\uff0c\u65b0\u7248\u7684\u914d\u7f6e\u683c\u5f0f\u53ef\u4ee5\u89c1Setting up languages - MkDocs static i18n plugin documentation (en) (ultrabug.github.io)\uff1a</p> <pre><code>- i18n:\n      reconfigure_search: false\n      languages:\n          - locale: zh\n            name: \u7b80\u4f53\u4e2d\u6587\n            build: true\n            default: false\n          - locale: en\n            name: English labels (\u82f1\u6587\u6807\u7b7e)\n            build: true\n            default: true\n</code></pre> <p>\u7531\u4e8e\u5e94\u8be5\u662f\u53bb\u9664\u4e86 <code>default_language</code> \u8fd9\u4e2a\u9009\u9879\uff0c\u6240\u4ee5\u9ed8\u8ba4\u8bed\u8a00\u9700\u8981\u5728\u8bed\u8a00\u91cc\u9762\u5355\u72ec\u8bbe\u7f6e\uff0c\u9ed8\u8ba4\u8bed\u8a00\u9700\u8981\u5c06 <code>build</code> \u548c <code>default</code> \u90fd\u8bbe\u7f6e\u4e3a <code>true</code> \uff0c\u5426\u5219\u4f1a\u62a5\u9519\u3002</p> <p>(\u65b0\u7248\u4e2d <code>default_language</code> \u548c <code>material_alternate</code> \u4e24\u4e2a\u9009\u9879\u90fd\u5df2\u7ecf\u4e0d\u80fd\u7528\uff0c\u5982\u679c\u914d\u7f6e\u4f1a\u62a5\u9519)</p> <p>\u6b64\u5916\uff0c\u7531\u4e8e mkdocs-material \u672c\u8eab\u7684\u641c\u7d22\u529f\u80fd\u4e0d\u652f\u6301\u4e2d\u6587 <code>zh</code> \uff0c\u56e0\u6b64\u9700\u8981\u5c06 <code>reconfigure_search</code> \u8bbe\u7f6e\u4e3a <code>false</code> </p> <p>Setting up search - MkDocs static i18n plugin documentation (en) (ultrabug.github.io)</p> <p>26\u8bb0\u5f55\u7684\u8be2\u95ee\u8fc7\u7a0b\u4e2d\u6d89\u53ca\u5230\u4e86\u8fd9\u4e2a\u95ee\u9898</p>"},{"location":"markdown%E7%9B%B8%E5%85%B3/mkdocs%28material%29/#18","title":"18","text":"<p>\u6dfb\u52a0\u81ea\u5b9a\u4e49\u7684\u4ee3\u7801</p> <p>javascript - How to add script to head tag in MkDocs? - Stack Overflow</p> <p>Customization - Material for MkDocs (squidfunk.github.io)</p> <p>\u4ee5\u6dfb\u52a0\u767e\u5ea6\u7edf\u8ba1\u7684\u4ee3\u7801\u4e3a\u4f8b\uff1a</p> <p>\u5148\u5728 <code>mkdocs.yml</code> \u4e2d\u6dfb\u52a0\u4ee5\u4e0b\u5185\u5bb9</p> <pre><code>theme:\n  ...\n  custom_dir: overrides\n</code></pre> <p>Customization - Material for MkDocs (squidfunk.github.io)</p> <p>\u5e76\u4e14\u5728 <code>mkdocs.yml</code> \u76f8\u540c\u8def\u5f84\u4e0b\u521b\u5efa <code>overrides</code> \u6587\u4ef6\u5939</p> <p>\u518d\u5728\u8be5\u6587\u4ef6\u5939\u4e2d\u521b\u5efa <code>main.html</code> \u6587\u4ef6</p> <pre><code>.\n\u251c\u2500 overrides/\n\u2502  \u2514\u2500 main.html\n\u2514\u2500 mkdocs.yml\n</code></pre> <p>\u5e76\u5728\u8be5\u6587\u4ef6\u4e2d\u6dfb\u52a0\u5982\u4e0b\u5185\u5bb9\uff1a</p> <pre><code>{% extends \"base.html\" %}\n\n{% block extrahead %}\n  &lt;!-- \u4ece \u767e\u5ea6\u7edf\u8ba1-\u4ee3\u7801\u83b7\u53d6 \u4e2d\u83b7\u53d6\u7684\u4ee3\u7801 --&gt;\n  &lt;script&gt;\n    var _hmt = _hmt || [];\n    (function() {\n      var hm = document.createElement(\"script\");\n      hm.src = \"https://hm.baidu.com/hm.js?xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\";\n      var s = document.getElementsByTagName(\"script\")[0]; \n      s.parentNode.insertBefore(hm, s);\n    })();\n    &lt;/script&gt;\n{% endblock %}\n</code></pre> <p>\u5982\u679c\u8981\u8ffd\u52a0(\u800c\u4e0d\u662f\u8986\u5199)\uff0c\u9700\u8981\u6dfb\u52a0 <code>{{ super() }}</code> \u6765\u5305\u542b\u539f\u6709\u4ee3\u7801\uff0c\u5982</p> <pre><code>{% extends \"base.html\" %}\n\n{% block scripts %}\n  &lt;!-- Add scripts that need to run before here --&gt;\n  {{ super() }}\n  &lt;!-- Add scripts that need to run afterwards here --&gt;\n{% endblock %}\n</code></pre> <p>(\u7531\u4e8e <code>extrahead</code> \u672c\u8eab\u5c31\u4e3a\u7a7a\uff0c</p> <p>Empty block to add custom meta tags</p> <p>\u6240\u4ee5\u4e0d\u9700\u8981\u5305\u542b\u539f\u6709\u4ee3\u7801\uff0c\u53ef\u4ee5\u76f4\u63a5\u8986\u5199)</p>"},{"location":"markdown%E7%9B%B8%E5%85%B3/mkdocs%28material%29/#19","title":"19","text":"<p>Setting up the footer - Material for MkDocs (squidfunk.github.io)</p> <p>\u6dfb\u52a0social links\u65f6\uff0c(\u4ee5\u53calogo\u548cgit\u4ed3\u5e93\u56fe\u6807)\u53ef\u4ee5\u66f4\u6539icon</p> <pre><code>extra:\n  social:\n    - icon: simple/github\n      link: https://github.com/RonaldLN\n    - icon: simple/gitee\n      link: https://gitee.com/ronald-luo\n    - icon: material/email-fast\n      link: mailto:&lt;ln12142325@mail.nwpu.edu.cn&gt;\n</code></pre> <p>\u53ef\u7528\u7684icon\u53ef\u4ee5\u5728</p> <p>Icons, Emojis - Material for MkDocs (squidfunk.github.io)</p> <p>\u4e2d\u67e5\u8be2\uff0c</p> <p>\u4f46\u5728\u5199\u5165 <code>mkdocs.yml</code> \u65f6\u9700\u8981\u9002\u5f53\u4fee\u6539\uff0c\u5982</p> <ul> <li> <code>:octicons-mail-16:</code> \u6539\u4e3a <code>octicons/mail-16</code></li> <li> <code>:material-email-fast:</code> \u6539\u4e3a <code>material/email-fast</code></li> <li> <code>:simple-github:</code> \u6539\u4e3a <code>simple/github</code></li> </ul>"},{"location":"markdown%E7%9B%B8%E5%85%B3/mkdocs%28material%29/#20","title":"20","text":"<p>Content tabs - Material for MkDocs (squidfunk.github.io)</p> <p>\u5185\u5bb9\u9009\u9879\u5361</p> <p><code>mkdocs.yml</code>:</p> <pre><code>markdown_extensions:\n  - pymdownx.superfences\n  - pymdownx.tabbed:\n      alternate_style: true \n</code></pre> <p>\u793a\u4f8b</p> <pre><code>=== \"Unordered list\"\n\n    * Sed sagittis eleifend rutrum\n    * Donec vitae suscipit est\n    * Nulla tempor lobortis orci\n\n=== \"Ordered list\"\n\n    1. Sed sagittis eleifend rutrum\n    2. Donec vitae suscipit est\n    3. Nulla tempor lobortis orci\n</code></pre>"},{"location":"markdown%E7%9B%B8%E5%85%B3/mkdocs%28material%29/#21","title":"21","text":"<p>\u5c0f\u6280\u5de7</p> <p>\u5982\u679c \u5185\u5bb9\u9009\u9879\u5361 \u6216\u8005 \u544a\u8beb/\u4fe1\u606f \u4e0d\u80fd\u5728\u6709\u5e8f\u5217\u8868\u4e2d\u663e\u793a(\u6216 \u6709\u5e8f\u5217\u8868\u56e0\u4e3a \u5185\u5bb9\u9009\u9879\u5361 \u6216\u8005 \u544a\u8beb/\u4fe1\u606f \u88ab\u4e2d\u65ad)\uff0c\u5982</p> <pre><code>1.   \u6b65\u9aa4\u4e00\n\n     !!! note\n\n         ...\n\n2.   \u6b65\u9aa4\u4e8c\n\n     ...\n</code></pre> <ol> <li> <p>\u6b65\u9aa4\u4e00</p> <p>!!! note</p> <pre><code> ...\n</code></pre> </li> <li> <p>\u6b65\u9aa4\u4e8c</p> <p>...</p> </li> </ol> <p>\u5219\u53ef\u4ee5\u501f\u52a9 \u5f15\u7528 <code>&gt;</code></p> <pre><code>1.   \u6b65\u9aa4\u4e00\n\n     &gt; !!! note\n     &gt; \n     &gt;     ...\n\n     &amp;nbsp;\n\n     &gt; === \"tab\"\n     &gt; \n     &gt;     ...\n\n2.   \u6b65\u9aa4\u4e8c\n\n     ...\n</code></pre> <ol> <li> <p>\u6b65\u9aa4\u4e00</p> <p>Note</p> <p>...</p> <p> </p> tab <p>...</p> </li> <li> <p>\u6b65\u9aa4\u4e8c</p> <p>...</p> </li> </ol>"},{"location":"markdown%E7%9B%B8%E5%85%B3/mkdocs%28material%29/#22","title":"22","text":"<p>\u5c0f\u6280\u5de7</p> <p>\u5728typora\u4e2d</p> <pre><code>&gt;   ...\n\n&gt;   ...\n</code></pre> <p>\u4f1a\u663e\u793a\u6210\u4e24\u4e2a\u5206\u5f00\u7684\u5f15\u7528</p> <p>\u800c\u5728 material for mkdocs \u751f\u6210\u7684\u9875\u9762\u4e2d\uff0c\u4f1a\u5408\u6210\u4e00\u4e2a\u8fde\u7740\u7684\u5f15\u7528</p> <p>\u5904\u7406\u6280\u5de7 \u53ef\u4ee5\u7528 <code>&amp;nbsp;</code> (\u597d\u50cf\u662fhtml\u4e2d\u7684\u7a7a\u683c)\u6765\u5206\u5f00\u4e24\u4e2a\u5f15\u7528\uff1a</p> <pre><code>&gt;   ...\n\n&amp;nbsp;\n\n&gt;   ...\n</code></pre>"},{"location":"markdown%E7%9B%B8%E5%85%B3/mkdocs%28material%29/#23","title":"23","text":"<p>\u7528 material for mkdocs \u5728 github \u6216 gitee \u4e0a\u90e8\u7f72\u9759\u6001\u7f51\u9875\u7684(\u6211\u7684)\u65b9\u6cd5\uff1a</p> <ol> <li>\u5148\u5728 github \u6216 gitee \u4e0a\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u4ed3\u5e93(\u53ef\u4ee5\u9009\u62e9\u81ea\u52a8\u6dfb\u52a0README.md\u6587\u4ef6\uff0c\u56e0\u4e3a\u8fd9\u6837\u4f1a\u81ea\u52a8\u521b\u5efa\u51fa main \u6216 master \u5206\u652f)</li> <li>\u7136\u540e\u5c06\u4ed3\u5e93 <code>git clone</code> \u5230\u672c\u5730\u4e2d</li> <li>\u518d\u5728\u547d\u4ee4\u884c\u4e2d <code>mkdocs new xxx</code> \u90a3\u4e2a\u6587\u4ef6\u5939</li> <li>\u6700\u540e\u6dfb\u52a0md\u6587\u6863\u6587\u4ef6\uff0c\u518d\u90e8\u7f72\u5230\u4ed3\u5e93\u5373\u53ef</li> </ol>"},{"location":"markdown%E7%9B%B8%E5%85%B3/mkdocs%28material%29/#24","title":"24","text":"<p>\u5173\u4e8emkdocs-material\u7684tag\u529f\u80fd</p> <p>Setting up tags - Material for MkDocs (squidfunk.github.io)</p> <p>(\u4e2a\u4eba\u731c\u6d4b)\u5176\u4f5c\u7528\u5728\u4e8e\uff0c\u80fd\u591f\u5728\u6bcf\u4e2a\u9875\u9762\u7684\u7b2c\u4e00\u4e2a\u6807\u9898\u4e0a\u65b9\u663e\u793a\u4e00\u4e2a\u6216\u591a\u4e2a \u6807\u7b7e (\u597d\u50cf\u53ea\u80fd\u5728\u9875\u9762\u7684\u4e0a\u65b9)\uff0c\u4ee5\u53ca\u5728\u641c\u7d22\u65f6\uff0c\u542b\u6709\u5bf9\u5e94\u6807\u7b7e\u7684\u7f51\u9875/\u6587\u6863\u4e0b\u4e5f\u4f1a\u663e\u793a\u51fa\u8be5\u6807\u7b7e(\u8fd9\u4e2a\u6709\u5229\u4e8e\u641c\u7d22\u6587\u6863\uff0c\u6216\u8005\u6587\u6863\u5206\u7c7b)</p> <p>\u7136\u540e\u8fd8\u6709\u4e00\u4e2a\u529f\u80fd\u662f\uff0c\u80fd\u8bbe\u7f6e\u4e00\u4e2a\u6587\u6863\u6210\u4e3a \u6807\u7b7e\u7d22\u5f15\u9875 (Setting up tags - Material for MkDocs (squidfunk.github.io))\uff0c\u80fd\u663e\u793a\u6807\u7b7e\u88ab\u54ea\u4e9b\u9875\u9762/\u6587\u6863\u5305\u542b\u4e86</p> <p>Tags support \ud83c\udd95 \u00b7 Issue #2593 \u00b7 squidfunk/mkdocs-material (github.com)</p> <p>\u8fd9\u4e2a\u7f51\u9875\u80fd\u770b\u5230\u4e00\u4e9b\u6548\u679c</p>"},{"location":"markdown%E7%9B%B8%E5%85%B3/mkdocs%28material%29/#25","title":"25","text":"<p>\u4e2d\u6587\u7684\u641c\u7d22\u652f\u6301</p> <p>Setting up site search - Material for MkDocs (squidfunk.github.io)</p> <p>\u9700\u8981\u4ecejieba github\u4ed3\u5e93\u4e2d\u4e0b\u8f7d <code>dict.txt</code> \u6216 <code>dict.txt.small</code> \u6216 <code>dict.txt.big</code> \u6587\u4ef6\uff0c\u7136\u540e\u653e\u5230\u672c\u5730\u9879\u76ee\u4e2d</p> <p><code>mkdocs.yml</code> \u4e2d\uff0c</p> <pre><code>plugins:\n  - search:\n      jieba_dict: dict.txt \n      jieba_dict_user: user_dict.txt\n</code></pre> <p><code>dict.txt</code> \u548c <code>user_dict.txt</code> \u4e24\u5904\u5bf9\u5e94\u7684\u662f <code>mkdocs.yml</code> \u6587\u4ef6\u7684\u4f4d\u7f6e\uff0c\u6240\u4ee5\u5982\u679c\u5c06\u8fd9\u4e24\u4e2a\u8def\u5f84\u66ff\u6362\u6210\u522b\u7684\u8def\u5f84\uff0c\u6839\u76ee\u5f55\u5e94\u8be5\u662f <code>mkdocs.yml</code> \u7684\u76ee\u5f55</p> <p>\u5e76\u4e14\u8981\u53bb\u9664\u6389 <code>lang</code> \u9009\u9879(\u5177\u4f53\u53ef\u89c126)</p>"},{"location":"markdown%E7%9B%B8%E5%85%B3/mkdocs%28material%29/#26","title":"26","text":"<p>\u4e00\u6b21\u62a5\u544a\u9519\u8bef\u7684\u7ecf\u5386</p> <p>2023-09-11</p> <p>Why does mkdocs-material display unsupported Chinese when running the mkdocs gh-deploy -- force command \u00b7 squidfunk/mkdocs-material \u00b7 Discussion #5992 (github.com)</p> <p>stage 1</p> <p>\u4f5c\u8005\u8ba9\u521b\u5efa\u4e00\u4e2a\u6700\u5c0f\u590d\u5236\u4ef6\u7136\u540e\u4e0a\u4f20\uff0c</p> <p>Creating a reproduction - Material for MkDocs (squidfunk.github.io)</p> <p>\u6211\u5927\u81f4\u7684\u64cd\u4f5c\u8fc7\u7a0b\u662f\uff0c\u521b\u5efa\u4e00\u4e2a\u65b0\u7684mkdocs\u9879\u76ee\uff0c\u7136\u540e\u6309\u6587\u6863\u8bf4\u7684 \u5728 <code>mkdocs.yml</code> \u6587\u4ef6\u4e2d\u6dfb\u52a0\u5fc5\u8981\u7684\u914d\u7f6e\uff0c</p> <ul> <li> <p><code>yaml     theme:       name: material</code></p> <p>\u57fa\u672c\u4e0a\u5fc5\u987b\u7684</p> </li> <li> <p>```yaml     plugins:</p> <ul> <li>search:       jieba_dict: jieba_dict/dict.txt.big       jieba_dict_user: jieba_dict/user_dict.txt       lang:          - zh ```</li> </ul> <p>\u62a5\u9519\u7684\u5730\u65b9</p> </li> </ul> <p>\u7136\u540e <code>mkdocs build</code> \u4e00\u4e0b\uff0c\u51fa\u73b0\u4e86\u62a5\u9519\uff0c(\u5982\u679c\u6ca1\u6709\u5e94\u8be5\u5c31\u662f\u7ee7\u7eed\u6309\u539f\u6765\u7684\u914d\u7f6e\u6dfb\u52a0\u53ef\u80fd\u5bfc\u81f4\u62a5\u9519\u7684\u914d\u7f6e\uff0c\u4e0d\u65ad\u5c1d\u8bd5\u76f4\u5230\u51fa\u73b0\u62a5\u9519)</p> <p>\u518d\u6309\u6587\u6863\u8bf4\u7684\uff0c\u6dfb\u52a0\u751f\u6210\u9519\u8bef\u62a5\u544a\u7684\u63d2\u4ef6</p> <pre><code>plugins:\n  - info\n</code></pre> <p>\u6700\u540e\u518d <code>mkdocs build</code> \u4e00\u6b21\uff0c\u4f46\u662f\u8fd9\u6b21\u9700\u8981\u80fd\u8fde\u63a5\u4e0a github (\u8981\u6302\u68af\u5b50)\uff0c\u7136\u540e\u4f1a\u5728\u9879\u76ee\u6839\u76ee\u5f55\u751f\u6210\u4e00\u4e2a zip \u6587\u4ef6</p> <p></p> <p>stage 2</p> <p>\u4f5c\u8005\u56de\u590d\uff0c\u5c06 <code>search</code> \u4e2d\u7684 <code>lang</code> \u9009\u9879\u5168\u90e8\u53bb\u9664\u5373\u53ef</p> <p>\u4f46\u5728\u6211\u53bb\u9664\u540e\uff0c\u4ecd\u4ea7\u751f\u4e86\u4e00\u884c\u62a5\u9519</p> <pre><code>...\nWARNING - Language 'zh' is not supported by Lunr.js, not setting it in the 'plugins.search.lang' option\n...\n</code></pre> <p>\u6000\u7591\u662f\u7531\u4e8e\u4f7f\u7528\u4e86\u8bed\u8a00\u5207\u6362\u7684\u63d2\u4ef6 <code>i18n</code> \u4e2d\u8bbe\u7f6e\u7684 <code>zh</code> \u5bfc\u81f4\u7684\uff0c</p> <p>\u5c06\u63d2\u4ef6\u7684\u914d\u7f6e\u4ee3\u7801\u6ce8\u91ca\u6389\u4e4b\u540e\uff0c\u518d\u6b21\u914d\u7f6e\uff0c\u53d1\u73b0\u62a5\u9519\u4fe1\u606f\u6d88\u5931(\u6240\u4ee5\u786e\u5b9a\u62a5\u9519\u4fe1\u606f\u662f\u7531\u4e8e\u5728i18n\u63d2\u4ef6\u4e2d\u8bbe\u7f6e\u4e86 <code>zh</code> \u76f8\u5173\u7684\u914d\u7f6e\u4ea7\u751f\u7684)</p> <p>\u5728\u67e5\u770b\u4e86 <code>mkdocs-static-i18n</code> \u7684\u5b98\u65b9\u6587\u6863(Installation - MkDocs static i18n plugin documentation (en) (ultrabug.github.io))\u4e4b\u540e\uff0c\u53d1\u73b0\u63d2\u4ef6\u6709\u4e2a\u9009\u9879\u53ef\u4ee5\u4e0d\u66f4\u6539mkdocs-material\u539f\u6709\u7684\u5185\u7f6esearch\u63d2\u4ef6\u7684\u914d\u7f6e</p> <p>Setting up search - MkDocs static i18n plugin documentation (en) (ultrabug.github.io)</p> <p>\u7136\u540e\u53d1\u73b0\u8fd9\u662f\u65b0\u7248\u672c\u624d\u6709\u7684\u9009\u9879\uff0c\u6240\u4ee5\u5c06\u539f\u6709\u7248\u672c <code>v0.5.6</code> \u66f4\u65b0\u4e3a <code>v1.0.3</code> \uff0c\u4f46\u65b0\u7248\u672c\u7684\u8bed\u8a00\u914d\u7f6e\u4e5f\u6539\u53d8\uff0cSetting up languages - MkDocs static i18n plugin documentation (en) (ultrabug.github.io)\uff0c</p> <p>(\u5176\u4f59\u7684\u4e00\u4e9b\u5173\u4e8e\u65b0\u7248\u53d8\u5316\u7684\u53d1\u73b0\u53ef\u89c1\u4e8e18)</p> <p>\u7ecf\u8fc7\u8c03\u6574\u548c\u9009\u9879\u7684\u8bbe\u7f6e\uff0c\u6700\u540e\u62a5\u9519\u4fe1\u606f\u6d88\u5931\u4e86\u3002</p> <p>\u4f46\u662f\u641c\u7d22\u529f\u80fd\u7684\u4e2d\u6587\u5206\u5272\u4ecd\u7136\u4e0d\u80fd\u7528\uff0c\u5411\u4f5c\u8005\u518d\u6b21\u8be2\u95ee</p> <p>stage 3</p> <p>\u4f5c\u8005\u56de\u590d\u4ed6\u5c1d\u8bd5\u4e86\uff0c\u53ef\u4ee5\u6b63\u5e38\u4f7f\u7528</p> <p>\u7ecf\u8fc7\u5c1d\u8bd5\uff0c\u53d1\u73b0\u9700\u8981\u5c06 <code>theme</code> \u8bbe\u7f6e\u4e2d\u7684 <code>language</code> \u8bbe\u7f6e\u6210 <code>zh</code> \u624d\u80fd\u4f7f\u641c\u7d22\u7684\u4e2d\u6587\u652f\u6301\u6b63\u5e38(\u4e0d\u52a0\u5c31\u4e0d\u884c)\uff0c\u5e76\u5411\u4f5c\u8005\u53cd\u6620</p> <p>\u4f5c\u8005\u56de\u590d\uff0c\u56e0\u4e3a\u8bbe\u7f6e\u4e86 <code>language: zh</code> \u4f1a\u81ea\u52a8\u914d\u7f6e\u641c\u7d22\u5206\u5272(search separator)\uff0c\u5982\u679c\u6ca1\u6709\u8bbe\u7f6e <code>language: zh</code> \uff0c\u5219\u9700\u8981\u624b\u52a8\u6dfb\u52a0\u76f8\u5e94\u7684\u641c\u7d22\u5206\u5272(search separator)\uff0c\u53c2\u8003Chinese search support - Material for MkDocs (squidfunk.github.io)</p> <p>\u4f46\u662f\u6211\u770b\u5230\u4ed6\u7ed9\u51fa\u7684github\u91cc\u7684\u6587\u4ef6\u91cc\uff0c\u8bbe\u7f6e\u7684\u7684\u5206\u5272\u8981\u66f4\u591a( <code>\"search.config.separator\": \"[\\\\s\\\\u200b\\\\u3000\\\\-\u3001\u3002\uff0c\uff0e\uff1f\uff01\uff1b]+\",</code> )\uff0c\u6240\u4ee5\u6211\u9009\u53d6\u4e86\u90a3\u4e2a\u6587\u4ef6\u91cc\u7684\u914d\u7f6e\u6dfb\u52a0\u5230\u6211\u7684 <code>mkdocs.yml</code> \u6587\u4ef6\u91cc</p> <pre><code>  - search:\n      separator: '[\\\\s\\\\u200b\\\\u3000\\\\-\u3001\u3002\uff0c\uff0e\uff1f\uff01\uff1b\\s\\-,:!=\\[\\]()\"/]+|(?!\\b)(?=[A-Z][a-z])|\\.(?!\\d)|&amp;[lg]t;'\n</code></pre> <p>\u539f\u672c\u4e3a\uff1a</p> <pre><code>  - search:\n      separator: '[\\s\\-,:!=\\[\\]()\"/]+|(?!\\b)(?=[A-Z][a-z])|\\.(?!\\d)|&amp;[lg]t;'\n</code></pre> <p>\u7ecf\u8fc7\u6d4b\u8bd5\uff0c\u641c\u7d22\u4e2d\u6587\u652f\u6301\u80fd\u591f\u6b63\u5e38\u4f7f\u7528\uff0c\u5e76\u4e14 <code>i18n</code> \u63d2\u4ef6\u4e5f\u80fd\u6b63\u5e38\u4f7f\u7528</p>"},{"location":"markdown%E7%9B%B8%E5%85%B3/mkdocs%28material%29/#27","title":"27","text":"<p>\u4e2d\u6587\u641c\u7d22\u652f\u6301\u611f\u89c9\u4e0d\u662f\u5f88\u597d\u7528\uff0c\u6240\u4ee5\u7528\u56de\u4e86\u539f\u6765\u7684\u914d\u7f6e</p> <pre><code>  - search: # \u641c\u7d22(\u9009\u62e9\u652f\u6301\u4e2d\u6587\u3001\u82f1\u6587)\n      separator: '[\\u200b\\u3000\\-\u3001\u3002\uff0c\uff0e\uff1f\uff01\uff1b\\s\\-,:!=\\[\\]()\"/]+|(?!\\b)(?=[A-Z][a-z])|\\.(?!\\d)|&amp;[lg]t;'\n      # jieba_dict: jieba_dict/dict.txt.big\n      # jieba_dict_user: jieba_dict/user_dict.txt\n      lang: \n        # - zh\n        - ja\n        - en\n</code></pre>"},{"location":"markdown%E7%9B%B8%E5%85%B3/mkdocs%28material%29/#28","title":"28","text":"<p>\u914d\u7f6eblog\u7684\u8fc7\u7a0b\u8bb0\u5f55</p> <p>Setting up a blog - Material for MkDocs (squidfunk.github.io)</p> <p>\u5148\u914d\u7f6e\u597d\uff0c\u518d\u53d1\u5e03blog</p> <p>\u8bbe\u7f6eblog\u63d2\u4ef6\uff1a</p> <pre><code>plugin:\n  - blog\n</code></pre> <p>\u5e76\u521b\u5efa\u76f8\u5e94\u7684\u76ee\u5f55\u7ed3\u6784\uff1a</p> <pre><code>.\n\u251c\u2500 docs/\n\u2502  \u2514\u2500 blog/\n\u2502     \u251c\u2500 posts/\n\u2502     \u2514\u2500 index.md\n\u2514\u2500 mkdocs.yml\n</code></pre> <p>\u5e76\u5c06 <code>blog</code> \u8def\u5f84\u4e0b\u7684 <code>index.md</code> \u6dfb\u52a0\u5230 <code>mkdocs.yml</code> \u76ee\u5f55\u7684\u914d\u7f6e\u4e2d\uff1a</p> <pre><code>nav:\n  - Blog:\n    - blog/index.md \n</code></pre> <p>\u9ed8\u8ba4\u914d\u7f6e\u4e0b\uff0cblog\u5bf9\u5e94\u7684\u76ee\u5f55\u662f\u4e0a\u9762\u76ee\u5f55\u7ed3\u6784\u4e2d\u7684 <code>blog/</code> \uff0c</p> <p>\u5982\u679c\u8981\u81ea\u5b9a\u4e49blog\u7684\u76ee\u5f55\uff0c\u6bd4\u5982\u8981\u8bbe\u7f6e\u72ec\u7acb\u7684blog\uff0c\u53ef\u4ee5\u5c06 <code>blog-dir</code> \u8bbe\u7f6e\u6210 <code>.</code> \uff1a</p> <pre><code>plugins:\n  - blog:\n      blog_dir: .\n</code></pre> <p>\u90a3\u4e48\u5982\u679c\u5176\u4ed6\u7684\u8def\u5f84\u4f7f\u7528\u9ed8\u8ba4\u7684\u8bbe\u7f6e\u7684\u8bdd\uff0c\u6587\u4ef6\u7ed3\u6784\u5e94\u8be5\u53d8\u6210</p> <pre><code>.\n\u251c\u2500 docs/\n\u2502  \u251c\u2500 posts/\n\u2502  \u2514\u2500 index.md\n\u2514\u2500 mkdocs.yml\n</code></pre> <p>\u90a3\u4e48\u4e4b\u524d\u7684\u76ee\u5f55\u7684\u8bbe\u7f6e\u5e94\u8be5\u6539\u6210</p> <pre><code>nav:\n  - Blog:\n    - index.md \n</code></pre> <p><code>post_dir</code> \u53c2\u6570\u540c\u7406</p> <p>\u6700\u7ec8\u6211\u7684\u914d\u7f6e\uff1a</p> <pre><code>nav:\n  - Blog:\n    - index.md \n\nplugins:\n  - blog: # \u8bbe\u7f6eblog\n      blog_dir: . # \u8bbe\u7f6eblog\u5bf9\u5e94\u7684\u8def\u5f84\n      blog_toc: true # \u8bbe\u7f6eblog\u7d22\u5f15\u9875\u9762\u7684\u76ee\u5f55\n      post_date_format: full # \u8bbe\u7f6eblog\u7d22\u5f15\u9875\u9762\u7684\u65e5\u671f\u683c\u5f0f\n      archive_toc: true\n      categories_toc: true\n      pagination_format: \"$link_first $link_previous ~2~ $link_next $link_last\" # \u8bbe\u7f6eblog\u7d22\u5f15\u9875\u9762\u7684\u5206\u9875\u683c\u5f0f\n      pagination_keep_content: true # \u8bbe\u7f6eblog\u7d22\u5f15\u9875\u9762\u7684\u5206\u9875\u5185\u5bb9\n      draft_if_future_date: true # \u8bbe\u7f6e\u5982\u679cblog\u7684\u65e5\u671f\u662f\u672a\u6765\u7684\u8bdd\uff0c\u5c31\u4f1a\u88ab\u5f53\u6210\u8349\u7a3f\u4e0d\u4f1a\u88ab\u53d1\u5e03\n</code></pre> <p>\u5728post\u5bf9\u5e94\u7684\u76ee\u5f55\u4e2d\u521b\u5efablog\u6587\u6863(\u9ed8\u8ba4\u4e3a <code>{blog}/posts</code> )\uff0c</p> <pre><code>---\ndraft: false\ndate: 2023-09-11\nauthors:\n  - ronald_luo\ncategories:\n  - Configure &amp; Debug\n---\n\n# \u4e00\u6b21\u5728github\u4e0a\u8be2\u95ee\u4f5c\u8005\u7684\u7ecf\u5386\n\n&gt;   2023-09-11\n\n[Why does mkdocs-material display unsupported Chinese when running the mkdocs gh-deploy -- force command \u00b7 squidfunk/mkdocs-material \u00b7 Discussion #5992 (github.com)](https://github.com/squidfunk/mkdocs-material/discussions/5992)\n\n&lt;!-- more --&gt;\n\n## **stage 1**\n\n\u4f5c\u8005\u8ba9\u521b\u5efa\u4e00\u4e2a*\u6700\u5c0f\u590d\u5236\u4ef6*\u7136\u540e\u4e0a\u4f20\uff0c\n\n...\n</code></pre> <ul> <li><code>draft</code> : \u662f\u5426\u8bbe\u7f6e\u6210\u8349\u7a3f\uff0c\u53ea\u6709\u9884\u89c8\u4f1a\u6784\u5efa\uff0c\u53d1\u5e03\u4e0d\u4f1a\u6784\u5efa</li> <li><code>date</code> : \u65e5\u671f</li> <li><code>authors</code> : \u9009\u62e9\u4e00\u4e2a\u6216\u591a\u4e2a <code>.author.yml</code> \u6587\u4ef6\u4e2d\u5df2\u6709\u7684\u4f5c\u8005</li> <li><code>categories</code> : \u9009\u62e9\u5206\u7c7b</li> <li><code>&lt;!-- more --&gt;</code> : \u6458\u8981\u8bbe\u7f6e\uff0c\u4e3b\u9875\u4e2d\u53ea\u663e\u793a\u4ee3\u7801\u4e4b\u524d\u7684\u5185\u5bb9</li> </ul> <p>\u6ce8\u610f\uff1a\u4e00\u7ea7\u6807\u9898\u53ea\u80fd\u8bbe\u7f6e\u4e00\u4e2a\uff0c\u5426\u5219\u76ee\u5f55\u4e0d\u4f1a\u663e\u793a</p> <p>How can I make the table of content appear for each post in my blog? \u00b7 squidfunk/mkdocs-material \u00b7 Discussion #5998 (github.com)</p> <p>\u5176\u4f59\u4e00\u4e9b\u9009\u9879</p> <p>Adding categories</p> <p>\u8bbe\u7f6e\u5206\u7c7b\u6bd4\u8f83\u7b80\u5355 \u6613\u61c2</p> <p>Adding tags</p> <p>\u6dfb\u52a0tags\u5728\u6211\u7684\u5c1d\u8bd5\u8fc7\u7a0b\u4e2d\u53ea\u80fd\u5728\u641c\u7d22\u7ed3\u679c\u4e2d\u663e\u793atag\uff0c\u6587\u7ae0\u9876\u90e8\u5e76\u4e0d\u80fd\u663e\u793atag\uff0c\u611f\u89c9\u5b9e\u7528\u6027\u4e0d\u662f\u5f88\u9ad8\uff0c\u6240\u4ee5\u5c31\u6ca1\u6709\u6dfb\u52a0\u8fd9\u4e2a\u4e1c\u897f</p> <p>Setting the reading time</p> <p>\u9605\u8bfb\u65f6\u95f4\u5728blog\u63d2\u4ef6\u91cc\u5185\u7f6e\u6709\u8fd9\u4e2a\u529f\u80fd\uff0c\u4e0d\u7528\u8bbe\u7f6e\u4e5f\u80fd\u663e\u793a\u9605\u8bfb\u65f6\u95f4\uff0c\u4f46\u662f\u5982\u679c\u8ba4\u4e3a\u4e0d\u51c6\u7684\u8bdd\uff0c\u53ef\u4ee5\u81ea\u5df1\u5bf9\u5355\u7bc7blog\u8bbe\u7f6e\u9605\u8bfb\u65f6\u95f4\u800c\u8986\u76d6\u6389\u81ea\u52a8\u8ba1\u7b97\u7684</p>"},{"location":"markdown%E7%9B%B8%E5%85%B3/mkdocs%28material%29/#29","title":"29","text":"<p>\u66f4\u6539\u548c\u914d\u7f6e\u81ea\u5b9a\u4e49\u7684\u7f51\u9875\u989c\u8272\u7684\u8bb0\u5f55</p> <p>\u5982\u679c\u53ea\u9700\u4fee\u6539\u9876\u90e8\u680f\u7684\u989c\u8272\u548c\u9f20\u6807\u653e\u7f6e\u5904\u7684\u94fe\u63a5\u7684\u5f3a\u8c03\u8272\uff0c\u5e76\u4e14\u4e0d\u4f7f\u7528\u81ea\u5b9a\u4e49\u7684\u989c\u8272\uff0c\u90a3\u4e48\u6839\u636e\u5b98\u65b9\u6587\u6863\u4e2d\u7684\u6307\u793a\uff0c</p> <p>Changing the colors - Material for MkDocs (squidfunk.github.io)</p> <p>\u5728 <code>mkdocs.yml</code> \u6dfb\u52a0\u76f8\u5e94\u7684\u914d\u7f6e\u5373\u53ef</p> <p>\u914d\u7f6e\u81ea\u5b9a\u4e49\u7684\u7f51\u9875\u4e3b\u9898(\u7f51\u9875\u5305\u62ec\u5e95\u8272\u3001\u9876\u90e8\u680f\u989c\u8272\u3001\u5f3a\u8c03\u8272)</p> <p>\u5728\u5bf9\u5e94\u8def\u5f84\u65b0\u5efa\u6587\u4ef6 <code>docs/stylesheets/extra.css</code> </p> <p>\u5e76\u5728 <code>mkdocs.yml</code> \u4e2d\u6dfb\u52a0\uff1a</p> <pre><code>extra_css:\n  - stylesheets/extra.css\n</code></pre> <p>\u989c\u8272\u8ba1\u7b97\u5668 - \u5728\u7ebf\u989c\u8272\u5de5\u5177 - PhotoKit.com</p> <p>\u8fd9\u4e2a\u7f51\u7ad9\u80fd\u67e5\u8be2\u989c\u8272\u7684HSL\u3001HSV\u3001HEX\u3001RGB\u7b49\u5bf9\u5e94\u7684\u503c</p> <p>css\u6587\u4ef6\u4e2d\u7684\u8bbe\u7f6e\u4ee3\u7801\uff1a</p> <ul> <li> <p>\u6df1\u8272\u4e3b\u9898\uff1a</p> <p>\u6211\u662f\u76f4\u63a5\u4ecemkdocs\u6784\u5efa\u7684\u7f51\u9875\u7684css\u6587\u4ef6\u4e2d\u590d\u5236\u4e86\u9ed8\u8ba4 <code>slate</code> \u4e3b\u9898\u7684\u914d\u7f6e\u4ee3\u7801\u5e76\u7a0d\u52a0\u4fee\u6539\u5f97\u5230\u6211\u81ea\u5b9a\u4e49\u7684\u4e3b\u9898\u914d\u7f6e\u4ee3\u7801\uff1a</p> <pre><code>[data-md-color-scheme=\"forest-dark\"] {\n  --md-hue: 221;\n  --md-default-fg-color: hsla(var(--md-hue), 75%, 95%, 1);\n  --md-default-fg-color--light: hsla(var(--md-hue), 75%, 90%, 0.62);\n  --md-default-fg-color--lighter: hsla(var(--md-hue), 75%, 90%, 0.32);\n  --md-default-fg-color--lightest: hsla(var(--md-hue), 75%, 90%, 0.12);\n  --md-default-bg-color: hsla(var(--md-hue), 45%, 22%, 1);\n  --md-default-bg-color--light: hsla(var(--md-hue), 45%, 22%, 0.54);\n  --md-default-bg-color--lighter: hsla(var(--md-hue), 45%, 22%, 0.26);\n  --md-default-bg-color--lightest: hsla(var(--md-hue), 45%, 22%, 0.07);\n  --md-code-fg-color: hsla(var(--md-hue), 18%, 86%, 1);\n  --md-code-bg-color: hsla(var(--md-hue), 45%, 16%, 1);\n  --md-code-hl-color: #4287ff26;\n  --md-code-hl-number-color: #e6695b;\n  --md-code-hl-special-color: #f06090;\n  --md-code-hl-function-color: #c973d9;\n  --md-code-hl-constant-color: #9383e2;\n  --md-code-hl-keyword-color: #6791e0;\n  --md-code-hl-string-color: #2fb170;\n  --md-code-hl-name-color: var(--md-code-fg-color);\n  --md-code-hl-operator-color: var(--md-default-fg-color--light);\n  --md-code-hl-punctuation-color: var(--md-default-fg-color--light);\n  --md-code-hl-comment-color: var(--md-default-fg-color--light);\n  --md-code-hl-generic-color: var(--md-default-fg-color--light);\n  --md-code-hl-variable-color: var(--md-default-fg-color--light);\n  --md-typeset-color: var(--md-default-fg-color);\n  --md-typeset-a-color: var(--md-primary-fg-color);\n  --md-typeset-mark-color: #ffb7424d;\n  --md-typeset-kbd-color: hsla(var(--md-hue), 15%, 94%, 0.12);\n  --md-typeset-kbd-accent-color: hsla(var(--md-hue), 15%, 94%, 0.2);\n  --md-typeset-kbd-border-color: hsla(var(--md-hue), 15%, 14%, 1);\n  --md-typeset-table-color: hsla(var(--md-hue), 75%, 95%, 0.12);\n  --md-typeset-table-color--light: hsla(var(--md-hue), 75%, 95%, 0.035);\n  --md-admonition-fg-color: var(--md-default-fg-color);\n  --md-admonition-bg-color: var(--md-default-bg-color);\n  --md-footer-bg-color: hsla(var(--md-hue), 15%, 12%, 0.87);\n  --md-footer-bg-color--dark: hsla(var(--md-hue), 15%, 10%, 1);\n  --md-shadow-z1: 0 0.2rem 0.5rem #0003, 0 0 0.05rem #0000001a;\n  --md-shadow-z2: 0 0.2rem 0.5rem #0000004d, 0 0 0.05rem #00000040;\n  --md-shadow-z3: 0 0.2rem 0.5rem #0006, 0 0 0.05rem #00000059;\n  color-scheme: dark;\n\n  --md-primary-fg-color: hsl(30, 78%, 61%);\n  --md-primary-fg-color--light: hsl(38, 91%, 82%);\n  --md-primary-fg-color--dark: hsl(25, 26%, 34%);\n  --md-primary-bg-color: #fff;\n  --md-primary-bg-color--light: #ffffffb3;\n\n  --md-typeset-a-color: var(--md-primary-fg-color);\n\n  --md-accent-fg-color: hsl(36, 100%, 45%);\n  --md-accent-fg-color--transparent: #f500561a;\n  --md-accent-bg-color: #fff;\n  --md-accent-bg-color--light: #ffffffb3;\n}\n</code></pre> <p>\u7f51\u9875\u5e95\u8272\u63a8\u8350\u91c7\u7528HSL\u6a21\u5f0f\u8bbe\u7f6e\u989c\u8272\uff0c\u56e0\u4e3a\u539f\u59cb\u7684\u4ee3\u7801\u4e2d\uff0c\u5355\u72ec\u5c06\u201cH\u201d(hue)\u8bbe\u7f6e\u4e3a\u4e00\u4e2a\u53c2\u6570 <code>--md-hue</code> \uff0c\u7136\u540e\u518d\u5176\u4ed6\u5c5e\u6027\u4e2d\u76f4\u63a5\u4f7f\u7528\u8fd9\u4e2a\u53c2\u6570\u6765\u914d\u7f6e\u76f8\u5e94\u7684\u7f51\u9875\u989c\u8272\u5c5e\u6027</p> <p>\u4e0e\u7f51\u9875\u5e95\u8272\u76f8\u5173\u7684\u5c5e\u6027\u6709\uff1a</p> <ul> <li> <p><code>--md-hue</code> \uff1a\u8bbe\u7f6e\u5e95\u8272\u7684\u8272\u76f8(Hue)\uff0c\u8303\u56f4\u4e3a 0 - 360</p> </li> <li> <p><code>css       --md-default-bg-color: hsla(var(--md-hue), 45%, 22%, 1);       --md-default-bg-color--light: hsla(var(--md-hue), 45%, 22%, 0.54);       --md-default-bg-color--lighter: hsla(var(--md-hue), 45%, 22%, 0.26);       --md-default-bg-color--lightest: hsla(var(--md-hue), 45%, 22%, 0.07);</code></p> <p><code>--md-default-bg-color</code> \u5bf9\u5e94\u7684\u5c31\u662f\u7f51\u9875\u7684\u5e95\u8272\uff0c<code>45%</code> \u5bf9\u5e94\u7684\u4f4d\u7f6e\u662fHSL\u4e2d\u7684S\u9971\u548c\u5ea6\uff0c<code>22%</code> \u5bf9\u5e94\u7684\u4f4d\u7f6e\u662fHSL\u4e2d\u7684L\u4eae\u5ea6\uff0c\u53e6\u5916\u4e09\u4e2a\u5c5e\u6027\u6682\u4e0d\u77e5\u9053\u5bf9\u5e94\u7684\u989c\u8272\u5728\u54ea\u91cc\uff0c\u4f46\u4ecb\u4e8e\u540d\u5b57\uff0c\u6240\u4ee5\u8ba4\u4e3a\u8fd9\u56db\u4e2a\u5c5e\u6027\u662f\u4e00\u5757\u7684</p> </li> <li> <p><code>--md-code-bg-color</code> \u8bbe\u7f6e\u4ee3\u7801\u5757\u7684\u5e95\u8272\uff0c\u53c2\u6570\u4e0e <code>--md-default-bg-color</code> \u4e00\u6837\uff0c\u6df1\u8272\u6a21\u5f0f\u4e0b\uff0c\u4ee3\u7801\u5757\u7684\u5e95\u8272\u7684\u4eae\u5ea6\u4e00\u822c\u8bbe\u7f6e\u6210\u7f51\u9875\u5e95\u8272\u7684\u4eae\u5ea6 -6%</p> </li> </ul> <p>\u4e0e\u9876\u90e8\u680f\u989c\u8272\u76f8\u5173\u7684\u5c5e\u6027\uff1a</p> <pre><code>  --md-primary-fg-color: hsl(30, 78%, 61%);\n  --md-primary-fg-color--light: hsl(38, 91%, 82%);\n  --md-primary-fg-color--dark: hsl(25, 26%, 34%);\n  --md-primary-bg-color: #fff;\n  --md-primary-bg-color--light: #ffffffb3;\n\n  --md-typeset-a-color: var(--md-primary-fg-color);\n</code></pre> <p><code>--md-primary-fg-color</code> \u662f\u76f4\u63a5\u51b3\u5b9a\u9876\u90e8\u680f\u989c\u8272\u7684\u5c5e\u6027\uff0c\u7528HSL(\u5982 <code>hsl(30, 78%, 61%)</code> )\uff0cHEX(\u5982 <code>#db9aa5</code> )\u5f62\u5f0f\u90fd\u53ef\u4ee5\u8bbe\u7f6e\u989c\u8272</p> <p><code>--md-primary-fg-color--light</code> \u548c <code>--md-primary-fg-color--dark</code> \u867d\u7136\u8fd8\u4e0d\u77e5\u9053\u8fd9\u4e24\u4e2a\u6709\u4ec0\u4e48\u7528\uff0c\u4f46\u662f\u6211\u53c2\u8003\u5b98\u65b9\u6587\u6863\u4ee5\u53ca\u9ed8\u8ba4slate\u4e3b\u9898\u5bf9\u5e94\u7684css\u6587\u4ef6\u4e2d\u7684\u90e8\u5206\uff0c\u5c06light\u8bbe\u7f6e\u6210\u540c\u8272\u7cfb\u7684\u6d45\u8272\uff0cdark\u8bbe\u7f6e\u6210\u540c\u8272\u7cfb\u7684\u6df1\u8272\uff0c\u5982\u4e0a\u9762\u7684\u4ee3\u7801(\u8bbe\u7f6e\u7684\u662f\u9ec4\u8272\u8272\u7cfb)</p> <p><code>--md-typeset-a-color</code> \u662f\u8bbe\u7f6e\u94fe\u63a5\u7b49\u5730\u65b9\u7684\u989c\u8272\uff0c\u76f4\u63a5\u5c06\u5176\u8bbe\u7f6e\u6210\u4e0e\u9876\u90e8\u680f\u989c\u8272\u4e00\u81f4\u5373\u53ef\uff1a</p> <pre><code>  --md-typeset-a-color: var(--md-primary-fg-color);\n</code></pre> <p>\u4e0e\u5f3a\u8c03\u8272\u76f8\u5173\u7684\u5c5e\u6027\uff1a</p> <pre><code>  --md-accent-fg-color: hsl(36, 100%, 45%);\n  --md-accent-fg-color--transparent: #f500561a;\n  --md-accent-bg-color: #fff;\n  --md-accent-bg-color--light: #ffffffb3;\n</code></pre> <p>\u53ea\u7528\u4fee\u6539 <code>--md-accent-fg-color</code> \u5c5e\u6027\u5373\u53ef</p> </li> <li> <p>\u6d45\u8272\u4e3b\u9898\uff1a</p> <p>\u4e0b\u9762\u662f\u6211\u76ee\u524d(\u5176\u4e2d\u4e00\u4e2a\u4e3b\u9898)\u7684\u8bbe\u7f6e\uff1a</p> <pre><code>[data-md-color-scheme=\"forest\"] {\n  --md-hue: 82;\n  --md-default-bg-color: hsla(var(--md-hue), 93%, 90%, 1);\n  --md-default-bg-color--light: hsla(var(--md-hue), 93%, 90%, 0.54);\n  --md-default-bg-color--lighter: hsla(var(--md-hue), 93%, 90%, 0.26);\n  --md-default-bg-color--lightest: hsla(var(--md-hue), 93%, 90%, 0.07);\n  --md-code-bg-color: hsla(var(--md-hue), 58%, 88%, 1);\n\n  --md-primary-fg-color: hsl(38, 100%, 34%);\n  --md-primary-fg-color--light: hsl(38, 91%, 82%);\n  --md-primary-fg-color--dark: hsl(25, 26%, 34%);\n  --md-primary-bg-color: #fff;\n  --md-primary-bg-color--light: #ffffffb3;\n\n  --md-typeset-a-color: var(--md-primary-fg-color);\n\n  --md-accent-fg-color: hsl(36, 100%, 45%);\n  --md-accent-fg-color--transparent: #f500561a;\n  --md-accent-bg-color: #fff;\n  --md-accent-bg-color--light: #ffffffb3;\n\n  --md-admonition-fg-color: var(--md-default-fg-color);\n  --md-admonition-bg-color: var(--md-default-bg-color);\n}\n</code></pre> <p>\u76f8\u5173\u7684\u9009\u9879\u4e0e\u6df1\u8272\u4e3b\u9898\u4e2d\u7684\u8bbe\u7f6e\u90fd\u5dee\u4e0d\u591a\uff0c\u597d\u50cf\u8981\u6ce8\u610f\u7684\u53ea\u6709\u6211\u8bbe\u7f6e\u7684\u6d45\u8272\u6a21\u5f0f\u4e0b\u7684\u4ee3\u7801\u5757\u7684\u5e95\u8272\u4eae\u5ea6\u662f\u6bd4\u7f51\u9875\u5e95\u8272\u8981\u9ad83%\u5de6\u53f3\uff0c\u4ee5\u53ca\u8865\u5145\u76f8\u5e94\u7684\u8bbe\u7f6e(\u53c2\u8003\u914d\u7f6e\u8fc7\u7a0b\u7684\u8bb0\u5f55)</p> </li> </ul> <p><code>css</code> \u6587\u4ef6\u4e2d\u7684 <code>data-md-color-scheme=</code> \u540e\u7684\u5f15\u53f7(\u6ca1\u6709\u5f15\u53f7\u4e5f\u53ef\u4ee5)\u4e2d\u7684\u5185\u5bb9\uff0c\u5c31\u662f\u53ef\u4ee5/\u5e94\u8be5\u5199\u5728 <code>mkdocs.yml</code> \u4e2d <code>scheme:</code> \u540e\u7684\u5173\u952e\u5b57\uff0c\u4f46\u662f\u8981\u6ce8\u610f\uff0c\u5982\u679c\u60f3\u8bbe\u7f6e\u7684\u5173\u952e\u5b57\u4e0d\u6b62\u4e00\u4e2a\u5355\u8bcd\uff0c\u90a3\u4e48 <code>css</code> \u6587\u4ef6\u4e2d\u7684\u8bbe\u7f6e\u5355\u8bcd\u4e4b\u95f4\u5e94\u8be5\u7528\u77ed\u6a2a\u7ebf <code>-</code> \u8fde\u63a5</p> <p><code>mkdocs.yml</code> \u4e2d\u7684\u8bbe\u7f6e\uff1a</p> <p>\u53ef\u4ee5\u6309 Color scheme \u4e2d\u76f4\u63a5\u8bbe\u7f6e <code>scheme</code> \u9009\u9879</p> <p>\u4e5f\u53ef\u4ee5\u6309 Color palette toggle \u8bbe\u7f6e\u591a\u4e2a\u4e3b\u9898\u5207\u6362\uff0c\u800c\u90fd\u662f\u5728\u76f8\u5e94\u7684 <code>scheme</code> \u9009\u9879\u4e4b\u540e\u586b\u5199\u8bbe\u7f6e\u7684\u5bf9\u5e94 \u5173\u952e\u5b57/\u4e3b\u9898\u540d\u5b57 \u5373\u53ef</p>"},{"location":"markdown%E7%9B%B8%E5%85%B3/mkdocs%28material%29/#30","title":"30","text":"<p>\u6dfb\u52a0\u8bc4\u8bba</p> <p>Adding a comment system - Material for MkDocs (squidfunk.github.io)</p> <p>\u9700\u8981\u5148\u5c06github\u4ed3\u5e93\u7684\u8ba8\u8bba\u6253\u5f00(\u53ef\u89c1 \u624b\u518c - github - 6)</p> <p>\u7136\u540e\u6309\u7167\u8bf4\u660e\u6587\u6863\u4e0a\u7684\uff0c\u5b89\u88c5 Giscus GitHub App \u5e76\u7ed9\u5bf9\u5e94\u4ed3\u5e93\u7684\u6743\u9650\uff0c</p> <p>\u7136\u540e\u5728 giscus \u7f51\u9875\u4e0a\u81ea\u884c\u9009\u62e9\u4e00\u4e9b\u9009\u9879\uff0c\u7136\u540e\u751f\u6210\u4e00\u5c0f\u6bb5\u4ee3\u7801</p> <p>\u518d\u5728 <code>mkdocs.yml</code> \u76f8\u540c\u8def\u5f84\u7684 <code>overrides</code> \u6587\u4ef6\u5939\u4e2d(\u5982\u679c\u6ca1\u6709\u5c31\u521b\u5efa\u4e00\u4e2a)\uff0c\u521b\u5efa <code>overrides/partials/comments.html</code> :</p> <pre><code>{% if page.meta.comments %}\n  &lt;h2 id=\"__comments\"&gt;{{ lang.t(\"meta.comments\") }}&lt;/h2&gt;\n  &lt;!-- Insert generated snippet here --&gt;\n\n  &lt;!-- Synchronize Giscus theme with palette --&gt;\n  &lt;script&gt;\n    var giscus = document.querySelector(\"script[src*=giscus]\")\n\n    // Set palette on initial load\n    var palette = __md_get(\"__palette\")\n    if (palette &amp;&amp; typeof palette.color === \"object\") {\n      var theme = palette.color.scheme === \"slate\"\n        ? \"transparent_dark\"\n        : \"light\"\n\n      // Instruct Giscus to set theme\n      giscus.setAttribute(\"data-theme\", theme) \n    }\n\n    // Register event handlers after documented loaded\n    document.addEventListener(\"DOMContentLoaded\", function() {\n      var ref = document.querySelector(\"[data-md-component=palette]\")\n      ref.addEventListener(\"change\", function() {\n        var palette = __md_get(\"__palette\")\n        if (palette &amp;&amp; typeof palette.color === \"object\") {\n          var theme = palette.color.scheme === \"slate\"\n            ? \"transparent_dark\"\n            : \"light\"\n\n          // Instruct Giscus to change theme\n          var frame = document.querySelector(\".giscus-frame\")\n          frame.contentWindow.postMessage(\n            { giscus: { setConfig: { theme } } },\n            \"https://giscus.app\"\n          )\n        }\n      })\n    })\n  &lt;/script&gt;\n{% endif %}\n</code></pre> <p>\u5e76\u5c06 giscus \u7f51\u9875\u4e0a\u751f\u6210\u7684\u4ee3\u7801\u7c98\u8d34\u5230\u6ce8\u91ca\u4e2d\u7684\u5bf9\u5e94\u4f4d\u7f6e</p> <p>\u6b64\u5916</p> <p>\u7531\u4e8e\u6211\u4f7f\u7528\u7684\u662f\u81ea\u5b9a\u4e49\u7684\u989c\u8272\uff0c\u5e76\u4e14\u8bc4\u8bba\u7684\u989c\u8272\u4e5f\u60f3\u8fdb\u884c\u4e00\u4e9b\u4fee\u6539\uff0c\u6240\u4ee5\u5bf9\u4e0a\u9762\u7684\u4ee3\u7801\u8fdb\u884c\u4e00\u4e9b\u4fee\u6539</p> <p>\u9700\u8981\u5173\u6ce8\u4e24\u5904</p> <pre><code>      var theme = palette.color.scheme === \"slate\"\n        ? \"transparent_dark\"\n        : \"light\"\n</code></pre> <p>\u6211\u5c06 <code>\"slate\"</code> \u6539\u6210\u4e86\u6211\u4e4b\u524d\u81ea\u5b9a\u4e49\u7684\u7f51\u9875\u4e3b\u9898 <code>\"sunset-glow-dark\"</code> \uff0c\u5c06 <code>\"transparent_dark\"</code> \u548c <code>\"light\"</code> \u6539\u6210\u4e86\u6211\u8ba4\u4e3a\u66f4\u9002\u5408\u6211\u81ea\u5b9a\u4e49\u4e3b\u9898\u7684\u989c\u8272 <code>\"noborder_dark\"</code> \u548c <code>\"dark_dimmed\"</code></p>"},{"location":"markdown%E7%9B%B8%E5%85%B3/mkdocs%28material%29/#31","title":"31","text":"<p>\u89e3\u51b3 <code>i18n</code> \u63d2\u4ef6\u9996\u9875\u8fdb\u884c\u8bed\u8a00\u5207\u6362\u65f6\uff0c\u8df3\u8f6c\u5230\u4e0d\u5b58\u5728\u7684\u7f51\u5740\u5e76\u663e\u793a404\u9875\u9762\u7684\u95ee\u9898</p> <p>9\u670818\u65e5\u5728 issue \u5411\u4f5c\u8005\u63d0\u95ee</p> <p>Link setting error on homepage (<code>index.md</code> <code>index.html</code>) \u00b7 Issue #261 \u00b7 ultrabug/mkdocs-static-i18n (github.com)</p> <p>\u4f5c\u8005\u5bf9\u6211\u7684 issue \u8fdb\u884c\u56de\u7b54</p> <p>\u89e3\u51b3\u65b9\u6cd5\u662f\uff0c</p> <p>\u9700\u8981\u5728 <code>mkdocs.yml</code> \u6587\u4ef6\u4e2d\uff0c\u6dfb\u52a0 <code>site_url</code> \u7684\u8bbe\u7f6e\uff0c</p> <pre><code>site_url: https://ronaldln.github.io/MyPamphlet\n</code></pre>"},{"location":"markdown%E7%9B%B8%E5%85%B3/mkdocs%28material%29/#32","title":"32","text":"<p>\u975e blog \u9875\u9762\u8bbe\u7f6e \u9875\u9762\u5b57\u6570\u3001\u4ee3\u7801\u884c\u6570\u3001\u9605\u8bfb\u65f6\u95f4\u7edf\u8ba1</p> <p>\u4f7f\u7528 <code>mkdocs-statistics-plugin</code> \u63d2\u4ef6</p> <p>TonyCrane/mkdocs-statistics-plugin: A MkDocs plugin that generate statistic data of a site (github.com)</p> <p>\u5148 <code>pip install</code></p> <pre><code>pip install mkdocs-statistics-plugin\n</code></pre> <p>\u7136\u540e\u5728 <code>mkdocs.yml</code> \u4e2d\u6dfb\u52a0\u8bbe\u7f6e</p> <pre><code>plugins:\n  - statistics\n</code></pre> <p>\u4e00\u4e9b\u53ef\u4ee5\u8bbe\u7f6e\u7684\u9009\u9879\uff1a</p> <ul> <li><code>page_check_metadata</code> : \u9ed8\u8ba4\u4e3a\u7a7a\uff0c\u7528\u4e8e\u7b5b\u9009\u6dfb\u52a0\u7edf\u8ba1\u4fe1\u606f\u7684\u9875\u9762(\u53ea\u5728\u542b\u6709\u6307\u5b9a\u5c5e\u6027\u7684\u9875\u9762\u4e2d\u6dfb\u52a0\u7edf\u8ba1\u4fe1\u606f\uff0c\u5982\u542b\u6709 <code>comments</code> )</li> <li><code>page_read_time</code> : \u9ed8\u8ba4\u4e3a <code>true</code> \uff0c\u8bbe\u7f6e\u662f\u5426\u663e\u793a\u9605\u8bfb\u65f6\u95f4</li> <li><code>page_template</code> : \u9ed8\u8ba4\u4e3a\u7a7a\uff0c\u8bbe\u7f6e\u81ea\u5b9a\u4e49\u7684\u7edf\u8ba1\u4fe1\u606f\u6837\u5f0f\uff0c\u8def\u5f84\u76f8\u5bf9\u4e8e <code>/docs</code> </li> </ul> <p>\u8bbe\u7f6e\u81ea\u5b9a\u4e49\u7684\u7edf\u8ba1\u4fe1\u606f\u6837\u5f0f</p> <p>\u6a21\u677f\u6587\u4ef6\u5728\u4ed3\u5e93\u4e2d\u6709\uff0c<code>mkdocs_statistics_plugin/templates/page_statistics.html</code></p> <p>\u6211\u5728 blog \u4e2d\u8bbe\u7f6e\u4e86\u81ea\u5b9a\u4e49\u7684\u6837\u5f0f\uff0c\u6211\u628a\u6837\u5f0f\u6587\u4ef6\u8bbe\u7f6e\u4e3a <code>/docs/page_template/page_statistics.html</code> \uff0c\u5e76\u7a0d\u52a0\u4e86\u4fee\u6539( <code>&lt;div&gt;</code> \u91cc\u9762\u683c\u5f0f\u4e0e <code>markdown</code> (\u6240\u4ee5\u8981\u6362\u884c\u9700\u8981\u4e24\u884c))</p> <pre><code>&lt;div markdown=\"1\" style=\"margin-top: -30px; font-size: 0.75em; opacity: 0.7;\"&gt;\n&amp;nbsp;\n\n:material-circle-edit-outline: \u7ea6 {{ words }} \u4e2a\u5b57 {% if code_lines != 0 %} \u2022 :fontawesome-solid-code: {{ code_lines }} \u884c\u4ee3\u7801 {% endif %}{% if read_time %}:material-clock-time-two-outline: {% if read_time == 0 %}\u9884\u8ba1\u9605\u8bfb\u65f6\u95f4\u4e0d\u5230 1 \u5206\u949f{% else %}\u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 {{ read_time }} \u5206\u949f{% endif %}{% endif %}\n\n---\n&lt;/div&gt;\n</code></pre> <p><code>mkdocs.yml</code> \u4e2d</p> <pre><code>plugins:\n  - statistics: # \u7edf\u8ba1\u9875\u9762\u5b57\u6570\u3001\u4ee3\u7801\u884c\u6570\u3001\u9605\u8bfb\u65f6\u95f4\n      page_template: \"page_template/page_statistics.html\"\n</code></pre>"},{"location":"markdown%E7%9B%B8%E5%85%B3/mkdocs%28material%29/#33","title":"33","text":"<p>\u5982\u679c\u6362\u7528 Google Font \u4e0a\u6536\u5f55\u7684\u5b57\u4f53\uff0c\u76f4\u63a5\u6309\u7167 Changing the fonts - Material for MkDocs (squidfunk.github.io) \u4e2d\u7684\u65b9\u6cd5\u64cd\u4f5c\u5373\u53ef\uff0c\u4f46\u662f\u8fd9\u79cd\u65b9\u6cd5\u5e94\u8be5\u4e0d\u80fd\u4f7f\u7528\u591a\u4e2a\u5b57\u4f53</p> <p>\u4f7f\u7528\u672a\u88ab Google Font \u6536\u5f55\u7684\u5b57\u4f53\uff0c\u4ee5\u53ca\u4f7f\u7528\u591a\u4e2a\u5b57\u4f53\u7684\u65b9\u6cd5(\u4e2d\u82f1\u6587\u4e0d\u540c\u5b57\u4f53)</p> <p>\u9700\u8981\u627e\u5230\u5b57\u4f53\u7684 <code>css</code> \u6587\u4ef6\uff0cGoogle Font \u4e0a\u7684\u5b57\u4f53\u53ef\u4ee5\u9009\u62e9\u5177\u4f53\u7c97\u7ec6\u89c4\u683c\u540e\uff0c\u70b9\u51fb\u9875\u9762\u53f3\u4e0a\u89d2\u50cf\u8d2d\u7269\u888b\u4e00\u6837\u7684\u56fe\u6807\uff0c\u7136\u540e\u5728\u53f3\u4fa7\u51fa\u73b0\u7684\u4e00\u680f\u4e2d\u627e\u5230 <code>css</code> \u6587\u4ef6\u5bf9\u5e94\u7684\u5730\u5740\uff0c\u4ee5\u53ca\u80fd\u770b\u5230\u5173\u952e\u5b57\uff0c</p> <p>\u6211\u4f7f\u7528\u4e86 Google Font \u4e0a\u7684 \u601d\u6e90\u5b8b\u4f53\uff0c\u5176\u5bf9\u5e94\u5730\u5740</p> <pre><code>https://fonts.googleapis.com/css2?family=Noto+Serif+SC&amp;display=swap\n</code></pre> <p>\u5173\u952e\u5b57\u4e3a <code>Noto Serif SC</code> \uff0c</p> <p>\u5982\u679c\u662f\u672a\u88ab Google Font \u6536\u5f55\u7684\u5b57\u4f53\uff0c\u5219\u9700\u8981\u53e6\u5916\u53bb\u5bfb\u627e\u5176 <code>css</code> \u7684\u5730\u5740\uff0c</p> <p>\u7136\u540e\u5728 <code>mkdocs.yml</code> \u4e2d <code>extra_css</code> \u5904\u52a0\u4e0a\u76f8\u5e94\u7684 <code>css</code> \u5730\u5740\uff0c</p> <p>\u518d\u5728\u8bbe\u7f6e\u81ea\u5b9a\u4e49\u7f51\u9875\u5916\u89c2\u7684 <code>css</code> \u6587\u4ef6\u4e2d(\u6211\u4e0e\u5b98\u65b9\u6587\u6863\u4e0a\u4e00\u6837\uff0c\u4f7f\u7528 <code>docs/stylesheets/extra.css</code> )\u6dfb\u52a0</p> <pre><code>:root {\n  --md-text-font: \"JetBrains Mono\", \"LXGW WenKai Screen\"; \n  --md-code-font: \"JetBrains Mono\", \"Noto Serif SC\";\n}\n</code></pre>"},{"location":"markdown%E7%9B%B8%E5%85%B3/mkdocs%28material%29/#34","title":"34","text":"<p>\u4fee\u6539 \u4ee3\u7801\u5757 \u548c \u884c\u5185\u4ee3\u7801 \u4e2d\u7684 \u5b57\u4f53\u5927\u5c0f \u548c \u884c\u95f4\u8ddd</p> <p>\u8be6\u7ec6\u5c1d\u8bd5/\u8bd5\u9519\u8fc7\u7a0b\u7ec6\u8282\u53c2\u8003 \u8c03\u6574 mkdocs-material \u7f51\u9875\u5916\u89c2\u8fc7\u7a0b\u8bb0\u5f55</p> <p>\u5927\u81f4\u65b9\u6cd5\u662f\uff0c\u5728\u8bbe\u7f6e\u7f51\u9875\u6837\u5f0f\u7684 <code>css</code> \u6587\u4ef6\u4e2d(\u5b98\u65b9\u6587\u6863\u4e2d\u4f7f\u7528\u7684\u662f <code>docs/stylesheets/extra.css</code> \uff0c\u6211\u4f7f\u7528\u7684\u662f <code>docs/stylesheets/custom.css</code> )\uff0c</p> <pre><code>/* \u4fee\u6539\u6240\u6709\u4ee3\u7801\u5b57\u4f53\u5927\u5c0f */\n.md-typeset code {\n  font-size: .65rem;\n}\n\n/* (\u8986\u76d6)\u4fee\u6539\u884c\u5185\u4ee3\u7801\u5b57\u4f53\u5927\u5c0f */\n.md-typeset code:not(pre code) {\n  font-size: inherit;\n}\n\n/* \u4fee\u6539\u4ee3\u7801\u5757\u884c\u95f4\u8ddd */\n.md-typeset pre {\n  line-height: 1.8;\n}\n</code></pre> <p>\u5bf9\u8fd9\u51e0\u4e2a\u5c5e\u6027\u7684\u503c\u8fdb\u884c\u76f8\u5e94\u7684\u4fee\u6539(\u5982\u679c\u6ca1\u6709\u5c5e\u6027\u6dfb\u52a0\u5373\u53ef\uff0c\u4f1a \u8986\u76d6 \u539f\u6709\u7684\u9ed8\u8ba4\u5c5e\u6027\u503c)</p>"},{"location":"markdown%E7%9B%B8%E5%85%B3/mkdocs%28material%29/#35","title":"35","text":"<p>\u4fee\u6539 giscus \u7684\u6837\u5f0f</p> <p>\u8be6\u7ec6\u5c1d\u8bd5/\u8bd5\u9519\u8fc7\u7a0b\u7ec6\u8282\u53c2\u8003 \u8c03\u6574 mkdocs-material \u7f51\u9875\u5916\u89c2\u8fc7\u7a0b\u8bb0\u5f55</p> <p>\u7ecf\u8fc7\u5728\u6d4f\u89c8\u5668\u4e0a\u6d4b\u8bd5\u53d1\u73b0\u4e86\u76f8\u5173\u7684\u51e0\u4e2a\u5c5e\u6027</p> <p></p> <ul> <li><code>--color-btn-primary-text</code> : \u53f3\u4e0b\u89d2  \u4f7f\u7528 Github \u767b\u5f55 \u7684\u6309\u94ae\u5904\uff0c\u8bbe\u7f6e\u5b57\u7684\u989c\u8272</li> <li><code>--color-btn-primary-bg</code> : \u540c\u4e0a\uff0c\u8bbe\u7f6e\u6309\u94ae(\u6574\u4f53\u586b\u5145)\u7684\u989c\u8272</li> <li><code>--color-btn-primary-border</code> : \u540c\u4e0a\uff0c\u8bbe\u7f6e\u6309\u94ae\u8fb9\u6846\u7684\u989c\u8272</li> <li><code>--color-btn-primary-hover-bg</code> : \u8bbe\u7f6e\u5c06\u9f20\u6807\u653e\u7f6e\u5728\u6309\u94ae\u4e0a\u65f6\uff0c\u6309\u94ae(\u6574\u4f53\u586b\u5145)\u7684\u989c\u8272</li> <li><code>--color-btn-primary-hover-border</code> : \u540c\u4e0a\uff0c\u8bbe\u7f6e\u6309\u94ae\u8fb9\u6846\u7684\u989c\u8272</li> <li><code>--color-fg-default</code> : \u8bbe\u7f6e <code>n</code> \u4e2a\u8868\u60c5 \u3001 <code>n</code> \u6761\u8bc4\u8bba \u3001\u8f93\u5165/\u9884\u89c8 (\u9009\u4e2d\u90a3\u4e2a) \u7684\u5b57\u4f53\u989c\u8272</li> <li><code>--color-fg-muted</code> : \u8bbe\u7f6e <code>n</code> \u4e2a\u8868\u60c5 \u4e0b\u7684\u7b11\u8138 \u3001\u8f93\u5165/\u9884\u89c8 (\u6ca1\u9009\u4e2d\u90a3\u4e2a) \u3001\u53f3\u4e0a\u5904 <code>Aa</code> \u3001\u6309\u94ae\u4e0a\u65b9\u7684markdown\u6807\u5fd7 \u7684\u989c\u8272</li> <li><code>--color-canvas-default</code> : \u8bbe\u7f6e \u8f93\u5165 \u548c \u6309\u94ae \u6240\u5728\u7684\u4e2d\u7a7a\u7684(\u6316\u53bb\u4e2d\u95f4\u8f93\u5165\u8bc4\u8bba\u6587\u672c\u7684\u533a\u57df)\u7684\u6846\u7684\u989c\u8272</li> <li><code>--color-canvas-inset</code> : \u8bbe\u7f6e \u4e2d\u95f4\u8f93\u5165\u8bc4\u8bba\u6587\u672c\u7684\u533a\u57df \u7684\u989c\u8272</li> <li><code>--color-canvas-subtle</code> : \u8bbe\u7f6e \u9884\u89c8 \u6240\u5728\u7684\u4e0a\u65b9\u7684\u6846\u7684\u989c\u8272</li> <li><code>--color-border-default</code> : \u8bbe\u7f6e\u6240\u6709\u52fe\u52d2\u8fb9\u6846\u7684\u7ebf\u7684\u989c\u8272</li> <li><code>--color-accent-fg</code> : \u8bbe\u7f6e \u5c06\u9f20\u6807\u79fb\u52a8\u5230 markdown\u6807\u5fd7 \u6216 <code>Aa</code> \u5904\u65f6\uff0c\u4ee5\u53ca\u5728\u8bc4\u8bba\u6587\u672c\u7684\u533a\u57df\u4e2d\u8f93\u5165\u65f6\u533a\u57df\u7684\u6846\uff0c\u6539\u53d8\u7684\u989c\u8272</li> <li><code>--color-btn-primary-selected-bg</code> : \u8bbe\u7f6e\u767b\u5f55\u6309\u94ae\u70b9\u51fb\u65f6\u7684\u989c\u8272</li> <li><code>--color-btn-primary-disabled-text</code> : \u8bbe\u7f6e\u767b\u5f55\u4e4b\u540e\uff0c\u8bc4\u8bba\u6309\u94ae\u7684\u8bc4\u8bba\u4e24\u4e2a\u5b57\u7684\u989c\u8272</li> <li><code>--color-btn-primary-disabled-bg</code> : \u540c\u4e0a\uff0c\u8bc4\u8bba\u6309\u94ae\u7684\u989c\u8272</li> <li><code>--color-btn-primary-disabled-border</code> : \u540c\u4e0a\uff0c\u8bc4\u8bba\u6309\u94ae\u8fb9\u6846\u7684\u989c\u8272</li> </ul> <p>\u7136\u540e\u57fa\u4e8e giscus \u5df2\u6709\u4e3b\u9898\u7684 css \u6587\u4ef6\u8fdb\u884c\u4fee\u6539\uff0c\u5982 <code>light</code> <code>noborder_dark</code> \uff0c\u5c06\u5bf9\u5e94\u7684\u5c5e\u6027\u7684\u503c\u8bbe\u7f6e\u6210\u81ea\u5df1\u60f3\u8bbe\u7f6e\u7684\u5c31\u53ef\u4ee5\u4e86\uff0c</p> <p>\u6700\u540e\u6211\u4fee\u6539\u5b8c\u7684</p> giscus_sunset_glow.cssgiscus_sunset_glow_dark.css giscus_sunset_glow.css <pre><code>/*! MIT License\n* Copyright (c) 2018 GitHub Inc.\n* https://github.com/primer/primitives/blob/main/LICENSE\n*/\nmain {\n--color-prettylights-syntax-comment: #6e7781;\n--color-prettylights-syntax-constant: #0550ae;\n--color-prettylights-syntax-entity: #8250df;\n--color-prettylights-syntax-storage-modifier-import: #24292f;\n--color-prettylights-syntax-entity-tag: #116329;\n--color-prettylights-syntax-keyword: #cf222e;\n--color-prettylights-syntax-string: #0a3069;\n--color-prettylights-syntax-variable: #953800;\n--color-prettylights-syntax-brackethighlighter-unmatched: #82071e;\n--color-prettylights-syntax-invalid-illegal-text: #f6f8fa;\n--color-prettylights-syntax-invalid-illegal-bg: #82071e;\n--color-prettylights-syntax-carriage-return-text: #f6f8fa;\n--color-prettylights-syntax-carriage-return-bg: #cf222e;\n--color-prettylights-syntax-string-regexp: #116329;\n--color-prettylights-syntax-markup-list: #3b2300;\n--color-prettylights-syntax-markup-heading: #0550ae;\n--color-prettylights-syntax-markup-italic: #24292f;\n--color-prettylights-syntax-markup-bold: #24292f;\n--color-prettylights-syntax-markup-deleted-text: #82071e;\n--color-prettylights-syntax-markup-deleted-bg: #ffebe9;\n--color-prettylights-syntax-markup-inserted-text: #116329;\n--color-prettylights-syntax-markup-inserted-bg: #dafbe1;\n--color-prettylights-syntax-markup-changed-text: #953800;\n--color-prettylights-syntax-markup-changed-bg: #ffd8b5;\n--color-prettylights-syntax-markup-ignored-text: #eaeef2;\n--color-prettylights-syntax-markup-ignored-bg: #0550ae;\n--color-prettylights-syntax-meta-diff-range: #8250df;\n--color-prettylights-syntax-brackethighlighter-angle: #57606a;\n--color-prettylights-syntax-sublimelinter-gutter-mark: #8c959f;\n--color-prettylights-syntax-constant-other-reference-link: #0a3069;\n--color-btn-text: #24292f;\n--color-btn-bg: #f6f8fa;\n--color-btn-border: #1f232826;\n--color-btn-shadow: 0 1px 0 #1f23280a;\n--color-btn-inset-shadow: inset 0 1px 0 #ffffff40;\n--color-btn-hover-bg: #f3f4f6;\n--color-btn-hover-border: #1f232826;\n--color-btn-active-bg: #ebecf0;\n--color-btn-active-border: #1f232826;\n--color-btn-selected-bg: #eeeff2;\n/* --color-btn-primary-text: #fff; */\n/* --color-btn-primary-bg: #1f883d; */\n/* --color-btn-primary-border: #1f232826; */\n--color-btn-primary-shadow: 0 1px 0 #1f23281a;\n--color-btn-primary-inset-shadow: inset 0 1px 0 #ffffff08;\n/* --color-btn-primary-hover-bg: #1a7f37; */\n/* --color-btn-primary-hover-border: #1f232826; */\n/* --color-btn-primary-selected-bg: #187733; */\n--color-btn-primary-selected-shadow: inset 0 1px 0 #002d1133;\n/* --color-btn-primary-disabled-text: #fffc; */\n/* --color-btn-primary-disabled-bg: #94d3a2; */\n/* --color-btn-primary-disabled-border: #1f232826; */\n--color-action-list-item-default-hover-bg: #d0d7de52;\n--color-segmented-control-bg: #eaeef2;\n--color-segmented-control-button-bg: #fff;\n--color-segmented-control-button-selected-border: #8c959f;\n/* --color-fg-default: #1f2328; */\n/* --color-fg-muted: #656d76; */\n--color-fg-subtle: #6e7781;\n/* --color-canvas-default: #fff; */\n--color-canvas-overlay: #fff;\n/* --color-canvas-inset: #f6f8fa; */\n/* --color-canvas-subtle: #f6f8fa; */\n/* --color-border-default: #d0d7de; */\n--color-border-muted: #d8dee4;\n--color-neutral-muted: #afb8c133;\n/* --color-accent-fg: #0969da; */\n--color-accent-emphasis: #0969da;\n--color-accent-muted: #54aeff66;\n--color-accent-subtle: #ddf4ff;\n--color-success-fg: #1a7f37;\n--color-attention-fg: #9a6700;\n--color-attention-muted: #d4a72c66;\n--color-attention-subtle: #fff8c5;\n--color-danger-fg: #d1242f;\n--color-danger-muted: #ff818266;\n--color-danger-subtle: #ffebe9;\n--color-primer-shadow-inset: inset 0 1px 0 #d0d7de33;\n--color-scale-gray-1: #eaeef2;\n--color-scale-blue-1: #b6e3ff;\n\n/*! Extensions from @primer/css/alerts/flash.scss */\n--color-social-reaction-bg-hover: var(--color-scale-gray-1);\n--color-social-reaction-bg-reacted-hover: var(--color-scale-blue-1);\n\n/* Custom style for sunset-glow mode */\n--primary-default: 123, 117, 165;\n--bg-default: 219, 154, 165;\n--color-btn-primary-text: #000000de;\n--color-btn-primary-bg: rgba(var(--primary-default), 0.45);\n--color-btn-primary-border: rgba(var(--primary-default), 0.5);\n--color-btn-primary-hover-bg: rgba(var(--primary-default), 0.3);\n--color-btn-primary-hover-border: rgba(var(--primary-default), 0.75);\n--color-btn-primary-selected-bg: rgba(var(--primary-default), 0.75);\n--color-btn-primary-disabled-text: #000000de;\n--color-btn-primary-disabled-bg: var(--color-btn-primary-bg);\n--color-btn-primary-disabled-border: var(--color-btn-primary-border);\n--color-fg-default: #000000de;\n--color-fg-muted: #0000008a;\n--color-canvas-default: hsl(322 21% 77% / 1);\n--color-canvas-inset: hsl(0 21% 87% / 1);\n--color-canvas-subtle: hsl(274 21% 70% / 1);\n--color-border-default: hsl(274 21% 70% / 1);\n--color-accent-fg: hsl(274 21% 70% / 1);\n}\n\nmain .pagination-loader-container {\nbackground-image: url(https://github.com/images/modules/pulls/progressive-disclosure-line.svg)\n}\n\nmain .gsc-loading-image {\nbackground-image: url(https://github.githubassets.com/images/mona-loading-default.gif)\n}\n</code></pre> giscus_sunset_glow_dark.css <pre><code>main {\n--primary-default: 20, 222, 155;\n--bg-default: 22, 22, 24;\n--color-prettylights-syntax-comment: #8b949e;\n--color-prettylights-syntax-constant: #79c0ff;\n--color-prettylights-syntax-entity: #d2a8ff;\n--color-prettylights-syntax-storage-modifier-import: #c9d1d9;\n--color-prettylights-syntax-entity-tag: #7ee787;\n--color-prettylights-syntax-keyword: #ff7b72;\n--color-prettylights-syntax-string: #a5d6ff;\n--color-prettylights-syntax-variable: #ffa657;\n--color-prettylights-syntax-brackethighlighter-unmatched: #f85149;\n--color-prettylights-syntax-invalid-illegal-text: #f0f6fc;\n--color-prettylights-syntax-invalid-illegal-bg: #8e1519;\n--color-prettylights-syntax-carriage-return-text: #f0f6fc;\n--color-prettylights-syntax-carriage-return-bg: #b62324;\n--color-prettylights-syntax-string-regexp: #7ee787;\n--color-prettylights-syntax-markup-list: #f2cc60;\n--color-prettylights-syntax-markup-heading: #1f6feb;\n--color-prettylights-syntax-markup-italic: #c9d1d9;\n--color-prettylights-syntax-markup-bold: #c9d1d9;\n--color-prettylights-syntax-markup-deleted-text: #ffdcd7;\n--color-prettylights-syntax-markup-deleted-bg: #67060c;\n--color-prettylights-syntax-markup-inserted-text: #aff5b4;\n--color-prettylights-syntax-markup-inserted-bg: #033a16;\n--color-prettylights-syntax-markup-changed-text: #ffdfb6;\n--color-prettylights-syntax-markup-changed-bg: #5a1e02;\n--color-prettylights-syntax-markup-ignored-text: #c9d1d9;\n--color-prettylights-syntax-markup-ignored-bg: #1158c7;\n--color-prettylights-syntax-meta-diff-range: #d2a8ff;\n--color-prettylights-syntax-brackethighlighter-angle: #8b949e;\n--color-prettylights-syntax-sublimelinter-gutter-mark: #484f58;\n--color-prettylights-syntax-constant-other-reference-link: #a5d6ff;\n--color-btn-text: #ebebf5db;\n--color-btn-bg: rgba(var(--bg-default), 1);\n--color-btn-border: rgba(var(--bg-default), 1);\n--color-btn-shadow: 0 1px 0 rgba(var(--bg-default), 1);\n--color-btn-inset-shadow: inset 0 1px 0 rgba(var(--bg-default), 1);\n--color-btn-hover-bg: rgba(var(--bg-default), 0.5);\n--color-btn-hover-border: rgba(var(--bg-default), 0.5);\n--color-btn-active-bg: rgba(var(--primary-default), 0.2);\n--color-btn-active-border: rgba(var(--primary-default), 1);\n--color-btn-selected-bg: rgba(var(--primary-default), 0.15);\n/* --color-btn-primary-text: #fff; */\n/* --color-btn-primary-bg: rgba(var(--primary-default), 0.45); */\n/* --color-btn-primary-border: rgba(var(--primary-default), 0.5); */\n--color-btn-primary-shadow: 0 1px 0 #1b1f241a;\n--color-btn-primary-inset-shadow: inset 0 1px 0 #ffffff08;\n/* --color-btn-primary-hover-bg: rgba(var(--primary-default), 0.53); */\n/* --color-btn-primary-hover-border: rgba(var(--primary-default), 0.75); */\n/* --color-btn-primary-selected-bg: rgba(var(--primary-default), 0.45); */\n--color-btn-primary-selected-shadow: inset 0 1px 0 #002d1133;\n/* --color-btn-primary-disabled-text: #fffc; */\n/* --color-btn-primary-disabled-bg: rgba(var(--primary-default), 0.5); */\n/* --color-btn-primary-disabled-border: rgba(var(--primary-default), 0.5); */\n--color-action-list-item-default-hover-bg: #b1bac41f;\n--color-segmented-control-bg: #6e76811a;\n--color-segmented-control-button-bg: #0d1117;\n--color-segmented-control-button-selected-border: rgba(var(--bg-default), 0.85);\n/* --color-fg-default: #ebebf5db; */\n/* --color-fg-muted: #ebebf599; */\n--color-fg-subtle: #ebebf580;\n/* --color-canvas-default: #1e1e20; */\n--color-canvas-overlay: #1e1e20;\n/* --color-canvas-inset: rgba(var(--bg-default), 0.85); */\n/* --color-canvas-subtle: rgba(var(--bg-default), 1); */\n/* --color-border-default: rgba(var(--bg-default), 0.85); */\n--color-border-muted: #afb8c133;\n--color-neutral-muted: #afb8c133;\n/* --color-accent-fg: rgba(var(--primary-default), 0.85); */\n--color-accent-emphasis: rgba(var(--primary-default), 0.95);\n--color-accent-muted: rgba(var(--primary-default), 0.4);\n--color-accent-subtle: rgba(var(--primary-default), 0.1);\n--color-success-fg: #3fb950;\n--color-attention-fg: #d29922;\n--color-attention-muted: #bb800966;\n--color-attention-subtle: #bb800926;\n--color-danger-fg: #f85149;\n--color-danger-muted: #f8514966;\n--color-danger-subtle: #f851491a;\n--color-primer-shadow-inset: 0 1px 0 rgba(var(--bg-default), 1), inset 0 1px 0 rgba(var(--bg-default), 1);\n--color-scale-gray-7: #161618;\n--color-scale-blue-8: #10b98126;\n\n/*! Extensions from @primer/css/alerts/flash.scss */\n--color-social-reaction-bg-hover: var(--color-scale-gray-7);\n--color-social-reaction-bg-reacted-hover: var(--color-scale-blue-8);\n\n/* Custom style for sunset-glow mode */\n--custom-primary-default: 123, 117, 165;\n/* --custom-bg-default: 219, 154, 165; */\n--color-btn-primary-text: #fcece9;\n--color-btn-primary-bg: rgba(var(--custom-primary-default), 0.85);\n--color-btn-primary-border: rgba(var(--custom-primary-default), 0.5);\n--color-btn-primary-hover-bg: rgba(var(--custom-primary-default), 0.7);\n--color-btn-primary-hover-border: rgba(var(--custom-primary-default), 0.35);\n--color-btn-primary-selected-bg: rgba(var(--custom-primary-default), 0.5);\n--color-btn-primary-disabled-text: #fcece9;\n--color-btn-primary-disabled-bg: var(--color-btn-primary-bg);\n--color-btn-primary-disabled-border: var(--color-btn-primary-border);\n--color-fg-default: #fcece9;\n--color-fg-muted: #a4908c;\n--color-canvas-default: hsl(309 5% 15% / 1);\n--color-canvas-inset: hsl(8 5% 12% / 1);\n--color-canvas-subtle: rgb(75 59 92);\n--color-border-default: rgba(0, 0, 0, 0);\n--color-accent-fg: rgba(var(--custom-primary-default), 0.7);\n}\n\nmain .pagination-loader-container {\nbackground-image: url(https://github.com/images/modules/pulls/progressive-disclosure-line-dark.svg)\n}\n\nmain .gsc-loading-image {\nbackground-image: url(https://github.githubassets.com/images/mona-loading-dark.gif)\n}\n</code></pre> <p>\u7136\u540e\uff0c\u9700\u8981\u5728\u4e4b\u524d\u8bbe\u7f6egiscus\u65f6\u4f7f\u7528\u7684 <code>comments.html</code> \u4e2d\uff0c\u5c06css\u6587\u4ef6\u6dfb\u52a0\u5230\u4e24\u5904\u8bbe\u7f6e\u4e3b\u9898\u7684\u4ee3\u7801\u4e2d</p> <pre><code>      var theme = palette.color.scheme === \"sunset-glow-dark\"\n        ? \"https://cdn.jsdelivr.net/gh/RonaldLN/MyPamphlet-Blog@main/docs/stylesheets/giscus_sunset_glow_dark.css\"\n        : \"https://cdn.jsdelivr.net/gh/RonaldLN/MyPamphlet-Blog@main/docs/stylesheets/giscus_sunset_glow.css\"\n</code></pre> <p>\u4ee5\u53ca</p> <pre><code>{% if page.meta.comments %}\n  ...\n  &lt;script src=\"https://giscus.app/client.js\"\n        ...\n        data-theme=\"https://cdn.jsdelivr.net/gh/RonaldLN/MyPamphlet-Blog@main/docs/stylesheets/giscus_sunset_glow.css\"\n        ...\n        async&gt;\n  &lt;/script&gt;\n...\n{% endif %}\n</code></pre> <p>\u8fd9\u91cc\u662f\u4f7f\u7528\u4e86 jsdelivr \u7f51\u7ad9 \u6765\u5bf9github\u4ed3\u5e93\u4e2d\u7684\u6587\u4ef6\u8fdb\u884c cdn \u52a0\u901f(\u4e0d\u9700\u8981\u6ce8\u518c\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528)\uff0c\u4f7f\u7528\u65b9\u6cd5\u53ef\u4ee5\u53c2\u8003\u7f51\u7ad9\u7684\u8bf4\u660e\u6587\u6863</p> <p>Documentation - jsDelivr</p>"},{"location":"markdown%E7%9B%B8%E5%85%B3/mkdocs%28material%29/#36","title":"36","text":"<p>\u8bbe\u7f6e\u53f3\u4fa7 toc \u76ee\u5f55\u81ea\u52a8\u5c55\u5f00\u6298\u53e0</p> <p>\u8be6\u7ec6\u5c1d\u8bd5/\u8bd5\u9519\u8fc7\u7a0b\u7ec6\u8282\u53c2\u8003 \u8c03\u6574 mkdocs-material \u7f51\u9875\u5916\u89c2\u8fc7\u7a0b\u8bb0\u5f55</p> <p>\u4e3b\u8981\u662f\u53c2\u8003\u4e86 \u9e64\u7fd4\u4e07\u91cc\u7684\u7b14\u8bb0\u672c (tonycrane.cc) \u4f5c\u8005\u4ed3\u5e93\u4e2d\u7684\u8bbe\u7f6e\uff0c</p> <p>\u5c06\u4ed3\u5e93\u4e2d\u7684 <code>docs/css/fold_toc.css</code> \u548c <code>docs/js/toc.js</code> \u4e0b\u8f7d\u5230 <code>docs/javascripts/toc.js</code> \u548c <code>docs/stylesheets/fold_toc.css</code> \u4e2d(\u4e5f\u53ef\u4ee5\u653e\u7f6e\u5728\u5176\u4ed6\u8def\u5f84\uff0c\u5728\u4e4b\u540e\u7684\u8bbe\u7f6e\u4e2d\u76f8\u5e94\u4fee\u6539\u5373\u53ef)</p> <p>\u7136\u540e\u5728 <code>overrides/main.html</code> (\u5982\u679c\u6ca1\u6709\u521b\u5efa\u5373\u53ef)\u4e2d\u8986\u5199 <code>site_nav</code> \u5757(\u53ef\u53c2\u8003\u5b98\u65b9\u6587\u6863 Overriding blocks)\uff0c\u5bfc\u5165\u8fd9\u4e24\u4e2a\u6587\u4ef6\u5373\u53ef</p> <pre><code>{% extends \"base.html\" %}\n\n{% block site_nav %}\n  &lt;!-- Add scripts that need to run before here --&gt;\n  {{ super() }}\n  &lt;!-- Add scripts that need to run afterwards here --&gt;\n  {% if page.toc and not \"toc.integrate\" in features %}\n    &lt;script src=\"https://cdn.jsdelivr.net/gh/RonaldLN/MyPamphlet@main/docs/javascripts/toc.js\" defer&gt;&lt;/script&gt;\n    &lt;link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/gh/RonaldLN/MyPamphlet@main/docs/stylesheets/fold_toc.css\"&gt;\n  {% endif %}\n{% endblock %}\n</code></pre>"},{"location":"markdown%E7%9B%B8%E5%85%B3/mkdocs%28material%29/#37","title":"37","text":"<p>\u66f4\u6539 blog index\u9875\u9762\u4e2d \u6bcf\u7bc7\u535a\u5ba2\u7684\u6458\u5f55 excerpt \u90e8\u5206\u7684\u6837\u5f0f</p> <p>\u57fa\u4e8e\u5b98\u65b9\u6587\u6863\u4e2d\u7684 Setup and theme structure \uff0c\u8bbe\u7f6e <code>overrides/partials/post.html</code> \uff0c</p> <p>\u56e0\u4e3a <code>partials/post.html</code> \u5904\u7684\u6ce8\u91ca\u5199\u7740 <code># Blog post excerpt</code> \uff0c\u8bf4\u660e\u8fd9\u4e2a\u662f\u8bbe\u7f6e\u6bcf\u7bc7\u535a\u5ba2\u7684\u6458\u5f55 excerpt \u7684\u6837\u5f0f\u7684</p> <p>\u7136\u540e\u7531\u4e8e\u6211\u4e4b\u524d\u7684\u7ecf\u9a8c\uff0c\u7528\u9664\u4e86 <code>main.html</code> \u4e4b\u5916\u7684\u5176\u4ed6\u6587\u4ef6\u8fdb\u884c\u8986\u5199\u65f6\uff0c\u90fd\u4e0d\u80fd\u4f7f\u7528 <code>{{ super() }}</code> \u6765\u83b7\u53d6\u9ed8\u8ba4\u7684\u4ee3\u7801( <code>main.html</code> \u4e3b\u8981\u662f\u62ff\u6765\u8986\u5199\u5757 block \u7684\uff0c\u53c2\u8003 Overriding blocks)\uff0c</p> <p>\u6240\u4ee5\u6211\u67e5\u770b\u5b98\u65b9\u6587\u6863\u7684\u4ed3\u5e93\u4e2d\u662f\u5426\u6709\u5bf9\u5e94\u7684\u6a21\u677f\uff0c\u7136\u540e\u53d1\u73b0 <code>material/templates/</code> \u4e2d\u6709\u6a21\u677f\uff0c\u4e8e\u662f\u590d\u5236 <code>post.html</code> \u7684\u4ee3\u7801</p> <p>mkdocs-material/material/templates/partials/post.html at master \u00b7 squidfunk/mkdocs-material (github.com) </p> <p>\u7136\u540e\u53bb\u751f\u6210\u7684\u9875\u9762\u4e2d\u67e5\u770b\u8981\u4fee\u6539\u7684\u5730\u65b9\u7684\u5bf9\u5e94\u6e90\u4ee3\u7801\uff0c</p> <p></p> <p>\u518d\u5728 <code>post.html</code> \u4e2d\u627e\u5230\u76f8\u5e94\u7684\u4ee3\u7801\u90e8\u5206</p> <pre><code>&lt;div class=\"md-post__content md-typeset\"&gt;\n  {{ post.content }}\n  &lt;nav class=\"md-post__action\"&gt;\n    &lt;a href=\"{{ post.url | url }}\"&gt;\n      {{ lang.t(\"blog.continue\") }}\n    &lt;/a&gt;\n  &lt;/nav&gt;\n&lt;/div&gt;\n</code></pre> <p>\u7ecf\u8fc7\u51e0\u6b21\u5c1d\u8bd5\u540e\uff0c\u6700\u540e\u6211\u4fee\u6539\u4e3a\u4e86</p> <pre><code>&lt;div class=\"md-post__content md-typeset\"&gt;\n  {{ post.content }}\n  &lt;nav class=\"md-post__action\"&gt;\n    &lt;a href=\"{{ post.url | url }}\"&gt;\n      ...\n      &lt;br /&gt;\n      {{ lang.t(\"blog.continue\") }}\n    &lt;/a&gt;\n    &lt;hr&gt;\n  &lt;/nav&gt;\n&lt;/div&gt;\n</code></pre> post.html <pre><code>{#-\n  This file was automatically generated - do not edit\n-#}\n&lt;article class=\"md-post md-post--excerpt\"&gt;\n  &lt;header class=\"md-post__header\"&gt;\n    {% if post.authors %}\n      &lt;nav class=\"md-post__authors md-typeset\"&gt;\n        {% for author in post.authors %}\n          &lt;span class=\"md-author\"&gt;\n            &lt;img src=\"{{ author.avatar }}\" alt=\"{{ author.name }}\"&gt;\n          &lt;/span&gt;\n        {% endfor %}\n      &lt;/nav&gt;\n    {% endif %}\n    &lt;div class=\"md-post__meta md-meta\"&gt;\n      &lt;ul class=\"md-meta__list\"&gt;\n        &lt;li class=\"md-meta__item\"&gt;\n          &lt;time datetime=\"{{ post.config.date.created }}\"&gt;\n            {{- post.config.date.created | date -}}\n          &lt;/time&gt;\n          {#- Collapse whitespace -#}\n        &lt;/li&gt;\n        {% if post.categories %}\n          &lt;li class=\"md-meta__item\"&gt;\n            {{ lang.t(\"blog.categories.in\") }}\n            {% for category in post.categories %}\n              &lt;a href=\"{{ category.url | url }}\" class=\"md-meta__link\"&gt;\n                {{- category.title -}}\n              &lt;/a&gt;\n              {%- if loop.revindex &gt; 1 %}, {% endif -%}\n            {% endfor -%}\n          &lt;/li&gt;\n        {% endif %}\n        {% if post.config.readtime %}\n          {% set time = post.config.readtime %}\n          &lt;li class=\"md-meta__item\"&gt;\n            {% if time == 1 %}\n              {{ lang.t(\"readtime.one\") }}\n            {% else %}\n              {{ lang.t(\"readtime.other\") | replace(\"#\", time) }}\n            {% endif %}\n          &lt;/li&gt;\n        {% endif %}\n      &lt;/ul&gt;\n      {% if post.config.draft %}\n        &lt;span class=\"md-draft\"&gt;\n          {{ lang.t(\"blog.draft\") }}\n        &lt;/span&gt;\n      {% endif %}\n    &lt;/div&gt;\n  &lt;/header&gt;\n  &lt;div class=\"md-post__content md-typeset\"&gt;\n    {{ post.content }}\n    &lt;nav class=\"md-post__action\"&gt;\n      &lt;a href=\"{{ post.url | url }}\"&gt;\n        ...\n        &lt;br /&gt;\n        {{ lang.t(\"blog.continue\") }}\n      &lt;/a&gt;\n      &lt;hr&gt;\n    &lt;/nav&gt;\n  &lt;/div&gt;\n&lt;/article&gt;\n</code></pre> <p>\u6700\u540e\u6548\u679c</p> \u4fee\u6539\u540e\u4fee\u6539\u524d <p></p> <p></p>"},{"location":"markdown%E7%9B%B8%E5%85%B3/mkdocs%28material%29/#38","title":"38","text":"<p>\u7ed9\u5355\u4e2a\u9875\u9762\u9690\u85cf\u53f3\u4fa7\u76ee\u5f55\u680f\u6216\u8005\u5de6\u4fa7\u5bfc\u822a\u680f</p> <p>Hiding the sidebars</p> <pre><code>---\nhide:\n  - navigation\n  - toc\n---\n\n# Page title\n...\n</code></pre>"},{"location":"markdown%E7%9B%B8%E5%85%B3/mkdocs%28material%29/#39","title":"39","text":"<p>\u5982\u679c\u4f7f\u7528html\u4e2d\u7684\u6807\u9898 <code>&lt;h1&gt;</code> <code>&lt;h2&gt;</code> <code>&lt;h3&gt;</code> <code>&lt;h4&gt;</code> <code>&lt;h5&gt;</code> <code>&lt;h6&gt;</code> \uff0c\u5982</p> <pre><code>...\n\n&lt;h1&gt;My Title&lt;/h1&gt;\n\n...\n</code></pre> <p>\u90a3\u4e48\u5728\u751f\u6210\u7684\u7f51\u9875\u7684\u53f3\u4fa7\u76ee\u5f55\u4e2d\uff0c\u8fd9\u6837\u7684\u6807\u9898\u4e0d\u4f1a\u51fa\u73b0\u5728\u76ee\u5f55\u91cc\u3002</p> <p>\u4f46\u8fd9\u6837\u7684\u5199\u6cd5\u91ccmarkdown\u8bed\u6cd5(\u5982\u52a0\u7c97 \u884c\u5185\u4ee3\u7801\u7b49)\u65e0\u6cd5\u4f7f\u7528</p>"},{"location":"markdown%E7%9B%B8%E5%85%B3/mkdocs%28material%29/#40","title":"40","text":"<p>\u4ee3\u7801\u5757\u7684\u884c\u53f7\u7684\u9ed8\u8ba4\u5b57\u4f53\u5927\u5c0f\u662f <code>.85em</code> \uff0c\u5982\u679c\u4fee\u6539\u4e86\u4ee3\u7801\u5757\u7684\u5b57\u4f53\u5927\u5c0f\uff0c\u5e76\u9700\u8981\u663e\u793a\u884c\u53f7\uff0c\u884c\u53f7\u7684\u914d\u7f6e\u4e5f\u9700\u8981\u4e00\u5e76\u4fee\u6539</p> docs/stylesheets/custom.css<pre><code>/* \u4fee\u6539\u4ee3\u7801\u5757\u884c\u53f7(\u6570\u5b57)\u7684\u5b57\u4f53\u5927\u5c0f */\n.highlighttable .linenos {\n  /* font-size: 0.93em; */\n  font-size: .65rem;\n}\n</code></pre>"},{"location":"markdown%E7%9B%B8%E5%85%B3/mkdocs%28material%29/#41","title":"41","text":"<p>\u7c7b\u4f3c\u4e8e\u56fe\u50cf\u5ef6\u8fdf\u52a0\u8f7d\u7684\u65b9\u5f0f\uff0c\u53ef\u4ee5\u5728\u56fe\u50cf\u4e4b\u540e\u7684\u52a0 <code>{}</code> \u5e76\u5728\u5176\u4e2d\u6dfb\u52a0 <code>style=\"zoom:n%\"</code> \u6765\u8c03\u6574\u56fe\u50cf\u7f29\u653e\u6bd4\u4f8b</p> <p>\u793a\u4f8b</p> <pre><code>![xxx](.../xxx.png){ loading=lazy style=\"zoom:33%\" }\n</code></pre>"},{"location":"markdown%E7%9B%B8%E5%85%B3/mkdocs%28material%29/#42","title":"42","text":"<p>\u53ef\u4ee5\u501f\u52a9mkdocs-awesome-nav\u63d2\u4ef6\u6765(\u90e8\u5206)\u8986\u76d6\u5bfc\u822a\u4e2d\u6587\u4ef6\u5939\u7684\u6807\u9898\uff0c\u4f8b\u5982\uff1a</p> .nav.yml<pre><code>nav:\n    - index.md\n    - \u6a21\u5757: modules\n    - \"*\"\n</code></pre> <p>\u53c2\u8003\u5b98\u65b9\u6587\u6863</p> <p>Custom Navigation - Awesome Nav for MkDocs</p> \u4fee\u6539\u524d\u4fee\u6539\u540e <p></p> <p></p> <p>\u4ece\u8fd9\u4e2aissue\u4e2d</p> <p>Question about the automatic navigation menu \u00b7 squidfunk/mkdocs-material \u00b7 Discussion #4684</p> <p>sennewood\u7684\u56de\u590d\u4e2d\u5f97\u77e5\u4e86\u8fd9\u4e2a\u63d2\u4ef6</p>"},{"location":"python%E7%9B%B8%E5%85%B3/matplotlib/","title":"Matplotlib","text":"<p> \u7ea6 950 \u4e2a\u5b57  90 \u884c\u4ee3\u7801  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 4 \u5206\u949f</p>"},{"location":"python%E7%9B%B8%E5%85%B3/matplotlib/#1","title":"1","text":"<p>\u901a\u8fc7 <code>figure(num)</code> \u65b9\u6cd5\u521b\u5efa\u591a\u4e2a\u7a97\u53e3\uff0c\u5e76\u4e14\u53ef\u4ee5\u901a\u8fc7\u53c2\u6570 <code>figsize=(width, height)</code> \u8bbe\u7f6e\u7a97\u53e3\u7684\u5927\u5c0f</p> <p>\u4e14\uff0c\u8bbe\u7f6e\u56fe\u4f8b( <code>legned()</code> )\u3001\u5750\u6807\u8f74\u6807\u7b7e\u548c\u6807\u9898( <code>title(\"text\")</code> )\u7684\u51fd\u6570\u53ea\u5bf9\u4ee3\u7801\u4e2d\u6700\u8fd1\u7684\u7a97\u53e3\u6709\u6548</p>"},{"location":"python%E7%9B%B8%E5%85%B3/matplotlib/#2","title":"2","text":"<p>\u4fdd\u5b58\u56fe\u50cf\u7684\u65b9\u6cd5</p> <pre><code>from matplotlib import pyplot as plt\n</code></pre> <p><code>plt.savefig()</code> \u53ef\u4ee5\u628a\u56fe\u50cf\u4fdd\u5b58\u6210\u56fe\u7247\uff0c\u4f46\u662f\u4f1a\u628a\u4e4b\u524d\u6dfb\u52a0\u8fc7\u7684\u6570\u636e\u90fd\u653e\u5728\u4e00\u4e2a\u56fe\u91cc\u9762</p> <p>\u6211\u5c31\u6bcf\u6b21\u8f93\u51fa\u6210\u6587\u4ef6\u540e\u6e05\u9664\u6570\u636e</p> <pre><code>plt.savefig(path + '.png')\nplt.clf()\n</code></pre>"},{"location":"python%E7%9B%B8%E5%85%B3/matplotlib/#3","title":"3","text":"<pre><code>import matplotlib\n\nfig = matplotlib.pyplot.figure()\n</code></pre> <p>\u76f4\u63a5\u4f7f\u7528\u4f1a\u62a5\u9519</p> <pre><code>AttributeError: module 'matplotlib' has no attribute 'pyplot'\n</code></pre> <p>\u9700\u8981\u5355\u72ec\u8fdb\u884c\u5bfc\u5165</p> <pre><code>import matplotlib.pyplot as plt\n</code></pre> <p>\u4ee3\u7801\u4e2d\u8fdb\u884c\u76f8\u5e94\u7684\u4fee\u6539\u5c31\u53ef\u4ee5\u6b63\u5e38\u4f7f\u7528</p> chat log <p>user: </p> <p>matplotlib\u600e\u4e48\u6253\u5370\u4e24\u5f20\u56fe\uff1f</p> <p>chatgpt: </p> <p>\u8981\u5728 Matplotlib \u4e2d\u6253\u5370\u4e24\u5f20\u56fe\uff0c\u53ef\u4ee5\u4f7f\u7528 <code>plt.subplot()</code> \u51fd\u6570\u6216 <code>plt.subplots()</code> \u51fd\u6570\u6765\u521b\u5efa\u5b50\u56fe\u3002\u4e0b\u9762\u662f\u4f7f\u7528 <code>plt.subplot()</code> \u51fd\u6570\u6253\u5370\u4e24\u5f20\u56fe\u7684\u793a\u4f8b\u4ee3\u7801\uff1a</p> <pre><code>import matplotlib.pyplot as plt\nimport numpy as np\n\n# \u521b\u5efa\u6570\u636e\nx = np.linspace(0, 2 * np.pi, 100)\ny1 = np.sin(x)\ny2 = np.cos(x)\n\n# \u7ed8\u5236\u7b2c\u4e00\u5f20\u56fe\nplt.subplot(2, 1, 1)\nplt.plot(x, y1)\nplt.title('Sin')\n\n# \u7ed8\u5236\u7b2c\u4e8c\u5f20\u56fe\nplt.subplot(2, 1, 2)\nplt.plot(x, y2)\nplt.title('Cos')\n\n# \u663e\u793a\u56fe\u50cf\nplt.show()\n</code></pre> <p>\u5728\u4e0a\u9762\u7684\u4ee3\u7801\u4e2d\uff0c<code>plt.subplot(2, 1, 1)</code> \u521b\u5efa\u4e86\u4e00\u4e2a 2 \u884c 1 \u5217\u7684\u5b50\u56fe\u7f51\u683c\uff0c\u5e76\u5c06\u5f53\u524d\u7684 Axes \u5bf9\u8c61\u8bbe\u7f6e\u4e3a\u7b2c\u4e00\u4e2a\u5b50\u56fe\u3002\u7136\u540e\uff0c\u6211\u4eec\u4f7f\u7528 <code>plt.plot()</code> \u51fd\u6570\u7ed8\u5236\u7b2c\u4e00\u4e2a\u56fe\uff0c\u5e76\u4f7f\u7528 <code>plt.title()</code> \u51fd\u6570\u6dfb\u52a0\u6807\u9898\u3002\u63a5\u4e0b\u6765\uff0c<code>plt.subplot(2, 1, 2)</code> \u8bbe\u7f6e\u5f53\u524d\u7684 Axes \u5bf9\u8c61\u4e3a\u7b2c\u4e8c\u4e2a\u5b50\u56fe\uff0c\u5e76\u7ed8\u5236\u7b2c\u4e8c\u4e2a\u56fe\u3002\u6700\u540e\uff0c\u6211\u4eec\u8c03\u7528 <code>plt.show()</code> \u51fd\u6570\u663e\u793a\u56fe\u50cf\u3002</p> <p>\u5982\u679c\u4f60\u60f3\u8981\u66f4\u7075\u6d3b\u5730\u63a7\u5236\u5b50\u56fe\u7684\u5e03\u5c40\uff0c\u53ef\u4ee5\u4f7f\u7528 <code>plt.subplots()</code> \u51fd\u6570\u3002\u4e0b\u9762\u662f\u4f7f\u7528 <code>plt.subplots()</code> \u51fd\u6570\u6253\u5370\u4e24\u5f20\u56fe\u7684\u793a\u4f8b\u4ee3\u7801\uff1a</p> <pre><code>import matplotlib.pyplot as plt\nimport numpy as np\n\n# \u521b\u5efa\u6570\u636e\nx = np.linspace(0, 2 * np.pi, 100)\ny1 = np.sin(x)\ny2 = np.cos(x)\n\n# \u521b\u5efa\u5b50\u56fe\nfig, axs = plt.subplots(2, 1, figsize=(6, 6))\n\n# \u7ed8\u5236\u7b2c\u4e00\u5f20\u56fe\naxs[0].plot(x, y1)\naxs[0].set_title('Sin')\n\n# \u7ed8\u5236\u7b2c\u4e8c\u5f20\u56fe\naxs[1].plot(x, y2)\naxs[1].set_title('Cos')\n\n# \u8c03\u6574\u5b50\u56fe\u4e4b\u95f4\u7684\u95f4\u8ddd\nfig.tight_layout()\n\n# \u663e\u793a\u56fe\u50cf\nplt.show()\n</code></pre> <p>\u5728\u4e0a\u9762\u7684\u4ee3\u7801\u4e2d\uff0c<code>plt.subplots(2, 1, figsize=(6, 6))</code> \u521b\u5efa\u4e86\u4e00\u4e2a 2 \u884c 1 \u5217\u7684\u5b50\u56fe\u7f51\u683c\uff0c\u5e76\u5c06\u8fd4\u56de\u7684 Figure \u5bf9\u8c61\u548c Axes \u5bf9\u8c61\u5b58\u50a8\u5728\u53d8\u91cf <code>fig</code> \u548c <code>axs</code> \u4e2d\u3002\u7136\u540e\uff0c\u6211\u4eec\u4f7f\u7528 <code>axs[0].plot()</code> \u548c <code>axs[1].plot()</code> \u51fd\u6570\u5206\u522b\u5728\u7b2c\u4e00\u4e2a\u548c\u7b2c\u4e8c\u4e2a\u5b50\u56fe\u4e2d\u7ed8\u5236\u56fe\u50cf\uff0c\u5e76\u4f7f\u7528 <code>axs[0].set_title()</code> \u548c <code>axs[1].set_title()</code> \u51fd\u6570\u6dfb\u52a0\u6807\u9898\u3002\u6700\u540e\uff0c\u6211\u4eec\u4f7f\u7528 <code>fig.tight_layout()</code> \u51fd\u6570\u8c03\u6574\u5b50\u56fe\u4e4b\u95f4\u7684\u95f4\u8ddd\uff0c\u5e76\u8c03\u7528 <code>plt.show()</code> \u51fd\u6570\u663e\u793a\u56fe\u50cf\u3002</p> <p>user: </p> <p>\u5982\u4f55\u6253\u5f00figure2?</p> <p>chatgpt: </p> <p>\u5982\u679c\u4f60\u60f3\u8981\u6253\u5f00 Matplotlib \u4e2d\u7684\u7b2c\u4e8c\u4e2a Figure \u7a97\u53e3\uff0c\u53ef\u4ee5\u4f7f\u7528 <code>plt.figure()</code> \u51fd\u6570\u521b\u5efa\u4e00\u4e2a\u65b0\u7684 Figure \u5bf9\u8c61\uff0c\u5e76\u5728\u8c03\u7528 <code>plt.show()</code> \u51fd\u6570\u4e4b\u524d\u8c03\u7528 <code>plt.figure()</code> \u51fd\u6570\u3002</p> <p>\u4e0b\u9762\u662f\u4e00\u4e2a\u7b80\u5355\u7684\u793a\u4f8b\u4ee3\u7801\uff0c\u6f14\u793a\u5982\u4f55\u6253\u5f00\u7b2c\u4e8c\u4e2a Figure \u7a97\u53e3\uff1a</p> <pre><code>import matplotlib.pyplot as plt\nimport numpy as np\n\n# \u521b\u5efa\u6570\u636e\nx = np.linspace(0, 2 * np.pi, 100)\ny1 = np.sin(x)\ny2 = np.cos(x)\n\n# \u521b\u5efa\u7b2c\u4e00\u4e2a\u56fe\u5f62\u7a97\u53e3\nplt.figure(1)\nplt.plot(x, y1)\nplt.title('Sin')\n\n# \u521b\u5efa\u7b2c\u4e8c\u4e2a\u56fe\u5f62\u7a97\u53e3\nplt.figure(2)\nplt.plot(x, y2)\nplt.title('Cos')\n\n# \u663e\u793a\u56fe\u50cf\nplt.show()\n</code></pre> <p>\u5728\u4e0a\u9762\u7684\u4ee3\u7801\u4e2d\uff0c\u6211\u4eec\u9996\u5148\u5728 <code>plt.figure(1)</code> \u4e2d\u521b\u5efa\u7b2c\u4e00\u4e2a\u56fe\u5f62\u7a97\u53e3\uff0c\u5e76\u5728\u5176\u4e2d\u7ed8\u5236\u4e86\u4e00\u4e2a\u6b63\u5f26\u51fd\u6570\u56fe\u50cf\u3002\u7136\u540e\uff0c\u6211\u4eec\u5728 <code>plt.figure(2)</code> \u4e2d\u521b\u5efa\u4e86\u7b2c\u4e8c\u4e2a\u56fe\u5f62\u7a97\u53e3\uff0c\u5e76\u5728\u5176\u4e2d\u7ed8\u5236\u4e86\u4f59\u5f26\u51fd\u6570\u56fe\u50cf\u3002\u6700\u540e\uff0c\u6211\u4eec\u8c03\u7528 <code>plt.show()</code> \u51fd\u6570\u6765\u663e\u793a\u8fd9\u4e24\u4e2a\u56fe\u5f62\u7a97\u53e3\u3002</p> <p>\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u6bcf\u6b21\u8c03\u7528 <code>plt.figure()</code> \u51fd\u6570\u90fd\u4f1a\u521b\u5efa\u4e00\u4e2a\u65b0\u7684 Figure \u5bf9\u8c61\uff0c\u5e76\u5c06\u5176\u8bbe\u4e3a\u5f53\u524d Figure \u5bf9\u8c61\u3002\u56e0\u6b64\uff0c\u5982\u679c\u4f60\u9700\u8981\u5728\u591a\u4e2a Figure \u7a97\u53e3\u4e2d\u7ed8\u5236\u4e0d\u540c\u7684\u56fe\u5f62\uff0c\u8bf7\u786e\u4fdd\u5728\u6bcf\u4e2a Figure \u7a97\u53e3\u4e2d\u4f7f\u7528\u4e0d\u540c\u7684 Figure \u5bf9\u8c61\u3002</p> <p>user: </p> <p>\u5982\u4f55\u8bbe\u7f6e\u56fe\u5f62\u7a97\u53e3\u7684\u5927\u5c0f\uff0c\u6bd4\u5982\u663e\u793a\u66f4\u957f\u7684x\u8f74</p> <p>chatgpt: </p> <p>\u8981\u8bbe\u7f6e Matplotlib \u4e2d\u56fe\u5f62\u7a97\u53e3\u7684\u5927\u5c0f\uff0c\u53ef\u4ee5\u4f7f\u7528 <code>plt.figure()</code> \u51fd\u6570\u7684 <code>figsize</code> \u53c2\u6570\u3002<code>figsize</code> \u53c2\u6570\u63a5\u53d7\u4e00\u4e2a\u5143\u7ec4\uff0c\u7528\u4e8e\u6307\u5b9a\u56fe\u5f62\u7a97\u53e3\u7684\u5bbd\u5ea6\u548c\u9ad8\u5ea6\uff0c\u5355\u4f4d\u4e3a\u82f1\u5bf8\u3002</p> <p>\u4f8b\u5982\uff0c\u5982\u679c\u4f60\u60f3\u8981\u663e\u793a\u66f4\u957f\u7684 x \u8f74\uff0c\u53ef\u4ee5\u901a\u8fc7\u589e\u52a0\u56fe\u5f62\u7a97\u53e3\u7684\u5bbd\u5ea6\u6765\u5b9e\u73b0\u3002\u4e0b\u9762\u662f\u4e00\u4e2a\u793a\u4f8b\u4ee3\u7801\uff0c\u6f14\u793a\u5982\u4f55\u8bbe\u7f6e\u56fe\u5f62\u7a97\u53e3\u7684\u5927\u5c0f\uff1a</p> <pre><code>import matplotlib.pyplot as plt\nimport numpy as np\n\n# \u521b\u5efa\u6570\u636e\nx = np.linspace(0, 2 * np.pi, 100)\ny = np.sin(x)\n\n# \u521b\u5efa\u56fe\u5f62\u7a97\u53e3\uff0c\u5e76\u8bbe\u7f6e\u5927\u5c0f\nplt.figure(figsize=(8, 4))\n\n# \u7ed8\u5236\u56fe\u50cf\nplt.plot(x, y)\nplt.xlabel('X')\nplt.ylabel('Y')\nplt.title('Sin')\n\n# \u663e\u793a\u56fe\u50cf\nplt.show()\n</code></pre> <p>\u5728\u4e0a\u9762\u7684\u4ee3\u7801\u4e2d\uff0c\u6211\u4eec\u4f7f\u7528 <code>plt.figure(figsize=(8, 4))</code> \u51fd\u6570\u521b\u5efa\u4e00\u4e2a\u5927\u5c0f\u4e3a 8x4 \u82f1\u5bf8\u7684\u56fe\u5f62\u7a97\u53e3\uff0c\u7136\u540e\u5728\u5176\u4e2d\u7ed8\u5236\u4e86\u4e00\u4e2a\u6b63\u5f26\u51fd\u6570\u56fe\u50cf\u3002\u901a\u8fc7\u589e\u52a0\u56fe\u5f62\u7a97\u53e3\u7684\u5bbd\u5ea6\uff0cx \u8f74\u7684\u957f\u5ea6\u4e5f\u968f\u4e4b\u589e\u52a0\u3002</p> <p>\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u56fe\u5f62\u7a97\u53e3\u7684\u5927\u5c0f\u53ef\u80fd\u56e0\u64cd\u4f5c\u7cfb\u7edf\u548c\u663e\u793a\u5668\u800c\u5f02\uff0c\u56e0\u6b64\u4f60\u53ef\u80fd\u9700\u8981\u6839\u636e\u5b9e\u9645\u60c5\u51b5\u8c03\u6574\u7a97\u53e3\u5927\u5c0f\u3002</p>"},{"location":"python%E7%9B%B8%E5%85%B3/mediapipe/","title":"MediaPipe","text":"<p> \u7ea6 134 \u4e2a\u5b57  3 \u884c\u4ee3\u7801 </p>"},{"location":"python%E7%9B%B8%E5%85%B3/mediapipe/#1","title":"1","text":"<p>\u4e00\u5f00\u59cb\u5b89\u88c5mediapipe\u65f6</p> <pre><code>pip install mediapipe\n</code></pre> <p>\u663e\u793a\u4e86\u5982\u4e0b\u62a5\u9519</p> <pre><code>ERROR: Could not find a version that satisfies the requirement mediapipe (from versions: none)\nERROR: No matching distribution found for mediapipe\n</code></pre> <p>\u7136\u540egoogle\u641c\u7d22\u4fe1\u606f\uff0c\u5728github issues\u4e0a\u7684\u8fd9\u4e2a\u56de\u7b54\u4e0a\u770b\u5230\u4e86\u5b98\u65b9\u6587\u6863\u4e2d\u5bf9\u8fd9\u4e2a\u60c5\u51b5\u7684\u8bf4\u660e\uff0c</p> <p>mediapipe/docs/getting_started/troubleshooting.md at master \u00b7 google/mediapipe (github.com)</p> <p>\u7136\u540e\u53d1\u73b0\u662f\u7531\u4e8e\u6700\u5f00\u59cb\u5b89\u88c5\u7684python\u662f32\u4f4d\u7684\u7248\u672c\uff0c\u6240\u4ee5\u91cd\u65b0\u53bb\u5b89\u88c5\u4e8664\u4f4d\u7684python (python-3.10.11-amd64.exe)</p> <p>Please note that MediaPipe Python PyPI officially supports the 64-bit version of Python 3.7 to 3.10 on the following OS:</p> <ul> <li>x86_64 Linux</li> <li>x86_64 macOS 10.15+</li> <li>amd64 Windows</li> </ul> <p>\u6362\u621064\u4f4d\u7684python\u4e4b\u540e\u5c31\u53ef\u4ee5\u6b63\u5e38 <code>pip install mediapipe</code> \u4e86</p>"},{"location":"python%E7%9B%B8%E5%85%B3/numpy/","title":"NumPy","text":"<p> \u7ea6 138 \u4e2a\u5b57 </p>"},{"location":"python%E7%9B%B8%E5%85%B3/numpy/#1","title":"1","text":"<p>\u4e00\u4e2a10\u5206\u949f\u7684numpy\u5165\u95e8\u6559\u7a0b_\u54d4\u54e9\u54d4\u54e9_bilibili</p>"},{"location":"python%E7%9B%B8%E5%85%B3/numpy/#2","title":"2","text":"<p>\u5148\u8fdb\u89c6\u89c9</p> <p>numpy\u6559\u7a0b07---ndarray\u7684\u4fdd\u5b58\u4e0e\u52a0\u8f7d_ndarray\u4fdd\u5b58-CSDN\u535a\u5ba2</p> <p><code>ndarray</code> \u7c7b\u7684\u8f93\u51fa\u548c\u8bfb\u53d6\uff0c\u53ef\u4ee5\u7528 <code>np</code> \u7c7b\u7684\u65b9\u6cd5\u8f93\u51fa\u548c\u52a0\u8f7d\uff0c\u6709\u4e24\u79cd\u8f93\u51fa\u5f62\u5f0f</p> <ul> <li> <p>\u4e8c\u8fdb\u5236\u683c\u5f0f(\u8f93\u51fa\u6210 <code>.npy</code> \u6587\u4ef6)</p> <p>\u4f7f\u7528 <code>np.save(\"file\", array)</code> \u65b9\u6cd5\uff0c <code>\"file\"</code> \u662f\u76ee\u6807\u6587\u4ef6\u540d\uff0c\u5982\u679c\u4e0d\u52a0\u540e\u7f00\uff0c\u4f1a\u81ea\u52a8\u6dfb\u52a0 <code>.npy</code> \u540e\u7f00\uff0c<code>array</code> \u662f <code>ndarray</code> \u5b9e\u4f8b</p> </li> <li> <p>\u6587\u672c\u683c\u5f0f</p> <p>\u4f7f\u7528 <code>np.savetxt(\"fname\", array)</code> \u65b9\u6cd5\uff0c<code>\"fname\"</code> \u9700\u8981\u586b\u5199\u5b8c\u6574\u7684\u6587\u4ef6\u540d\uff0c<code>array</code> \u662f <code>ndarray</code> \u5b9e\u4f8b</p> </li> </ul>"},{"location":"python%E7%9B%B8%E5%85%B3/openpyxl%28%E7%94%A8%E4%BA%8Eexcel%29/","title":"OpenPyXL","text":"<p> \u7ea6 620 \u4e2a\u5b57  271 \u884c\u4ee3\u7801  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 5 \u5206\u949f</p>"},{"location":"python%E7%9B%B8%E5%85%B3/openpyxl%28%E7%94%A8%E4%BA%8Eexcel%29/#1","title":"1","text":"<p>2023\u6570\u6a21\u56fd\u8d5b</p> <p>\u8bfb\u53d6\u548c\u5199\u5165\u7684\u51fd\u6570</p> <pre><code>import openpyxl\n\n\n# \u5b9a\u4e49\u4e00\u4e2a\u51fd\u6570\uff0c\u4ece Excel \u6587\u4ef6\u4e2d\u83b7\u53d6\u6570\u636e\u5e76\u5b58\u50a8\u5230\u5217\u8868\u4e2d\ndef get_data_from_excel(file_name, sheet_name):\n    # \u521b\u5efa\u4e00\u4e2a\u7a7a\u5217\u8868\u6765\u5b58\u50a8\u6570\u636e\n    data_list = []\n    # \u6253\u5f00 Excel \u6587\u4ef6\n    wb = openpyxl.load_workbook(file_name)\n    # \u83b7\u53d6\u5de5\u4f5c\u8868\n    sheet = wb[sheet_name]\n    # \u83b7\u53d6\u6700\u5927\u884c\u6570\n    max_row = sheet.max_row\n    # \u83b7\u53d6\u6700\u5927\u5217\u6570\n    max_column = sheet.max_column\n    # \u4f7f\u7528\u5faa\u73af\u4ece Excel \u6587\u4ef6\u4e2d\u83b7\u53d6\u6570\u636e\n    for i in range(2, max_row + 1):\n        # \u521b\u5efa\u4e00\u4e2a\u7a7a\u5217\u8868\u6765\u5b58\u50a8\u6bcf\u884c\u7684\u6570\u636e\n        sub_list = []\n        for j in range(1, max_column + 1):\n            # \u83b7\u53d6\u6bcf\u4e2a\u5355\u5143\u683c\u7684\u6570\u636e\n            cell = sheet.cell(row=i, column=j)\n            # \u5c06\u6570\u636e\u6dfb\u52a0\u5230\u5b50\u5217\u8868\u4e2d\n            sub_list.append(cell.value)\n        # \u5c06\u5b50\u5217\u8868\u6dfb\u52a0\u5230\u6570\u636e\u5217\u8868\u4e2d\n        data_list.append(sub_list)\n    # \u8fd4\u56de\u6570\u636e\u5217\u8868\n    return data_list\n\n\n# \u5b9a\u4e49\u4e00\u4e2a\u51fd\u6570\uff0c\u5c06\u6570\u636e\u5199\u5165 Excel \u6587\u4ef6\u4e2d\ndef write_data_to_excel(file_name, sheet_name, data_list):\n    # \u6253\u5f00 Excel \u6587\u4ef6\n    wb = openpyxl.load_workbook(file_name)\n    # \u5982\u679c\u5de5\u4f5c\u8868\u4e0d\u5b58\u5728\uff0c\u5219\u521b\u5efa\u5b83\n    if sheet_name not in wb.sheetnames:\n        wb.create_sheet(sheet_name)\n    # \u83b7\u53d6\u5de5\u4f5c\u8868\n    sheet = wb[sheet_name]\n    # \u6839\u636e\u6570\u636e\u7684\u5927\u5c0f\u83b7\u53d6\u6700\u5927\u884c\u6570\u548c\u5217\u6570\n    max_row = len(data_list)\n    max_column = len(data_list[0])\n    # \u4f7f\u7528\u5faa\u73af\u5c06\u6570\u636e\u5199\u5165 Excel \u6587\u4ef6\u4e2d\n    for i in range(2, max_row + 2):\n        for j in range(1, max_column + 1):\n            # \u83b7\u53d6\u6bcf\u4e2a\u5355\u5143\u683c\u7684\u6570\u636e\n            cell = sheet.cell(row=i, column=j)\n            # \u5c06\u6570\u636e\u5199\u5165\u5355\u5143\u683c\n            cell.value = data_list[i - 2][j - 1]\n    # \u4fdd\u5b58 Excel \u6587\u4ef6\n    wb.save(file_name)\n</code></pre> <ul> <li>\u6ce8\u610f\uff1a\u5199\u5165\u7684\u51fd\u6570\u9700\u8981\u76ee\u6807\u6587\u4ef6\u5df2\u7ecf\u521b\u5efa\u597d/\u5df2\u7ecf\u5b58\u5728</li> <li>\u8be5\u5199\u5165\u51fd\u6570\u5c06list\u5217\u8868\u5199\u5165excel\u8868\u683c\u65f6\uff0c\u4f1a\u7a7a\u51fa\u7b2c\u4e00\u884c(\u53ef\u4ee5\u7528\u4e8e\u586b\u5199\u680f\u76ee\u540d\u79f0)</li> </ul> chat log <p>user:</p> <pre><code>import openpyxl\n\n\n# define a function to get the data from an Excel file to a list\ndef get_data(file_name, sheet_name):\n    # create an empty list to store the data\n    data_list = []\n    # open the Excel file\n    wb = openpyxl.load_workbook(file_name)\n    # get the sheet\n    sheet = wb[sheet_name]\n    # get the max row\n    max_row = sheet.max_row\n    # get the max column\n    max_column = sheet.max_column\n    # use a for loop to get the data from the Excel file\n    for i in range(2, max_row + 1):\n        # create an empty list to store the data of each row\n        sub_list = []\n        for j in range(1, max_column + 1):\n            # get the data of each cell\n            cell = sheet.cell(row=i, column=j)\n            # add the data to the sub list\n            sub_list.append(cell.value)\n        # add the sub list to the data list\n        data_list.append(sub_list)\n    # return the data list\n    return data_list\n\n\ndata = get_data(\"data.xlsx\", \"Sheet1\")\n# print(data)\nnew_data = []\nfor line in data:\n    if line[1] == 'A':\n        line[2] /= 0.6\n        line[3] /= 0.6\n    elif line[1] == 'B':\n        line[2] /= 0.66\n        line[3] /= 0.66\n    else:\n        line[2] /= 0.72\n        line[3] /= 0.72\n    new_data += [line]\n\n# print(new_data)\n\n\n# define a function to write the data to an Excel file\ndef write_data(file_name, sheet_name, data_list):\n    # open the Excel file\n    wb = openpyxl.load_workbook(file_name)\n    # get the sheet\n    sheet = wb[sheet_name]\n    # get the max row\n    max_row = sheet.max_row\n    # get the max column\n    max_column = sheet.max_column\n    # use a for loop to write the data to the Excel file\n    for i in range(2, max_row + 1):\n        for j in range(1, max_column + 1):\n            # get the data of each cell\n            cell = sheet.cell(row=i, column=j)\n            # write the data to the cell\n            cell.value = data_list[i - 2][j - 1]\n    # save the Excel file\n    wb.save(file_name)\n\n\nwrite_data(\"data.xlsx\", \"Sheet2\", new_data)\n</code></pre> <p>My code did not successfully write the data to the Excel file. Can you help me see what the error is and how to modify it?</p> <p>chatgpt:</p> <p>Based on the code you provided, there are a couple of issues that might be causing the problem you are encountering when trying to write data to an Excel file:</p> <ol> <li>The \"Sheet2\" sheet does not exist in the Excel file.</li> </ol> <p>If the sheet you are trying to write to does not exist in the Excel file, you will need to create it first before you can write data to it. You can do this using the <code>create_sheet()</code> method of the workbook object. For example:</p> <pre><code>wb.create_sheet(\"Sheet2\")\n</code></pre> <ol> <li>The range of cells to write to is incorrect.</li> </ol> <p>In the <code>write_data()</code> function, the range of cells to write to is determined based on the maximum number of rows and columns in the sheet. However, if the size of the data you are trying to write is smaller than the size of the sheet, you will end up overwriting some cells with empty values. To avoid this, you should use the actual size of the data to determine the range of cells to write to. You can do this by using the <code>len()</code> function to get the number of rows in the data list. For example:</p> <pre><code>max_row = len(data_list)\nmax_column = len(data_list[0])\n</code></pre> <p>Here's the modified code with these changes:</p> <pre><code>import openpyxl\n\n\n# define a function to get the data from an Excel file to a list\ndef get_data(file_name, sheet_name):\n    # create an empty list to store the data\n    data_list = []\n    # open the Excel file\n    wb = openpyxl.load_workbook(file_name)\n    # get the sheet\n    sheet = wb[sheet_name]\n    # get the max row\n    max_row = sheet.max_row\n    # get the max column\n    max_column = sheet.max_column\n    # use a for loop to get the data from the Excel file\n    for i in range(2, max_row + 1):\n        # create an empty list to store the data of each row\n        sub_list = []\n        for j in range(1, max_column + 1):\n            # get the data of each cell\n            cell = sheet.cell(row=i, column=j)\n            # add the data to the sub list\n            sub_list.append(cell.value)\n        # add the sub list to the data list\n        data_list.append(sub_list)\n    # return the data list\n    return data_list\n\n\ndata = get_data(\"data.xlsx\", \"Sheet1\")\n# print(data)\nnew_data = []\nfor line in data:\n    if line[1] == 'A':\n        line[2] /= 0.6\n        line[3] /= 0.6\n    elif line[1] == 'B':\n        line[2] /= 0.66\n        line[3] /= 0.66\n    else:\n        line[2] /= 0.72\n        line[3] /= 0.72\n    new_data += [line]\n\n# print(new_data)\n\n\n# define a function to write the data to an Excel file\ndef write_data(file_name, sheet_name, data_list):\n    # open the Excel file\n    wb = openpyxl.load_workbook(file_name)\n    # create the sheet if it doesn't exist\n    if sheet_name not in wb.sheetnames:\n        wb.create_sheet(sheet_name)\n    # get the sheet\n    sheet = wb[sheet_name]\n    # get the max row and column based on the size of the data\n    max_row = len(data_list)\n    max_column = len(data_list[0])\n    # use a for loop to write the data to the Excel file\n    for i in range(2, max_row + 2):\n        for j in range(1, max_column + 1):\n            # get the data of each cell\n            cell = sheet.cell(row=i, column=j)\n            # write the data to the cell\n            cell.value = data_list[i - 2][j - 1]\n    # save the Excel file\n    wb.save(file_name)\n\n\nwrite_data(\"data.xlsx\", \"Sheet2\", new_data)\n</code></pre> <p>With these changes, the code should now write the data to the \"Sheet2\" sheet in the \"data.xlsx\" file.</p> <p>user:</p> <p>\u4f60\u80fd\u7528\u4e2d\u6587\u518d\u8f93\u51fa\u4e00\u904d\u5417\uff1f</p> <p>chatgpt:</p> <p>\u5f53\u4f60\u5c1d\u8bd5\u5411 Excel \u6587\u4ef6\u5199\u5165\u6570\u636e\u65f6\uff0c\u4ee3\u7801\u53ef\u80fd\u51fa\u73b0\u4e00\u4e9b\u95ee\u9898\u3002\u6839\u636e\u4f60\u63d0\u4f9b\u7684\u4ee3\u7801\uff0c\u53ef\u80fd\u4f1a\u51fa\u73b0\u4ee5\u4e0b\u95ee\u9898\uff1a</p> <ol> <li>Excel \u6587\u4ef6\u4e2d\u4e0d\u5b58\u5728 \"Sheet2\" \u5de5\u4f5c\u8868\u3002</li> </ol> <p>\u5982\u679c\u4f60\u5c1d\u8bd5\u5199\u5165\u7684\u5de5\u4f5c\u8868\u5728 Excel \u6587\u4ef6\u4e2d\u4e0d\u5b58\u5728\uff0c\u4f60\u9700\u8981\u5148\u521b\u5efa\u5b83\u624d\u80fd\u5411\u5176\u5199\u5165\u6570\u636e\u3002\u4f60\u53ef\u4ee5\u4f7f\u7528\u5de5\u4f5c\u7c3f\u5bf9\u8c61\u7684 <code>create_sheet()</code> \u65b9\u6cd5\u6765\u521b\u5efa\u5de5\u4f5c\u8868\u3002\u4f8b\u5982\uff1a</p> <pre><code>wb.create_sheet(\"Sheet2\")\n</code></pre> <ol> <li>\u8981\u5199\u5165\u7684\u5355\u5143\u683c\u8303\u56f4\u4e0d\u6b63\u786e\u3002</li> </ol> <p>\u5728 <code>write_data()</code> \u51fd\u6570\u4e2d\uff0c\u8981\u5199\u5165\u7684\u5355\u5143\u683c\u8303\u56f4\u662f\u57fa\u4e8e\u5de5\u4f5c\u8868\u7684\u6700\u5927\u884c\u6570\u548c\u5217\u6570\u6765\u786e\u5b9a\u7684\u3002\u4f46\u662f\uff0c\u5982\u679c\u4f60\u8981\u5199\u5165\u7684\u6570\u636e\u5927\u5c0f\u5c0f\u4e8e\u5de5\u4f5c\u8868\u7684\u5927\u5c0f\uff0c\u4f60\u5c06\u4f1a\u8986\u76d6\u4e00\u4e9b\u5355\u5143\u683c\uff0c\u4f7f\u5b83\u4eec\u7684\u503c\u4e3a\u7a7a\u3002\u4e3a\u4e86\u907f\u514d\u8fd9\u79cd\u60c5\u51b5\uff0c\u4f60\u5e94\u8be5\u4f7f\u7528\u5b9e\u9645\u6570\u636e\u7684\u5927\u5c0f\u6765\u786e\u5b9a\u8981\u5199\u5165\u7684\u5355\u5143\u683c\u8303\u56f4\u3002\u4f60\u53ef\u4ee5\u4f7f\u7528 <code>len()</code> \u51fd\u6570\u83b7\u53d6\u6570\u636e\u5217\u8868\u4e2d\u7684\u884c\u6570\u3002\u4f8b\u5982\uff1a</p> <pre><code>max_row = len(data_list)\nmax_column = len(data_list[0])\n</code></pre> <p>\u4ee5\u4e0b\u662f\u4fee\u6539\u540e\u7684\u4ee3\u7801\uff0c\u5176\u4e2d\u5305\u542b\u8fd9\u4e9b\u66f4\u6539\uff1a</p> <pre><code>import openpyxl\n\n\n# \u5b9a\u4e49\u4e00\u4e2a\u51fd\u6570\uff0c\u4ece Excel \u6587\u4ef6\u4e2d\u83b7\u53d6\u6570\u636e\u5e76\u5b58\u50a8\u5230\u5217\u8868\u4e2d\ndef get_data(file_name, sheet_name):\n    # \u521b\u5efa\u4e00\u4e2a\u7a7a\u5217\u8868\u6765\u5b58\u50a8\u6570\u636e\n    data_list = []\n    # \u6253\u5f00 Excel \u6587\u4ef6\n    wb = openpyxl.load_workbook(file_name)\n    # \u83b7\u53d6\u5de5\u4f5c\u8868\n    sheet = wb[sheet_name]\n    # \u83b7\u53d6\u6700\u5927\u884c\u6570\n    max_row = sheet.max_row\n    # \u83b7\u53d6\u6700\u5927\u5217\u6570\n    max_column = sheet.max_column\n    # \u4f7f\u7528\u5faa\u73af\u4ece Excel \u6587\u4ef6\u4e2d\u83b7\u53d6\u6570\u636e\n    for i in range(2, max_row + 1):\n        # \u521b\u5efa\u4e00\u4e2a\u7a7a\u5217\u8868\u6765\u5b58\u50a8\u6bcf\u884c\u7684\u6570\u636e\n        sub_list = []\n        for j in range(1, max_column + 1):\n            # \u83b7\u53d6\u6bcf\u4e2a\u5355\u5143\u683c\u7684\u6570\u636e\n            cell = sheet.cell(row=i, column=j)\n            # \u5c06\u6570\u636e\u6dfb\u52a0\u5230\u5b50\u5217\u8868\u4e2d\n            sub_list.append(cell.value)\n        # \u5c06\u5b50\u5217\u8868\u6dfb\u52a0\u5230\u6570\u636e\u5217\u8868\u4e2d\n        data_list.append(sub_list)\n    # \u8fd4\u56de\u6570\u636e\u5217\u8868\n    return data_list\n\n\ndata = get_data(\"data.xlsx\", \"Sheet1\")\n# print(data)\nnew_data = []\nfor line in data:\n    if line[1] == 'A':\n        line[2] /= 0.6\n        line[3] /= 0.6\n    elif line[1] == 'B':\n        line[2] /= 0.66\n        line[3] /= 0.66\n    else:\n        line[2] /= 0.72\n        line[3] /= 0.72\n    new_data += [line]\n\n# print(new_data)\n\n\n# \u5b9a\u4e49\u4e00\u4e2a\u51fd\u6570\uff0c\u5c06\u6570\u636e\u5199\u5165 Excel \u6587\u4ef6\u4e2d\ndef write_data(file_name, sheet_name, data_list):\n    # \u6253\u5f00 Excel \u6587\u4ef6\n    wb = openpyxl.load_workbook(file_name)\n    # \u5982\u679c\u5de5\u4f5c\u8868\u4e0d\u5b58\u5728\uff0c\u5219\u521b\u5efa\u5b83\n    if sheet_name not in wb.sheetnames:\n        wb.create_sheet(sheet_name)\n    # \u83b7\u53d6\u5de5\u4f5c\u8868\n    sheet = wb[sheet_name]\n    # \u6839\u636e\u6570\u636e\u7684\u5927\u5c0f\u83b7\u53d6\u6700\u5927\u884c\u6570\u548c\u5217\u6570\n    max_row = len(data_list)\n    max_column = len(data_list[0])\n    # \u4f7f\u7528\u5faa\u73af\u5c06\u6570\u636e\u5199\u5165 Excel \u6587\u4ef6\u4e2d\n    for i in range(2, max_row + 2):\n        for j in range(1, max_column + 1):\n            # \u83b7\u53d6\u6bcf\u4e2a\u5355\u5143\u683c\u7684\u6570\u636e\n            cell = sheet.cell(row=i, column=j)\n            # \u5c06\u6570\u636e\u5199\u5165\u5355\u5143\u683c\n            cell.value = data_list[i - 2][j - 1]\n    # \u4fdd\u5b58 Excel \u6587\u4ef6\n    wb.save(file_name)\n\n\nwrite_data(\"data.xlsx\", \"Sheet2\", new_data)\n</code></pre> <p>\u7ecf\u8fc7\u8fd9\u4e9b\u66f4\u6539\uff0c\u4ee3\u7801\u73b0\u5728\u5e94\u8be5\u80fd\u591f\u5c06\u6570\u636e\u5199\u5165\u5230 \"data.xlsx\" \u6587\u4ef6\u4e2d\u7684 \"Sheet2\" \u5de5\u4f5c\u8868\u4e2d\u3002</p>"},{"location":"python%E7%9B%B8%E5%85%B3/python%E8%AF%AD%E8%A8%80/","title":"Python \u8bed\u8a00","text":"<p> \u7ea6 575 \u4e2a\u5b57  87 \u884c\u4ee3\u7801  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 3 \u5206\u949f</p> <p>Info</p> <p>\u6b64\u5904\u7528\u4e8e\u8bb0\u5f55\u6211\u81ea\u5df1\u53d1\u73b0\u7684python\u4e2d\u7684(\u6211\u4e4b\u524d\u4e0d\u77e5\u9053\u7684)\u64cd\u4f5c</p>"},{"location":"python%E7%9B%B8%E5%85%B3/python%E8%AF%AD%E8%A8%80/#1","title":"1","text":"<p>2023\u6570\u6a21\u56fd\u8d5b</p> <p>\u5728\u5b57\u5178\u4e2d\u76f4\u63a5\u67e5\u8be2\u3001\u53d6\u51fa\u7684\u662f key \u7684\u503c</p> <p>1</p> <p><code>in</code> \u8bed\u53e5\u53ef\u4ee5\u5224\u65ad \u67d0\u4e2a key \u662f\u5426\u5728\u67d0\u4e2a\u5b57\u5178\u4e2d\uff0c\u5982</p> <pre><code># \u4ece\u9644\u5f552\u7684Excel\u8868\u683c\u4e2d\u8bfb\u53d6\u6570\u636e\ndatas2 = get_data(\"2.xlsx\", \"Sheet1\")\n# \u521b\u5efa\u4e00\u4e2a\u5b57\u5178\u6765\u5b58\u50a8\u9500\u91cf\u6570\u636e\uff0c\u5b57\u5178\u7684\u952e\u662f\u4ea7\u54c1\u7f16\u53f7\uff0c\u503c\u662f\u5305\u542b\u9500\u552e\u5b63\u5ea6\u6570\u636e\u7684\u5d4c\u5957\u5b57\u5178\nxiaoliang = {}\n# \u904d\u5386\u9644\u5f552\u4e2d\u7684\u6570\u636e\nfor data in datas2:\n    # \u5982\u679c\u4ea7\u54c1\u7f16\u53f7\u4e0d\u5728\u5b57\u5178\u4e2d\uff0c\u6dfb\u52a0\u4e00\u4e2a\u65b0\u7684\u952e\u503c\u5bf9\n    if data[2] not in xiaoliang:\n        # \u9500\u552e\u6570\u636e\u5b57\u5178\u7684\u952e\u662f\u5e74\u4efd\u548c\u5b63\u5ea6\u7684\u7ec4\u5408\uff0c\u521d\u59cb\u503c\u4e3a0\n        xiaoliang[data[2]] = {y * 100 + s: 0 for y in range(2020, 2024) for s in range(1, 5)}\n    # \u66f4\u65b0\u9500\u552e\u6570\u636e\u5b57\u5178\uff0c\u6839\u636e\u9500\u552e\u65e5\u671f\u83b7\u53d6\u5b63\u5ea6\u5e76\u5c06\u9500\u552e\u6570\u91cf\u7d2f\u52a0\u5230\u76f8\u5e94\u7684\u5b63\u5ea6\n    xiaoliang[data[2]][get_season(data[0])] += data[3]\n</code></pre> <p>\u5176\u4e2d</p> <pre><code>    if data[2] not in xiaoliang:\n        ...\n</code></pre> <p>\u80fd\u5224\u65ad\u5b57\u5178xiaoliang\u662f\u5426\u5df2\u7ecf\u5b58\u5728\u4e3a <code>data[2]</code> \u7684\u952e(\u6ca1\u6709\u53ef\u4ee5\u8fdb\u884c\u521d\u59cb\u5316\u7b49\u64cd\u4f5c)</p> <p>2</p> <p><code>for</code> \u8bed\u53e5(\u5faa\u73af\u4ee5\u53ca\u5217\u8868\u63a8\u5bfc\u5f0f)\u76f4\u63a5\u7528\u4e8e\u5b57\u5178\u53d6\u51fa\u7684\u662f key\uff0c</p> <pre><code>for xl in xiaoliang:\n    new_xl = [round(xiaoliang[xl][x], 3) for x in xiaoliang[xl]]\n    xiaoliang[xl] = new_xl\n</code></pre> <p>\u5982\u679c\u9700\u8981\u53d6\u51fa value \u5219\u53ef\u4ee5\u4f7f\u7528\u5b57\u5178\u7684 <code>.item()</code> (\u53d6\u51fakey\u548cvalue) \u6216 <code>.values()</code> (\u53ea\u53d6\u51favalue) \u65b9\u6cd5\uff1a</p> <pre><code># \u5b9a\u4e49\u4e00\u4e2a\u51fd\u6570\uff0c\u5c06dict\u8f6c\u6362\u6210list\ndef dict_to_list(dict1):\n    list1 = []\n    for key, value in dict1.items():\n        list1.append([key, value])\n    return list1\n</code></pre> <pre><code>for value in xxx.values():\n    ...\n</code></pre>"},{"location":"python%E7%9B%B8%E5%85%B3/python%E8%AF%AD%E8%A8%80/#3","title":"3","text":"<p>2023\u6570\u6a21\u56fd\u8d5b</p> <p>\u5b57\u5178\u7684 <code>.values()</code> \u65b9\u6cd5\uff0c\u8fd4\u56de\u7684\u662f\u4e00\u4e2a dict_values \u7c7b\u578b\uff0c\u5982\u679c\u9700\u8981\u7684\u662f\u5217\u8868\uff0c\u5219\u9700\u8981\u7c7b\u578b\u8f6c\u6362\uff1a</p> <pre><code>&gt;&gt;&gt; d = {\"key\": 0}\n&gt;&gt;&gt; d.values()\ndict_values([0])\n&gt;&gt;&gt; list(d.values())\n[0]\n</code></pre>"},{"location":"python%E7%9B%B8%E5%85%B3/python%E8%AF%AD%E8%A8%80/#4","title":"4","text":"<p>2023\u6570\u6a21\u56fd\u8d5b</p> <p>\u5b57\u5178\u4e0d\u80fd\u5207\u7247</p>"},{"location":"python%E7%9B%B8%E5%85%B3/python%E8%AF%AD%E8%A8%80/#5","title":"5","text":"<p>2023\u6570\u6a21\u56fd\u8d5b</p> <p>Note</p> <p>json\u6587\u4ef6\u8bfb\u53d6\u901f\u5ea6\u5f88\u5feb\uff0c\u6211\u8ba4\u4e3a\u5f88\u9002\u5408\u7528\u4e8e\u5904\u7406\u6570\u636e</p> <p>\u8bfb\u53d6\u548c\u5199\u5165json\u6587\u4ef6\u7684\u51fd\u6570</p> <pre><code>import json\n\n\n# \u5b9a\u4e49\u4e00\u4e2a\u51fd\u6570\uff0c\u5c06dict\u5b58\u5230\u6307\u5b9a\u7684json\u6587\u4ef6\u4e2d\ndef write_data(file_name, data):\n    # \u6253\u5f00json\u6587\u4ef6\n    with open(file_name, \"w\", encoding=\"utf-8\") as f:\n        # \u5c06\u6570\u636e\u5199\u5165json\u6587\u4ef6\u4e2d\n        json.dump(data, f, ensure_ascii=False, indent=4)\n\n\n# \u5b9a\u4e49\u4e00\u4e2a\u51fd\u6570\uff0c\u4ecejson\u6587\u4ef6\u4e2d\u8bfb\u53d6\u6570\u636e\ndef read_data(file_name):\n    # \u6253\u5f00json\u6587\u4ef6\n    with open(file_name, \"r\", encoding=\"utf-8\") as f:\n        # \u8bfb\u53d6json\u6587\u4ef6\u4e2d\u7684\u6570\u636e\n        data = json.load(f)\n        # \u8fd4\u56de\u6570\u636e\n        return data\n</code></pre> <ul> <li>\u5199\u5165\u51fd\u6570\u5982\u679c\u76ee\u6807\u6587\u4ef6\u4e0d\u5b58\u5728\uff0c\u4f1a\u81ea\u52a8\u65b0\u5efa\u4e00\u4e2a\u5bf9\u5e94\u7684\u6587\u4ef6</li> <li>\u5199\u5165\u51fd\u6570\u9700\u8981\u4f20\u5165\u4e00\u4e2a\u5b57\u5178\uff0c(\u5982\u679c\u60f3\u5b58\u50a8\u5217\u8868\u7c7b\u578b\u7684\u6570\u636e\uff0c\u53ef\u4ee5\u5728\u5217\u8868\u5916\u5957\u4e00\u4e2a\u53ea\u542b\u4e00\u4e2a\u952e\u7684\u5b57\u5178)</li> </ul>"},{"location":"python%E7%9B%B8%E5%85%B3/python%E8%AF%AD%E8%A8%80/#6","title":"6","text":"<p>2023\u6570\u6a21\u56fd\u8d5b</p> <p>\u5bf9\u5c0f\u6570\u56db\u820d\u4e94\u5165 \u4f7f\u7528 <code>round()</code> \u51fd\u6570\uff0c\u5982</p> <pre><code># \u5c06\u7ed3\u679c\u6570\u636e\u7684\u5c0f\u6570\u4f4d\u6570\u4fdd\u7559\u4e09\u4f4d\nfor _, value in data_res.items():\n    for i in range(12):\n        value[i] = round(value[i], 3)\n</code></pre> <p>\u7b2c\u4e00\u4e2a\u53c2\u6570\u65f6\u8981\u820d\u5165\u7684\u503c\uff0c\u7b2c\u4e8c\u4e2a\u53c2\u6570\u662f\u8981\u4fdd\u7559\u7684\u5c0f\u6570\u4f4d\u6570</p>"},{"location":"python%E7%9B%B8%E5%85%B3/python%E8%AF%AD%E8%A8%80/#7","title":"7","text":"<p>2023\u6570\u6a21\u56fd\u8d5b</p> <p>datetime\u7c7b\u578b</p> <ul> <li> <p>datetime\u53ef\u4ee5\u76f4\u63a5\u83b7\u53d6 \u5e74\u3001\u6708\u3001\u65e5 \u7b49\u7684\u6570\u636e</p> <pre><code># \u5b9a\u4e49\u4e00\u4e2a\u51fd\u6570\uff0c\u4f20\u5165datetime\uff0c\u5224\u65ad\u5728\u54ea\u4e00\u5e74\u7684\u54ea\u4e2a\u5b63\u5ea6\u4e2d\ndef get_season(date):\n    season = 0\n    if date.month in [1, 2, 3]:\n        season = 1\n    elif date.month in [4, 5, 6]:\n        season = 2\n    elif date.month in [7, 8, 9]:\n        season = 3\n    elif date.month in [10, 11, 12]:\n        season = 4\n    return int(date.year * 100 + season)\n</code></pre> </li> <li> <p>datetime\u53ef\u4ee5\u7c7b\u578b\u8f6c\u6362\u6210str\uff0c\u4f1a\u8f6c\u6210\u5f62\u5982 <code>\"2023-09-11 18:40:22.834683\"</code> \u7684\u5b57\u7b26\u4e32</p> <pre><code>&gt;&gt;&gt; import datetime\n&gt;&gt;&gt; now = datetime.datetime.now()\n&gt;&gt;&gt; now\ndatetime.datetime(2023, 9, 11, 18, 40, 22, 834683)\n&gt;&gt;&gt; str(now)\n'2023-09-11 18:40:22.834683'\n</code></pre> </li> </ul>"},{"location":"python%E7%9B%B8%E5%85%B3/python%E8%AF%AD%E8%A8%80/#8","title":"8","text":"<p>2023\u6570\u6a21\u56fd\u8d5b</p> <p>\u5c06\u5217\u8868\u5199\u5165csv\u6587\u4ef6\u7684\u51fd\u6570</p> <pre><code># \u5b9a\u4e49\u4e00\u4e2a\u51fd\u6570\uff0c\u5c06list\u5b58\u5165csv\u6587\u4ef6\ndef write_data_to_csv(file_name, data_list):\n    # \u6253\u5f00csv\u6587\u4ef6\n    with open(file_name, \"w\", encoding=\"gbk\", newline=\"\") as f:\n        # \u521b\u5efa\u4e00\u4e2acsv\u5199\u5165\u5668\n        writer = csv.writer(f)\n        # \u5c06\u6570\u636e\u5199\u5165csv\u6587\u4ef6\u4e2d\n        writer.writerows(data_list)\n</code></pre> <p><code>encoding</code> \u53c2\u6570\u662f\u7f16\u7801\u683c\u5f0f\uff0c\u9009\u62e9 <code>\"gbk\"</code> excel\u80fd\u6b63\u5e38\u6253\u5f00\uff0c\u9009\u62e9 <code>\"utf-8\"</code> excel\u597d\u50cf\u4f1a\u663e\u793a\u4e71\u7801</p>"},{"location":"python%E7%9B%B8%E5%85%B3/python%E8%AF%AD%E8%A8%80/#9","title":"9","text":"<p>\u547d\u4ee4\u884c\u4e2d\u7684python\u7684\u9000\u51fa\uff1a</p> <ul> <li>Linux\u7cfb\u7edf\u4e0b(\u53ef\u80fdMacOS\u7cfb\u7edf\u4e0b\u4e5f\u662f)\uff0c\u662f Ctrl+D</li> <li>Windows\u7cfb\u7edf\u4e0b\uff0c\u5219\u662f Ctrl+D \u7136\u540e Enter</li> </ul>"},{"location":"python%E7%9B%B8%E5%85%B3/python%E8%AF%AD%E8%A8%80/#10","title":"10","text":"<p>\u590d\u73b0\u4ee3\u7801</p> <p>\u5076\u7136\u4ece</p> <pre><code>cache_dir = kwargs.pop(\"cache_dir\", None)\n</code></pre> <p>\u53d1\u73b0\u4e00\u4e2a\u5b57\u5178\u7684 <code>.pop()</code> \u65b9\u6cd5\u7684\u7528\u6cd5\uff0c</p> <pre><code>def pop(self, k, d=None): # real signature unknown; restored from __doc__\n    \"\"\"\n    D.pop(k[,d]) -&gt; v, remove specified key and return the corresponding value.\n    \n    If key is not found, default is returned if given, otherwise KeyError is raised\n    \"\"\"\n    pass\n</code></pre> <p>If key is not found, default is returned if given, otherwise KeyError is raised</p> <p>\u7b2c\u4e8c\u4e2a\u53c2\u6570\u7684\u4f4d\u7f6e\u662f\u9ed8\u8ba4\u8fd4\u56de\u503c\uff0c\u5373\u5982\u679c\u6ca1\u6709\u67d0\u4e2akey\u5bf9\u5e94\u7684\u503c\uff0c\u90a3\u4e48\u5c31\u8fd4\u56de\u8fd9\u4e2a\u9ed8\u8ba4\u7684\u503c\uff0c\u5426\u5219\u4f1a\u5f15\u8d77 <code>KeyError</code></p>"},{"location":"python%E7%9B%B8%E5%85%B3/python%E8%AF%AD%E8%A8%80/#11","title":"11","text":"<p>\u5982\u679c\u8981\u5728\u51fd\u6570\u5185\u90e8\u4f7f\u7528\u5168\u5c40\u53d8\u91cf\uff0c\u4f7f\u7528 <code>global</code> \u5173\u952e\u5b57\uff0c\u8ddf <code>nonlocal</code> \u7c7b\u4f3c</p>"},{"location":"python%E7%9B%B8%E5%85%B3/scipy/","title":"SciPy","text":"<p> \u7ea6 3554 \u4e2a\u5b57  386 \u884c\u4ee3\u7801  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 17 \u5206\u949f</p>"},{"location":"python%E7%9B%B8%E5%85%B3/scipy/#1","title":"1","text":"<p>\u5b8c\u6210\u793a\u4f8b</p> <pre><code>import numpy as np\nfrom scipy.integrate import odeint\nimport matplotlib.pyplot as plt\n\nm1 = 4866\nm2 = 2433\nk1 = 31557.298\nk2 = 80000\nk3 = 10000\nk4 = 656.3516\nF = 6250\nw = 1.4005\nm_c = 1335.535\n\n\n# \u5b9a\u4e49\u4e8c\u5143\u5fae\u5206\u65b9\u7a0b\u51fd\u6570\ndef f(y, x, m1, m2, k1, k2, k3, k4, F, w, m_c):\n    # return [y[2], y[3], (-k1 * y[0] - k2 * (y[0] - y[1]) - k3 * (y[2] - y[3]) ** 1.5 - k4 * y[2] + F * np.cos(w * x)) / (m1 + m_c),\n    #         (k2 * (y[0] - y[1]) + k3 * (y[2] - y[3]) ** 1.5) / m2]\n    sign = np.sign(y[2] - y[3])\n    return [y[2], y[3],\n            (-k1 * y[0] - k2 * (y[0] - y[1]) - k3 * sign * abs(y[2] - y[3]) ** 1.5 - k4 * y[2] + F * np.cos(w * x)) / (\n                        m1 + m_c),\n            (k2 * (y[0] - y[1]) + k3 * sign * abs(y[2] - y[3]) ** 1.5) / m2]\n\n# \u521d\u59cb\u6761\u4ef6\ny0 = [0, 0, 0, 0]\n\n# \u81ea\u53d8\u91cf\u8303\u56f4\nx = np.linspace(0, 5, 1000)\n\n# \u6c42\u89e3\u5fae\u5206\u65b9\u7a0b\u7ec4\nsol = odeint(f, y0, x, args=(m1, m2, k1, k2, k3, k4, F, w, m_c))\n\n# \u5206\u522b\u63d0\u53d6y1\u548cy2\u7684\u503c\ny1 = sol[:, 0]\ny2 = sol[:, 1]\ny3 = sol[:, 2]\ny4 = sol[:, 3]\n\n# \u7ed8\u5236\u51fd\u6570\u56fe\u50cf\nplt.plot(x, y1, label='x1')\nplt.plot(x, y2, label='x2')\nplt.plot(x, y3, label='x3')\nplt.plot(x, y4, label='x4')\n\n# \u6dfb\u52a0\u56fe\u4f8b\u3001\u5750\u6807\u8f74\u6807\u7b7e\u548c\u6807\u9898\nplt.legend()\nplt.xlabel('t')\nplt.ylabel('x')\nplt.title('Solution of a System of Differential Equations')\n\n# \u663e\u793a\u56fe\u50cf\nplt.show()\n</code></pre>"},{"location":"python%E7%9B%B8%E5%85%B3/scipy/#2","title":"2","text":"<p><code>np.linspace(0, 5, 1000)</code> </p> <pre><code>@array_function_dispatch(_linspace_dispatcher)\ndef linspace(start, stop, num=50, ...):\n    ...\n</code></pre> <p>\u7b2c\u4e00\u3001\u4e8c\u4e2a\u53c2\u6570\u662f\u8d77\u59cb\u548c\u7ed3\u675f\uff0c\u7b2c\u4e09\u4e2a\u53c2\u6570\u662f\u5206\u5272\u70b9\u7684\u6570\u91cf\uff08\u8d8a\u591a\u70b9\u8d8a\u5bc6\uff0c\u66f2\u7ebf\u8d8a\u5e73\u6ed1\uff09\uff0c\u9ed8\u8ba450</p> chat log <p>user: </p> <p>\u4f60\u77e5\u9053scipy\u5417\uff1f</p> <p>chatgpt: </p> <p>\u662f\u7684\uff0c\u6211\u77e5\u9053Scipy\u3002Scipy\u662f\u4e00\u4e2a\u7528\u4e8e\u6570\u5b66\u3001\u79d1\u5b66\u548c\u5de5\u7a0b\u8ba1\u7b97\u7684Python\u5e93\u3002\u5b83\u5efa\u7acb\u5728NumPy\u5e93\u7684\u57fa\u7840\u4e0a\uff0c\u63d0\u4f9b\u4e86\u8bb8\u591a\u7528\u4e8e\u4fe1\u53f7\u5904\u7406\u3001\u4f18\u5316\u3001\u7edf\u8ba1\u5206\u6790\u3001\u7ebf\u6027\u4ee3\u6570\u548c\u6570\u503c\u79ef\u5206\u7b49\u65b9\u9762\u7684\u51fd\u6570\u548c\u5de5\u5177\u3002Scipy\u8fd8\u5305\u62ec\u4e86\u4e00\u4e9b\u7279\u6b8a\u51fd\u6570\u3001\u5085\u91cc\u53f6\u53d8\u6362\u3001\u4fe1\u53f7\u6ee4\u6ce2\u5668\u3001\u6700\u4f18\u5316\u5668\u3001\u7ebf\u6027\u4ee3\u6570\u5de5\u5177\u548c\u968f\u673a\u6570\u751f\u6210\u5668\u7b49\u529f\u80fd\u3002Scipy\u662fPython\u79d1\u5b66\u8ba1\u7b97\u5e93\u7684\u4e00\u4e2a\u5f3a\u5927\u800c\u5e7f\u6cdb\u4f7f\u7528\u7684\u7ec4\u4ef6\uff0c\u5176\u7075\u6d3b\u6027\u548c\u6613\u7528\u6027\u4f7f\u5176\u6210\u4e3a\u79d1\u5b66\u5bb6\u3001\u5de5\u7a0b\u5e08\u548c\u7814\u7a76\u4eba\u5458\u7684\u9996\u9009\u4e4b\u4e00\u3002</p> <p>user: </p> <p>\u600e\u4e48\u4f7f\u7528scipy\u4f60\u77e5\u9053\u5417\uff1f</p> <p>chatgpt: </p> <p>\u662f\u7684\uff0c\u6211\u53ef\u4ee5\u7ed9\u60a8\u63d0\u4f9b\u4f7f\u7528Scipy\u7684\u57fa\u672c\u6b65\u9aa4\uff1a</p> <ol> <li> <p>\u5b89\u88c5Scipy\u5e93\uff1a\u5728\u60a8\u7684Python\u73af\u5883\u4e2d\u4f7f\u7528pip\u547d\u4ee4\u6765\u5b89\u88c5Scipy\u5e93\u3002\u4f8b\u5982\u5728\u547d\u4ee4\u63d0\u793a\u7b26\u4e2d\u8f93\u5165\uff1a<code>pip install scipy</code>\u3002</p> </li> <li> <p>\u5bfc\u5165Scipy\u6a21\u5757\uff1a\u5728Python\u4ee3\u7801\u4e2d\u5bfc\u5165Scipy\u6a21\u5757\u3002\u4f8b\u5982\uff1a<code>import scipy</code>\u3002</p> </li> <li> <p>\u4f7f\u7528Scipy\u51fd\u6570\uff1a\u4f7f\u7528Scipy\u63d0\u4f9b\u7684\u51fd\u6570\u6765\u8fdb\u884c\u6570\u5b66\u3001\u79d1\u5b66\u548c\u5de5\u7a0b\u8ba1\u7b97\u3002\u4f8b\u5982\uff0c\u8981\u8fdb\u884c\u7ebf\u6027\u4ee3\u6570\u8ba1\u7b97\uff0c\u53ef\u4ee5\u4f7f\u7528Scipy\u4e2d\u7684<code>linalg</code>\u6a21\u5757\uff0c\u5982\u4e0b\u6240\u793a\uff1a</p> </li> </ol> <pre><code>import scipy.linalg as la\n\n# \u521b\u5efa\u4e00\u4e2a2x2\u7684\u77e9\u9635\nA = np.array([[1, 2], [3, 4]])\n\n# \u8ba1\u7b97\u77e9\u9635\u7684\u884c\u5217\u5f0f\ndet_A = la.det(A)\n\n# \u8ba1\u7b97\u77e9\u9635\u7684\u9006\ninv_A = la.inv(A)\n</code></pre> <p>\u9664\u4e86\u7ebf\u6027\u4ee3\u6570\uff0cScipy\u8fd8\u63d0\u4f9b\u4e86\u8bb8\u591a\u5176\u4ed6\u6a21\u5757\u548c\u51fd\u6570\uff0c\u4f8b\u5982\uff1a</p> <ul> <li><code>scipy.optimize</code>\uff1a\u63d0\u4f9b\u4e86\u4f18\u5316\u7b97\u6cd5\uff0c\u7528\u4e8e\u5bfb\u627e\u51fd\u6570\u7684\u6700\u5c0f\u503c\u6216\u6700\u5927\u503c\u3002</li> <li><code>scipy.integrate</code>\uff1a\u63d0\u4f9b\u4e86\u6570\u503c\u79ef\u5206\u51fd\u6570\u3002</li> <li><code>scipy.stats</code>\uff1a\u63d0\u4f9b\u4e86\u7edf\u8ba1\u5206\u6790\u51fd\u6570\uff0c\u7528\u4e8e\u751f\u6210\u548c\u64cd\u4f5c\u6982\u7387\u5206\u5e03\u3002</li> <li><code>scipy.signal</code>\uff1a\u63d0\u4f9b\u4e86\u4fe1\u53f7\u5904\u7406\u51fd\u6570\uff0c\u4f8b\u5982\u6ee4\u6ce2\u5668\u548c\u5085\u91cc\u53f6\u53d8\u6362\u7b49\u3002</li> </ul> <p>Scipy\u5e93\u7684\u4f7f\u7528\u975e\u5e38\u5e7f\u6cdb\uff0c\u5982\u679c\u60a8\u9700\u8981\u8fdb\u884c\u7279\u5b9a\u7684\u6570\u5b66\u3001\u79d1\u5b66\u6216\u5de5\u7a0b\u8ba1\u7b97\uff0c\u53ef\u4ee5\u5148\u770b\u770bScipy\u5e93\u662f\u5426\u63d0\u4f9b\u4e86\u76f8\u5173\u7684\u51fd\u6570\u548c\u5de5\u5177\u3002</p> <p>user: </p> <p>\u90a3\u4f60\u77e5\u9053\u5982\u4f55\u4f7f\u7528scipy\u89e3\u4e8c\u5143\u5fae\u5206\u65b9\u7a0b\u7ec4\u5417\uff1f</p> <p>chatgpt: </p> <p>\u662f\u7684\uff0c\u4f7f\u7528Scipy\u53ef\u4ee5\u89e3\u4e8c\u5143\u5fae\u5206\u65b9\u7a0b\u7ec4\u3002\u4e0b\u9762\u662f\u4e00\u4e2a\u7b80\u5355\u7684\u4f8b\u5b50\uff0c\u5c55\u793a\u4e86\u5982\u4f55\u4f7f\u7528Scipy\u89e3\u4e8c\u5143\u5fae\u5206\u65b9\u7a0b\u7ec4\uff1a</p> <p>\u5047\u8bbe\u6211\u4eec\u8981\u89e3\u51b3\u4ee5\u4e0b\u4e8c\u5143\u5fae\u5206\u65b9\u7a0b\u7ec4\uff1a</p> <p>y1' = -2y1 + y2 y2' = y1 - 2y2</p> <p>\u5176\u4e2dy1\u548cy2\u662f\u5173\u4e8e\u81ea\u53d8\u91cfx\u7684\u51fd\u6570\u3002\u4e3a\u4e86\u89e3\u51b3\u8fd9\u4e2a\u65b9\u7a0b\u7ec4\uff0c\u6211\u4eec\u9700\u8981\u5c06\u5b83\u8f6c\u6362\u4e3a\u77e9\u9635\u5f62\u5f0f\uff1a</p> <p>[d/dx(y1)]   [-2  1]   [y1] [d/dx(y2)] = [ 1 -2] * [y2]</p> <p>\u7136\u540e\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528Scipy\u7684<code>odeint</code>\u51fd\u6570\u6765\u89e3\u51b3\u8be5\u65b9\u7a0b\u7ec4\u3002<code>odeint</code>\u51fd\u6570\u53ef\u4ee5\u7528\u6765\u89e3\u51b3\u4e00\u822c\u5f62\u5f0f\u7684\u5e38\u5fae\u5206\u65b9\u7a0b\u7ec4\u3002\u4ee5\u4e0b\u662f\u4e00\u4e2a\u4f7f\u7528<code>odeint</code>\u51fd\u6570\u6765\u89e3\u51b3\u4e0a\u8ff0\u4e8c\u5143\u5fae\u5206\u65b9\u7a0b\u7ec4\u7684\u793a\u4f8b\u4ee3\u7801\uff1a</p> <pre><code>import numpy as np\nfrom scipy.integrate import odeint\n\n# \u5b9a\u4e49\u4e8c\u5143\u5fae\u5206\u65b9\u7a0b\u51fd\u6570\ndef f(y, x):\n    return [-2*y[0] + y[1], y[0] - 2*y[1]]\n\n# \u521d\u59cb\u6761\u4ef6\ny0 = [1, 0]\n\n# \u81ea\u53d8\u91cf\u8303\u56f4\nx = np.linspace(0, 10, 100)\n\n# \u6c42\u89e3\u5fae\u5206\u65b9\u7a0b\u7ec4\nsol = odeint(f, y0, x)\n\n# \u5206\u522b\u63d0\u53d6y1\u548cy2\u7684\u503c\ny1 = sol[:, 0]\ny2 = sol[:, 1]\n</code></pre> <p>\u5728\u8fd9\u4e2a\u793a\u4f8b\u4e2d\uff0c\u6211\u4eec\u9996\u5148\u5b9a\u4e49\u4e86\u4e00\u4e2a\u51fd\u6570f\u6765\u8868\u793a\u4e8c\u5143\u5fae\u5206\u65b9\u7a0b\u7ec4\u3002\u7136\u540e\uff0c\u6211\u4eec\u6307\u5b9a\u4e86\u521d\u59cb\u6761\u4ef6y0\u548c\u81ea\u53d8\u91cf\u8303\u56f4x\uff0c\u5e76\u4f7f\u7528<code>odeint</code>\u51fd\u6570\u6765\u6c42\u89e3\u5fae\u5206\u65b9\u7a0b\u7ec4\u3002\u6700\u540e\uff0c\u6211\u4eec\u63d0\u53d6\u4e86y1\u548cy2\u7684\u503c\uff0c\u5e76\u5c06\u5b83\u4eec\u5b58\u50a8\u5728y1\u548cy2\u6570\u7ec4\u4e2d\u3002</p> <p>\u8bf7\u6ce8\u610f\uff0c<code>odeint</code>\u51fd\u6570\u7684\u7b2c\u4e00\u4e2a\u53c2\u6570\u662f\u8868\u793a\u5fae\u5206\u65b9\u7a0b\u7ec4\u7684\u51fd\u6570\u540d\uff0c\u7b2c\u4e8c\u4e2a\u53c2\u6570\u662f\u521d\u59cb\u6761\u4ef6\uff0c\u7b2c\u4e09\u4e2a\u53c2\u6570\u662f\u81ea\u53d8\u91cf\u8303\u56f4\u3002\u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c\u6211\u4eec\u4f7f\u7528<code>numpy.linspace</code>\u51fd\u6570\u6765\u751f\u6210\u81ea\u53d8\u91cf\u8303\u56f4x\u3002</p> <p>user: </p> <p>\u5982\u4f55\u6253\u5370y1 y2\u6210\u51fd\u6570\u56fe\u50cf\uff1f</p> <p>chatgpt: </p> <p>\u8981\u5c06y1\u548cy2\u6253\u5370\u6210\u51fd\u6570\u56fe\u50cf\uff0c\u6211\u4eec\u9700\u8981\u4f7f\u7528Matplotlib\u5e93\u3002Matplotlib\u662f\u4e00\u4e2aPython\u5e93\uff0c\u53ef\u7528\u4e8e\u7ed8\u5236\u5404\u79cd\u7c7b\u578b\u7684\u56fe\u5f62\uff0c\u5305\u62ec\u7ebf\u56fe\u3001\u6563\u70b9\u56fe\u3001\u6761\u5f62\u56fe\u3001\u997c\u56fe\u7b49\u7b49\u3002</p> <p>\u4ee5\u4e0b\u662f\u4e00\u4e2a\u793a\u4f8b\u4ee3\u7801\uff0c\u5c55\u793a\u4e86\u5982\u4f55\u4f7f\u7528Matplotlib\u5e93\u7ed8\u5236y1\u548cy2\u7684\u51fd\u6570\u56fe\u50cf\uff1a</p> <pre><code>import numpy as np\nfrom scipy.integrate import odeint\nimport matplotlib.pyplot as plt\n\n# \u5b9a\u4e49\u4e8c\u5143\u5fae\u5206\u65b9\u7a0b\u51fd\u6570\ndef f(y, x):\n    return [-2*y[0] + y[1], y[0] - 2*y[1]]\n\n# \u521d\u59cb\u6761\u4ef6\ny0 = [1, 0]\n\n# \u81ea\u53d8\u91cf\u8303\u56f4\nx = np.linspace(0, 10, 100)\n\n# \u6c42\u89e3\u5fae\u5206\u65b9\u7a0b\u7ec4\nsol = odeint(f, y0, x)\n\n# \u5206\u522b\u63d0\u53d6y1\u548cy2\u7684\u503c\ny1 = sol[:, 0]\ny2 = sol[:, 1]\n\n# \u7ed8\u5236\u51fd\u6570\u56fe\u50cf\nplt.plot(x, y1, label='y1')\nplt.plot(x, y2, label='y2')\n\n# \u6dfb\u52a0\u56fe\u4f8b\u3001\u5750\u6807\u8f74\u6807\u7b7e\u548c\u6807\u9898\nplt.legend()\nplt.xlabel('x')\nplt.ylabel('y')\nplt.title('Solution of a System of Differential Equations')\n\n# \u663e\u793a\u56fe\u50cf\nplt.show()\n</code></pre> <p>\u5728\u8fd9\u4e2a\u793a\u4f8b\u4e2d\uff0c\u6211\u4eec\u9996\u5148\u6c42\u89e3\u4e86\u5fae\u5206\u65b9\u7a0b\u7ec4\uff0c\u5e76\u63d0\u53d6\u4e86y1\u548cy2\u7684\u503c\u3002\u7136\u540e\uff0c\u6211\u4eec\u4f7f\u7528Matplotlib\u7684<code>plot</code>\u51fd\u6570\u7ed8\u5236\u4e86y1\u548cy2\u7684\u51fd\u6570\u56fe\u50cf\uff0c\u5e76\u4f7f\u7528<code>legend</code>\u51fd\u6570\u6dfb\u52a0\u4e86\u56fe\u4f8b\u3002\u6700\u540e\uff0c\u6211\u4eec\u4f7f\u7528<code>xlabel</code>\u3001<code>ylabel</code>\u548c<code>title</code>\u51fd\u6570\u6dfb\u52a0\u4e86\u5750\u6807\u8f74\u6807\u7b7e\u548c\u6807\u9898\uff0c\u5e76\u4f7f\u7528<code>show</code>\u51fd\u6570\u663e\u793a\u4e86\u56fe\u50cf\u3002</p> <p>\u8fd9\u4e2a\u4ee3\u7801\u4f1a\u751f\u6210\u4e00\u4e2a\u5305\u542by1\u548cy2\u51fd\u6570\u56fe\u50cf\u7684\u7a97\u53e3\u3002\u60a8\u53ef\u4ee5\u901a\u8fc7\u8c03\u6574x\u8303\u56f4\u3001\u521d\u59cb\u6761\u4ef6\u548c\u5fae\u5206\u65b9\u7a0b\u51fd\u6570\u6765\u751f\u6210\u4e0d\u540c\u7684\u56fe\u50cf\u3002</p> <p>user: </p> <p>\u7cfb\u6570\u6d6e\u70b9\u6570\u65f6\uff0c\u62a5\u9519\u4e86\uff0c TypeError: unsupported operand type(s) for *: 'function' and 'float' \u5e94\u8be5\u5982\u4f55\u89e3\u51b3\uff1f</p> <p>chatgpt: </p> <p>\u8fd9\u4e2a\u9519\u8bef\u901a\u5e38\u662f\u7531\u4e8e\u53c2\u6570\u7c7b\u578b\u4e0d\u5339\u914d\u5f15\u8d77\u7684\u3002\u5177\u4f53\u5730\u8bf4\uff0c\u5728\u60a8\u7684\u4ee3\u7801\u4e2d\uff0c\u60a8\u53ef\u80fd\u5728\u4f7f\u7528<code>odeint</code>\u51fd\u6570\u65f6\u5c06\u4e00\u4e2a\u51fd\u6570\u5bf9\u8c61\u4e0e\u4e00\u4e2a\u6d6e\u70b9\u6570\u76f8\u4e58\uff0c\u4ece\u800c\u5bfc\u81f4\u4e86\u8fd9\u4e2a\u9519\u8bef\u3002</p> <p>\u8981\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u60a8\u53ef\u4ee5\u68c0\u67e5\u60a8\u7684\u4ee3\u7801\uff0c\u786e\u4fdd\u60a8\u6ca1\u6709\u5728\u4f7f\u7528<code>odeint</code>\u51fd\u6570\u65f6\u5c06\u51fd\u6570\u5bf9\u8c61\u4e0e\u6d6e\u70b9\u6570\u76f8\u4e58\u3002\u53e6\u5916\uff0c\u60a8\u53ef\u4ee5\u5c1d\u8bd5\u5c06\u6240\u6709\u7684\u7cfb\u6570\u90fd\u663e\u5f0f\u5730\u8f6c\u6362\u4e3a\u6d6e\u70b9\u6570\uff0c\u4ee5\u786e\u4fdd<code>odeint</code>\u51fd\u6570\u63a5\u6536\u5230\u7684\u53c2\u6570\u7c7b\u578b\u90fd\u662f\u4e00\u81f4\u7684\u3002</p> <p>\u4ee5\u4e0b\u662f\u4e00\u4e2a\u4fee\u590d\u8fd9\u4e2a\u95ee\u9898\u7684\u793a\u4f8b\u4ee3\u7801\uff1a</p> <pre><code>import numpy as np\nfrom scipy.integrate import odeint\n\n# \u5b9a\u4e49\u4e8c\u5143\u5fae\u5206\u65b9\u7a0b\u51fd\u6570\ndef f(y, x, a, b, c, d):\n    return [-a*y[0] + b*y[1], c*y[0] - d*y[1]]\n\n# \u521d\u59cb\u6761\u4ef6\ny0 = [1, 0]\n\n# \u81ea\u53d8\u91cf\u8303\u56f4\nx = np.linspace(0, 10, 100)\n\n# \u5b9a\u4e49\u53c2\u6570\na = 1.0\nb = 2.0\nc = 3.0\nd = 4.0\n\n# \u6c42\u89e3\u5fae\u5206\u65b9\u7a0b\u7ec4\nsol = odeint(f, y0, x, args=(a, b, c, d))\n\n# \u5206\u522b\u63d0\u53d6y1\u548cy2\u7684\u503c\ny1 = sol[:, 0]\ny2 = sol[:, 1]\n</code></pre> <p>\u5728\u8fd9\u4e2a\u793a\u4f8b\u4e2d\uff0c\u6211\u4eec\u9996\u5148\u5c06\u6240\u6709\u7684\u7cfb\u6570\u90fd\u663e\u5f0f\u5730\u8f6c\u6362\u4e3a\u6d6e\u70b9\u6570\u3002\u7136\u540e\uff0c\u6211\u4eec\u5c06\u8fd9\u4e9b\u7cfb\u6570\u4f5c\u4e3a\u53c2\u6570\u4f20\u9012\u7ed9\u4e8c\u5143\u5fae\u5206\u65b9\u7a0b\u51fd\u6570f\uff0c\u5e76\u5728\u8c03\u7528<code>odeint</code>\u51fd\u6570\u65f6\u5c06\u8fd9\u4e9b\u53c2\u6570\u4f5c\u4e3a\u9644\u52a0\u53c2\u6570\u4f20\u9012\u3002\u6700\u540e\uff0c\u6211\u4eec\u6c42\u89e3\u5fae\u5206\u65b9\u7a0b\u7ec4\uff0c\u5e76\u63d0\u53d6\u4e86y1\u548cy2\u7684\u503c\u3002</p> <p>\u8bf7\u6ce8\u610f\uff0c\u6211\u4eec\u5c06\u53c2\u6570\u5217\u8868<code>(a, b, c, d)</code>\u4f5c\u4e3a<code>odeint</code>\u51fd\u6570\u7684<code>args</code>\u53c2\u6570\u4f20\u9012\u3002\u8fd9\u662f\u56e0\u4e3a\uff0c<code>odeint</code>\u51fd\u6570\u9700\u8981\u63a5\u6536\u4e00\u4e2a\u51fd\u6570\u548c\u4e00\u4e2a\u521d\u59cb\u6761\u4ef6\uff0c\u5e76\u53ef\u9009\u5730\u63a5\u6536\u4e00\u4e9b\u9644\u52a0\u7684\u53c2\u6570\u3002\u8fd9\u4e9b\u9644\u52a0\u53c2\u6570\u5fc5\u987b\u4f5c\u4e3a\u4e00\u4e2a\u5143\u7ec4\u4f20\u9012\u7ed9<code>args</code>\u53c2\u6570\uff0c\u4ee5\u4fbf\u5728\u6c42\u89e3\u5fae\u5206\u65b9\u7a0b\u7ec4\u65f6\u4f7f\u7528\u3002</p> <p>user: </p> <p>\u90a3\u4e48scipy\u5982\u4f55\u6c42\u89e3\u4e09\u5143\u4e8c\u9636\u5fae\u5206\u65b9\u7a0b\uff1f</p> <p>chatgpt: </p> <p>Scipy\u5e93\u4e2d\u6ca1\u6709\u76f4\u63a5\u6c42\u89e3\u4e09\u5143\u4e8c\u9636\u5fae\u5206\u65b9\u7a0b\u7684\u51fd\u6570\uff0c\u4f46\u53ef\u4ee5\u4f7f\u7528<code>odeint</code>\u51fd\u6570\u6765\u6c42\u89e3\u3002\u4e3a\u4e86\u4f7f\u7528<code>odeint</code>\u51fd\u6570\u6c42\u89e3\u4e09\u5143\u4e8c\u9636\u5fae\u5206\u65b9\u7a0b\uff0c\u9700\u8981\u5c06\u5176\u8f6c\u5316\u4e3a\u4e00\u4e2a\u516d\u5143\u4e00\u9636\u5fae\u5206\u65b9\u7a0b\u7ec4\u3002</p> <p>\u4f8b\u5982\uff0c\u5047\u8bbe\u6211\u4eec\u8981\u6c42\u89e3\u4ee5\u4e0b\u4e09\u5143\u4e8c\u9636\u5fae\u5206\u65b9\u7a0b\u7ec4\uff1a</p> <p>x''(t) + 2y'(t) + 3z(t) = 0 y''(t) + 3x(t) + 4z'(t) = 0 z''(t) + x(t) + 2*y(t) = 0</p> <p>\u6211\u4eec\u53ef\u4ee5\u5c06\u5b83\u8f6c\u5316\u4e3a\u4ee5\u4e0b\u516d\u5143\u4e00\u9636\u5fae\u5206\u65b9\u7a0b\u7ec4\uff1a</p> <p>x'(t) = v_x(t) v_x'(t) = -2v_y(t) - 3z(t) y'(t) = v_y(t) v_y'(t) = -3x(t) - 4v_z(t) z'(t) = v_z(t) v_z'(t) = -x(t) - 2*y(t)</p> <p>\u5176\u4e2d\uff0cx(t)\u3001y(t)\u548cz(t)\u662f\u5f85\u6c42\u89e3\u7684\u51fd\u6570\uff0cv_x(t)\u3001v_y(t)\u548cv_z(t)\u662f\u5b83\u4eec\u7684\u5bfc\u6570\u3002</p> <p>\u6211\u4eec\u53ef\u4ee5\u5c06\u8fd9\u4e2a\u516d\u5143\u4e00\u9636\u5fae\u5206\u65b9\u7a0b\u7ec4\u4f5c\u4e3a<code>odeint</code>\u51fd\u6570\u7684\u8f93\u5165\uff0c\u5e76\u4f7f\u7528\u521d\u59cb\u6761\u4ef6\u6c42\u89e3\u5b83\u3002\u4ee5\u4e0b\u662f\u4e00\u4e2a\u4f7f\u7528<code>odeint</code>\u51fd\u6570\u6c42\u89e3\u4e0a\u8ff0\u4e09\u5143\u4e8c\u9636\u5fae\u5206\u65b9\u7a0b\u7684\u793a\u4f8b\u4ee3\u7801\uff1a</p> <pre><code>import numpy as np\nfrom scipy.integrate import odeint\n\n# \u5b9a\u4e49\u516d\u5143\u4e00\u9636\u5fae\u5206\u65b9\u7a0b\u51fd\u6570\ndef f(y, t):\n    x, vx, y, vy, z, vz = y\n    return [vx, -2*vy - 3*z, vy, -3*x - 4*vz, vz, -x - 2*y]\n\n# \u521d\u59cb\u6761\u4ef6\ny0 = [1, 0, 1, 0, 1, 0]\n\n# \u81ea\u53d8\u91cf\u8303\u56f4\nt = np.linspace(0, 10, 100)\n\n# \u6c42\u89e3\u5fae\u5206\u65b9\u7a0b\u7ec4\nsol = odeint(f, y0, t)\n\n# \u5206\u522b\u63d0\u53d6x, y, z \u7684\u503c\nx = sol[:, 0]\ny = sol[:, 2]\nz = sol[:, 4]\n</code></pre> <p>\u5728\u8fd9\u4e2a\u793a\u4f8b\u4e2d\uff0c\u6211\u4eec\u5b9a\u4e49\u4e86\u4e00\u4e2a\u51fd\u6570f\u6765\u8868\u793a\u516d\u5143\u4e00\u9636\u5fae\u5206\u65b9\u7a0b\u7ec4\uff0c\u5e76\u6307\u5b9a\u4e86\u521d\u59cb\u6761\u4ef6y0\u548c\u81ea\u53d8\u91cf\u8303\u56f4t\u3002\u7136\u540e\uff0c\u6211\u4eec\u4f7f\u7528<code>odeint</code>\u51fd\u6570\u6c42\u89e3\u5fae\u5206\u65b9\u7a0b\u7ec4\uff0c\u5e76\u63d0\u53d6\u4e86x\u3001y\u548cz\u7684\u503c\u3002</p> <p>\u8bf7\u6ce8\u610f\uff0c\u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c\u6211\u4eec\u5c06\u521d\u59cb\u6761\u4ef6y0\u4f5c\u4e3a\u4e00\u4e2a\u516d\u5143\u5217\u8868\u4f20\u9012\u7ed9<code>odeint</code>\u51fd\u6570\u3002\u5728\u51fd\u6570f\u4e2d\uff0c\u6211\u4eec\u4f7f\u7528y\u5217\u8868\u6765\u8868\u793a\u516d\u4e2a\u51fd\u6570\u548c\u5b83\u4eec\u7684\u5bfc\u6570\u3002</p> <p>user: </p> <p>\u5982\u4f55\u6253\u5370\u6210\u56fe\u50cf\uff1f</p> <p>chatgpt: </p> <p>\u8981\u5c06\u6c42\u89e3\u7684\u4e09\u5143\u4e8c\u9636\u5fae\u5206\u65b9\u7a0b\u7684\u7ed3\u679c\u6253\u5370\u6210\u56fe\u50cf\uff0c\u53ef\u4ee5\u4f7f\u7528Matplotlib\u5e93\u3002Matplotlib\u662f\u4e00\u4e2aPython\u5e93\uff0c\u53ef\u7528\u4e8e\u7ed8\u5236\u5404\u79cd\u7c7b\u578b\u7684\u56fe\u5f62\uff0c\u5305\u62ec\u7ebf\u56fe\u3001\u6563\u70b9\u56fe\u3001\u6761\u5f62\u56fe\u3001\u997c\u56fe\u7b49\u7b49\u3002</p> <p>\u4ee5\u4e0b\u662f\u4e00\u4e2a\u793a\u4f8b\u4ee3\u7801\uff0c\u5c55\u793a\u4e86\u5982\u4f55\u4f7f\u7528Matplotlib\u5e93\u7ed8\u5236x\u3001y\u548cz\u7684\u51fd\u6570\u56fe\u50cf\uff1a</p> <pre><code>import numpy as np\nfrom scipy.integrate import odeint\nimport matplotlib.pyplot as plt\n\n# \u5b9a\u4e49\u516d\u5143\u4e00\u9636\u5fae\u5206\u65b9\u7a0b\u51fd\u6570\ndef f(y, t):\n    x, vx, y, vy, z, vz = y\n    return [vx, -2*vy - 3*z, vy, -3*x - 4*vz, vz, -x - 2*y]\n\n# \u521d\u59cb\u6761\u4ef6\ny0 = [1, 0, 1, 0, 1, 0]\n\n# \u81ea\u53d8\u91cf\u8303\u56f4\nt = np.linspace(0, 10, 100)\n\n# \u6c42\u89e3\u5fae\u5206\u65b9\u7a0b\u7ec4\nsol = odeint(f, y0, t)\n\n# \u5206\u522b\u63d0\u53d6x, y, z\u7684\u503c\nx = sol[:, 0]\ny = sol[:, 2]\nz = sol[:, 4]\n\n# \u7ed8\u5236\u51fd\u6570\u56fe\u50cf\nplt.plot(t, x, label='x')\nplt.plot(t, y, label='y')\nplt.plot(t, z, label='z')\n\n# \u6dfb\u52a0\u56fe\u4f8b\u3001\u5750\u6807\u8f74\u6807\u7b7e\u548c\u6807\u9898\nplt.legend()\nplt.xlabel('t')\nplt.ylabel('f(t)')\nplt.title('Solution of a System of Differential Equations')\n\n# \u663e\u793a\u56fe\u50cf\nplt.show()\n</code></pre> <p>\u5728\u8fd9\u4e2a\u793a\u4f8b\u4e2d\uff0c\u6211\u4eec\u9996\u5148\u6c42\u89e3\u4e86\u5fae\u5206\u65b9\u7a0b\u7ec4\uff0c\u5e76\u63d0\u53d6\u4e86x\u3001y\u548cz\u7684\u503c\u3002\u7136\u540e\uff0c\u6211\u4eec\u4f7f\u7528Matplotlib\u7684<code>plot</code>\u51fd\u6570\u7ed8\u5236\u4e86x\u3001y\u548cz\u7684\u51fd\u6570\u56fe\u50cf\uff0c\u5e76\u4f7f\u7528<code>legend</code>\u51fd\u6570\u6dfb\u52a0\u4e86\u56fe\u4f8b\u3002\u6700\u540e\uff0c\u6211\u4eec\u4f7f\u7528<code>xlabel</code>\u3001<code>ylabel</code>\u548c<code>title</code>\u51fd\u6570\u6dfb\u52a0\u4e86\u5750\u6807\u8f74\u6807\u7b7e\u548c\u6807\u9898\uff0c\u5e76\u4f7f\u7528<code>show</code>\u51fd\u6570\u663e\u793a\u4e86\u56fe\u50cf\u3002</p> <p>\u8fd9\u4e2a\u4ee3\u7801\u4f1a\u751f\u6210\u4e00\u4e2a\u5305\u542bx\u3001y\u548cz\u51fd\u6570\u56fe\u50cf\u7684\u7a97\u53e3\u3002\u60a8\u53ef\u4ee5\u901a\u8fc7\u8c03\u6574\u81ea\u53d8\u91cf\u8303\u56f4\u3001\u521d\u59cb\u6761\u4ef6\u548c\u5fae\u5206\u65b9\u7a0b\u51fd\u6570\u6765\u751f\u6210\u4e0d\u540c\u7684\u56fe\u50cf\u3002</p> <p>user: </p> <p>\u80fd\u4e0d\u80fd\u6253\u5370\u62103d\u7684\u56fe\u50cf\uff1f</p> <p>chatgpt: </p> <p>\u662f\u7684\uff0c\u53ef\u4ee5\u4f7f\u7528Matplotlib\u5e93\u4e2d\u7684mplot3d\u6a21\u5757\u5c06\u4e09\u5143\u4e8c\u9636\u5fae\u5206\u65b9\u7a0b\u7684\u6c42\u89e3\u7ed3\u679c\u6253\u5370\u62103D\u56fe\u50cf\u3002</p> <p>\u4ee5\u4e0b\u662f\u4e00\u4e2a\u793a\u4f8b\u4ee3\u7801\uff0c\u5c55\u793a\u4e86\u5982\u4f55\u4f7f\u7528Matplotlib\u7684mplot3d\u6a21\u5757\u7ed8\u5236x\u3001y\u548cz\u76843D\u56fe\u50cf\uff1a</p> <pre><code>import numpy as np\nfrom scipy.integrate import odeint\nimport matplotlib.pyplot as plt\nfrom mpl_toolkits.mplot3d import Axes3D\n\n# \u5b9a\u4e49\u516d\u5143\u4e00\u9636\u5fae\u5206\u65b9\u7a0b\u51fd\u6570\ndef f(y, t):\n    x, vx, y, vy, z, vz = y\n    return [vx, -2*vy - 3*z, vy, -3*x - 4*vz, vz, -x - 2*y]\n\n# \u521d\u59cb\u6761\u4ef6\ny0 = [1, 0, 1, 0, 1, 0]\n\n# \u81ea\u53d8\u91cf\u8303\u56f4\nt = np.linspace(0, 10, 100)\n\n# \u6c42\u89e3\u5fae\u5206\u65b9\u7a0b\u7ec4\nsol = odeint(f, y0, t)\n\n# \u5206\u522b\u63d0\u53d6x, y, z\u7684\u503c\nx = sol[:, 0]\ny = sol[:, 2]\nz = sol[:, 4]\n\n# \u7ed8\u52363D\u56fe\u50cf\nfig = plt.figure()\nax = fig.add_subplot(111, projection='3d')\nax.plot(x, y, z)\n\n# \u6dfb\u52a0\u5750\u6807\u8f74\u6807\u7b7e\u548c\u6807\u9898\nax.set_xlabel('x')\nax.set_ylabel('y')\nax.set_zlabel('z')\nplt.title('Solution of a System of Differential Equations')\n\n# \u663e\u793a\u56fe\u50cf\nplt.show()\n</code></pre> <p>\u5728\u8fd9\u4e2a\u793a\u4f8b\u4e2d\uff0c\u6211\u4eec\u9996\u5148\u6c42\u89e3\u4e86\u5fae\u5206\u65b9\u7a0b\u7ec4\uff0c\u5e76\u63d0\u53d6\u4e86x\u3001y\u548cz\u7684\u503c\u3002\u7136\u540e\uff0c\u6211\u4eec\u4f7f\u7528Matplotlib\u7684mplot3d\u6a21\u5757\u4e2d\u7684<code>Axes3D</code>\u7c7b\u521b\u5efa\u4e00\u4e2a3D\u5750\u6807\u7cfb\uff0c\u5e76\u4f7f\u7528<code>plot</code>\u51fd\u6570\u7ed8\u5236\u4e86x\u3001y\u548cz\u76843D\u56fe\u50cf\u3002\u6700\u540e\uff0c\u6211\u4eec\u4f7f\u7528<code>set_xlabel</code>\u3001<code>set_ylabel</code>\u548c<code>set_zlabel</code>\u51fd\u6570\u6dfb\u52a0\u4e86\u5750\u6807\u8f74\u6807\u7b7e\uff0c\u5e76\u4f7f\u7528<code>title</code>\u51fd\u6570\u6dfb\u52a0\u4e86\u6807\u9898\u3002</p> <p>\u8fd9\u4e2a\u4ee3\u7801\u4f1a\u751f\u6210\u4e00\u4e2a\u5305\u542bx\u3001y\u548cz\u51fd\u6570\u76843D\u56fe\u50cf\u7684\u7a97\u53e3\u3002\u60a8\u53ef\u4ee5\u901a\u8fc7\u8c03\u6574\u81ea\u53d8\u91cf\u8303\u56f4\u3001\u521d\u59cb\u6761\u4ef6\u548c\u5fae\u5206\u65b9\u7a0b\u51fd\u6570\u6765\u751f\u6210\u4e0d\u540c\u7684\u56fe\u50cf\u3002</p> <p>user: </p> <p>\u90a3scipy\u80fd\u4e0d\u80fd\u89e3\u4e09\u5143\u975e\u7ebf\u6027\u5fae\u5206\u65b9\u7a0b\uff1f</p> <p>chatgpt: </p> <p>Scipy\u5e93\u4e2d\u7684<code>odeint</code>\u51fd\u6570\u53ef\u4ee5\u7528\u4e8e\u6c42\u89e3\u4e09\u5143\u975e\u7ebf\u6027\u5fae\u5206\u65b9\u7a0b\u3002</p> <p>\u5bf9\u4e8e\u4e09\u5143\u975e\u7ebf\u6027\u5fae\u5206\u65b9\u7a0b\uff0c\u53ef\u4ee5\u5c06\u5176\u8f6c\u5316\u4e3a\u4e00\u4e2a\u516d\u5143\u4e00\u9636\u5fae\u5206\u65b9\u7a0b\u7ec4\uff0c\u5e76\u5c06\u5176\u4f5c\u4e3a<code>odeint</code>\u51fd\u6570\u7684\u8f93\u5165\u3002\u5177\u4f53\u6765\u8bf4\uff0c\u5982\u679c\u6211\u4eec\u6709\u4ee5\u4e0b\u4e09\u5143\u975e\u7ebf\u6027\u5fae\u5206\u65b9\u7a0b\uff1a</p> <p>x''(t) = -x(t) * y(t) * z(t) y''(t) = -y(t) * z(t) * x(t) z''(t) = -z(t) * x(t) * y(t)</p> <p>\u6211\u4eec\u53ef\u4ee5\u5c06\u5176\u8f6c\u5316\u4e3a\u4ee5\u4e0b\u516d\u5143\u4e00\u9636\u5fae\u5206\u65b9\u7a0b\u7ec4\uff1a</p> <p>x'(t) = v_x(t) v_x'(t) = -x(t) * y(t) * z(t) y'(t) = v_y(t) v_y'(t) = -y(t) * z(t) * x(t) z'(t) = v_z(t) v_z'(t) = -z(t) * x(t) * y(t)</p> <p>\u5176\u4e2d\uff0cx(t)\u3001y(t)\u548cz(t)\u662f\u5f85\u6c42\u89e3\u7684\u51fd\u6570\uff0cv_x(t)\u3001v_y(t)\u548cv_z(t)\u662f\u5b83\u4eec\u7684\u5bfc\u6570\u3002</p> <p>\u4ee5\u4e0b\u662f\u4e00\u4e2a\u4f7f\u7528<code>odeint</code>\u51fd\u6570\u6c42\u89e3\u4e0a\u8ff0\u4e09\u5143\u975e\u7ebf\u6027\u5fae\u5206\u65b9\u7a0b\u7684\u793a\u4f8b\u4ee3\u7801\uff1a</p> <pre><code>import numpy as np\nfrom scipy.integrate import odeint\n\n# \u5b9a\u4e49\u516d\u5143\u4e00\u9636\u5fae\u5206\u65b9\u7a0b\u51fd\u6570\ndef f(y, t):\n    x, vx, y, vy, z, vz = y\n    return [vx, -x*y*z, vy, -y*z*x, vz, -z*x*y]\n\n# \u521d\u59cb\u6761\u4ef6\ny0 = [1, 0, 1, 0, 1, 0]\n\n# \u81ea\u53d8\u91cf\u8303\u56f4\nt = np.linspace(0, 10, 100)\n\n# \u6c42\u89e3\u5fae\u5206\u65b9\u7a0b\u7ec4\nsol = odeint(f, y0, t)\n\n# \u5206\u522b\u63d0\u53d6x, y, z \u7684\u503c\nx = sol[:, 0]\ny = sol[:, 2]\nz = sol[:, 4]\n</code></pre> <p>\u5728\u8fd9\u4e2a\u793a\u4f8b\u4e2d\uff0c\u6211\u4eec\u5b9a\u4e49\u4e86\u4e00\u4e2a\u51fd\u6570f\u6765\u8868\u793a\u516d\u5143\u4e00\u9636\u5fae\u5206\u65b9\u7a0b\u7ec4\uff0c\u5e76\u6307\u5b9a\u4e86\u521d\u59cb\u6761\u4ef6y0\u548c\u81ea\u53d8\u91cf\u8303\u56f4t\u3002\u7136\u540e\uff0c\u6211\u4eec\u4f7f\u7528<code>odeint</code>\u51fd\u6570\u6c42\u89e3\u5fae\u5206\u65b9\u7a0b\u7ec4\uff0c\u5e76\u63d0\u53d6\u4e86x\u3001y\u548cz\u7684\u503c\u3002</p> <p>\u8bf7\u6ce8\u610f\uff0c\u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c\u6211\u4eec\u5c06\u521d\u59cb\u6761\u4ef6y0\u4f5c\u4e3a\u4e00\u4e2a\u516d\u5143\u5217\u8868\u4f20\u9012\u7ed9<code>odeint</code>\u51fd\u6570\u3002\u5728\u51fd\u6570f\u4e2d\uff0c\u6211\u4eec\u4f7f\u7528y\u5217\u8868\u6765\u8868\u793a\u516d\u4e2a\u51fd\u6570\u548c\u5b83\u4eec\u7684\u5bfc\u6570\u3002</p> <p>\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u5bf9\u4e8e\u975e\u7ebf\u6027\u5fae\u5206\u65b9\u7a0b\uff0c\u6c42\u89e3\u53ef\u80fd\u4f1a\u6bd4\u8f83\u56f0\u96be\uff0c\u9700\u8981\u9009\u62e9\u5408\u9002\u7684\u65b9\u6cd5\u548c\u53c2\u6570\u6765\u6c42\u89e3\u3002\u5982\u679c\u9047\u5230\u6c42\u89e3\u56f0\u96be\u7684\u60c5\u51b5\uff0c\u53ef\u4ee5\u5c1d\u8bd5\u4f7f\u7528\u5176\u4ed6\u6570\u503c\u6c42\u89e3\u65b9\u6cd5\uff0c\u6216\u8005\u624b\u52a8\u8c03\u6574<code>odeint</code>\u51fd\u6570\u7684\u53c2\u6570\u6765\u63d0\u9ad8\u6c42\u89e3\u6548\u679c\u3002</p> <p>user: </p> <p><pre><code>RuntimeWarning: invalid value encountered in scalar power\n(k2 * (y[0] - y[1]) + k3 * (y[2] - y[3]) ** 1.5) / m2]\n</code></pre> \u8fd9\u4e2a\u62a5\u9519\u5e94\u8be5\u5982\u4f55\u89e3\u51b3\uff1f \u5b8c\u6574\u4ee3\u7801\u5982\u4e0b\uff1a <pre><code>import numpy as np\nfrom scipy import *\nfrom scipy.integrate import odeint\nimport matplotlib.pyplot as plt\nfrom math import *\n\nm1 = 4.866\nm2 = 2433\nk1 = 31557.298\nk2 = 80000\nk3 = 10000\nk4 = 656.3516\nF = 6250\nw = 1.4005\nm_c = 1335.535\n\n\n# \u5b9a\u4e49\u4e8c\u5143\u5fae\u5206\u65b9\u7a0b\u51fd\u6570\ndef f(y, x, m1, m2, k1, k2, k3, k4, F, w, m_c):\n    return [y[2], y[3], (-k1 * y[0] - k2 * (y[0] - y[1]) - k3 * (y[2] - y[3]) ** 1.5 - k4 * y[2] + F * np.cos(w * x)) / (m1 + m_c),\n            (k2 * (y[0] - y[1]) + k3 * (y[2] - y[3]) ** 1.5) / m2]\n\n\n# \u521d\u59cb\u6761\u4ef6\ny0 = [0, 0, 0, 0]\n\n# \u81ea\u53d8\u91cf\u8303\u56f4\nx = np.linspace(0, 5, 1000)\n\n# \u6c42\u89e3\u5fae\u5206\u65b9\u7a0b\u7ec4\nsol = odeint(f, y0, x, args=(m1, m2, k1, k2, k3, k4, F, w, m_c))\n\n# \u5206\u522b\u63d0\u53d6y1\u548cy2\u7684\u503c\ny1 = sol[:, 0]\ny2 = sol[:, 1]\ny3 = sol[:, 2]\ny4 = sol[:, 3]\n\n# \u7ed8\u5236\u51fd\u6570\u56fe\u50cf\nplt.plot(x, y1, label='y1')\nplt.plot(x, y2, label='y2')\nplt.plot(x, y3, label='y3')\nplt.plot(x, y4, label='y4')\n\n# \u6dfb\u52a0\u56fe\u4f8b\u3001\u5750\u6807\u8f74\u6807\u7b7e\u548c\u6807\u9898\nplt.legend()\nplt.xlabel('x')\nplt.ylabel('y')\nplt.title('Solution of a System of Differential Equations')\n\n# \u663e\u793a\u56fe\u50cf\nplt.show()\n</code></pre></p> <p>chatgpt: </p> <p>\u8fd9\u4e2a\u62a5\u9519\u662f\u56e0\u4e3a\u5728\u6c42\u89e3\u5fae\u5206\u65b9\u7a0b\u7ec4\u65f6\uff0c\u51fa\u73b0\u4e86\u975e\u6cd5\u503c\u3002\u5177\u4f53\u6765\u8bf4\uff0c\u5728\u51fd\u6570f\u4e2d\u7684\u7b2c\u56db\u4e2a\u65b9\u7a0b\u4e2d\uff0c\u5f53\u5206\u6bcdm2\u4e3a0\u65f6\uff0c\u4f1a\u53d1\u751f\u9664\u96f6\u9519\u8bef\uff0c\u8fdb\u800c\u5bfc\u81f4\u9519\u8bef\u7684\u8ba1\u7b97\u7ed3\u679c\u3002</p> <p>\u4e3a\u4e86\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u53ef\u4ee5\u5728\u51fd\u6570f\u4e2d\u5bf9\u5206\u6bcdm2\u8fdb\u884c\u5224\u65ad\uff0c\u5982\u679cm2\u4e3a0\uff0c\u5219\u5c06y[3]\u7684\u5bfc\u6570\u8bbe\u4e3a0\u3002\u8fd9\u6837\u53ef\u4ee5\u907f\u514d\u9664\u96f6\u9519\u8bef\uff0c\u5e76\u4fdd\u8bc1\u6c42\u89e3\u7ed3\u679c\u7684\u6b63\u786e\u6027\u3002\u4fee\u6539\u540e\u7684\u4ee3\u7801\u5982\u4e0b\uff1a</p> <pre><code># \u5b9a\u4e49\u4e8c\u5143\u5fae\u5206\u65b9\u7a0b\u51fd\u6570\ndef f(y, x, m1, m2, k1, k2, k3, k4, F, w, m_c):\n    if m2 == 0:\n        dydt = [y[2], y[3], (-k1 * y[0] - k2 * (y[0] - y[1]) - k3 * (y[2] - y[3]) ** 1.5 - k4 * y[2] + F * np.cos(w * x)) / (m1 + m_c), 0]\n    else:\n        dydt = [y[2], y[3], (-k1 * y[0] - k2 * (y[0] - y[1]) - k3 * (y[2] - y[3]) ** 1.5 - k4 * y[2] + F * np.cos(w * x)) / (m1 + m_c),\n                (k2 * (y[0] - y[1]) + k3 * (y[2] - y[3]) ** 1.5) / m2]\n    return dydt\n</code></pre> <p>\u5728\u4fee\u6539\u540e\u7684\u4ee3\u7801\u4e2d\uff0c\u6211\u4eec\u9996\u5148\u5bf9m2\u8fdb\u884c\u5224\u65ad\uff0c\u5982\u679cm2\u4e3a0\uff0c\u5219\u5c06y[3]\u7684\u5bfc\u6570\u8bbe\u4e3a0\uff0c\u5426\u5219\u6309\u539f\u6765\u7684\u65b9\u5f0f\u8ba1\u7b97y[3]\u7684\u5bfc\u6570\u3002\u8fd9\u6837\u53ef\u4ee5\u907f\u514d\u9664\u96f6\u9519\u8bef\uff0c\u5e76\u4fdd\u8bc1\u6c42\u89e3\u7ed3\u679c\u7684\u6b63\u786e\u6027\u3002</p> <p>\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u5728\u5b9e\u9645\u5e94\u7528\u4e2d\uff0c\u51fa\u73b0\u975e\u6cd5\u503c\u7684\u539f\u56e0\u53ef\u80fd\u4e0d\u4ec5\u4ec5\u662f\u9664\u96f6\u9519\u8bef\uff0c\u8fd8\u53ef\u80fd\u5305\u62ec\u5176\u4ed6\u60c5\u51b5\u3002\u56e0\u6b64\uff0c\u5728\u7f16\u5199\u7a0b\u5e8f\u65f6\uff0c\u9700\u8981\u5bf9\u53ef\u80fd\u51fa\u73b0\u7684\u975e\u6cd5\u503c\u8fdb\u884c\u5145\u5206\u7684\u5224\u65ad\u548c\u5904\u7406\uff0c\u4ee5\u4fdd\u8bc1\u7a0b\u5e8f\u7684\u6b63\u786e\u6027\u548c\u7a33\u5b9a\u6027\u3002</p> <p>user: </p> <p><pre><code>RuntimeWarning: invalid value encountered in scalar power\n(k2 * (y[0] - y[1]) + k3 * (y[2] - y[3]) ** 1.5) / m2]\n</code></pre> How should this error be resolved? The complete code is as follows: <pre><code>import numpy as np\nfrom scipy import *\nfrom scipy.integrate import odeint\nimport matplotlib.pyplot as plt\nfrom math import *\n\nm1 = 4.866\nm2 = 2433\nk1 = 31557.298\nk2 = 80000\nk3 = 10000\nk4 = 656.3516\nF = 6250\nw = 1.4005\nm_c = 1335.535\n\n\n# \u5b9a\u4e49\u4e8c\u5143\u5fae\u5206\u65b9\u7a0b\u51fd\u6570\ndef f(y, x, m1, m2, k1, k2, k3, k4, F, w, m_c):\n    return [y[2], y[3], (-k1 * y[0] - k2 * (y[0] - y[1]) - k3 * (y[2] - y[3]) ** 1.5 - k4 * y[2] + F * np.cos(w * x)) / (m1 + m_c),\n            (k2 * (y[0] - y[1]) + k3 * (y[2] - y[3]) ** 1.5) / m2]\n\n\n# \u521d\u59cb\u6761\u4ef6\ny0 = [0, 0, 0, 0]\n\n# \u81ea\u53d8\u91cf\u8303\u56f4\nx = np.linspace(0, 5, 1000)\n\n# \u6c42\u89e3\u5fae\u5206\u65b9\u7a0b\u7ec4\nsol = odeint(f, y0, x, args=(m1, m2, k1, k2, k3, k4, F, w, m_c))\n\n# \u5206\u522b\u63d0\u53d6y1\u548cy2\u7684\u503c\ny1 = sol[:, 0]\ny2 = sol[:, 1]\ny3 = sol[:, 2]\ny4 = sol[:, 3]\n\n# \u7ed8\u5236\u51fd\u6570\u56fe\u50cf\nplt.plot(x, y1, label='y1')\nplt.plot(x, y2, label='y2')\nplt.plot(x, y3, label='y3')\nplt.plot(x, y4, label='y4')\n\n# \u6dfb\u52a0\u56fe\u4f8b\u3001\u5750\u6807\u8f74\u6807\u7b7e\u548c\u6807\u9898\nplt.legend()\nplt.xlabel('x')\nplt.ylabel('y')\nplt.title('Solution of a System of Differential Equations')\n\n# \u663e\u793a\u56fe\u50cf\nplt.show()\n</code></pre></p> <p>chatgpt: </p> <p>This error occurs because an invalid value was encountered during the calculation of a scalar power operation. Specifically, in the fourth equation of the function <code>f</code>, when <code>(y[2] - y[3])</code> is negative, the power of <code>1.5</code> results in an imaginary number, which is not a valid value for a real scalar. This leads to the <code>RuntimeWarning</code> error.</p> <p>To fix this error, you can use the <code>numpy.sign</code> function to get the sign of the quantity <code>(y[2] - y[3])</code>, and then multiply it with the absolute value of this quantity raised to the power of <code>1.5</code>. The resulting expression will always be real and prevent this error from occurring. Here's the modified code:</p> <pre><code># Define the system of differential equations\ndef f(y, x, m1, m2, k1, k2, k3, k4, F, w, m_c):\n    sign = np.sign(y[2] - y[3])\n    return [y[2], y[3], (-k1 * y[0] - k2 * (y[0] - y[1]) - k3 * sign * abs(y[2] - y[3]) ** 1.5 - k4 * y[2] + F * np.cos(w * x)) / (m1 + m_c),\n            (k2 * (y[0] - y[1]) + k3 * sign * abs(y[2] - y[3]) ** 1.5) / m2]\n</code></pre> <p>In this modified code, we first compute the sign of <code>(y[2] - y[3])</code> using <code>numpy.sign</code>. We then use this sign to multiply the absolute value of <code>(y[2] - y[3])</code> raised to the power of <code>1.5</code>. This ensures that the expression is always real, regardless of the sign of <code>(y[2] - y[3])</code>, and resolves the <code>RuntimeWarning</code> error.</p> <p>Note that this error can occur in other situations where a scalar power operation results in an invalid value, so it's always a good idea to check for such cases and handle them appropriately to avoid errors.</p> <p>user: </p> <p>\u4f60\u80fd\u7528\u4e2d\u6587\u518d\u8f93\u51fa\u4e00\u904d\u5417\uff1f</p> <p>chatgpt: </p> <p>\u8fd9\u4e2a\u9519\u8bef\u662f\u56e0\u4e3a\u5728\u8ba1\u7b97\u6807\u91cf\u4e58\u65b9\u65f6\u51fa\u73b0\u4e86\u975e\u6cd5\u503c\u3002\u5177\u4f53\u6765\u8bf4\uff0c\u5728\u51fd\u6570f\u7684\u7b2c\u56db\u4e2a\u65b9\u7a0b\u4e2d\uff0c\u5f53<code>(y[2] - y[3])</code>\u4e3a\u8d1f\u6570\u65f6\uff0c\u5c061.5\u6b21\u5e42\u5e94\u7528\u4e8e\u8be5\u8d1f\u6570\u4f1a\u5bfc\u81f4\u865a\u6570\uff0c\u8fd9\u4e0d\u662f\u6807\u91cf\u7684\u6709\u6548\u503c\uff0c\u56e0\u6b64\u4f1a\u51fa\u73b0<code>RuntimeWarning</code>\u9519\u8bef\u3002</p> <p>\u4e3a\u4e86\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u53ef\u4ee5\u4f7f\u7528<code>numpy.sign</code>\u51fd\u6570\u83b7\u53d6<code>(y[2] - y[3])</code>\u7684\u7b26\u53f7\uff0c\u5e76\u5c06\u5176\u4e0e\u7edd\u5bf9\u503c\u76841.5\u6b21\u5e42\u76f8\u4e58\uff0c\u53ef\u4ee5\u786e\u4fdd\u8ba1\u7b97\u7ed3\u679c\u603b\u662f\u5b9e\u6570\uff0c\u4ece\u800c\u907f\u514d\u51fa\u73b0\u9519\u8bef\u3002\u4ee5\u4e0b\u662f\u4fee\u6539\u540e\u7684\u4ee3\u7801\uff1a</p> <pre><code># \u5b9a\u4e49\u4e8c\u5143\u5fae\u5206\u65b9\u7a0b\u51fd\u6570\ndef f(y, x, m1, m2, k1, k2, k3, k4, F, w, m_c):\n    sign = np.sign(y[2] - y[3])\n    return [y[2], y[3], (-k1 * y[0] - k2 * (y[0] - y[1]) - k3 * sign * abs(y[2] - y[3]) ** 1.5 - k4 * y[2] + F * np.cos(w * x)) / (m1 + m_c),\n            (k2 * (y[0] - y[1]) + k3 * sign * abs(y[2] - y[3]) ** 1.5) / m2]\n</code></pre> <p>\u5728\u4fee\u6539\u540e\u7684\u4ee3\u7801\u4e2d\uff0c\u6211\u4eec\u9996\u5148\u4f7f\u7528<code>numpy.sign</code>\u83b7\u53d6<code>(y[2] - y[3])</code>\u7684\u7b26\u53f7\uff0c\u7136\u540e\u5c06\u5176\u4e0e\u7edd\u5bf9\u503c\u76841.5\u6b21\u5e42\u76f8\u4e58\u3002\u8fd9\u5c06\u786e\u4fdd\u8ba1\u7b97\u7ed3\u679c\u603b\u662f\u5b9e\u6570\uff0c\u5e76\u907f\u514d\u51fa\u73b0<code>RuntimeWarning</code>\u9519\u8bef\u3002</p> <p>\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u8fd9\u79cd\u9519\u8bef\u53ef\u80fd\u4f1a\u5728\u5176\u4ed6\u60c5\u51b5\u4e0b\u51fa\u73b0\uff0c\u56e0\u6b64\uff0c\u5728\u7f16\u5199\u7a0b\u5e8f\u65f6\uff0c\u9700\u8981\u68c0\u67e5\u8fd9\u4e9b\u60c5\u51b5\u5e76\u8fdb\u884c\u9002\u5f53\u7684\u5904\u7406\uff0c\u4ee5\u907f\u514d\u51fa\u73b0\u9519\u8bef\u3002</p>"},{"location":"python%E7%9B%B8%E5%85%B3/sympy/","title":"SymPy","text":"<p> \u7ea6 2559 \u4e2a\u5b57  88 \u884c\u4ee3\u7801  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 10 \u5206\u949f</p>"},{"location":"python%E7%9B%B8%E5%85%B3/sympy/#1","title":"1","text":"<p>Quick examples \u00b7 sympy/sympy Wiki (github.com)</p>"},{"location":"python%E7%9B%B8%E5%85%B3/sympy/#2","title":"2","text":"<p><code>diff()</code>\u51fd\u6570\u7528\u6765\u6c42\u5bfc\uff0c\u7528\u6cd5 <code>diff(func, x, n)</code> \uff0cfunc\u662f\u8981\u6c42\u5bfc\u7684\u51fd\u6570\uff0cx\u662f\u8981\u5bf9\u5176\u6c42\u5bfc\u7684\u53d8\u91cf\uff0cn\u662f\u53ef\u9009\u7684\uff0c\u8868\u793a\u6c42n\u9636\u5bfc\u6570\uff0c\u9ed8\u8ba4\u4e3a1\u9636\u5bfc\u6570\u3002(\u6216 <code>diff(func, x, x, x, ...)</code>)</p> <pre><code>from sympy import symbols, diff\n\n# \u5b9a\u4e49\u4e8c\u5143\u51fd\u6570\nx, y = symbols('x y')\nf = x**2 + 2*x*y + y**2\n\n# \u5bf9x\u6c42\u504f\u5bfc\u6570\ndf_dx = diff(f, x)\nprint(\"\u5bf9x\u6c42\u504f\u5bfc\u6570\uff1a\", df_dx)\n\n# \u5bf9y\u6c42\u504f\u5bfc\u6570\ndf_dy = diff(f, y)\nprint(\"\u5bf9y\u6c42\u504f\u5bfc\u6570\uff1a\", df_dy)\n</code></pre> <p><code>.diff()</code>\u65b9\u6cd5\u4e5f\u53ef\u4ee5\u7528\u6765\u6c42\u5bfc\uff0c\u7528\u6cd5<code>func.diff(x, n)</code> (x\u4e3a\u6c42\u5bfc\u7684\u53d8\u91cf\uff0cn\u4e3a\u9636\u6570)\u6216<code>func.diff(x, x, x, ...)</code> (\u4f9d\u6b21\u6c42\u5bfc\u7684\u53d8\u91cf)\uff0c\u5219\u5bf9 \\(f(x)\\) \u6c42\u4e09\u9636\u5bfc\u4e3a</p> <pre><code>f(x).diff(x, 3)\n</code></pre> <p>\u6216</p> <pre><code>f(x).diff(x, x, x)\n</code></pre>"},{"location":"python%E7%9B%B8%E5%85%B3/sympy/#3","title":"3","text":"<p><code>Derivative</code>\u7c7b\u6784\u9020\u65b9\u6cd5\u4e0e <code>diff()</code>\u51fd\u6570\u8f83\u4e3a\u7c7b\u4f3c\uff0c\u4f7f\u7528\u65b9\u6cd5\u4e5f\u4e3a <code>Derivative(func, x, n)</code> \u6216 <code>Derivative(func, x, x, x, ...)</code>\uff0c\u4f46\u5982\u679c\u51fd\u6570 <code>func</code> \u4e3a\u4e00\u4e2a\u5177\u4f53\u7684\u51fd\u6570\u65f6\uff0c\u524d\u8005\u4e0d\u8f93\u51fa\u6c42\u5bfc\u7684\u7ed3\u679c\uff0c\u800c\u8f93\u51fa\u6c42\u5bfc\u7684\u8868\u8fbe\u5f0f\uff0c\u540e\u8005\u8f93\u51fa\u5bfc\u51fd\u6570\uff0c\u5982</p> <pre><code>g = x ** 2 + 2 * x + 1\nwrite_latex_md(latex(Derivative(g, x, x)))\nwrite_latex_md(latex(diff(g, x, x)))\n</code></pre> <p>\u7ed3\u679c\u5206\u522b\u4e3a $$ \\frac{d^{2}}{d x^{2}} \\left(x^{2} + 2 x + 1\\right) $$</p> <p>\u548c</p> <p>$$ 2 $$ \u800c\u4f7f\u7528 <code>.doit()</code> \u65b9\u6cd5\u50cf\u540e\u8005\u4e00\u6837\u53ef\u4ee5\u8f93\u51fa\u5bfc\u51fd\u6570</p>"},{"location":"python%E7%9B%B8%E5%85%B3/sympy/#4","title":"4","text":"<p>\u4f7f\u7528 <code>Rational</code> \u7c7b\u53ef\u4ee5\u8868\u793a\u5206\u6570\uff0c\u5982</p> <pre><code>Rational(3,2)*pi\n</code></pre> <p>\u8f93\u51fa\u4e3a $$ \\frac{3 \\pi}{2} $$ \u82e5\u5199\u6210</p> <pre><code>3 / 2 * pi\n</code></pre> <p>\u5219\u8f93\u51fa\u4e3a $$ 1.5\\pi $$</p>"},{"location":"python%E7%9B%B8%E5%85%B3/sympy/#5","title":"5","text":"<p><code>symbols.()</code> </p> <pre><code>x, y, z = symbols('x,y,z')\na, b, c = symbols('a b c')\n\n&gt;&gt;&gt; symbols('x:10')\n(x0, x1, x2, x3, x4, x5, x6, x7, x8, x9)\n\n&gt;&gt;&gt; symbols('x5:10')\n(x5, x6, x7, x8, x9)\n&gt;&gt;&gt; symbols('x5(:2)')\n(x50, x51)\n\n&gt;&gt;&gt; symbols('x5:10,y:5')\n(x5, x6, x7, x8, x9, y0, y1, y2, y3, y4)\n\n&gt;&gt;&gt; symbols(('x5:10', 'y:5'))\n((x5, x6, x7, x8, x9), (y0, y1, y2, y3, y4))\n</code></pre>"},{"location":"python%E7%9B%B8%E5%85%B3/sympy/#6","title":"6","text":"<p>\u8981\u8ba9sympy\u663e\u793a\u56fe\u50cf\uff0c\u9700\u8981\u5b89\u88c5matplotlib\u5305</p> <pre><code>pip install matplotlib\n</code></pre>"},{"location":"python%E7%9B%B8%E5%85%B3/sympy/#7","title":"7","text":"<p>2023\u6570\u6a21\u56fd\u8d5b</p> <p>\u5982\u679c\u9700\u8981\u5728\u51fd\u6570\u6216\u65b9\u7a0b\u4e2d\u6dfb\u52a0\u5bf9\u6570\u51fd\u6570\uff0c\u9700\u8981\u4f7f\u7528sympy\u5305\u91cc\u7684 <code>log(x, y)</code> \u51fd\u6570(x\u4e3a\u771f\u6570\uff0cy\u4e3a\u5e95\u6570)</p> <p>(\u5982\u679c\u5728\u5bfc\u5165sympy\u5305\u65f6\uff0c\u4f7f\u7528 <code>from sympy import *</code> \u5219\u53ef\u80fd\u4f1a\u4f7f\u5f97 python \u7684 math \u91cc\u7684\u6c42\u5bf9\u6570\u7684\u51fd\u6570\u88ab\u8986\u76d6)</p> chat log <p>user: </p> <p>sympy\u600e\u4e48\u4f7f\u7528?</p> <p>bing: </p> <p>SymPy \u662f\u4e00\u6b3e\u7528\u4e8e\u7b26\u53f7\u8ba1\u7b97\u7684 Python \u5e93\uff0c\u53ef\u4ee5\u8fdb\u884c\u7b26\u53f7\u8ba1\u7b97\u3001\u7b26\u53f7\u4ee3\u6570\u3001\u5fae\u79ef\u5206\u3001\u65b9\u7a0b\u5f0f\u6c42\u89e3\u3001\u6570\u503c\u8ba1\u7b97\u7b49\u64cd\u4f5c\u3002\u4ee5\u4e0b\u662f SymPy \u5e93\u7684\u57fa\u672c\u4f7f\u7528\u65b9\u6cd5\uff1a </p> <ol> <li>\u5b89\u88c5 SymPy \u5e93; \u5728\u547d\u4ee4\u884c\u4e2d\u8f93\u5165 pip install sympy\uff0c\u5373\u53ef\u5b89\u88c5 SymPy \u5e93\u3002\u5982\u679c\u5df2\u7ecf\u5b89\u88c5\u4e86 Anaconda\uff0c\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528 conda install sympy \u547d\u4ee4\u5b89\u88c5\u3002 </li> <li>\u5bfc\u5165 SymPy \u5e93; \u5728 Python \u4ee3\u7801\u4e2d\u5bfc\u5165 SymPy \u5e93\uff0c\u5982\u4e0b\u6240\u793a\uff1a <pre><code>from sympy import *\n</code></pre></li> <li>\u4f7f\u7528 SymPy \u5e93; \u4f8b\u5982\uff0c\u8981\u6c42\u89e3\u65b9\u7a0b\u5f0f x^2 + 2x + 1 = 0\uff0c\u53ef\u4ee5\u4f7f\u7528\u4ee5\u4e0b\u4ee3\u7801\uff1a <pre><code>from sympy import *\nx = symbols('x')\nsolve(x**2 + 2*x + 1, x)\n</code></pre> \u8fd9\u5c06\u8fd4\u56de [-1]\uff0c\u5373\u65b9\u7a0b\u5f0f\u7684\u89e3\u4e3a -1\u3002</li> </ol> <p>\u5e0c\u671b\u8fd9\u80fd\u5e2e\u5230\u4f60\uff01</p> <p>user: </p> <p>Rational\u51fd\u6570\u6709\u4ec0\u4e48\u4f5c\u7528\uff1f</p> <p>bing: </p> <p>\u6709\u7406\u51fd\u6570\u662f\u4efb\u4f55\u53ef\u4ee5\u7531\u6709\u7406\u5206\u5f0f\u5b9a\u4e49\u7684\u51fd\u6570\uff0c\u5176\u4e2d\u6709\u7406\u5206\u5f0f\u662f\u4e00\u79cd\u4ee3\u6570\u5206\u5f0f\uff0c\u5176\u5206\u5b50\u548c\u5206\u6bcd\u90fd\u662f\u591a\u9879\u5f0f\u3002\u591a\u9879\u5f0f\u7684\u7cfb\u6570\u4e0d\u5fc5\u662f\u6709\u7406\u6570\uff1b\u5b83\u4eec\u53ef\u4ee5\u5728\u4efb\u4f55\u57dfK\u4e2d\u53d6\u503c<sup>1</sup>\u3002</p> <p>\u6709\u7406\u51fd\u6570\u5728\u6570\u5b66\u4e2d\u6709\u5e7f\u6cdb\u7684\u5e94\u7528\uff0c\u4f8b\u5982\u5728\u5fae\u79ef\u5206\u4e2d\uff0c\u6709\u7406\u51fd\u6570\u662f\u4e00\u7c7b\u53ef\u4ee5\u88ab\u79ef\u5206\u7684\u51fd\u6570\u3002\u5728\u4ee3\u6570\u51e0\u4f55\u4e2d\uff0c\u6709\u7406\u51fd\u6570\u662f\u4e00\u7c7b\u53ef\u4ee5\u88ab\u5b9a\u4e49\u5728\u4ee3\u6570\u7c07\u4e0a\u7684\u51fd\u6570\u3002<sup>1</sup></p> <p>\u5e0c\u671b\u8fd9\u80fd\u56de\u7b54\u4f60\u7684\u95ee\u9898\uff01</p> <p>user: </p> <p>sympy\u4e2d\u7684 rational\u6709\u4ec0\u4e48\u4f5c\u7528\uff1f</p> <p>bing: </p> <p>\u5728SymPy\u4e2d\uff0cRational\u51fd\u6570\u662f\u7528\u4e8e\u5904\u7406\u6709\u7406\u6570\u7684\u51fd\u6570\u3002\u6709\u7406\u6570\u662f\u53ef\u4ee5\u8868\u793a\u4e3a\u4e24\u4e2a\u6574\u6570\uff08\u5206\u5b50p\u548c\u975e\u96f6\u5206\u6bcdq\uff09\u7684\u5546\u6216\u5206\u6570p/q\u7684\u4efb\u4f55\u6570\u5b57\u3002Rational\u51fd\u6570\u53ef\u4ee5\u5c06\u6d6e\u70b9\u6570\u8f6c\u6362\u4e3a\u6709\u7406\u6570\u5f62\u5f0f\uff0c\u4e5f\u53ef\u4ee5\u68c0\u67e5\u5143\u7d20\u662f\u5426\u4e3a\u6709\u7406\u6570\uff0c\u8fd4\u56de\u5e03\u5c14\u503cTrue\u6216False<sup>1</sup> <sup>2</sup> <sup>3</sup>.</p> <p>\u5e0c\u671b\u8fd9\u80fd\u56de\u7b54\u4f60\u7684\u95ee\u9898\uff01</p> <p>user: </p> <p>\u5982\u4f55\u5728py\u6587\u4ef6\u4e2d\u8c03\u7528\u67d0\u4e2a\u8f6f\u4ef6\u6253\u5f00\u67d0\u4e2a\u6587\u4ef6\uff1f</p> <p>bing: </p> <p>\u4f60\u53ef\u4ee5\u4f7f\u7528Python\u7684subprocess\u6a21\u5757\u6765\u8c03\u7528\u5176\u4ed6\u8f6f\u4ef6\u3002\u4f8b\u5982\uff0c\u5982\u679c\u4f60\u60f3\u5728Windows\u4e0a\u4f7f\u7528\u8bb0\u4e8b\u672c\u6253\u5f00\u4e00\u4e2a\u6587\u4ef6\uff0c\u4f60\u53ef\u4ee5\u4f7f\u7528\u4ee5\u4e0b\u4ee3\u7801\uff1a</p> <pre><code>import subprocess\nsubprocess.Popen(['notepad.exe', 'file.txt'])\n</code></pre> <p>\u8fd9\u5c06\u6253\u5f00\u8bb0\u4e8b\u672c\u5e76\u6253\u5f00\u540d\u4e3afile.txt\u7684\u6587\u4ef6\u3002<sup>1</sup> <sup>2</sup> <sup>3</sup></p> <p>\u5e0c\u671b\u8fd9\u80fd\u56de\u7b54\u4f60\u7684\u95ee\u9898\uff01</p> <p>user: </p> <p>\u5982\u679c\u6211\u60f3\u4f7f\u7528\u5176\u4ed6\u8f6f\u4ef6\u5462\uff0c\u6bd4\u5982vs code</p> <p>bing: </p> <p>\u4f60\u53ef\u4ee5\u4f7f\u7528Python\u7684subprocess\u6a21\u5757\u6765\u8c03\u7528\u5176\u4ed6\u8f6f\u4ef6\u3002\u4f8b\u5982\uff0c\u5982\u679c\u4f60\u60f3\u5728Windows\u4e0a\u4f7f\u7528VS Code\u6253\u5f00\u4e00\u4e2a\u6587\u4ef6\uff0c\u4f60\u53ef\u4ee5\u4f7f\u7528\u4ee5\u4e0b\u4ee3\u7801\uff1a</p> <pre><code>import subprocess\nsubprocess.Popen(['code', 'file.txt'])\n</code></pre> <p>\u8fd9\u5c06\u6253\u5f00VS Code\u5e76\u6253\u5f00\u540d\u4e3afile.txt\u7684\u6587\u4ef6\u3002<sup>1</sup> <sup>2</sup> <sup>3</sup></p> <p>\u5e0c\u671b\u8fd9\u80fd\u56de\u7b54\u4f60\u7684\u95ee\u9898\uff01</p> <p>user: </p> <p>diff\u51fd\u6570\u600e\u4e48\u7528\uff1f</p> <p>bing: </p> <p>\u5728Python\u4e2d\uff0cdiff\u51fd\u6570\u53ef\u4ee5\u6709\u4e0d\u540c\u7684\u542b\u4e49\uff0c\u5177\u4f53\u53d6\u51b3\u4e8e\u4f60\u4f7f\u7528\u7684\u5e93\u3002\u4f8b\u5982\uff0c\u5982\u679c\u4f60\u4f7f\u7528\u7684\u662fPython\u7684set\u5e93\uff0c\u90a3\u4e48difference()\u65b9\u6cd5\u53ef\u4ee5\u7528\u4e8e\u8fd4\u56de\u96c6\u5408\u7684\u5dee\u96c6\uff0c\u5373\u8fd4\u56de\u7684\u96c6\u5408\u5143\u7d20\u5305\u542b\u5728\u7b2c\u4e00\u4e2a\u96c6\u5408\u4e2d\uff0c\u4f46\u4e0d\u5305\u542b\u5728\u7b2c\u4e8c\u4e2a\u96c6\u5408\u4e2d\u3002</p> <p>user: </p> <p>sympy\u7684diff\u51fd\u6570\u600e\u4e48\u7528\uff1f</p> <p>bing: </p> <p>\u5728Python\u4e2d\uff0c\u4f60\u53ef\u4ee5\u4f7f\u7528sympy\u5e93\u4e2d\u7684diff()\u51fd\u6570\u6765\u6c42\u5bfc\u6570\u3002diff()\u51fd\u6570\u7684\u57fa\u672c\u7528\u6cd5\u662f\uff1adiff(func,x,n)\uff0c\u5176\u4e2d\uff0cfunc\u662f\u8981\u6c42\u5bfc\u7684\u51fd\u6570\uff0cx\u662f\u8981\u5bf9\u5176\u6c42\u5bfc\u7684\u53d8\u91cf\uff0cn\u662f\u53ef\u9009\u7684\uff0c\u8868\u793a\u6c42n\u9636\u5bfc\u6570\uff0c\u9ed8\u8ba4\u4e3a1\u9636\u5bfc\u6570\u3002<sup>1</sup> <sup>2</sup> <sup>3</sup></p> <p>\u4f8b\u5982\uff0c\u5982\u679c\u4f60\u60f3\u5bf9\u4e00\u4e2a\u4e8c\u5143\u51fd\u6570\u6c42\u504f\u5bfc\u6570\uff0c\u4f60\u53ef\u4ee5\u4f7f\u7528\u4ee5\u4e0b\u4ee3\u7801\uff1a<sup>4</sup></p> <pre><code>from sympy import symbols, diff\n\n# \u5b9a\u4e49\u4e8c\u5143\u51fd\u6570\nx, y = symbols('x y')\nf = x**2 + 2*x*y + y**2\n\n# \u5bf9x\u6c42\u504f\u5bfc\u6570\ndf_dx = diff(f, x)\nprint(\"\u5bf9x\u6c42\u504f\u5bfc\u6570\uff1a\", df_dx)\n\n# \u5bf9y\u6c42\u504f\u5bfc\u6570\ndf_dy = diff(f, y)\nprint(\"\u5bf9y\u6c42\u504f\u5bfc\u6570\uff1a\", df_dy)\n</code></pre> <p>\u5e0c\u671b\u8fd9\u80fd\u56de\u7b54\u4f60\u7684\u95ee\u9898\uff01</p> <p>user: </p> <p><pre><code>from sympy import *\nf(x).diff(x, x)\n</code></pre> \u662f\u4ec0\u4e48\u610f\u601d</p> <p>bing: </p> <p>\u8fd9\u6bb5\u4ee3\u7801\u7684\u610f\u601d\u662f\uff1a\u5b9a\u4e49\u4e00\u4e2a\u51fd\u6570f(x)\uff0c\u7136\u540e\u5bf9\u8fd9\u4e2a\u51fd\u6570\u8fde\u7eed\u6c42\u4e24\u6b21\u5bfc\u6570\u3002</p> <p>\u5176\u4e2d\uff0cf(x).diff(x, x)\u8868\u793a\u5bf9f(x)\u8fd9\u4e2a\u51fd\u6570\u8fdb\u884c\u4e24\u6b21\u6c42\u5bfc\uff0c\u5373\u6c42\u4e8c\u9636\u5bfc\u6570\u3002</p> <p>\u5e0c\u671b\u8fd9\u80fd\u56de\u7b54\u4f60\u7684\u95ee\u9898\uff01</p> <p>user: </p> <p>\u90a3\u4e48\u5982\u679c\u6c42f(x)\u4e09\u9636\u5bfc\uff0c\u5e94\u8be5\u5982\u4f55\u5199\uff1f</p> <p>bing: </p> <p>\u5982\u679c\u8981\u6c42f(x)\u7684\u4e09\u9636\u5bfc\u6570\uff0c\u4f60\u53ef\u4ee5\u4f7f\u7528\u4ee5\u4e0b\u4ee3\u7801\uff1a</p> <pre><code>from sympy import *\nf(x).diff(x, 3)\n</code></pre> <p>\u5176\u4e2d\uff0cdiff()\u51fd\u6570\u7684\u7b2c\u4e8c\u4e2a\u53c2\u6570\u8868\u793a\u8981\u6c42\u7684\u5bfc\u6570\u9636\u6570\uff0c\u8fd9\u91cc\u662f3\uff0c\u5373\u6c42\u4e09\u9636\u5bfc\u6570\u3002</p> <p>\u5e0c\u671b\u8fd9\u80fd\u56de\u7b54\u4f60\u7684\u95ee\u9898\uff01</p> <p>user: </p> <p>\u90a3\u4e48\u4e8c\u9636\u5bfc\u6570\u4e3a\u4ec0\u4e48\u662ff(x).diff(x,x)</p> <p>bing: </p> <p>\u5728Python\u4e2d\uff0c\u4f60\u53ef\u4ee5\u4f7f\u7528sympy\u5e93\u4e2d\u7684diff()\u51fd\u6570\u6765\u6c42\u5bfc\u6570\u3002diff()\u51fd\u6570\u7684\u57fa\u672c\u7528\u6cd5\u662f\uff1adiff(func,x,n)\uff0c\u5176\u4e2d\uff0cfunc\u662f\u8981\u6c42\u5bfc\u7684\u51fd\u6570\uff0cx\u662f\u8981\u5bf9\u5176\u6c42\u5bfc\u7684\u53d8\u91cf\uff0cn\u662f\u53ef\u9009\u7684\uff0c\u8868\u793a\u6c42n\u9636\u5bfc\u6570\uff0c\u9ed8\u8ba4\u4e3a1\u9636\u5bfc\u6570\u3002</p> <p>\u56e0\u6b64\uff0cf(x).diff(x,x)\u8868\u793a\u5bf9f(x)\u8fd9\u4e2a\u51fd\u6570\u8fdb\u884c\u4e24\u6b21\u6c42\u5bfc\uff0c\u5373\u6c42\u4e8c\u9636\u5bfc\u6570\u3002</p> <p>\u5e0c\u671b\u8fd9\u80fd\u56de\u7b54\u4f60\u7684\u95ee\u9898\uff01</p> <p>user: </p> <p>\u90a3\u4e48 sympy Derivative\u51fd\u6570\u662f\u4ec0\u4e48\u610f\u601d\uff1f</p> <p>bing: </p> <p>\u5728Python\u4e2d\uff0c\u4f60\u53ef\u4ee5\u4f7f\u7528sympy\u5e93\u4e2d\u7684Derivative()\u51fd\u6570\u6765\u6c42\u5bfc\u6570\u3002Derivative()\u51fd\u6570\u7684\u57fa\u672c\u7528\u6cd5\u662f\uff1aDerivative(func,x)\uff0c\u5176\u4e2d\uff0cfunc\u662f\u8981\u6c42\u5bfc\u7684\u51fd\u6570\uff0cx\u662f\u8981\u5bf9\u5176\u6c42\u5bfc\u7684\u53d8\u91cf\u3002</p> <p>\u4e0ediff()\u51fd\u6570\u4e0d\u540c\u7684\u662f\uff0cDerivative()\u51fd\u6570\u8fd4\u56de\u4e00\u4e2a\u672a\u8bc4\u4f30\u7684\u5bfc\u6570\uff0c\u800c\u4e0d\u662f\u5df2\u7ecf\u8ba1\u7b97\u51fa\u6765\u7684\u5bfc\u6570\u3002\u5982\u679c\u8981\u8ba1\u7b97\u8fd9\u4e2a\u5bfc\u6570\uff0c\u4f60\u53ef\u4ee5\u4f7f\u7528doit()\u65b9\u6cd5\u3002</p> <p>\u4f8b\u5982\uff0c\u5982\u679c\u4f60\u60f3\u5bf9\u4e00\u4e2a\u51fd\u6570f(x)\u6c42\u4e00\u9636\u5bfc\u6570\uff0c\u4f60\u53ef\u4ee5\u4f7f\u7528\u4ee5\u4e0b\u4ee3\u7801\uff1a<sup>1</sup></p> <pre><code>from sympy import symbols, Derivative\n\n# \u5b9a\u4e49\u51fd\u6570\nx = symbols('x')\nf = x**2 + 2*x + 1\n\n# \u5bf9x\u6c42\u4e00\u9636\u5bfc\u6570\ndf_dx = Derivative(f, x).doit()\nprint(\"\u5bf9x\u6c42\u4e00\u9636\u5bfc\u6570\uff1a\", df_dx)\n</code></pre> <p>\u5e0c\u671b\u8fd9\u80fd\u56de\u7b54\u4f60\u7684\u95ee\u9898\uff01</p> <p>user: </p> <p>\u5982\u4f55\u4f7f\u7528sympy\u6c42\u89e3\u5fae\u5206\u65b9\u7a0b\u7ec4\uff1f</p> <p>bing: </p> <p>\u5728Python\u4e2d\uff0c\u4f60\u53ef\u4ee5\u4f7f\u7528sympy\u5e93\u4e2d\u7684dsolve()\u51fd\u6570\u6765\u6c42\u89e3\u5fae\u5206\u65b9\u7a0b\u7ec4\u3002dsolve()\u51fd\u6570\u7684\u57fa\u672c\u7528\u6cd5\u662f\uff1adsolve(equations)\uff0c\u5176\u4e2d\uff0cequations\u662f\u5fae\u5206\u65b9\u7a0b\u7ec4\u3002</p> <p>\u4f8b\u5982\uff0c\u5982\u679c\u4f60\u60f3\u6c42\u89e3\u4e00\u4e2a\u4e8c\u9636\u5fae\u5206\u65b9\u7a0b\u7ec4y'' + y = 0\uff0c\u4f60\u53ef\u4ee5\u4f7f\u7528\u4ee5\u4e0b\u4ee3\u7801\uff1a<sup>1</sup></p> <pre><code>from sympy import symbols, Function, dsolve\n\n# \u5b9a\u4e49\u51fd\u6570\nx = symbols('x')\ny = Function('y')(x)\n\n# \u6c42\u89e3\u5fae\u5206\u65b9\u7a0b\u7ec4\ndsolve(y.diff(x, x) + y, y)\n</code></pre> <p>\u5e0c\u671b\u8fd9\u80fd\u56de\u7b54\u4f60\u7684\u95ee\u9898\uff01</p> <p>user: </p> <p>\u5982\u4f55\u4f7f\u7528 sympy \u6c42\u89e3 \u4e8c\u5143\u4e8c\u9636\u7ebf\u6027\u5fae\u5206\u65b9\u7a0b\u7ec4</p> <p>bing: </p> <p>\u5728Python\u4e2d\uff0c\u4f60\u53ef\u4ee5\u4f7f\u7528sympy\u5e93\u4e2d\u7684dsolve()\u51fd\u6570\u6765\u6c42\u89e3\u5fae\u5206\u65b9\u7a0b\u7ec4\u3002dsolve()\u51fd\u6570\u7684\u57fa\u672c\u7528\u6cd5\u662f\uff1adsolve(equations)\uff0c\u5176\u4e2d\uff0cequations\u662f\u5fae\u5206\u65b9\u7a0b\u7ec4\u3002</p> <p>\u4f8b\u5982\uff0c\u5982\u679c\u4f60\u60f3\u6c42\u89e3\u4e00\u4e2a\u4e8c\u5143\u4e8c\u9636\u7ebf\u6027\u5fae\u5206\u65b9\u7a0b\u7ec4\uff0c\u4f60\u53ef\u4ee5\u4f7f\u7528\u4ee5\u4e0b\u4ee3\u7801\uff1a</p> <pre><code>from sympy import symbols, Function, dsolve\n\n# \u5b9a\u4e49\u51fd\u6570\nx = symbols('x')\ny1 = Function('y1')(x)\ny2 = Function('y2')(x)\n\n# \u6c42\u89e3\u5fae\u5206\u65b9\u7a0b\u7ec4\ndsolve((y1.diff(x, x) + y1 + y2.diff(x), y2.diff(x, x) + y2 - y1), (y1, y2))\n</code></pre> <p>\u5e0c\u671b\u8fd9\u80fd\u56de\u7b54\u4f60\u7684\u95ee\u9898\uff01</p>"},{"location":"yolo/yolov5/","title":"YOLOv5","text":"<p> \u7ea6 176 \u4e2a\u5b57  50 \u884c\u4ee3\u7801  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 1 \u5206\u949f</p>"},{"location":"yolo/yolov5/#1","title":"1","text":"<p>\u5b89\u88c5gpu\u7248\u672c\u7684torch\u548ctorchvision</p> <p>Previous PyTorch Versions | PyTorch</p> <p>\u627e <code>Wheel</code></p> <p>\u4f8b</p> <p>v1.12.1</p> <p>Conda</p> <p>...</p> <p>Wheel</p> <p>OSX</p> <pre><code>pip install torch==1.12.1 torchvision==0.13.1 torchaudio==0.12.1\n</code></pre> <p>Linux and Windows</p> <pre><code># ROCM 5.1.1 (Linux only)\npip install torch==1.12.1+rocm5.1.1 torchvision==0.13.1+rocm5.1.1 torchaudio==0.12.1 --extra-index-url  https://download.pytorch.org/whl/rocm5.1.1\n# CUDA 11.6\npip install torch==1.12.1+cu116 torchvision==0.13.1+cu116 torchaudio==0.12.1 --extra-index-url https://download.pytorch.org/whl/cu116\n# CUDA 11.3\npip install torch==1.12.1+cu113 torchvision==0.13.1+cu113 torchaudio==0.12.1 --extra-index-url https://download.pytorch.org/whl/cu113\n# CUDA 10.2\npip install torch==1.12.1+cu102 torchvision==0.13.1+cu102 torchaudio==0.12.1 --extra-index-url https://download.pytorch.org/whl/cu102\n# CPU only\npip install torch==1.12.1+cpu torchvision==0.13.1+cpu torchaudio==0.12.1 --extra-index-url https://download.pytorch.org/whl/cpu\n</code></pre>"},{"location":"yolo/yolov5/#2","title":"2","text":"<pre><code>ImportError: urllib3 v2.0 only supports OpenSSL 1.1.1+, currently the 'ssl' module is compiled with 'OpenSSL 1.0.2u  20 Dec 2019'. See: https://github.com/urllib3/urllib3/issues/2168\n</code></pre> <p>yolov5\u4e0d\u8981\u6c42<code>urllib3</code> \u7248\u672c\uff0c\u5219\u964d\u4f4e <code>urllib3</code> \u7684\u7248\u672c</p> <p>urllib3 v2.0 only supports OpenSSL 1.1.1+, currently the 'ssl' module is compile - \u6398\u91d1</p> <p>\u67e5\u8be2\u53ef\u5b89\u88c5\u7684 <code>urlib3</code> \u7248\u672c\uff1a</p> <pre><code>pip install urllib3==\n</code></pre> <p>\u5b89\u88c5</p> <pre><code>pip install urllib3==1.x\n</code></pre> <p>(8\u6761\u6d88\u606f) openssl \u9ed8\u8ba4\u7248\u672c\u95ee\u9898\uff08Anaconda\u76f8\u5173\uff09_anaconda openssl_wjh_test\u7684\u535a\u5ba2-CSDN\u535a\u5ba2</p> <p>\u5c1d\u8bd5\u66f4\u6539 <code>openssl</code> \u4f46\u6ca1\u7528</p>"},{"location":"yolo/yolov5/#3","title":"3","text":"<p>Quickstart - Ultralytics YOLOv8 Docs</p> <p>\u4e3b\u76ee\u5f55\u4e0b\u521b\u5efa <code>test.py</code> \u6587\u4ef6\uff1a</p> <pre><code>import torch\n\n# Model\nmodel = torch.hub.load(\"ultralytics/yolov5\", \"yolov5s\")  # or yolov5n - yolov5x6, custom\n\n# Images\nimg = \"zidane.jpg\"  # or file, Path, PIL, OpenCV, numpy, list\n\n# Inference\nresults = model(img)\n\n# Results\nresults.show()  # or .show(), .save(), .crop(), .pandas(), etc.\n</code></pre> <pre><code>import torch\n\n# Model\nmodel = torch.hub.load(\"ultralytics/yolov5\", \"yolov5s\")  # or yolov5n - yolov5x6, custom\n\n# Images\nimg = \"https://ultralytics.com/images/zidane.jpg\"  # or file, Path, PIL, OpenCV, numpy, list\n\n# Inference\nresults = model(img)\n\n# Results\nresults.print()  # or .show(), .save(), .crop(), .pandas(), etc.\n</code></pre> <p>\u6307\u5357\u4e2d\u7684\u539f\u59cb\u7684\u4ee3\u7801 <code>https://ultralytics.com/images/zidane.jpg</code> \u9700\u8981\u68af\u5b50\u52a0\u8f7d\uff0c\u63d0\u524d\u4e0b\u8f7d\uff0c</p> <p></p> <p></p> <p>\u6216\u81ea\u5b9a\u4e49\u4e00\u4e2a\u56fe\u7247</p> <p>\u5c06 <code>results.print()</code> \u6539\u6210 <code>results.show()</code></p> <p>\u53ef\u5148\u4e0b\u8f7d\u9884\u8bad\u7ec3\u6a21\u578b\uff1a</p> <pre><code>https://github.com/ultralytics/yolov5/releases/download/vx.x/yolov5n.pt\n</code></pre> <pre><code>https://github.com/ultralytics/yolov5/releases/download/vx.x/yolov5s.pt\n</code></pre> <pre><code>https://github.com/ultralytics/yolov5/releases/download/vx.x/yolov5m.pt\n</code></pre> <pre><code>https://github.com/ultralytics/yolov5/releases/download/vx.x/yolov5l.pt\n</code></pre> <pre><code>https://github.com/ultralytics/yolov5/releases/download/vx.x/yolov5x.pt\n</code></pre>"},{"location":"yolo/yolov5/#4","title":"4","text":"<p>coco \u6570\u636e\u96c6\u7684\u56fe\u7247\u53ef\u4ee5\u5728COCO - Ultralytics YOLOv8 Docs\u91cc\u627e\u5230</p> <pre><code># Download data\n  urls = ['http://images.cocodataset.org/zips/train2017.zip',  # 19G, 118k images\n          'http://images.cocodataset.org/zips/val2017.zip',  # 1G, 5k images\n          'http://images.cocodataset.org/zips/test2017.zip']  # 7G, 41k images (optional)\n  download(urls, dir=dir / 'images', threads=3)\n</code></pre>"},{"location":"yolo/yolov7/","title":"YOLOv7","text":"<p> \u7ea6 146 \u4e2a\u5b57  4 \u884c\u4ee3\u7801  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 1 \u5206\u949f</p>"},{"location":"yolo/yolov7/#1","title":"1","text":"<p>(7\u6761\u6d88\u606f) YOLOv7\u4fdd\u59c6\u7ea7\u6559\u7a0b\uff08\u4e2a\u4eba\u8e29\u5751\u65e0\u6570\uff09----\u8bad\u7ec3\u81ea\u5df1\u7684\u6570\u636e\u96c6_yolov7\u4ee3\u7801\u4e0b\u8f7d_AmbitionToFree\u7684\u535a\u5ba2-CSDN\u535a\u5ba2</p>"},{"location":"yolo/yolov7/#2","title":"2","text":"<p>detect.py\u6743\u91cd\u5728github\u5b98\u7f51<code>Testing</code>\u4e0b\u4e0b\u8f7d</p> <p>(8\u6761\u6d88\u606f) YOLOv7\uff08\u76ee\u6807\u68c0\u6d4b\uff09\u5165\u95e8\u6559\u7a0b\u8be6\u89e3---\u68c0\u6d4b\uff0c\u63a8\u7406\uff0c\u8bad\u7ec3_yolov\u76ee\u6807\u68c0\u6d4b_\u87ba\u4e1d\u5de5\u4eba\u7684\u535a\u5ba2-CSDN\u535a\u5ba2</p> <p>\u53ef\u4ee5\u5728<code>detect.py</code>\u4e2d\u4fee\u6539</p> <pre><code>    parser.add_argument('--weights', nargs='+', type=str, default='weights/yolov7.pt', help='model.pt path(s)')\n    # parser.add_argument('--weights', nargs='+', type=str, default='yolov7.pt', help='model.pt path(s)')\n</code></pre> <p>\u6216\u76f4\u63a5\u547d\u4ee4\u884c\u8fd0\u884c\u6307\u4ee4</p> <pre><code>python detect.py --weights weights/yolov7.pt --source inference/images \n</code></pre>"},{"location":"yolo/yolov7/#3","title":"3","text":"<p><code>split.py</code>\u6587\u4ef6\u653e\u5728yolov7\u6839\u76ee\u5f55\u4e0b</p>"},{"location":"yolo/yolov7/#4","title":"4","text":"<p>gpu\u53ea\u6709\u4e00\u4e2a\u5c31\u53ea\u7528<code>0</code></p>"},{"location":"yolo/yolov7/#5","title":"5","text":"<p>[WinError 1455] \u9875\u9762\u6587\u4ef6\u592a\u5c0f\uff0c\u65e0\u6cd5\u5b8c\u6210\u64cd\u4f5c\u3002</p> <p>(8\u6761\u6d88\u606f) \u591a\u79cd\u65b9\u6cd5\u5f7b\u5e95\u89e3\u51b3pycharm\u4e2d: OSError: [WinError 1455] \u9875\u9762\u6587\u4ef6\u592a\u5c0f\uff0c\u65e0\u6cd5\u5b8c\u6210\u64cd\u4f5c \u7684\u95ee\u9898_pycharm\u8fd0\u884c\u51fa\u73b0oserror_\u5b64\u67d2\u300c\u4e00\u8d77\u5b66\u8ba1\u7b97\u673a\u300d\u7684\u535a\u5ba2-CSDN\u535a\u5ba2]</p> <p>[(8\u6761\u6d88\u606f) YOLOV7:OSError: WinError 1455] \u9875\u9762\u6587\u4ef6\u592a\u5c0f\uff0c\u65e0\u6cd5\u5b8c\u6210\u64cd\u4f5c\u7684 \u6700\u7ec8\u89e3\u51b3\u65b9\u6848_oserror: [winerror 1455] \u9875\u9762\u6587\u4ef6\u592a\u5c0f,\u65e0\u6cd5\u5b8c\u6210\u64cd\u4f5c_\u6211\u8ffd\u9010\u843d\u65e5\u4e0d\u4f11\uff0c\u5374\u4e0d\u77e5\u4f60\u5728\u7b49\u6211\u56de\u5934\u7684\u535a\u5ba2-CSDN\u535a\u5ba2</p> <p>\u4ee5\u53ca\uff0c\u8c03\u6574<code>--batch-size</code>\u5927\u5c0f\uff0c</p> <pre><code>python train.py --weights weights/yolov7_training.pt --cfg cfg/training/yolov7-Helmet.yaml --data data/Helmet.yaml --device 0 --batch-size 2\n</code></pre>"},{"location":"yolo/yolov8/","title":"YOLOv8","text":"<p> \u7ea6 849 \u4e2a\u5b57  175 \u884c\u4ee3\u7801  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 5 \u5206\u949f</p> <p>yolov8\u5b98\u65b9github\u4ed3\u5e93</p> <p>ultralytics/README.zh-CN.md at main \u00b7 ultralytics/ultralytics \u00b7 GitHub</p> <p>yolov8\u5b98\u65b9\u4f7f\u7528\u6587\u6863</p> <p>Home - Ultralytics YOLOv8 Docs</p>"},{"location":"yolo/yolov8/#1","title":"1","text":"<p>(Windows)RuntimeError\u89e3\u51b3\u65b9\u6848</p> <p>Windows\u4f7f\u7528PyTorch\u9047\u5230RuntimeError: Unable to find a valid cuDNN algorithm to run convolution\u7684\u89e3\u51b3\u65b9\u6848 - \u77e5\u4e4e (zhihu.com)</p>"},{"location":"yolo/yolov8/#2","title":"2","text":"<pre><code>RuntimeError: Dataset 'data\\Helmet.yaml' error  \nDataset 'data\\Helmet.yaml' images not found , missing paths ['C:\\\\Users\\\\Administrator\\\\datasets\\\\data\\\\datasets\\\\Helmet\\\\val_list.txt']\nNote dataset download directory is 'C:\\Users\\Administrator\\datasets'. You can update this in 'C:\\Users\\Administrator\\AppData\\Roaming\\Ultralytics\\settings.yaml'\n</code></pre> <p>\u4fee\u6539\uff0c</p> <p>\u53ef\u4ee5\u6539\u6210\u76f8\u5bf9\u8def\u5f84</p> <pre><code>datasets_dir: ..\\\n</code></pre>"},{"location":"yolo/yolov8/#3","title":"3","text":"<pre><code>RuntimeError: \n            Attempt to start a new process before the current process\n            has finished its bootstrapping phase.\n            This probably means that you are on Windows and you have\n            forgotten to use the proper idiom in the main module:\n                if __name__ == '__main__':\n                    freeze_support()\n                    ...\n            The \"freeze_support()\" line can be omitted if the program\n            is not going to be frozen to produce a Windows executable.\n</code></pre> <p>\u64cd\u4f5c\uff1a</p> <pre><code>model = YOLO(\"yolov8n.pt\")  # \u52a0\u8f7d\u9884\u8bad\u7ec3\u6a21\u578b\uff08\u5efa\u8bae\u7528\u4e8e\u8bad\u7ec3\uff09\n\nif __name__ == '__main__': # \u6dfb\u52a0__main__\n    # \u4f7f\u7528\u6a21\u578b\n    model.train(data=\"data/Helmet.yaml\", epochs=3, batch=2[, name=\"Name\"])  # \u8bad\u7ec3\u6a21\u578b\n</code></pre> <p>python - YOLOv8 : RuntimeError: An attempt has been made to start a new process before the current process has finished its bootstrapping phase - Stack Overflow</p>"},{"location":"yolo/yolov8/#4","title":"4","text":"<p>MemoryError \u8c03\u6574 <code>batch=</code></p> <p>About Memory Error while Training yolov8x-seg \u00b7 Issue #2916 \u00b7 ultralytics/ultralytics (github.com)</p>"},{"location":"yolo/yolov8/#5","title":"5","text":"<p>\u9875\u9762\u5927\u5c0f\u4e0d\u591f\uff1a</p> <p>python - How to efficiently run multiple Pytorch Processes / Models at once ? Traceback: The paging file is too small for this operation to complete - Stack Overflow</p> <pre><code>OSError: [WinError 1455] The paging file is too small for this operation to complete. Error loading \"...\\cusolver64_xx.dll    ...\\cudnn_adv_infer64_8.dll\" or one of its dependencies.\n</code></pre> <p>\u65b0\u5efa\u6587\u4ef6 <code>fixNvPe.py</code></p> <p>Python Script to disable ASLR and make nv fatbins read-only to reduce memory commit (github.com)</p> fixNvPe.py <pre><code># Simple script to disable ASLR and make .nv_fatb sections read-only\n# Requires: pefile  ( python -m pip install pefile )\n# Usage:  fixNvPe.py --input path/to/*.dll\n\nimport argparse\nimport pefile\nimport glob\nimport os\nimport shutil\n\ndef main(args):\n    failures = []\n    for file in glob.glob( args.input, recursive=args.recursive ):\n        print(f\"\\n---\\nChecking {file}...\")\n        pe = pefile.PE(file, fast_load=True)\n        nvbSect = [ section for section in pe.sections if section.Name.decode().startswith(\".nv_fatb\")]\n        if len(nvbSect) == 1:\n            sect = nvbSect[0]\n            size = sect.Misc_VirtualSize\n            aslr = pe.OPTIONAL_HEADER.IMAGE_DLLCHARACTERISTICS_DYNAMIC_BASE\n            writable = 0 != ( sect.Characteristics &amp; pefile.SECTION_CHARACTERISTICS['IMAGE_SCN_MEM_WRITE'] )\n            print(f\"Found NV FatBin! Size: {size/1024/1024:0.2f}MB  ASLR: {aslr}  Writable: {writable}\")\n            if (writable or aslr) and size &gt; 0:\n                print(\"- Modifying DLL\")\n                if args.backup:\n                    bakFile = f\"{file}_bak\"\n                    print(f\"- Backing up [{file}] -&gt; [{bakFile}]\")\n                    if os.path.exists( bakFile ):\n                        print( f\"- Warning: Backup file already exists ({bakFile}), not modifying file! Delete the 'bak' to allow modification\")\n                        failures.append( file )\n                        continue\n                    try:\n                        shutil.copy2( file, bakFile)\n                    except Exception as e:\n                        print( f\"- Failed to create backup! [{str(e)}], not modifying file!\")\n                        failures.append( file )\n                        continue\n                # Disable ASLR for DLL, and disable writing for section\n                pe.OPTIONAL_HEADER.DllCharacteristics &amp;= ~pefile.DLL_CHARACTERISTICS['IMAGE_DLLCHARACTERISTICS_DYNAMIC_BASE']\n                sect.Characteristics = sect.Characteristics &amp; ~pefile.SECTION_CHARACTERISTICS['IMAGE_SCN_MEM_WRITE']\n                try:\n                    newFile = f\"{file}_mod\"\n                    print( f\"- Writing modified DLL to [{newFile}]\")\n                    pe.write( newFile )\n                    pe.close()\n                    print( f\"- Moving modified DLL to [{file}]\")\n                    os.remove( file )\n                    shutil.move( newFile, file )\n                except Exception as e:\n                    print( f\"- Failed to write modified DLL! [{str(e)}]\")\n                    failures.append( file )\n                    continue\n\n    print(\"\\n\\nDone!\")\n    if len(failures) &gt; 0:\n        print(\"***WARNING**** These files needed modification but failed: \")\n        for failure in failures:\n            print( f\" - {failure}\")\n\n\n\n\n\n\n\ndef parseArgs():\n    parser = argparse.ArgumentParser( description=\"Disable ASLR and make .nv_fatb sections read-only\", formatter_class=argparse.ArgumentDefaultsHelpFormatter )\n    parser.add_argument('--input', help=\"Glob to parse\", default=\"*.dll\")\n    parser.add_argument('--backup', help=\"Backup modified files\", default=True, required=False)\n    parser.add_argument('--recursive', '-r', default=False, action='store_true', help=\"Recurse into subdirectories\")\n\n    return parser.parse_args()\n\n\n###############################\n# program entry point\n#\nif __name__ == \"__main__\":\n    args = parseArgs()\n    main( args )\n</code></pre> <p>\u65e0\u4f9d\u8d56\u5b89\u88c5\u4f9d\u8d56</p> <pre><code>python -m pip install pefile\n</code></pre> <p>\u8fd0\u884c\u547d\u4ee4\u884c</p> <pre><code>python fixNvPe.py --input=E:\\Programs\\Anaconda3\\envs\\yolov7\\lib\\site-packages\\torch\\lib\\*.dll\n</code></pre>"},{"location":"yolo/yolov8/#6","title":"6","text":"<p>\u7528\u547d\u4ee4\u884c\u68c0\u6d4b</p> <pre><code>yolo predict model=yolov8n.pt source='bus.jpg'\n</code></pre> <p>\u4ee3\u7801\u5728\uff1a</p> <p>Python - Ultralytics YOLOv8 Docs</p> <ul> <li>\u8c03\u7528\u76f8\u673a <code>source=\"0\"</code></li> <li>\u68c0\u6d4b\u6574\u4e2a\u6587\u4ef6\u5939\u7684\u56fe\u7247/\u89c6\u9891\uff0c<code>source=\".../folder\"</code></li> <li>\u68c0\u6d4b\u5355\u4e2a\u56fe\u7247/\u89c6\u9891\uff08\u53ef\u4ee5\u76f4\u63a5\u5199\u8def\u5f84\uff0c\u6216\u8005\u7528\u7c7b\u52a0\u8f7d\uff0c\u4e09\u79cd\u65b9\u6cd5\uff09</li> </ul> <ul> <li><code>show=</code>\u5c55\u793a\u56fe\u7247</li> <li><code>save=</code>\u4fdd\u5b58\u56fe\u7247(\u5230runs/detect/[predictxx]\u6587\u4ef6\u5939\u4e2d)</li> <li><code>name=</code>\u4fdd\u5b58\u7684\u6587\u4ef6\u5939\u7684\u540d\u79f0</li> </ul> <pre><code>from ultralytics import YOLO\nfrom PIL import Image\nimport cv2\n\nmodel = YOLO(\"model.pt\")\n# accepts all formats - image/dir/Path/URL/video/PIL/ndarray. 0 for webcam\nresults = model.predict(source=\"0\")\nresults = model.predict(source=\"folder\", show=True) # Display preds. Accepts all YOLO predict arguments\n\n# from PIL\nim1 = Image.open(\"bus.jpg\")\nresults = model.predict(source=im1, save=True)  # save plotted images\n\n# from ndarray\nim2 = cv2.imread(\"bus.jpg\")\nresults = model.predict(source=im2, save=True, save_txt=True)  # save predictions as labels\n\n# from list of PIL/ndarray\nresults = model.predict(source=[im1, im2])\n</code></pre> <p>\u652f\u6301\u7684\u6587\u4ef6\u7c7b\u578b</p> <p>Predict - Ultralytics YOLOv8 Docs</p> <p>\u53c2\u6570\u7684\u4f5c\u7528</p> <p>Predict - Ultralytics YOLOv8 Docs</p>"},{"location":"yolo/yolov8/#7","title":"7","text":"<p><code>.yaml</code>\u6587\u4ef6\u91cc\u9762\u7684\u6807\u7b7e\u8981\u4e0e<code>labels.txt</code>\u91cc\u9762\u7684\u987a\u5e8f\u4e00\u81f4</p>"},{"location":"yolo/yolov8/#8","title":"8","text":"<p>v8 <code>.yaml</code> \u6587\u4ef6\u793a\u4f8b\uff1a</p> <pre><code># Train/val/test sets as 1) dir: path/to/imgs, 2) file: path/to/imgs.txt, or 3) list: [path/to/imgs1, path/to/imgs2, ..]\npath: ../datasets/coco8  # dataset root dir\ntrain: images/train  # train images (relative to 'path') 4 images\nval: images/val  # val images (relative to 'path') 4 images\ntest:  # test images (optional)\n\n# Classes (80 COCO classes)\nnames:\n  0: person\n  1: bicycle\n  2: car\n  ...\n  77: teddy bear\n  78: hair drier\n  79: toothbrush\n</code></pre> <p>Object Detection Datasets Overview - Ultralytics YOLOv8 Docs</p> <p>\u5176\u4e2d <code>train:</code> <code>val:</code> \u4e4b\u540e\u7684\u5185\u5bb9\u6709\u4e09\u79cd\u5199\u6cd5\uff0c</p> <ol> <li>\u6587\u4ef6\u5939\u8def\u5f84</li> <li>txt\u6587\u4ef6\u8def\u5f84\uff0ctxt\u6587\u4ef6\u5185\u4e3a\u5404\u4e2a\u56fe\u7247\u7684\u8def\u5f84</li> <li>\u5217\u8868\u5f62\u5f0f\u7684\u56fe\u7247\u8def\u5f84</li> </ol>"},{"location":"yolo/yolov8/#9","title":"9","text":"<p>\u5982\u679cdetect\u65f6\u4f7f\u7528\u67d0\u4e2apt\u6a21\u578b\u62a5\u9519\uff0c\u6709\u53ef\u80fd\u662f\u56e0\u4e3a \u8bad\u7ec3\u8be5\u6a21\u578b\u65f6\u4f7f\u7528\u7684ultralytics\u7248\u672c \u6bd4 \u672c\u673a\u5b89\u88c5\u7684\u7248\u672c \u65b0\uff0c\u4f7f\u7528\u4e86\u65e7\u7248\u672c <code>requirements.txt</code> \u4e2d\u672a\u5b89\u88c5\u7684\u5305\uff0c\u56e0\u6b64\u66f4\u65b0ultralytics\u5305\u5373\u53ef</p>"},{"location":"yolo/yolov8/#10","title":"10","text":"<p>train\u65f6\u8981\u4fee\u6539batch\uff0c\u4fee\u6539 <code>batch</code> \u53c2\u6570\uff1a <code>batch=x</code></p> <p>\u9ed8\u8ba4\u4e3a16\uff0c-1\u4e3a\u81ea\u52a8\u8c03\u6574</p> <p>Configuration - Ultralytics YOLOv8 Docs</p>"},{"location":"yolo/yolov8/#11","title":"11","text":"<pre><code>...\n  File \"E:\\Anaconda3\\envs\\Pytorch\\Lib\\site-packages\\ultralytics\\engine\\trainer.py\", line 537, in save_metrics\n    with open(self.csv, 'a') as f:\n         ^^^^^^^^^^^^^^^^^^^\nPermissionError: [Errno 13] Permission denied: 'run\\\\detect\\\\data1st2\\\\results.csv'\n\n\u8fdb\u7a0b\u5df2\u7ed3\u675f\uff0c\u9000\u51fa\u4ee3\u7801\u4e3a 1\n</code></pre> <p>\u4e0d\u77e5\u4ec0\u4e48\u539f\u56e0\uff0c\u62a5\u9519\u539f\u56e0\u5e94\u8be5\u662f <code>result.csv</code> \u6587\u4ef6\u88ab\u6253\u5f00\u88ab\u5360\u7528\uff0c\u4f46\u6211\u5e76\u6ca1\u6709\u6253\u5f00\u8fd9\u4e2a\u6587\u4ef6\u3002</p> <p>\u91cd\u65b0\u518d\u8fd0\u884c\u7a0b\u5e8f\u5373\u53ef</p> <p>Training fails when results.csv file is open \u00b7 Issue #862 \u00b7 ultralytics/ultralytics (github.com)</p>"},{"location":"yolo/yolov8/#12","title":"12","text":"<pre><code>...\n  File \"E:\\Anaconda3\\envs\\Pytorch\\Lib\\site-packages\\ultralytics\\utils\\tal.py\", line 152, in get_box_metrics\n    bbox_scores[mask_gt] = pd_scores[ind[0], :, ind[1]][mask_gt]  # b, max_num_obj, h*w\n                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^\nRuntimeError: CUDA error: device-side assert triggered\nCUDA kernel errors might be asynchronously reported ar some other API call, so the stacktrace below might be incorrect.\nFor debugging consider passing CUDA_LAUNCH_BLOCKING=1.\nCompile with `TORCH_USE_CUDA_DSA` to enable device-side assertions.\n\n\n\u8fdb\u7a0b\u5df2\u7ed3\u675f\uff0c\u9000\u51fa\u4ee3\u7801\u4e3a 1\n</code></pre> <p>...</p> <p>\u5927\u591a\u6570\u60c5\u51b5\u4e0b\uff0cCUDA\u8fd0\u884c\u65f6\u9519\u8bef\u53ef\u80fd\u662f\u67d0\u4e9b\u7d22\u5f15\u4e0d\u5339\u914d\u7684\u539f\u56e0\uff0c\u4f8b\u5982\u60a8\u5c1d\u8bd5\u5728\u5177\u6709 10 \u4e2a\u6807\u7b7e\u7684\u6570\u636e\u96c6\u4e0a\u8bad\u7ec3\u5177\u670915\u4e2a\u8f93\u51fa\u8282\u70b9\u7684\u7f51\u7edc\u3002\u8fd9\u4e2a CUDA \u9519\u8bef\u7684\u4e8b\u60c5\u662f\uff0c\u4e00\u65e6\u4f60\u6536\u5230\u8fd9\u4e2a\u9519\u8bef\u4e00\u6b21\uff0c\u4f60\u5c31\u4f1a\u5728\u4f7f\u7528 torch.tensors \u6267\u884c\u7684\u6bcf\u4e2a\u64cd\u4f5c\u4e2d\u6536\u5230\u5b83\u3002\u8fd9\u4f1a\u5f3a\u5236\u60a8\u91cd\u65b0\u542f\u52a8\u7b14\u8bb0\u672c\u3002</p> <p>...</p> <p>\u800c\u540e\u7ecf\u8fc7\u68c0\u67e5\u53d1\u73b0\uff0c\u662f\u7531\u4e8e <code>labels.txt</code> \u6587\u4ef6\u4e2d\u53ea\u670911\u4e2a\u6807\u7b7e\uff0c\u800c\u6807\u7b7e\u6587\u4ef6\u4e2d\u6709 <code>11</code> (\u7b2c12\u4e2a\u6807\u7b7e)</p> <p>python - Pytorch fails with CUDA error: device-side assert triggered on Colab - Stack Overflow</p>"},{"location":"yolo/yolov8/#13","title":"13","text":"<p>\u6062\u590d/\u7ee7\u7eed\u4e4b\u524d\u7684\u8bad\u7ec3</p> <p>Train - Ultralytics YOLOv8 Docs</p> <p>(\u53ef\u4ee5\u65b0\u5efa\u4e00\u4e2a <code>resume_train.py</code> \u6587\u4ef6)</p> <pre><code>from ultralytics import YOLO\n\n# Load a model\nmodel = YOLO('path/to/last.pt')  # load a partially trained model\n\n# Resume training\nresults = model.train(resume=True)\n</code></pre> <pre><code>from ultralytics import YOLO\n\nif __name__ == '__main__':\n    # Load a model\n    model = YOLO('runs/detect/data1st9/weights/last.pt')  # load a partially trained model\n\n    # Resume training\n    results = model.train(resume=True)\n</code></pre>"},{"location":"yolo/yolov8/#14","title":"14","text":"<pre><code>NotImplementedError: Could not run 'torchvision::nms' with arguments from the 'CPU' backend. This could be because the operator doesn't exist for this backend, or was omitted during the selective/custom build process (if using custom build). If you are a Facebook employee using PyTorch on mobile, please visit https://fburl.com/ptmfixes for possible resolutions. 'torchvision::nms' is only available for these backends: [CUDA, Meta, QuantizedCUDA, BackendSelect, Python, FuncTorchDynamicLayerBackMode, Functionalize, Named, Conjugate, Negative, ZeroTensor, ADInplaceOrView, AutogradOther, AutogradCPU, AutogradCUDA, AutogradXLA, AutogradMPS, AutogradXPU, AutogradHPU, AutogradLazy, AutogradMeta, Tracer, AutocastCPU, AutocastXPU, AutocastCUDA, AutocastPrivateUse1, FuncTorchBatched, BatchedNestedTensor, FuncTorchVmapMode, Batched, VmapMode, FuncTorchGradWrapper, PythonTLSSnapshot, FuncTorchDynamicLayerFrontMode, PreDispatch, PythonDispatcher].\n</code></pre> <p>python - Getting \"NotImplementedError: Could not run 'torchvision::nms' with arguments from CUDA backend\" despite having all necessary libraries and imports - Stack Overflow</p> <p>\u6839\u636e\u6700\u9ad8\u8d5e\u56de\u7b54\uff0c\u5378\u8f7d\u91cd\u88c5torch torchvision torchaudio\uff0c\u518d\u6b21\u8fd0\u884c\u65e0\u62a5\u9519</p>"},{"location":"yolo/yolov8/#15","title":"15","text":"<pre><code>results = model(source=...)\n</code></pre> <p>\u9884\u6d4b\u540e\u8fd4\u56de\u7684\u7ed3\u679c\uff0c\u662f\u4e00\u4e2a\u5217\u8868\uff0c\u91cc\u9762\u7684\u5143\u7d20\u7684\u7c7b\u578b\u662f <code>ultralytics.engine.results.Results</code> (\u5217\u8868\u5e94\u8be5\u662f\u5bf9\u5e94\u591a\u5f20/\u5e27\u56fe\u50cf\u7684\u8bc6\u522b\u7ed3\u679c)\uff0c</p> <p>\u6bcf\u4e2a <code>Results</code> \u7c7b\u4e2d\uff0c</p> <ul> <li> <p><code>names</code> \u5c5e\u6027\u662f\u4ee5\u7c7b\u522b\u5e8f\u53f7\u548c\u7c7b\u522b\u540d\u5b57\u4e3a\u952e\u503c\u5bf9\u7684\u5b57\u5178\uff0c\u5982</p> <pre><code>{0: 'sunglass', 1: 'hat', 2: 'jacket', 3: 'shirt', 4: 'pants', 5: 'shorts', 6: 'skirt', 7: 'dress', 8: 'bag', 9: 'shoe'}\n</code></pre> </li> <li> <p><code>boxes</code> \u5c5e\u6027\u4e3a <code>ultralytics.engine.results.Boxes</code> \u7c7b\uff0c\u8bb0\u5f55\u7740\u8bc6\u522b\u7684\u7ed3\u679c\uff0c</p> <p><code>Boxes</code> \u7c7b\u4e2d\u7684 <code>cls</code> \u5c5e\u6027\uff0c\u8bb0\u5f55\u7740\u4ece\u56fe\u50cf\u4e0a\u8bc6\u522b\u51fa\u7684\u6bcf\u4e2a\u7269\u54c1\u5bf9\u5e94\u7684\u7c7b\u522b\uff0c\u7c7b\u578b\u662f <code>torch.Tensor</code> \uff0c\u53ef\u4ee5\u901a\u8fc7 <code>.tolist()</code> \u65b9\u6cd5\u628a\u5b83\u8f6c\u6362\u6210\u5217\u8868\uff0c\u5982</p> <pre><code>[4.0, 4.0, 9.0, 2.0, 3.0, 9.0, 9.0, 9.0, 4.0, 9.0, 8.0, 9.0]\n</code></pre> </li> </ul>"},{"location":"%E7%B3%BB%E7%BB%9F%26%E7%8E%AF%E5%A2%83/anaconda/","title":"Anaconda","text":"<p> \u7ea6 337 \u4e2a\u5b57  47 \u884c\u4ee3\u7801  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 2 \u5206\u949f</p>"},{"location":"%E7%B3%BB%E7%BB%9F%26%E7%8E%AF%E5%A2%83/anaconda/#1","title":"1","text":"<p>Anaconda \u6362\u6e90</p> <p>\u6362\u6e90\u5317\u5916</p> <ul> <li> <p>Windows \u5728\u7528\u6237\u4e3b\u76ee\u5f55\u6267\u884c <code>conda config --set show_channel_urls yes</code> \u751f\u6210 <code>.condarc</code> \u6587\u4ef6</p> </li> <li> <p>linux \u4e3b\u76ee\u5f55\u4e0b\u5df2\u6709 <code>.condarc</code> \u6587\u4ef6</p> </li> </ul> <p>\u4fee\u6539 <code>.condarc</code> \u6587\u4ef6\uff1a</p> <pre><code>channels:\n  - defaults\nshow_channel_urls: true\ndefault_channels:\n  - https://mirrors.bfsu.edu.cn/anaconda/pkgs/main\n  - https://mirrors.bfsu.edu.cn/anaconda/pkgs/r\n  - https://mirrors.bfsu.edu.cn/anaconda/pkgs/msys2\ncustom_channels:\n  conda-forge: https://mirrors.bfsu.edu.cn/anaconda/cloud\n  msys2: https://mirrors.bfsu.edu.cn/anaconda/cloud\n  bioconda: https://mirrors.bfsu.edu.cn/anaconda/cloud\n  menpo: https://mirrors.bfsu.edu.cn/anaconda/cloud\n  pytorch: https://mirrors.bfsu.edu.cn/anaconda/cloud\n  pytorch-lts: https://mirrors.bfsu.edu.cn/anaconda/cloud\n  simpleitk: https://mirrors.bfsu.edu.cn/anaconda/cloud\n  deepmodeling: https://mirrors.bfsu.edu.cn/anaconda/cloud/\n</code></pre> <p>anaconda | \u955c\u50cf\u7ad9\u4f7f\u7528\u5e2e\u52a9 | \u5317\u4eac\u5916\u56fd\u8bed\u5927\u5b66\u5f00\u6e90\u8f6f\u4ef6\u955c\u50cf\u7ad9 | BFSU Open Source Mirror</p>"},{"location":"%E7%B3%BB%E7%BB%9F%26%E7%8E%AF%E5%A2%83/anaconda/#2","title":"2","text":"<p>\u67e5\u770b\u5df2\u6709\u73af\u5883</p> <pre><code>conda info -e\n</code></pre> <p>\u6216</p> <pre><code>conda env list\n</code></pre>"},{"location":"%E7%B3%BB%E7%BB%9F%26%E7%8E%AF%E5%A2%83/anaconda/#3","title":"3","text":"<p>Conda\u4f7f\u7528\u6307\u5357 - \u77e5\u4e4e (zhihu.com)</p> <p>\u521b\u5efaconda\u73af\u5883\uff0c<code>python=3.x</code>\u6307\u5b9apython\u7248\u672c</p> <pre><code>conda create [ -n | --name ] xxx python=3.x\n</code></pre> <p>\u4ece\u5df2\u6709\u73af\u5883\u514b\u9686\u4e00\u4e2a\u65b0\u7684\u73af\u5883</p> <pre><code>conda create -n xxx --clone env\n</code></pre> <pre><code>activate env # \u6fc0\u6d3benv\u73af\u5883\n\nconda deactivate # \u9000\u51faenv\u73af\u5883\n</code></pre> <p>\u5220\u9664\u5df2\u6709\u73af\u5883</p> <pre><code>conda remove -n env --all\n</code></pre>"},{"location":"%E7%B3%BB%E7%BB%9F%26%E7%8E%AF%E5%A2%83/anaconda/#4","title":"4","text":"<p>pycharm \u627e\u4e0d\u5230 conda \u53ef\u6267\u884c\u6587\u4ef6\uff1a</p> <ol> <li>Conda \u53ef\u6267\u884c\u6587\u4ef6\uff1a<code>...\\Anaconda3\\Scripts\\conda.exe</code></li> <li>\u52a0\u8f7d\u73af\u5883</li> </ol>"},{"location":"%E7%B3%BB%E7%BB%9F%26%E7%8E%AF%E5%A2%83/anaconda/#5","title":"5","text":"<p>\u5728 git bash \u4e2d\u4f7f\u7528 conda \u73af\u5883</p> <p>\u76f4\u63a5\u6267\u884c <code>conda activate</code> \u7684\u547d\u4ee4\u4f1a\u663e\u793a</p> <pre><code>$ conda activate\n\nCommandNotFoundError: Your shell has not been properly configured to use 'conda activate'.\nIf using 'conda activate' from a batch script, change your\ninvocation to 'CALL conda.bat activate'.\n\nTo initialize your shell, run\n\n    $ conda init &lt;SHELL_NAME&gt;\n\nCurrently supported shells are:\n  - bash\n  - cmd.exe\n  - fish\n  - tcsh\n  - xonsh\n  - zsh\n  - powershell\n\nSee 'conda init --help' for more information and options.\n\nIMPORTANT: You may need to close and restart your shell after running 'conda init'.\n</code></pre> <p>\u89e3\u51b3\u7684\u529e\u6cd5\u662f</p> <p>Conda environment fails to activate with Git Bash \u00b7 Issue #19534 \u00b7 microsoft/vscode-python (github.com)</p> <p><code>source</code> anaconda3 \u5b89\u88c5\u8def\u5f84\u4e0b\u7684 <code>/Scripts/activate</code></p> <pre><code>source /e/Programs/Anaconda3/Scripts/activate\n</code></pre> <p>\u7136\u540e\u5c31\u4f1a\u542f\u52a8 anaconda \u7684 base \u73af\u5883\uff0c\u8fd9\u65f6 <code>conda activate xxx</code> \u5c31\u6709\u7528\u4e86</p>"},{"location":"%E7%B3%BB%E7%BB%9F%26%E7%8E%AF%E5%A2%83/anaconda/#6","title":"6","text":"<p>\u5982\u679c anaconda \u6216 miniconda \u5b89\u88c5\u597d\u4e4b\u540e\uff0c(windows)\u5728\u7ec8\u7aef\u4e0a\u8fd0\u884c <code>conda</code> \u547d\u4ee4\u65f6\uff0c\u663e\u793a\u627e\u4e0d\u5230\u547d\u4ee4\u6216\u8005 <code>conda</code> \u4e0d\u662f\u547d\u4ee4\u4e4b\u7c7b\u7684\u9519\u8bef\u4fe1\u606f\uff0c</p> <p>\u53c2\u8003\u8fd9\u7bc7\u6587\u7ae0</p> <p>\u89e3\u51b3Windows\u5b89\u88c5Anaconda\u6216Miniconda\u547d\u4ee4\u884c\u7a97\u53e3\u63d0\u793a\u201c'conda' \u4e0d\u662f\u5185\u90e8\u6216\u5916\u90e8\u547d\u4ee4\uff0c\u4e5f\u4e0d\u662f\u53ef\u8fd0\u884c\u7684\u7a0b\u5e8f \u6216\u6279\u5904\u7406\u6587\u4ef6\u3002\u201d - \u77e5\u4e4e (zhihu.com)</p> <p>\u5c06 anaconda \u6216 miniconda \u5b89\u88c5\u76ee\u5f55\u4e0b\u7684 <code>Scripts</code> \u6587\u4ef6\u5939\u6dfb\u52a0\u5230\u73af\u5883\u53d8\u91cf\u4e2d\uff0c\u5e76\u91cd\u542f\u5373\u53ef(\u6216\u8005\u6ce8\u9500\u518d\u767b\u9646)</p>"},{"location":"%E7%B3%BB%E7%BB%9F%26%E7%8E%AF%E5%A2%83/cuda%20cudnn%E5%AE%89%E8%A3%85/","title":"CUDA cuDNN \u5b89\u88c5","text":"<p> \u7ea6 516 \u4e2a\u5b57  29 \u884c\u4ee3\u7801  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 2 \u5206\u949f</p>"},{"location":"%E7%B3%BB%E7%BB%9F%26%E7%8E%AF%E5%A2%83/cuda%20cudnn%E5%AE%89%E8%A3%85/#1","title":"1","text":"<p>(7\u6761\u6d88\u606f) YOLOv7\u4fdd\u59c6\u7ea7\u6559\u7a0b\uff01\uff08\u4e2a\u4eba\u8e29\u5751\u65e0\u6570\uff09----\u73af\u5883\u914d\u7f6e_yolov7\u73af\u5883\u642d\u5efa_AmbitionToFree\u7684\u535a\u5ba2-CSDN\u535a\u5ba2</p> <p>\u7b2c\u4e00\u6b21\u5b89\u88c5\u65f6\uff0c\u672a\u77e5\u539f\u56e0\u9ed1\u5c4f\uff0c\u5f3a\u5236\u5173\u673a\u91cd\u542f\u4e4b\u540e\uff0c\u518d\u6b21\u5b89\u88c5\u6210\u529f</p> <p>(7\u6761\u6d88\u606f) CUDA\u5b89\u88c5\u548c\u68c0\u6d4b\u3010\u5168\u3011\uff08nvcc\u547d\u4ee4\u627e\u4e0d\u5230\u7684\u89e3\u51b3\u529e\u6cd5\uff09_windows nvcc -v \u63d0\u793a\u672a\u627e\u5230\u547d\u4ee4_\u53ef\u9760\u7684\u8c46\u5305\u87f9\u540c\u5fd7\u7684\u535a\u5ba2-CSDN\u535a\u5ba2</p> <p>\u5b89\u88c5\u540e\u91cd\u65b0\u5f00\u542f\u65b0\u7684cmd\uff0c\u624d\u6709nvcc\u547d\u4ee4</p>"},{"location":"%E7%B3%BB%E7%BB%9F%26%E7%8E%AF%E5%A2%83/cuda%20cudnn%E5%AE%89%E8%A3%85/#2","title":"2","text":"<p>ubuntu \u5b89\u88c5 cuda</p> <p>(8\u6761\u6d88\u606f) \u3010CUDA\u3011Ubuntu\u7cfb\u7edf\u5982\u4f55\u5b89\u88c5CUDA\u4fdd\u59c6\u7ea7\u6559\u7a0b(2022\u5e74\u6700\u65b0)_ubuntu cuda\u5b89\u88c5\u6559\u7a0b_\u81ea\u7267\u541b\u7684\u535a\u5ba2-CSDN\u535a\u5ba2</p> <p>(8\u6761\u6d88\u606f) Ubuntu\u5b89\u88c5cuda\u4e0ecudnn\uff0c\u4eb2\u6d4b\u53ef\u7528_ubuntu\u5b89\u88c5cuda\u548ccudnn_JulyLi2019\u7684\u535a\u5ba2-CSDN\u535a\u5ba2</p>"},{"location":"%E7%B3%BB%E7%BB%9F%26%E7%8E%AF%E5%A2%83/cuda%20cudnn%E5%AE%89%E8%A3%85/#3","title":"3","text":"<p>Existing package manager installation of the driver found. It is strongly recommended that you remove this before continuing.</p> <p></p> <p>Upon starting, we may be greeted with a warning stating that an existing package manager installation of the graphics driver was found. Unless you have a version of the graphics driver lower than required from this page, you can choose to continue.</p> <p>Get CUDA the right way.. (One that won\u2019t break anything when you\u2026 | by Thameem Abbas | Medium</p>"},{"location":"%E7%B3%BB%E7%BB%9F%26%E7%8E%AF%E5%A2%83/cuda%20cudnn%E5%AE%89%E8%A3%85/#4","title":"4","text":"<p>\u89e3\u51b3\u5b89\u88c5cuda\u540e\uff0cnvcc\u627e\u4e0d\u5230\u547d\u4ee4</p> <p>(8\u6761\u6d88\u606f) \u89e3\u51b3nvcc\u627e\u4e0d\u5230\u7684\u95ee\u9898\uff08Ubuntu16.04 CUDA 8.0\uff09_rtygbwwwerr\u7684\u535a\u5ba2-CSDN\u535a\u5ba2</p> <p>\u4fee\u6539<code>~/.bashrc</code>\u6587\u4ef6\u540e\uff0c\u66f4\u65b0\u7cfb\u7edf\u73af\u5883\uff1a</p> <pre><code>source ~/.bashrc\nsudo ldconfig\n</code></pre>"},{"location":"%E7%B3%BB%E7%BB%9F%26%E7%8E%AF%E5%A2%83/cuda%20cudnn%E5%AE%89%E8%A3%85/#5","title":"5","text":"<p>\u5b89\u88c5 cudnn</p> <p>(8\u6761\u6d88\u606f) \u57fa\u4e8eubuntu\u5b89\u88c5cuda,cuDNN_ubuntu\u5b89\u88c5cuda\u548ccudnn_xyzxyz576\u7684\u535a\u5ba2-CSDN\u535a\u5ba2</p> <p>Installation Guide - NVIDIA Docs</p>"},{"location":"%E7%B3%BB%E7%BB%9F%26%E7%8E%AF%E5%A2%83/cuda%20cudnn%E5%AE%89%E8%A3%85/#6","title":"6","text":"<pre><code>dpkg-deb: \u9519\u8bef: 'cudnn-local-repo-ubuntu1804-8.9.2.26_1.0-1_amd64.deb' is not a Debian format archive\n</code></pre> <p>(8\u6761\u6d88\u606f) \u9519\u8bef: \u2018containerd.io_1.4.9-1_amd64.deb\u2018 is not a Debian format archive_sun007700\u7684\u535a\u5ba2-CSDN\u535a\u5ba2</p> <p>\u5b89\u88c5\u5305\u6ca1\u4e0b\u8f7d\u597d</p>"},{"location":"%E7%B3%BB%E7%BB%9F%26%E7%8E%AF%E5%A2%83/cuda%20cudnn%E5%AE%89%E8%A3%85/#7","title":"7","text":"<pre><code>E: \u672a\u627e\u5230\u201clibcudnn8\u201d\u7684\u201c8.9.2.26-1+cuda11.3\u201d\u7248\u672c\n</code></pre> <p>E: Version '8.3.1.22-1+cuda10.2' for 'libcudnn8' was not found - Deep Learning (Training &amp; Inference) / cuDNN - NVIDIA Developer Forums</p> <pre><code>chrysophyt\n22 \u5e74 4 \u6708\n\n*I already did\n$ sudo apt-get update\n, it just wont work.\n\nIn the end I went to the cudnn archive and download older version\nhttps://developer.nvidia.com/rdp/cudnn-archive 280\n</code></pre> <pre><code>dishant.daredevil\n22 \u5e74 4 \u6708\n\nThis might do the job.\nAfter step -\nsudo apt-key add /var/cudnn-local-repo-*/7fa2af80.pub\nYou will have the directory /var/cudnn-local-repo-ubuntu2004-8.4.0.27 (with your ubuntu version and cudnn downloaded)\nInside this directory, you will be having three .deb files.\njust do for all the deb files-\nsudo gdebi xxx.deb\nwhich will install cudnn. ;)\n</code></pre> <p>\u91c7\u53d6\u65e7\u7248\u672c\u5b89\u88c5</p> <p>\u65e7\u7248\u672c\u662fruntime\uff0cdev\uff0csample\uff0c\u4e09\u4e2a\u5206\u5f00</p> <p>\u5982\u8fd9\u4e2a\uff1a(8\u6761\u6d88\u606f) Ubuntu\u5b89\u88c5cuda\u4e0ecudnn\uff0c\u4eb2\u6d4b\u53ef\u7528_ubuntu\u5b89\u88c5cuda\u548ccudnn_JulyLi2019\u7684\u535a\u5ba2-CSDN\u535a\u5ba2</p>"},{"location":"%E7%B3%BB%E7%BB%9F%26%E7%8E%AF%E5%A2%83/cuda%20cudnn%E5%AE%89%E8%A3%85/#8","title":"8","text":"<p>To verify that cuDNN is installed and is running properly, compile the <code>mnistCUDNN</code> sample located in the <code>/usr/src/cudnn_samples_v8</code> directory in the Debian file.</p> <ul> <li>1  Copy the cuDNN samples to a writable path.</li> </ul> <pre><code>cp -r /usr/src/cudnn_samples_v8/ $HOME\n</code></pre> <ul> <li>2  Go to the writable path.</li> </ul> <pre><code>cd  $HOME/cudnn_samples_v8/mnistCUDNN\n</code></pre> <ul> <li>3  Compile the <code>mnistCUDNN</code>sample.</li> </ul> <pre><code>make clean &amp;&amp; make\n</code></pre> <ul> <li>4  Run the <code>mnistCUDNN</code> sample.</li> </ul> <pre><code>./mnistCUDNN  \n</code></pre> <p>If cuDNN is properly installed and running on your Linux system, you will see a message similar to the following:</p> <pre><code>Test passed!\n</code></pre>"},{"location":"%E7%B3%BB%E7%BB%9F%26%E7%8E%AF%E5%A2%83/jupyter%20notebook/","title":"Jupyter Notebook","text":"<p> \u7ea6 33 \u4e2a\u5b57 </p>"},{"location":"%E7%B3%BB%E7%BB%9F%26%E7%8E%AF%E5%A2%83/jupyter%20notebook/#1","title":"1","text":"<p>vscode notebook\u5feb\u6377\u952e</p> <p>VSCode - Jupyter\u5feb\u6377\u952e - \u7ecd\u8363 - \u535a\u5ba2\u56ed (cnblogs.com)</p> <p>\u6587\u7ae0\u4e2d\u672a\u63d0\u5230\u7684</p> <p>Esc \u9000\u51fa\u7f16\u8f91\u6a21\u5f0f</p>"},{"location":"%E7%B3%BB%E7%BB%9F%26%E7%8E%AF%E5%A2%83/nodejs/","title":"Node.js","text":"<p> \u7ea6 18 \u4e2a\u5b57  1 \u884c\u4ee3\u7801 </p>"},{"location":"%E7%B3%BB%E7%BB%9F%26%E7%8E%AF%E5%A2%83/nodejs/#1","title":"1","text":"<p>npm \u6362\u6e90</p> <p>NPM \u5982\u4f55\u6362\u6e90\uff1f - \u77e5\u4e4e (zhihu.com)</p> <p>\u6362\u6210\u6dd8\u5b9d\u6e90</p> <pre><code>npm config set registry https://registry.npmmirror.com/\n</code></pre>"},{"location":"%E7%B3%BB%E7%BB%9F%26%E7%8E%AF%E5%A2%83/pip/","title":"pip","text":"<p> \u7ea6 291 \u4e2a\u5b57  12 \u884c\u4ee3\u7801  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 1 \u5206\u949f</p>"},{"location":"%E7%B3%BB%E7%BB%9F%26%E7%8E%AF%E5%A2%83/pip/#1","title":"1","text":"<p>pip\u6362\u6e90\u5317\u5916</p> <p>pypi | \u955c\u50cf\u7ad9\u4f7f\u7528\u5e2e\u52a9 | \u5317\u4eac\u5916\u56fd\u8bed\u5927\u5b66\u5f00\u6e90\u8f6f\u4ef6\u955c\u50cf\u7ad9 | BFSU Open Source Mirror</p> <p>\u4e34\u65f6\u4f7f\u7528</p> <pre><code>pip install -i https://mirrors.bfsu.edu.cn/pypi/web/simple some-package\n</code></pre> <p>\u6ce8\u610f\uff0c<code>simple</code> \u4e0d\u80fd\u5c11, \u662f <code>https</code> \u800c\u4e0d\u662f <code>http</code></p> <p>\u8bbe\u4e3a\u9ed8\u8ba4</p> <p>\u5347\u7ea7 pip \u5230\u6700\u65b0\u7684\u7248\u672c (&gt;=10.0.0) \u540e\u8fdb\u884c\u914d\u7f6e\uff1a</p> <pre><code>python -m pip install --upgrade pip\npip config set global.index-url https://mirrors.bfsu.edu.cn/pypi/web/simple\n</code></pre>"},{"location":"%E7%B3%BB%E7%BB%9F%26%E7%8E%AF%E5%A2%83/pip/#2","title":"2","text":"<p>pip \u5347\u7ea7\u67d0\u4e2a\u5305</p> <pre><code>pip install [-U | --updrade] xxx\n</code></pre>"},{"location":"%E7%B3%BB%E7%BB%9F%26%E7%8E%AF%E5%A2%83/pip/#3","title":"3","text":"<p>\u5b89\u88c5\u67d0\u4e2a\u7248\u672c\u7684\u5305</p> <pre><code>pip install xxx==x.x.x\n</code></pre>"},{"location":"%E7%B3%BB%E7%BB%9F%26%E7%8E%AF%E5%A2%83/pip/#4","title":"4","text":"<p>pip \u5b89\u88c5\u67d0\u4e2a\u672c\u5730\u7684 \u5305 / <code>.whl</code> \u6587\u4ef6\uff0c\u76f4\u63a5 <code>pip install xxx.whl</code> \u5373\u53ef</p> <pre><code>pip install xxx.whl\n</code></pre>"},{"location":"%E7%B3%BB%E7%BB%9F%26%E7%8E%AF%E5%A2%83/pip/#5","title":"5","text":"<p>Python\u67e5\u770b\u7b2c\u4e09\u65b9\u5e93\u3001\u5305\u7684\u6240\u6709\u53ef\u7528\u7248\u672c\uff0c\u5386\u53f2\u7248\u672c_python 2.7 pip\u67e5\u8be2\u53ef\u7528\u5e93\u7248\u672c-CSDN\u535a\u5ba2</p> <p>\u5982\u679c\u60f3\u67e5\u8be2\u8981\u5b89\u88c5\u7684\u5305\u6240\u6709\u53ef\u4ee5\u5b89\u88c5\u7684\u7248\u672c</p> <p>\u53ef\u4ee5\u8fd9\u6837</p> <pre><code>pip install xxx==\n</code></pre> <p>\u6216\u8005\u7b49\u53f7\u540e\u53ef\u4ee5\u5199\u4efb\u4f55\u4e0d\u662f\u5bf9\u5e94\u7248\u672c\u53f7\u7684\u4e1c\u897f\uff0c\u7136\u540e\u5c31\u4f1a\u8fd4\u56de\u7c7b\u4f3c\u4e8e\u8fd9\u6837\u7684\u4fe1\u606f</p> <pre><code>&gt;pip install numpy==tst\nLooking in indexes: https://mirrors.bfsu.edu.cn/pypi/web/simple/\nERROR: Could not find a version that satisfies the requirement numpy==tst (from versions: 1.3.0, 1.4.1, 1.5.0, 1.5.1, 1.6.0, 1.6.1, 1.6.2, 1.7.0, 1.7.1, 1.7.2, 1.8.0, 1.8.1, 1.8.2, 1.9.0, 1.9.1, 1.9.2, 1.9.3, 1.10.0.post2, 1.10.1, 1.10.2, 1.10.4, 1.11.0, 1.11.1, 1.11.2, 1.11.3, 1.12.0, 1.12.1, 1.13.0, 1.13.1, 1.13.3, 1.14.0, 1.14.1, 1.14.2, 1.14.3, 1.14.4, 1.14.5, 1.14.6, 1.15.0, 1.15.1, 1.15.2, 1.15.3, 1.15.4, 1.16.0, 1.16.1, 1.16.2, 1.16.3, 1.16.4, 1.16.5, 1.16.6, 1.17.0, 1.17.1, 1.17.2, 1.17.3, 1.17.4, 1.17.5, 1.18.0, 1.18.1, 1.18.2, 1.18.3, 1.18.4, 1.18.5, 1.19.0, 1.19.1, 1.19.2, 1.19.3, 1.19.4, 1.19.5, 1.20.0, 1.20.1, 1.20.2, 1.20.3, 1.21.0, 1.21.1, 1.21.2, 1.21.3, 1.21.4, 1.21.5, 1.21.6, 1.22.0, 1.22.1, 1.22.2, 1.22.3, 1.22.4, 1.23.0rc1, 1.23.0rc2, 1.23.0rc3, 1.23.0, 1.23.1, 1.23.2, 1.23.3, 1.23.4, 1.23.5, 1.24.0rc1, 1.24.0rc2, 1.24.0, 1.24.1, 1.24.2, 1.24.3, 1.24.4, 1.25.0rc1, 1.25.0, 1.25.1, 1.25.2, 1.26.0b1, 1.26.0rc1, 1.26.0)\nERROR: No matching distribution found for numpy==tst\n</code></pre>"},{"location":"%E7%B3%BB%E7%BB%9F%26%E7%8E%AF%E5%A2%83/pip/#6","title":"6","text":"<p>\u5148\u8fdb\u89c6\u89c9</p> <p>\u53ef\u4ee5\u901a\u8fc7\u6dfb\u52a0 <code>--no-deps</code> \u9009\u9879\u6765\u5ffd\u7565\u5305\u7684\u4f9d\u8d56\u7684\u5b89\u88c5\u6765\u76f4\u63a5\u5b89\u88c5</p> <pre><code>pip install xxx --nodeps\n</code></pre>"},{"location":"%E7%B3%BB%E7%BB%9F%26%E7%8E%AF%E5%A2%83/pip/#7","title":"7","text":"<p>\u5982\u679c\u5728\u9879\u76ee\u4e2d\u521b\u5efa\u4e86python\u865a\u62df\u73af\u5883 <code>.venv</code> \uff0c\u90a3\u4e48(\u5728\u7ec8\u7aef\u4e2d)\u6fc0\u6d3b\u8fd9\u4e2a\u73af\u5883\u7684\u65b9\u6cd5\u662f\uff0c\u5728\u7ec8\u7aef\u8fd0\u884c <code>.venv/Scripts/activate</code> \u6587\u4ef6</p> <pre><code>.venv/Scripts/activate\n</code></pre> <p>\u53c2\u8003\uff1aPython\u865a\u62df\u73af\u5883\uff08Python venv\uff09\u7684\u521b\u5efa\u3001\u6fc0\u6d3b\u3001\u9000\u51fa\u53ca\u5220\u9664_python .ven-CSDN\u535a\u5ba2</p>"},{"location":"%E7%B3%BB%E7%BB%9F%26%E7%8E%AF%E5%A2%83/powershell/","title":"PowerShell","text":"<p> \u7ea6 18 \u4e2a\u5b57  1 \u884c\u4ee3\u7801 </p>"},{"location":"%E7%B3%BB%E7%BB%9F%26%E7%8E%AF%E5%A2%83/powershell/#1","title":"1","text":"<p>\u5728powershell\u4e2d\u5b89\u88c5/\u5347\u7ea7powershell</p> <pre><code>winget install Microsoft.PowerShell\n</code></pre> <p>Update powershell to the latest revision - Stack Overflow</p>"},{"location":"%E7%B3%BB%E7%BB%9F%26%E7%8E%AF%E5%A2%83/ros/","title":"ROS","text":"<p> \u7ea6 244 \u4e2a\u5b57  27 \u884c\u4ee3\u7801  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 1 \u5206\u949f</p>"},{"location":"%E7%B3%BB%E7%BB%9F%26%E7%8E%AF%E5%A2%83/ros/#1","title":"1","text":"<p>\u7531\u4e8eros\u9700\u8981\u4f7f\u7528\u7684\u662fubuntu\u7cfb\u7edf\u81ea\u5e26\u7684python\uff0c\u800c\u6211\u7684ubuntu\u7cfb\u7edf\u4e4b\u524d\u88c5\u4e86anaconda\uff0c\u6240\u4ee5\u5728 <code>rosrun</code> \u81ea\u5df1\u7f16\u5199\u7684\u5305\u65f6\uff0c\u4f1a\u663e\u793a <code>No module named 'rospkg'</code> \uff1a</p> <pre><code>Traceback (most recent call last):\n  File \"/home/ronald/catkin_ws/src/beginner_tutorials/scripts/talker.py\", line 3, in &lt;module&gt;\n    import rospy\n  File \"/opt/ros/melodic/lib/python2.7/dist-packages/rospy/__init__.py\", line 49, in &lt;module&gt;\n    from .client import spin, myargv, init_node, \\\n  File \"/opt/ros/melodic/lib/python2.7/dist-packages/rospy/client.py\", line 52, in &lt;module&gt;\n    import roslib\n  File \"/opt/ros/melodic/lib/python2.7/dist-packages/roslib/__init__.py\", line 50, in &lt;module&gt;\n    from roslib.launcher import load_manifest  # noqa: F401\n  File \"/opt/ros/melodic/lib/python2.7/dist-packages/roslib/launcher.py\", line 42, in &lt;module&gt;\n    import rospkg\nModuleNotFoundError: No module named 'rospkg'\n</code></pre> <p>\u8be2\u95ee\u8001\u5e08\uff0c\u8001\u5e08\u8bf4\u8fd9\u662f\u7531\u4e8e\u4f7f\u7528\u4e86 anaconda \u7684 python \uff0c\u5e94\u8be5\u8981\u4f7f\u7528\u7cfb\u7edf\u81ea\u5e26\u7684python2(\u8001\u5e08\u8bf4\u8fd9\u662f\u4e00\u4e2a\u7ecf\u5178\u7684anaconda\u548cros\u51b2\u7a81\u7684\u95ee\u9898)\uff0c\u6240\u4ee5\u8001\u5e08\u7684\u505a\u6cd5\u662f</p> <p>\u6253\u5f00 <code>~/.bashrc</code> \u6587\u4ef6\uff0c\u5c06</p> <pre><code># &gt;&gt;&gt; conda initialize &gt;&gt;&gt;\n# !! Contents within this block are managed by 'conda init' !!\n__conda_setup=\"$('/home/ronald/anaconda3/bin/conda' 'shell.bash' 'hook' 2&gt; /dev/null)\"\nif [ $? -eq 0 ]; then\n    eval \"$__conda_setup\"\nelse\n    if [ -f \"/home/ronald/anaconda3/etc/profile.d/conda.sh\" ]; then\n        . \"/home/ronald/anaconda3/etc/profile.d/conda.sh\"\n    else\n        export PATH=\"/home/ronald/anaconda3/bin:$PATH\"\n    fi\nfi\nunset __conda_setup\n# &lt;&lt;&lt; conda initialize &lt;&lt;&lt;\n</code></pre> <p>\u6ce8\u91ca\u6389</p> <p>\u4ece\u800c\u7ec8\u7aef\u4e2d\u4f7f\u7528\u7684python\u5c31\u53d8\u6210\u4e86ubuntu18\u81ea\u5e26\u7684python2.7</p> <p></p> <p>\u4f46\u662f\u6211\u53d1\u73b0\u76f4\u63a5\u6267\u884c <code>conda deactivate</code> \u7684\u547d\u4ee4\u4e5f\u53ef\u4ee5\u9000\u51fa anaconda \u7684 base \u73af\u5883</p> <p></p> <p>\u4f46\u662f\u53d1\u73b0\u8fd8\u662f\u663e\u793a <code>No module named 'rospkg'</code> \uff0c</p> <p>\u7136\u540e\u6211\u7a81\u7136\u60f3\u5230\u53ef\u80fd\u662f\u7531\u4e8e\u81ea\u5df1\u5199\u7684python\u6587\u4ef6\u4e2d\u7b2c\u4e00\u884c</p> <pre><code>#! /usr/bin/env python3\n</code></pre> <p>\u4e2d\u7684 <code>python3</code> \u7684\u95ee\u9898\uff0c\u6240\u4ee5\u6211\u5c1d\u8bd5\u5c06\u5176\u6539\u6210 <code>python2</code> \u6700\u540e\u53d1\u73b0\u80fd\u591f\u6210\u529f <code>rosrun</code> \u4e86</p> <p>\u5728\u4e4b\u540e\u4e00\u6b21\u6d4b\u8bd5\u4e2d\uff0c\u8fd8\u53d1\u73b0\u4e86\uff0c\u5c06 <code>python3</code> \u6539\u6210 <code>python2</code> \u4e4b\u540e\uff0c\u5373\u4f7f\u4f7f\u7528anaconda\u7684python3\uff0c\u4e5f\u80fd <code>rosrun</code> </p>"},{"location":"%E7%B3%BB%E7%BB%9F%26%E7%8E%AF%E5%A2%83/ubuntu/","title":"Ubuntu","text":"<p> \u7ea6 975 \u4e2a\u5b57  52 \u884c\u4ee3\u7801  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 4 \u5206\u949f</p>"},{"location":"%E7%B3%BB%E7%BB%9F%26%E7%8E%AF%E5%A2%83/ubuntu/#1","title":"1","text":"<p>\u5728\u5ba2\u6237\u673a\u4e2d\u88c5\u8f7d\u865a\u62dfCD\u9a71\u52a8\u5668\uff0c\u542f\u52a8\u7ec8\u7aef\uff0c\u4f7f\u7528tar\u89e3\u538b\u7f29\u5b89\u88c5\u7a0b\u5e8f\uff0c\u7136\u540e\u6267\u884c <code>vmware-install.pl</code> \u5b89\u88c5 VMware Tools\u3002</p>"},{"location":"%E7%B3%BB%E7%BB%9F%26%E7%8E%AF%E5%A2%83/ubuntu/#2","title":"2","text":"<p>\u5b89\u88c5ubuntu</p> <ul> <li> <p>(8\u6761\u6d88\u606f) \u53cc\u7cfb\u7edf\u4e0bUbuntu18.04(Linux)\u5b89\u88c5\u8d85\u8be6\u7ec6\u56fe\u6587\u6559\u7a0b_\u6ca1\u6709\u7075\u9b42\u7684\u5de5\u5177\u4eba\u7684\u535a\u5ba2-CSDN\u535a\u5ba2</p> <p>\u6839\u636e 3.\u5236\u4f5c\u88c5\u673a\u7cfb\u7edfU\u76d8 \u5236\u4f5c\u542f\u52a8\u76d8</p> </li> <li> <p></p> </li> <li> <p></p> <p>\u6b63\u5e38\u5b89\u88c5</p> </li> <li> <p></p> <p>\u9009\u62e9 <code>\u5176\u4ed6\u9009\u9879</code> \u624d\u80fd\u81ea\u5df1\u5206\u533a</p> </li> <li> <p></p> <p></p> <p></p> <p></p> <p></p> <p></p> <ul> <li> <p>\u5206\u4e09\u4e2a\u533a\u5c31\u591f\u4e86\uff1a</p> EFI\u7cfb\u7edf\u5206\u533a 300MB --- \u4ea4\u6362\u7a7a\u95f4 \u5185\u5b58\u591a\u5927\u5c31\u591a\u5927 --- \u6839\u76ee\u5f55\u5206\u533a (\u6302\u8f7d\u70b9\uff1a<code>/</code>) \u5269\u4f59\u7a7a\u95f4 Ext4\u65e5\u5fd7\u6587\u4ef6\u7cfb\u7edf <p>\uff08\u82e5\u6709\u9009\u9879\uff09\u5747\u9009\u4e3b\u5206\u533a\u3001\u7a7a\u95f4\u8d77\u59cb\u4f4d\u7f6e</p> </li> <li> <p><code>\u5b89\u88c5\u5f15\u5bfc\u5668\u7684\u8bbe\u5907</code> / <code>Device for boot loader installation</code> \u9009\u8ddfEFI\u76f8\u540c\u7684\u786c\u76d8\uff0c</p> <p>\u5373\u5982\u679c\u5206\u533a\u90fd\u5728\u540c\u4e00\u4e2a\u786c\u76d8\u4e0a\u5c31\u9009\u90a3\u4e00\u4e2a</p> </li> </ul> </li> <li> <p>\u540e\u7eed\u6309\u7167\u5f15\u5bfc\u64cd\u4f5c\u5c31\u884c</p> </li> </ul>"},{"location":"%E7%B3%BB%E7%BB%9F%26%E7%8E%AF%E5%A2%83/ubuntu/#3","title":"3","text":"<p>ubuntu | \u955c\u50cf\u7ad9\u4f7f\u7528\u5e2e\u52a9 | \u5317\u4eac\u5916\u56fd\u8bed\u5927\u5b66\u5f00\u6e90\u8f6f\u4ef6\u955c\u50cf\u7ad9 | BFSU Open Source Mirror</p> <p>\u6362\u5317\u5916\u6e90</p> <p>18.04\u53ef\u4ee5\u76f4\u63a5\u5728\u8f6f\u4ef6\u4e0e\u66f4\u65b0\u4e2d\u9009\u62e9\u5317\u5916\u6e90</p> <p>\u4fee\u6539<code>/etc/apt/sources.list</code>\u6587\u4ef6 ( \u5148\u5c06\u7cfb\u7edf\u81ea\u5e26\u7684\u8be5\u6587\u4ef6\u505a\u4e2a\u5907\u4efd<code>source.list.save</code>\uff0c\u5c06\u8be5\u6587\u4ef6\u66ff\u6362\u4e3a\u4e0b\u9762\u5185\u5bb9\uff0c\u5373\u53ef\u4f7f\u7528\u9009\u62e9\u7684\u8f6f\u4ef6\u6e90\u955c\u50cf\u3002)\uff1a</p> <ul> <li> <p>18.04</p> <pre><code># \u9ed8\u8ba4\u6ce8\u91ca\u4e86\u6e90\u7801\u955c\u50cf\u4ee5\u63d0\u9ad8 apt update \u901f\u5ea6\uff0c\u5982\u6709\u9700\u8981\u53ef\u81ea\u884c\u53d6\u6d88\u6ce8\u91ca\ndeb https://mirrors.bfsu.edu.cn/ubuntu/ bionic main restricted universe multiverse\n# deb-src https://mirrors.bfsu.edu.cn/ubuntu/ bionic main restricted universe multiverse\ndeb https://mirrors.bfsu.edu.cn/ubuntu/ bionic-updates main restricted universe multiverse\n# deb-src https://mirrors.bfsu.edu.cn/ubuntu/ bionic-updates main restricted universe multiverse\ndeb https://mirrors.bfsu.edu.cn/ubuntu/ bionic-backports main restricted universe multiverse\n# deb-src https://mirrors.bfsu.edu.cn/ubuntu/ bionic-backports main restricted universe multiverse\n\n# deb https://mirrors.bfsu.edu.cn/ubuntu/ bionic-security main restricted universe multiverse\n# # deb-src https://mirrors.bfsu.edu.cn/ubuntu/ bionic-security main restricted universe multiverse\n\ndeb http://security.ubuntu.com/ubuntu/ bionic-security main restricted universe multiverse\n# deb-src http://security.ubuntu.com/ubuntu/ bionic-security main restricted universe multiverse\n\n# \u9884\u53d1\u5e03\u8f6f\u4ef6\u6e90\uff0c\u4e0d\u5efa\u8bae\u542f\u7528\n# deb https://mirrors.bfsu.edu.cn/ubuntu/ bionic-proposed main restricted universe multiverse\n# # deb-src https://mirrors.bfsu.edu.cn/ubuntu/ bionic-proposed main restricted universe multiverse\n</code></pre> </li> <li> <p>20.04</p> <pre><code># \u9ed8\u8ba4\u6ce8\u91ca\u4e86\u6e90\u7801\u955c\u50cf\u4ee5\u63d0\u9ad8 apt update \u901f\u5ea6\uff0c\u5982\u6709\u9700\u8981\u53ef\u81ea\u884c\u53d6\u6d88\u6ce8\u91ca\ndeb https://mirrors.bfsu.edu.cn/ubuntu/ focal main restricted universe multiverse\n# deb-src https://mirrors.bfsu.edu.cn/ubuntu/ focal main restricted universe multiverse\ndeb https://mirrors.bfsu.edu.cn/ubuntu/ focal-updates main restricted universe multiverse\n# deb-src https://mirrors.bfsu.edu.cn/ubuntu/ focal-updates main restricted universe multiverse\ndeb https://mirrors.bfsu.edu.cn/ubuntu/ focal-backports main restricted universe multiverse\n# deb-src https://mirrors.bfsu.edu.cn/ubuntu/ focal-backports main restricted universe multiverse\n\n# deb https://mirrors.bfsu.edu.cn/ubuntu/ focal-security main restricted universe multiverse\n# # deb-src https://mirrors.bfsu.edu.cn/ubuntu/ focal-security main restricted universe multiverse\n\ndeb http://security.ubuntu.com/ubuntu/ focal-security main restricted universe multiverse\n# deb-src http://security.ubuntu.com/ubuntu/ focal-security main restricted universe multiverse\n\n# \u9884\u53d1\u5e03\u8f6f\u4ef6\u6e90\uff0c\u4e0d\u5efa\u8bae\u542f\u7528\n# deb https://mirrors.bfsu.edu.cn/ubuntu/ focal-proposed main restricted universe multiverse\n# # deb-src https://mirrors.bfsu.edu.cn/ubuntu/ focal-proposed main restricted universe multiverse\n</code></pre> </li> </ul>"},{"location":"%E7%B3%BB%E7%BB%9F%26%E7%8E%AF%E5%A2%83/ubuntu/#4","title":"4","text":"<p>\u8bed\u8a00\u6539\u4e3a\u4e2d\u6587\uff1a</p> <p></p> <ol> <li>\u8bbe\u7f6e\uff0c\u533a\u57df\u548c\u8bed\u8a00\uff0c<code>\u7ba1\u7406\u5df2\u5b89\u88c5\u7684\u8bed\u8a00</code>\uff0c</li> <li><code>\u6dfb\u52a0\u6216\u5220\u9664\u8bed\u8a00...</code>\uff0c</li> <li><code>\u4e2d\u6587\u7b80\u4f53</code>\uff08\u52fe\u9009\uff09\uff0c<code>\u5e94\u7528</code></li> </ol> <p>\u5c06\u8f93\u5165\u6cd5\u6362\u6210\u62fc\u97f3\uff08\u6216\u4e94\u7b14\uff09\u8f93\u5165\uff1a</p> <p></p> <p></p> <ol> <li>\u8bbe\u7f6e\uff0c\u533a\u57df\u548c\u8bed\u8a00\uff0c<code>+</code>(\u8f93\u5165\u6e90\u5904)\uff0c</li> <li><code>\u6c49\u8bed</code></li> <li>\u9009\u4e2d<code>\u6c49\u8bed (Intelligent Pinyin)</code>(\u6216\u5176\u4ed6)\uff0c<code>\u6dfb\u52a0</code></li> </ol> <p>\uff08\u5c06\u5176\u4f59\u8f93\u5165\u6e90\u53ef\u5220\u9664\uff09</p>"},{"location":"%E7%B3%BB%E7%BB%9F%26%E7%8E%AF%E5%A2%83/ubuntu/#5","title":"5","text":"<p>\u5b89\u88c5cmake</p> <p>(8\u6761\u6d88\u606f) ubuntu\u5b89\u88c5cmake\u7684\u4e09\u79cd\u65b9\u6cd5\uff08\u8d85\u65b9\u4fbf\uff01\uff09_Man_1man\u7684\u535a\u5ba2-CSDN\u535a\u5ba2</p> <p>\u4f7f\u7528\u7b2c\u4e8c\u79cd\u65b9\u6cd5\uff0c\u5e76\u4e14\u5728Download | CMake\u91cc\u9009\u62e9<code>Source distributions:</code>\u4e0b\u7684\u538b\u7f29\u5305\u4e0b\u8f7d</p>"},{"location":"%E7%B3%BB%E7%BB%9F%26%E7%8E%AF%E5%A2%83/ubuntu/#6","title":"6","text":"<p>\u5b89\u88c5clion\u3001pycharm\u7b49\uff1a</p> <p>\u5b89\u88c5\u5230\u4e3b\u76ee\u5f55\u4e2d\uff08\u5efa\u8bae\uff09</p> <ol> <li> <p>\u79fb\u52a8\u538b\u7f29\u5305\u5230\u4e3b\u76ee\u5f55\uff0c\u5e76\u76f4\u63a5\u89e3\u538b</p> <pre><code>tar -zxvf xxx.tar.gz\n</code></pre> </li> <li> <p>\u8fdb\u5165 <code>xxx/bin</code> \u6587\u4ef6\u5939\uff0c\u8fd0\u884c <code>xxx.sh</code>\u6587\u4ef6</p> <pre><code>sh xxx.sh \n</code></pre> </li> <li> <p></p> <p>\u5de6\u4e0b\u89d2\u8bbe\u7f6e\u56fe\u6807\uff0c<code>Create Desktop Entry...</code>\uff0c</p> <p>\u5728\u5168\u90e8\u5e94\u7528\u7a0b\u5e8f\u4e2d\u4f1a\u51fa\u73b0ide\u7684\u56fe\u6807/\u5feb\u6377\u65b9\u5f0f</p> </li> <li> <p>\uff08\u53ef\u9009\uff09\u5173\u95ed\u539f\u672c\u6253\u5361\u7684ide\uff0c\u4ece\u5168\u90e8\u5e94\u7528\u7a0b\u5e8f\u4e2d\u91cd\u65b0\u6253\u5361\uff0c\u5728\u4efb\u52a1\u680f\u4e2d\u53f3\u952e\uff0c\u6dfb\u52a0\u5230\u6536\u85cf\u5939</p> </li> </ol>"},{"location":"%E7%B3%BB%E7%BB%9F%26%E7%8E%AF%E5%A2%83/ubuntu/#7","title":"7","text":"<p>\u78c1\u76d8\u6269\u5bb9\uff1a</p> <p>Ubuntu\u7a7a\u95f4\u4e0d\u8db3\uff0c\u5982\u4f55\u6269\u5bb9 - \u77e5\u4e4e (zhihu.com)</p>"},{"location":"%E7%B3%BB%E7%BB%9F%26%E7%8E%AF%E5%A2%83/ubuntu/#8","title":"8","text":"<p>\u5b89\u88c5\u5e76\u4f7f\u7528 <code>clash for windows</code> linux \u7aef</p> <p>Linux/ubuntu\u4e0b\u5b9e\u73b0\u79d1\u5b66\u4e0a\u7f51\u4f7f\u7528 clash for windows \u8be6\u7ec6\u6b65\u9aa4|\u7ffb\u5899|vpn|v2ray (cfmem.com)</p> <p>(Linux\u7aef\u6ca1\u6709 <code>System proxy</code>\u9009\u9879)</p> <p>\u8bbe\u7f6e\uff0c<code>\u7f51\u7edc</code>\uff0c<code>\u7f51\u7edc\u4ee3\u7406</code>\uff0c<code>\u624b\u52a8</code>\uff0c\u586b\u5199<code>HTTP\u4ee3\u7406</code>\u548c<code>HTTPS\u4ee3\u7406</code>(\u5de6<code>127.0.0.1</code>\uff0c\u53f3<code>7890</code>)</p> <p></p> <p>\u53ef\u8bbe\u7f6e\u5f00\u673a\u542f\u52a8 <code>start with linux</code> \u548c\u9759\u9ed8\u5f00\u542f(\u4e0d\u5e94\u7528\u754c\u9762\uff0c\u53ea\u540e\u53f0\u8fd0\u884c) <code>silent start</code></p>"},{"location":"%E7%B3%BB%E7%BB%9F%26%E7%8E%AF%E5%A2%83/ubuntu/#9","title":"9","text":"<p>\u5148\u8fdb\u89c6\u89c9</p> <p>Ubuntu \u4e0b\uff0c\u5982\u679c\u8981\u5728 <code>.sh</code> \u811a\u672c\u4e2d\u4f7f\u7528 <code>sudo</code> \u547d\u4ee4\uff0c\u53ef\u4ee5\u4f7f\u7528 <code>echo</code> \u6765\u81ea\u52a8\u8f93\u5165\u5bc6\u7801\uff0c\u5982</p> <pre><code>echo \"1111\" | sudo -S bash ./scripts/install_udev_rules.sh\necho \"1111\" | sudo -S udevadm control --reload-rules &amp;&amp; echo \"1111\" | sudo -S udevadm trigger\n</code></pre>"},{"location":"%E7%B3%BB%E7%BB%9F%26%E7%8E%AF%E5%A2%83/ubuntu/#10","title":"10","text":"<p>ubuntu \u5b89\u88c5\u65b0\u7248\u672c\u7684 python</p> <p>\u7531\u4e8e yolov8 \u597d\u50cf\u8981\u6c42 3.8 \u4ee5\u4e0a\u7684 python \uff0c\u800c ubuntu18.04 \u81ea\u5e26\u7684 python3 \u662f 3.6.9 \u7684\uff0c\u8fd0\u884c\u547d\u4ee4</p> <pre><code>sudo apt install python3\n</code></pre> <p>\u8fd8\u663e\u793a</p> <pre><code>python3 \u5df2\u7ecf\u662f\u6700\u65b0\u7248 (3.6.7-1~18.04)\u3002\n</code></pre> <p>Ubuntu 18.04 Python 3.9 \u6e90\u7801\u7f16\u8bd1\u5b89\u88c5_ubuntu18.04\u6e90\u7801\u5b89\u88c5python-CSDN\u535a\u5ba2</p> <p>\u6309\u7167\u8fd9\u7bc7\u6587\u7ae0\uff0c\u5148\u4e0b\u8f7d <code>.tgz</code> \u6587\u4ef6</p> <p>\u53ef\u4ee5\u5728 \u534e\u4e3a\u6e90 \u4e2d\u4e0b\u8f7d</p> <p>Index of python-local (huaweicloud.com)</p> <p>\u7136\u540e</p> <pre><code>tar -tvf Python-3.10.13.tgz\ntar -zxvf Python-3.10.13.tgz\ncd Python-3.10.13\n./configure\nsudo make install\n</code></pre> <p><code>make</code> \u597d\u4e4b\u540e\uff0c\u867d\u7136\u4f1a\u663e\u793a</p> <pre><code>WARNING: Running pip as the 'root' user can result in broken permissions and conflicting behaviour with the system package manager. It is recommended to use a virtual environment instead: https://pip.pypa.io/warnings/venv\n</code></pre> <p>\u4f46\u5176\u5b9e\u5df2\u7ecf\u5b89\u88c5\u597d\u4e86\uff0c</p> <p>\u6b64\u65f6\u8fd0\u884c <code>python3</code> \u4ecd\u4f1a\u8fd0\u884c\u81ea\u5e26\u7684 python3.6.9\uff0c</p> <p>\u8fd0\u884c\u65b0\u5b89\u88c5\u7684 python3.10.13 \u9700\u8981\u8fd0\u884c</p> <pre><code>python3.10\n</code></pre> <p>\u7684\u547d\u4ee4\uff0c</p> <p>pip \u4e5f\u662f\u7c7b\u4f3c</p> <pre><code>pip3.10\n</code></pre> <p>\u5b89\u88c5\u5b8c\u4e4b\u540e\u8fd8\u8bb0\u5f97\u9700\u8981\u6362\u6e90</p>"},{"location":"%E7%B3%BB%E7%BB%9F%26%E7%8E%AF%E5%A2%83/ubuntu/#11","title":"11","text":"<pre><code>ImportError: No module named '_ctypes'\n</code></pre> <p>\u65b0\u88c5\u7684 python3.10 \u5728\u88c5\u597d\u73af\u5883\u4e4b\u540e\u5c1d\u8bd5\u8fd0\u884c yolov8 \uff0c\u7136\u540e\u663e\u793a\u4e86\u4e0a\u9762\u7684\u62a5\u9519\u4fe1\u606f\uff0c\u5728\u7f51\u4e0a\u67e5\u4e86\u4e00\u4e0b\uff0c\u8fd9\u597d\u50cf\u662f python \u5185\u7f6e\u7684\u6a21\u5757\uff0c\u6240\u4ee5\u6211\u8ba4\u4e3a\u662f python \u5728\u5b89\u88c5\u65f6\u6ca1\u5b89\u88c5\u597d\uff0c</p> <p>\u7136\u540e\u53c2\u8003\u8fd9\u7bc7\u8ba8\u8bba</p> <p>python - Python3: ImportError: No module named '_ctypes' when using Value from module multiprocessing - Stack Overflow</p> <p>\u7684\u8fd9\u4e2a\u56de\u7b54\uff0c\u5b89\u88c5\u4e00\u4e0b <code>libffi-dev</code> \u5c31\u53ef\u4ee5</p> <pre><code>sudo apt install libffi-dev\n</code></pre> <p>\u4f46\u662f\u6211\u5b89\u88c5\u597d\u4e4b\u540e\u8fd0\u884c\u8fd8\u662f\u6709\u8fd9\u4e2a\u62a5\u9519\uff0c\u7136\u540e\u6211\u91cd\u65b0\u8fd0\u884c\u547d\u4ee4</p> <pre><code>./configure\nsudo make install\n</code></pre> <p>\u91cd\u65b0\u5b89\u88c5\u4e86\u4e00\u4e0b python3.10 \uff0c\u518d\u6b21\u53bb\u8fd0\u884c yolov8 \uff0c\u8fd9\u4e2a\u62a5\u9519\u4fe1\u606f\u6d88\u5931\u4e86</p>"},{"location":"%E7%B3%BB%E7%BB%9F%26%E7%8E%AF%E5%A2%83/vim/","title":"Vim","text":"<p> \u7ea6 955 \u4e2a\u5b57  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 3 \u5206\u949f</p>"},{"location":"%E7%B3%BB%E7%BB%9F%26%E7%8E%AF%E5%A2%83/vim/#1","title":"1","text":"<p>\u6700\u5f3aVim\u65b0\u624b\u6307\u5357\uff0c\u624b\u628a\u624b\u6559\u4f60\u6253\u9020\u53ea\u5c5e\u4e8e\u81ea\u5df1\u7684\u4ee3\u7801\u7f16\u8f91\u5668\uff01_\u54d4\u54e9\u54d4\u54e9_bilibili</p> <p>\u4e09\u4e2a\u4e3b\u8981(\u5e38\u7528)\u6a21\u5f0f\uff1a</p> <ul> <li>\u666e\u901a\u6a21\u5f0f(\u9ed8\u8ba4\u6a21\u5f0f)</li> <li>\u8f93\u5165\u6a21\u5f0f</li> <li>\u547d\u4ee4\u884c\u6a21\u5f0f</li> </ul> <p>\u666e\u901a\u6a21\u5f0f\u8fdb\u5165\u8f93\u5165\u6a21\u5f0f\uff0c\u6309 <code>i</code> \u952e\uff0c\u4ece\u8f93\u5165\u6a21\u5f0f\u9000\u51fa\uff0c\u6309 <code>Esc</code> \u952e</p> <p>\u5176\u4ed6\u8fdb\u5165\u8f93\u5165\u6a21\u5f0f\u7684\u65b9\u5f0f</p> <p>(9\u6761\u6d88\u606f) vim \u6587\u672c\u7f16\u8f91\u5668\u7684\u8f93\u5165\u6a21\u5f0f i\u3001a\u3001o\u3001 s\u3001 I\u3001 A\u3001 O\u3001 S \u533a\u522b_vim s\u662f\u4ec0\u4e48_\u4e91\u5c71\u5c0f\u5c0f\u5b50\u7684\u535a\u5ba2-CSDN\u535a\u5ba2</p> <p>\u666e\u901a\u6a21\u5f0f\u8fdb\u5165\u547d\u4ee4\u884c\u6a21\u5f0f\uff0c\u6309 <code>:</code> \u952e\uff0c\u9000\u51fa\u547d\u4ee4\u884c\u6a21\u5f0f\uff0c\u6309 <code>Esc</code> \u952e</p> <p>\u547d\u4ee4\u884c\u6a21\u5f0f\u5e38\u7528\u547d\u4ee4\uff1a</p> <ul> <li>\u6b63\u5e38\u9000\u51fa\uff1a</li> </ul> <ul> <li><code>:q</code></li> </ul> <p>\u6216</p> <ul> <li><code>:quit</code></li> </ul> <p>( <code>q</code> \u4e3a <code>quit</code> \u7684\u7f29\u5199)</p> <ul> <li>\u4fdd\u5b58\uff1a</li> </ul> <ul> <li><code>:w</code></li> </ul> <p>\u4fdd\u5b58\u5e76\u9000\u51fa\uff1a</p> <ul> <li><code>:wq</code></li> </ul> <ul> <li>\u67e5\u770b\u5e2e\u52a9\uff1a</li> </ul> <ul> <li><code>:h</code></li> </ul> <p>\u6216</p> <ul> <li><code>:help</code></li> </ul> <p>\u4f8b\u5982\uff0c\u67e5\u770b\u9000\u51fa\u7684\u9009\u9879\uff1a</p> <p><code>:h :q</code></p> <p>\u666e\u901a\u6a21\u5f0f\u5e38\u7528\u64cd\u4f5c\uff1a</p> <ul> <li>\u79fb\u52a8</li> </ul> <ul> <li>\u8f93\u5165 \u6570\u5b57\u952e + H J K L\uff0c\u5411\u5bf9\u5e94\u65b9\u5411\u79fb\u52a8x\u683c/\u884c\uff0c\u5982 4+J \u5411\u4e0b\u79fb\u52a84\u884c</li> <li>W (\u5bf9\u5e94word) \u79fb\u52a8\u5230\u4e0b\u4e00\u4e2a\u5355\u8bcd\u7684\u9996\u5b57\u6bcd\uff0cB (beginning) \u79fb\u52a8\u5230\u672c\u5355\u8bcd(\u6216\u4e0a\u4e00\u4e2a\u5355\u8bcd)\u7684\u9996\u5b57\u6bcd</li> <li>F (find)  + \u4e00\u4e2a\u5b57\u6bcd\uff0c\u8df3\u8f6c\u5230\u4e0b\u4e00\u4e2a\u6700\u8fd1\u7684\u5bf9\u5e94\u5b57\u6bcd\uff0c\u5982 F+T \u8df3\u8f6c\u5230\u4e0b\u4e00\u4e2a\u6700\u8fd1\u7684 <code>t</code> </li> <li>Ctrl+U (PgUp) Ctrl+D (PgDn)\uff0c\u5411\u4e0a\u5411\u4e0b\u7ffb\u9875</li> <li>G+G \u79fb\u52a8\u5230\u6587\u672c\u5f00\u5934\uff0cShift+G \u79fb\u52a8\u5230\u6587\u672c\u672b\u5c3e</li> </ul> <ul> <li>\u7f16\u8f91</li> </ul> <ul> <li>\u6309 Y \u952e\u590d\u5236(yank\uff0c\u62c9)\uff0c\u53ef\u548c\u5176\u4ed6\u7ec4\u5408\uff0c\u5982\uff1a<ul> <li>Y+A+W (yank + all + word)\u590d\u5236\u5149\u6807\u6240\u5728\u7684\u6574\u4e2a\u5355\u8bcd</li> <li>Y+W \u6216 Y+B (\u542b\u5f53\u524d\u5149\u6807\u5b57\u6bcd)\u590d\u5236\u5230\u5f53\u524d\u5355\u8bcd\u7684\u5c3e/\u9996\u5b57\u6bcd</li> <li>Y+5+H \u6216 Y+5+L (\u542b\u5f53\u524d\u5149\u6807\u5b57\u6bcd)\u5411\u5de6/\u53f3\u590d\u52365\u683c\u7684\u6587\u672c\uff0c\u5982\u679c\u4e0d\u8f93\u6570\u5b57\u952e\u5219\u53ea\u590d\u5236\u5f53\u524d\u683c\u7684\u5b57\u6bcd</li> <li>Y+3+J \u6216 Y+3+K (\u542b\u5f53\u524d\u884c)\u5411\u4e0b/\u4e0a\u590d\u52363\u884c\u7684\u6587\u672c\uff0c\u5982\u679c\u4e0d\u8f93\u6570\u5b57\u952e\u5219\u53ea\u590d\u5236\u5f53\u524d\u884c</li> <li>Y+F+H \u590d\u5236\u5230\u4e0b\u4e00\u4e2a\u6700\u8fd1\u7684 <code>h</code> \u4e4b\u95f4\u7684\u6587\u672c</li> </ul> </li> <li>\u6309 P \u952e(paste)\u5728\u5149\u6807\u53f3\u4fa7\u7c98\u8d34</li> <li>U \u952e(undo)\u64a4\u9500</li> <li>C \u952e(change)\u4fee\u6539\uff0c\u9009\u4e2d\u90e8\u5206\u5185\u5bb9\u5220\u9664(\u526a\u5207)\u5e76\u8fdb\u5165\u8f93\u5165\u6a21\u5f0f\uff0c\u9009\u4e2d\u65b9\u6cd5\u4e0e \u590d\u5236 \u64cd\u4f5c\u7c7b\u4f3c\uff1a<ul> <li>C+A+W (change all word) \u5220\u9664\u5f53\u524d\u5355\u8bcd\u5e76\u8fdb\u5165\u8f93\u5165\u6a21\u5f0f\uff0c......</li> </ul> </li> </ul>"},{"location":"%E7%B3%BB%E7%BB%9F%26%E7%8E%AF%E5%A2%83/vim/#2","title":"2","text":"<p>\u53ef\u53c2\u8003\u7684\u4f7f\u7528\u624b\u518c</p> <p>oeasy-vim-tutorial/markdown/01-49420-\u5b58\u6d3b\u4e0b\u6765.sy.md at main \u00b7 overmind1980/oeasy-vim-tutorial (github.com)</p>"},{"location":"%E7%B3%BB%E7%BB%9F%26%E7%8E%AF%E5%A2%83/vim/#3","title":"3","text":"<p>Ctrl+C \u4e5f\u53ef\u4ee5\u4ece\u63d2\u5165\u6a21\u5f0f\u9000\u51fa\u5230\u666e\u901a\u6a21\u5f0f</p> <p>\u53e6\u5b58\u4e3a\u547d\u4ee4\u4e3a <code>:sav[eas] {\u6587\u4ef6\u540d}</code> </p> <p><code>:w</code> \u547d\u4ee4\u7684\u4f7f\u7528\u6280\u5de7\uff1a</p> <ul> <li>\u6253\u5f00\u5df2\u6709\u6587\u4ef6\u8fdb\u884c\u7f16\u8f91\uff0c\u76f4\u63a5\u8f93\u5165 <code>:w</code> \u547d\u4ee4\u7b49\u4e8e\u4fdd\u5b58</li> <li>\u5982\u679c\u5728\u547d\u4ee4\u884c\u4e2d\u76f4\u63a5\u8f93\u5165 <code>vim</code> \u8fdb\u884c\u7f16\u8f91(\u6253\u5f00\u4e00\u4e2a\u4e34\u65f6\u6587\u4ef6\u8fdb\u884c\u7f16\u8f91)\uff0c <code>:w</code> \u53ef\u4ee5\u6709\u4e24\u4e2a\u7528\u5904\uff1a<ol> <li><code>:w {\u6587\u4ef6\u540d}</code> \u5c06\u8f93\u5165\u5185\u5bb9\u5b58\u50a8\u4e3a\u67d0\u4e2a\u65b0\u6587\u4ef6(\u5982\u679c\u4e3a\u5df2\u6709\u6587\u4ef6\u4f1a\u63d0\u793a\u5df2\u5b58\u5728\uff0c\u5982\u679c\u8981\u5f3a\u884c\u8986\u76d6\u53ef\u4ee5\u52a0\u4e0a <code>!</code> )</li> <li><code>:w &gt;&gt; {\u6587\u4ef6\u540d}</code> \u5c06\u8f93\u5165\u5185\u5bb9\u8ffd\u52a0\u5230\u5df2\u5b58\u5728\u6587\u4ef6\u7684\u672b\u5c3e( <code>&gt;&gt;</code> \u8868\u793a\u8ffd\u52a0)</li> </ol> </li> </ul> <p>Shift+I \u548c Shift+A \u5206\u522b\u4e3a\u5728\u884c\u9996/\u672b\u63d2\u5165\uff0cO \u548c Shift+O \u5206\u522b\u4e3a\u5728\u5f53\u524d\u884c\u4e4b\u4e0b/\u4e0a\u63d2\u5165\u65b0\u884c\u5e76\u8f93\u5165</p> <p>. \u4e3a\u91cd\u590d\u6700\u65b0\u7684\u64cd\u4f5c\uff0cU \u548c Ctrl+R \u5206\u522b\u548c\u64a4\u9500/\u6062\u590d\u64a4\u9500</p> <p>\u63d2\u5165\u6a21\u5f0f\u4e0b\u6309 Ctrl+O \u952e\u53ef\u4ee5\u8fdb\u5165 \u63d2\u5165\u666e\u901a\u6a21\u5f0f \uff0c\u8fdb\u884c\u4e00\u6b21\u666e\u901a\u7684\u547d\u4ee4\u7136\u540e\u56de\u5230\u63d2\u5165\u6a21\u5f0f</p> <p>Shift+4 \u548c Shift+6 \u5206\u522b\u4e3a\u8df3\u5230\u884c\u672b/\u9996</p> <p>E \u952e\u662f\u5230\u5355\u8bcd\u5c3e\u5b57\u6bcd\uff0cShift \u952e \u52a0 W E B \u53ef\u4ee5\u8df3\u5927\u8bcd(\u53ea\u6309\u7a7a\u683c\u6362\u884c\u7b97\u8bcd)</p> <p>F \u548c Shift+F \u5206\u522b\u4e3a\u5411\u540e/\u524d\u67e5\u627e\u5b57\u6bcd\uff0c\u67e5\u627e\u540e\u6309 , \u53ef\u4ee5\u53cd\u65b9\u5411\u67e5\u627e/\u79fb\u52a8</p> <p>\u9ed8\u8ba4\u914d\u7f6e\u4e0b vim \u4e2d ; \u952e\u662f\u76f4\u63a5\u6620\u5c04 : \u952e\u7684(\u5373\u5982\u679c\u8981\u8fdb\u5165\u547d\u4ee4\u884c\u53ef\u4ee5\u76f4\u63a5\u6309 ; \u800c\u4e0d\u9700\u8981\u6309 Shift )</p> <p>Shift+= \u548c - \u5206\u522b\u4e3a\u8df3\u5230\u4e0b/\u4e0a\u4e00\u884c\u9996</p> <p>\u4e24\u4e2a\u4f7f\u7528\u6280\u5de7\uff1a</p> <ol> <li>G+G+=+Shift+G \u53ef\u4ee5\u5168\u6587\u81ea\u52a8(\u8c03\u6574)\u7f29\u8fdb</li> <li>\u6570\u5b57 \u52a0 Shift+G \u53ef\u4ee5\u8df3\u8f6c\u5230\u6307\u5b9a\u884c\u53f7(\u5bf9\u4e8e\u62a5\u9519\u975e\u5e38\u6709\u7528)</li> </ol>"}]}