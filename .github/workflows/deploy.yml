name: Deploy MkDocs Site
on:
  push:
    branches: [ "main" ]  # 仅在 main 分支推送时触发

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest  # 使用 GitHub 提供的 Ubuntu 环境

    steps:
      # 步骤 1：拉取代码到虚拟环境
      - name: Checkout Repository
        uses: actions/checkout@v4

      # 步骤 2：安装 Python 和 MkDocs
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      # 步骤 3：安装 MkDocs 及主题插件
      - name: Install Dependencies
        run: |
          pip install mkdocs==1.5.3
          pip install mkdocs-material==9.4.6
          pip install mkdocs-redirects  # 可选：安装其他插件
          pip install mkdocs-get-deps==0.2.0
          pip install mkdocs-glightbox==0.3.7
          pip install mkdocs-git-revision-date-localized-plugin==1.2.5
          pip install mkdocs-static-i18n==1.2.3
          pip install mkdocs-statistics-plugin==0.1.2

      # 步骤 4：构建静态网站
      - name: Build Site
        run: mkdocs build --strict

      # # 步骤 5：通过 SCP 上传到服务器
      # - name: Deploy to Server
      #   uses: appleboy/scp-action@v0.1.3
      #   with:
      #     host: ${{ secrets.SERVER_IP }}
      #     username: ${{ secrets.SERVER_USER }}
      #     key: ${{ secrets.SSH_KEY }}
      #     source: "site/."          # 本地构建的目录
      #     target: "/www/wwwroot/blog"   # 服务器目标路径
      #     overwrite: true            # 覆盖旧文件

      # 步骤 5：通过 rsync 上传到服务器
      - name: Deploy via Rsync
        uses: burnett01/rsync-deployments@7.0.2
        with:
          switches: -avz --delete --exclude='.user.ini'  # 同步并删除服务器上多余文件
          path: "site/"            # 注意末尾斜杠，表示传输目录内容
          remote_path: "/www/wwwroot/myblogs/pamphlet/"
          remote_host: ${{ secrets.SERVER_IP }}
          remote_user: ${{ secrets.SERVER_USER }}
          remote_key: ${{ secrets.SSH_KEY }}
